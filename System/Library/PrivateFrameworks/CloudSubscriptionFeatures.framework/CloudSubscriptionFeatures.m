uint64_t sub_1A5B4F900()
{
  sub_1A5B4F970();
  sub_1A5B4F9F8();
  sub_1A5B4F9B4();
  return sub_1A5BCA10C();
}

uint64_t sub_1A5B4F948()
{
  sub_1A5B4F970();
  return sub_1A5BCA124();
}

unint64_t sub_1A5B4F970()
{
  unint64_t result;

  result = qword_1ED10FC00;
  if (!qword_1ED10FC00)
  {
    result = MEMORY[0x1A85B2F18](&protocol conformance descriptor for LocalError, &type metadata for LocalError);
    atomic_store(result, (unint64_t *)&qword_1ED10FC00);
  }
  return result;
}

unint64_t sub_1A5B4F9B4()
{
  unint64_t result;

  result = qword_1ED10FC30;
  if (!qword_1ED10FC30)
  {
    result = MEMORY[0x1A85B2F18](MEMORY[0x1E0DEB470], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1ED10FC30);
  }
  return result;
}

unint64_t sub_1A5B4F9F8()
{
  unint64_t result;

  result = qword_1ED10FC08;
  if (!qword_1ED10FC08)
  {
    result = MEMORY[0x1A85B2F18](&protocol conformance descriptor for LocalError, &type metadata for LocalError);
    atomic_store(result, (unint64_t *)&qword_1ED10FC08);
  }
  return result;
}

unint64_t sub_1A5B4FA3C()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1A5B4FA60()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1A5B4FA68()
{
  return sub_1A5B5A98C();
}

uint64_t sub_1A5B4FA80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[52] = a2;
  v3[53] = v2;
  v3[51] = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B4FA9C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1A5B4FAC4 + 4 * byte_1A5BCC8F0[*v0]))("cache", 5);
}

const char *sub_1A5B4FAC4()
{
  return "rsvp";
}

const char *sub_1A5B4FAD8()
{
  return "rsvpDataDetectors";
}

const char *sub_1A5B4FAEC()
{
  return "rsvpSubscriber";
}

const char *sub_1A5B4FB00()
{
  return "CloudSubscriptionFeatures";
}

uint64_t type metadata accessor for CloudFeature()
{
  uint64_t result;

  result = qword_1ED111238;
  if (!qword_1ED111238)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A5B4FB50()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A5B4FB84 + 4 * byte_1A5BCC5AE[*v0]))(0x4B65727574616566, 0xEA00000000007965);
}

uint64_t sub_1A5B4FB84()
{
  return 0x6C69546568636163;
}

uint64_t sub_1A5B4FBA0()
{
  return 0x6573556E6163;
}

uint64_t sub_1A5B4FBB4()
{
  return 0x74696D696CLL;
}

uint64_t sub_1A5B4FBC8()
{
  return 0x6F54737365636361;
}

uint64_t sub_1A5B4FBE8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1A5B4FC24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1A5B4FC6C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_1A5B501D4();
    if (v1 <= 0x3F)
    {
      sub_1A5BC9974();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_1A5B4FD1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1A5BC9974();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 20));
}

uint64_t sub_1A5B4FD84(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

unint64_t sub_1A5B4FDB0()
{
  unint64_t result;

  result = qword_1ED111120;
  if (!qword_1ED111120)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED111120);
  }
  return result;
}

uint64_t sub_1A5B4FDEC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111178);
  v37 = a2;
  v6 = sub_1A5BC9F74();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v35)
        goto LABEL_34;
      v20 = *(_QWORD *)(v36 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v13 >= v35)
              goto LABEL_34;
            v20 = *(_QWORD *)(v36 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v24 = *v22;
    v23 = v22[1];
    v25 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v17);
    if ((v37 & 1) != 0)
    {
      sub_1A5B579BC(v25, (uint64_t)v38);
    }
    else
    {
      sub_1A5B569A4((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_1A5BCA16C();
    sub_1A5BC9BCC();
    result = sub_1A5BCA184();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v24;
    v15[1] = v23;
    result = sub_1A5B579BC(v38, *(_QWORD *)(v7 + 56) + 40 * v14);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v19 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

_QWORD *sub_1A5B50110(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B8);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

void sub_1A5B50174(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_1A5B501D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED111288)
  {
    sub_1A5BC9974();
    v0 = sub_1A5BC9E0C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED111288);
  }
}

uint64_t sub_1A5B50228(void *a1, char a2)
{
  id v2;
  id v4;

  if ((a2 & 1) != 0)
  {
    v4 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED110E98);
    return sub_1A5BC9CC8();
  }
  else
  {
    v2 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED110E98);
    return sub_1A5BC9CD4();
  }
}

uint64_t sub_1A5B50294(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 216) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 224) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B50308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;

  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_1A5B505F4;
  v10[23] = a4;
  v10[24] = v4;
  v10[21] = a2;
  v10[22] = a3;
  v10[20] = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B5038C()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for TaskLimiter();
  v0 = swift_allocObject();
  result = swift_defaultActor_initialize();
  *(_QWORD *)(v0 + 112) = MEMORY[0x1E0DEE9E0];
  qword_1ED110EA0 = v0;
  return result;
}

void *sub_1A5B503D4()
{
  id *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(*v0, sel_aa_primaryAppleAccount);
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, sel_aa_altDSID);

    if (v3)
    {
      v2 = (void *)sub_1A5BC9B60();

    }
    else
    {
      return 0;
    }
  }
  return v2;
}

void sub_1A5B50460()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;

  if (qword_1ED10FD18 != -1)
    swift_once();
  v1 = qword_1ED10FE88;
  v0[5] = &type metadata for GatewayRequest;
  v0[6] = &off_1E4F6D3F8;
  v0[7] = v1;
  v2 = swift_allocObject();
  v0[2] = v2;
  *(_QWORD *)(v2 + 16) = 2;
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 48) = 4;
  v4 = (char *)&dword_1EE7FA5A8 + dword_1EE7FA5A8;
  swift_retain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[8] = v3;
  *v3 = v0;
  v3[1] = sub_1A5B5D1B8;
  __asm { BR              X8; sub_1A5B6DD3C }
}

uint64_t type metadata accessor for XPCCaller()
{
  return objc_opt_self();
}

uint64_t sub_1A5B505F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  v7 = swift_task_dealloc();
  if (!v2)
  {
    v7 = a1;
    v8 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
}

uint64_t sub_1A5B50658()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 408) = v0;
  swift_task_dealloc();
  if (!v0)
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  return swift_task_switch();
}

void sub_1A5B506C4(_xpc_activity_s *a1)
{
  uint64_t v1;
  uint64_t v2;
  xpc_object_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  os_log_type_t v16;
  uint8_t *v17;
  NSObject *oslog;

  v2 = v1;
  v4 = xpc_activity_copy_criteria(a1);
  if (v4)
  {
    xpc_dictionary_get_int64(v4, (const char *)*MEMORY[0x1E0C80760]);
    if (qword_1ED111140 != -1)
      swift_once();
    v5 = sub_1A5BC9A64();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED1110D0);
    v6 = sub_1A5BC9A4C();
    v7 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v8 = 134349056;
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v6, v7, "current activity delay: %{public}lld", v8, 0xCu);
      MEMORY[0x1A85B2FC0](v8, -1, -1);
    }

    swift_unknownObjectRelease();
    v9 = sub_1A5BC9A4C();
    v10 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1A5B4D000, v9, v10, "check-in complete", v11, 2u);
      MEMORY[0x1A85B2FC0](v11, -1, -1);
    }

  }
  else
  {
    if (qword_1ED111140 != -1)
      swift_once();
    v12 = sub_1A5BC9A64();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED1110D0);
    v13 = sub_1A5BC9A4C();
    v14 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1A5B4D000, v13, v14, "scheduling activity for initial run", v15, 2u);
      MEMORY[0x1A85B2FC0](v15, -1, -1);
    }

    sub_1A5BB8FF0(a1, *(_QWORD *)(v2 + OBJC_IVAR___DaemonController_minimumActivityInterval));
    oslog = sub_1A5BC9A4C();
    v16 = sub_1A5BC9DA0();
    if (os_log_type_enabled(oslog, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1A5B4D000, oslog, v16, "check-in complete", v17, 2u);
      MEMORY[0x1A85B2FC0](v17, -1, -1);
    }

  }
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5B50A44(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[15] = a1;
  v2[16] = v1;
  v3 = sub_1A5BC9974();
  v2[17] = v3;
  v2[18] = *(_QWORD *)(v3 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = type metadata accessor for InternalError();
  v2[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v2[22] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1A5B50AEC(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_1A5B50C44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;

  v5 = (uint64_t *)(v2 + 112);
  swift_beginAccess();
  v6 = *(_QWORD *)(v2 + 112);
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_5;
  swift_bridgeObjectRetain();
  v7 = sub_1A5B5AB84(a1, a2);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_endAccess();
    type metadata accessor for TaskLimiter();
    v9 = swift_allocObject();
    swift_defaultActor_initialize();
    *(_QWORD *)(v9 + 112) = MEMORY[0x1E0DEE9E0];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v5;
    *v5 = 0x8000000000000000;
    sub_1A5BBB484(v9, a1, a2, isUniquelyReferenced_nonNull_native);
    *v5 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    return v9;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t destroy for GatewayService(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  __swift_destroy_boxed_opaque_existential_1(a1 + 80);

  if (*(_QWORD *)(a1 + 152))
    __swift_destroy_boxed_opaque_existential_1(a1 + 128);
  if (*(_QWORD *)(a1 + 192))
    __swift_destroy_boxed_opaque_existential_1(a1 + 168);
  return __swift_destroy_boxed_opaque_existential_1(a1 + 208);
}

uint64_t sub_1A5B50E44()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  sub_1A5B4FBE8(v0 + 72, &qword_1ED10FED0);
  return swift_deallocClassInstance();
}

uint64_t sub_1A5B50E80(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1A85B2F18](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

id sub_1A5B5100C(uint64_t a1, unint64_t a2)
{
  char v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _QWORD *v20;
  NSObject *v21;
  _QWORD v23[5];

  v23[3] = &type metadata for FeatureFlag;
  v23[4] = sub_1A5B5D68C();
  LOBYTE(v23[0]) = 0;
  v4 = sub_1A5BC9A10();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  if ((v4 & 1) == 0)
    return 0;
  if (geteuid() < 0x1F5)
  {
    if (qword_1ED1112D8 != -1)
      swift_once();
    v5 = sub_1A5BC9A64();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED1112C0);
    v6 = sub_1A5BC9A4C();
    v7 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1A5B4D000, v6, v7, "Skipping client cache because request is coming from a system user.", v8, 2u);
      MEMORY[0x1A85B2FC0](v8, -1, -1);
    }
    v9 = 0;
LABEL_22:

    return v9;
  }
  if (qword_1ED111118 != -1)
    swift_once();
  v10 = sub_1A5B57E54();
  v11 = objc_msgSend(v10, sel_aa_primaryAppleAccount);
  v12 = v11;
  if (v11)
  {
    v13 = objc_msgSend(v11, sel_aa_altDSID);

    if (v13)
    {
      v14 = sub_1A5BC9B60();
      v12 = v15;

    }
    else
    {

      v14 = 0;
      v12 = 0;
    }
  }
  else
  {

    v14 = 0;
  }
  v9 = FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(a1, a2, v14, (unint64_t)v12, 0, 0);
  swift_bridgeObjectRelease();
  if (v9)
  {
    if (qword_1ED1112D8 != -1)
      swift_once();
    v16 = sub_1A5BC9A64();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED1112C0);
    v17 = v9;
    v6 = sub_1A5BC9A4C();
    v18 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v6, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v19 = 138412290;
      v23[0] = v17;
      v21 = v17;
      sub_1A5BC9E18();
      *v20 = v9;

      _os_log_impl(&dword_1A5B4D000, v6, v18, "serving feature request from (client)cache: %@", v19, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v20, -1, -1);
      MEMORY[0x1A85B2FC0](v19, -1, -1);
    }
    else
    {

      v6 = v17;
    }
    goto LABEL_22;
  }
  return v9;
}

uint64_t sub_1A5B51370()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  _DWORD *v5;
  uint64_t result;
  __int128 v7;
  __int128 v8;
  _UNKNOWN **v9;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = (void *)sub_1A5BC9B3C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    *((_QWORD *)&v8 + 1) = sub_1A5B4FDB0();
    v9 = &off_1E4F6C640;
    *(_QWORD *)&v7 = v2;
  }
  else
  {
    v9 = 0;
    v7 = 0u;
    v8 = 0u;
  }
  type metadata accessor for FeatureCache();
  v3 = swift_allocObject();
  type metadata accessor for UnfairLock();
  v4 = swift_allocObject();
  v5 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = 0;
  *(_QWORD *)(v3 + 56) = v4;
  result = sub_1A5B78E14((uint64_t)&v7, v3 + 16, qword_1ED111180);
  qword_1ED1110C8 = v3;
  return result;
}

uint64_t sub_1A5B514E8(uint64_t a1, unint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  uint8_t *v9;
  uint64_t ObjectType;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = v5;
  LODWORD(v9) = a3;
  ObjectType = swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B0);
  MEMORY[0x1E0C80A78]();
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED10FB68 != -1)
    swift_once();
  v15 = sub_1A5BC9A64();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED10FBE8);
  swift_bridgeObjectRetain_n();
  v16 = sub_1A5BC9A4C();
  v17 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v16, v17))
  {
    v28 = ObjectType;
    v18 = swift_slowAlloc();
    v29 = (int)v9;
    v9 = (uint8_t *)v18;
    v19 = swift_slowAlloc();
    v30 = a5;
    v27 = a4;
    v20 = v19;
    v32 = v19;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    v31 = sub_1A5B58A30(a1, a2, &v32);
    ObjectType = v28;
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v16, v17, "Fetching feature %s", v9, 0xCu);
    swift_arrayDestroy();
    v21 = v20;
    a4 = v27;
    a5 = v30;
    MEMORY[0x1A85B2FC0](v21, -1, -1);
    v22 = v9;
    LOBYTE(v9) = v29;
    MEMORY[0x1A85B2FC0](v22, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v23 = sub_1A5BC9CF8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v14, 1, 1, v23);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_QWORD *)(v24 + 32) = a1;
  *(_QWORD *)(v24 + 40) = a2;
  *(_QWORD *)(v24 + 48) = v6;
  *(_BYTE *)(v24 + 56) = v9 & 1;
  *(_QWORD *)(v24 + 64) = a4;
  *(_QWORD *)(v24 + 72) = a5;
  *(_QWORD *)(v24 + 80) = ObjectType;
  swift_bridgeObjectRetain();
  v25 = v6;
  swift_retain();
  sub_1A5BA0C88((uint64_t)v14, (uint64_t)&unk_1EE7FA7A8, v24);
  return swift_release();
}

uint64_t sub_1A5B51788()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[29] = v0;
  v2 = sub_1A5BC96D4();
  v1[30] = v2;
  v1[31] = *(_QWORD *)(v2 - 8);
  v1[32] = swift_task_alloc();
  v1[33] = swift_task_alloc();
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v1[37] = type metadata accessor for NetworkRequest();
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  v1[43] = swift_task_alloc();
  v1[44] = swift_task_alloc();
  v1[45] = swift_task_alloc();
  v3 = sub_1A5BC9974();
  v1[46] = v3;
  v1[47] = *(_QWORD *)(v3 - 8);
  v1[48] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5B51998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  size_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1A5BC9974();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9 + a1;
  v24 = ~v9;
  v25 = a1;
  v11 = v6 + v9 + a2;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v11 & ~v9, 1, v7))
  {
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
    if (v12)
      v14 = *(_QWORD *)(v8 + 64);
    else
      v14 = v13 + 1;
    memcpy((void *)(v10 & ~v9), (const void *)(v11 & ~v9), v14);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  }
  else
  {
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
    v15(v10 & ~v9, v11 & ~v9, v7);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10 & ~v9, 0, 1, v7);
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
  }
  if (v12)
    v16 = v13;
  else
    v16 = v13 + 1;
  v17 = ((v10 | v9) + v16) & v24;
  v18 = ((v11 | v9) + v16) & v24;
  v15(v17, v18, v7);
  v19 = (_QWORD *)((v13 + 7 + v17) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)((v13 + 7 + v18) & 0xFFFFFFFFFFFFFFF8);
  *v19 = *v20;
  v19[1] = v20[1];
  v21 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_QWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v25;
}

uint64_t sub_1A5B51B1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(_QWORD, uint64_t, uint64_t);
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;

  v1 = v0[43];
  v2 = v0[36];
  v4 = v0[33];
  v3 = v0[34];
  v6 = v0[31];
  v5 = v0[32];
  v8 = v0[29];
  v7 = v0[30];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v6 + 32))(v2, v0[35], v7);
  sub_1A5B66CBC(v8, v1);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v9(v3, v2, v7);
  v9(v4, v2, v7);
  v9(v5, v2, v7);
  v10 = sub_1A5BC9A4C();
  v11 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v10, v11))
  {
    v59 = v11;
    v12 = v0[43];
    v13 = v0[44];
    v14 = v0[34];
    v15 = v0[30];
    v60 = v0[31];
    v16 = swift_slowAlloc();
    v58 = swift_slowAlloc();
    v63 = v58;
    *(_DWORD *)v16 = 136446978;
    sub_1A5B66CBC(v12, v13);
    sub_1A5BC9EC0();
    swift_bridgeObjectRelease();
    v64 = 0xD000000000000010;
    v65 = 0x80000001A5BD0580;
    swift_bridgeObjectRetain();
    sub_1A5BC9BE4();
    swift_bridgeObjectRelease();
    sub_1A5BC9BE4();
    sub_1A5B66D00(v13);
    v0[22] = sub_1A5B58A30(0xD000000000000010, 0x80000001A5BD0580, &v63);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    sub_1A5B66D00(v12);
    *(_WORD *)(v16 + 12) = 2082;
    sub_1A5B66E54();
    v17 = sub_1A5BCA094();
    v0[23] = sub_1A5B58A30(v17, v18, &v63);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    v19 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
    v19(v14, v15);
    *(_WORD *)(v16 + 22) = 2080;
    v20 = sub_1A5BC9680();
    if (v20)
    {
      v21 = sub_1A5B65678(v20);
      swift_bridgeObjectRelease();
      v0[27] = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF50);
      sub_1A5B64084();
      v22 = sub_1A5BC9B0C();
      v24 = v23;
      swift_bridgeObjectRelease();
    }
    else
    {
      v24 = 0xE500000000000000;
      v22 = 0x3E6C696E3CLL;
    }
    v30 = v0[33];
    v31 = v0[30];
    v0[24] = sub_1A5B58A30(v22, v24, &v63);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    v19(v30, v31);
    *(_WORD *)(v16 + 32) = 2080;
    v32 = sub_1A5BC96BC();
    if (v33 >> 60 == 15)
    {
      v34 = 0xE500000000000000;
      v35 = v59;
      v36 = v58;
      v37 = 0x3E6C696E3CLL;
    }
    else
    {
      v38 = v32;
      v39 = v33;
      sub_1A5B658F4(v32, v33);
      v41 = v40;
      v34 = v42;
      sub_1A5B5D9C0(v38, v39);
      v37 = v41;
      v35 = v59;
      v36 = v58;
    }
    v43 = v0[32];
    v44 = v0[30];
    v0[25] = sub_1A5B58A30(v37, v34, &v63);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    v19(v43, v44);
    _os_log_impl(&dword_1A5B4D000, v10, v35, "%{public}s Created network request: \"%{public}s\" with headers\n%s\nwith body: %s", (uint8_t *)v16, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v36, -1, -1);
    MEMORY[0x1A85B2FC0](v16, -1, -1);
  }
  else
  {
    v26 = v0[33];
    v25 = v0[34];
    v28 = v0[31];
    v27 = v0[32];
    v29 = v0[30];
    sub_1A5B66D00(v0[43]);
    v19 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v19(v25, v29);
    v19(v26, v29);
    v19(v27, v29);
  }

  v0[52] = v19;
  sub_1A5B66CBC(v0[29], v0[41]);
  v45 = sub_1A5BC9A4C();
  v46 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = v0[44];
    v48 = v0[41];
    v61 = v48;
    v49 = (uint8_t *)swift_slowAlloc();
    v50 = swift_slowAlloc();
    v63 = v50;
    *(_DWORD *)v49 = 136446210;
    sub_1A5B66CBC(v48, v47);
    v64 = 0;
    v65 = 0xE000000000000000;
    sub_1A5BC9EC0();
    swift_bridgeObjectRelease();
    v64 = 0xD000000000000010;
    v65 = 0x80000001A5BD0580;
    swift_bridgeObjectRetain();
    sub_1A5BC9BE4();
    swift_bridgeObjectRelease();
    sub_1A5BC9BE4();
    v51 = v64;
    v52 = v65;
    sub_1A5B66D00(v47);
    v0[21] = sub_1A5B58A30(v51, v52, &v63);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    sub_1A5B66D00(v61);
    _os_log_impl(&dword_1A5B4D000, v45, v46, "%{public}s Sending network request.", v49, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v50, -1, -1);
    MEMORY[0x1A85B2FC0](v49, -1, -1);
  }
  else
  {
    sub_1A5B66D00(v0[41]);
  }

  v53 = (_QWORD *)v0[29];
  v54 = v53[5];
  v55 = v53[6];
  __swift_project_boxed_opaque_existential_1(v53 + 2, v54);
  v62 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v55 + 8) + *(_QWORD *)(v55 + 8));
  v56 = (_QWORD *)swift_task_alloc();
  v0[53] = v56;
  *v56 = v0;
  v56[1] = sub_1A5B65E10;
  return v62(v0[36], v54, v55);
}

id CloudFeature.cloudFeatureObject.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  int v4;
  uint64_t *v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___CloudFeature_featureID);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR___CloudFeature_featureID + 8);
  v3 = (unsigned __int8 *)(v0 + OBJC_IVAR___CloudFeature_canUse);
  swift_beginAccess();
  v4 = *v3;
  v5 = (uint64_t *)(v0 + OBJC_IVAR___CloudFeature_limit);
  swift_beginAccess();
  v6 = *((unsigned __int8 *)v5 + 8);
  if (v4 != 1 || v6 == 0)
  {
    if (v4)
      v8 = 0;
    else
      v8 = 2;
    if ((v6 & 1) == 0)
    {
LABEL_15:
      v16 = *v5;
      v17 = *v3;
      v18 = v0 + OBJC_IVAR___CloudFeature_accessToken;
      swift_beginAccess();
      v19 = *(_QWORD *)(v18 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = (void *)sub_1A5BC9B3C();
      swift_bridgeObjectRelease();
      if (v19)
      {
        v13 = (void *)sub_1A5BC9B3C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v13 = 0;
      }
      v20 = objc_msgSend(objc_allocWithZone((Class)CloudFeatureObject), sel_initWithFeatureID_status_canUse_intValue_accessToken_, v12, v8, v17, v16, v13);
      goto LABEL_21;
    }
  }
  else
  {
    v14 = qword_1ED111150;
    swift_bridgeObjectRetain();
    if (v14 != -1)
      swift_once();
    v15 = sub_1A5B72734(v1, v2, qword_1ED111170);
    swift_bridgeObjectRelease();
    v8 = v15 & 1;
    if ((v5[1] & 1) == 0)
      goto LABEL_15;
  }
  v9 = *v3;
  v10 = v0 + OBJC_IVAR___CloudFeature_accessToken;
  swift_beginAccess();
  v11 = *(_QWORD *)(v10 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12 = (void *)sub_1A5BC9B3C();
  swift_bridgeObjectRelease();
  if (v11)
  {
    v13 = (void *)sub_1A5BC9B3C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  v20 = objc_msgSend(objc_allocWithZone((Class)CloudFeatureObject), sel_initWithFeatureID_status_canUse_accessToken_, v12, v8, v9, v13);
LABEL_21:
  v21 = v20;

  return v21;
}

id DaemonController.init(session:)(void *a1)
{
  id v1;
  char *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  id v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  objc_class *v28;
  char *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  objc_super v38;
  objc_super v39;
  __int128 v40;
  uint64_t v41;
  _UNKNOWN **v42;

  v4 = *MEMORY[0x1E0C807C8];
  *(_QWORD *)&v2[OBJC_IVAR___DaemonController_minimumActivityInterval] = *MEMORY[0x1E0C807C8];
  v5 = 90 * *MEMORY[0x1E0C807B8];
  if ((unsigned __int128)((uint64_t)*MEMORY[0x1E0C807B8] * (__int128)90) >> 64 == v5 >> 63)
  {
    *(_QWORD *)&v2[OBJC_IVAR___DaemonController_maximumActivityInterval] = v5;
    *(_QWORD *)&v2[OBJC_IVAR___DaemonController_failureActivityInterval] = v4;
    v7 = objc_allocWithZone(MEMORY[0x1E0CB3B58]);
    v8 = v2;
    v9 = (void *)sub_1A5BC9B3C();
    v10 = objc_msgSend(v7, sel_initWithMachServiceName_, v9);

    *(_QWORD *)&v8[OBJC_IVAR___DaemonController_listener] = v10;
    v11 = sub_1A5B57E54();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FE50);
    v12 = swift_allocObject();
    swift_defaultActor_initialize();
    *(_QWORD *)(v12 + 112) = v11;
    *(_QWORD *)&v8[OBJC_IVAR___DaemonController_accountStore] = v12;
    v13 = objc_msgSend((id)objc_opt_self(), sel_sharedServerWithNoUrlCache);
    v41 = sub_1A5B55C6C(0, (unint64_t *)&qword_1ED10FF90);
    v42 = &off_1E4F6DDF0;
    *(_QWORD *)&v40 = v13;
    v14 = sub_1A5B57F84();
    type metadata accessor for Config();
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 72) = 0u;
    *(_OWORD *)(v15 + 88) = 0u;
    *(_QWORD *)(v15 + 104) = 0;
    sub_1A5B579BC(&v40, v15 + 32);
    *(_QWORD *)(v15 + 16) = v14;
    *(_QWORD *)(v15 + 24) = &off_1E4F6CE50;
    v16 = (uint64_t *)&v8[OBJC_IVAR___DaemonController_configStore];
    *v16 = v15;
    v16[1] = (uint64_t)&off_1E4F6DD18;
    type metadata accessor for TaskLimiters();
    v17 = swift_allocObject();
    swift_defaultActor_initialize();
    *(_QWORD *)(v17 + 112) = MEMORY[0x1E0DEE9E0];
    v18 = OBJC_IVAR___DaemonController_taskLimiters;
    *(_QWORD *)&v8[OBJC_IVAR___DaemonController_taskLimiters] = v17;
    *(_QWORD *)&v8[OBJC_IVAR___DaemonController_urlSession] = a1;
    v19 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
    v3 = a1;
    v20 = (void *)sub_1A5BC9B3C();
    v21 = objc_msgSend(v19, sel_initWithSuiteName_, v20);

    v22 = sub_1A5B5C1B8(v21);
    *(_QWORD *)&v8[OBJC_IVAR___DaemonController_geoCache] = v22;
    v23 = *(_QWORD *)&v8[v18];
    swift_retain();
    v24 = v22;
    v25 = sub_1A5B57E54();
    v41 = sub_1A5B55C6C(0, &qword_1ED10FC60);
    v42 = &off_1E4F6DE00;
    *(_QWORD *)&v40 = v25;
    v26 = objc_msgSend((id)objc_opt_self(), sel_sharedSessionWithNoUrlCache);
    v27 = objc_msgSend(v26, sel_urlSession);

    v28 = (objc_class *)type metadata accessor for FeatureRequestHandler();
    v29 = (char *)objc_allocWithZone(v28);
    *(_QWORD *)&v29[OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_taskLimiters] = v23;
    *(_QWORD *)&v29[OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_geoCache] = v24;
    sub_1A5B569A4((uint64_t)&v40, (uint64_t)&v29[OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore]);
    *(_QWORD *)&v29[OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_urlSession] = v27;
    v39.receiver = v29;
    v39.super_class = v28;
    v30 = objc_msgSendSuper2(&v39, sel_init);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    *(_QWORD *)&v8[OBJC_IVAR___DaemonController_requestHandler] = v30;

    v38.receiver = v8;
    v38.super_class = (Class)type metadata accessor for DaemonController();
    v31 = objc_msgSendSuper2(&v38, sel_init);
    v32 = qword_1ED111140;
    v1 = v31;
    if (v32 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v33 = sub_1A5BC9A64();
  __swift_project_value_buffer(v33, (uint64_t)qword_1ED1110D0);
  v34 = sub_1A5BC9A4C();
  v35 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v36 = 0;
    _os_log_impl(&dword_1A5B4D000, v34, v35, "Daemon controller has been initialized!", v36, 2u);
    MEMORY[0x1A85B2FC0](v36, -1, -1);
  }

  return v1;
}

uint64_t sub_1A5B5283C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = sub_1A5BC9974();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = v4 + a1 + v7;
  v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8 & ~v7, 1, v5);
  v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  if (!v9)
    v10(v8 & ~v7, v5);
  v11 = (v8 | v7) + *(_QWORD *)(v6 + 64);
  if (!*(_DWORD *)(v6 + 84))
    ++v11;
  v10(v11 & ~v7, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1A5B52918()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[52];
  v1 = (_QWORD *)v0[53];
  v3 = v1[3];
  v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  sub_1A5B66D3C(v2, (uint64_t)(v0 + 2));
  v0[54] = v0[2];
  __asm { BR              X11 }
}

uint64_t sub_1A5B52998()
{
  uint64_t v0;
  char v1;
  _OWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t ObjectType;
  _QWORD *v7;
  unint64_t v8;
  const char *v9;
  _QWORD *v10;
  uint64_t (*v12)(unint64_t, unint64_t, uint64_t, uint64_t);

  *(_OWORD *)(v3 + 56) = *v2;
  v4 = *(_QWORD **)(v3 + 424);
  if ((v1 & 1) != 0)
  {
    ObjectType = *(_QWORD *)(v0 + 24);
    v5 = *(_QWORD *)(v0 + 32);
    __swift_project_boxed_opaque_existential_1(v4, ObjectType);
    v12 = (uint64_t (*)(unint64_t, unint64_t, uint64_t, uint64_t))(**(int **)(v5 + 88)
                                                                                       + *(_QWORD *)(v5 + 88));
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v3 + 456) = v7;
    *v7 = v3;
    v7[1] = sub_1A5B86A8C;
    v8 = 0xD000000000000024;
    v9 = "acseGatewayV3DeviceAndAccountFeature";
  }
  else
  {
    v5 = v4[6];
    ObjectType = swift_getObjectType();
    v12 = (uint64_t (*)(unint64_t, unint64_t, uint64_t, uint64_t))(**(int **)(v5 + 24)
                                                                                       + *(_QWORD *)(v5 + 24));
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v3 + 488) = v10;
    *v10 = v3;
    v10[1] = sub_1A5B86CA8;
    v8 = 0xD00000000000001ALL;
    v9 = "acseGatewayV3DeviceFeature";
  }
  return v12(v8, (unint64_t)(v9 - 32) | 0x8000000000000000, ObjectType, v5);
}

BOOL sub_1A5B52D78()
{
  id *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*v0, sel_aa_primaryAppleAccount);
  v2 = v1;
  if (v1)

  return v2 != 0;
}

id NotificationObservation.addObserver(change:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v13[6];

  v5 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v6 = *(_QWORD *)(v2 + 16);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  v13[4] = sub_1A5BC73F0;
  v13[5] = v7;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1A5BC7410;
  v13[3] = &block_descriptor_9;
  v8 = _Block_copy(v13);
  swift_retain();
  swift_release();
  v9 = objc_msgSend(v5, sel_addObserverForName_object_queue_usingBlock_, v6, 0, 0, v8);
  _Block_release(v8);

  if ((*(_BYTE *)(v2 + 32) & 1) == 0)
  {
    v10 = sub_1A5BC9B60();
    sub_1A5B547C8(v10, v11);
    swift_bridgeObjectRelease();
    *(_BYTE *)(v2 + 32) = 1;
  }
  return v9;
}

uint64_t sub_1A5B52EF8()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char has_internal_ui;
  char v12;
  char v13;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    v2 = sub_1A5BC9B60();
    v4 = v3;

  }
  else
  {
    v2 = 0;
    v4 = 0;
  }
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3898]), sel_init);
  v6 = objc_msgSend(v5, sel_processName);

  v7 = sub_1A5BC9B60();
  v9 = v8;

  if (v4)
    sub_1A5BC9BA8();
  has_internal_ui = os_variant_has_internal_ui();
  swift_unknownObjectRelease();
  if ((has_internal_ui & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v4)
  {
    if (v2 == 0x6C7070612E6D6F63 && v4 == 0xED0000646E692E65 || (sub_1A5BCA0B8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    if (v2 == 0xD000000000000021 && v4 == 0x80000001A5BCFEC0)
    {
      swift_bridgeObjectRelease();
LABEL_20:
      swift_bridgeObjectRelease();
      return 1;
    }
    v12 = sub_1A5BCA0B8();
    swift_bridgeObjectRelease();
    if ((v12 & 1) != 0)
      goto LABEL_20;
  }
  if (v7 == 0x6C7463667363 && v9 == 0xE600000000000000)
    goto LABEL_20;
  v13 = sub_1A5BCA0B8();
  swift_bridgeObjectRelease();
  return v13 & 1;
}

void sub_1A5B53160(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, void *aBlock)
{
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;

  _Block_copy(aBlock);
  if (qword_1ED1112D8 != -1)
    swift_once();
  v10 = sub_1A5BC9A64();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED1112C0);
  v11 = sub_1A5BC9A4C();
  v12 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v15 = v14;
    *(_DWORD *)v13 = 136315138;
    sub_1A5B58A30(0xD00000000000003CLL, 0x80000001A5BD2C70, &v15);
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v11, v12, "%s [objc]", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v14, -1, -1);
    MEMORY[0x1A85B2FC0](v13, -1, -1);
  }

  _Block_copy(aBlock);
  sub_1A5B584EC(a1, a2, a3, a4, aBlock);
  _Block_release(aBlock);
  _Block_release(aBlock);
}

uint64_t sub_1A5B53344(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1A5BC9A64();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1A5BC9A58();
}

uint64_t sub_1A5B533B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  uint64_t ObjectType;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint8_t *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  id v32;
  void *v34;
  uint64_t v35;

  v7 = v6;
  v35 = a1;
  ObjectType = swift_getObjectType();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED111140 != -1)
    swift_once();
  v17 = sub_1A5BC9A64();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED1110D0);
  v18 = sub_1A5BC9A4C();
  v19 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v34 = v7;
    v21 = a2;
    v22 = a4;
    v23 = a6;
    v24 = ObjectType;
    v25 = a3;
    v26 = a5;
    v27 = v20;
    *(_WORD *)v20 = 0;
    _os_log_impl(&dword_1A5B4D000, v18, v19, "Getting feature eligibility", v20, 2u);
    v28 = v27;
    a5 = v26;
    a3 = v25;
    ObjectType = v24;
    a6 = v23;
    a4 = v22;
    a2 = v21;
    v7 = v34;
    MEMORY[0x1A85B2FC0](v28, -1, -1);
  }

  v29 = sub_1A5BC9CF8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v16, 1, 1, v29);
  v30 = (_QWORD *)swift_allocObject();
  v30[2] = 0;
  v30[3] = 0;
  v31 = v35;
  v30[4] = v7;
  v30[5] = v31;
  v30[6] = a2;
  v30[7] = a3;
  v30[8] = a4;
  v30[9] = a5;
  v30[10] = a6;
  v30[11] = ObjectType;
  v32 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A5BA0C88((uint64_t)v16, (uint64_t)&unk_1EE7FA788, (uint64_t)v30);
  return swift_release();
}

void sub_1A5B535C4(void *a1, void *a2, void (*a3)(_QWORD, _QWORD))
{
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD *v26;
  id v27;
  _QWORD *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  void *v36;
  _BYTE *v37;
  id v38;
  NSObject *log;
  _QWORD *v40;
  uint64_t v41;
  void (*v42)(_QWORD, _QWORD);
  void (*v43)(_QWORD, _QWORD);
  uint64_t v44;

  if (a2)
  {
    v5 = qword_1ED1112D8;
    v6 = a2;
    if (v5 != -1)
      swift_once();
    v7 = sub_1A5BC9A64();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED1112C0);
    v8 = v6;
    v9 = sub_1A5BC9A4C();
    v10 = sub_1A5BC9D88();
    if (os_log_type_enabled(v9, v10))
    {
      v42 = a3;
      v11 = swift_slowAlloc();
      v40 = (_QWORD *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      v44 = v41;
      *(_DWORD *)v11 = 138543618;
      log = v9;
      v12 = v8;
      sub_1A5BC9E18();
      *v40 = a2;

      *(_WORD *)(v11 + 12) = 2082;
      v13 = objc_msgSend(v12, sel_userInfo);
      sub_1A5BC9AE8();

      v14 = sub_1A5BC9AF4();
      v16 = v15;
      swift_bridgeObjectRelease();
      sub_1A5B58A30(v14, v16, &v44);
      sub_1A5BC9E18();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5B4D000, log, v10, "Received error from daemon:%{public}@, %{public}s", (uint8_t *)v11, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v40, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v41, -1, -1);
      v17 = v11;
      a3 = v42;
      MEMORY[0x1A85B2FC0](v17, -1, -1);

    }
    else
    {

    }
    v29 = v8;
    v30 = a2;
    v31 = 1;
LABEL_20:
    a3(v30, v31);

    return;
  }
  if (a1)
  {
    v19 = qword_1ED1112D8;
    v20 = a1;
    if (v19 != -1)
      swift_once();
    v21 = sub_1A5BC9A64();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED1112C0);
    v22 = v20;
    v23 = sub_1A5BC9A4C();
    v24 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v43 = a3;
      v26 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v25 = 138543362;
      v44 = (uint64_t)v22;
      v27 = v22;
      sub_1A5BC9E18();
      *v26 = a1;

      _os_log_impl(&dword_1A5B4D000, v23, v24, "Successfully retrieved feature from daemon. %{public}@", v25, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
      swift_arrayDestroy();
      v28 = v26;
      a3 = v43;
      MEMORY[0x1A85B2FC0](v28, -1, -1);
      MEMORY[0x1A85B2FC0](v25, -1, -1);

    }
    else
    {

    }
    v29 = v22;
    v30 = a1;
    v31 = 0;
    goto LABEL_20;
  }
  if (qword_1ED1112D8 != -1)
    swift_once();
  v32 = sub_1A5BC9A64();
  __swift_project_value_buffer(v32, (uint64_t)qword_1ED1112C0);
  v33 = sub_1A5BC9A4C();
  v34 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v35 = 0;
    _os_log_impl(&dword_1A5B4D000, v33, v34, "Incomplete response from daemon. It contains no feature and no error.", v35, 2u);
    MEMORY[0x1A85B2FC0](v35, -1, -1);
  }

  sub_1A5B584A8();
  v36 = (void *)swift_allocError();
  *v37 = 2;
  v38 = v36;
  a3(v36, 1);

}

id CloudFeature.init(from:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  char v34;
  char *v35;
  char v36;
  uint64_t v37;
  objc_class *v38;
  uint64_t v39;
  char *v40;
  _QWORD v41[2];
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  _QWORD *v47;
  uint64_t ObjectType;
  uint64_t v49;
  char *v50;
  char *v51;
  objc_super v52;
  char v53;
  char v54;
  char v55;

  ObjectType = swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v3);
  v42 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED110818);
  v6 = *(_QWORD *)(v5 - 8);
  v44 = v5;
  v45 = v6;
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = &v1[OBJC_IVAR___CloudFeature_limit];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  v10 = &v1[OBJC_IVAR___CloudFeature_accessToken];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v46 = (uint64_t *)v10;
  v11 = &v1[OBJC_IVAR___CloudFeature_ttl];
  v12 = sub_1A5BC9974();
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v49 = (uint64_t)v11;
  v13(v11, 1, 1, v12);
  v15 = a1[3];
  v14 = (id)a1[4];
  v47 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1A5B5D8C4();
  v51 = v1;
  v43 = v8;
  v16 = v50;
  sub_1A5BCA19C();
  if (v16)
  {
    v22 = v49;
    v23 = v51;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    swift_bridgeObjectRelease();
    sub_1A5B4FBE8(v22, &qword_1ED111280);

    swift_deallocPartialClassInstance();
  }
  else
  {
    v17 = v12;
    v19 = v42;
    v18 = v43;
    v50 = v9;
    v54 = 0;
    v20 = v44;
    v21 = sub_1A5BC9FF8();
    v25 = (uint64_t *)&v51[OBJC_IVAR___CloudFeature_featureID];
    *v25 = v21;
    v25[1] = v26;
    v54 = 1;
    sub_1A5B50E80(&qword_1ED1107F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v27 = (uint64_t)v19;
    sub_1A5BCA010();
    v41[1] = v25;
    v13(v19, 0, 1, v17);
    v28 = v49;
    swift_beginAccess();
    sub_1A5B4FC24(v27, v28);
    swift_endAccess();
    v54 = 4;
    v29 = sub_1A5BC9FC8();
    v31 = v30;
    v32 = v46;
    swift_beginAccess();
    *v32 = v29;
    v32[1] = v31;
    swift_bridgeObjectRelease();
    v53 = 3;
    v33 = sub_1A5BC9FE0();
    LOBYTE(v31) = v34;
    v35 = v50;
    swift_beginAccess();
    *(_QWORD *)v35 = v33;
    v35[8] = v31 & 1;
    v55 = 2;
    v36 = sub_1A5BCA004();
    v37 = v20;
    LOBYTE(v20) = v36;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v18, v37);
    v39 = (uint64_t)v47;
    v38 = (objc_class *)ObjectType;
    v40 = v51;
    v51[OBJC_IVAR___CloudFeature_canUse] = v20 & 1;

    v52.receiver = v40;
    v52.super_class = v38;
    v14 = objc_msgSendSuper2(&v52, sel_init);
    __swift_destroy_boxed_opaque_existential_1(v39);
  }
  return v14;
}

Swift::Void __swiftcall CloudFeature.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  _BYTE v22[24];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78]();
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_1A5BC9974();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = (void *)sub_1A5BC9B3C();
  v10 = (void *)sub_1A5BC9B3C();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v9, v10);

  swift_beginAccess();
  v11 = (void *)sub_1A5BC9CB0();
  v12 = (void *)sub_1A5BC9B3C();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v11, v12);

  v13 = v1 + OBJC_IVAR___CloudFeature_limit;
  swift_beginAccess();
  if ((*(_BYTE *)(v13 + 8) & 1) == 0)
  {
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, *(_QWORD *)v13);
    v15 = (void *)sub_1A5BC9B3C();
    -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v14, v15);

  }
  v16 = v1 + OBJC_IVAR___CloudFeature_accessToken;
  swift_beginAccess();
  if (*(_QWORD *)(v16 + 8))
  {
    swift_bridgeObjectRetain();
    v17 = (void *)sub_1A5BC9B3C();
    swift_bridgeObjectRelease();
    v18 = (void *)sub_1A5BC9B3C();
    -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v17, v18);

  }
  v19 = v1 + OBJC_IVAR___CloudFeature_ttl;
  swift_beginAccess();
  sub_1A5B56960(v19, (uint64_t)v4, &qword_1ED111280);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1A5B4FBE8((uint64_t)v4, &qword_1ED111280);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v8, v4, v5);
    v20 = (void *)sub_1A5BC98F0();
    v21 = (void *)sub_1A5BC9B3C();
    -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v20, v21);

    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1A5B542D4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1A5B54310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1A5BC9974();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);

}

uint64_t sub_1A5B543A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_1;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21[3];

  sub_1A5BC9968();
  if (qword_1ED10FBB8 != -1)
    swift_once();
  v1 = v0[29];
  v2 = v0[45];
  v3 = sub_1A5BC9A64();
  v0[49] = __swift_project_value_buffer(v3, (uint64_t)qword_1ED10FB98);
  sub_1A5B66CBC(v1, v2);
  v4 = sub_1A5BC9A4C();
  v5 = sub_1A5BC9DA0();
  v6 = os_log_type_enabled(v4, v5);
  v7 = v0[45];
  if (v6)
  {
    v8 = v0[44];
    v9 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v21[0] = v20;
    *(_DWORD *)v9 = 136446210;
    sub_1A5B66CBC(v7, v8);
    sub_1A5BC9EC0();
    swift_bridgeObjectRelease();
    v21[1] = 0xD000000000000010;
    v21[2] = 0x80000001A5BD0580;
    swift_bridgeObjectRetain();
    sub_1A5BC9BE4();
    swift_bridgeObjectRelease();
    sub_1A5BC9BE4();
    sub_1A5B66D00(v8);
    v0[28] = sub_1A5B58A30(0xD000000000000010, 0x80000001A5BD0580, v21);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    sub_1A5B66D00(v7);
    _os_log_impl(&dword_1A5B4D000, v4, v5, "%{public}s Creating network request.", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v20, -1, -1);
    MEMORY[0x1A85B2FC0](v9, -1, -1);
  }
  else
  {
    sub_1A5B66D00(v0[45]);
  }

  v10 = v0[37];
  v11 = v0[29];
  v12 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v11 + 56), *(_QWORD *)(v11 + 80));
  v13 = v11 + *(int *)(v10 + 28);
  v14 = type metadata accessor for BAARequestSigner();
  v0[5] = v14;
  v0[6] = (uint64_t)&off_1E4F6D560;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  sub_1A5B54780(v13, (uint64_t)boxed_opaque_existential_1);
  v16 = (char *)boxed_opaque_existential_1 + *(int *)(v14 + 20);
  *((_QWORD *)v16 + 3) = &type metadata for DeviceIdentityCertificateFetcher;
  *((_QWORD *)v16 + 4) = &off_1E4F6DCE8;
  v17 = *(_QWORD *)(v11 + *(int *)(v10 + 32));
  sub_1A5B66D3C((uint64_t)v12, (uint64_t)(v0 + 7));
  v18 = (_QWORD *)swift_task_alloc();
  v0[50] = (uint64_t)v18;
  *v18 = v0;
  v18[1] = sub_1A5B50658;
  return sub_1A5B67A28(v0[35], (uint64_t)(v0 + 2), v17);
}

uint64_t type metadata accessor for NetworkRequest()
{
  uint64_t result;

  result = qword_1ED10FE90;
  if (!qword_1ED10FE90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for BAARequestSigner()
{
  uint64_t result;

  result = qword_1ED10FEA0;
  if (!qword_1ED10FEA0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t destroy for GatewayRequest(uint64_t a1)
{
  return sub_1A5B5472C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t sub_1A5B5472C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 >= 2u && a5 != 3)
  {
    if (a5 != 2)
      return result;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5B54780(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1A5B547C8(uint64_t a1, unint64_t a2)
{
  const void *v2;
  const void *v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  __CFNotificationCenter *v11;
  __CFString *v12;
  uint64_t v13;

  v3 = v2;
  if (qword_1ED1110F0 != -1)
    swift_once();
  v6 = sub_1A5BC9A64();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED111100);
  swift_bridgeObjectRetain_n();
  v7 = sub_1A5BC9A4C();
  v8 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v13 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_1A5B58A30(a1, a2, &v13);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v7, v8, "registering darwin observer for name: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v10, -1, -1);
    MEMORY[0x1A85B2FC0](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v11 = CFNotificationCenterGetDarwinNotifyCenter();
  v12 = (__CFString *)sub_1A5BC9B3C();
  CFNotificationCenterAddObserver(v11, v3, (CFNotificationCallback)sub_1A5BC7018, v12, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

}

void sub_1A5B549B8(uint64_t a1, unint64_t a2, uint64_t a3, void (**a4)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  uint64_t v25;
  objc_class *v26;
  id v27;
  id v28;
  uint64_t v29;
  _QWORD *v30;
  id v31;
  void (**v32)(_QWORD, _QWORD, _QWORD);
  uint64_t v33;
  __int128 v34[2];
  uint64_t v35[3];
  ValueMetadata *v36;
  _UNKNOWN **v37;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a4;
  _Block_copy(a4);
  if (qword_1ED1112D8 != -1)
    swift_once();
  v12 = sub_1A5BC9A64();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED1112C0);
  swift_bridgeObjectRetain_n();
  v13 = sub_1A5BC9A4C();
  v14 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v13, v14))
  {
    v32 = a4;
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v33 = a1;
    v17 = v16;
    v35[0] = v16;
    *(_DWORD *)v15 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v34[0] = sub_1A5B58A30(v33, a2, v35);
    a4 = v32;
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v13, v14, "Checking feature with id: %s [objc]", v15, 0xCu);
    swift_arrayDestroy();
    v18 = v17;
    a1 = v33;
    MEMORY[0x1A85B2FC0](v18, -1, -1);
    MEMORY[0x1A85B2FC0](v15, -1, -1);

    if ((sub_1A5B52EF8() & 1) == 0)
      goto LABEL_10;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if ((sub_1A5B52EF8() & 1) == 0)
      goto LABEL_10;
  }
  v19 = sub_1A5BB39B8(a1, a2);
  if (v19)
  {
    v20 = (void *)v19;
    v21 = (void *)sub_1A5BC9824();
    ((void (**)(_QWORD, _QWORD, void *))a4)[2](a4, 0, v21);

    goto LABEL_13;
  }
  v22 = sub_1A5BB3C98(a1, a2);
  if (v22)
  {
LABEL_11:
    v23 = v22;
    v24 = CloudFeature.cloudFeatureObject.getter();
    ((void (**)(_QWORD, id, _QWORD))a4)[2](a4, v24, 0);
    swift_release();

    return;
  }
LABEL_10:
  v22 = sub_1A5B5100C(a1, a2);
  if (v22)
    goto LABEL_11;
  v36 = &type metadata for FeatureFlag;
  v37 = (_UNKNOWN **)sub_1A5B5D68C();
  LOBYTE(v35[0]) = 0;
  sub_1A5BC9A10();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = sub_1A5B5BE34;
  *(_QWORD *)(v25 + 24) = v11;
  v26 = (objc_class *)type metadata accessor for XPCCaller();
  v27 = objc_allocWithZone(v26);
  swift_retain();
  v28 = objc_msgSend(v27, sel_init);
  v36 = (ValueMetadata *)v26;
  v37 = &off_1E4F6DD70;
  v35[0] = (uint64_t)v28;
  v29 = sub_1A5BC9CF8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v10, 1, 1, v29);
  sub_1A5B569A4((uint64_t)v35, (uint64_t)v34);
  v30 = (_QWORD *)swift_allocObject();
  v30[2] = 0;
  v30[3] = 0;
  v30[4] = a3;
  v30[5] = a1;
  v30[6] = a2;
  sub_1A5B579BC(v34, (uint64_t)(v30 + 7));
  v30[12] = sub_1A5BA9BF8;
  v30[13] = v25;
  swift_bridgeObjectRetain();
  v31 = v28;
  swift_retain();
  sub_1A5BA0C88((uint64_t)v10, (uint64_t)&unk_1EE7FAC48, (uint64_t)v30);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  swift_release();

LABEL_13:
  swift_release();
}

uint64_t sub_1A5B54DD4()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  BOOL v11;
  unint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  BOOL v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  BOOL v32;
  unint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  BOOL v42;
  unint64_t v43;
  uint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51[5];

  v1 = (_OWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 256) + 112;
  swift_beginAccess();
  v3 = *(_QWORD *)v2;
  if (!*(_QWORD *)(*(_QWORD *)v2 + 16))
  {
    *(_QWORD *)(v0 + 128) = 0;
    *v1 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
LABEL_12:
    sub_1A5B4FBE8(v0 + 96, &qword_1ED111158);
    goto LABEL_14;
  }
  v5 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1A5B5AB84(v5, v4);
  if ((v7 & 1) != 0)
  {
    sub_1A5B569A4(*(_QWORD *)(v3 + 56) + 40 * v6, v0 + 96);
  }
  else
  {
    *(_QWORD *)(v0 + 128) = 0;
    *v1 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v0 + 120))
    goto LABEL_12;
  sub_1A5B579BC((__int128 *)(v0 + 96), v0 + 56);
  sub_1A5B569A4(v0 + 56, v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1108B0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FF70);
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)(v0 + 272) = *(_QWORD *)(v0 + 216);
    if (qword_1ED111140 != -1)
      swift_once();
    v8 = sub_1A5BC9A64();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED1110D0);
    swift_bridgeObjectRetain_n();
    v9 = sub_1A5BC9A4C();
    v10 = sub_1A5BC9D7C();
    v11 = os_log_type_enabled(v9, v10);
    v12 = *(_QWORD *)(v0 + 232);
    if (v11)
    {
      v13 = *(_QWORD *)(v0 + 224);
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v51[0] = v15;
      *(_DWORD *)v14 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 184) = sub_1A5B58A30(v13, v12, v51);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A5B4D000, v9, v10, "TaskLimiter: reusing existing task for identifier %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v15, -1, -1);
      MEMORY[0x1A85B2FC0](v14, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v49 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 280) = v49;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
    *v49 = v0;
    v49[1] = sub_1A5BB4EEC;
    return sub_1A5BC9D1C();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
LABEL_14:
  if (qword_1ED111140 != -1)
    swift_once();
  v16 = sub_1A5BC9A64();
  __swift_project_value_buffer(v16, (uint64_t)qword_1ED1110D0);
  swift_bridgeObjectRetain_n();
  v17 = sub_1A5BC9A4C();
  v18 = sub_1A5BC9D7C();
  v19 = os_log_type_enabled(v17, v18);
  v20 = *(_QWORD *)(v0 + 232);
  if (v19)
  {
    v21 = *(_QWORD *)(v0 + 224);
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v51[0] = v23;
    *(_DWORD *)v22 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 200) = sub_1A5B58A30(v21, v20, v51);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v17, v18, "TaskLimiter: creating new task for identifier %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v23, -1, -1);
    MEMORY[0x1A85B2FC0](v22, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v24 = *(_QWORD *)(v0 + 264);
  v26 = *(_QWORD *)(v0 + 240);
  v25 = *(_QWORD *)(v0 + 248);
  v27 = sub_1A5BC9CF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v24, 1, 1, v27);
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = 0;
  v28[3] = 0;
  v28[4] = v26;
  v28[5] = v25;
  swift_retain();
  v29 = sub_1A5BB6F50(v24, (uint64_t)&unk_1EE7FAEE8, (uint64_t)v28);
  *(_QWORD *)(v0 + 296) = v29;
  swift_bridgeObjectRetain_n();
  v30 = sub_1A5BC9A4C();
  v31 = sub_1A5BC9D7C();
  v32 = os_log_type_enabled(v30, v31);
  v33 = *(_QWORD *)(v0 + 232);
  if (v32)
  {
    v34 = *(_QWORD *)(v0 + 224);
    v35 = (uint8_t *)swift_slowAlloc();
    v50 = v29;
    v36 = swift_slowAlloc();
    v51[0] = v36;
    *(_DWORD *)v35 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 192) = sub_1A5B58A30(v34, v33, v51);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v30, v31, "TaskLimiter: storing task for identifier %s", v35, 0xCu);
    swift_arrayDestroy();
    v37 = v36;
    v29 = v50;
    MEMORY[0x1A85B2FC0](v37, -1, -1);
    MEMORY[0x1A85B2FC0](v35, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v39 = *(_QWORD *)(v0 + 224);
  v38 = *(_QWORD *)(v0 + 232);
  v51[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FF70);
  v51[4] = (uint64_t)&off_1E4F6DD88;
  v51[0] = v29;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A5B578E8((uint64_t)v51, v39, v38);
  swift_endAccess();
  swift_bridgeObjectRetain_n();
  v40 = sub_1A5BC9A4C();
  v41 = sub_1A5BC9D7C();
  v42 = os_log_type_enabled(v40, v41);
  v43 = *(_QWORD *)(v0 + 232);
  if (v42)
  {
    v44 = *(_QWORD *)(v0 + 224);
    v45 = (uint8_t *)swift_slowAlloc();
    v46 = swift_slowAlloc();
    v51[0] = v46;
    *(_DWORD *)v45 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 208) = sub_1A5B58A30(v44, v43, v51);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v40, v41, "TaskLimiter: performing task operation for identifier %s", v45, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v46, -1, -1);
    MEMORY[0x1A85B2FC0](v45, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v47 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 304) = v47;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
  *v47 = v0;
  v47[1] = sub_1A5B5D4FC;
  return sub_1A5BC9D1C();
}

void sub_1A5B55620(char a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5, void (*a6)(void *, uint64_t))
{
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  char v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  char v24;
  uint64_t v25;
  void (*v26)(void *, uint64_t);
  uint64_t v27;

  if (qword_1ED1112D8 != -1)
    swift_once();
  v11 = sub_1A5BC9A64();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED1112C0);
  v12 = a2;
  swift_bridgeObjectRetain_n();
  v13 = v12;
  v14 = sub_1A5BC9A4C();
  v15 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v14, v15))
  {
    v26 = a6;
    v23 = a2;
    v16 = a1;
    v17 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v27 = v22;
    *(_DWORD *)v17 = 136315650;
    swift_bridgeObjectRetain();
    v25 = a3;
    sub_1A5B58A30(a3, a4, &v27);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 1024;
    v24 = v16;
    a2 = v23;
    sub_1A5BC9E18();
    *(_WORD *)(v17 + 18) = 2080;
    if (v23)
    {
      v18 = objc_msgSend(v13, sel_localizedDescription);
      v19 = sub_1A5BC9B60();
      v21 = v20;

    }
    else
    {
      v21 = 0xE300000000000000;
      v19 = 7104878;
    }
    sub_1A5B58A30(v19, v21, &v27);
    sub_1A5BC9E18();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A5B4D000, v14, v15, "received feature eligibility response, feature: %s, isEligible: %{BOOL}d, error: %s", (uint8_t *)v17, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v22, -1, -1);
    MEMORY[0x1A85B2FC0](v17, -1, -1);

    a6 = v26;
    a3 = v25;
    a1 = v24;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1A5B564E8(a3, a4, a1 & 1, a2, a6);
}

void *CloudFeature.init(coder:)(void *a1)
{
  char *v1;
  char *v2;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  void *v18;
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  unsigned __int8 v31;
  void (*v33)(uint64_t, uint64_t, uint64_t, uint64_t);
  objc_class *v34;
  char *v35;
  objc_super v36;
  void *v37;
  char v38;

  v2 = v1;
  ObjectType = swift_getObjectType();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v5);
  v35 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = &v2[OBJC_IVAR___CloudFeature_limit];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v8 = (uint64_t *)&v2[OBJC_IVAR___CloudFeature_accessToken];
  *v8 = 0;
  v8[1] = 0;
  v9 = (uint64_t)&v2[OBJC_IVAR___CloudFeature_ttl];
  v10 = sub_1A5BC9974();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  sub_1A5B55C6C(0, (unint64_t *)&qword_1ED111130);
  v12 = v2;
  v13 = (void *)sub_1A5BC9DE8();
  if (v13)
  {
    v33 = v11;
    v34 = (objc_class *)ObjectType;
    v14 = sub_1A5BC9B60();
    v16 = v15;

    v17 = (uint64_t *)&v12[OBJC_IVAR___CloudFeature_featureID];
    *v17 = v14;
    v17[1] = v16;
    sub_1A5B55C6C(0, &qword_1ED111128);
    v18 = (void *)sub_1A5BC9DE8();
    v19 = 1;
    if (v18)
    {
      v37 = 0;
      v38 = 1;
      sub_1A5BC9D64();

      v18 = v37;
      v19 = v38;
    }
    swift_beginAccess();
    *(_QWORD *)v7 = v18;
    v7[8] = v19;
    v20 = sub_1A5BC9DE8();
    if (v20)
    {
      v21 = (void *)v20;
      v22 = sub_1A5BC9B60();
      v24 = v23;

    }
    else
    {
      v22 = 0;
      v24 = 0;
    }
    v25 = (uint64_t)v35;
    v26 = 1;
    swift_beginAccess();
    *v8 = v22;
    v8[1] = v24;
    swift_bridgeObjectRelease();
    sub_1A5B55C6C(0, &qword_1ED110EC0);
    v27 = sub_1A5BC9DE8();
    if (v27)
    {
      v28 = (void *)v27;
      sub_1A5BC9950();

      v26 = 0;
    }
    v33(v25, v26, 1, v10);
    swift_beginAccess();
    sub_1A5B4FC24(v25, v9);
    swift_endAccess();
    v29 = (void *)sub_1A5BC9DE8();
    if (v29)
    {
      v30 = v29;
      v31 = objc_msgSend(v29, sel_BOOLValue);

    }
    else
    {
      v31 = 0;
    }
    v12[OBJC_IVAR___CloudFeature_canUse] = v31;

    v36.receiver = v12;
    v36.super_class = v34;
    v13 = objc_msgSendSuper2(&v36, sel_init);

  }
  else
  {

    swift_bridgeObjectRelease();
    sub_1A5B4FBE8(v9, &qword_1ED111280);

    swift_deallocPartialClassInstance();
  }
  return v13;
}

uint64_t sub_1A5B55C6C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1A5B55CA4()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  unint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  unint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  BOOL v30;
  unint64_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  BOOL v39;
  unint64_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[5];

  v1 = (_OWORD *)(v0 + 96);
  v48 = *(_QWORD *)(v0 + 264) + 112;
  swift_beginAccess();
  v2 = *(_QWORD *)v48;
  if (!*(_QWORD *)(*(_QWORD *)v48 + 16))
  {
    *(_QWORD *)(v0 + 128) = 0;
    *v1 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
LABEL_12:
    sub_1A5B4FBE8(v0 + 96, &qword_1ED111158);
    goto LABEL_14;
  }
  v3 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1A5B5AB84(v3, v4);
  if ((v6 & 1) != 0)
  {
    sub_1A5B569A4(*(_QWORD *)(v2 + 56) + 40 * v5, v0 + 96);
  }
  else
  {
    *(_QWORD *)(v0 + 128) = 0;
    *v1 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v0 + 120))
    goto LABEL_12;
  sub_1A5B579BC((__int128 *)(v0 + 96), v0 + 56);
  sub_1A5B569A4(v0 + 56, v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1108B0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111160);
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)(v0 + 280) = *(_QWORD *)(v0 + 216);
    if (qword_1ED111140 != -1)
      swift_once();
    v7 = sub_1A5BC9A64();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED1110D0);
    swift_bridgeObjectRetain_n();
    v8 = sub_1A5BC9A4C();
    v9 = sub_1A5BC9D7C();
    v10 = os_log_type_enabled(v8, v9);
    v11 = *(_QWORD *)(v0 + 240);
    if (v10)
    {
      v47 = *(_QWORD *)(v0 + 232);
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v49[0] = v13;
      *(_DWORD *)v12 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 224) = sub_1A5B58A30(v47, v11, v49);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A5B4D000, v8, v9, "TaskLimiter: reusing existing task for identifier %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v13, -1, -1);
      MEMORY[0x1A85B2FC0](v12, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v46 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 288) = v46;
    type metadata accessor for CloudFeature();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
    *v46 = v0;
    v46[1] = sub_1A5BB6204;
    return sub_1A5BC9D1C();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
LABEL_14:
  if (qword_1ED111140 != -1)
    swift_once();
  v14 = sub_1A5BC9A64();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED1110D0);
  swift_bridgeObjectRetain_n();
  v15 = sub_1A5BC9A4C();
  v16 = sub_1A5BC9D7C();
  v17 = os_log_type_enabled(v15, v16);
  v18 = *(_QWORD *)(v0 + 240);
  if (v17)
  {
    v19 = *(_QWORD *)(v0 + 232);
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v49[0] = v21;
    *(_DWORD *)v20 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 200) = sub_1A5B58A30(v19, v18, v49);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v15, v16, "TaskLimiter: creating new task for identifier %s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v21, -1, -1);
    MEMORY[0x1A85B2FC0](v20, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v22 = *(_QWORD *)(v0 + 272);
  v24 = *(_QWORD *)(v0 + 248);
  v23 = *(_QWORD *)(v0 + 256);
  v25 = sub_1A5BC9CF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = 0;
  v26[3] = 0;
  v26[4] = v24;
  v26[5] = v23;
  swift_retain();
  v27 = sub_1A5BB7080(v22, (uint64_t)&unk_1EE7FAF58, (uint64_t)v26, (void (*)(_QWORD))type metadata accessor for CloudFeature);
  *(_QWORD *)(v0 + 304) = v27;
  swift_bridgeObjectRetain_n();
  v28 = sub_1A5BC9A4C();
  v29 = sub_1A5BC9D7C();
  v30 = os_log_type_enabled(v28, v29);
  v31 = *(_QWORD *)(v0 + 240);
  if (v30)
  {
    v32 = *(_QWORD *)(v0 + 232);
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v49[0] = v34;
    *(_DWORD *)v33 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 192) = sub_1A5B58A30(v32, v31, v49);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v28, v29, "TaskLimiter: storing task for identifier %s", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v34, -1, -1);
    MEMORY[0x1A85B2FC0](v33, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v36 = *(_QWORD *)(v0 + 232);
  v35 = *(_QWORD *)(v0 + 240);
  v49[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111160);
  v49[4] = (uint64_t)&off_1E4F6DD88;
  v49[0] = v27;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A5B578E8((uint64_t)v49, v36, v35);
  swift_endAccess();
  swift_bridgeObjectRetain_n();
  v37 = sub_1A5BC9A4C();
  v38 = sub_1A5BC9D7C();
  v39 = os_log_type_enabled(v37, v38);
  v40 = *(_QWORD *)(v0 + 240);
  if (v39)
  {
    v41 = *(_QWORD *)(v0 + 232);
    v42 = (uint8_t *)swift_slowAlloc();
    v43 = swift_slowAlloc();
    v49[0] = v43;
    *(_DWORD *)v42 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 184) = sub_1A5B58A30(v41, v40, v49);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v37, v38, "TaskLimiter: performing task operation for identifier %s", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v43, -1, -1);
    MEMORY[0x1A85B2FC0](v42, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v44 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v44;
  type metadata accessor for CloudFeature();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
  *v44 = v0;
  v44[1] = sub_1A5B5D628;
  return sub_1A5BC9D1C();
}

void sub_1A5B564E8(uint64_t a1, unint64_t a2, char a3, void *a4, void (*a5)(void *, uint64_t))
{
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  NSObject *log;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;

  if (a4)
  {
    v7 = qword_1ED1112D8;
    v8 = a4;
    if (v7 != -1)
      swift_once();
    v9 = sub_1A5BC9A64();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED1112C0);
    v10 = v8;
    v11 = sub_1A5BC9A4C();
    v12 = sub_1A5BC9D88();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v29 = (_QWORD *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v31 = v30;
      *(_DWORD *)v13 = 138412546;
      log = v11;
      v14 = v10;
      sub_1A5BC9E18();
      *v29 = a4;

      *(_WORD *)(v13 + 12) = 2080;
      v15 = objc_msgSend(v14, sel_userInfo);
      sub_1A5BC9AE8();

      v16 = sub_1A5BC9AF4();
      v18 = v17;
      swift_bridgeObjectRelease();
      sub_1A5B58A30(v16, v18, &v31);
      sub_1A5BC9E18();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5B4D000, log, v12, "Received error from daemon: %@, %s", (uint8_t *)v13, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v29, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v30, -1, -1);
      MEMORY[0x1A85B2FC0](v13, -1, -1);

    }
    else
    {

    }
    v27 = v10;
    a5(a4, 1);

  }
  else
  {
    if (qword_1ED1112D8 != -1)
      swift_once();
    v22 = sub_1A5BC9A64();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED1112C0);
    swift_bridgeObjectRetain_n();
    v23 = sub_1A5BC9A4C();
    v24 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v31 = v26;
      *(_DWORD *)v25 = 136315394;
      swift_bridgeObjectRetain();
      sub_1A5B58A30(a1, a2, &v31);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 12) = 1024;
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v23, v24, "Successfully retrieved feature eligibility from daemon. Feature ID: %s, isEligible: %{BOOL}d", (uint8_t *)v25, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v26, -1, -1);
      MEMORY[0x1A85B2FC0](v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    a5((void *)(a3 & 1), 0);
  }
}

uint64_t sub_1A5B56960(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A5B569A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for GatewayRequest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_1A5B56A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 >= 2u && a5 != 3)
  {
    if (a5 != 2)
      return result;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1A5B56A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t ObjectType;
  char v19;
  void (*v20)(char *, uint64_t);
  _BYTE *v21;
  uint64_t v22;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A5BC9974();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v22 - v15;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8))(a1, a2, ObjectType, a4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    return sub_1A5B4FBE8((uint64_t)v9, &qword_1ED111280);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
  sub_1A5BC995C();
  v19 = sub_1A5BC98FC();
  v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20(v14, v10);
  if ((v19 & 1) != 0)
  {
    sub_1A5B6F7FC();
    swift_allocError();
    *v21 = 5;
    swift_willThrow();
  }
  return ((uint64_t (*)(char *, uint64_t))v20)(v16, v10);
}

uint64_t sub_1A5B56C28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t ObjectType;

  v5 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8))(a1, a2, ObjectType, v5);
}

uint64_t sub_1A5B56C8C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  result = (*(uint64_t (**)(void))(a2 + 8))();
  if ((result & 1) == 0)
  {
    if (qword_1ED10FBB8 != -1)
      swift_once();
    v3 = sub_1A5BC9A64();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED10FB98);
    v4 = sub_1A5BC9A4C();
    v5 = sub_1A5BC9D88();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1A5B4D000, v4, v5, "not authorized", v6, 2u);
      MEMORY[0x1A85B2FC0](v6, -1, -1);
    }

    sub_1A5B68C48(3);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1A5B56D80()
{
  return 1;
}

uint64_t CloudFeature.description.getter()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  objc_super v32;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_1A5BC9974();
  v26 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32.receiver = v1;
  v32.super_class = ObjectType;
  v6 = objc_msgSendSuper2(&v32, sel_description);
  sub_1A5BC9B60();

  v7 = (uint64_t *)&v1[OBJC_IVAR___CloudFeature_accessToken];
  swift_beginAccess();
  v8 = v7[1];
  v27 = v3;
  if (v8)
  {
    v9 = *v7;
    v10 = v8;
  }
  else
  {
    v10 = 0xE300000000000000;
    v9 = 6369134;
  }
  swift_bridgeObjectRetain();
  v11 = sub_1A5B5C024(8uLL, v9, v10);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  swift_bridgeObjectRelease();
  v18 = &v1[OBJC_IVAR___CloudFeature_limit];
  swift_beginAccess();
  v19 = v18[8];
  v25 = v5;
  if ((v19 & 1) == 0)
  {
    v28 = *(_QWORD *)v18;
    sub_1A5BCA094();
  }
  v28 = 0;
  v29 = 0xE000000000000000;
  sub_1A5BC9EC0();
  v30 = v28;
  v31 = v29;
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  swift_bridgeObjectRetain();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  swift_beginAccess();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  MEMORY[0x1A85B2270](v11, v13, v15, v17);
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  v20 = &v1[OBJC_IVAR___CloudFeature_ttl];
  swift_beginAccess();
  v22 = v26;
  v21 = v27;
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v20, 1, v27))
  {
    v23 = v25;
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v25, v20, v21);
    sub_1A5BC9938();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v21);
  }
  sub_1A5BC9D28();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t sub_1A5B5714C()
{
  uint64_t v0;

  sub_1A5B4FBE8(v0 + 16, &qword_1ED10FED8);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1A5B57180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t RefreshCacheBox;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;

  v36 = a3;
  v6 = sub_1A5BC9974();
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  RefreshCacheBox = type metadata accessor for NextRefreshCacheBox();
  v10 = *(_QWORD *)(RefreshCacheBox - 8);
  MEMORY[0x1E0C80A78](RefreshCacheBox);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF10);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v31 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v31 - v20;
  v32 = a1;
  v33 = a2;
  sub_1A5B574A8(a1, a2, (uint64_t)&v31 - v20);
  sub_1A5B56960((uint64_t)v21, (uint64_t)v19, &qword_1ED10FF10);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v22(v19, 1, RefreshCacheBox) == 1)
  {
    sub_1A5B4FBE8((uint64_t)v19, &qword_1ED10FF10);
    v24 = v35;
    v23 = v36;
    v25 = v34;
  }
  else
  {
    sub_1A5BAC760((uint64_t)v19, (uint64_t)v12);
    sub_1A5BC995C();
    v26 = sub_1A5BC9908();
    v25 = v34;
    v24 = v35;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v35);
    if ((v26 & 1) != 0)
    {
      sub_1A5B56960(v3 + 16, (uint64_t)v37, &qword_1ED10FED8);
      v27 = v38;
      if (v38)
      {
        v28 = v39;
        __swift_project_boxed_opaque_existential_1(v37, v38);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 24))(v32, v33, v27, v28);
        sub_1A5BAC724((uint64_t)v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      }
      else
      {
        sub_1A5BAC724((uint64_t)v12);
        sub_1A5B4FBE8((uint64_t)v37, &qword_1ED10FED8);
      }
    }
    else
    {
      sub_1A5BAC724((uint64_t)v12);
    }
    v23 = v36;
  }
  sub_1A5B57460((uint64_t)v21, (uint64_t)v16);
  if (v22(v16, 1, RefreshCacheBox) == 1)
  {
    sub_1A5B4FBE8((uint64_t)v16, &qword_1ED10FF10);
    v29 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v25 + 16))(v23, v16, v24);
    sub_1A5BAC724((uint64_t)v16);
    v29 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v23, v29, 1, v24);
}

uint64_t sub_1A5B57460(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5B574A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t RefreshCacheBox;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  sub_1A5B56960(v3 + 16, (uint64_t)v16, &qword_1ED10FED8);
  v8 = v17;
  if (!v17)
  {
    sub_1A5B4FBE8((uint64_t)v16, &qword_1ED10FED8);
    goto LABEL_6;
  }
  v9 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 16))(a1, a2, v8, v9);
  v12 = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  if (v12 >> 60 == 15)
  {
LABEL_6:
    RefreshCacheBox = type metadata accessor for NextRefreshCacheBox();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(RefreshCacheBox - 8) + 56))(a3, 1, 1, RefreshCacheBox);
  }
  sub_1A5BC97F4();
  swift_allocObject();
  sub_1A5BC97E8();
  v13 = type metadata accessor for NextRefreshCacheBox();
  sub_1A5B50E80(&qword_1EE7FACD0, (uint64_t (*)(uint64_t))type metadata accessor for NextRefreshCacheBox, (uint64_t)&unk_1A5BCE5C8);
  sub_1A5BC97DC();
  if (v4)
  {
    swift_release();
    return sub_1A5B5D9C0(v10, v12);
  }
  else
  {
    sub_1A5B5D9C0(v10, v12);
    swift_release();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 0, 1, v13);
  }
}

uint64_t type metadata accessor for NextRefreshCacheBox()
{
  uint64_t result;

  result = qword_1ED10FF00;
  if (!qword_1ED10FF00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A5B57680()
{
  void **v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;

  v1 = *v0;
  v2 = (void *)sub_1A5BC9B3C();
  v3 = objc_msgSend(v1, sel_dataForKey_, v2);

  if (!v3)
    return 0;
  v4 = sub_1A5BC989C();

  return v4;
}

uint64_t sub_1A5B576FC(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  _OWORD v10[2];
  uint64_t v11;

  if (qword_1ED111140 != -1)
    swift_once();
  v4 = sub_1A5BC9A64();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED1110D0);
  swift_bridgeObjectRetain_n();
  v5 = sub_1A5BC9A4C();
  v6 = sub_1A5BC9D7C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    *(_QWORD *)&v10[0] = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_1A5B58A30(a1, a2, (uint64_t *)v10);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v5, v6, "TaskLimiter: cleaning up task for identifier %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v8, -1, -1);
    MEMORY[0x1A85B2FC0](v7, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v11 = 0;
  memset(v10, 0, sizeof(v10));
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1A5B578E8((uint64_t)v10, a1, a2);
  return swift_endAccess();
}

uint64_t sub_1A5B578E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  __int128 v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1A5B579BC((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_1A5B579D4(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A5B4FBE8(a1, &qword_1ED111158);
    sub_1A5B57B74(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_1A5B4FBE8((uint64_t)v9, &qword_1ED111158);
  }
}

uint64_t sub_1A5B579BC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1A5B579D4(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1A5B5AB84(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7] + 40 * v12;
        __swift_destroy_boxed_opaque_existential_1(v19);
        return sub_1A5B579BC(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1A5BBB794();
      goto LABEL_7;
    }
    sub_1A5B4FDEC(v15, a4 & 1);
    v21 = sub_1A5B5AB84(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1A5B57B08(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1A5BCA100();
  __break(1u);
  return result;
}

uint64_t sub_1A5B57B08(unint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1A5B579BC(a4, a5[7] + 40 * a1);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

double sub_1A5B57B74@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1A5B5AB84(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1A5BBB794();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1A5B579BC((__int128 *)(*(_QWORD *)(v11 + 56) + 40 * v8), a3);
    sub_1A5B57C6C(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

unint64_t sub_1A5B57C6C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1A5BC9E60();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1A5BCA16C();
        swift_bridgeObjectRetain();
        sub_1A5BC9BCC();
        v11 = sub_1A5BCA184();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = v16 + 40 * v3;
          v18 = (__int128 *)(v16 + 40 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            v9 = *v18;
            v10 = v18[1];
            *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
            *(_OWORD *)v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

id sub_1A5B57E54()
{
  id result;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  result = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  if (!result)
  {
    if (qword_1ED111140 != -1)
      swift_once();
    v1 = sub_1A5BC9A64();
    __swift_project_value_buffer(v1, (uint64_t)qword_1ED1110D0);
    v2 = sub_1A5BC9A4C();
    v3 = sub_1A5BC9D88();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1A5B4D000, v2, v3, "failed to get default account store, creating a new one", v4, 2u);
      MEMORY[0x1A85B2FC0](v4, -1, -1);
    }

    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C8F2C0]), sel_init);
  }
  return result;
}

uint64_t type metadata accessor for Config()
{
  return objc_opt_self();
}

uint64_t sub_1A5B57F84()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  _UNKNOWN **v9;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = (void *)sub_1A5BC9B3C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    *((_QWORD *)&v8 + 1) = sub_1A5B55C6C(0, (unint64_t *)&qword_1ED111120);
    v9 = &off_1E4F6DE80;
    *(_QWORD *)&v7 = v2;
  }
  else
  {
    v9 = 0;
    v7 = 0u;
    v8 = 0u;
  }
  if (qword_1ED110578 != -1)
    swift_once();
  v4 = qword_1ED110568;
  v3 = unk_1ED110570;
  type metadata accessor for ConfigCache();
  v5 = swift_allocObject();
  sub_1A5B580A8((uint64_t)&v7, v5 + 16);
  *(_QWORD *)(v5 + 56) = v4;
  *(_QWORD *)(v5 + 64) = v3;
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_1A5B580A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FED8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ConfigCache()
{
  return objc_opt_self();
}

uint64_t sub_1A5B58110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v3 = *(_QWORD *)(v0 + 176);
  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 184) + 80);
  *(_QWORD *)(v0 + 200) = v4;
  v5 = v4(v1, v2, v3);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_1A5B5844C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  result = sub_1A5B61370(a1, a2, a3, MEMORY[0x1E0DEA968], a4, (uint64_t)&v6);
  if (!v4)
    return v6;
  return result;
}

id sub_1A5B58484()
{
  id *v0;

  return objc_msgSend(*v0, sel_aa_primaryAppleAccount);
}

unint64_t sub_1A5B584A8()
{
  unint64_t result;

  result = qword_1ED10FC10;
  if (!qword_1ED10FC10)
  {
    result = MEMORY[0x1A85B2F18](&protocol conformance descriptor for LocalError, &type metadata for LocalError);
    atomic_store(result, (unint64_t *)&qword_1ED10FC10);
  }
  return result;
}

void sub_1A5B584EC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, void *aBlock)
{
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;

  _Block_copy(aBlock);
  if (qword_1ED1112D8 != -1)
    swift_once();
  v10 = sub_1A5BC9A64();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED1112C0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v11 = sub_1A5BC9A4C();
  v12 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v16 = v14;
    *(_DWORD *)v13 = 136315394;
    swift_bridgeObjectRetain();
    sub_1A5B58A30(a1, a2, &v16);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1A5B58A30(a3, a4, &v16);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v11, v12, "Checking feature eligibility with feature id: %s, bundle id: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v14, -1, -1);
    MEMORY[0x1A85B2FC0](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v15 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  _Block_copy(aBlock);
  sub_1A5B58CF4(a1, a2, a3, a4, v15, (void (**)(_QWORD, _QWORD, _QWORD))aBlock);
  _Block_release(aBlock);

  _Block_release(aBlock);
}

id sub_1A5B58760(void *a1, void *a2, uint64_t a3, void (*a4)(_QWORD, _QWORD), uint64_t a5, void *a6)
{
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void (*v25)(_QWORD, _QWORD);
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;

  if (qword_1ED1112D8 != -1)
    swift_once();
  v10 = sub_1A5BC9A64();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED1112C0);
  v11 = a2;
  v12 = a1;
  v13 = v11;
  v14 = (char *)v12;
  v15 = sub_1A5BC9A4C();
  v16 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v15, v16))
  {
    v29 = a2;
    v25 = a4;
    v17 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v30 = v27;
    *(_DWORD *)v17 = 136446466;
    v28 = a6;
    if (a1)
    {
      v18 = *(_QWORD *)&v14[OBJC_IVAR___CloudFeature_featureID];
      v19 = *(_QWORD *)&v14[OBJC_IVAR___CloudFeature_featureID + 8];
      swift_bridgeObjectRetain();
    }
    else
    {
      v19 = 0xE300000000000000;
      v18 = 7104878;
    }
    v26 = a1;
    sub_1A5B58A30(v18, v19, &v30);
    sub_1A5BC9E18();

    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    if (v29)
    {
      v20 = objc_msgSend(v13, sel_localizedDescription);
      v21 = sub_1A5BC9B60();
      v23 = v22;

      a4 = v25;
    }
    else
    {
      v23 = 0xE300000000000000;
      a4 = v25;
      v21 = 7104878;
    }
    sub_1A5B58A30(v21, v23, &v30);
    sub_1A5BC9E18();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A5B4D000, v15, v16, "received feature request response, feature: %{public}s, error: %{public}s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v27, -1, -1);
    MEMORY[0x1A85B2FC0](v17, -1, -1);

    a6 = v28;
    a2 = v29;
    a1 = v26;
  }
  else
  {

  }
  swift_retain();
  sub_1A5B535C4(a1, a2, a4);
  swift_release();
  return objc_msgSend(a6, sel_invalidate);
}

uint64_t sub_1A5B58A30(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1A5B58B3C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1A5B58B00((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1A5B58B00((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1A5B58B00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1A5B58B3C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1A5BC9E24();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1A5B5BDA0(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1A5BC9EFC();
  if (!v8)
  {
    sub_1A5BC9F44();
    __break(1u);
LABEL_17:
    result = sub_1A5BC9F8C();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void sub_1A5B58CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (**a6)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  void *v25;
  void *v26;
  _QWORD *v27;
  void *v28;
  id v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  void *v34;
  _BYTE *v35;
  id v36;
  void *v37;
  void *v38;
  uint64_t aBlock;
  uint64_t v40;
  void *v41;
  void *v42;
  void (*v43)();
  _QWORD *v44;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a6;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1A5B5D908;
  *(_QWORD *)(v11 + 24) = v10;
  _Block_copy(a6);
  swift_retain();
  v12 = sub_1A5B59918();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_1A5B5BE94;
  *(_QWORD *)(v13 + 24) = v11;
  v43 = (void (*)())sub_1A5B9E958;
  v44 = (_QWORD *)v13;
  v14 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v40 = 1107296256;
  v41 = sub_1A5B97920;
  v42 = &block_descriptor_34;
  v15 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v16 = objc_msgSend(v12, sel_remoteObjectProxyWithErrorHandler_, v15);
  _Block_release(v15);

  sub_1A5BC9E3C();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1110F8);
  if (swift_dynamicCast())
  {
    v17 = sub_1A5B59918();
    v43 = sub_1A5B9C938;
    v44 = 0;
    aBlock = v14;
    v40 = 1107296256;
    v41 = sub_1A5B4FD84;
    v42 = &block_descriptor_37;
    v18 = _Block_copy(&aBlock);
    objc_msgSend(v17, sel_setInterruptionHandler_, v18);
    _Block_release(v18);

    v19 = sub_1A5B59918();
    v43 = sub_1A5B9790C;
    v44 = 0;
    aBlock = v14;
    v40 = 1107296256;
    v41 = sub_1A5B4FD84;
    v42 = &block_descriptor_40;
    v20 = _Block_copy(&aBlock);
    objc_msgSend(v19, sel_setInvalidationHandler_, v20);
    _Block_release(v20);

    if (qword_1ED1112D8 != -1)
      swift_once();
    v21 = sub_1A5BC9A64();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED1112C0);
    v22 = sub_1A5BC9A4C();
    v23 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1A5B4D000, v22, v23, "sending eligibility request ...", v24, 2u);
      MEMORY[0x1A85B2FC0](v24, -1, -1);
    }

    v25 = (void *)sub_1A5BC9B3C();
    v26 = (void *)sub_1A5BC9B3C();
    v27 = (_QWORD *)swift_allocObject();
    v27[2] = a1;
    v27[3] = a2;
    v27[4] = a5;
    v27[5] = sub_1A5B5BE94;
    v27[6] = v11;
    v43 = (void (*)())sub_1A5B5C0DC;
    v44 = v27;
    aBlock = v14;
    v40 = 1107296256;
    v41 = sub_1A5B50174;
    v42 = &block_descriptor_46;
    v28 = _Block_copy(&aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    v29 = a5;
    swift_release();
    objc_msgSend(v38, sel_getFeatureEligibilityFor_bundleID_completion_, v25, v26, v28);
    _Block_release(v28);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();

  }
  else
  {
    if (qword_1ED1112D8 != -1)
      swift_once();
    v30 = sub_1A5BC9A64();
    __swift_project_value_buffer(v30, (uint64_t)qword_1ED1112C0);
    v31 = sub_1A5BC9A4C();
    v32 = sub_1A5BC9D88();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_1A5B4D000, v31, v32, "Proxy object has the wrong type", v33, 2u);
      MEMORY[0x1A85B2FC0](v33, -1, -1);
    }

    sub_1A5B584A8();
    v34 = (void *)swift_allocError();
    *v35 = 1;
    _Block_copy(a6);
    v36 = v34;
    v37 = (void *)sub_1A5BC9824();
    ((void (**)(_QWORD, _QWORD, void *))a6)[2](a6, 0, v37);

    _Block_release(a6);
    swift_release();
    swift_release();
  }
}

void sub_1A5B5920C(uint64_t a1, uint64_t a2, char a3, void (*a4)(void *, uint64_t), uint64_t a5)
{
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  void *v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  _QWORD *v31;
  void *v32;
  id v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  void *v38;
  _BYTE *v39;
  void *v40;
  void *v44;
  uint64_t aBlock;
  uint64_t v46;
  void *v47;
  void *v48;
  void *v49;
  _QWORD *v50;

  v5 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
  v6 = (void *)sub_1A5BC9B3C();
  v7 = objc_msgSend(v5, sel_initWithMachServiceName_options_, v6, 0);

  v8 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_1EE8032B0);
  objc_msgSend(v7, sel_setRemoteObjectInterface_, v8);

  if (qword_1ED1112D8 != -1)
    swift_once();
  v9 = sub_1A5BC9A64();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED1112C0);
  v10 = sub_1A5BC9A4C();
  v11 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    aBlock = v13;
    *(_DWORD *)v12 = 136315138;
    v44 = (void *)sub_1A5B58A30(6581865, 0xE300000000000000, &aBlock);
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v10, v11, "Resuming connection to %s...", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v13, -1, -1);
    MEMORY[0x1A85B2FC0](v12, -1, -1);
  }

  objc_msgSend(v7, sel_resume);
  v14 = sub_1A5BC9A4C();
  v15 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    aBlock = v17;
    *(_DWORD *)v16 = 136315394;
    sub_1A5B58A30(6581865, 0xE300000000000000, &aBlock);
    sub_1A5BC9E18();
    *(_WORD *)(v16 + 12) = 2080;
    v44 = (void *)sub_1A5B58A30(0xD00000000000001BLL, 0x80000001A5BD29F0, &aBlock);
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v14, v15, "Resuming connection to %s with endpoint %s...", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v17, -1, -1);
    MEMORY[0x1A85B2FC0](v16, -1, -1);
  }

  v49 = sub_1A5B978F8;
  v50 = 0;
  v18 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v46 = 1107296256;
  v47 = sub_1A5B4FD84;
  v48 = &block_descriptor_196;
  v19 = _Block_copy(&aBlock);
  objc_msgSend(v7, sel_setInterruptionHandler_, v19);
  _Block_release(v19);
  v49 = sub_1A5B9790C;
  v50 = 0;
  aBlock = v18;
  v46 = 1107296256;
  v47 = sub_1A5B4FD84;
  v48 = &block_descriptor_199;
  v20 = _Block_copy(&aBlock);
  objc_msgSend(v7, sel_setInvalidationHandler_, v20);
  _Block_release(v20);
  v21 = sub_1A5BC9A4C();
  v22 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_1A5B4D000, v21, v22, "Connection was resumed, connecting to proxy object.", v23, 2u);
    MEMORY[0x1A85B2FC0](v23, -1, -1);
  }

  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a4;
  *(_QWORD *)(v24 + 24) = a5;
  v49 = sub_1A5B9E7E0;
  v50 = (_QWORD *)v24;
  aBlock = v18;
  v46 = 1107296256;
  v47 = sub_1A5B97920;
  v48 = &block_descriptor_205;
  v25 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v26 = objc_msgSend(v7, sel_remoteObjectProxyWithErrorHandler_, v25);
  _Block_release(v25);
  sub_1A5BC9E3C();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1110F8);
  if (swift_dynamicCast())
  {
    v27 = sub_1A5BC9A4C();
    v28 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v29 = 0;
      _os_log_impl(&dword_1A5B4D000, v27, v28, "sending feature request ...", v29, 2u);
      MEMORY[0x1A85B2FC0](v29, -1, -1);
    }

    v30 = sub_1A5BC9B3C();
    v31 = (_QWORD *)swift_allocObject();
    v31[2] = v40;
    v31[3] = a4;
    v31[4] = a5;
    v31[5] = v7;
    v49 = sub_1A5B5C130;
    v50 = v31;
    aBlock = v18;
    v46 = 1107296256;
    v47 = sub_1A5B5D7B4;
    v48 = &block_descriptor_211;
    v32 = _Block_copy(&aBlock);
    swift_retain();
    v33 = v40;
    v34 = v7;
    swift_release();
    objc_msgSend(v44, sel_requestFeatureWithId_ignoreCache_completion_, v30, a3 & 1, v32);
    _Block_release(v32);

    swift_unknownObjectRelease();
    v7 = (id)v30;
  }
  else
  {
    v35 = sub_1A5BC9A4C();
    v36 = sub_1A5BC9D88();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v37 = 0;
      _os_log_impl(&dword_1A5B4D000, v35, v36, "Proxy object has the wrong type", v37, 2u);
      MEMORY[0x1A85B2FC0](v37, -1, -1);
    }

    sub_1A5B584A8();
    v38 = (void *)swift_allocError();
    *v39 = 1;
    a4(v38, 1);

  }
}

id sub_1A5B59918()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v17;

  v1 = OBJC_IVAR____TtC25CloudSubscriptionFeatures9XPCCaller____lazy_storage___connection;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures9XPCCaller____lazy_storage___connection);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures9XPCCaller____lazy_storage___connection);
  }
  else
  {
    v4 = v0;
    v5 = objc_allocWithZone(MEMORY[0x1E0CB3B38]);
    v6 = (void *)sub_1A5BC9B3C();
    v7 = objc_msgSend(v5, sel_initWithMachServiceName_options_, v6, 0);

    v8 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_1EE8032B0);
    objc_msgSend(v7, sel_setRemoteObjectInterface_, v8);

    if (qword_1ED1112D8 != -1)
      swift_once();
    v9 = sub_1A5BC9A64();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED1112C0);
    v10 = sub_1A5BC9A4C();
    v11 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v17 = v13;
      *(_DWORD *)v12 = 136315138;
      sub_1A5B58A30(6581865, 0xE300000000000000, &v17);
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v10, v11, "Resuming connection to %s...", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v13, -1, -1);
      MEMORY[0x1A85B2FC0](v12, -1, -1);
    }

    objc_msgSend(v7, sel_resume);
    v14 = *(void **)(v4 + v1);
    *(_QWORD *)(v4 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v15 = v2;
  return v3;
}

Swift::Bool __swiftcall DaemonController.listener(_:shouldAcceptNewConnection:)(NSXPCListener _, NSXPCConnection shouldAcceptNewConnection)
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  void *v7;
  uint64_t v8;
  objc_class *v9;
  objc_class *v10;
  objc_class *v11;
  objc_class *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  _QWORD *v16;
  objc_class *v17;
  objc_class *v18;
  char v20;

  v3 = v2;
  sub_1A5B55C6C(0, &qword_1ED110E20);
  v6 = sub_1A5BC9DF4();
  if ((v6 & 1) != 0)
  {
    v7 = (void *)sub_1A5B59E44();
    -[objc_class setExportedInterface:](shouldAcceptNewConnection.super.isa, sel_setExportedInterface_, v7);

    -[objc_class setExportedObject:](shouldAcceptNewConnection.super.isa, sel_setExportedObject_, *(_QWORD *)(v3 + OBJC_IVAR___DaemonController_requestHandler));
    -[objc_class resume](shouldAcceptNewConnection.super.isa, sel_resume);
    if (qword_1ED10FB68 != -1)
      swift_once();
    v8 = sub_1A5BC9A64();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED10FBE8);
    v9 = _.super.isa;
    v10 = shouldAcceptNewConnection.super.isa;
    v11 = v9;
    v12 = v10;
    v13 = sub_1A5BC9A4C();
    v14 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v15 = 138412546;
      v20 = v6;
      v17 = v11;
      sub_1A5BC9E18();
      *v16 = v11;

      *(_WORD *)(v15 + 12) = 2112;
      v18 = v12;
      v6 = v20;
      sub_1A5BC9E18();
      v16[1] = v12;

      _os_log_impl(&dword_1A5B4D000, v13, v14, "%@: New connection established %@", (uint8_t *)v15, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v16, -1, -1);
      MEMORY[0x1A85B2FC0](v15, -1, -1);

    }
    else
    {

    }
  }
  return v6 & 1;
}

uint64_t sub_1A5B59E44()
{
  uint64_t v0;
  id v1;
  uint64_t result;

  objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_1EE8032B0);
  sub_1A5B55C6C(0, (unint64_t *)&qword_1ED111130);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FCC0);
  v0 = sub_1A5BCA0E8();
  v1 = objc_msgSend((id)objc_opt_self(), sel_setWithObject_, v0);
  swift_unknownObjectRelease();
  sub_1A5BC9D40();

  result = sub_1A5BC9F50();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for GeoClassificationInfo()
{
  uint64_t result;

  result = qword_1ED1107D8;
  if (!qword_1ED1107D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A5B5A30C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void (*v6)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);

  v1 = *(void **)(v0 + 216);
  *(_QWORD *)(v0 + 88) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 168);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = *(void **)(v0 + 216);
      v6 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 184);
      v5 = *(void **)(v0 + 192);
      v7 = *(_QWORD *)(v0 + 176);
      v9 = *(_QWORD *)(v0 + 144);
      v8 = *(_QWORD *)(v0 + 152);
      v10 = *(_QWORD *)(v0 + 136);
      sub_1A5B4FBE8(v7, &qword_1ED111280);

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v8, v3, v10);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v8, v10);
      v6(v7, 0, 1, v10);
      v11 = sub_1A5B68C48(8);

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
      goto LABEL_16;
    }
    sub_1A5B542D4(v3, (uint64_t (*)(_QWORD))type metadata accessor for InternalError);
  }
  v12 = *(void **)(v0 + 216);

  swift_getErrorValue();
  v13 = *(_QWORD *)(v0 + 72);
  v14 = v12;
  v15 = sub_1A5B5A758(v13);
  v16 = objc_msgSend(v15, sel_domain);

  v17 = sub_1A5BC9B60();
  v19 = v18;

  if (v17 == 0xD00000000000001ELL && v19 == 0x80000001A5BD0660)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = sub_1A5BCA0B8();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      swift_getErrorValue();
      v26 = sub_1A5B5A758(*(_QWORD *)(v0 + 48));
      v27 = objc_msgSend(v26, sel_domain);

      v28 = sub_1A5BC9B60();
      v30 = v29;

      v31 = *(void **)(v0 + 216);
      v32 = *(void **)(v0 + 192);
      v33 = *(_QWORD *)(v0 + 176);
      if (v28 == 0xD00000000000001DLL && v30 == 0x80000001A5BD0680)
      {
        swift_bridgeObjectRelease();

        sub_1A5B4FBE8(v33, &qword_1ED111280);
      }
      else
      {
        v34 = sub_1A5BCA0B8();
        swift_bridgeObjectRelease();

        sub_1A5B4FBE8(v33, &qword_1ED111280);
        if ((v34 & 1) == 0)
          goto LABEL_19;
      }
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 184))(*(_QWORD *)(v0 + 176), 1, 1, *(_QWORD *)(v0 + 136));
      v11 = *(id *)(v0 + 216);
      goto LABEL_16;
    }
  }
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 184);
  v21 = *(void **)(v0 + 192);
  v23 = *(_QWORD *)(v0 + 176);
  v24 = *(_QWORD *)(v0 + 136);

  swift_getErrorValue();
  v25 = sub_1A5B91D28(*(_QWORD *)(v0 + 24));

  sub_1A5B4FBE8(v23, &qword_1ED111280);
  v22(v23, 1, 1, v24);
  v11 = *(id *)(v0 + 216);
  if (v25)
  {
LABEL_16:
    v35 = *(_QWORD *)(v0 + 200) - 1;
    if (*(_QWORD *)(v0 + 200) != 1)
    {
      *(_QWORD *)(v0 + 192) = v11;
      *(_QWORD *)(v0 + 200) = v35;
      v36 = *(_QWORD *)(*(_QWORD *)(v0 + 128) + 120);
      v40 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EE7FA5B8 + dword_1EE7FA5B8);
      v37 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v37;
      *v37 = v0;
      v37[1] = sub_1A5B50294;
      return v40(*(_QWORD *)(v0 + 176), v36);
    }
  }
  v39 = *(_QWORD *)(v0 + 176);
  swift_willThrow();
  sub_1A5B4FBE8(v39, &qword_1ED111280);
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1A5B5A758(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t inited;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  _BYTE v23[80];

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v4 = &v23[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  v6 = sub_1A5BCA0A0();
  if (v6)
  {
    v7 = (void *)v6;
    (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v2 + 32))(v8, v4, a1);
  }
  v9 = (void *)sub_1A5BC9824();

  v10 = objc_msgSend(v9, sel_domain);
  sub_1A5BC9B60();

  v11 = objc_msgSend(v9, sel_code);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FCE8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A5BCC560;
  *(_QWORD *)(inited + 32) = sub_1A5BC9B60();
  *(_QWORD *)(inited + 40) = v13;
  v14 = objc_msgSend(v9, sel_localizedDescription);
  v15 = sub_1A5BC9B60();
  v17 = v16;

  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v15;
  *(_QWORD *)(inited + 56) = v17;
  sub_1A5B5AA50(inited);
  v18 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
  v19 = (void *)sub_1A5BC9B3C();
  swift_bridgeObjectRelease();
  v20 = (void *)sub_1A5BC9ADC();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v18, sel_initWithDomain_code_userInfo_, v19, v11, v20);

  return v21;
}

unint64_t sub_1A5B5A98C()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FCE8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A5BCDEC0;
  *(_QWORD *)(inited + 32) = sub_1A5BC9B60();
  *(_QWORD *)(inited + 40) = v1;
  v2 = sub_1A5B5ACD8();
  v3 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v4;
  *(_QWORD *)(inited + 80) = sub_1A5BC9B60();
  *(_QWORD *)(inited + 88) = v5;
  v6 = sub_1A5B5AE10();
  *(_QWORD *)(inited + 120) = v3;
  *(_QWORD *)(inited + 96) = v6;
  *(_QWORD *)(inited + 104) = v7;
  *(_QWORD *)(inited + 128) = sub_1A5BC9B60();
  *(_QWORD *)(inited + 136) = v8;
  v9 = sub_1A5B93A94();
  *(_QWORD *)(inited + 168) = v3;
  *(_QWORD *)(inited + 144) = v9;
  *(_QWORD *)(inited + 152) = v10;
  return sub_1A5B5AA50(inited);
}

unint64_t sub_1A5B5AA50(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FCD8);
  v2 = sub_1A5BC9F80();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A5B56960(v6, (uint64_t)&v15, (uint64_t *)&unk_1ED10FC40);
    v7 = v15;
    v8 = v16;
    result = sub_1A5B5AB84(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1A5B5ACC8(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A5B5AB84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1A5BCA16C();
  sub_1A5BC9BCC();
  v4 = sub_1A5BCA184();
  return sub_1A5B5ABE8(a1, a2, v4);
}

unint64_t sub_1A5B5ABE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1A5BCA0B8() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1A5BCA0B8() & 1) == 0);
    }
  }
  return v6;
}

_OWORD *sub_1A5B5ACC8(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1A5B5ACD8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A5B5AD10 + 4 * byte_1A5BCDC40[*v0]))(0xD00000000000002ALL, 0x80000001A5BD1FE0);
}

unint64_t sub_1A5B5AD10()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1A5B5AD58@<X0>(uint64_t a1@<X8>)
{
  return a1 + 19;
}

uint64_t sub_1A5B5AD68@<X0>(uint64_t a1@<X8>)
{
  return a1 + 30;
}

uint64_t sub_1A5B5AD78@<X0>(uint64_t a1@<X8>)
{
  return a1 + 2;
}

uint64_t sub_1A5B5AD88@<X0>(uint64_t a1@<X8>)
{
  return a1 + 4;
}

uint64_t sub_1A5B5AD98@<X0>(uint64_t a1@<X8>)
{
  return a1 - 2;
}

uint64_t sub_1A5B5ADA8@<X0>(uint64_t a1@<X8>)
{
  return a1 - 5;
}

uint64_t sub_1A5B5ADB8@<X0>(uint64_t a1@<X8>)
{
  return a1 + 18;
}

uint64_t sub_1A5B5ADC8@<X0>(uint64_t a1@<X8>)
{
  return a1 + 14;
}

uint64_t sub_1A5B5ADD8@<X0>(uint64_t a1@<X8>)
{
  return a1 + 39;
}

uint64_t sub_1A5B5ADE8@<X0>(uint64_t a1@<X8>)
{
  return a1 + 15;
}

void sub_1A5B5ADF8()
{
  JUMPOUT(0x1A5B5AE04);
}

uint64_t sub_1A5B5AE10()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A5B5AE48 + 4 * byte_1A5BCDC50[*v0]))(0xD00000000000002ALL, 0x80000001A5BD1CF0);
}

uint64_t sub_1A5B5AE48@<X0>(uint64_t a1@<X8>)
{
  return a1 + 65;
}

id FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, char a5, int a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  id v31;
  unint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a3;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111210);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111208);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (id *)((char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((sub_1A5BC9BFC() & 1) == 0)
  {
    v32 = a4;
    v33 = a6;
    v20 = *(_QWORD *)(v6 + 56);
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v20 + 16));
    sub_1A5B8C2D8(a1, a2, (uint64_t)v14);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      sub_1A5B4FBE8((uint64_t)v14, (uint64_t *)&unk_1ED111210);
      if (qword_1ED110E18 != -1)
        swift_once();
      v21 = sub_1A5BC9A64();
      __swift_project_value_buffer(v21, (uint64_t)qword_1ED110E28);
      swift_bridgeObjectRetain_n();
      v22 = sub_1A5BC9A4C();
      v23 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        v25 = swift_slowAlloc();
        v36 = v25;
        *(_DWORD *)v24 = 136446210;
        swift_bridgeObjectRetain();
        v35 = sub_1A5B58A30(a1, a2, &v36);
        sub_1A5BC9E18();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A5B4D000, v22, v23, "no cache for featureID: %{public}s", v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v25, -1, -1);
        MEMORY[0x1A85B2FC0](v24, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      sub_1A5B78E14((uint64_t)v14, (uint64_t)v18, &qword_1ED111208);
      if ((a5 & 1) != 0)
      {
        v26 = 0;
        v27 = 0;
        v28 = v33;
        v29 = v32;
      }
      else
      {
        v28 = v33;
        v29 = v32;
        if (qword_1ED110578 != -1)
          swift_once();
        v26 = qword_1ED110568;
        v27 = unk_1ED110570;
        swift_bridgeObjectRetain();
      }
      v30 = sub_1A5B8B47C(v26, v27, v34, v29, v28 & 1, &qword_1ED111208, (void (*)(_QWORD))type metadata accessor for CloudFeature, (uint64_t *)&unk_1ED1107C8);
      swift_bridgeObjectRelease();
      if ((v30 & 1) != 0)
      {
        v31 = *v18;
        sub_1A5B4FBE8((uint64_t)v18, &qword_1ED111208);
        return v31;
      }
      sub_1A5B4FBE8((uint64_t)v18, &qword_1ED111208);
    }
    return 0;
  }
  if (qword_1ED110790 != -1)
    swift_once();
  return sub_1A5B9E95C(a6 & 1);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1A85B2F00]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t type metadata accessor for CacheBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CacheBox);
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1A5B5B5FC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unint64_t v29;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = sub_1A5BC9974();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if ((_DWORD)v10)
    v11 = v10 - 1;
  else
    v11 = 0;
  if (v11 <= v7)
    v12 = v7;
  else
    v12 = v11;
  if (v10 > v12)
    v12 = *(_DWORD *)(v9 + 84);
  if (v12 <= 0x7FFFFFFE)
    v12 = 2147483646;
  v13 = *(_QWORD *)(v9 + 64);
  if ((_DWORD)v10)
    v14 = *(_QWORD *)(v9 + 64);
  else
    v14 = v13 + 1;
  if (!a2)
    return 0;
  v15 = v8;
  v16 = *(unsigned __int8 *)(v9 + 80);
  v17 = *(_QWORD *)(v6 + 64) + v16;
  v18 = v14 + v16;
  v19 = v13 + 7;
  if (v12 < a2)
  {
    if (((((((v19 + ((v18 + (v17 & ~v16)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v20 = 2;
    else
      v20 = a2 - v12 + 1;
    if (v20 >= 0x10000)
      v21 = 4;
    else
      v21 = 2;
    if (v20 < 0x100)
      v21 = 1;
    if (v20 >= 2)
      v22 = v21;
    else
      v22 = 0;
    __asm { BR              X3 }
  }
  if ((_DWORD)v7 == v12)
  {
    v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    v24 = a1;
    v10 = v7;
    v15 = v5;
    return v23(v24, v10, v15);
  }
  v26 = ~v16;
  v27 = (v17 + a1) & v26;
  if (v11 == v12)
  {
    if (v10 < 2)
      return 0;
    v28 = (*(uint64_t (**)(uint64_t))(v9 + 48))(v27);
    if (v28 >= 2)
      return v28 - 1;
    else
      return 0;
  }
  else
  {
    v24 = (v18 + v27) & v26;
    if ((_DWORD)v10 == v12)
    {
      v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v23(v24, v10, v15);
    }
    v29 = *(_QWORD *)(((v19 + v24) & 0xFFFFFFFFFFFFF8) + 8);
    if (v29 >= 0xFFFFFFFF)
      LODWORD(v29) = -1;
    if ((v29 + 1) >= 2)
      return v29;
    else
      return 0;
  }
}

void sub_1A5B5B7F0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  size_t v16;
  unsigned int v17;
  int v18;
  unsigned int v19;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = 0u;
  v10 = *(_QWORD *)(sub_1A5BC9974() - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11)
    v12 = v11 - 1;
  else
    v12 = 0;
  if (v12 <= v8)
    v13 = v8;
  else
    v13 = v12;
  if (v11 > v13)
    v13 = *(_DWORD *)(v10 + 84);
  if (v13 <= 0x7FFFFFFE)
    v13 = 2147483646;
  v14 = *(_QWORD *)(v10 + 64);
  if (v11)
    v15 = *(_QWORD *)(v10 + 64);
  else
    v15 = v14 + 1;
  v16 = ((((v14
          + 7
          + ((v15
            + *(unsigned __int8 *)(v10 + 80)
            + ((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))) & 0xFFFFFFFFFFFFFFF8)
        + 23) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v13 < a3)
  {
    if ((((((_DWORD)v14
           + 7
           + (((_DWORD)v15
             + *(unsigned __int8 *)(v10 + 80)
             + ((*(_DWORD *)(v7 + 64) + *(unsigned __int8 *)(v10 + 80)) & ~*(unsigned __int8 *)(v10 + 80))) & ~*(unsigned __int8 *)(v10 + 80))) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v17 = a3 - v13 + 1;
    else
      v17 = 2;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v9 = v18;
    else
      v9 = 0;
  }
  if (a2 > v13)
  {
    if ((_DWORD)v16)
    {
      v19 = ~v13 + a2;
      bzero(a1, v16);
      *a1 = v19;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X17 }
}

void sub_1A5B5B940(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  *(_BYTE *)(v10 + v13) = 0;
  if ((_DWORD)v9)
  {
    if ((_DWORD)v12 == v3)
    {
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v16 = v10;
      v17 = v9;
      a1 = v12;
      a2 = v11;
LABEL_8:
      v15(v16, v17, a1, a2);
      return;
    }
    v16 = (v7 + v10) & v8;
    if (v4 == v3)
    {
      v17 = (v9 + 1);
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 56);
      goto LABEL_8;
    }
    v16 = (v6 + v16) & v8;
    if ((_DWORD)a1 == v3)
    {
      v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 56);
      v17 = v9;
      goto LABEL_8;
    }
    v18 = (_QWORD *)((v5 + v16) & 0xFFFFFFFFFFFFFFF8);
    if (v9 > 0x7FFFFFFE)
    {
      *v18 = 0;
      v18[1] = 0;
      *(_DWORD *)v18 = v9 - 0x7FFFFFFF;
    }
    else
    {
      v18[1] = v9;
    }
  }
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1A85B2EC4](a1, v6, a5);
}

uint64_t sub_1A5B5BC2C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1A5B50110(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1A5BC9ECC();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1A5BC9F44();
      __break(1u);
LABEL_10:
      v2 = sub_1A5BC9BF0();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1A5BC9F8C();
    __break(1u);
LABEL_14:
    result = sub_1A5BC9F44();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1A5B5BDA0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1A5B5BC2C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A5B747EC(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1A5B747EC(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

void sub_1A5B5BE34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A5B5BE3C(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1A5B5BE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_1A5BC9824();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

void sub_1A5B5BE94(void *a1, char a2)
{
  uint64_t v2;

  sub_1A5B5BEA0(a1, a2 & 1, *(void (**)(_QWORD, id))(v2 + 16));
}

void sub_1A5B5BEA0(id a1, char a2, void (*a3)(_QWORD, id))
{
  id v5;

  if ((a2 & 1) != 0)
  {
    v5 = a1;
    a3(0, a1);
    sub_1A5BA98E0(a1, 1);
  }
  else
  {
    a3(a1 & 1, 0);
  }
}

void sub_1A5B5BF08(void *a1, char a2)
{
  uint64_t v2;

  sub_1A5B5BF14(a1, a2 & 1, *(void (**)(id, id))(v2 + 16));
}

void sub_1A5B5BF14(id a1, char a2, void (*a3)(id, id))
{
  id v5;
  id v6;
  id v7;

  if ((a2 & 1) != 0)
  {
    v5 = a1;
    a3(0, a1);
  }
  else
  {
    v6 = a1;
    v7 = CloudFeature.cloudFeatureObject.getter();
    a3(v7, 0);

  }
  sub_1A5BA5B20(a1);
}

uint64_t sub_1A5B5BF94(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_1A5B5BFDC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    v2 = result;
    v3 = *(unsigned __int8 *)(result + 32);
    result += 32;
    if (!v3)
      return sub_1A5BC9BC0();
    v4 = 0;
    v5 = v1 - 1;
    v6 = v2 + 33;
    while (v5 != v4)
    {
      if (!*(unsigned __int8 *)(v6 + v4++))
        return sub_1A5BC9BC0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1A5B5C024(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  char v4;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    result = sub_1A5BC9BD8();
    if ((v4 & 1) != 0)
      result = 15;
    if (4 * v3 >= result >> 14)
      return sub_1A5BC9C14();
  }
  __break(1u);
  return result;
}

void sub_1A5B5C0CC(char a1, void *a2)
{
  uint64_t v2;

  sub_1A5B55620(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void (**)(void *, uint64_t))(v2 + 40));
}

uint64_t sub_1A5B5C0E0(void *a1, char a2)
{
  char v3;

  v3 = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED110E98);
  return sub_1A5B50228(a1, v3);
}

id sub_1A5B5C130(void *a1, void *a2)
{
  uint64_t v2;

  return sub_1A5B58760(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(_QWORD, _QWORD))(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t type metadata accessor for NotificationObservation()
{
  return objc_opt_self();
}

__CFString *sub_1A5B5C15C()
{
  uint64_t v0;
  __CFString *v1;

  type metadata accessor for NotificationObservation();
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = CFSTR("com.apple.CloudSubscriptionFeature.Changed");
  *(_QWORD *)(v0 + 24) = CFSTR("com.apple.CloudSubscriptionFeatures.Ticket.Changed");
  *(_WORD *)(v0 + 32) = 0;
  qword_1ED112DD0 = v0;
  v1 = CFSTR("com.apple.CloudSubscriptionFeature.Changed");
  return CFSTR("com.apple.CloudSubscriptionFeatures.Ticket.Changed");
}

id sub_1A5B5C1B8(id result)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  if (!result)
  {
    if (qword_1ED111140 != -1)
      swift_once();
    v1 = sub_1A5BC9A64();
    __swift_project_value_buffer(v1, (uint64_t)qword_1ED1110D0);
    v2 = sub_1A5BC9A4C();
    v3 = sub_1A5BC9D88();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1A5B4D000, v2, v3, "GeoClassificationCache was passed invalid user defaults!", v4, 2u);
      MEMORY[0x1A85B2FC0](v4, -1, -1);
    }

    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99EA0]), sel_init);
  }
  return result;
}

uint64_t type metadata accessor for FeatureRequestHandler()
{
  return objc_opt_self();
}

char *sub_1A5B5C2C0()
{
  char *result;
  uint64_t v1;

  result = sub_1A5B5C2E0();
  qword_1ED110568 = (uint64_t)result;
  unk_1ED110570 = v1;
  return result;
}

char *sub_1A5B5C2E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  char *result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  size_t v21;
  uint64_t v22[2];

  v22[1] = *MEMORY[0x1E0C80C00];
  v0 = sub_1A5BC9998();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78]();
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = 37;
  v4 = sub_1A5BC9C98();
  *(_QWORD *)(v4 + 16) = 37;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_QWORD *)(v4 + 61) = 0;
  *(_OWORD *)(v4 + 32) = 0u;
  v5 = sysctlbyname("kern.bootsessionuuid", (void *)(v4 + 32), &v21, 0, 0);
  if (!v5)
  {
    v19 = sub_1A5B5BFDC(v4);
    swift_bridgeObjectRelease();
    return (char *)v19;
  }
  v6 = v5;
  v7 = MEMORY[0x1A85B2168]();
  result = strerror(v7);
  if (result)
  {
    v9 = sub_1A5BC9B30();
    v11 = v10;
    swift_bridgeObjectRelease();
    if (v11)
      v12 = v9;
    else
      v12 = 0x6E776F6E6B6E55;
    if (v11)
      v13 = v11;
    else
      v13 = 0xE700000000000000;
    if (qword_1ED110E18 != -1)
      swift_once();
    v14 = sub_1A5BC9A64();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED110E28);
    swift_bridgeObjectRetain();
    v15 = sub_1A5BC9A4C();
    v16 = sub_1A5BC9D94();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      v22[0] = v18;
      *(_DWORD *)v17 = 67109378;
      LODWORD(v20) = v6;
      sub_1A5BC9E18();
      *(_WORD *)(v17 + 8) = 2080;
      swift_bridgeObjectRetain();
      v20 = sub_1A5B58A30(v12, v13, v22);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A5B4D000, v15, v16, "failed to get current boot session UUID with error: %d -> %s", (uint8_t *)v17, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v18, -1, -1);
      MEMORY[0x1A85B2FC0](v17, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1A5BC998C();
    v19 = sub_1A5BC9980();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return (char *)v19;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DaemonController()
{
  return objc_opt_self();
}

void sub_1A5B5C6CC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  objc_class *v4;
  char *v5;
  uint64_t v6;
  void *v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  objc_super v19;

  v1 = v0;
  type metadata accessor for DefaultsMigrator();
  static DefaultsMigrator.migrate()();
  v2 = *(void **)(v0 + OBJC_IVAR___DaemonController_listener);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR___DaemonController_listener), sel_setDelegate_, v1);
  objc_msgSend(v2, sel_resume);
  type metadata accessor for Assets();
  sub_1A5B92498();
  sub_1A5BBBB58();
  sub_1A5BBBCCC();
  v3 = sub_1A5B74938();
  v4 = (objc_class *)type metadata accessor for GMOptIn();
  v5 = (char *)objc_allocWithZone(v4);
  v6 = OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_globalUserDefaults;
  v7 = (void *)objc_opt_self();
  v8 = v5;
  *(_QWORD *)&v5[v6] = objc_msgSend(v7, sel_standardUserDefaults);
  *(_QWORD *)&v8[OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_userDefaults] = v3;
  v9 = v3;

  v19.receiver = v8;
  v19.super_class = v4;
  v10 = objc_msgSendSuper2(&v19, sel_init);

  if ((sub_1A5B73094() & 1) != 0)
  {
    if (qword_1ED1105C0 != -1)
      swift_once();
    v11 = sub_1A5BC9A64();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED110738);
    v12 = sub_1A5BC9A4C();
    v13 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1A5B4D000, v12, v13, "Updating GP app installation status.", v14, 2u);
      MEMORY[0x1A85B2FC0](v14, -1, -1);
    }

    sub_1A5B74D10();
  }

  sub_1A5B5C960();
  if (qword_1ED111140 != -1)
    swift_once();
  v15 = sub_1A5BC9A64();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED1110D0);
  v16 = sub_1A5BC9A4C();
  v17 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_1A5B4D000, v16, v17, "Daemon controller did start", v18, 2u);
    MEMORY[0x1A85B2FC0](v18, -1, -1);
  }

}

void sub_1A5B5C960()
{
  char v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  _BYTE v5[24];
  ValueMetadata *v6;
  unint64_t v7;

  v6 = &type metadata for FeatureFlag;
  v7 = sub_1A5B5D68C();
  v5[0] = 0;
  v0 = sub_1A5BC9A10();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  if ((v0 & 1) != 0)
  {
    sub_1A5B5CFCC();
  }
  else
  {
    if (qword_1ED111140 != -1)
      swift_once();
    v1 = sub_1A5BC9A64();
    __swift_project_value_buffer(v1, (uint64_t)qword_1ED1110D0);
    v2 = sub_1A5BC9A4C();
    v3 = sub_1A5BC9D7C();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1A5B4D000, v2, v3, "caching disabled", v4, 2u);
      MEMORY[0x1A85B2FC0](v4, -1, -1);
    }

  }
}

void sub_1A5B5CA6C(_xpc_activity_s *a1)
{
  sub_1A5B5CA74(a1);
}

void sub_1A5B5CA74(_xpc_activity_s *a1)
{
  xpc_activity_state_t state;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  const char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint32_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  os_log_type_t v23;
  os_log_t oslog;
  uint64_t v25;

  state = xpc_activity_get_state(a1);
  if (state == 5)
  {
    if (qword_1ED111140 != -1)
      swift_once();
    v8 = sub_1A5BC9A64();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED1110D0);
    oslog = (os_log_t)sub_1A5BC9A4C();
    v9 = sub_1A5BC9DA0();
    if (os_log_type_enabled(oslog, v9))
    {
      v10 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      v25 = v11;
      *(_DWORD *)v10 = 136446210;
      sub_1A5B58A30(0xD000000000000022, 0x80000001A5BD30E0, &v25);
      sub_1A5BC9E18();
      v12 = "new state: activity %{public}s -> done";
      v13 = oslog;
      v14 = v9;
      v15 = (uint8_t *)v10;
      v16 = 12;
LABEL_22:
      _os_log_impl(&dword_1A5B4D000, v13, v14, v12, v15, v16);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v11, -1, -1);
      MEMORY[0x1A85B2FC0](v10, -1, -1);

      return;
    }
LABEL_23:

    return;
  }
  if (state != 2)
  {
    if (!state)
    {
      if (qword_1ED111140 != -1)
        swift_once();
      v3 = sub_1A5BC9A64();
      __swift_project_value_buffer(v3, (uint64_t)qword_1ED1110D0);
      v4 = sub_1A5BC9A4C();
      v5 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        v7 = swift_slowAlloc();
        v25 = v7;
        *(_DWORD *)v6 = 136446210;
        sub_1A5B58A30(0xD000000000000022, 0x80000001A5BD30E0, &v25);
        sub_1A5BC9E18();
        _os_log_impl(&dword_1A5B4D000, v4, v5, "new state: activity %{public}s -> check-in", v6, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v7, -1, -1);
        MEMORY[0x1A85B2FC0](v6, -1, -1);
      }

      sub_1A5B506C4(a1);
      return;
    }
    if (qword_1ED111140 != -1)
      swift_once();
    v22 = sub_1A5BC9A64();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED1110D0);
    oslog = (os_log_t)sub_1A5BC9A4C();
    v23 = sub_1A5BC9DA0();
    if (os_log_type_enabled(oslog, v23))
    {
      v10 = swift_slowAlloc();
      v11 = swift_slowAlloc();
      v25 = v11;
      *(_DWORD *)v10 = 136446466;
      sub_1A5B58A30(0xD000000000000022, 0x80000001A5BD30E0, &v25);
      sub_1A5BC9E18();
      *(_WORD *)(v10 + 12) = 2050;
      sub_1A5BC9E18();
      v12 = "new state: activity %{public}s -> %{public}ld [unhandled]";
      v13 = oslog;
      v14 = v23;
      v15 = (uint8_t *)v10;
      v16 = 22;
      goto LABEL_22;
    }
    goto LABEL_23;
  }
  if (qword_1ED111140 != -1)
    swift_once();
  v17 = sub_1A5BC9A64();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED1110D0);
  v18 = sub_1A5BC9A4C();
  v19 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v25 = v21;
    *(_DWORD *)v20 = 136446210;
    sub_1A5B58A30(0xD000000000000022, 0x80000001A5BD30E0, &v25);
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v18, v19, "new state: activity %{public}s -> run", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v21, -1, -1);
    MEMORY[0x1A85B2FC0](v20, -1, -1);
  }

  sub_1A5BB82E4(a1);
}

void sub_1A5B5CFCC()
{
  void *v0;
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  _QWORD v11[6];

  v1 = v0;
  ObjectType = swift_getObjectType();
  if (qword_1ED111140 != -1)
    swift_once();
  v3 = sub_1A5BC9A64();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED1110D0);
  v4 = sub_1A5BC9A4C();
  v5 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1A5B4D000, v4, v5, "preparing for check-in", v6, 2u);
    MEMORY[0x1A85B2FC0](v6, -1, -1);
  }

  v7 = (void *)*MEMORY[0x1E0C80748];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v1;
  *(_QWORD *)(v8 + 24) = ObjectType;
  v11[4] = sub_1A5B5CA6C;
  v11[5] = v8;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1A5B5BF94;
  v11[3] = &block_descriptor_7;
  v9 = _Block_copy(v11);
  v10 = v1;
  swift_release();
  xpc_activity_register("com.apple.ind.cloudfeatures.reload", v7, v9);
  _Block_release(v9);
}

uint64_t sub_1A5B5D14C(uint64_t a1)
{
  destroy for GatewayService(a1);
  return a1;
}

uint64_t sub_1A5B5D178()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B5D1B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 72) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v4 + 16);
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1A5B5D250()
{
  return swift_task_switch();
}

void sub_1A5B5D264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 120);
  v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 176);
    v4 = *(_QWORD *)(v0 + 136);
    v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 56);
    *(_QWORD *)(v0 + 184) = v5;
    v5(v3, 1, 1, v4);
    if (v2 < 1)
    {
      v9 = *(_QWORD *)(v0 + 176);
      sub_1A5B68C48(8);
      swift_willThrow();
      sub_1A5B4FBE8(v9, &qword_1ED111280);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      (*(void (**)(void))(v0 + 8))();
    }
    else
    {
      v6 = *(_QWORD *)(v0 + 128);
      *(_QWORD *)(v0 + 192) = 0;
      *(_QWORD *)(v0 + 200) = v2;
      v7 = *(_QWORD *)(v6 + 120);
      v10 = (void (*)(uint64_t, uint64_t))((char *)&dword_1EE7FA5B8 + dword_1EE7FA5B8);
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v8;
      *v8 = v0;
      v8[1] = sub_1A5B50294;
      v10(*(_QWORD *)(v0 + 176), v7);
    }
  }
}

uint64_t type metadata accessor for InternalError()
{
  uint64_t result;

  result = qword_1ED10FE78;
  if (!qword_1ED10FE78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for TaskLimiters()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FeatureCache()
{
  return objc_opt_self();
}

uint64_t sub_1A5B5D3F0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for AccountStore(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AccountStore);
}

uint64_t type metadata accessor for TaskLimiter()
{
  return objc_opt_self();
}

uint64_t sub_1A5B5D49C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 224);
  v1 = *(_QWORD *)(v0 + 232);
  swift_release();
  sub_1A5B576FC(v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1A5B5D4FC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 312) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5B5D560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[31] = a4;
  v5[32] = v4;
  v5[29] = a2;
  v5[30] = a3;
  v5[28] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B0);
  v5[33] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5B5D5C4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 232);
  v1 = *(_QWORD *)(v0 + 240);
  swift_release();
  sub_1A5B576FC(v2, v1);
  v3 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_1A5B5D628()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

unint64_t sub_1A5B5D68C()
{
  unint64_t result;

  result = qword_1ED111248;
  if (!qword_1ED111248)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCCB4C, &type metadata for FeatureFlag);
    atomic_store(result, (unint64_t *)&qword_1ED111248);
  }
  return result;
}

uint64_t type metadata accessor for UnfairLock()
{
  return objc_opt_self();
}

uint64_t sub_1A5B5D6F0(uint64_t a1)
{
  return sub_1A5B53344(a1, qword_1ED10FD00);
}

uint64_t sub_1A5B5D70C(uint64_t a1)
{
  return sub_1A5B53344(a1, qword_1ED1112C0);
}

uint64_t sub_1A5B5D728(uint64_t a1)
{
  return sub_1A5B53344(a1, qword_1ED1110D0);
}

uint64_t sub_1A5B5D74C(uint64_t a1)
{
  return sub_1A5B53344(a1, qword_1ED111100);
}

uint64_t sub_1A5B5D778(uint64_t a1)
{
  return sub_1A5B53344(a1, qword_1ED110E28);
}

uint64_t sub_1A5B5D7A0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

id sub_1A5B5D7B8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  objc_class *v2;
  uint64_t v3;
  id v6;
  id result;

  v6 = objc_allocWithZone(v2);
  result = CloudFeature.init(from:)(a1);
  if (!v3)
    *a2 = result;
  return result;
}

void sub_1A5B5D804()
{
  unint64_t v0;

  sub_1A5B501D4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

unint64_t sub_1A5B5D8C4()
{
  unint64_t result;

  result = qword_1ED110810;
  if (!qword_1ED110810)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCC840, &type metadata for CloudFeature.APICodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED110810);
  }
  return result;
}

void sub_1A5B5D908(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_1A5B5D910(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1A5B5D910(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_1A5BC9824();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, _QWORD))(a3 + 16))(a3, a1 & 1);

}

uint64_t sub_1A5B5D968(char a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD, uint64_t))(*(_QWORD *)(v2 + 16) + 16))(*(_QWORD *)(v2 + 16), a1 & 1, a2);
}

uint64_t sub_1A5B5D980(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1A5BC9974();
    result = MEMORY[0x1A85B2F18](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A5B5D9C0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1A5B5D9D4(a1, a2);
  return a1;
}

uint64_t sub_1A5B5D9D4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

void sub_1A5B5E290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

id _CSFGetLogSystem()
{
  if (_CSFGetLogSystem_onceToken != -1)
    dispatch_once(&_CSFGetLogSystem_onceToken, &__block_literal_global_1);
  return (id)_CSFGetLogSystem_log;
}

const __CFString *CSFGeoClassificationStatusDescription(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("Unknown");
  else
    return off_1E4F6E330[a1 - 1];
}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

id getINDaemonConnectionClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getINDaemonConnectionClass_softClass;
  v7 = getINDaemonConnectionClass_softClass;
  if (!getINDaemonConnectionClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getINDaemonConnectionClass_block_invoke;
    v3[3] = &unk_1E4F6E428;
    v3[4] = &v4;
    __getINDaemonConnectionClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1A5B6005C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getINDaemonConnectionClass_block_invoke(uint64_t a1)
{
  Class result;

  if (!iCloudNotificationLibraryCore_frameworkLibrary)
  {
    iCloudNotificationLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!iCloudNotificationLibraryCore_frameworkLibrary)
    {
      abort_report_np();
LABEL_6:
      __getINDaemonConnectionClass_block_invoke_cold_1();
    }
  }
  result = objc_getClass("INDaemonConnection");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    goto LABEL_6;
  getINDaemonConnectionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void OUTLINED_FUNCTION_0_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

uint64_t sub_1A5B603A4()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t result;

  v0 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  v1 = (void *)sub_1A5BC9B3C();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  sub_1A5BC9B60();
  v3 = sub_1A5BC9B3C();

  result = swift_bridgeObjectRelease();
  qword_1ED112DA8 = v3;
  return result;
}

uint64_t sub_1A5B60438(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B60454()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = (void *)v0[18];
  v2 = v0[16];
  sub_1A5B60618(v0[17]);
  v3 = sub_1A5BC9ADC();
  v0[19] = v3;
  swift_bridgeObjectRelease();
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1A5B6053C;
  v4 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v5 = v0 + 10;
  v5[1] = 0x40000000;
  v5[2] = sub_1A5B609DC;
  v5[3] = &block_descriptor;
  v5[4] = v4;
  objc_msgSend(v1, sel_renewCredentialsForAccount_options_completion_, v2, v3, v5);
  return swift_continuation_await();
}

uint64_t sub_1A5B6053C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 160) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1A5B6059C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1A5B605D8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 152);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B60618(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FFC8);
    v2 = sub_1A5BC9F80();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1A5B58B00(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1A5B5ACC8(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1A5B5ACC8(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1A5B5ACC8(v36, v37);
    sub_1A5B5ACC8(v37, &v33);
    result = sub_1A5BC9E6C();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_1A5B5ACC8(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1A5B625C8();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1A5B609DC(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v4;
  id v5;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

void sub_1A5B60A5C(int a1)
{
  NSObject *v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  int v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  int v27;
  int v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t aBlock[6];

  v2 = v1;
  LODWORD(v3) = a1;
  v4 = sub_1A5BC9A64();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -[NSObject aa_primaryAppleAccount](v2, sel_aa_primaryAppleAccount);
  if (v8)
  {
    v9 = v8;
    if (qword_1ED111140 != -1)
      swift_once();
    v10 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED1110D0);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v4);
    v11 = v9;
    v12 = sub_1A5BC9A4C();
    v13 = sub_1A5BC9D7C();
    if (!os_log_type_enabled(v12, (os_log_type_t)v13))
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      goto LABEL_13;
    }
    v27 = v13;
    v29 = v2;
    v14 = swift_slowAlloc();
    v26 = swift_slowAlloc();
    aBlock[0] = v26;
    *(_DWORD *)v14 = 67109378;
    v28 = v3;
    LODWORD(v30) = v3 & 1;
    sub_1A5BC9E18();
    *(_WORD *)(v14 + 8) = 2080;
    v15 = objc_msgSend(v11, sel_aa_altDSID);
    if (v15)
    {
      v16 = v15;
      v17 = sub_1A5BC9B60();
      v19 = v18;

      v30 = sub_1A5B58A30(v17, v19, aBlock);
      sub_1A5BC9E18();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5B4D000, v12, (os_log_type_t)v27, "Storing subscriber status %{BOOL}d on account %s", (uint8_t *)v14, 0x12u);
      v3 = v26;
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v3, -1, -1);
      MEMORY[0x1A85B2FC0](v14, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v2 = v29;
      LOBYTE(v3) = v28;
LABEL_13:
      v22 = v3 & 1;
      objc_msgSend(v11, sel_aa_setIsCloudSubscriber_, v22);
      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 16) = v11;
      *(_BYTE *)(v23 + 24) = v22;
      aBlock[4] = (uint64_t)sub_1A5B625F4;
      aBlock[5] = v23;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1A5B50174;
      aBlock[3] = (uint64_t)&block_descriptor_10;
      v24 = _Block_copy(aBlock);
      v25 = v11;
      swift_release();
      -[NSObject saveAccount:withCompletionHandler:](v2, sel_saveAccount_withCompletionHandler_, v25, v24);
      _Block_release(v24);

      return;
    }

    __break(1u);
  }
  else
  {
    if (qword_1ED111140 != -1)
      swift_once();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED1110D0);
    v29 = sub_1A5BC9A4C();
    v20 = sub_1A5BC9D88();
    if (os_log_type_enabled(v29, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_1A5B4D000, v29, v20, "Unable to update subscriber status because there is no primary apple account", v21, 2u);
      MEMORY[0x1A85B2FC0](v21, -1, -1);
    }

  }
}

void sub_1A5B60E68(char a1, void *a2, void *a3, int a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  int v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;

  v8 = sub_1A5BC9A64();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    if (qword_1ED111140 != -1)
      swift_once();
    v12 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED1110D0);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
    v13 = a3;
    v14 = sub_1A5BC9A4C();
    v15 = sub_1A5BC9D7C();
    if (!os_log_type_enabled(v14, (os_log_type_t)v15))
    {

      goto LABEL_13;
    }
    v33 = v15;
    LODWORD(v34) = a4;
    v16 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v36 = v32;
    *(_DWORD *)v16 = 136315394;
    v17 = objc_msgSend(v13, sel_aa_altDSID);
    if (v17)
    {
      v18 = v17;
      v19 = sub_1A5BC9B60();
      v21 = v20;

      v35 = sub_1A5B58A30(v19, v21, &v36);
      sub_1A5BC9E18();

      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 1024;
      LODWORD(v35) = v34 & 1;
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v14, (os_log_type_t)v33, "Saved account %s with subscriber status %{BOOL}d", (uint8_t *)v16, 0x12u);
      v22 = v32;
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v22, -1, -1);
      MEMORY[0x1A85B2FC0](v16, -1, -1);

LABEL_13:
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      return;
    }

    __break(1u);
  }
  else
  {
    if (qword_1ED111140 != -1)
      swift_once();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED1110D0);
    v23 = a2;
    v24 = a2;
    v34 = sub_1A5BC9A4C();
    v25 = sub_1A5BC9D88();
    if (os_log_type_enabled(v34, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v36 = v27;
      *(_DWORD *)v26 = 136315138;
      if (a2)
      {
        swift_getErrorValue();
        v28 = sub_1A5BCA130();
        v30 = v29;
      }
      else
      {
        v28 = 0;
        v30 = 0xE000000000000000;
      }
      v35 = sub_1A5B58A30(v28, v30, &v36);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A5B4D000, v34, v25, "Failed to save account with Error: %s", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v27, -1, -1);
      MEMORY[0x1A85B2FC0](v26, -1, -1);

    }
    else
    {

    }
  }
}

id sub_1A5B61268()
{
  if (qword_1ED10FFA0 != -1)
    swift_once();
  return (id)qword_1ED112DA8;
}

uint64_t sub_1A5B612A8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1A5B6131C;
  v7[17] = a2;
  v7[18] = v6;
  v7[16] = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B6131C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_1A5B61370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t result;
  __int128 v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;

  v34 = a1;
  v35 = a2;
  v33 = a6;
  v38 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v32 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1A5BC9E0C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v32 - v12;
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 32))(a3, a5);
  if (!v14)
    goto LABEL_17;
  v15 = (void *)v14;
  v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a5 + 64))(a3, a5);
  v17 = objc_msgSend(v15, sel_propertiesForDataclass_, v16);

  if (!v17)
    goto LABEL_17;
  v18 = sub_1A5BC9AE8();

  v19 = sub_1A5B88338(v18);
  swift_bridgeObjectRelease();
  if (!v19)
    goto LABEL_17;
  if (*(_QWORD *)(v19 + 16))
  {
    v20 = v35;
    swift_bridgeObjectRetain();
    v21 = sub_1A5B5AB84(v34, v20);
    if ((v22 & 1) != 0)
    {
      sub_1A5B58B00(*(_QWORD *)(v19 + 56) + 32 * v21, (uint64_t)&v36);
    }
    else
    {
      v36 = 0u;
      v37 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v36 = 0u;
    v37 = 0u;
  }
  swift_bridgeObjectRelease();
  v23 = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED110560);
  v24 = swift_dynamicCast();
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  if ((v24 & 1) == 0)
  {
    v25(v13, 1, 1, a4);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
LABEL_17:
    sub_1A5B584A8();
    swift_allocError();
    *v31 = 9;
    return swift_willThrow();
  }
  v25(v13, 0, 1, a4);
  v26 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v33, v13, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v32, v26, a4);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v28 = v36;
    result = swift_bridgeObjectRelease();
    v29 = HIBYTE(*((_QWORD *)&v28 + 1)) & 0xFLL;
    if ((*((_QWORD *)&v28 + 1) & 0x2000000000000000) == 0)
      v29 = v28 & 0xFFFFFFFFFFFFLL;
    if (!v29)
    {
      sub_1A5B584A8();
      swift_allocError();
      *v30 = 9;
      swift_willThrow();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v26, a4);
    }
  }
  return result;
}

uint64_t sub_1A5B61680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[23] = a4;
  v5[24] = v4;
  v5[21] = a2;
  v5[22] = a3;
  v5[20] = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B616A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 240) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 248) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1A5B6171C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  void *v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  _BOOL4 v14;
  void *v15;
  unint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (*(_QWORD *)(v0 + 248))
  {
    v1 = sub_1A5BC9A4C();
    v2 = sub_1A5BC9D88();
    if (os_log_type_enabled(v1, v2))
    {
      v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v3 = 0;
      _os_log_impl(&dword_1A5B4D000, v1, v2, "Bag refresh failed", v3, 2u);
      MEMORY[0x1A85B2FC0](v3, -1, -1);
    }
    v4 = *(void **)(v0 + 216);

    sub_1A5B584A8();
    swift_allocError();
    *v5 = 9;
    swift_willThrow();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(v0 + 240);
  v7 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0 + 200))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184));
  if (v6)
  {
    v4 = *(void **)(v0 + 216);
LABEL_7:

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v10 = v7;
  v11 = v8;
  swift_bridgeObjectRetain_n();
  v12 = sub_1A5BC9A4C();
  v13 = sub_1A5BC9DA0();
  v14 = os_log_type_enabled(v12, (os_log_type_t)v13);
  v15 = *(void **)(v0 + 216);
  v16 = *(_QWORD *)(v0 + 168);
  if (v14)
  {
    v19 = *(_QWORD *)(v0 + 160);
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v20 = v18;
    *(_DWORD *)v17 = 136446210;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 144) = sub_1A5B58A30(v19, v16, &v20);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v12, (os_log_type_t)v13, "Bag refresh was successful and now contains a path for %{public}s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v18, -1, -1);
    MEMORY[0x1A85B2FC0](v17, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();

  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v10, v11);
}

uint64_t sub_1A5B619AC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 216);
  swift_bridgeObjectRelease();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1A5B619E4()
{
  void **v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *v0;
  v2 = (void *)sub_1A5BC9B3C();
  v3 = objc_msgSend(v1, sel_aa_appleAccountWithAltDSID_, v2);

  return v3;
}

uint64_t sub_1A5B61A34()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104));
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_1A5B61A6C()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104));
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_1A5B61AA4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1A5B61AB0()
{
  return sub_1A5B61AA4();
}

uint64_t sub_1A5B61AC8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A5B61AD0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1A5B61AD8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1A5B61AE0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1A5B61AE8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1A5B61AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_1A5B61AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_1A5B61B00(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t sub_1A5B61B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 72) + *(_QWORD *)(a4 + 72));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1A5B61B8C;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1A5B61B8C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1A5B61BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t sub_1A5B61BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 88) + *(_QWORD *)(a4 + 88));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1A5B61C78;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1A5B61C78(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t sub_1A5B61CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t sub_1A5B61CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

void type metadata accessor for Name(uint64_t a1)
{
  sub_1A5B62650(a1, (unint64_t *)&unk_1EE7FA258);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1A5B62650(a1, &qword_1ED1110C0);
}

void type metadata accessor for CSFGeoClassificationStatus(uint64_t a1)
{
  sub_1A5B62650(a1, (unint64_t *)&unk_1EE7FA268);
}

void type metadata accessor for FeatureStatus(uint64_t a1)
{
  sub_1A5B62650(a1, &qword_1ED1107F0);
}

void type metadata accessor for UnavailabilityReasons(uint64_t a1)
{
  sub_1A5B62650(a1, &qword_1EE7FA278);
}

void sub_1A5B61D4C(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_1A5B61D54@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1A5B61D68@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_1A5B61D7C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1A5B61D90(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_1A5B61DC0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1A5B61DEC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_1A5B61E10(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1A5B61E24(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_1A5B61E38(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1A5B61E4C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1A5B61E60(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1A5B61E74(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1A5B61E88(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1A5B61E9C()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_1A5B61EAC()
{
  return sub_1A5BC9E48();
}

_QWORD *sub_1A5B61EC4(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_1A5B61ED8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1A5B61EE8(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

BOOL sub_1A5B61EF4(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A5B61F08(uint64_t a1, uint64_t a2)
{
  return sub_1A5B62290(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1A5B61F14(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1A5BC9B48();
  *a2 = 0;
  return result;
}

uint64_t sub_1A5B61F88(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1A5BC9B54();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1A5B62004@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1A5BC9B60();
  v2 = sub_1A5BC9B3C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1A5B62044@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_1A5B62590(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1A5B62080()
{
  return sub_1A5B50E80(&qword_1EE7FA280, (uint64_t (*)(uint64_t))type metadata accessor for UnavailabilityReasons, (uint64_t)&unk_1A5BCBA00);
}

uint64_t sub_1A5B620AC()
{
  return sub_1A5B50E80(&qword_1EE7FA288, (uint64_t (*)(uint64_t))type metadata accessor for UnavailabilityReasons, (uint64_t)&unk_1A5BCB694);
}

uint64_t sub_1A5B620D8()
{
  return sub_1A5B50E80(&qword_1EE7FA290, (uint64_t (*)(uint64_t))type metadata accessor for UnavailabilityReasons, (uint64_t)&unk_1A5BCB6C8);
}

uint64_t sub_1A5B62104()
{
  return sub_1A5B50E80(&qword_1EE7FA298, (uint64_t (*)(uint64_t))type metadata accessor for UnavailabilityReasons, (uint64_t)&unk_1A5BCB704);
}

_QWORD *sub_1A5B62130@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1A5B6213C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1A5BC9B3C();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1A5B62180@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1A5BC9B60();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A5B621A8()
{
  sub_1A5B50E80(&qword_1EE7FA2B8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1A5BCB948);
  sub_1A5B50E80(&qword_1EE7FA2C0, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1A5BCB8E8);
  return sub_1A5BC9F98();
}

uint64_t sub_1A5B6222C()
{
  return sub_1A5B50E80(&qword_1EE7FA2A0, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1A5BCB8AC);
}

uint64_t sub_1A5B62258()
{
  return sub_1A5B50E80(&qword_1EE7FA2A8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1A5BCB880);
}

uint64_t sub_1A5B62284(uint64_t a1, uint64_t a2)
{
  return sub_1A5B62290(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1A5B62290(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1A5BC9B60();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1A5B622CC()
{
  sub_1A5BC9B60();
  sub_1A5BC9BCC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5B6230C()
{
  uint64_t v0;

  sub_1A5BC9B60();
  sub_1A5BCA16C();
  sub_1A5BC9BCC();
  v0 = sub_1A5BCA184();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A5B6237C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1A5BC9B60();
  v2 = v1;
  if (v0 == sub_1A5BC9B60() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1A5BCA0B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1A5B62404()
{
  return sub_1A5B50E80(&qword_1EE7FA2B0, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1A5BCB91C);
}

uint64_t sub_1A5B62430()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  v0 = sub_1A5BA07B4();
  if (v0 == 2)
  {
    sub_1A5BC96A4();
    if (v1)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    else
    {
      return 1;
    }
  }
  else
  {
    v2 = v0 & 1;
    if (qword_1ED111140 != -1)
      swift_once();
    v3 = sub_1A5BC9A64();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED1110D0);
    v4 = sub_1A5BC9A4C();
    v5 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v6 = 67109120;
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v4, v5, "User has mocked auth issue via CSFCTL. Returning value %{BOOL}d.", v6, 8u);
      MEMORY[0x1A85B2FC0](v6, -1, -1);
    }

  }
  return v2;
}

uint64_t sub_1A5B62590(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1A5B625C8()
{
  return swift_release();
}

uint64_t sub_1A5B625D0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1A5B625F4(char a1, void *a2)
{
  uint64_t v2;

  sub_1A5B60E68(a1, a2, *(void **)(v2 + 16), *(unsigned __int8 *)(v2 + 24));
}

void type metadata accessor for CFError(uint64_t a1)
{
  sub_1A5B62650(a1, (unint64_t *)&unk_1EE7FA340);
}

void type metadata accessor for SecCertificate(uint64_t a1)
{
  sub_1A5B62650(a1, &qword_1ED10FFA8);
}

void type metadata accessor for ACAccountCredentialRenewResult(uint64_t a1)
{
  sub_1A5B62650(a1, &qword_1EE7FA350);
}

void type metadata accessor for os_eligibility_answer_t(uint64_t a1)
{
  sub_1A5B62650(a1, &qword_1EE7FA358);
}

void sub_1A5B62650(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t static SystemProperties.bootSessionUUID.getter()
{
  uint64_t v0;

  if (qword_1ED110578 != -1)
    swift_once();
  v0 = qword_1ED110568;
  swift_bridgeObjectRetain();
  return v0;
}

ValueMetadata *type metadata accessor for SystemProperties()
{
  return &type metadata for SystemProperties;
}

uint64_t sub_1A5B62724()
{
  void *v0;
  uint64_t v1;
  _BYTE *v3;
  uint64_t v4;

  v0 = (void *)sub_1A5BC9B3C();
  v1 = MGCopyAnswer();

  if (v1 && (swift_dynamicCast() & 1) != 0)
    return v4;
  sub_1A5B584A8();
  swift_allocError();
  *v3 = 11;
  return swift_willThrow();
}

uint64_t CSFUnavailabilityReasons.description.getter(__int16 a1)
{
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;

  if ((a1 & 1) == 0)
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if ((a1 & 2) == 0)
      goto LABEL_12;
    goto LABEL_7;
  }
  v2 = sub_1A5B6420C(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v4 = v2[2];
  v3 = v2[3];
  if (v4 >= v3 >> 1)
    v2 = sub_1A5B6420C((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
  v2[2] = v4 + 1;
  v5 = &v2[2 * v4];
  v5[4] = 0xD000000000000010;
  v5[5] = 0x80000001A5BD03F0;
  if ((a1 & 2) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1A5B6420C(0, v2[2] + 1, 1, v2);
    v7 = v2[2];
    v6 = v2[3];
    if (v7 >= v6 >> 1)
      v2 = sub_1A5B6420C((_QWORD *)(v6 > 1), v7 + 1, 1, v2);
    v2[2] = v7 + 1;
    v8 = &v2[2 * v7];
    v8[4] = 0xD00000000000001ALL;
    v8[5] = 0x80000001A5BD03D0;
  }
LABEL_12:
  if ((a1 & 4) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1A5B6420C(0, v2[2] + 1, 1, v2);
    v10 = v2[2];
    v9 = v2[3];
    if (v10 >= v9 >> 1)
      v2 = sub_1A5B6420C((_QWORD *)(v9 > 1), v10 + 1, 1, v2);
    v2[2] = v10 + 1;
    v11 = &v2[2 * v10];
    v11[4] = 0xD000000000000010;
    v11[5] = 0x80000001A5BD03B0;
    if ((a1 & 0x10) == 0)
    {
LABEL_14:
      if ((a1 & 0x20) == 0)
        goto LABEL_15;
      goto LABEL_30;
    }
  }
  else if ((a1 & 0x10) == 0)
  {
    goto LABEL_14;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A5B6420C(0, v2[2] + 1, 1, v2);
  v13 = v2[2];
  v12 = v2[3];
  if (v13 >= v12 >> 1)
    v2 = sub_1A5B6420C((_QWORD *)(v12 > 1), v13 + 1, 1, v2);
  v2[2] = v13 + 1;
  v14 = &v2[2 * v13];
  v14[4] = 0xD000000000000010;
  v14[5] = 0x80000001A5BD0390;
  if ((a1 & 0x20) == 0)
  {
LABEL_15:
    if ((a1 & 0x40) == 0)
      goto LABEL_16;
    goto LABEL_35;
  }
LABEL_30:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A5B6420C(0, v2[2] + 1, 1, v2);
  v16 = v2[2];
  v15 = v2[3];
  if (v16 >= v15 >> 1)
    v2 = sub_1A5B6420C((_QWORD *)(v15 > 1), v16 + 1, 1, v2);
  v2[2] = v16 + 1;
  v17 = &v2[2 * v16];
  v17[4] = 0x4E73497465737361;
  v17[5] = 0xEF7964616552746FLL;
  if ((a1 & 0x40) == 0)
  {
LABEL_16:
    if ((a1 & 0x80) == 0)
      goto LABEL_17;
    goto LABEL_40;
  }
LABEL_35:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A5B6420C(0, v2[2] + 1, 1, v2);
  v19 = v2[2];
  v18 = v2[3];
  if (v19 >= v18 >> 1)
    v2 = sub_1A5B6420C((_QWORD *)(v18 > 1), v19 + 1, 1, v2);
  v2[2] = v19 + 1;
  v20 = (char *)&v2[2 * v19];
  strcpy(v20 + 32, "shortOfStorage");
  v20[47] = -18;
  if ((a1 & 0x80) == 0)
  {
LABEL_17:
    if ((a1 & 0x100) == 0)
      goto LABEL_18;
    goto LABEL_45;
  }
LABEL_40:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A5B6420C(0, v2[2] + 1, 1, v2);
  v22 = v2[2];
  v21 = v2[3];
  if (v22 >= v21 >> 1)
    v2 = sub_1A5B6420C((_QWORD *)(v21 > 1), v22 + 1, 1, v2);
  v2[2] = v22 + 1;
  v23 = &v2[2 * v22];
  v23[4] = 0x646574704F746F6ELL;
  v23[5] = 0xEA00000000006E49;
  if ((a1 & 0x100) == 0)
  {
LABEL_18:
    if ((a1 & 0x200) == 0)
      goto LABEL_55;
    goto LABEL_50;
  }
LABEL_45:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1A5B6420C(0, v2[2] + 1, 1, v2);
  v25 = v2[2];
  v24 = v2[3];
  if (v25 >= v24 >> 1)
    v2 = sub_1A5B6420C((_QWORD *)(v24 > 1), v25 + 1, 1, v2);
  v2[2] = v25 + 1;
  v26 = &v2[2 * v25];
  v26[4] = 0xD000000000000019;
  v26[5] = 0x80000001A5BD0370;
  if ((a1 & 0x200) != 0)
  {
LABEL_50:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v2 = sub_1A5B6420C(0, v2[2] + 1, 1, v2);
    v28 = v2[2];
    v27 = v2[3];
    if (v28 >= v27 >> 1)
      v2 = sub_1A5B6420C((_QWORD *)(v27 > 1), v28 + 1, 1, v2);
    v2[2] = v28 + 1;
    v29 = &v2[2 * v28];
    v29[4] = 0x6E776F6E6B6E75;
    v29[5] = 0xE700000000000000;
  }
LABEL_55:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF50);
  sub_1A5B64084();
  sub_1A5BC9B0C();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  return 91;
}

uint64_t sub_1A5B62D54()
{
  sub_1A5BCA16C();
  sub_1A5BCA178();
  return sub_1A5BCA184();
}

uint64_t sub_1A5B62D98()
{
  return sub_1A5BCA178();
}

uint64_t sub_1A5B62DC0()
{
  sub_1A5BCA16C();
  sub_1A5BCA178();
  return sub_1A5BCA184();
}

uint64_t sub_1A5B62E00()
{
  sub_1A5B65140(&qword_1EE7FA290, (uint64_t)&unk_1A5BCB6C8);
  return sub_1A5BC9C44();
}

uint64_t sub_1A5B62E6C()
{
  sub_1A5B65140(&qword_1EE7FA290, (uint64_t)&unk_1A5BCB6C8);
  return sub_1A5BC9C2C();
}

uint64_t sub_1A5B62EC8()
{
  _QWORD *v0;

  return CSFUnavailabilityReasons.description.getter(*v0);
}

void static Availability.current.getter(uint64_t a1@<X8>)
{
  id v2;
  id v3;
  uint64_t v4;
  BOOL v5;

  v2 = objc_msgSend((id)objc_opt_self(), sel_currentAvailability);
  v3 = objc_msgSend(v2, sel_status);
  v4 = (uint64_t)v3;
  if (v3)
  {
    if (v3 == (id)2)
    {
      v4 = (uint64_t)objc_msgSend(v2, sel_unavailabiltyReasons);
      v5 = 0;
    }
    else
    {
      if (v3 == (id)1)
        v4 = 1;
      else
        v4 = 512;
      v5 = v3 == (id)1;
    }
  }
  else
  {
    v5 = 1;
  }

  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
}

uint64_t static Availability.current()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B62F90()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)objc_opt_self();
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1A5B63038;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_1A5B63120;
  v3[3] = &block_descriptor_0;
  v3[4] = v2;
  objc_msgSend(v1, sel_currentAvailabilityWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_1A5B63038()
{
  return swift_task_switch();
}

uint64_t sub_1A5B63084()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 120);
  v2 = objc_msgSend(v1, sel_status);
  v3 = (uint64_t)v2;
  if (v2)
  {
    if (v2 == (id)2)
    {
      v3 = (uint64_t)objc_msgSend(v1, sel_unavailabiltyReasons);
      v4 = 0;
    }
    else
    {
      if (v2 == (id)1)
        v3 = 1;
      else
        v3 = 512;
      v4 = v2 == (id)1;
    }
  }
  else
  {
    v4 = 1;
  }
  v5 = *(_QWORD *)(v0 + 128);

  *(_QWORD *)v5 = v3;
  *(_BYTE *)(v5 + 8) = v4;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B63120(uint64_t a1, void *a2)
{
  id v2;

  **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
  v2 = a2;
  return swift_continuation_resume();
}

uint64_t Availability.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*((_BYTE *)v0 + 8) == 1)
  {
    if (v1)
      return 0x646574696D696CLL;
    else
      return 0x6C62616C69617661;
  }
  else
  {
    sub_1A5BC9EC0();
    swift_bridgeObjectRelease();
    CSFUnavailabilityReasons.description.getter(v1);
    sub_1A5BC9BE4();
    swift_bridgeObjectRelease();
    return 0xD000000000000016;
  }
}

id Availability.shouldShowGM.getter()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentAvailability);
  v1 = objc_msgSend(v0, sel_shouldShowGM);

  return v1;
}

uint64_t Availability.hash(into:)()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) != 1)
    sub_1A5BCA178();
  return sub_1A5BCA178();
}

uint64_t static Availability.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;

  v2 = *(unsigned __int8 *)(a2 + 8);
  v3 = (*(_QWORD *)a1 == *(_QWORD *)a2) & ~v2;
  if (*(_QWORD *)a2)
    v4 = *(unsigned __int8 *)(a2 + 8);
  else
    v4 = 0;
  if (*(_QWORD *)a2)
    v2 = 0;
  if (*(_QWORD *)a1)
    v5 = v4;
  else
    v5 = v2;
  if (*(_BYTE *)(a1 + 8) == 1)
    return v5;
  else
    return v3;
}

uint64_t sub_1A5B632F0()
{
  return 0;
}

uint64_t sub_1A5B632FC()
{
  return 0;
}

void sub_1A5B63308(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1A5B63314()
{
  sub_1A5B643E4();
  return sub_1A5BCA1C0();
}

uint64_t sub_1A5B6333C()
{
  sub_1A5B643E4();
  return sub_1A5BCA1CC();
}

BOOL sub_1A5B63364(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1A5B63378()
{
  sub_1A5BCA16C();
  sub_1A5BCA178();
  return sub_1A5BCA184();
}

uint64_t sub_1A5B633BC()
{
  return sub_1A5BCA178();
}

uint64_t sub_1A5B633E4()
{
  sub_1A5BCA16C();
  sub_1A5BCA178();
  return sub_1A5BCA184();
}

uint64_t sub_1A5B63424()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x646574696D696CLL;
  if (*v0 != 1)
    v1 = 0x616C696176616E75;
  if (*v0)
    return v1;
  else
    return 0x6C62616C69617661;
}

uint64_t sub_1A5B6348C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5B64FC8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A5B634B0(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1A5B634BC()
{
  sub_1A5B64318();
  return sub_1A5BCA1C0();
}

uint64_t sub_1A5B634E4()
{
  sub_1A5B64318();
  return sub_1A5BCA1CC();
}

uint64_t sub_1A5B6350C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1A5B63538()
{
  sub_1A5B643A0();
  return sub_1A5BCA1C0();
}

uint64_t sub_1A5B63560()
{
  sub_1A5B643A0();
  return sub_1A5BCA1CC();
}

uint64_t sub_1A5B63588()
{
  sub_1A5BCA16C();
  sub_1A5BCA178();
  return sub_1A5BCA184();
}

uint64_t sub_1A5B635C8()
{
  return sub_1A5BCA178();
}

uint64_t sub_1A5B635EC()
{
  sub_1A5BCA16C();
  sub_1A5BCA178();
  return sub_1A5BCA184();
}

uint64_t sub_1A5B63628()
{
  return 0x736E6F73616572;
}

uint64_t sub_1A5B63640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x736E6F73616572 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A5BCA0B8();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A5B636D4()
{
  sub_1A5B6435C();
  return sub_1A5BCA1C0();
}

uint64_t sub_1A5B636FC()
{
  sub_1A5B6435C();
  return sub_1A5BCA1CC();
}

uint64_t Availability.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA3C8);
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  MEMORY[0x1E0C80A78](v4);
  v26 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA3D0);
  v24 = *(_QWORD *)(v6 - 8);
  v25 = v6;
  MEMORY[0x1E0C80A78](v6);
  v23 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA3D8);
  v21 = *(_QWORD *)(v8 - 8);
  v22 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA3E0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  v16 = *((unsigned __int8 *)v2 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5B64318();
  sub_1A5BCA1B4();
  if (v16 == 1)
  {
    if (v15)
    {
      v31 = 1;
      sub_1A5B643A0();
      v17 = v23;
      sub_1A5BCA034();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v25);
    }
    else
    {
      v30 = 0;
      sub_1A5B643E4();
      sub_1A5BCA034();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v22);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    v32 = 2;
    sub_1A5B6435C();
    v18 = v26;
    sub_1A5BCA034();
    v29 = v15;
    type metadata accessor for UnavailabilityReasons(0);
    sub_1A5B65140(&qword_1EE7FA3F8, (uint64_t)&protocol conformance descriptor for CSFUnavailabilityReasons);
    v19 = v28;
    sub_1A5BCA07C();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t Availability.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_1A5BCA16C();
  if (v1 != 1)
    sub_1A5BCA178();
  sub_1A5BCA178();
  return sub_1A5BCA184();
}

uint64_t Availability.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  char v46;

  v38 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA410);
  v4 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  v37 = v4;
  MEMORY[0x1E0C80A78](v3);
  v40 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA418);
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x1E0C80A78](v6);
  v39 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA420);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA428);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v41 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1A5B64318();
  v17 = v42;
  sub_1A5BCA19C();
  if (!v17)
  {
    v33 = v8;
    v18 = v39;
    v19 = v40;
    v42 = v13;
    v20 = sub_1A5BCA01C();
    v21 = v12;
    if (*(_QWORD *)(v20 + 16) == 1)
    {
      if (*(_BYTE *)(v20 + 32))
      {
        if (*(_BYTE *)(v20 + 32) != 1)
        {
          v39 = (char *)v20;
          v46 = 2;
          sub_1A5B6435C();
          v27 = v19;
          sub_1A5BC9FB0();
          v28 = v38;
          type metadata accessor for UnavailabilityReasons(0);
          sub_1A5B65140(&qword_1EE7FA438, (uint64_t)&protocol conformance descriptor for CSFUnavailabilityReasons);
          v30 = v36;
          sub_1A5BCA010();
          (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v30);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v21);
          v31 = 0;
          v29 = v43;
          v25 = (uint64_t)v41;
LABEL_12:
          *(_QWORD *)v28 = v29;
          *(_BYTE *)(v28 + 8) = v31;
          return __swift_destroy_boxed_opaque_existential_1(v25);
        }
        v45 = 1;
        sub_1A5B643A0();
        sub_1A5BC9FB0();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v18, v35);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v12);
        v29 = 1;
      }
      else
      {
        v44 = 0;
        sub_1A5B643E4();
        sub_1A5BC9FB0();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v33);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v12);
        v29 = 0;
      }
      v31 = 1;
      v25 = (uint64_t)v41;
      v28 = v38;
      goto LABEL_12;
    }
    v22 = sub_1A5BC9EF0();
    swift_allocError();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA430);
    *v24 = &type metadata for Availability;
    sub_1A5BC9FBC();
    sub_1A5BC9EE4();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x1E0DEC450], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v12);
  }
  v25 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v25);
}

uint64_t sub_1A5B63F04()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_1A5BCA16C();
  if (v1 != 1)
    sub_1A5BCA178();
  sub_1A5BCA178();
  return sub_1A5BCA184();
}

uint64_t sub_1A5B63F6C()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) != 1)
    sub_1A5BCA178();
  return sub_1A5BCA178();
}

uint64_t sub_1A5B63FB8()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_1A5BCA16C();
  if (v1 != 1)
    sub_1A5BCA178();
  sub_1A5BCA178();
  return sub_1A5BCA184();
}

uint64_t sub_1A5B6401C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Availability.init(from:)(a1, a2);
}

uint64_t sub_1A5B64030(_QWORD *a1)
{
  return Availability.encode(to:)(a1);
}

uint64_t sub_1A5B64048(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;

  v2 = *(unsigned __int8 *)(a2 + 8);
  v3 = (*(_QWORD *)a1 == *(_QWORD *)a2) & ~v2;
  if (*(_QWORD *)a2)
    v4 = *(unsigned __int8 *)(a2 + 8);
  else
    v4 = 0;
  if (*(_QWORD *)a2)
    v2 = 0;
  if (*(_QWORD *)a1)
    v5 = v4;
  else
    v5 = v2;
  if (*(_BYTE *)(a1 + 8) == 1)
    return v5;
  else
    return v3;
}

unint64_t sub_1A5B64084()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED10FD40;
  if (!qword_1ED10FD40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED10FF50);
    result = MEMORY[0x1A85B2F18](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED10FD40);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1A85B2F0C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

char *sub_1A5B64114(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_1EE7FA4B8);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v12 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A5B64DF4(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1A5B6420C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112E0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1A5B64ED8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A5B64318()
{
  unint64_t result;

  result = qword_1EE7FA3E8;
  if (!qword_1EE7FA3E8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCC0C8, &type metadata for Availability.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA3E8);
  }
  return result;
}

unint64_t sub_1A5B6435C()
{
  unint64_t result;

  result = qword_1EE7FA3F0;
  if (!qword_1EE7FA3F0)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCC078, &type metadata for Availability.UnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA3F0);
  }
  return result;
}

unint64_t sub_1A5B643A0()
{
  unint64_t result;

  result = qword_1EE7FA400;
  if (!qword_1EE7FA400)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCC028, &type metadata for Availability.LimitedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA400);
  }
  return result;
}

unint64_t sub_1A5B643E4()
{
  unint64_t result;

  result = qword_1EE7FA408;
  if (!qword_1EE7FA408)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCBFD8, &type metadata for Availability.AvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA408);
  }
  return result;
}

uint64_t sub_1A5B64428()
{
  return sub_1A5B65140(&qword_1EE7FA280, (uint64_t)&unk_1A5BCBA00);
}

unint64_t sub_1A5B64450()
{
  unint64_t result;

  result = qword_1EE7FA440;
  if (!qword_1EE7FA440)
  {
    result = MEMORY[0x1A85B2F18]("-*:?", &type metadata for Availability);
    atomic_store(result, (unint64_t *)&qword_1EE7FA440);
  }
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Availability(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Availability(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_1A5B644F8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1A5B64518(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Availability()
{
  return &type metadata for Availability;
}

uint64_t getEnumTagSinglePayload for Availability.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Availability.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A5B64624 + 4 * byte_1A5BCBB85[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A5B64658 + 4 * asc_1A5BCBB80[v4]))();
}

uint64_t sub_1A5B64658(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B64660(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5B64668);
  return result;
}

uint64_t sub_1A5B64674(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5B6467CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A5B64680(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B64688(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B64694(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1A5B6469C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Availability.CodingKeys()
{
  return &type metadata for Availability.CodingKeys;
}

ValueMetadata *type metadata accessor for Availability.AvailableCodingKeys()
{
  return &type metadata for Availability.AvailableCodingKeys;
}

ValueMetadata *type metadata accessor for Availability.LimitedCodingKeys()
{
  return &type metadata for Availability.LimitedCodingKeys;
}

uint64_t getEnumTagSinglePayload for Availability.UnavailableCodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for Availability.UnavailableCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A5B64768 + 4 * byte_1A5BCBB8A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A5B64788 + 4 * byte_1A5BCBB8F[v4]))();
}

_BYTE *sub_1A5B64768(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A5B64788(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5B64790(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5B64798(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5B647A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5B647A8(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1A5B647B4()
{
  return 0;
}

ValueMetadata *type metadata accessor for Availability.UnavailableCodingKeys()
{
  return &type metadata for Availability.UnavailableCodingKeys;
}

unint64_t sub_1A5B647D0()
{
  unint64_t result;

  result = qword_1EE7FA448;
  if (!qword_1EE7FA448)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCBE58, &type metadata for Availability.UnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA448);
  }
  return result;
}

unint64_t sub_1A5B64818()
{
  unint64_t result;

  result = qword_1EE7FA450;
  if (!qword_1EE7FA450)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCBFB0, &type metadata for Availability.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA450);
  }
  return result;
}

unint64_t sub_1A5B64860()
{
  unint64_t result;

  result = qword_1EE7FA458;
  if (!qword_1EE7FA458)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCBED0, &type metadata for Availability.AvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA458);
  }
  return result;
}

unint64_t sub_1A5B648A8()
{
  unint64_t result;

  result = qword_1EE7FA460;
  if (!qword_1EE7FA460)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCBEF8, &type metadata for Availability.AvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA460);
  }
  return result;
}

unint64_t sub_1A5B648F0()
{
  unint64_t result;

  result = qword_1EE7FA468;
  if (!qword_1EE7FA468)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCBE80, &type metadata for Availability.LimitedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA468);
  }
  return result;
}

unint64_t sub_1A5B64938()
{
  unint64_t result;

  result = qword_1EE7FA470;
  if (!qword_1EE7FA470)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCBEA8, &type metadata for Availability.LimitedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA470);
  }
  return result;
}

unint64_t sub_1A5B64980()
{
  unint64_t result;

  result = qword_1EE7FA478;
  if (!qword_1EE7FA478)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCBDC8, &type metadata for Availability.UnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA478);
  }
  return result;
}

unint64_t sub_1A5B649C8()
{
  unint64_t result;

  result = qword_1EE7FA480;
  if (!qword_1EE7FA480)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCBDF0, &type metadata for Availability.UnavailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA480);
  }
  return result;
}

unint64_t sub_1A5B64A10()
{
  unint64_t result;

  result = qword_1EE7FA488;
  if (!qword_1EE7FA488)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCBF20, &type metadata for Availability.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA488);
  }
  return result;
}

unint64_t sub_1A5B64A58()
{
  unint64_t result;

  result = qword_1EE7FA490;
  if (!qword_1EE7FA490)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCBF48, &type metadata for Availability.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA490);
  }
  return result;
}

_QWORD *sub_1A5B64A9C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA4A8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1A5B65180(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5B64BC0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A5B64BE8(a1, a2, a3, a4, &qword_1EE7FA4A0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE690]);
}

uint64_t sub_1A5B64BD4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1A5B64BE8(a1, a2, a3, a4, &qword_1EE7FA498, (uint64_t (*)(_QWORD))type metadata accessor for DefaultsMigrator.Migration);
}

uint64_t sub_1A5B64BE8(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1A5BC9F44();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1A5B6528C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

char *sub_1A5B64DF4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_1A5BC9F8C();
  __break(1u);
  return result;
}

uint64_t sub_1A5B64ED8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A5BC9F8C();
  __break(1u);
  return result;
}

uint64_t sub_1A5B64FC8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C62616C69617661 && a2 == 0xE900000000000065;
  if (v2 || (sub_1A5BCA0B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646574696D696CLL && a2 == 0xE700000000000000 || (sub_1A5BCA0B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x616C696176616E75 && a2 == 0xEB00000000656C62)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A5BCA0B8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A5B65140(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for UnavailabilityReasons(255);
    result = MEMORY[0x1A85B2F18](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A5B65180(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA4B0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1A5BC9F8C();
  __break(1u);
  return result;
}

uint64_t sub_1A5B6528C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1A5BC9F8C();
  __break(1u);
  return result;
}

uint64_t sub_1A5B653A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1A5B65420;
  return v9(a1, a2, a3);
}

uint64_t sub_1A5B65420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v8;

  v8 = *v3;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(a1, a2, a3);
}

uint64_t sub_1A5B65488(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;
  __int128 v13;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = *a2;
  v8 = *((_QWORD *)a2 + 2);
  v9 = *((_QWORD *)a2 + 3);
  v10 = *((_BYTE *)a2 + 32);
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 56) = v11;
  *(_OWORD *)(v4 + 16) = v13;
  *(_QWORD *)(v4 + 32) = v8;
  *(_QWORD *)(v4 + 40) = v9;
  *(_BYTE *)(v4 + 48) = v10;
  *v11 = v4;
  v11[1] = sub_1A5B65534;
  return v14(a1, v4 + 16, a3, a4);
}

uint64_t sub_1A5B65534()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A5B6557C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1A5B65584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 8) + *(_QWORD *)(a5 + 8));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1A5B65618;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_1A5B65618()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A5B65660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t sub_1A5B65678(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v24 = MEMORY[0x1E0DEE9D8];
  sub_1A5B66E9C(0, v1, 0);
  v2 = v24;
  result = sub_1A5B67020(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v20 = v1;
  v21 = v5;
  v22 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v23 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A5BC9BE4();
    sub_1A5BC9BE4();
    sub_1A5BC9BE4();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v24 + 16);
    v13 = *(_QWORD *)(v24 + 24);
    if (v12 >= v13 >> 1)
      result = sub_1A5B66E9C(v13 > 1, v12 + 1, 1);
    *(_QWORD *)(v24 + 16) = v12 + 1;
    v14 = v24 + 16 * v12;
    *(_QWORD *)(v14 + 32) = 8237;
    *(_QWORD *)(v14 + 40) = 0xE200000000000000;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v15 = *(_QWORD *)(v22 + 8 * v11);
    if ((v15 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v21;
    if (*(_DWORD *)(a1 + 36) != v21)
      goto LABEL_27;
    v16 = v15 & (-2 << (v6 & 0x3F));
    if (v16)
    {
      v9 = __clz(__rbit64(v16)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v20;
    }
    else
    {
      v17 = v11 + 1;
      v18 = (unint64_t)(v9 + 63) >> 6;
      v10 = v20;
      if (v11 + 1 < v18)
      {
        v19 = *(_QWORD *)(v22 + 8 * v17);
        if (v19)
        {
LABEL_20:
          v9 = __clz(__rbit64(v19)) + (v17 << 6);
        }
        else
        {
          while (v18 - 2 != v11)
          {
            v19 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v19)
            {
              v17 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v23 + 1;
    v6 = v9;
    if (v23 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void sub_1A5B658F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_1A5BC9B90();
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

unint64_t sub_1A5B65970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if ((v1 & 0xFF000000000000) != 0)
  {
    sub_1A5BC9B84();
    v2 = sub_1A5BC9B78();
    if (v3)
      return v2;
    else
      return 0xD000000000000017;
  }
  return v0;
}

unint64_t sub_1A5B659F0()
{
  sub_1A5BC9EC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  return 0xD000000000000010;
}

uint64_t sub_1A5B65A8C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21[4];

  v1 = *(void **)(v0 + 408);
  v2 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 232);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  sub_1A5B66CBC(v3, v2);
  v4 = v1;
  v5 = v1;
  v6 = sub_1A5BC9A4C();
  v7 = sub_1A5BC9D88();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = *(void **)(v0 + 408);
    v9 = *(_QWORD *)(v0 + 352);
    v10 = *(_QWORD *)(v0 + 336);
    v11 = swift_slowAlloc();
    v12 = (_QWORD *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v21[0] = v20;
    *(_DWORD *)v11 = 136446466;
    sub_1A5B66CBC(v10, v9);
    sub_1A5BC9EC0();
    swift_bridgeObjectRelease();
    v21[1] = 0xD000000000000010;
    v21[2] = 0x80000001A5BD0580;
    swift_bridgeObjectRetain();
    sub_1A5BC9BE4();
    swift_bridgeObjectRelease();
    sub_1A5BC9BE4();
    sub_1A5B66D00(v9);
    *(_QWORD *)(v0 + 96) = sub_1A5B58A30(0xD000000000000010, 0x80000001A5BD0580, v21);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    sub_1A5B66D00(v10);
    *(_WORD *)(v11 + 12) = 2114;
    v13 = v8;
    v14 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 104) = v14;
    sub_1A5BC9E18();
    *v12 = v14;

    _os_log_impl(&dword_1A5B4D000, v6, v7, "%{public}s Error creating request with error: %{public}@", (uint8_t *)v11, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v12, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v20, -1, -1);
    MEMORY[0x1A85B2FC0](v11, -1, -1);
  }
  else
  {
    v15 = *(void **)(v0 + 408);
    sub_1A5B66D00(*(_QWORD *)(v0 + 336));

  }
  swift_willThrow();
  v16 = *(_QWORD *)(v0 + 376);
  v17 = *(_QWORD *)(v0 + 384);
  v18 = *(_QWORD *)(v0 + 368);
  sub_1A5B669D0(v17, *(_QWORD *)(v0 + 232));
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B65E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v5 = (_QWORD *)*v4;
  v5[54] = a1;
  v5[55] = a2;
  v5[56] = a3;
  v5[57] = v3;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5B65E80()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v37;
  void *v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;

  objc_opt_self();
  v1 = swift_dynamicCastObjCClass();
  v2 = *(void **)(v0 + 448);
  if (v1)
  {
    v51 = (id)v1;
    v3 = *(_QWORD *)(v0 + 432);
    v4 = *(_QWORD *)(v0 + 440);
    sub_1A5B66CBC(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 320));
    v5 = v2;
    sub_1A5B66D78(v3, v4);
    v6 = v5;
    sub_1A5B66D78(v3, v4);
    v7 = sub_1A5BC9A4C();
    v8 = sub_1A5BC9DA0();
    v9 = os_log_type_enabled(v7, v8);
    v11 = *(_QWORD *)(v0 + 440);
    v10 = *(void **)(v0 + 448);
    v12 = *(_QWORD *)(v0 + 432);
    v13 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
    if (v9)
    {
      v14 = *(_QWORD *)(v0 + 352);
      v15 = *(_QWORD *)(v0 + 320);
      v49 = *(_QWORD *)(v0 + 240);
      v50 = *(_QWORD *)(v0 + 288);
      v48 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
      v16 = swift_slowAlloc();
      v47 = swift_slowAlloc();
      v53 = v47;
      *(_DWORD *)v16 = 136446722;
      sub_1A5B66CBC(v15, v14);
      sub_1A5BC9EC0();
      swift_bridgeObjectRelease();
      v54 = 0xD000000000000010;
      v55 = 0x80000001A5BD0580;
      swift_bridgeObjectRetain();
      sub_1A5BC9BE4();
      swift_bridgeObjectRelease();
      sub_1A5BC9BE4();
      sub_1A5B66D00(v14);
      *(_QWORD *)(v0 + 144) = sub_1A5B58A30(0xD000000000000010, 0x80000001A5BD0580, &v53);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease();
      sub_1A5B66D00(v15);
      *(_WORD *)(v16 + 12) = 2050;
      v17 = objc_msgSend(v51, sel_statusCode);

      *(_QWORD *)(v0 + 152) = v17;
      sub_1A5BC9E18();

      *(_WORD *)(v16 + 22) = 2080;
      sub_1A5B658F4(v12, v11);
      *(_QWORD *)(v0 + 160) = sub_1A5B58A30(v18, v19, &v53);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease();
      sub_1A5B5D9D4(v12, v11);
      sub_1A5B5D9D4(v12, v11);
      _os_log_impl(&dword_1A5B4D000, v7, v8, "%{public}s Request completed with HTTP status %{public}ld\nwith data: %s", (uint8_t *)v16, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v47, -1, -1);
      MEMORY[0x1A85B2FC0](v16, -1, -1);

      v48(v50, v49);
    }
    else
    {
      v30 = *(_QWORD *)(v0 + 320);
      v31 = *(_QWORD *)(v0 + 288);
      v32 = *(_QWORD *)(v0 + 240);

      sub_1A5B5D9D4(v12, v11);
      sub_1A5B5D9D4(v12, v11);

      sub_1A5B66D00(v30);
      v13(v31, v32);
    }
    v34 = *(_QWORD *)(v0 + 376);
    v33 = *(_QWORD *)(v0 + 384);
    v35 = *(_QWORD *)(v0 + 368);
    sub_1A5B669D0(v33, *(_QWORD *)(v0 + 232));
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD, _QWORD, id))(v0 + 8))(*(_QWORD *)(v0 + 432), *(_QWORD *)(v0 + 440), v51);
  }
  else
  {
    sub_1A5B66CBC(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 312));
    v20 = v2;
    v21 = sub_1A5BC9A4C();
    v22 = sub_1A5BC9D88();
    v23 = os_log_type_enabled(v21, v22);
    v24 = *(void **)(v0 + 448);
    if (v23)
    {
      v25 = *(_QWORD *)(v0 + 352);
      v26 = *(_QWORD *)(v0 + 312);
      v27 = swift_slowAlloc();
      v28 = (_QWORD *)swift_slowAlloc();
      v52 = (id)swift_slowAlloc();
      v53 = (uint64_t)v52;
      *(_DWORD *)v27 = 136446466;
      sub_1A5B66CBC(v26, v25);
      sub_1A5BC9EC0();
      swift_bridgeObjectRelease();
      v54 = 0xD000000000000010;
      v55 = 0x80000001A5BD0580;
      swift_bridgeObjectRetain();
      sub_1A5BC9BE4();
      swift_bridgeObjectRelease();
      sub_1A5BC9BE4();
      sub_1A5B66D00(v25);
      *(_QWORD *)(v0 + 128) = sub_1A5B58A30(0xD000000000000010, 0x80000001A5BD0580, &v53);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease();
      sub_1A5B66D00(v26);
      *(_WORD *)(v27 + 12) = 2112;
      *(_QWORD *)(v0 + 136) = v24;
      v29 = v24;
      sub_1A5BC9E18();
      *v28 = v24;

      _os_log_impl(&dword_1A5B4D000, v21, v22, "%{public}s Invalid response type: %@", (uint8_t *)v27, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v28, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v52, -1, -1);
      MEMORY[0x1A85B2FC0](v27, -1, -1);
    }
    else
    {
      sub_1A5B66D00(*(_QWORD *)(v0 + 312));

    }
    v37 = *(_QWORD *)(v0 + 440);
    v38 = *(void **)(v0 + 448);
    v39 = *(_QWORD *)(v0 + 432);
    v40 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
    v41 = *(_QWORD *)(v0 + 288);
    v42 = *(_QWORD *)(v0 + 240);
    sub_1A5B584A8();
    swift_allocError();
    *v43 = 2;
    swift_willThrow();

    sub_1A5B5D9D4(v39, v37);
    v40(v41, v42);
    v44 = *(_QWORD *)(v0 + 376);
    v45 = *(_QWORD *)(v0 + 384);
    v46 = *(_QWORD *)(v0 + 368);
    sub_1A5B669D0(v45, *(_QWORD *)(v0 + 232));
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v45, v46);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1A5B66644()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22[4];

  v1 = *(void **)(v0 + 456);
  sub_1A5B66CBC(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 304));
  v2 = v1;
  v3 = v1;
  v4 = sub_1A5BC9A4C();
  v5 = sub_1A5BC9D88();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 456);
    v7 = *(_QWORD *)(v0 + 352);
    v8 = *(_QWORD *)(v0 + 304);
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v22[0] = v21;
    *(_DWORD *)v9 = 136446466;
    sub_1A5B66CBC(v8, v7);
    sub_1A5BC9EC0();
    swift_bridgeObjectRelease();
    v22[1] = 0xD000000000000010;
    v22[2] = 0x80000001A5BD0580;
    swift_bridgeObjectRetain();
    sub_1A5BC9BE4();
    swift_bridgeObjectRelease();
    sub_1A5BC9BE4();
    sub_1A5B66D00(v7);
    *(_QWORD *)(v0 + 112) = sub_1A5B58A30(0xD000000000000010, 0x80000001A5BD0580, v22);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    sub_1A5B66D00(v8);
    *(_WORD *)(v9 + 12) = 2114;
    v11 = v6;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 120) = v12;
    sub_1A5BC9E18();
    *v10 = v12;

    _os_log_impl(&dword_1A5B4D000, v4, v5, "%{public}s Error making network request: %{public}@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v21, -1, -1);
    MEMORY[0x1A85B2FC0](v9, -1, -1);
  }
  else
  {
    v13 = *(void **)(v0 + 456);
    sub_1A5B66D00(*(_QWORD *)(v0 + 304));

  }
  v14 = *(void (**)(uint64_t, uint64_t))(v0 + 416);
  v15 = *(_QWORD *)(v0 + 288);
  v16 = *(_QWORD *)(v0 + 240);
  swift_willThrow();
  v14(v15, v16);
  v17 = *(_QWORD *)(v0 + 376);
  v18 = *(_QWORD *)(v0 + 384);
  v19 = *(_QWORD *)(v0 + 368);
  sub_1A5B669D0(v18, *(_QWORD *)(v0 + 232));
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v19);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1A5B669D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v3 = type metadata accessor for NetworkRequest();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v22 - v7;
  v9 = sub_1A5BC9974();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5BC995C();
  sub_1A5BC98D8();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (qword_1ED10FBB8 != -1)
    swift_once();
  v15 = sub_1A5BC9A64();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED10FB98);
  sub_1A5B66CBC(a2, (uint64_t)v8);
  v16 = sub_1A5BC9A4C();
  v17 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v25 = v19;
    *(_DWORD *)v18 = 136446466;
    sub_1A5B66CBC((uint64_t)v8, (uint64_t)v6);
    v23 = 0;
    v24 = 0xE000000000000000;
    sub_1A5BC9EC0();
    swift_bridgeObjectRelease();
    v23 = 0xD000000000000010;
    v24 = 0x80000001A5BD0580;
    swift_bridgeObjectRetain();
    sub_1A5BC9BE4();
    swift_bridgeObjectRelease();
    sub_1A5BC9BE4();
    v20 = v23;
    v21 = v24;
    sub_1A5B66D00((uint64_t)v6);
    v23 = sub_1A5B58A30(v20, v21, &v25);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    sub_1A5B66D00((uint64_t)v8);
    *(_WORD *)(v18 + 12) = 2048;
    v23 = v14;
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v16, v17, "%{public}s Request completed in %f seconds.", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v19, -1, -1);
    MEMORY[0x1A85B2FC0](v18, -1, -1);
  }
  else
  {
    sub_1A5B66D00((uint64_t)v8);
  }

}

uint64_t sub_1A5B66CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NetworkRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5B66D00(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NetworkRequest();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A5B66D3C(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

uint64_t sub_1A5B66D78(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1A5B66DBC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1A5B66DDC(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v5;
  uint64_t result;

  a4();
  v5 = *a1 + 8;
  result = sub_1A5BC9E18();
  *a1 = v5;
  return result;
}

uint64_t sub_1A5B66E2C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

unint64_t sub_1A5B66E54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED10FD48;
  if (!qword_1ED10FD48)
  {
    v1 = sub_1A5BC96D4();
    result = MEMORY[0x1A85B2F18](MEMORY[0x1E0CADF70], v1);
    atomic_store(result, (unint64_t *)&qword_1ED10FD48);
  }
  return result;
}

uint64_t sub_1A5B66E9C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1A5B66EB8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1A5B66EB8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112E0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1A5BC9F8C();
  __break(1u);
  return result;
}

uint64_t sub_1A5B67020(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1A5B670A8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  __int128 v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v8;
    v9 = v8;
    v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
    swift_bridgeObjectRetain();
    v10(a1 + 16, (uint64_t)(a2 + 2), v9);
    v11 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 80) = v11;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 56, (uint64_t)(a2 + 7));
    v12 = *(int *)(a3 + 28);
    v13 = (void *)(a1 + v12);
    v14 = (char *)a2 + v12;
    v15 = sub_1A5BC9974();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v19 = *(int *)(a3 + 32);
    v20 = *(void **)((char *)a2 + v19);
    *(_QWORD *)(a1 + v19) = v20;
    v21 = v20;
  }
  return a1;
}

uint64_t sub_1A5B67200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  __int128 v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a2 + 16;
  v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_bridgeObjectRetain();
  v10(a1 + 16, v7, v9);
  v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 56, a2 + 56);
  v12 = *(int *)(a3 + 28);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_1A5BC9974();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = *(int *)(a3 + 32);
  v19 = *(void **)(a2 + v18);
  *(_QWORD *)(a1 + v18) = v19;
  v20 = v19;
  return a1;
}

_QWORD *sub_1A5B6732C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 2, a2 + 2);
  __swift_assign_boxed_opaque_existential_1(a1 + 7, a2 + 7);
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1A5BC9974();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 32);
  v16 = *(void **)((char *)a1 + v15);
  v17 = *(void **)((char *)a2 + v15);
  *(_QWORD *)((char *)a1 + v15) = v17;
  v18 = v17;

  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t sub_1A5B675F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v8 = *(int *)(a3 + 28);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 72) = v7;
  v11 = sub_1A5BC9974();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 32)) = *(_QWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_1A5B676F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  v8 = *(int *)(a3 + 28);
  v9 = (void *)(a1 + v8);
  v10 = (void *)(a2 + v8);
  v11 = sub_1A5BC9974();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  v17 = *(int *)(a3 + 32);
  v18 = *(void **)(a1 + v17);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);

  return a1;
}

uint64_t sub_1A5B67860()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5B6786C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_1A5B678EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5B678F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_1A5B67970()
{
  unint64_t v0;

  sub_1A5B501D4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1A5B679F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1A5B67A10(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1A5B67A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[24] = a3;
  v4[25] = v3;
  v4[22] = a1;
  v4[23] = a2;
  return swift_task_switch();
}

uint64_t sub_1A5B67A44()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  id v3;
  _QWORD *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v1 = sub_1A5B57E54();
  v2 = sub_1A5B55C6C(0, &qword_1ED10FC60);
  *(_QWORD *)(v0 + 40) = v2;
  *(_QWORD *)(v0 + 48) = &off_1E4F6DE00;
  *(_QWORD *)(v0 + 16) = v1;
  v3 = sub_1A5B57E54();
  *(_QWORD *)(v0 + 80) = &type metadata for URLResolver;
  *(_QWORD *)(v0 + 88) = &off_1E4F6D258;
  v4 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 56) = v4;
  v4[5] = v2;
  v4[6] = &off_1E4F6DE00;
  v4[2] = v3;
  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedServerWithNoUrlCache);
  *(_QWORD *)(v0 + 120) = sub_1A5B55C6C(0, (unint64_t *)&qword_1ED10FF90);
  *(_QWORD *)(v0 + 128) = &off_1E4F6DDF0;
  *(_QWORD *)(v0 + 96) = v5;
  v6 = sub_1A5B57F84();
  v8 = v7;
  type metadata accessor for Config();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 72) = 0u;
  *(_OWORD *)(v9 + 88) = 0u;
  *(_QWORD *)(v9 + 104) = 0;
  sub_1A5B579BC((__int128 *)(v0 + 96), v9 + 32);
  *(_QWORD *)(v9 + 16) = v6;
  *(_QWORD *)(v9 + 24) = v8;
  v4[7] = v9;
  v4[8] = &off_1E4F6DD18;
  *(_QWORD *)(v0 + 160) = &type metadata for GatewayRequestFactory;
  *(_QWORD *)(v0 + 168) = &off_1E4F6C340;
  v10 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 136) = v10;
  v10[6] = &type metadata for SiriAssistantLocale;
  v10[7] = &protocol witness table for SiriAssistantLocale;
  v10[2] = 0x403E000000000000;
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v11;
  *v11 = v0;
  v11[1] = sub_1A5B67C20;
  return sub_1A5B67CFC(*(_QWORD *)(v0 + 176), v0 + 16, v0 + 56, v0 + 136, *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
}

uint64_t sub_1A5B67C20()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 216) = v0;
  swift_task_dealloc();
  __swift_destroy_boxed_opaque_existential_1(v2 + 136);
  if (v0)
    return swift_task_switch();
  __swift_destroy_boxed_opaque_existential_1(v2 + 56);
  __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A5B67CBC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B67CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[32] = a6;
  v7[33] = v6;
  v7[30] = a4;
  v7[31] = a5;
  v7[28] = a2;
  v7[29] = a3;
  v7[27] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FB58);
  v7[34] = swift_task_alloc();
  v8 = sub_1A5BC971C();
  v7[35] = v8;
  v7[36] = *(_QWORD *)(v8 - 8);
  v7[37] = swift_task_alloc();
  v9 = sub_1A5BC96D4();
  v7[38] = v9;
  v7[39] = *(_QWORD *)(v9 - 8);
  v7[40] = swift_task_alloc();
  v7[41] = swift_task_alloc();
  v10 = sub_1A5BC9878();
  v7[42] = v10;
  v7[43] = *(_QWORD *)(v10 - 8);
  v7[44] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5B67DEC()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 232), *(_QWORD *)(*(_QWORD *)(v0 + 232) + 24));
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 360) = v1;
  *v1 = v0;
  v1[1] = sub_1A5B67E4C;
  return sub_1A5B4FA80(*(_QWORD *)(v0 + 352), *(_QWORD *)(v0 + 264));
}

uint64_t sub_1A5B67E4C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 368) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

void sub_1A5B67EB0()
{
  uint64_t v0;

  sub_1A5B66D3C(*(_QWORD *)(v0 + 264), v0 + 16);
  __asm { BR              X10 }
}

uint64_t sub_1A5B67F10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  _QWORD *v37;
  _QWORD *v39;
  void *v40;
  uint64_t (*v41)(uint64_t, uint64_t);

  v3 = *(_QWORD **)(v0 + 224);
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
  *(_QWORD *)(v0 + 376) = v6;
  v7 = *(_QWORD *)(v0 + 328);
  v9 = *(_QWORD *)(v0 + 256);
  v8 = *(_QWORD *)(v0 + 264);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 240), *(_QWORD *)(*(_QWORD *)(v0 + 240) + 24));
  sub_1A5B82700(v6, v9, v7);
  sub_1A5B66D3C(v8, v2);
  sub_1A5BC9674();
  sub_1A5B66D3C(v8, v1);
  if (*(_BYTE *)(v0 + 128) != 2 || (v10 = *(_QWORD *)(v0 + 120)) == 0)
  {
LABEL_9:
    v15 = 0;
    v17 = 0xF000000000000000;
    goto LABEL_10;
  }
  v40 = *(void **)(v0 + 368);
  v12 = *(_QWORD *)(v0 + 288);
  v11 = *(_QWORD *)(v0 + 296);
  v13 = *(_QWORD *)(v0 + 280);
  v14 = *(_QWORD *)(v0 + 112);
  sub_1A5BC974C();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1A5BC9740();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v11, *MEMORY[0x1E0CAE150], v13);
  sub_1A5BC9728();
  *(_QWORD *)(v0 + 184) = v14;
  *(_QWORD *)(v0 + 192) = v10;
  sub_1A5B6F954();
  v15 = sub_1A5BC9734();
  v17 = v16;
  swift_release();
  swift_bridgeObjectRelease();
  if (v40)
  {
    if (qword_1ED10FB68 != -1)
      swift_once();
    v18 = sub_1A5BC9A64();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED10FBE8);
    v19 = v40;
    v20 = v40;
    v21 = sub_1A5BC9A4C();
    v22 = sub_1A5BC9D88();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v23 = 138412290;
      v25 = v40;
      v26 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 208) = v26;
      sub_1A5BC9E18();
      *v24 = v26;

      _os_log_impl(&dword_1A5B4D000, v21, v22, "Unable to encode ticket request object. Request will still be made: %@", v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v24, -1, -1);
      MEMORY[0x1A85B2FC0](v23, -1, -1);

    }
    else
    {

    }
    goto LABEL_9;
  }
LABEL_10:
  *(_QWORD *)(v0 + 384) = v15;
  *(_QWORD *)(v0 + 392) = v17;
  v27 = *(_QWORD *)(v0 + 328);
  v28 = *(_QWORD **)(v0 + 224);
  sub_1A5B6F940(v15, v17);
  sub_1A5BC96C8();
  v29 = v28[3];
  v30 = v28[4];
  __swift_project_boxed_opaque_existential_1(v28, v29);
  if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 104))(v27, v29, v30) & 1) != 0 && v6)
  {
    v31 = qword_1ED10FBE0;
    v32 = v6;
    if (v31 != -1)
      swift_once();
    v33 = sub_1A5BC9A64();
    __swift_project_value_buffer(v33, (uint64_t)qword_1ED10FBC0);
    v34 = sub_1A5BC9A4C();
    v35 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v36 = 0;
      _os_log_impl(&dword_1A5B4D000, v34, v35, "Auth header is missing, will attempt to renew credentials", v36, 2u);
      MEMORY[0x1A85B2FC0](v36, -1, -1);
    }

    v41 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EE7FA538 + dword_1EE7FA538);
    v37 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 400) = v37;
    *v37 = v0;
    v37[1] = sub_1A5B6852C;
    return v41((uint64_t)v32, *(_QWORD *)(v0 + 224));
  }
  else
  {
    v39 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 416) = v39;
    *v39 = v0;
    v39[1] = sub_1A5B68734;
    return sub_1A5B69070(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 248));
  }
}

uint64_t sub_1A5B684BC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B6852C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 408) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5B68590()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;

  v1 = *(void **)(v0 + 376);
  v3 = *(_QWORD *)(v0 + 320);
  v2 = *(_QWORD *)(v0 + 328);
  v4 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 312);
  v6 = *(_QWORD *)(v0 + 256);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 240), *(_QWORD *)(*(_QWORD *)(v0 + 240) + 24));
  v7 = v1;
  sub_1A5B82700(v1, v6, v3);

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(v2, v3, v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 416) = v8;
  *v8 = v0;
  v8[1] = sub_1A5B68734;
  return sub_1A5B69070(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 248));
}

uint64_t sub_1A5B6866C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 392);
  v3 = *(void **)(v0 + 376);
  v5 = *(_QWORD *)(v0 + 344);
  v4 = *(_QWORD *)(v0 + 352);
  v7 = *(_QWORD *)(v0 + 328);
  v6 = *(_QWORD *)(v0 + 336);
  v8 = *(_QWORD *)(v0 + 304);
  v9 = *(_QWORD *)(v0 + 312);

  sub_1A5B5D9C0(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B68734()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 424) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5B68798()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = v0[34];
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v0[39] + 48))(v1, 1, v0[38]) != 1)
  {
    v23 = v0 + 34;
    v18 = (void *)v0[47];
    sub_1A5B5D9C0(v0[48], v0[49]);
    v24 = 4;
LABEL_15:

    v33 = *v23;
    v34 = v0[41];
    v35 = v0[39];
    v36 = v0[38];
    v37 = v0[27];
    (*(void (**)(_QWORD, _QWORD))(v0[43] + 8))(v0[44], v0[42]);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 8 * v24))(v37, v33, v36);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v32 = (uint64_t (*)(void))v0[1];
    return v32();
  }
  sub_1A5B4FBE8(v1, (uint64_t *)&unk_1ED10FB58);
  if (qword_1ED10FBE0 != -1)
    swift_once();
  v2 = sub_1A5BC9A64();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED10FBC0);
  v3 = sub_1A5BC9A4C();
  v4 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v42 = v6;
    *(_DWORD *)v5 = 136315138;
    swift_beginAccess();
    v7 = sub_1A5BC9680();
    swift_endAccess();
    if (!v7)
      sub_1A5BA08D4(MEMORY[0x1E0DEE9D8]);
    v8 = sub_1A5BC9AF4();
    v10 = v9;
    swift_bridgeObjectRelease();
    v0[25] = sub_1A5B58A30(v8, v10, &v42);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A5B4D000, v3, v4, "Unable to sign request. Sending with headers: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v6, -1, -1);
    MEMORY[0x1A85B2FC0](v5, -1, -1);
  }

  if (!v0[47])
  {
    v26 = v0[48];
    v25 = v0[49];
    v28 = v0[43];
    v27 = v0[44];
    v29 = v0[42];
    v41 = v0[41];
    v31 = v0[38];
    v30 = v0[39];
    sub_1A5B68C48(3);
    swift_willThrow();
    sub_1A5B5D9C0(v26, v25);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v41, v31);
    goto LABEL_13;
  }
  v11 = v0[41];
  v12 = (_QWORD *)v0[28];
  v13 = v12[3];
  v14 = v12[4];
  __swift_project_boxed_opaque_existential_1(v12, v13);
  swift_beginAccess();
  v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 104))(v11, v13, v14);
  v17 = v0[48];
  v16 = v0[49];
  v18 = (void *)v0[47];
  if ((v15 & 1) == 0)
  {
    v23 = v0 + 41;
    sub_1A5B5D9C0(v0[48], v0[49]);
    v24 = 2;
    goto LABEL_15;
  }
  v20 = v0[43];
  v19 = v0[44];
  v21 = v0[42];
  v22 = v0[39];
  v39 = v0[38];
  v40 = v0[41];
  sub_1A5B68C48(13);
  swift_willThrow();

  sub_1A5B5D9C0(v17, v16);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v40, v39);
LABEL_13:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_1A5B68B8C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v0 + 392);
  v4 = *(_QWORD *)(v0 + 344);
  v3 = *(_QWORD *)(v0 + 352);
  v6 = *(_QWORD *)(v0 + 328);
  v5 = *(_QWORD *)(v0 + 336);
  v7 = *(_QWORD *)(v0 + 304);
  v8 = *(_QWORD *)(v0 + 312);

  sub_1A5B5D9C0(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1A5B68C48(char a1)
{
  uint64_t v1;
  void *v2;
  _BYTE *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t inited;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  id v16;

  sub_1A5B584A8();
  v1 = sub_1A5BCA0A0();
  if (v1)
  {
    v2 = (void *)v1;
  }
  else
  {
    v2 = (void *)swift_allocError();
    *v3 = a1;
  }
  v4 = (void *)sub_1A5BC9824();

  v5 = objc_msgSend(v4, sel_domain);
  sub_1A5BC9B60();

  v6 = objc_msgSend(v4, sel_code);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FCE8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A5BCC560;
  *(_QWORD *)(inited + 32) = sub_1A5BC9B60();
  *(_QWORD *)(inited + 40) = v8;
  v9 = objc_msgSend(v4, sel_localizedDescription);
  v10 = sub_1A5BC9B60();
  v12 = v11;

  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v10;
  *(_QWORD *)(inited + 56) = v12;
  sub_1A5B5AA50(inited);
  v13 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
  v14 = (void *)sub_1A5BC9B3C();
  swift_bridgeObjectRelease();
  v15 = (void *)sub_1A5BC9ADC();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v13, sel_initWithDomain_code_userInfo_, v14, v6, v15);

  return v16;
}

id sub_1A5B68E28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  uint64_t inited;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  _BYTE v21[80];

  v1 = type metadata accessor for InternalError();
  MEMORY[0x1E0C80A78](v1);
  v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1A5B6F998(v0, (uint64_t)v3);
  sub_1A5B50E80(&qword_1EE7FA518, (uint64_t (*)(uint64_t))type metadata accessor for InternalError, (uint64_t)&unk_1A5BCDE78);
  v4 = sub_1A5BCA0A0();
  if (v4)
  {
    v5 = (void *)v4;
    sub_1A5B542D4((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for InternalError);
  }
  else
  {
    v5 = (void *)swift_allocError();
    sub_1A5B6F9DC((uint64_t)v3, v6);
  }
  v7 = (void *)sub_1A5BC9824();

  v8 = objc_msgSend(v7, sel_domain);
  sub_1A5BC9B60();

  v9 = objc_msgSend(v7, sel_code);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FCE8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A5BCC560;
  *(_QWORD *)(inited + 32) = sub_1A5BC9B60();
  *(_QWORD *)(inited + 40) = v11;
  v12 = objc_msgSend(v7, sel_localizedDescription);
  v13 = sub_1A5BC9B60();
  v15 = v14;

  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v13;
  *(_QWORD *)(inited + 56) = v15;
  sub_1A5B5AA50(inited);
  v16 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
  v17 = (void *)sub_1A5BC9B3C();
  swift_bridgeObjectRelease();
  v18 = (void *)sub_1A5BC9ADC();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v16, sel_initWithDomain_code_userInfo_, v17, v9, v18);

  return v19;
}

uint64_t sub_1A5B69070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[11] = a4;
  v5[12] = a5;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FB58);
  v5[13] = swift_task_alloc();
  v6 = sub_1A5BC96D4();
  v5[14] = v6;
  v5[15] = *(_QWORD *)(v6 - 8);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5B6910C()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 96), *(_QWORD *)(*(_QWORD *)(v0 + 96) + 24));
  *(_QWORD *)(v0 + 40) = &type metadata for BAASigningEnvironment;
  *(_QWORD *)(v0 + 48) = &off_1E4F70778;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v1;
  *v1 = v0;
  v1[1] = sub_1A5B6918C;
  return sub_1A5BC3FF8(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 72));
}

uint64_t sub_1A5B6918C()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)

  else
    __swift_destroy_boxed_opaque_existential_1(v2 + 16);
  return swift_task_switch();
}

uint64_t sub_1A5B691FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  void (*v6)(_QWORD, _QWORD, _QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(void);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD, _QWORD, _QWORD);
  uint64_t v37;

  v1 = v0[14];
  v2 = v0[15];
  v3 = v0[13];
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  v4(v3, 0, 1, v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1A5B4FBE8(v0[13], (uint64_t *)&unk_1ED10FB58);
    v5 = 1;
LABEL_16:
    v4(v0[8], v5, 1, v0[14]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v31 = (uint64_t (*)(void))v0[1];
    return v31();
  }
  v6 = *(void (**)(_QWORD, _QWORD, _QWORD))(v0[15] + 32);
  v6(v0[17], v0[13], v0[14]);
  if (qword_1ED10FBE0 != -1)
    swift_once();
  v8 = v0[16];
  v7 = v0[17];
  v10 = v0[14];
  v9 = v0[15];
  v11 = sub_1A5BC9A64();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED10FBC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v7, v10);
  v12 = sub_1A5BC9A4C();
  v13 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v37 = v15;
    *(_DWORD *)v14 = 136315138;
    v36 = v6;
    v35 = v15;
    if (!sub_1A5BC9680())
      sub_1A5BA08D4(MEMORY[0x1E0DEE9D8]);
    v16 = v0[15];
    v33 = v0[14];
    v34 = v0[16];
    v17 = sub_1A5BC9AF4();
    v19 = v18;
    swift_bridgeObjectRelease();
    v0[7] = sub_1A5B58A30(v17, v19, &v37);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    v20 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v20(v34, v33);
    _os_log_impl(&dword_1A5B4D000, v12, v13, "Signed request headers: %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v35, -1, -1);
    MEMORY[0x1A85B2FC0](v14, -1, -1);

    v6 = v36;
  }
  else
  {
    v20 = *(void (**)(uint64_t, uint64_t))(v0[15] + 8);
    v20(v0[16], v0[14]);

  }
  v21 = v0[17];
  v23 = v0[10];
  v22 = (_QWORD *)v0[11];
  v24 = v22[3];
  v25 = v22[4];
  __swift_project_boxed_opaque_existential_1(v22, v24);
  if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 104))(v21, v24, v25) & 1) == 0 || !v23)
  {
    v6(v0[8], v0[17], v0[14]);
    v5 = 0;
    goto LABEL_16;
  }
  v26 = sub_1A5BC9A4C();
  v27 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_1A5B4D000, v26, v27, "Missing Authorization header. Unable to proceed with request", v28, 2u);
    MEMORY[0x1A85B2FC0](v28, -1, -1);
  }
  v29 = v0[17];
  v30 = v0[14];

  sub_1A5B68C48(13);
  swift_willThrow();
  v20(v29, v30);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1A5B695AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  v4(v3, 1, 1, v1);
  sub_1A5B4FBE8(*(_QWORD *)(v0 + 104), (uint64_t *)&unk_1ED10FB58);
  v4(*(_QWORD *)(v0 + 64), 1, 1, *(_QWORD *)(v0 + 112));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1A5B69648()
{
  uint64_t v0;
  _QWORD v1[4];

  sub_1A5B66D3C(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1A5B696A4()
{
  uint64_t v0;

  sub_1A5BC9EC0();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  sub_1A5BC9BE4();
  return v0 + 3;
}

void sub_1A5B697C8()
{
  uint64_t v0;
  _BYTE v1[40];

  sub_1A5B66D3C(v0, (uint64_t)v1);
  sub_1A5B69648();
}

id sub_1A5B697FC()
{
  id result;

  result = sub_1A5BC3D90();
  qword_1EE7FA4E0 = (uint64_t)result;
  return result;
}

uint64_t sub_1A5B69818(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  BOOL v41;
  uint64_t v42;
  uint64_t ObjectType;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[2];
  char v56;
  uint64_t v57;

  v53 = a4;
  v54 = a5;
  v51 = a2;
  v52 = a3;
  v7 = sub_1A5BC9974();
  v8 = *(_QWORD **)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v47 = (char *)&v46 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v14 = MEMORY[0x1E0C80A78](v13);
  v49 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v46 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v46 - v19;
  v21 = v7;
  v50 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v8[7];
  v50((char *)&v46 - v19, 1, 1, v7);
  v22 = (void *)sub_1A5BC9B3C();
  v23 = objc_msgSend(a1, sel_valueForHTTPHeaderField_, v22);

  if (!v23)
    goto LABEL_24;
  v48 = v5;
  v24 = sub_1A5BC9B60();
  v26 = v25;
  if (qword_1EE7FA200 != -1)
    swift_once();
  v27 = objc_msgSend((id)qword_1EE7FA4E0, sel_dateFromString_, v23);

  if (!v27)
  {
    v34 = v21;
    v37 = v21;
    v32 = v50;
    v50(v18, 1, 1, v37);
    goto LABEL_8;
  }
  sub_1A5BC9950();

  v28 = (void (*)(char *, char *, uint64_t))v8[4];
  v29 = v11;
  v30 = v21;
  v28(v18, v29, v21);
  v31 = v21;
  v32 = v50;
  v50(v18, 0, 1, v31);
  v33 = (unsigned int (*)(char *, uint64_t, uint64_t))v8[6];
  v34 = v30;
  if (v33(v18, 1, v30) == 1)
  {
LABEL_8:
    v36 = sub_1A5B4FBE8((uint64_t)v18, &qword_1ED111280);
    goto LABEL_9;
  }
  sub_1A5B4FBE8((uint64_t)v20, &qword_1ED111280);
  v35 = v47;
  v28(v47, v18, v34);
  v28(v20, v35, v34);
  v36 = ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v32)(v20, 0, 1, v34);
LABEL_9:
  v57 = 0;
  v38 = MEMORY[0x1E0C80A78](v36);
  *(&v46 - 2) = (uint64_t)&v57;
  if ((v26 & 0x1000000000000000) != 0 || !(v26 & 0x2000000000000000 | v24 & 0x1000000000000000))
  {
    sub_1A5BC9EB4();
  }
  else
  {
    MEMORY[0x1E0C80A78](v38);
    *(&v46 - 2) = (uint64_t)sub_1A5B6F840;
    *(&v46 - 1) = v39;
    if ((v26 & 0x2000000000000000) != 0)
    {
      v55[0] = v24;
      v55[1] = v26 & 0xFFFFFFFFFFFFFFLL;
      v41 = (v24 > 0x20u || ((0x100003E01uLL >> v24) & 1) == 0)
         && (v40 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
         && *v40 == 0;
      v56 = v41;
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
    if ((v24 & 0x1000000000000000) != 0)
    {
      ((void (*)(_QWORD *__return_ptr, uint64_t))sub_1A5B6F840)(v55, (v26 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else
    {
      v45 = sub_1A5BC9EFC();
      ((void (*)(_QWORD *__return_ptr, uint64_t))*(&v46 - 2))(v55, v45);
    }
    v56 = v55[0];
  }
  swift_bridgeObjectRelease();
LABEL_22:
  if ((v56 & 1) != 0)
  {
    v42 = (uint64_t)v49;
    sub_1A5BC9920();
    sub_1A5B4FBE8((uint64_t)v20, &qword_1ED111280);
    v32((char *)v42, 0, 1, v34);
    sub_1A5B6F738(v42, (uint64_t)v20);
  }
LABEL_24:
  ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v54 + 16))(v20, v51, v52, ObjectType);
  return sub_1A5B4FBE8((uint64_t)v20, &qword_1ED111280);
}

uint64_t sub_1A5B69CA8()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  __int128 v6;
  uint64_t v7;
  _UNKNOWN **v8;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedServerWithNoUrlCache);
  v7 = sub_1A5B55C6C(0, (unint64_t *)&qword_1ED10FF90);
  v8 = &off_1E4F6DDF0;
  *(_QWORD *)&v6 = v0;
  v1 = sub_1A5B57F84();
  v3 = v2;
  type metadata accessor for Config();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(_QWORD *)(v4 + 104) = 0;
  result = sub_1A5B579BC(&v6, v4 + 32);
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v3;
  qword_1ED10FE88 = v4;
  return result;
}

uint64_t sub_1A5B69D68(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[15] = a1;
  v2[16] = v1;
  v3 = sub_1A5BC9974();
  v2[17] = v3;
  v2[18] = *(_QWORD *)(v3 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = type metadata accessor for InternalError();
  v2[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v2[22] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1A5B69E10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 120);
  v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 176);
    v4 = *(_QWORD *)(v0 + 136);
    v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 56);
    *(_QWORD *)(v0 + 184) = v5;
    v5(v3, 1, 1, v4);
    if (v2 < 1)
    {
      v9 = *(_QWORD *)(v0 + 176);
      sub_1A5B68C48(8);
      swift_willThrow();
      sub_1A5B4FBE8(v9, &qword_1ED111280);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      (*(void (**)(void))(v0 + 8))();
    }
    else
    {
      v6 = *(_QWORD *)(v0 + 128);
      *(_QWORD *)(v0 + 192) = 0;
      *(_QWORD *)(v0 + 200) = v2;
      v7 = *(_QWORD *)(v6 + 120);
      v10 = (void (*)(uint64_t, uint64_t))((char *)&dword_1EE7FA500 + dword_1EE7FA500);
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v8;
      *v8 = v0;
      v8[1] = sub_1A5B69F20;
      v10(*(_QWORD *)(v0 + 176), v7);
    }
  }
}

uint64_t sub_1A5B69F20(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 216) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 224) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B69F94()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void (*v6)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);

  v1 = *(void **)(v0 + 216);
  *(_QWORD *)(v0 + 88) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 168);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = *(void **)(v0 + 216);
      v6 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 184);
      v5 = *(void **)(v0 + 192);
      v7 = *(_QWORD *)(v0 + 176);
      v9 = *(_QWORD *)(v0 + 144);
      v8 = *(_QWORD *)(v0 + 152);
      v10 = *(_QWORD *)(v0 + 136);
      sub_1A5B4FBE8(v7, &qword_1ED111280);

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v8, v3, v10);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v8, v10);
      v6(v7, 0, 1, v10);
      v11 = sub_1A5B68C48(8);

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
      goto LABEL_16;
    }
    sub_1A5B542D4(v3, (uint64_t (*)(_QWORD))type metadata accessor for InternalError);
  }
  v12 = *(void **)(v0 + 216);

  swift_getErrorValue();
  v13 = *(_QWORD *)(v0 + 72);
  v14 = v12;
  v15 = sub_1A5B5A758(v13);
  v16 = objc_msgSend(v15, sel_domain);

  v17 = sub_1A5BC9B60();
  v19 = v18;

  if (v17 == 0xD00000000000001ELL && v19 == 0x80000001A5BD0660)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = sub_1A5BCA0B8();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      swift_getErrorValue();
      v26 = sub_1A5B5A758(*(_QWORD *)(v0 + 48));
      v27 = objc_msgSend(v26, sel_domain);

      v28 = sub_1A5BC9B60();
      v30 = v29;

      v31 = *(void **)(v0 + 216);
      v32 = *(void **)(v0 + 192);
      v33 = *(_QWORD *)(v0 + 176);
      if (v28 == 0xD00000000000001DLL && v30 == 0x80000001A5BD0680)
      {
        swift_bridgeObjectRelease();

        sub_1A5B4FBE8(v33, &qword_1ED111280);
      }
      else
      {
        v34 = sub_1A5BCA0B8();
        swift_bridgeObjectRelease();

        sub_1A5B4FBE8(v33, &qword_1ED111280);
        if ((v34 & 1) == 0)
          goto LABEL_19;
      }
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 184))(*(_QWORD *)(v0 + 176), 1, 1, *(_QWORD *)(v0 + 136));
      v11 = *(id *)(v0 + 216);
      goto LABEL_16;
    }
  }
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 184);
  v21 = *(void **)(v0 + 192);
  v23 = *(_QWORD *)(v0 + 176);
  v24 = *(_QWORD *)(v0 + 136);

  swift_getErrorValue();
  v25 = sub_1A5B91D28(*(_QWORD *)(v0 + 24));

  sub_1A5B4FBE8(v23, &qword_1ED111280);
  v22(v23, 1, 1, v24);
  v11 = *(id *)(v0 + 216);
  if (v25)
  {
LABEL_16:
    v35 = *(_QWORD *)(v0 + 200) - 1;
    if (*(_QWORD *)(v0 + 200) != 1)
    {
      *(_QWORD *)(v0 + 192) = v11;
      *(_QWORD *)(v0 + 200) = v35;
      v36 = *(_QWORD *)(*(_QWORD *)(v0 + 128) + 120);
      v40 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EE7FA500 + dword_1EE7FA500);
      v37 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v37;
      *v37 = v0;
      v37[1] = sub_1A5B69F20;
      return v40(*(_QWORD *)(v0 + 176), v36);
    }
  }
  v39 = *(_QWORD *)(v0 + 176);
  swift_willThrow();
  sub_1A5B4FBE8(v39, &qword_1ED111280);
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B6A3E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[15] = a1;
  v2[16] = v1;
  v3 = sub_1A5BC9974();
  v2[17] = v3;
  v2[18] = *(_QWORD *)(v3 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = type metadata accessor for InternalError();
  v2[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v2[22] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1A5B6A488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 120);
  v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 176);
    v4 = *(_QWORD *)(v0 + 136);
    v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 56);
    *(_QWORD *)(v0 + 184) = v5;
    v5(v3, 1, 1, v4);
    if (v2 < 1)
    {
      v9 = *(_QWORD *)(v0 + 176);
      sub_1A5B68C48(8);
      swift_willThrow();
      sub_1A5B4FBE8(v9, &qword_1ED111280);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      (*(void (**)(_QWORD))(v0 + 8))(0);
    }
    else
    {
      v6 = *(_QWORD *)(v0 + 128);
      *(_QWORD *)(v0 + 192) = 0;
      *(_QWORD *)(v0 + 200) = v2;
      v7 = *(_QWORD *)(v6 + 120);
      v10 = (void (*)(uint64_t, uint64_t))((char *)&dword_1EE7FA5D8 + dword_1EE7FA5D8);
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v8;
      *v8 = v0;
      v8[1] = sub_1A5B6A59C;
      v10(*(_QWORD *)(v0 + 176), v7);
    }
  }
}

uint64_t sub_1A5B6A59C(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 216) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 224) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_1A5B6A614()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);

  sub_1A5B4FBE8(v1, &qword_1ED111280);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 224));
}

uint64_t sub_1A5B6A684()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void (*v6)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);

  v1 = *(void **)(v0 + 216);
  *(_QWORD *)(v0 + 88) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 168);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = *(void **)(v0 + 216);
      v6 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 184);
      v5 = *(void **)(v0 + 192);
      v7 = *(_QWORD *)(v0 + 176);
      v9 = *(_QWORD *)(v0 + 144);
      v8 = *(_QWORD *)(v0 + 152);
      v10 = *(_QWORD *)(v0 + 136);
      sub_1A5B4FBE8(v7, &qword_1ED111280);

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v8, v3, v10);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v8, v10);
      v6(v7, 0, 1, v10);
      v11 = sub_1A5B68C48(8);

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
      goto LABEL_16;
    }
    sub_1A5B542D4(v3, (uint64_t (*)(_QWORD))type metadata accessor for InternalError);
  }
  v12 = *(void **)(v0 + 216);

  swift_getErrorValue();
  v13 = *(_QWORD *)(v0 + 72);
  v14 = v12;
  v15 = sub_1A5B5A758(v13);
  v16 = objc_msgSend(v15, sel_domain);

  v17 = sub_1A5BC9B60();
  v19 = v18;

  if (v17 == 0xD00000000000001ELL && v19 == 0x80000001A5BD0660)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = sub_1A5BCA0B8();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      swift_getErrorValue();
      v26 = sub_1A5B5A758(*(_QWORD *)(v0 + 48));
      v27 = objc_msgSend(v26, sel_domain);

      v28 = sub_1A5BC9B60();
      v30 = v29;

      v31 = *(void **)(v0 + 216);
      v32 = *(void **)(v0 + 192);
      v33 = *(_QWORD *)(v0 + 176);
      if (v28 == 0xD00000000000001DLL && v30 == 0x80000001A5BD0680)
      {
        swift_bridgeObjectRelease();

        sub_1A5B4FBE8(v33, &qword_1ED111280);
      }
      else
      {
        v34 = sub_1A5BCA0B8();
        swift_bridgeObjectRelease();

        sub_1A5B4FBE8(v33, &qword_1ED111280);
        if ((v34 & 1) == 0)
          goto LABEL_19;
      }
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 184))(*(_QWORD *)(v0 + 176), 1, 1, *(_QWORD *)(v0 + 136));
      v11 = *(id *)(v0 + 216);
      goto LABEL_16;
    }
  }
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 184);
  v21 = *(void **)(v0 + 192);
  v23 = *(_QWORD *)(v0 + 176);
  v24 = *(_QWORD *)(v0 + 136);

  swift_getErrorValue();
  v25 = sub_1A5B91D28(*(_QWORD *)(v0 + 24));

  sub_1A5B4FBE8(v23, &qword_1ED111280);
  v22(v23, 1, 1, v24);
  v11 = *(id *)(v0 + 216);
  if (v25)
  {
LABEL_16:
    v35 = *(_QWORD *)(v0 + 200) - 1;
    if (*(_QWORD *)(v0 + 200) != 1)
    {
      *(_QWORD *)(v0 + 192) = v11;
      *(_QWORD *)(v0 + 200) = v35;
      v36 = *(_QWORD *)(*(_QWORD *)(v0 + 128) + 120);
      v40 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EE7FA5D8 + dword_1EE7FA5D8);
      v37 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v37;
      *v37 = v0;
      v37[1] = sub_1A5B6A59C;
      return v40(*(_QWORD *)(v0 + 176), v36);
    }
  }
  v39 = *(_QWORD *)(v0 + 176);
  swift_willThrow();
  sub_1A5B4FBE8(v39, &qword_1ED111280);
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1A5B6AAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3[21] = a2;
  v3[22] = v2;
  v3[20] = a1;
  v4 = sub_1A5BC9974();
  v3[23] = v4;
  v3[24] = *(_QWORD *)(v4 - 8);
  v3[25] = swift_task_alloc();
  v3[26] = type metadata accessor for InternalError();
  v3[27] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v3[28] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1A5B6AB80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 168);
  v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 224);
    v4 = *(_QWORD *)(v0 + 184);
    v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 192) + 56);
    *(_QWORD *)(v0 + 232) = v5;
    v5(v3, 1, 1, v4);
    if (v2 < 1)
    {
      v9 = *(_QWORD *)(v0 + 224);
      sub_1A5B68C48(8);
      swift_willThrow();
      sub_1A5B4FBE8(v9, &qword_1ED111280);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      (*(void (**)(void))(v0 + 8))();
    }
    else
    {
      v6 = *(_QWORD *)(v0 + 176);
      *(_QWORD *)(v0 + 240) = 0;
      *(_QWORD *)(v0 + 248) = v2;
      v7 = *(_QWORD *)(v6 + 120);
      v10 = (void (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EE7FA590 + dword_1EE7FA590);
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 256) = v8;
      *v8 = v0;
      v8[1] = sub_1A5B6AC98;
      v10(v0 + 16, *(_QWORD *)(v0 + 224), v7);
    }
  }
}

uint64_t sub_1A5B6AC98()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5B6ACFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 160);

  sub_1A5B4FBE8(v1, &qword_1ED111280);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v2 + 16) = v4;
  *(_QWORD *)(v2 + 32) = v3;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B6AD7C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void (*v6)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t, uint64_t);

  v1 = *(void **)(v0 + 264);
  *(_QWORD *)(v0 + 136) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 216);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = *(void **)(v0 + 264);
      v6 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 232);
      v5 = *(void **)(v0 + 240);
      v7 = *(_QWORD *)(v0 + 224);
      v9 = *(_QWORD *)(v0 + 192);
      v8 = *(_QWORD *)(v0 + 200);
      v10 = *(_QWORD *)(v0 + 184);
      sub_1A5B4FBE8(v7, &qword_1ED111280);

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v8, v3, v10);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v8, v10);
      v6(v7, 0, 1, v10);
      v11 = sub_1A5B68C48(8);

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
      goto LABEL_16;
    }
    sub_1A5B542D4(v3, (uint64_t (*)(_QWORD))type metadata accessor for InternalError);
  }
  v12 = *(void **)(v0 + 264);

  swift_getErrorValue();
  v13 = *(_QWORD *)(v0 + 88);
  v14 = v12;
  v15 = sub_1A5B5A758(v13);
  v16 = objc_msgSend(v15, sel_domain);

  v17 = sub_1A5BC9B60();
  v19 = v18;

  if (v17 == 0xD00000000000001ELL && v19 == 0x80000001A5BD0660)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = sub_1A5BCA0B8();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      swift_getErrorValue();
      v26 = sub_1A5B5A758(*(_QWORD *)(v0 + 112));
      v27 = objc_msgSend(v26, sel_domain);

      v28 = sub_1A5BC9B60();
      v30 = v29;

      v31 = *(void **)(v0 + 264);
      v32 = *(void **)(v0 + 240);
      v33 = *(_QWORD *)(v0 + 224);
      if (v28 == 0xD00000000000001DLL && v30 == 0x80000001A5BD0680)
      {
        swift_bridgeObjectRelease();

        sub_1A5B4FBE8(v33, &qword_1ED111280);
      }
      else
      {
        v34 = sub_1A5BCA0B8();
        swift_bridgeObjectRelease();

        sub_1A5B4FBE8(v33, &qword_1ED111280);
        if ((v34 & 1) == 0)
          goto LABEL_19;
      }
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 232))(*(_QWORD *)(v0 + 224), 1, 1, *(_QWORD *)(v0 + 184));
      v11 = *(id *)(v0 + 264);
      goto LABEL_16;
    }
  }
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 232);
  v21 = *(void **)(v0 + 240);
  v23 = *(_QWORD *)(v0 + 224);
  v24 = *(_QWORD *)(v0 + 184);

  swift_getErrorValue();
  v25 = sub_1A5B91D28(*(_QWORD *)(v0 + 64));

  sub_1A5B4FBE8(v23, &qword_1ED111280);
  v22(v23, 1, 1, v24);
  v11 = *(id *)(v0 + 264);
  if (v25)
  {
LABEL_16:
    v35 = *(_QWORD *)(v0 + 248) - 1;
    if (*(_QWORD *)(v0 + 248) != 1)
    {
      *(_QWORD *)(v0 + 240) = v11;
      *(_QWORD *)(v0 + 248) = v35;
      v36 = *(_QWORD *)(*(_QWORD *)(v0 + 176) + 120);
      v40 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EE7FA590 + dword_1EE7FA590);
      v37 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 256) = v37;
      *v37 = v0;
      v37[1] = sub_1A5B6AC98;
      return v40(v0 + 16, *(_QWORD *)(v0 + 224), v36);
    }
  }
  v39 = *(_QWORD *)(v0 + 224);
  swift_willThrow();
  sub_1A5B4FBE8(v39, &qword_1ED111280);
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B6B1D0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[15] = a1;
  v2[16] = v1;
  v3 = sub_1A5BC9974();
  v2[17] = v3;
  v2[18] = *(_QWORD *)(v3 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = type metadata accessor for InternalError();
  v2[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v2[22] = swift_task_alloc();
  return swift_task_switch();
}

void sub_1A5B6B278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 120);
  v2 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 176);
    v4 = *(_QWORD *)(v0 + 136);
    v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 56);
    *(_QWORD *)(v0 + 184) = v5;
    v5(v3, 1, 1, v4);
    if (v2 < 1)
    {
      v9 = *(_QWORD *)(v0 + 176);
      sub_1A5B68C48(8);
      swift_willThrow();
      sub_1A5B4FBE8(v9, &qword_1ED111280);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      (*(void (**)(void))(v0 + 8))();
    }
    else
    {
      v6 = *(_QWORD *)(v0 + 128);
      *(_QWORD *)(v0 + 192) = 0;
      *(_QWORD *)(v0 + 200) = v2;
      v7 = *(_QWORD *)(v6 + 120);
      v10 = (void (*)(uint64_t, uint64_t))((char *)&dword_1EE7FA560 + dword_1EE7FA560);
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v8;
      *v8 = v0;
      v8[1] = sub_1A5B6B388;
      v10(*(_QWORD *)(v0 + 176), v7);
    }
  }
}

uint64_t sub_1A5B6B388(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 216) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 224) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B6B3FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);

  sub_1A5B4FBE8(v1, &qword_1ED111280);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 224));
}

uint64_t sub_1A5B6B46C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void (*v6)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);

  v1 = *(void **)(v0 + 216);
  *(_QWORD *)(v0 + 88) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 168);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = *(void **)(v0 + 216);
      v6 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 184);
      v5 = *(void **)(v0 + 192);
      v7 = *(_QWORD *)(v0 + 176);
      v9 = *(_QWORD *)(v0 + 144);
      v8 = *(_QWORD *)(v0 + 152);
      v10 = *(_QWORD *)(v0 + 136);
      sub_1A5B4FBE8(v7, &qword_1ED111280);

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v8, v3, v10);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v8, v10);
      v6(v7, 0, 1, v10);
      v11 = sub_1A5B68C48(8);

      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
      goto LABEL_16;
    }
    sub_1A5B542D4(v3, (uint64_t (*)(_QWORD))type metadata accessor for InternalError);
  }
  v12 = *(void **)(v0 + 216);

  swift_getErrorValue();
  v13 = *(_QWORD *)(v0 + 72);
  v14 = v12;
  v15 = sub_1A5B5A758(v13);
  v16 = objc_msgSend(v15, sel_domain);

  v17 = sub_1A5BC9B60();
  v19 = v18;

  if (v17 == 0xD00000000000001ELL && v19 == 0x80000001A5BD0660)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = sub_1A5BCA0B8();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
      swift_getErrorValue();
      v26 = sub_1A5B5A758(*(_QWORD *)(v0 + 48));
      v27 = objc_msgSend(v26, sel_domain);

      v28 = sub_1A5BC9B60();
      v30 = v29;

      v31 = *(void **)(v0 + 216);
      v32 = *(void **)(v0 + 192);
      v33 = *(_QWORD *)(v0 + 176);
      if (v28 == 0xD00000000000001DLL && v30 == 0x80000001A5BD0680)
      {
        swift_bridgeObjectRelease();

        sub_1A5B4FBE8(v33, &qword_1ED111280);
      }
      else
      {
        v34 = sub_1A5BCA0B8();
        swift_bridgeObjectRelease();

        sub_1A5B4FBE8(v33, &qword_1ED111280);
        if ((v34 & 1) == 0)
          goto LABEL_19;
      }
      (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(v0 + 184))(*(_QWORD *)(v0 + 176), 1, 1, *(_QWORD *)(v0 + 136));
      v11 = *(id *)(v0 + 216);
      goto LABEL_16;
    }
  }
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 184);
  v21 = *(void **)(v0 + 192);
  v23 = *(_QWORD *)(v0 + 176);
  v24 = *(_QWORD *)(v0 + 136);

  swift_getErrorValue();
  v25 = sub_1A5B91D28(*(_QWORD *)(v0 + 24));

  sub_1A5B4FBE8(v23, &qword_1ED111280);
  v22(v23, 1, 1, v24);
  v11 = *(id *)(v0 + 216);
  if (v25)
  {
LABEL_16:
    v35 = *(_QWORD *)(v0 + 200) - 1;
    if (*(_QWORD *)(v0 + 200) != 1)
    {
      *(_QWORD *)(v0 + 192) = v11;
      *(_QWORD *)(v0 + 200) = v35;
      v36 = *(_QWORD *)(*(_QWORD *)(v0 + 128) + 120);
      v40 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EE7FA560 + dword_1EE7FA560);
      v37 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 208) = v37;
      *v37 = v0;
      v37[1] = sub_1A5B6B388;
      return v40(*(_QWORD *)(v0 + 176), v36);
    }
  }
  v39 = *(_QWORD *)(v0 + 176);
  swift_willThrow();
  sub_1A5B4FBE8(v39, &qword_1ED111280);
LABEL_19:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B6B8B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[24] = a2;
  v3[25] = v2;
  v3[23] = a1;
  v4 = sub_1A5BC96E0();
  v3[26] = v4;
  v3[27] = *(_QWORD *)(v4 - 8);
  v3[28] = swift_task_alloc();
  v5 = sub_1A5BC9998();
  v3[29] = v5;
  v3[30] = *(_QWORD *)(v5 - 8);
  v3[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v3[32] = swift_task_alloc();
  v3[33] = type metadata accessor for NetworkRequest();
  v3[34] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5B6B98C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;

  sub_1A5B56960(*(_QWORD *)(v0 + 200) + 128, v0 + 16, &qword_1ED10FF18);
  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v2 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
    sub_1A5B56A64(*v2, v2[1], v2[2], v2[3]);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  }
  else
  {
    sub_1A5B4FBE8(v0 + 16, &qword_1ED10FF18);
  }
  v3 = *(_QWORD **)(v0 + 200);
  v5 = v3[13];
  v4 = v3[14];
  __swift_project_boxed_opaque_existential_1(v3 + 10, v5);
  sub_1A5B56C8C(v5, v4);
  v6 = *(uint64_t **)(v0 + 272);
  v27 = *(_QWORD *)(v0 + 264);
  v7 = *(_QWORD *)(v0 + 248);
  v8 = *(_QWORD *)(v0 + 256);
  v9 = *(_QWORD *)(v0 + 232);
  v10 = *(_QWORD *)(v0 + 240);
  v11 = *(void **)(v0 + 192);
  v12 = *(_QWORD *)(v0 + 200);
  v13 = *(_QWORD *)(v0 + 184);
  sub_1A5B569A4(v12 + 40, v0 + 56);
  sub_1A5B569A4(v12, v0 + 96);
  sub_1A5B56960(v13, v8, &qword_1ED111280);
  v14 = v11;
  sub_1A5BC998C();
  sub_1A5BC9980();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
  v15 = sub_1A5B6E820(8);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  swift_bridgeObjectRelease();
  v22 = MEMORY[0x1A85B2270](v15, v17, v19, v21);
  v24 = v23;
  swift_bridgeObjectRelease();
  *v6 = v22;
  v6[1] = v24;
  sub_1A5B579BC((__int128 *)(v0 + 56), (uint64_t)(v6 + 2));
  sub_1A5B579BC((__int128 *)(v0 + 96), (uint64_t)(v6 + 7));
  sub_1A5B6F738(v8, (uint64_t)v6 + *(int *)(v27 + 28));
  *(uint64_t *)((char *)v6 + *(int *)(v27 + 32)) = (uint64_t)v11;
  v25 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v25;
  *v25 = v0;
  v25[1] = sub_1A5B6BBC8;
  return sub_1A5B51788();
}

uint64_t sub_1A5B6BBC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v5 = (_QWORD *)*v4;
  v5[36] = a1;
  v5[37] = a2;
  v5[38] = a3;
  v5[39] = v3;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5B6BC38()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  sub_1A5B56960(*(_QWORD *)(v0 + 200) + 168, v0 + 136, &qword_1ED10FF20);
  v1 = *(_QWORD *)(v0 + 160);
  if (v1)
  {
    v2 = *(void **)(v0 + 304);
    v3 = *(_QWORD *)(v0 + 312);
    v4 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 136), v1);
    sub_1A5B69818(v2, *v4, v4[1], v4[2], v4[3]);
    if (v3)
    {
      v5 = *(_QWORD *)(v0 + 296);
      v6 = *(void **)(v0 + 304);
      v7 = *(_QWORD *)(v0 + 288);
      sub_1A5B542D4(*(_QWORD *)(v0 + 272), (uint64_t (*)(_QWORD))type metadata accessor for NetworkRequest);

      sub_1A5B5D9D4(v7, v5);
      __swift_destroy_boxed_opaque_existential_1(v0 + 136);
      goto LABEL_9;
    }
    __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  }
  else
  {
    sub_1A5B4FBE8(v0 + 136, &qword_1ED10FF20);
    v3 = *(_QWORD *)(v0 + 312);
  }
  sub_1A5B6F10C(*(void **)(v0 + 304));
  if (!v3)
  {
    v12 = *(_QWORD *)(v0 + 216);
    v11 = *(_QWORD *)(v0 + 224);
    v13 = *(_QWORD *)(v0 + 208);
    sub_1A5BC9710();
    swift_allocObject();
    sub_1A5BC9704();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v11, *MEMORY[0x1E0CAE038], v13);
    sub_1A5BC96EC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF30);
    sub_1A5B6F780();
    sub_1A5BC96F8();
    v14 = *(_QWORD *)(v0 + 296);
    v15 = *(void **)(v0 + 304);
    v16 = *(_QWORD *)(v0 + 288);
    sub_1A5B542D4(*(_QWORD *)(v0 + 272), (uint64_t (*)(_QWORD))type metadata accessor for NetworkRequest);
    swift_release();

    sub_1A5B5D9D4(v16, v14);
    v17 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v17);
  }
  v8 = *(_QWORD *)(v0 + 296);
  v9 = *(void **)(v0 + 304);
  v10 = *(_QWORD *)(v0 + 288);
  sub_1A5B542D4(*(_QWORD *)(v0 + 272), (uint64_t (*)(_QWORD))type metadata accessor for NetworkRequest);

  sub_1A5B5D9D4(v10, v8);
LABEL_9:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B6BEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[23] = a2;
  v3[24] = v2;
  v3[22] = a1;
  v4 = sub_1A5BC96E0();
  v3[25] = v4;
  v3[26] = *(_QWORD *)(v4 - 8);
  v3[27] = swift_task_alloc();
  v5 = sub_1A5BC9998();
  v3[28] = v5;
  v3[29] = *(_QWORD *)(v5 - 8);
  v3[30] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v3[31] = swift_task_alloc();
  v3[32] = type metadata accessor for NetworkRequest();
  v3[33] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5B6BF88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;

  sub_1A5B56960(*(_QWORD *)(v0 + 192) + 128, v0 + 16, &qword_1ED10FF18);
  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v2 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
    sub_1A5B56A64(*v2, v2[1], v2[2], v2[3]);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  }
  else
  {
    sub_1A5B4FBE8(v0 + 16, &qword_1ED10FF18);
  }
  v3 = *(_QWORD **)(v0 + 192);
  v5 = v3[13];
  v4 = v3[14];
  __swift_project_boxed_opaque_existential_1(v3 + 10, v5);
  sub_1A5B56C8C(v5, v4);
  v6 = *(uint64_t **)(v0 + 264);
  v27 = *(_QWORD *)(v0 + 256);
  v7 = *(_QWORD *)(v0 + 240);
  v8 = *(_QWORD *)(v0 + 248);
  v9 = *(_QWORD *)(v0 + 224);
  v10 = *(_QWORD *)(v0 + 232);
  v11 = *(void **)(v0 + 184);
  v12 = *(_QWORD *)(v0 + 192);
  v13 = *(_QWORD *)(v0 + 176);
  sub_1A5B569A4(v12 + 40, v0 + 56);
  sub_1A5B569A4(v12, v0 + 96);
  sub_1A5B56960(v13, v8, &qword_1ED111280);
  v14 = v11;
  sub_1A5BC998C();
  sub_1A5BC9980();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
  v15 = sub_1A5B6E820(8);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  swift_bridgeObjectRelease();
  v22 = MEMORY[0x1A85B2270](v15, v17, v19, v21);
  v24 = v23;
  swift_bridgeObjectRelease();
  *v6 = v22;
  v6[1] = v24;
  sub_1A5B579BC((__int128 *)(v0 + 56), (uint64_t)(v6 + 2));
  sub_1A5B579BC((__int128 *)(v0 + 96), (uint64_t)(v6 + 7));
  sub_1A5B6F738(v8, (uint64_t)v6 + *(int *)(v27 + 28));
  *(uint64_t *)((char *)v6 + *(int *)(v27 + 32)) = (uint64_t)v11;
  v25 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 272) = v25;
  *v25 = v0;
  v25[1] = sub_1A5B6C1C8;
  return sub_1A5B51788();
}

uint64_t sub_1A5B6C1C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v5 = (_QWORD *)*v4;
  v5[35] = a1;
  v5[36] = a2;
  v5[37] = a3;
  v5[38] = v3;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5B6C238()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  sub_1A5B56960(*(_QWORD *)(v0 + 192) + 168, v0 + 136, &qword_1ED10FF20);
  v1 = *(_QWORD *)(v0 + 160);
  if (v1)
  {
    v2 = *(void **)(v0 + 296);
    v3 = *(_QWORD *)(v0 + 304);
    v4 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 136), v1);
    sub_1A5B69818(v2, *v4, v4[1], v4[2], v4[3]);
    if (v3)
    {
      v5 = *(_QWORD *)(v0 + 288);
      v6 = *(void **)(v0 + 296);
      v7 = *(_QWORD *)(v0 + 280);
      sub_1A5B542D4(*(_QWORD *)(v0 + 264), (uint64_t (*)(_QWORD))type metadata accessor for NetworkRequest);

      sub_1A5B5D9D4(v7, v5);
      __swift_destroy_boxed_opaque_existential_1(v0 + 136);
      goto LABEL_9;
    }
    __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  }
  else
  {
    sub_1A5B4FBE8(v0 + 136, &qword_1ED10FF20);
    v3 = *(_QWORD *)(v0 + 304);
  }
  sub_1A5B6F10C(*(void **)(v0 + 296));
  if (!v3)
  {
    v12 = *(_QWORD *)(v0 + 208);
    v11 = *(_QWORD *)(v0 + 216);
    v13 = *(_QWORD *)(v0 + 200);
    sub_1A5BC9710();
    swift_allocObject();
    sub_1A5BC9704();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v11, *MEMORY[0x1E0CAE038], v13);
    sub_1A5BC96EC();
    sub_1A5B704EC();
    sub_1A5BC96F8();
    v14 = *(_QWORD *)(v0 + 288);
    v15 = *(void **)(v0 + 296);
    v16 = *(_QWORD *)(v0 + 280);
    sub_1A5B542D4(*(_QWORD *)(v0 + 264), (uint64_t (*)(_QWORD))type metadata accessor for NetworkRequest);
    swift_release();

    sub_1A5B5D9D4(v16, v14);
    v17 = *(unsigned __int8 *)(v0 + 312);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v17);
  }
  v8 = *(_QWORD *)(v0 + 288);
  v9 = *(void **)(v0 + 296);
  v10 = *(_QWORD *)(v0 + 280);
  sub_1A5B542D4(*(_QWORD *)(v0 + 264), (uint64_t (*)(_QWORD))type metadata accessor for NetworkRequest);

  sub_1A5B5D9D4(v10, v8);
LABEL_9:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1A5B6C490()
{
  uint64_t v0;

  sub_1A5B542D4(*(_QWORD *)(v0 + 264), (uint64_t (*)(_QWORD))type metadata accessor for NetworkRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1A5B6C500(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[24] = a2;
  v3[25] = v2;
  v3[23] = a1;
  v4 = sub_1A5BC96E0();
  v3[26] = v4;
  v3[27] = *(_QWORD *)(v4 - 8);
  v3[28] = swift_task_alloc();
  v5 = sub_1A5BC9998();
  v3[29] = v5;
  v3[30] = *(_QWORD *)(v5 - 8);
  v3[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v3[32] = swift_task_alloc();
  v3[33] = type metadata accessor for NetworkRequest();
  v3[34] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5B6C5D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;

  sub_1A5B56960(*(_QWORD *)(v0 + 200) + 128, v0 + 16, &qword_1ED10FF18);
  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v2 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
    sub_1A5B56A64(*v2, v2[1], v2[2], v2[3]);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  }
  else
  {
    sub_1A5B4FBE8(v0 + 16, &qword_1ED10FF18);
  }
  v3 = *(_QWORD **)(v0 + 200);
  v5 = v3[13];
  v4 = v3[14];
  __swift_project_boxed_opaque_existential_1(v3 + 10, v5);
  sub_1A5B56C8C(v5, v4);
  v6 = *(uint64_t **)(v0 + 272);
  v27 = *(_QWORD *)(v0 + 264);
  v7 = *(_QWORD *)(v0 + 248);
  v8 = *(_QWORD *)(v0 + 256);
  v9 = *(_QWORD *)(v0 + 232);
  v10 = *(_QWORD *)(v0 + 240);
  v11 = *(void **)(v0 + 192);
  v12 = *(_QWORD *)(v0 + 200);
  v13 = *(_QWORD *)(v0 + 184);
  sub_1A5B569A4(v12 + 40, v0 + 56);
  sub_1A5B569A4(v12, v0 + 96);
  sub_1A5B56960(v13, v8, &qword_1ED111280);
  v14 = v11;
  sub_1A5BC998C();
  sub_1A5BC9980();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
  v15 = sub_1A5B6E820(8);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  swift_bridgeObjectRelease();
  v22 = MEMORY[0x1A85B2270](v15, v17, v19, v21);
  v24 = v23;
  swift_bridgeObjectRelease();
  *v6 = v22;
  v6[1] = v24;
  sub_1A5B579BC((__int128 *)(v0 + 56), (uint64_t)(v6 + 2));
  sub_1A5B579BC((__int128 *)(v0 + 96), (uint64_t)(v6 + 7));
  sub_1A5B6F738(v8, (uint64_t)v6 + *(int *)(v27 + 28));
  *(uint64_t *)((char *)v6 + *(int *)(v27 + 32)) = (uint64_t)v11;
  v25 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v25;
  *v25 = v0;
  v25[1] = sub_1A5B6C810;
  return sub_1A5B51788();
}

uint64_t sub_1A5B6C810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v5 = (_QWORD *)*v4;
  v5[36] = a1;
  v5[37] = a2;
  v5[38] = a3;
  v5[39] = v3;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5B6C880()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  sub_1A5B56960(*(_QWORD *)(v0 + 200) + 168, v0 + 136, &qword_1ED10FF20);
  v1 = *(_QWORD *)(v0 + 160);
  if (v1)
  {
    v2 = *(void **)(v0 + 304);
    v3 = *(_QWORD *)(v0 + 312);
    v4 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 136), v1);
    sub_1A5B69818(v2, *v4, v4[1], v4[2], v4[3]);
    if (v3)
    {
      v5 = *(_QWORD *)(v0 + 296);
      v6 = *(void **)(v0 + 304);
      v7 = *(_QWORD *)(v0 + 288);
      sub_1A5B542D4(*(_QWORD *)(v0 + 272), (uint64_t (*)(_QWORD))type metadata accessor for NetworkRequest);

      sub_1A5B5D9D4(v7, v5);
      __swift_destroy_boxed_opaque_existential_1(v0 + 136);
      goto LABEL_9;
    }
    __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  }
  else
  {
    sub_1A5B4FBE8(v0 + 136, &qword_1ED10FF20);
    v3 = *(_QWORD *)(v0 + 312);
  }
  sub_1A5B6F10C(*(void **)(v0 + 304));
  if (!v3)
  {
    v12 = *(_QWORD *)(v0 + 216);
    v11 = *(_QWORD *)(v0 + 224);
    v13 = *(_QWORD *)(v0 + 208);
    sub_1A5BC9710();
    swift_allocObject();
    sub_1A5BC9704();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v11, *MEMORY[0x1E0CAE038], v13);
    sub_1A5BC96EC();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FD20);
    sub_1A5B7043C();
    sub_1A5BC96F8();
    v14 = *(_QWORD *)(v0 + 296);
    v15 = *(void **)(v0 + 304);
    v16 = *(_QWORD *)(v0 + 288);
    sub_1A5B542D4(*(_QWORD *)(v0 + 272), (uint64_t (*)(_QWORD))type metadata accessor for NetworkRequest);
    swift_release();

    sub_1A5B5D9D4(v16, v14);
    v17 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v17);
  }
  v8 = *(_QWORD *)(v0 + 296);
  v9 = *(void **)(v0 + 304);
  v10 = *(_QWORD *)(v0 + 288);
  sub_1A5B542D4(*(_QWORD *)(v0 + 272), (uint64_t (*)(_QWORD))type metadata accessor for NetworkRequest);

  sub_1A5B5D9D4(v10, v8);
LABEL_9:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B6CAFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[29] = a3;
  v4[30] = v3;
  v4[27] = a1;
  v4[28] = a2;
  v5 = sub_1A5BC96E0();
  v4[31] = v5;
  v4[32] = *(_QWORD *)(v5 - 8);
  v4[33] = swift_task_alloc();
  v6 = sub_1A5BC9998();
  v4[34] = v6;
  v4[35] = *(_QWORD *)(v6 - 8);
  v4[36] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v4[37] = swift_task_alloc();
  v4[38] = type metadata accessor for NetworkRequest();
  v4[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5B6CBD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;

  sub_1A5B56960(*(_QWORD *)(v0 + 240) + 128, v0 + 16, &qword_1ED10FF18);
  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v2 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
    sub_1A5B56A64(*v2, v2[1], v2[2], v2[3]);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  }
  else
  {
    sub_1A5B4FBE8(v0 + 16, &qword_1ED10FF18);
  }
  v3 = *(_QWORD **)(v0 + 240);
  v5 = v3[13];
  v4 = v3[14];
  __swift_project_boxed_opaque_existential_1(v3 + 10, v5);
  sub_1A5B56C8C(v5, v4);
  v6 = *(uint64_t **)(v0 + 312);
  v27 = *(_QWORD *)(v0 + 304);
  v7 = *(_QWORD *)(v0 + 288);
  v8 = *(_QWORD *)(v0 + 296);
  v9 = *(_QWORD *)(v0 + 272);
  v10 = *(_QWORD *)(v0 + 280);
  v11 = *(void **)(v0 + 232);
  v12 = *(_QWORD *)(v0 + 240);
  v13 = *(_QWORD *)(v0 + 224);
  sub_1A5B569A4(v12 + 40, v0 + 56);
  sub_1A5B569A4(v12, v0 + 96);
  sub_1A5B56960(v13, v8, &qword_1ED111280);
  v14 = v11;
  sub_1A5BC998C();
  sub_1A5BC9980();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
  v15 = sub_1A5B6E820(8);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  swift_bridgeObjectRelease();
  v22 = MEMORY[0x1A85B2270](v15, v17, v19, v21);
  v24 = v23;
  swift_bridgeObjectRelease();
  *v6 = v22;
  v6[1] = v24;
  sub_1A5B579BC((__int128 *)(v0 + 56), (uint64_t)(v6 + 2));
  sub_1A5B579BC((__int128 *)(v0 + 96), (uint64_t)(v6 + 7));
  sub_1A5B6F738(v8, (uint64_t)v6 + *(int *)(v27 + 28));
  *(uint64_t *)((char *)v6 + *(int *)(v27 + 32)) = (uint64_t)v11;
  v25 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 320) = v25;
  *v25 = v0;
  v25[1] = sub_1A5B6CE0C;
  return sub_1A5B51788();
}

uint64_t sub_1A5B6CE0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v5 = (_QWORD *)*v4;
  v5[41] = a1;
  v5[42] = a2;
  v5[43] = a3;
  v5[44] = v3;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5B6CE7C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  __int128 v21;
  __int128 v22;

  sub_1A5B56960(*(_QWORD *)(v0 + 240) + 168, v0 + 136, &qword_1ED10FF20);
  v1 = *(_QWORD *)(v0 + 160);
  if (v1)
  {
    v2 = *(void **)(v0 + 344);
    v3 = *(_QWORD *)(v0 + 352);
    v4 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 136), v1);
    sub_1A5B69818(v2, *v4, v4[1], v4[2], v4[3]);
    if (v3)
    {
      v5 = *(_QWORD *)(v0 + 336);
      v6 = *(void **)(v0 + 344);
      v7 = *(_QWORD *)(v0 + 328);
      sub_1A5B542D4(*(_QWORD *)(v0 + 312), (uint64_t (*)(_QWORD))type metadata accessor for NetworkRequest);

      sub_1A5B5D9D4(v7, v5);
      __swift_destroy_boxed_opaque_existential_1(v0 + 136);
LABEL_9:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v20 = *(uint64_t (**)(void))(v0 + 8);
      return v20();
    }
    __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  }
  else
  {
    sub_1A5B4FBE8(v0 + 136, &qword_1ED10FF20);
    v3 = *(_QWORD *)(v0 + 352);
  }
  sub_1A5B6F10C(*(void **)(v0 + 344));
  if (v3)
  {
    v8 = *(_QWORD *)(v0 + 336);
    v9 = *(void **)(v0 + 344);
    v10 = *(_QWORD *)(v0 + 328);
    sub_1A5B542D4(*(_QWORD *)(v0 + 312), (uint64_t (*)(_QWORD))type metadata accessor for NetworkRequest);

    sub_1A5B5D9D4(v10, v8);
    goto LABEL_9;
  }
  v12 = *(_QWORD *)(v0 + 256);
  v11 = *(_QWORD *)(v0 + 264);
  v13 = *(_QWORD *)(v0 + 248);
  sub_1A5BC9710();
  swift_allocObject();
  sub_1A5BC9704();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v11, *MEMORY[0x1E0CAE038], v13);
  sub_1A5BC96EC();
  sub_1A5B703F8();
  sub_1A5BC96F8();
  v14 = *(_QWORD *)(v0 + 336);
  v15 = *(void **)(v0 + 344);
  v16 = *(_QWORD *)(v0 + 328);
  v18 = *(_QWORD *)(v0 + 216);
  sub_1A5B542D4(*(_QWORD *)(v0 + 312), (uint64_t (*)(_QWORD))type metadata accessor for NetworkRequest);
  swift_release();

  sub_1A5B5D9D4(v16, v14);
  v19 = *(_QWORD *)(v0 + 192);
  v21 = *(_OWORD *)(v0 + 200);
  v22 = *(_OWORD *)(v0 + 176);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)v18 = v22;
  *(_QWORD *)(v18 + 16) = v19;
  *(_OWORD *)(v18 + 24) = v21;
  v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_1A5B6D0F0()
{
  uint64_t v0;

  sub_1A5B542D4(*(_QWORD *)(v0 + 312), (uint64_t (*)(_QWORD))type metadata accessor for NetworkRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B6D15C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[24] = a2;
  v3[25] = v2;
  v3[23] = a1;
  v4 = sub_1A5BC96E0();
  v3[26] = v4;
  v3[27] = *(_QWORD *)(v4 - 8);
  v3[28] = swift_task_alloc();
  v5 = sub_1A5BC9998();
  v3[29] = v5;
  v3[30] = *(_QWORD *)(v5 - 8);
  v3[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v3[32] = swift_task_alloc();
  v3[33] = type metadata accessor for NetworkRequest();
  v3[34] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5B6D230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;

  sub_1A5B56960(*(_QWORD *)(v0 + 200) + 128, v0 + 16, &qword_1ED10FF18);
  v1 = *(_QWORD *)(v0 + 40);
  if (v1)
  {
    v2 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v1);
    sub_1A5B56A64(*v2, v2[1], v2[2], v2[3]);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  }
  else
  {
    sub_1A5B4FBE8(v0 + 16, &qword_1ED10FF18);
  }
  v3 = *(_QWORD **)(v0 + 200);
  v5 = v3[13];
  v4 = v3[14];
  __swift_project_boxed_opaque_existential_1(v3 + 10, v5);
  sub_1A5B56C8C(v5, v4);
  v6 = *(uint64_t **)(v0 + 272);
  v27 = *(_QWORD *)(v0 + 264);
  v7 = *(_QWORD *)(v0 + 248);
  v8 = *(_QWORD *)(v0 + 256);
  v9 = *(_QWORD *)(v0 + 232);
  v10 = *(_QWORD *)(v0 + 240);
  v11 = *(void **)(v0 + 192);
  v12 = *(_QWORD *)(v0 + 200);
  v13 = *(_QWORD *)(v0 + 184);
  sub_1A5B569A4(v12 + 40, v0 + 56);
  sub_1A5B569A4(v12, v0 + 96);
  sub_1A5B56960(v13, v8, &qword_1ED111280);
  v14 = v11;
  sub_1A5BC998C();
  sub_1A5BC9980();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
  v15 = sub_1A5B6E820(8);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  swift_bridgeObjectRelease();
  v22 = MEMORY[0x1A85B2270](v15, v17, v19, v21);
  v24 = v23;
  swift_bridgeObjectRelease();
  *v6 = v22;
  v6[1] = v24;
  sub_1A5B579BC((__int128 *)(v0 + 56), (uint64_t)(v6 + 2));
  sub_1A5B579BC((__int128 *)(v0 + 96), (uint64_t)(v6 + 7));
  sub_1A5B6F738(v8, (uint64_t)v6 + *(int *)(v27 + 28));
  *(uint64_t *)((char *)v6 + *(int *)(v27 + 32)) = (uint64_t)v11;
  v25 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v25;
  *v25 = v0;
  v25[1] = sub_1A5B6D46C;
  return sub_1A5B51788();
}

uint64_t sub_1A5B6D46C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;

  v5 = (_QWORD *)*v4;
  v5[36] = a1;
  v5[37] = a2;
  v5[38] = a3;
  v5[39] = v3;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5B6D4DC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;

  sub_1A5B56960(*(_QWORD *)(v0 + 200) + 168, v0 + 136, &qword_1ED10FF20);
  v1 = *(_QWORD *)(v0 + 160);
  if (v1)
  {
    v2 = *(void **)(v0 + 304);
    v3 = *(_QWORD *)(v0 + 312);
    v4 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 136), v1);
    sub_1A5B69818(v2, *v4, v4[1], v4[2], v4[3]);
    if (v3)
    {
      v5 = *(_QWORD *)(v0 + 296);
      v6 = *(void **)(v0 + 304);
      v7 = *(_QWORD *)(v0 + 288);
      sub_1A5B542D4(*(_QWORD *)(v0 + 272), (uint64_t (*)(_QWORD))type metadata accessor for NetworkRequest);

      sub_1A5B5D9D4(v7, v5);
      __swift_destroy_boxed_opaque_existential_1(v0 + 136);
      goto LABEL_9;
    }
    __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  }
  else
  {
    sub_1A5B4FBE8(v0 + 136, &qword_1ED10FF20);
    v3 = *(_QWORD *)(v0 + 312);
  }
  sub_1A5B6F10C(*(void **)(v0 + 304));
  if (!v3)
  {
    v12 = *(_QWORD *)(v0 + 216);
    v11 = *(_QWORD *)(v0 + 224);
    v13 = *(_QWORD *)(v0 + 208);
    sub_1A5BC9710();
    swift_allocObject();
    sub_1A5BC9704();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v11, *MEMORY[0x1E0CAE038], v13);
    sub_1A5BC96EC();
    type metadata accessor for Ticket();
    sub_1A5B50E80(&qword_1EE7FA568, (uint64_t (*)(uint64_t))type metadata accessor for Ticket, (uint64_t)&protocol conformance descriptor for Ticket);
    sub_1A5BC96F8();
    v14 = *(_QWORD *)(v0 + 296);
    v15 = *(void **)(v0 + 304);
    v16 = *(_QWORD *)(v0 + 288);
    sub_1A5B542D4(*(_QWORD *)(v0 + 272), (uint64_t (*)(_QWORD))type metadata accessor for NetworkRequest);
    swift_release();

    sub_1A5B5D9D4(v16, v14);
    v17 = *(_QWORD *)(v0 + 176);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v17);
  }
  v8 = *(_QWORD *)(v0 + 296);
  v9 = *(void **)(v0 + 304);
  v10 = *(_QWORD *)(v0 + 288);
  sub_1A5B542D4(*(_QWORD *)(v0 + 272), (uint64_t (*)(_QWORD))type metadata accessor for NetworkRequest);

  sub_1A5B5D9D4(v10, v8);
LABEL_9:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B6D76C()
{
  uint64_t v0;

  sub_1A5B542D4(*(_QWORD *)(v0 + 272), (uint64_t (*)(_QWORD))type metadata accessor for NetworkRequest);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B6D7D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;

  v8[41] = v10;
  v8[42] = v11;
  v8[39] = a7;
  v8[40] = a8;
  v8[37] = a5;
  v8[38] = a6;
  v8[35] = a3;
  v8[36] = a4;
  v8[33] = a1;
  v8[34] = a2;
  return swift_task_switch();
}

uint64_t sub_1A5B6D808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  _QWORD *v12;
  __int128 v14;
  __int128 v15;

  v2 = *(_QWORD *)(v0 + 312);
  v1 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 288);
  v5 = *(void **)(v0 + 272);
  v14 = *(_OWORD *)(v0 + 296);
  v15 = *(_OWORD *)(v0 + 328);
  sub_1A5B569A4(*(_QWORD *)(v0 + 264), v0 + 16);
  *(_QWORD *)(v0 + 168) = &type metadata for RetryAfterPreProcessor;
  *(_QWORD *)(v0 + 176) = &off_1E4F6DB78;
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 144) = v6;
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v3;
  *(_OWORD *)(v6 + 32) = v14;
  *(_QWORD *)(v0 + 208) = &type metadata for RetryAfterPostProcessor;
  *(_QWORD *)(v0 + 216) = &off_1E4F6DC28;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 184) = v7;
  *(_QWORD *)(v7 + 16) = v2;
  *(_QWORD *)(v7 + 24) = v1;
  *(_OWORD *)(v7 + 32) = v15;
  v8 = (void *)objc_opt_self();
  v9 = v5;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v10 = objc_msgSend(v8, sel_sharedSessionWithNoUrlCache);
  v11 = objc_msgSend(v10, sel_urlSession);

  *(_QWORD *)(v0 + 80) = sub_1A5B55C6C(0, &qword_1ED10FF88);
  *(_QWORD *)(v0 + 88) = &off_1E4F6DDC0;
  *(_QWORD *)(v0 + 56) = v11;
  *(_QWORD *)(v0 + 120) = &type metadata for AlwaysAuthorized;
  *(_QWORD *)(v0 + 128) = &off_1E4F6D530;
  *(_QWORD *)(v0 + 248) = &type metadata for DefaultGatewayResponseValidator;
  *(_QWORD *)(v0 + 256) = &off_1E4F6DCB8;
  *(_QWORD *)(v0 + 136) = v5;
  *(_QWORD *)&v15 = (char *)&dword_1EE7FA4F8 + dword_1EE7FA4F8;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 344) = v12;
  *v12 = v0;
  v12[1] = sub_1A5B6D9DC;
  return ((uint64_t (*)(uint64_t))v15)(2);
}

uint64_t sub_1A5B6D9DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 352) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 360) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B6DA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;

  v8[41] = v10;
  v8[42] = v11;
  v8[39] = a7;
  v8[40] = a8;
  v8[37] = a5;
  v8[38] = a6;
  v8[35] = a3;
  v8[36] = a4;
  v8[33] = a1;
  v8[34] = a2;
  return swift_task_switch();
}

uint64_t sub_1A5B6DA80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  _QWORD *v12;
  __int128 v14;
  __int128 v15;

  v2 = *(_QWORD *)(v0 + 312);
  v1 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 288);
  v5 = *(void **)(v0 + 272);
  v14 = *(_OWORD *)(v0 + 296);
  v15 = *(_OWORD *)(v0 + 328);
  sub_1A5B569A4(*(_QWORD *)(v0 + 264), v0 + 16);
  *(_QWORD *)(v0 + 168) = &type metadata for RetryAfterPreProcessor;
  *(_QWORD *)(v0 + 176) = &off_1E4F6DB78;
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 144) = v6;
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v3;
  *(_OWORD *)(v6 + 32) = v14;
  *(_QWORD *)(v0 + 208) = &type metadata for RetryAfterPostProcessor;
  *(_QWORD *)(v0 + 216) = &off_1E4F6DC28;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 184) = v7;
  *(_QWORD *)(v7 + 16) = v2;
  *(_QWORD *)(v7 + 24) = v1;
  *(_OWORD *)(v7 + 32) = v15;
  v8 = (void *)objc_opt_self();
  v9 = v5;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v10 = objc_msgSend(v8, sel_sharedSessionWithNoUrlCache);
  v11 = objc_msgSend(v10, sel_urlSession);

  *(_QWORD *)(v0 + 80) = sub_1A5B55C6C(0, &qword_1ED10FF88);
  *(_QWORD *)(v0 + 88) = &off_1E4F6DDC0;
  *(_QWORD *)(v0 + 56) = v11;
  *(_QWORD *)(v0 + 120) = &type metadata for AlwaysAuthorized;
  *(_QWORD *)(v0 + 128) = &off_1E4F6D530;
  *(_QWORD *)(v0 + 248) = &type metadata for DefaultGatewayResponseValidator;
  *(_QWORD *)(v0 + 256) = &off_1E4F6DCB8;
  *(_QWORD *)(v0 + 136) = v5;
  *(_QWORD *)&v15 = (char *)&dword_1EE7FA5D0 + dword_1EE7FA5D0;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 344) = v12;
  *v12 = v0;
  v12[1] = sub_1A5B6DC54;
  return ((uint64_t (*)(uint64_t))v15)(2);
}

uint64_t sub_1A5B6DC54(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 352) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_BYTE *)(v4 + 360) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_1A5B6DCCC()
{
  uint64_t v0;

  sub_1A5B5D14C(v0 + 16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 360));
}

uint64_t sub_1A5B6DD04()
{
  uint64_t v0;

  sub_1A5B5D14C(v0 + 16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1A5B6DD3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;

  v8[41] = v10;
  v8[42] = v11;
  v8[39] = a7;
  v8[40] = a8;
  v8[37] = a5;
  v8[38] = a6;
  v8[35] = a3;
  v8[36] = a4;
  v8[33] = a1;
  v8[34] = a2;
  return swift_task_switch();
}

uint64_t sub_1A5B6DD6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  _QWORD *v12;
  __int128 v14;
  __int128 v15;

  v2 = *(_QWORD *)(v0 + 312);
  v1 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 288);
  v5 = *(void **)(v0 + 272);
  v14 = *(_OWORD *)(v0 + 296);
  v15 = *(_OWORD *)(v0 + 328);
  sub_1A5B569A4(*(_QWORD *)(v0 + 264), v0 + 16);
  *(_QWORD *)(v0 + 168) = &type metadata for RetryAfterPreProcessor;
  *(_QWORD *)(v0 + 176) = &off_1E4F6DB78;
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 144) = v6;
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v3;
  *(_OWORD *)(v6 + 32) = v14;
  *(_QWORD *)(v0 + 208) = &type metadata for RetryAfterPostProcessor;
  *(_QWORD *)(v0 + 216) = &off_1E4F6DC28;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 184) = v7;
  *(_QWORD *)(v7 + 16) = v2;
  *(_QWORD *)(v7 + 24) = v1;
  *(_OWORD *)(v7 + 32) = v15;
  v8 = (void *)objc_opt_self();
  v9 = v5;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v10 = objc_msgSend(v8, sel_sharedSessionWithNoUrlCache);
  v11 = objc_msgSend(v10, sel_urlSession);

  *(_QWORD *)(v0 + 80) = sub_1A5B55C6C(0, &qword_1ED10FF88);
  *(_QWORD *)(v0 + 88) = &off_1E4F6DDC0;
  *(_QWORD *)(v0 + 56) = v11;
  *(_QWORD *)(v0 + 120) = &type metadata for AlwaysAuthorized;
  *(_QWORD *)(v0 + 128) = &off_1E4F6D530;
  *(_QWORD *)(v0 + 248) = &type metadata for DefaultGatewayResponseValidator;
  *(_QWORD *)(v0 + 256) = &off_1E4F6DCB8;
  *(_QWORD *)(v0 + 136) = v5;
  *(_QWORD *)&v15 = (char *)&dword_1EE7FA5B0 + dword_1EE7FA5B0;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 344) = v12;
  *v12 = v0;
  v12[1] = sub_1A5B6D9DC;
  return ((uint64_t (*)(uint64_t))v15)(2);
}

uint64_t sub_1A5B6DF40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v10;
  uint64_t v11;

  *(_QWORD *)(v8 + 384) = v11;
  *(_OWORD *)(v8 + 368) = v10;
  *(_QWORD *)(v8 + 352) = a7;
  *(_QWORD *)(v8 + 360) = a8;
  *(_QWORD *)(v8 + 336) = a5;
  *(_QWORD *)(v8 + 344) = a6;
  *(_QWORD *)(v8 + 320) = a3;
  *(_QWORD *)(v8 + 328) = a4;
  *(_QWORD *)(v8 + 304) = a1;
  *(_QWORD *)(v8 + 312) = a2;
  return swift_task_switch();
}

uint64_t sub_1A5B6DF78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  _QWORD *v12;
  __int128 v14;
  __int128 v15;

  v2 = *(_QWORD *)(v0 + 360);
  v1 = *(_QWORD *)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 328);
  v3 = *(_QWORD *)(v0 + 336);
  v5 = *(void **)(v0 + 320);
  v14 = *(_OWORD *)(v0 + 344);
  v15 = *(_OWORD *)(v0 + 376);
  sub_1A5B569A4(*(_QWORD *)(v0 + 312), v0 + 16);
  *(_QWORD *)(v0 + 168) = &type metadata for RetryAfterPreProcessor;
  *(_QWORD *)(v0 + 176) = &off_1E4F6DB78;
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 144) = v6;
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v3;
  *(_OWORD *)(v6 + 32) = v14;
  *(_QWORD *)(v0 + 208) = &type metadata for RetryAfterPostProcessor;
  *(_QWORD *)(v0 + 216) = &off_1E4F6DC28;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 184) = v7;
  *(_QWORD *)(v7 + 16) = v2;
  *(_QWORD *)(v7 + 24) = v1;
  *(_OWORD *)(v7 + 32) = v15;
  v8 = (void *)objc_opt_self();
  v9 = v5;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v10 = objc_msgSend(v8, sel_sharedSessionWithNoUrlCache);
  v11 = objc_msgSend(v10, sel_urlSession);

  *(_QWORD *)(v0 + 80) = sub_1A5B55C6C(0, &qword_1ED10FF88);
  *(_QWORD *)(v0 + 88) = &off_1E4F6DDC0;
  *(_QWORD *)(v0 + 56) = v11;
  *(_QWORD *)(v0 + 120) = &type metadata for AlwaysAuthorized;
  *(_QWORD *)(v0 + 128) = &off_1E4F6D530;
  *(_QWORD *)(v0 + 248) = &type metadata for DefaultGatewayResponseValidator;
  *(_QWORD *)(v0 + 256) = &off_1E4F6DCB8;
  *(_QWORD *)(v0 + 136) = v5;
  *(_QWORD *)&v15 = (char *)&dword_1EE7FA588 + dword_1EE7FA588;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 392) = v12;
  *v12 = v0;
  v12[1] = sub_1A5B6E158;
  return ((uint64_t (*)(uint64_t, uint64_t))v15)(v0 + 264, 2);
}

uint64_t sub_1A5B6E158()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 400) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5B6E1BC()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  __int128 v3;

  v1 = *(_QWORD *)(v0 + 304);
  sub_1A5B5D14C(v0 + 16);
  v3 = *(_OWORD *)(v0 + 264);
  v2 = *(_OWORD *)(v0 + 280);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 296);
  *(_OWORD *)v1 = v3;
  *(_OWORD *)(v1 + 16) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B6E208()
{
  uint64_t v0;

  sub_1A5B5D14C(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B6E23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;

  v8[41] = v10;
  v8[42] = v11;
  v8[39] = a7;
  v8[40] = a8;
  v8[37] = a5;
  v8[38] = a6;
  v8[35] = a3;
  v8[36] = a4;
  v8[33] = a1;
  v8[34] = a2;
  return swift_task_switch();
}

uint64_t sub_1A5B6E26C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  _QWORD *v12;
  __int128 v14;
  __int128 v15;

  v2 = *(_QWORD *)(v0 + 312);
  v1 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 280);
  v3 = *(_QWORD *)(v0 + 288);
  v5 = *(void **)(v0 + 272);
  v14 = *(_OWORD *)(v0 + 296);
  v15 = *(_OWORD *)(v0 + 328);
  sub_1A5B569A4(*(_QWORD *)(v0 + 264), v0 + 16);
  *(_QWORD *)(v0 + 168) = &type metadata for RetryAfterPreProcessor;
  *(_QWORD *)(v0 + 176) = &off_1E4F6DB78;
  v6 = swift_allocObject();
  *(_QWORD *)(v0 + 144) = v6;
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v3;
  *(_OWORD *)(v6 + 32) = v14;
  *(_QWORD *)(v0 + 208) = &type metadata for RetryAfterPostProcessor;
  *(_QWORD *)(v0 + 216) = &off_1E4F6DC28;
  v7 = swift_allocObject();
  *(_QWORD *)(v0 + 184) = v7;
  *(_QWORD *)(v7 + 16) = v2;
  *(_QWORD *)(v7 + 24) = v1;
  *(_OWORD *)(v7 + 32) = v15;
  v8 = (void *)objc_opt_self();
  v9 = v5;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v10 = objc_msgSend(v8, sel_sharedSessionWithNoUrlCache);
  v11 = objc_msgSend(v10, sel_urlSession);

  *(_QWORD *)(v0 + 80) = sub_1A5B55C6C(0, &qword_1ED10FF88);
  *(_QWORD *)(v0 + 88) = &off_1E4F6DDC0;
  *(_QWORD *)(v0 + 56) = v11;
  *(_QWORD *)(v0 + 120) = &type metadata for AlwaysAuthorized;
  *(_QWORD *)(v0 + 128) = &off_1E4F6D530;
  *(_QWORD *)(v0 + 248) = &type metadata for DefaultGatewayResponseValidator;
  *(_QWORD *)(v0 + 256) = &off_1E4F6DCB8;
  *(_QWORD *)(v0 + 136) = v5;
  *(_QWORD *)&v15 = (char *)&dword_1EE7FA558 + dword_1EE7FA558;
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 344) = v12;
  *v12 = v0;
  v12[1] = sub_1A5B6E440;
  return ((uint64_t (*)(uint64_t))v15)(2);
}

uint64_t sub_1A5B6E440(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 352) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 360) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B6E4B4()
{
  uint64_t v0;

  sub_1A5B5D14C(v0 + 16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 360));
}

uint64_t sub_1A5B6E4EC()
{
  uint64_t v0;

  sub_1A5B5D14C(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B6E520()
{
  return 0x74656B636974;
}

uint64_t sub_1A5B6E534@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x74656B636974 && a2 == 0xE600000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A5BCA0B8();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A5B6E5C0()
{
  sub_1A5B70F04();
  return sub_1A5BCA1C0();
}

uint64_t sub_1A5B6E5E8()
{
  sub_1A5B70F04();
  return sub_1A5BCA1CC();
}

uint64_t sub_1A5B6E610@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA5F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5B70F04();
  sub_1A5BCA19C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = sub_1A5BC9FF8();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_1A5B6E734(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA5E0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5B70F04();
  sub_1A5BCA1B4();
  sub_1A5BCA064();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1A5B6E820(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1A5BC9BD8();
    return sub_1A5BC9C14();
  }
  return result;
}

uint64_t sub_1A5B6E8A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 200) = a1;
  *(_QWORD *)(v2 + 208) = a2;
  return swift_task_switch();
}

uint64_t sub_1A5B6E8C0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t (*v15)(_QWORD, unint64_t, uint64_t, uint64_t);

  if ((sub_1A5BA07B4() & 1) != 0)
  {
    if (qword_1ED111140 != -1)
      swift_once();
    v11 = sub_1A5BC9A64();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED1110D0);
    v12 = sub_1A5BC9A4C();
    v13 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1A5B4D000, v12, v13, "User has mocked auth issue via CSFCTL, skipping renewCredentials.", v14, 2u);
      MEMORY[0x1A85B2FC0](v14, -1, -1);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v1 = *(_QWORD **)(v0 + 208);
    v2 = v1[3];
    v3 = v1[4];
    __swift_project_boxed_opaque_existential_1(v1, v2);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FCE8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1A5BCB520;
    *(_QWORD *)(inited + 32) = sub_1A5BC9B60();
    *(_QWORD *)(inited + 40) = v5;
    v6 = MEMORY[0x1E0DEAFA0];
    *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEAFA0];
    *(_BYTE *)(inited + 48) = 1;
    *(_QWORD *)(inited + 80) = sub_1A5BC9B60();
    *(_QWORD *)(inited + 88) = v7;
    *(_QWORD *)(inited + 120) = v6;
    *(_BYTE *)(inited + 96) = 0;
    v8 = sub_1A5B5AA50(inited);
    *(_QWORD *)(v0 + 216) = v8;
    v15 = (uint64_t (*)(_QWORD, unint64_t, uint64_t, uint64_t))(**(int **)(v3 + 72) + *(_QWORD *)(v3 + 72));
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v9;
    *v9 = v0;
    v9[1] = sub_1A5B6EA9C;
    return v15(*(_QWORD *)(v0 + 200), v8, v2, v3);
  }
}

uint64_t sub_1A5B6EA9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 232) = a1;
  *(_QWORD *)(v3 + 240) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1A5B6EB10()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t (*v22)(void);
  uint64_t v24[2];

  if (v0[29])
  {
    if (qword_1ED10FBE0 != -1)
      swift_once();
    v1 = sub_1A5BC9A64();
    __swift_project_value_buffer(v1, (uint64_t)qword_1ED10FBC0);
    v2 = sub_1A5BC9A4C();
    v3 = sub_1A5BC9D88();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = v0[29];
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      v24[0] = v6;
      *(_DWORD *)v5 = 136315138;
      v0[23] = v4;
      type metadata accessor for ACAccountCredentialRenewResult(0);
      v7 = sub_1A5BC9B9C();
      v0[24] = sub_1A5B58A30(v7, v8, v24);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5B4D000, v2, v3, "Renew credentials failed with result %s", v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v6, -1, -1);
      MEMORY[0x1A85B2FC0](v5, -1, -1);
    }

    v9 = sub_1A5B68C48(13);
    swift_willThrow();
    if (qword_1ED10FBE0 != -1)
      swift_once();
    __swift_project_value_buffer(v1, (uint64_t)qword_1ED10FBC0);
    v10 = v9;
    v11 = v9;
    v12 = sub_1A5BC9A4C();
    v13 = sub_1A5BC9D88();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v24[0] = v15;
      *(_DWORD *)v14 = 136315138;
      swift_getErrorValue();
      v16 = sub_1A5BCA130();
      v0[22] = sub_1A5B58A30(v16, v17, v24);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A5B4D000, v12, v13, "Renew credentials failed with error %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v15, -1, -1);
      MEMORY[0x1A85B2FC0](v14, -1, -1);
    }
    else
    {

    }
    sub_1A5B68C48(13);
    swift_willThrow();

    v22 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    if (qword_1ED10FBE0 != -1)
      swift_once();
    v18 = sub_1A5BC9A64();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED10FBC0);
    v19 = sub_1A5BC9A4C();
    v20 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_1A5B4D000, v19, v20, "Renew credentials succeeded!", v21, 2u);
      MEMORY[0x1A85B2FC0](v21, -1, -1);
    }

    v22 = (uint64_t (*)(void))v0[1];
  }
  return v22();
}

uint64_t sub_1A5B6EF14()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 240);
  if (qword_1ED10FBE0 != -1)
    swift_once();
  v2 = sub_1A5BC9A64();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED10FBC0);
  v3 = v1;
  v4 = v1;
  v5 = sub_1A5BC9A4C();
  v6 = sub_1A5BC9D88();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_getErrorValue();
    v9 = sub_1A5BCA130();
    *(_QWORD *)(v0 + 176) = sub_1A5B58A30(v9, v10, &v12);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A5B4D000, v5, v6, "Renew credentials failed with error %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v8, -1, -1);
    MEMORY[0x1A85B2FC0](v7, -1, -1);
  }
  else
  {

  }
  sub_1A5B68C48(13);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

char *sub_1A5B6F10C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *result;
  void *v13;
  id v14;
  id v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char v18;
  id v19;
  _QWORD *v20;
  char v21;
  _BYTE *v22;
  uint64_t v23;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A5BC9974();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v23 - v10;
  result = (char *)objc_msgSend(a1, sel_statusCode);
  if ((unint64_t)(result - 204) < 0xFFFFFFFFFFFFFFFCLL)
  {
    if (result == (char *)460)
    {
      v13 = (void *)sub_1A5BC9B3C();
      v14 = objc_msgSend(a1, sel_valueForHTTPHeaderField_, v13);

      if (v14)
      {
        if (qword_1EE7FA230 != -1)
          swift_once();
        v15 = objc_msgSend((id)qword_1EE8000F8, sel_dateFromString_, v14);

        if (v15)
        {
          sub_1A5BC9950();

          v16 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
          v16(v4, v9, v5);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
          {
            v16(v11, v4, v5);
            type metadata accessor for InternalError();
            sub_1A5B50E80(&qword_1EE7FA518, (uint64_t (*)(uint64_t))type metadata accessor for InternalError, (uint64_t)&unk_1A5BCDE78);
            swift_allocError();
            (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v17, v11, v5);
            swift_storeEnumTagMultiPayload();
            swift_willThrow();
            return (char *)(*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
        }
        sub_1A5B4FBE8((uint64_t)v4, &qword_1ED111280);
      }
      sub_1A5B68C48(8);
    }
    else if (result == (char *)204)
    {
      type metadata accessor for InternalError();
      sub_1A5B50E80(&qword_1EE7FA518, (uint64_t (*)(uint64_t))type metadata accessor for InternalError, (uint64_t)&unk_1A5BCDE78);
      swift_allocError();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      v18 = sub_1A5B920E0((uint64_t)objc_msgSend(a1, sel_statusCode));
      if (v18 == 7)
      {
        v19 = objc_msgSend(a1, sel_statusCode);
        sub_1A5B6F8AC();
        swift_allocError();
        *v20 = v19;
      }
      else
      {
        v21 = v18;
        sub_1A5B6F7FC();
        swift_allocError();
        *v22 = v21;
      }
    }
    return (char *)swift_willThrow();
  }
  return result;
}

uint64_t sub_1A5B6F4A8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return swift_task_switch();
}

void sub_1A5B6F4C0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  char *v3;

  if (qword_1ED10FD18 != -1)
    swift_once();
  v0[8] = qword_1ED10FE88;
  v0[5] = &type metadata for GatewayRequest;
  v0[6] = &off_1E4F6D3F8;
  v1 = swift_allocObject();
  v0[2] = v1;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  *(_BYTE *)(v1 + 48) = 4;
  v3 = (char *)&dword_1EE7FA4F0 + dword_1EE7FA4F0;
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  v0[9] = v2;
  *v2 = v0;
  v2[1] = sub_1A5B6F600;
  __asm { BR              X8 }
}

uint64_t sub_1A5B6F600(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 80) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v4 + 16);
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1A5B6F698()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B6F6D8()
{
  uint64_t v0;

  sub_1A5B5472C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t objectdestroy_4Tm()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5B6F738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A5B6F780()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED10FF38;
  if (!qword_1ED10FF38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED10FF30);
    v2 = sub_1A5B50E80((unint64_t *)&unk_1ED110548, (uint64_t (*)(uint64_t))type metadata accessor for CloudFeature, (uint64_t)&protocol conformance descriptor for CloudFeature);
    result = MEMORY[0x1A85B2F18](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED10FF38);
  }
  return result;
}

unint64_t sub_1A5B6F7FC()
{
  unint64_t result;

  result = qword_1EE7FA508;
  if (!qword_1EE7FA508)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCDABC, &type metadata for ServerError);
    atomic_store(result, (unint64_t *)&qword_1EE7FA508);
  }
  return result;
}

_BYTE *sub_1A5B6F840@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

unint64_t sub_1A5B6F8AC()
{
  unint64_t result;

  result = qword_1EE7FA510;
  if (!qword_1EE7FA510)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCDA7C, &type metadata for ServerError.OtherServerError);
    atomic_store(result, (unint64_t *)&qword_1EE7FA510);
  }
  return result;
}

uint64_t sub_1A5B6F8F0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5B6F91C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1A5B6F940(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1A5B66D78(a1, a2);
  return a1;
}

unint64_t sub_1A5B6F954()
{
  unint64_t result;

  result = qword_1EE7FA540;
  if (!qword_1EE7FA540)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCC3E0, &type metadata for GatewayRequest.TicketRequest);
    atomic_store(result, (unint64_t *)&qword_1EE7FA540);
  }
  return result;
}

uint64_t sub_1A5B6F998(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InternalError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5B6F9DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InternalError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5B6FA20()
{
  return swift_task_switch();
}

void sub_1A5B6FA34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;

  if (qword_1ED10FD18 != -1)
    swift_once();
  v1 = qword_1ED10FE88;
  v0[5] = &type metadata for GatewayRequest;
  v0[6] = &off_1E4F6D3F8;
  v0[7] = v1;
  v2 = swift_allocObject();
  v0[2] = v2;
  *(_QWORD *)(v2 + 16) = 1;
  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = 0;
  *(_BYTE *)(v2 + 48) = 4;
  v4 = (char *)&dword_1EE7FA5C8 + dword_1EE7FA5C8;
  swift_retain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[8] = v3;
  *v3 = v0;
  v3[1] = sub_1A5B6FB54;
  __asm { BR              X8; sub_1A5B6DA50 }
}

uint64_t sub_1A5B6FB54(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 72) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v4 + 16);
  return (*(uint64_t (**)(_QWORD))(v4 + 8))(a1 & 1);
}

uint64_t sub_1A5B6FBEC()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1A5B6FC30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[13] = a2;
  v3[14] = a3;
  v3[12] = a1;
  return swift_task_switch();
}

void sub_1A5B6FC4C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;

  v1 = v0[14];
  if (qword_1ED10FD18 != -1)
    swift_once();
  v2 = v0[13];
  v0[15] = qword_1ED10FE88;
  v0[10] = &type metadata for GatewayRequest;
  v0[11] = &off_1E4F6D3F8;
  v3 = swift_allocObject();
  v0[7] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_BYTE *)(v3 + 48) = 1;
  v5 = (char *)&dword_1EE7FA580 + dword_1EE7FA580;
  swift_bridgeObjectRetain();
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  v0[16] = v4;
  *v4 = v0;
  v4[1] = sub_1A5B6FD98;
  __asm { BR              X8 }
}

uint64_t sub_1A5B6FD98()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v2 = *v1;
  *(_QWORD *)(v2 + 136) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = *(_QWORD *)(v2 + 96);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v2 + 56);
  v5 = *(_OWORD *)(v2 + 16);
  v6 = *(_OWORD *)(v2 + 32);
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(v2 + 48);
  *(_OWORD *)v4 = v5;
  *(_OWORD *)(v4 + 16) = v6;
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A5B6FE3C()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B6FE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[10] = a4;
  v5[11] = a5;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  return swift_task_switch();
}

void sub_1A5B6FE9C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;

  v1 = v0[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1A5BC9BE4();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  v0[12] = 0xEB000000002E7265;
  if (qword_1ED10FD18 != -1)
    swift_once();
  v2 = v0[10];
  v3 = v0[9];
  v4 = v0[7];
  v0[13] = qword_1ED10FE88;
  v0[5] = &type metadata for GatewayRequest;
  v0[6] = &off_1E4F6D3F8;
  v5 = swift_allocObject();
  v0[2] = v5;
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v1;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v2;
  *(_BYTE *)(v5 + 48) = 2;
  v7 = (char *)&dword_1EE7FA550 + dword_1EE7FA550;
  swift_bridgeObjectRetain();
  swift_retain();
  v6 = (_QWORD *)swift_task_alloc();
  v0[14] = v6;
  *v6 = v0;
  v6[1] = sub_1A5B70058;
  __asm { BR              X8; sub_1A5B6E23C }
}

uint64_t sub_1A5B70058(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 120) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_bridgeObjectRelease_n();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v4 + 16);
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1A5B700FC()
{
  uint64_t v0;

  swift_bridgeObjectRelease_n();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B70148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  return swift_task_switch();
}

void sub_1A5B70164()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;

  v1 = v0[8];
  sub_1A5BC9BE4();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  v0[10] = 0xEB000000002E7265;
  if (qword_1ED10FD18 != -1)
    swift_once();
  v2 = v0[7];
  v0[11] = qword_1ED10FE88;
  v0[5] = &type metadata for GatewayRequest;
  v0[6] = &off_1E4F6D3F8;
  v3 = swift_allocObject();
  v0[2] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = 0;
  *(_BYTE *)(v3 + 48) = 3;
  v5 = (char *)&dword_1EE7FA550 + dword_1EE7FA550;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  v0[12] = v4;
  *v4 = v0;
  v4[1] = sub_1A5B70308;
  __asm { BR              X8; sub_1A5B6E23C }
}

uint64_t sub_1A5B70308(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v4 + 104) = v1;
  swift_task_dealloc();
  if (v1)
    return swift_task_switch();
  swift_bridgeObjectRelease_n();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v4 + 16);
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_1A5B703AC()
{
  uint64_t v0;

  swift_bridgeObjectRelease_n();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1A5B703F8()
{
  unint64_t result;

  result = qword_1EE7FA598;
  if (!qword_1EE7FA598)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD38C, &type metadata for GeoServerResponse);
    atomic_store(result, (unint64_t *)&qword_1EE7FA598);
  }
  return result;
}

unint64_t sub_1A5B7043C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_1ED10FF28;
  if (!qword_1ED10FF28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED10FD20);
    v2 = sub_1A5B704A8();
    v3[0] = MEMORY[0x1E0DEA9A0];
    v3[1] = v2;
    result = MEMORY[0x1A85B2F18](MEMORY[0x1E0DEA0D8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1ED10FF28);
  }
  return result;
}

unint64_t sub_1A5B704A8()
{
  unint64_t result;

  result = qword_1ED10FDC0[0];
  if (!qword_1ED10FDC0[0])
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD364, &type metadata for BundleEntry);
    atomic_store(result, qword_1ED10FDC0);
  }
  return result;
}

unint64_t sub_1A5B704EC()
{
  unint64_t result;

  result = qword_1ED10FEC8;
  if (!qword_1ED10FEC8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD33C, &type metadata for SubscriberStatus);
    atomic_store(result, (unint64_t *)&qword_1ED10FEC8);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for GatewayRequest.TicketRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for GatewayRequest.TicketRequest()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for GatewayRequest.TicketRequest(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for GatewayRequest.TicketRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GatewayRequest.TicketRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GatewayRequest.TicketRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GatewayRequest.TicketRequest()
{
  return &type metadata for GatewayRequest.TicketRequest;
}

uint64_t initializeWithCopy for GatewayService(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  __int128 v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  v6 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 80, a2 + 80);
  v7 = *(void **)(a2 + 120);
  *(_QWORD *)(a1 + 120) = v7;
  v8 = *(_QWORD *)(a2 + 152);
  v9 = v7;
  if (v8)
  {
    v10 = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 152) = v8;
    *(_QWORD *)(a1 + 160) = v10;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8))(a1 + 128, a2 + 128, v8);
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v11;
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  }
  v12 = (_OWORD *)(a1 + 168);
  v13 = (_OWORD *)(a2 + 168);
  v14 = *(_QWORD *)(a2 + 192);
  if (v14)
  {
    v15 = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 192) = v14;
    *(_QWORD *)(a1 + 200) = v15;
    (**(void (***)(_OWORD *, _OWORD *))(v14 - 8))(v12, v13);
  }
  else
  {
    v16 = *(_OWORD *)(a2 + 184);
    *v12 = *v13;
    *(_OWORD *)(a1 + 184) = v16;
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  }
  v17 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 232) = v17;
  (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1 + 208, a2 + 208);
  return a1;
}

uint64_t assignWithCopy for GatewayService(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
  v4 = *(void **)(a1 + 120);
  v5 = *(void **)(a2 + 120);
  *(_QWORD *)(a1 + 120) = v5;
  v6 = v5;

  v7 = *(_QWORD *)(a2 + 152);
  if (*(_QWORD *)(a1 + 152))
  {
    if (v7)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 128), (uint64_t *)(a2 + 128));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 128);
  }
  else if (v7)
  {
    *(_QWORD *)(a1 + 152) = v7;
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 128, a2 + 128);
    goto LABEL_8;
  }
  v8 = *(_OWORD *)(a2 + 128);
  v9 = *(_OWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
LABEL_8:
  v10 = *(_QWORD *)(a2 + 192);
  if (!*(_QWORD *)(a1 + 192))
  {
    if (v10)
    {
      *(_QWORD *)(a1 + 192) = v10;
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + 168, a2 + 168);
      goto LABEL_15;
    }
LABEL_14:
    v11 = *(_OWORD *)(a2 + 168);
    v12 = *(_OWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 168) = v11;
    *(_OWORD *)(a1 + 184) = v12;
    goto LABEL_15;
  }
  if (!v10)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 168);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 168), (uint64_t *)(a2 + 168));
LABEL_15:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 208), (uint64_t *)(a2 + 208));
  return a1;
}

__n128 __swift_memcpy248_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __n128 result;
  __int128 v12;
  __int128 v13;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  v8 = a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  result = (__n128)a2[12];
  v12 = a2[13];
  v13 = a2[14];
  *(_QWORD *)(a1 + 240) = *((_QWORD *)a2 + 30);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

uint64_t assignWithTake for GatewayService(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  void *v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  v6 = *(void **)(a1 + 120);
  v7 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v7;

  if (*(_QWORD *)(a1 + 152))
    __swift_destroy_boxed_opaque_existential_1(a1 + 128);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  if (*(_QWORD *)(a1 + 192))
    __swift_destroy_boxed_opaque_existential_1(a1 + 168);
  v9 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v9;
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  __swift_destroy_boxed_opaque_existential_1(a1 + 208);
  v10 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v10;
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  return a1;
}

uint64_t getEnumTagSinglePayload for GatewayService(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 248))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GatewayService(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 248) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 248) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GatewayService()
{
  return &type metadata for GatewayService;
}

ValueMetadata *type metadata accessor for DefaultGatewayResponseValidator()
{
  return &type metadata for DefaultGatewayResponseValidator;
}

ValueMetadata *type metadata accessor for AlwaysAuthorized()
{
  return &type metadata for AlwaysAuthorized;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for RetryAfterPostProcessor()
{
  return &type metadata for RetryAfterPostProcessor;
}

uint64_t _s25CloudSubscriptionFeatures23RetryAfterPostProcessorVwxx_0()
{
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t _s25CloudSubscriptionFeatures23RetryAfterPostProcessorVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

_QWORD *_s25CloudSubscriptionFeatures23RetryAfterPostProcessorVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[3];
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = v4;
  return a1;
}

uint64_t _s25CloudSubscriptionFeatures23RetryAfterPostProcessorVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 24) = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for URLCacheBox(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for URLCacheBox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RetryAfterPreProcessor()
{
  return &type metadata for RetryAfterPreProcessor;
}

uint64_t initializeWithCopy for GatewayRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A5B56A18(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for GatewayRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1A5B56A18(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1A5B5472C(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for GatewayRequest(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1A5B5472C(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for GatewayRequest(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GatewayRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A5B70EC0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 32) <= 3u)
    return *(unsigned __int8 *)(a1 + 32);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1A5B70ED8(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for GatewayRequest()
{
  return &type metadata for GatewayRequest;
}

unint64_t sub_1A5B70F04()
{
  unint64_t result;

  result = qword_1EE7FA5E8;
  if (!qword_1EE7FA5E8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCC50C, &type metadata for GatewayRequest.TicketRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA5E8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for GatewayRequest.TicketRequest.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A5B70F88 + 4 * byte_1A5BCC26A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A5B70FA8 + 4 * byte_1A5BCC26F[v4]))();
}

_BYTE *sub_1A5B70F88(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A5B70FA8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5B70FB0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5B70FB8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5B70FC0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5B70FC8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for GatewayRequest.TicketRequest.CodingKeys()
{
  return &type metadata for GatewayRequest.TicketRequest.CodingKeys;
}

unint64_t sub_1A5B70FE8()
{
  unint64_t result;

  result = qword_1EE7FA5F8;
  if (!qword_1EE7FA5F8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCC4E4, &type metadata for GatewayRequest.TicketRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA5F8);
  }
  return result;
}

unint64_t sub_1A5B71030()
{
  unint64_t result;

  result = qword_1EE7FA600;
  if (!qword_1EE7FA600)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCC454, &type metadata for GatewayRequest.TicketRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA600);
  }
  return result;
}

unint64_t sub_1A5B71078()
{
  unint64_t result;

  result = qword_1EE7FA608;
  if (!qword_1EE7FA608)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCC47C, &type metadata for GatewayRequest.TicketRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA608);
  }
  return result;
}

void sub_1A5B710D4(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1A5B71120(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_1A5B71190 + 4 * byte_1A5BCC576[a2]))();
}

uint64_t sub_1A5B71190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  if (a1 == a3 && v3 == 0x80000001A5BCFF70)
    v4 = 1;
  else
    v4 = sub_1A5BCA0B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1A5B71234(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEA0000000000746ELL;
  v3 = 0x6553736148756663;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x6761676E45756663;
    else
      v5 = 0x6E4974706FLL;
    if (v4 == 1)
      v6 = 0xED0000746E656D65;
    else
      v6 = 0xE500000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x6553736148756663;
  v6 = 0xEA0000000000746ELL;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x6761676E45756663;
    else
      v3 = 0x6E4974706FLL;
    if (v7 == 1)
      v2 = 0xED0000746E656D65;
    else
      v2 = 0xE500000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1A5BCA0B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1A5B7135C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A5B7139C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A5B714B0 + 4 * byte_1A5BCC586[a2]))(0x534F696C656E6170);
}

uint64_t sub_1A5B714B0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x534F696C656E6170 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1A5BCA0B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1A5B71628(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x80000001A5BCFE10;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0xD000000000000034;
    else
      v4 = 0xD000000000000029;
    if (v3 == 1)
      v5 = 0x80000001A5BCFE50;
    else
      v5 = 0x80000001A5BCFE90;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v7 = 0xD000000000000034;
      else
        v7 = 0xD000000000000029;
      if (v6 == 1)
        v2 = 0x80000001A5BCFE50;
      else
        v2 = 0x80000001A5BCFE90;
      if (v4 != v7)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xD00000000000003DLL;
    v5 = 0x80000001A5BCFE10;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  if (v4 != 0xD00000000000003DLL)
  {
LABEL_21:
    v8 = sub_1A5BCA0B8();
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v2)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1A5B71728(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1A5B71784(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1A5B71800 + 4 * byte_1A5BCC595[a2]))(0x6C69546568636163);
}

uint64_t sub_1A5B71800(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6C69546568636163 && v1 == 0xE90000000000006CLL)
    v2 = 1;
  else
    v2 = sub_1A5BCA0B8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1A5B718C8(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x7465656B61726170;
  else
    v2 = 0x64756F6C434C4D49;
  if ((a2 & 1) != 0)
    v3 = 0x7465656B61726170;
  else
    v3 = 0x64756F6C434C4D49;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1A5BCA0B8();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t CloudFeature.featureID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___CloudFeature_featureID);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CloudFeature.canUse.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___CloudFeature_canUse);
  swift_beginAccess();
  return *v1;
}

uint64_t CloudFeature.accessToken.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___CloudFeature_accessToken);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t CloudFeature.ttl.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR___CloudFeature_ttl;
  swift_beginAccess();
  return sub_1A5B56960(v3, a1, &qword_1ED111280);
}

id sub_1A5B71B2C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _BYTE *v8;
  _BYTE *v9;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _BYTE *v21;
  id v22;
  objc_class *ObjectType;
  objc_super v27;

  v9 = v8;
  ObjectType = (objc_class *)swift_getObjectType();
  v16 = &v9[OBJC_IVAR___CloudFeature_limit];
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  v17 = &v9[OBJC_IVAR___CloudFeature_accessToken];
  *v17 = 0;
  v17[1] = 0;
  v18 = (uint64_t)&v9[OBJC_IVAR___CloudFeature_ttl];
  v19 = sub_1A5BC9974();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v9[OBJC_IVAR___CloudFeature_canUse] = a3;
  v20 = &v9[OBJC_IVAR___CloudFeature_featureID];
  *v20 = a1;
  v20[1] = a2;
  swift_beginAccess();
  *(_QWORD *)v16 = a4;
  v16[8] = a5 & 1;
  swift_beginAccess();
  *v17 = a6;
  v17[1] = a7;
  v21 = v9;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1A5B72DF4(a8, v18);
  swift_endAccess();

  v27.receiver = v21;
  v27.super_class = ObjectType;
  v22 = objc_msgSendSuper2(&v27, sel_init);
  sub_1A5B4FBE8(a8, &qword_1ED111280);
  return v22;
}

uint64_t static CloudFeature.supportsSecureCoding.getter()
{
  return 1;
}

void *CloudFeature.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return CloudFeature.init(coder:)(a1);
}

void sub_1A5B71CF4(char *a1)
{
  sub_1A5B71728(*a1);
}

void sub_1A5B71D00()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A5BCA16C();
  __asm { BR              X9 }
}

uint64_t sub_1A5B71D50()
{
  sub_1A5BC9BCC();
  swift_bridgeObjectRelease();
  return sub_1A5BCA184();
}

void sub_1A5B71DDC()
{
  __asm { BR              X10 }
}

uint64_t sub_1A5B71E1C()
{
  sub_1A5BC9BCC();
  return swift_bridgeObjectRelease();
}

void sub_1A5B71E94()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1A5BCA16C();
  __asm { BR              X9 }
}

uint64_t sub_1A5B71EE0()
{
  sub_1A5BC9BCC();
  swift_bridgeObjectRelease();
  return sub_1A5BCA184();
}

uint64_t sub_1A5B71F6C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A5B72B44();
  *a1 = result;
  return result;
}

uint64_t sub_1A5B71F98()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1A5B71FCC + 4 * byte_1A5BCC5A9[*v0]))();
}

void sub_1A5B71FCC(_QWORD *a1@<X8>)
{
  *a1 = 0x6C69546568636163;
  a1[1] = 0xE90000000000006CLL;
}

void sub_1A5B71FEC(_QWORD *a1@<X8>)
{
  *a1 = 0x6573556E6163;
  a1[1] = 0xE600000000000000;
}

void sub_1A5B72004(_QWORD *a1@<X8>)
{
  *a1 = 0x74696D696CLL;
  a1[1] = 0xE500000000000000;
}

void sub_1A5B7201C(_QWORD *a1@<X8>)
{
  *a1 = 0x6F54737365636361;
  a1[1] = 0xEB000000006E656BLL;
}

uint64_t sub_1A5B72040@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A5B72B44();
  *a1 = result;
  return result;
}

void sub_1A5B72064(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1A5B72070()
{
  sub_1A5B5D8C4();
  return sub_1A5BCA1C0();
}

uint64_t sub_1A5B72098()
{
  sub_1A5B5D8C4();
  return sub_1A5BCA1CC();
}

id CloudFeature.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return CloudFeature.init(from:)(a1);
}

uint64_t CloudFeature.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FFF0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5B5D8C4();
  sub_1A5BCA1B4();
  v20 = 0;
  v11 = v16;
  sub_1A5BCA064();
  if (v11)
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v16 = v8;
  swift_beginAccess();
  v19 = 2;
  sub_1A5BCA070();
  v13 = v2 + OBJC_IVAR___CloudFeature_ttl;
  swift_beginAccess();
  sub_1A5B56960(v13, (uint64_t)v6, &qword_1ED111280);
  v18 = 1;
  sub_1A5B72868();
  sub_1A5BCA07C();
  sub_1A5B4FBE8((uint64_t)v6, &qword_1ED111280);
  swift_beginAccess();
  v17 = 3;
  sub_1A5BCA04C();
  v14 = v16;
  swift_beginAccess();
  v21 = 4;
  swift_bridgeObjectRetain();
  sub_1A5BCA040();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v7);
  return swift_bridgeObjectRelease();
}

uint64_t CloudFeature.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  char v4;
  char *v6;
  _BYTE v7[24];
  uint64_t v8;

  swift_getObjectType();
  sub_1A5B56960(a1, (uint64_t)v7, &qword_1ED110560);
  if (!v8)
  {
    sub_1A5B4FBE8((uint64_t)v7, &qword_1ED110560);
    goto LABEL_9;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    v4 = 0;
    return v4 & 1;
  }
  if (*(_QWORD *)(v1 + OBJC_IVAR___CloudFeature_featureID) == *(_QWORD *)&v6[OBJC_IVAR___CloudFeature_featureID]
    && *(_QWORD *)(v1 + OBJC_IVAR___CloudFeature_featureID + 8) == *(_QWORD *)&v6[OBJC_IVAR___CloudFeature_featureID + 8])
  {

    v4 = 1;
  }
  else
  {
    v4 = sub_1A5BCA0B8();

  }
  return v4 & 1;
}

id CloudFeature.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A5B72594(_QWORD *a1)
{
  return CloudFeature.encode(to:)(a1);
}

uint64_t CloudFeature.status.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v3;
  int v4;
  uint64_t v5;
  uint64_t result;
  BOOL v7;
  uint64_t v8;
  char v9;

  v2 = *(_QWORD *)(v0 + OBJC_IVAR___CloudFeature_featureID);
  v1 = *(_QWORD *)(v0 + OBJC_IVAR___CloudFeature_featureID + 8);
  v3 = (unsigned __int8 *)(v0 + OBJC_IVAR___CloudFeature_canUse);
  swift_beginAccess();
  v4 = *v3;
  v5 = v0 + OBJC_IVAR___CloudFeature_limit;
  swift_beginAccess();
  if (v4)
    result = 0;
  else
    result = 2;
  if (v4)
    v7 = *(_BYTE *)(v5 + 8) == 0;
  else
    v7 = 1;
  if (!v7)
  {
    v8 = qword_1ED111150;
    swift_bridgeObjectRetain();
    if (v8 != -1)
      swift_once();
    v9 = sub_1A5B72734(v2, v1, qword_1ED111170);
    swift_bridgeObjectRelease();
    return v9 & 1;
  }
  return result;
}

uint64_t _s25CloudSubscriptionFeatures0A7FeatureC5limitSiSgvg_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___CloudFeature_limit;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1A5B726EC()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_1A5BC900C((uint64_t)&unk_1E4F6C610);
  result = swift_arrayDestroy();
  qword_1ED111170 = v0;
  return result;
}

uint64_t sub_1A5B72734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1A5BCA16C();
    sub_1A5BC9BCC();
    v6 = sub_1A5BCA184();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1A5BCA0B8() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1A5BCA0B8() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

unint64_t sub_1A5B72868()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED10FD68;
  if (!qword_1ED10FD68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED111280);
    v2 = sub_1A5B50E80(&qword_1ED10FB80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    result = MEMORY[0x1A85B2F18](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED10FD68);
  }
  return result;
}

unint64_t FeatureStatus.description.getter(uint64_t a1)
{
  unint64_t result;

  result = 0x6C62616C69617641;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x6574696D696C6E55;
      break;
    case 2:
      result = 0x616C696176616E55;
      break;
    case 3:
      result = 0xD000000000000016;
      break;
    case 4:
      result = 0x656E696665646E55;
      break;
    default:
      result = 0x6E776F6E6B6E55;
      break;
  }
  return result;
}

uint64_t sub_1A5B729A8()
{
  sub_1A5B50E80(&qword_1ED110558, (uint64_t (*)(uint64_t))type metadata accessor for FeatureStatus, (uint64_t)&unk_1A5BCB838);
  return sub_1A5BC9C44();
}

uint64_t sub_1A5B72A1C()
{
  sub_1A5B50E80(&qword_1ED110558, (uint64_t (*)(uint64_t))type metadata accessor for FeatureStatus, (uint64_t)&unk_1A5BCB838);
  return sub_1A5BC9C2C();
}

unint64_t sub_1A5B72A80()
{
  _QWORD *v0;
  unint64_t result;

  result = 0x6C62616C69617641;
  switch(*v0)
  {
    case 0:
      return result;
    case 1:
      result = 0x6574696D696C6E55;
      break;
    case 2:
      result = 0x616C696176616E55;
      break;
    case 3:
      result = 0xD000000000000016;
      break;
    case 4:
      result = 0x656E696665646E55;
      break;
    default:
      result = 0x6E776F6E6B6E55;
      break;
  }
  return result;
}

uint64_t sub_1A5B72B44()
{
  unint64_t v0;

  v0 = sub_1A5BC9FA4();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1A5B72B8C()
{
  return type metadata accessor for CloudFeature();
}

uint64_t method lookup function for CloudFeature()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CloudFeature.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of CloudFeature.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t getEnumTagSinglePayload for CloudFeature.APICodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CloudFeature.APICodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A5B72C9C + 4 * byte_1A5BCC5C2[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A5B72CD0 + 4 * byte_1A5BCC5BD[v4]))();
}

uint64_t sub_1A5B72CD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B72CD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5B72CE0);
  return result;
}

uint64_t sub_1A5B72CEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5B72CF4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A5B72CF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B72D00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CloudFeature.APICodingKeys()
{
  return &type metadata for CloudFeature.APICodingKeys;
}

unint64_t sub_1A5B72D20()
{
  unint64_t result;

  result = qword_1EE7FA640;
  if (!qword_1EE7FA640)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCC818, &type metadata for CloudFeature.APICodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA640);
  }
  return result;
}

unint64_t sub_1A5B72D68()
{
  unint64_t result;

  result = qword_1ED110808;
  if (!qword_1ED110808)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCC750, &type metadata for CloudFeature.APICodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED110808);
  }
  return result;
}

unint64_t sub_1A5B72DB0()
{
  unint64_t result;

  result = qword_1ED110800;
  if (!qword_1ED110800)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCC778, &type metadata for CloudFeature.APICodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED110800);
  }
  return result;
}

uint64_t sub_1A5B72DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5B72E40()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_userDefaults);
  v2 = (void *)sub_1A5BC9B3C();
  v3 = objc_msgSend(v1, sel_persistentDomainForName_, v2);

  if (!v3)
    return 0;
  v4 = sub_1A5BC9AE8();

  return v4;
}

id sub_1A5B72F14()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_globalUserDefaults);
  v2 = (void *)sub_1A5BC9B3C();
  v3 = objc_msgSend(v1, sel_BOOLForKey_, v2);

  if (qword_1ED1105C0 != -1)
    swift_once();
  v4 = sub_1A5BC9A64();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED110738);
  v5 = sub_1A5BC9A4C();
  v6 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 67109120;
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v5, v6, "Fetched value for opt-in status (deprecated global domain): %{BOOL}d", v7, 8u);
    MEMORY[0x1A85B2FC0](v7, -1, -1);
  }

  return v3;
}

uint64_t sub_1A5B73094()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  char v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint8_t *v30;
  uint8_t *v31;
  _OWORD v33[2];

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_userDefaults];
  sub_1A5B74B24();
  v3 = (void *)sub_1A5BC9B3C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_valueForKey_, v3);

  if (v4)
  {
    sub_1A5BC9E3C();
    swift_unknownObjectRelease();
    sub_1A5B4FBE8((uint64_t)v33, &qword_1ED110560);
    sub_1A5B74B24();
    v5 = (void *)sub_1A5BC9B3C();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v2, sel_BOOLForKey_, v5);

    if (qword_1ED1105C0 != -1)
      swift_once();
    v7 = sub_1A5BC9A64();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED110738);
    v8 = sub_1A5BC9A4C();
    v9 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v10 = 67109120;
      LODWORD(v33[0]) = (_DWORD)v6;
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v8, v9, "Fetched value for opt-in status: %{BOOL}d", v10, 8u);
      MEMORY[0x1A85B2FC0](v10, -1, -1);
    }

    return (uint64_t)v6;
  }
  memset(v33, 0, sizeof(v33));
  sub_1A5B4FBE8((uint64_t)v33, &qword_1ED110560);
  v11 = sub_1A5B57E54();
  v12 = objc_msgSend(v11, sel_aa_primaryAppleAccount);

  if (v12)
  {
    v13 = objc_msgSend(v12, sel_aa_personID);

    if (v13)
    {

      if (qword_1ED1105C0 != -1)
        swift_once();
      v14 = sub_1A5BC9A64();
      __swift_project_value_buffer(v14, (uint64_t)qword_1ED110738);
      v15 = v1;
      v16 = sub_1A5BC9A4C();
      v17 = sub_1A5BC9DA0();
      if (!os_log_type_enabled(v16, v17))
      {

        return 0;
      }
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_QWORD *)&v33[0] = v19;
      *(_DWORD *)v18 = 136315138;
      v20 = sub_1A5B74B24();
      sub_1A5B58A30(v20, v21, (uint64_t *)v33);
      sub_1A5BC9E18();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5B4D000, v16, v17, "No value for user opt-in key %s. Returning false.", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v19, -1, -1);
      v22 = v18;
      goto LABEL_23;
    }
  }
  if (qword_1ED1105C0 != -1)
    swift_once();
  v23 = sub_1A5BC9A64();
  __swift_project_value_buffer(v23, (uint64_t)qword_1ED110738);
  v24 = sub_1A5BC9A4C();
  v25 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v26 = 0;
    _os_log_impl(&dword_1A5B4D000, v24, v25, "Device has no DSID, checking if previous user has toggle enabled.", v26, 2u);
    MEMORY[0x1A85B2FC0](v26, -1, -1);
  }

  v27 = sub_1A5B7395C();
  v16 = sub_1A5BC9A4C();
  v28 = sub_1A5BC9DA0();
  v29 = os_log_type_enabled(v16, v28);
  if ((v27 & 1) == 0)
  {
    if (!v29)
    {
LABEL_24:

      return 0;
    }
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    _os_log_impl(&dword_1A5B4D000, v16, v28, "No previous user has opted-in. Returning false.", v31, 2u);
    v22 = v31;
LABEL_23:
    MEMORY[0x1A85B2FC0](v22, -1, -1);
    goto LABEL_24;
  }
  if (v29)
  {
    v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v30 = 0;
    _os_log_impl(&dword_1A5B4D000, v16, v28, "Previous user has opted-in. Returning true.", v30, 2u);
    MEMORY[0x1A85B2FC0](v30, -1, -1);
  }

  return 1;
}

void sub_1A5B735CC(char a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  os_log_type_t v15;
  uint8_t *v16;
  NSObject *oslog;

  if ((sub_1A5B73094() & 1) == (a1 & 1))
  {
    if (qword_1ED1105C0 != -1)
      swift_once();
    v14 = sub_1A5BC9A64();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED110738);
    oslog = sub_1A5BC9A4C();
    v15 = sub_1A5BC9DA0();
    if (os_log_type_enabled(oslog, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v16 = 67109120;
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, oslog, v15, "Attempted to set GMOptIn.isOptedIn to %{BOOL}d but it already has that value. Early returning.", v16, 8u);
      MEMORY[0x1A85B2FC0](v16, -1, -1);
    }

  }
  else
  {
    v3 = *(void **)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_userDefaults);
    v4 = (void *)sub_1A5BC9CB0();
    sub_1A5B74B24();
    v5 = (void *)sub_1A5BC9B3C();
    swift_bridgeObjectRelease();
    objc_msgSend(v3, sel_setValue_forKey_, v4, v5);

    if ((a1 & 1) != 0)
    {
      if (qword_1ED1105C0 != -1)
        swift_once();
      v6 = sub_1A5BC9A64();
      __swift_project_value_buffer(v6, (uint64_t)qword_1ED110738);
      v7 = sub_1A5BC9A4C();
      v8 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_1A5B4D000, v7, v8, "Updating GP app installation status.", v9, 2u);
        MEMORY[0x1A85B2FC0](v9, -1, -1);
      }

      sub_1A5B74D10();
    }
    type metadata accessor for Assets();
    sub_1A5B92498();
    if (qword_1ED1105C0 != -1)
      swift_once();
    v10 = sub_1A5BC9A64();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED110738);
    v11 = sub_1A5BC9A4C();
    v12 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v13 = 67109120;
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v11, v12, "Set new value for opt-in toggle %{BOOL}d, sending darwin notification.", v13, 8u);
      MEMORY[0x1A85B2FC0](v13, -1, -1);
    }

    sub_1A5B8B300();
  }
}

void (*sub_1A5B73900(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = sub_1A5B73094() & 1;
  return sub_1A5B73938;
}

void sub_1A5B73938(uint64_t a1)
{
  sub_1A5B735CC(*(_BYTE *)(a1 + 8));
}

uint64_t sub_1A5B7395C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v17;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_userDefaults);
  v2 = (void *)sub_1A5BC9B3C();
  v3 = objc_msgSend(v1, sel_persistentDomainForName_, v2);

  if (v3)
  {
    v4 = sub_1A5BC9AE8();

    v5 = sub_1A5B73CB8(v4);
    swift_bridgeObjectRelease();
    if (qword_1ED110448 != -1)
      swift_once();
    v6 = sub_1A5BC9A64();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED110430);
    v7 = sub_1A5BC9A4C();
    v8 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      v17 = v10;
      *(_DWORD *)v9 = 136315394;
      sub_1A5B58A30(0x4F72657355796E61, 0xEE006E4964657470, &v17);
      sub_1A5BC9E18();
      *(_WORD *)(v9 + 12) = 1024;
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v7, v8, "%s returning %{BOOL}d", (uint8_t *)v9, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v10, -1, -1);
      MEMORY[0x1A85B2FC0](v9, -1, -1);
    }

  }
  else
  {
    if (qword_1ED110448 != -1)
      swift_once();
    v11 = sub_1A5BC9A64();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED110430);
    v12 = sub_1A5BC9A4C();
    v13 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v17 = v15;
      *(_DWORD *)v14 = 136315138;
      sub_1A5B58A30(0xD000000000000029, 0x80000001A5BD0820, &v17);
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v12, v13, "No persistent domain for suite %s, no users have toggled toggle off or on.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v15, -1, -1);
      MEMORY[0x1A85B2FC0](v14, -1, -1);
    }

    v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_1A5B73CB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  int v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28[4];
  __int128 v29;
  _OWORD v30[2];
  __int128 v31;
  _OWORD v32[2];
  unsigned __int8 v33;

  v1 = a1;
  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v25 = v2;
  v26 = result;
  while (v5)
  {
    v8 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v9 = v8 | (v7 << 6);
LABEL_22:
    v13 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v9);
    v14 = *v13;
    v15 = v13[1];
    sub_1A5B58B00(*(_QWORD *)(v1 + 56) + 32 * v9, (uint64_t)v32);
    *(_QWORD *)&v31 = v14;
    *((_QWORD *)&v31 + 1) = v15;
    v29 = v31;
    v30[0] = v32[0];
    v30[1] = v32[1];
    v16 = v31;
    sub_1A5B58B00((uint64_t)v30, (uint64_t)v28);
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
    {
      v17 = v33;
      if (qword_1ED110448 != -1)
        swift_once();
      v18 = sub_1A5BC9A64();
      __swift_project_value_buffer(v18, (uint64_t)qword_1ED110430);
      swift_bridgeObjectRetain_n();
      v19 = sub_1A5BC9A4C();
      v20 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = swift_slowAlloc();
        v22 = swift_slowAlloc();
        v28[0] = v22;
        *(_DWORD *)v21 = 136315394;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v21 + 4) = sub_1A5B58A30(v16, *((unint64_t *)&v16 + 1), v28);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v21 + 12) = 1024;
        *(_DWORD *)(v21 + 14) = v17;
        _os_log_impl(&dword_1A5B4D000, v19, v20, "Previous key %s has value %{BOOL}d", (uint8_t *)v21, 0x12u);
        swift_arrayDestroy();
        v23 = v22;
        v1 = v26;
        MEMORY[0x1A85B2FC0](v23, -1, -1);
        v24 = v21;
        v2 = v25;
        MEMORY[0x1A85B2FC0](v24, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      result = sub_1A5B4FBE8((uint64_t)&v29, &qword_1ED10FC38);
      if (v17)
      {
        swift_release();
        return 1;
      }
    }
    else
    {
      result = sub_1A5B4FBE8((uint64_t)&v29, &qword_1ED10FC38);
    }
  }
  v10 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v10 >= v27)
    goto LABEL_30;
  v11 = *(_QWORD *)(v2 + 8 * v10);
  ++v7;
  if (v11)
    goto LABEL_21;
  v7 = v10 + 1;
  if (v10 + 1 >= v27)
    goto LABEL_30;
  v11 = *(_QWORD *)(v2 + 8 * v7);
  if (v11)
    goto LABEL_21;
  v7 = v10 + 2;
  if (v10 + 2 >= v27)
    goto LABEL_30;
  v11 = *(_QWORD *)(v2 + 8 * v7);
  if (v11)
    goto LABEL_21;
  v7 = v10 + 3;
  if (v10 + 3 >= v27)
    goto LABEL_30;
  v11 = *(_QWORD *)(v2 + 8 * v7);
  if (v11)
    goto LABEL_21;
  v12 = v10 + 4;
  if (v12 >= v27)
  {
LABEL_30:
    swift_release();
    return 0;
  }
  v11 = *(_QWORD *)(v2 + 8 * v12);
  v7 = v12;
  if (v11)
  {
LABEL_21:
    v5 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v7 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v27)
      goto LABEL_30;
    v11 = *(_QWORD *)(v2 + 8 * v7);
    ++v12;
    if (v11)
      goto LABEL_21;
  }
LABEL_32:
  __break(1u);
  return result;
}

id static GMOptIn.current.getter()
{
  id v0;
  objc_class *v1;
  char *v2;
  uint64_t v3;
  void *v4;
  char *v5;
  id v6;
  id v7;
  objc_super v9;

  v0 = sub_1A5B74938();
  v1 = (objc_class *)type metadata accessor for GMOptIn();
  v2 = (char *)objc_allocWithZone(v1);
  v3 = OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_globalUserDefaults;
  v4 = (void *)objc_opt_self();
  v5 = v2;
  *(_QWORD *)&v2[v3] = objc_msgSend(v4, sel_standardUserDefaults);
  *(_QWORD *)&v5[OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_userDefaults] = v0;
  v6 = v0;

  v9.receiver = v5;
  v9.super_class = v1;
  v7 = objc_msgSendSuper2(&v9, sel_init);

  return v7;
}

id static GMOptIn.shared.getter()
{
  id v0;
  objc_class *v1;
  char *v2;
  uint64_t v3;
  void *v4;
  char *v5;
  id v6;
  id v7;
  objc_super v9;

  v0 = sub_1A5B74938();
  v1 = (objc_class *)type metadata accessor for GMOptIn();
  v2 = (char *)objc_allocWithZone(v1);
  v3 = OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_globalUserDefaults;
  v4 = (void *)objc_opt_self();
  v5 = v2;
  *(_QWORD *)&v2[v3] = objc_msgSend(v4, sel_standardUserDefaults);
  *(_QWORD *)&v5[OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_userDefaults] = v0;
  v6 = v0;

  v9.receiver = v5;
  v9.super_class = v1;
  v7 = objc_msgSendSuper2(&v9, sel_init);

  return v7;
}

void sub_1A5B74290(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  NSObject *oslog;
  uint64_t v14;

  if (a1)
  {
    v2 = a1;
    if (qword_1ED1105C0 != -1)
      swift_once();
    v3 = sub_1A5BC9A64();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED110738);
    v4 = a1;
    v5 = a1;
    oslog = sub_1A5BC9A4C();
    v6 = sub_1A5BC9D88();
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v7 = 138412290;
      v9 = a1;
      v14 = _swift_stdlib_bridgeErrorToNSError();
      sub_1A5BC9E18();
      *v8 = v14;

      _os_log_impl(&dword_1A5B4D000, oslog, v6, "Request to install GP failed: %@\n", v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v8, -1, -1);
      MEMORY[0x1A85B2FC0](v7, -1, -1);

      return;
    }

  }
  else
  {
    if (qword_1ED1105C0 != -1)
      swift_once();
    v10 = sub_1A5BC9A64();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED110738);
    oslog = sub_1A5BC9A4C();
    v11 = sub_1A5BC9DA0();
    if (os_log_type_enabled(oslog, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1A5B4D000, oslog, v11, "Request to install GP succeeded.", v12, 2u);
      MEMORY[0x1A85B2FC0](v12, -1, -1);
    }
  }

}

void sub_1A5B74514(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

id GMOptIn.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void GMOptIn.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id GMOptIn.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GMOptIn();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A5B74648(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1A5B74658(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1A5B7468C(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1A5B746B0@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

void *sub_1A5B746D8(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_1A5BC9F8C();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

_BYTE **sub_1A5B7476C(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_1A5B7477C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_1A5B58A30(v6, v7, a3);
  v8 = *a1 + 8;
  sub_1A5BC9E18();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1A5B747EC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1A5BC9F8C();
  __break(1u);
  return result;
}

id sub_1A5B74938()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = (void *)sub_1A5BC9B3C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
    return v2;
  if (qword_1ED1105C0 != -1)
    swift_once();
  v4 = sub_1A5BC9A64();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED110738);
  v5 = sub_1A5BC9A4C();
  v6 = sub_1A5BC9D88();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v9 = v8;
    *(_DWORD *)v7 = 136315138;
    sub_1A5B58A30(0xD000000000000029, 0x80000001A5BD0820, &v9);
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v5, v6, "Could not create UserDefaults with suiteName, will use .standard: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v8, -1, -1);
    MEMORY[0x1A85B2FC0](v7, -1, -1);
  }

  return objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
}

uint64_t sub_1A5B74B24()
{
  id v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  const char *v9;
  uint64_t v10;

  v0 = sub_1A5B57E54();
  v1 = objc_msgSend(v0, sel_aa_primaryAppleAccount);

  if (v1)
  {
    v2 = objc_msgSend(v1, sel_aa_personID);
    if (v2)
    {
      v3 = v2;
      v4 = sub_1A5BC9B60();

      if (qword_1ED1105C0 != -1)
        swift_once();
      v5 = sub_1A5BC9A64();
      __swift_project_value_buffer(v5, (uint64_t)qword_1ED110738);
      v6 = sub_1A5BC9A4C();
      v7 = sub_1A5BC9DA0();
      if (!os_log_type_enabled(v6, v7))
        goto LABEL_13;
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      v9 = "Device has primary DSID, using to key opt-in status.";
    }
    else
    {
      if (qword_1ED1105C0 != -1)
        swift_once();
      v4 = 0x695F656369766564;
      v10 = sub_1A5BC9A64();
      __swift_project_value_buffer(v10, (uint64_t)qword_1ED110738);
      v6 = sub_1A5BC9A4C();
      v7 = sub_1A5BC9DA0();
      if (!os_log_type_enabled(v6, v7))
        goto LABEL_13;
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      v9 = "Device has primary account without DSID. Will fallback to device setting.";
    }
    _os_log_impl(&dword_1A5B4D000, v6, v7, v9, v8, 2u);
    MEMORY[0x1A85B2FC0](v8, -1, -1);
LABEL_13:

    return v4;
  }
  return 0x656369766564;
}

void sub_1A5B74D10()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  _QWORD v8[6];

  if (qword_1ED1105C0 != -1)
    swift_once();
  v0 = sub_1A5BC9A64();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED110738);
  v1 = sub_1A5BC9A4C();
  v2 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1A5B4D000, v1, v2, "Making request to install GP.", v3, 2u);
    MEMORY[0x1A85B2FC0](v3, -1, -1);
  }

  v4 = objc_allocWithZone(MEMORY[0x1E0CF9DD8]);
  v5 = (void *)sub_1A5BC9B3C();
  v6 = objc_msgSend(v4, sel_initWithBundleID_, v5);

  v8[4] = sub_1A5B74290;
  v8[5] = 0;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1A5B74514;
  v8[3] = &block_descriptor_1;
  v7 = _Block_copy(v8);
  objc_msgSend(v6, sel_startWithErrorHandler_, v7);
  _Block_release(v7);

}

uint64_t type metadata accessor for GMOptIn()
{
  return objc_opt_self();
}

uint64_t sub_1A5B74EB4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A5B73094();
  *a1 = result & 1;
  return result;
}

void sub_1A5B74EE0(char *a1)
{
  sub_1A5B735CC(*a1);
}

uint64_t method lookup function for GMOptIn()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GMOptIn.userDefaultsKey.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of GMOptIn.allData.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of GMOptIn.isOptedInGlobalDomain.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of GMOptIn.isOptedIn.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of GMOptIn.isOptedIn.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of GMOptIn.isOptedIn.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t sub_1A5B74FB8(char *a1, char *a2)
{
  return sub_1A5B718C8(*a1, *a2);
}

uint64_t sub_1A5B74FC4()
{
  sub_1A5BCA16C();
  sub_1A5BC9BCC();
  swift_bridgeObjectRelease();
  return sub_1A5BCA184();
}

uint64_t sub_1A5B75038()
{
  sub_1A5BC9BCC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5B75080()
{
  sub_1A5BCA16C();
  sub_1A5BC9BCC();
  swift_bridgeObjectRelease();
  return sub_1A5BCA184();
}

uint64_t sub_1A5B750F0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1A5BC9FA4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1A5B7514C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 0x64756F6C434C4D49;
  if (*v1)
    v2 = 0x7465656B61726170;
  *a1 = v2;
  a1[1] = 0xE800000000000000;
}

const char *sub_1A5B75184()
{
  return "CoreTelephony";
}

const char *sub_1A5B75198()
{
  _BYTE *v0;

  if (*v0)
    return "ParakeetCloud";
  else
    return "IMLCloud";
}

uint64_t GMFeatureFlags.domain.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1A5B751F0 + 4 * byte_1A5BCC8F4[*v0]))("SiriUI", 6);
}

const char *sub_1A5B751F0()
{
  return "PencilAndPaper";
}

const char *sub_1A5B75204()
{
  return "Notes";
}

const char *sub_1A5B75218()
{
  return "WritingTools";
}

const char *sub_1A5B7522C()
{
  return "Photos";
}

const char *sub_1A5B75240()
{
  return "GenerativePlayground";
}

const char *sub_1A5B75254()
{
  return "UserNotifications";
}

uint64_t GMFeatureFlags.feature.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1A5B75290 + 4 * byte_1A5BCC8FE[*v0]))("sae", 3);
}

const char *sub_1A5B75290()
{
  return "GenerationTool";
}

const char *sub_1A5B752F0()
{
  return "App";
}

const char *sub_1A5B75304()
{
  return "GreymatterCU";
}

uint64_t GMFeatureFlags.isEnabled.getter()
{
  char *v0;
  char v1;
  char v2;
  _BYTE v4[24];
  ValueMetadata *v5;
  unint64_t v6;

  v1 = *v0;
  v5 = &type metadata for GMFeatureFlags;
  v6 = sub_1A5B7536C();
  v4[0] = v1;
  v2 = sub_1A5BC9A10();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2 & 1;
}

unint64_t sub_1A5B7536C()
{
  unint64_t result;

  result = qword_1ED110490;
  if (!qword_1ED110490)
  {
    result = MEMORY[0x1A85B2F18](&protocol conformance descriptor for GMFeatureFlags, &type metadata for GMFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1ED110490);
  }
  return result;
}

void *static GMFeatureFlags.allCases.getter()
{
  return &unk_1E4F6BD08;
}

CloudSubscriptionFeatures::GMFeatureFlags_optional __swiftcall GMFeatureFlags.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CloudSubscriptionFeatures::GMFeatureFlags_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A5BC9FA4();
  result.value = swift_bridgeObjectRelease();
  v5 = 10;
  if (v3 < 0xA)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t GMFeatureFlags.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A5B7543C + 4 * byte_1A5BCC908[*v0]))(6644083, 0xE300000000000000);
}

uint64_t sub_1A5B7543C()
{
  return 0x534F696C656E6170;
}

uint64_t sub_1A5B75454()
{
  return 0x7272615079657267;
}

unint64_t sub_1A5B75474()
{
  return 0xD000000000000013;
}

uint64_t sub_1A5B75490()
{
  return 0x657061506874616DLL;
}

uint64_t sub_1A5B754AC()
{
  return 0x696665526F747561;
}

uint64_t sub_1A5B754C8()
{
  return 0x69746172656E6567;
}

uint64_t sub_1A5B754EC()
{
  return 0x724379726F6D656DLL;
}

uint64_t sub_1A5B75510()
{
  return 0x7070417067;
}

uint64_t sub_1A5B75524()
{
  return 1430482279;
}

void sub_1A5B75534(char *a1)
{
  sub_1A5B7135C(*a1);
}

uint64_t sub_1A5B75540()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A5BCA16C();
  sub_1A5BADAC4((uint64_t)v3, v1);
  return sub_1A5BCA184();
}

void sub_1A5B75584(uint64_t a1)
{
  char *v1;

  sub_1A5BADAC4(a1, *v1);
}

uint64_t sub_1A5B7558C()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1A5BCA16C();
  sub_1A5BADAC4((uint64_t)v3, v1);
  return sub_1A5BCA184();
}

CloudSubscriptionFeatures::GMFeatureFlags_optional sub_1A5B755CC(Swift::String *a1)
{
  return GMFeatureFlags.init(rawValue:)(*a1);
}

uint64_t sub_1A5B755D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = GMFeatureFlags.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A5B755FC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1A5B75624 + 4 * byte_1A5BCC912[*v0]))("SiriUI", 6);
}

const char *sub_1A5B75624()
{
  return "PencilAndPaper";
}

const char *sub_1A5B75638()
{
  return "Notes";
}

const char *sub_1A5B7564C()
{
  return "WritingTools";
}

const char *sub_1A5B75660()
{
  return "Photos";
}

const char *sub_1A5B75674()
{
  return "GenerativePlayground";
}

const char *sub_1A5B75688()
{
  return "UserNotifications";
}

uint64_t sub_1A5B7569C()
{
  return GMFeatureFlags.feature.getter();
}

void sub_1A5B756B4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4F6BD08;
}

uint64_t static CSFGMFeatureFlags.anyFeatureEnabled.getter()
{
  uint64_t v0;
  char v1;
  char *v2;
  char v3;
  char v5[24];
  ValueMetadata *v6;
  unint64_t v7;

  v0 = 10;
  v1 = 0;
  v2 = &byte_1E4F6BD28;
  do
  {
    if ((v1 & 1) != 0)
    {
      v1 = 1;
    }
    else
    {
      v3 = *v2;
      v6 = &type metadata for GMFeatureFlags;
      v7 = sub_1A5B7536C();
      v5[0] = v3;
      v1 = sub_1A5BC9A10();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    }
    ++v2;
    --v0;
  }
  while (v0);
  return v1 & 1;
}

id CSFGMFeatureFlags.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id CSFGMFeatureFlags.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CSFGMFeatureFlags();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for CSFGMFeatureFlags()
{
  return objc_opt_self();
}

id CSFGMFeatureFlags.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CSFGMFeatureFlags();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1A5B75850()
{
  unint64_t result;

  result = qword_1EE7FA6C0;
  if (!qword_1EE7FA6C0)
  {
    result = MEMORY[0x1A85B2F18](&protocol conformance descriptor for GMFeatureFlags, &type metadata for GMFeatureFlags);
    atomic_store(result, (unint64_t *)&qword_1EE7FA6C0);
  }
  return result;
}

unint64_t sub_1A5B75898()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7FA6C8;
  if (!qword_1EE7FA6C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE7FA6D0);
    result = MEMORY[0x1A85B2F18](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7FA6C8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for GMFeatureFlags(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for GMFeatureFlags(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1A5B759C0 + 4 * byte_1A5BCC921[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1A5B759F4 + 4 * byte_1A5BCC91C[v4]))();
}

uint64_t sub_1A5B759F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B759FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5B75A04);
  return result;
}

uint64_t sub_1A5B75A10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5B75A18);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1A5B75A1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B75A24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GMFeatureFlags()
{
  return &type metadata for GMFeatureFlags;
}

uint64_t getEnumTagSinglePayload for FeatureFlag(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FeatureFlag(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A5B75B1C + 4 * byte_1A5BCC92B[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A5B75B50 + 4 * byte_1A5BCC926[v4]))();
}

uint64_t sub_1A5B75B50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B75B58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5B75B60);
  return result;
}

uint64_t sub_1A5B75B6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5B75B74);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A5B75B78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B75B80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlag()
{
  return &type metadata for FeatureFlag;
}

unint64_t sub_1A5B75BA0()
{
  unint64_t result;

  result = qword_1EE7FA6D8;
  if (!qword_1EE7FA6D8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCCB24, &type metadata for FeatureFlag);
    atomic_store(result, (unint64_t *)&qword_1EE7FA6D8);
  }
  return result;
}

uint64_t sub_1A5B75BE4()
{
  uint64_t v0;
  char v1;
  char *v2;
  char v3;
  char v5[24];
  ValueMetadata *v6;
  unint64_t v7;

  v0 = 10;
  v1 = 0;
  v2 = &byte_1E4F6BD28;
  do
  {
    if ((v1 & 1) != 0)
    {
      v1 = 1;
    }
    else
    {
      v3 = *v2;
      v6 = &type metadata for GMFeatureFlags;
      v7 = sub_1A5B7536C();
      v5[0] = v3;
      v1 = sub_1A5BC9A10();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    }
    ++v2;
    --v0;
  }
  while (v0);
  return v1 & 1;
}

uint64_t getEnumTagSinglePayload for CoreTelephonyFeatures(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CoreTelephonyFeatures(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5B75D54 + 4 * byte_1A5BCC935[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5B75D88 + 4 * byte_1A5BCC930[v4]))();
}

uint64_t sub_1A5B75D88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B75D90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5B75D98);
  return result;
}

uint64_t sub_1A5B75DA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5B75DACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5B75DB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B75DB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1A5B75DC4(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CoreTelephonyFeatures()
{
  return &type metadata for CoreTelephonyFeatures;
}

unint64_t sub_1A5B75DE4()
{
  unint64_t result;

  result = qword_1EE7FA6E0;
  if (!qword_1EE7FA6E0)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCCC10, &type metadata for CoreTelephonyFeatures);
    atomic_store(result, (unint64_t *)&qword_1EE7FA6E0);
  }
  return result;
}

uint64_t sub_1A5B75E30()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t *sub_1A5B75E38(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  unsigned int v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  unint64_t v23;
  const void *v24;
  void (*v25)(void *, const void *, uint64_t);
  size_t v26;
  size_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t *v34;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_1A5BC9974();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v7 + v10;
  v12 = *(_QWORD *)(v9 + 64);
  if (*(_DWORD *)(v9 + 84))
    v13 = *(_QWORD *)(v9 + 64);
  else
    v13 = v12 + 1;
  v14 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v14 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || ((((v12 + 7 + ((v13 + v10 + (v11 & ~v10)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v17 = *a2;
    *a1 = *a2;
    v18 = v17 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7));
    swift_retain();
  }
  else
  {
    v19 = v8;
    v33 = v12 + 7;
    v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v34 = a1;
    v21 = (unint64_t)a1 + v11;
    v22 = (void *)(((unint64_t)a1 + v11) & ~v10);
    v23 = (unint64_t)a2 + v11;
    v24 = (const void *)(((unint64_t)a2 + v11) & ~v10);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v24, 1, v19))
    {
      memcpy(v22, v24, v13);
      v25 = *(void (**)(void *, const void *, uint64_t))(v9 + 16);
    }
    else
    {
      v25 = *(void (**)(void *, const void *, uint64_t))(v9 + 16);
      v25(v22, v24, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v22, 0, 1, v19);
    }
    v26 = ((v21 | v10) + v13) & v20;
    v27 = ((v23 | v10) + v13) & v20;
    v25((void *)v26, (const void *)v27, v19);
    v28 = (_QWORD *)((v33 + v26) & 0xFFFFFFFFFFFFFFF8);
    v29 = (_QWORD *)((v33 + v27) & 0xFFFFFFFFFFFFFFF8);
    *v28 = *v29;
    v28[1] = v29[1];
    v30 = (_QWORD *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
    v31 = (_QWORD *)(((unint64_t)v29 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v30 = *v31;
    v30[1] = v31[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v34;
  }
  return (uint64_t *)v18;
}

uint64_t sub_1A5B7602C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const void *v13;
  uint64_t (*v14)(const void *, uint64_t, uint64_t);
  int v15;
  int v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v28;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1A5BC9974();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v28 = a1;
  v10 = v6 + v9 + a1;
  v11 = ~v9;
  v12 = v6 + v9 + a2;
  v13 = (const void *)(v12 & ~v9);
  v14 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  v15 = v14((const void *)(v10 & ~v9), 1, v7);
  v16 = v14(v13, 1, v7);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v8 + 16))(v10 & ~v9, v13, v7);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10 & ~v9, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v8 + 24))(v10 & ~v9, v13, v7);
      goto LABEL_10;
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10 & ~v9, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v17 = *(_QWORD *)(v8 + 64);
  else
    v17 = *(_QWORD *)(v8 + 64) + 1;
  memcpy((void *)(v10 & ~v9), v13, v17);
LABEL_10:
  v18 = *(_QWORD *)(v8 + 64);
  if (*(_DWORD *)(v8 + 84))
    v19 = *(_QWORD *)(v8 + 64);
  else
    v19 = v18 + 1;
  v20 = ((v10 | v9) + v19) & v11;
  v21 = ((v12 | v9) + v19) & v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v20, v21, v7);
  v22 = v18 + 7;
  v23 = (_QWORD *)((v18 + 7 + v20) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)((v22 + v21) & 0xFFFFFFFFFFFFFFF8);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_1A5B76204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  size_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v22;
  uint64_t v23;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1A5BC9974();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v6 + v9 + a1;
  v22 = ~v9;
  v23 = a1;
  v11 = v6 + v9 + a2;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v11 & ~v9, 1, v7))
  {
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
    if (v12)
      v14 = *(_QWORD *)(v8 + 64);
    else
      v14 = v13 + 1;
    memcpy((void *)(v10 & ~v9), (const void *)(v11 & ~v9), v14);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  }
  else
  {
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
    v15(v10 & ~v9, v11 & ~v9, v7);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10 & ~v9, 0, 1, v7);
    v12 = *(_DWORD *)(v8 + 84);
    v13 = *(_QWORD *)(v8 + 64);
  }
  if (v12)
    v16 = v13;
  else
    v16 = v13 + 1;
  v17 = ((v10 | v9) + v16) & v22;
  v18 = ((v11 | v9) + v16) & v22;
  v15(v17, v18, v7);
  v19 = (_OWORD *)((v13 + 7 + v17) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_OWORD *)((v13 + 7 + v18) & 0xFFFFFFFFFFFFFFF8);
  *v19 = *v20;
  *(_OWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFF8);
  return v23;
}

uint64_t sub_1A5B76364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  const void *v13;
  uint64_t (*v14)(const void *, uint64_t, uint64_t);
  int v15;
  int v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v28;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1A5BC9974();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v28 = a1;
  v10 = v6 + v9 + a1;
  v11 = ~v9;
  v12 = v6 + v9 + a2;
  v13 = (const void *)(v12 & ~v9);
  v14 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  v15 = v14((const void *)(v10 & ~v9), 1, v7);
  v16 = v14(v13, 1, v7);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v8 + 32))(v10 & ~v9, v13, v7);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10 & ~v9, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(uint64_t, const void *, uint64_t))(v8 + 40))(v10 & ~v9, v13, v7);
      goto LABEL_10;
    }
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10 & ~v9, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v17 = *(_QWORD *)(v8 + 64);
  else
    v17 = *(_QWORD *)(v8 + 64) + 1;
  memcpy((void *)(v10 & ~v9), v13, v17);
LABEL_10:
  v18 = *(_QWORD *)(v8 + 64);
  if (*(_DWORD *)(v8 + 84))
    v19 = *(_QWORD *)(v8 + 64);
  else
    v19 = v18 + 1;
  v20 = ((v10 | v9) + v19) & v11;
  v21 = ((v12 | v9) + v19) & v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v20, v21, v7);
  v22 = v18 + 7;
  v23 = (_QWORD *)((v18 + 7 + v20) & 0xFFFFFFFFFFFFFFF8);
  v24 = (_QWORD *)((v22 + v21) & 0xFFFFFFFFFFFFFFF8);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRelease();
  v25 = (_QWORD *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
  v26 = (_QWORD *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRelease();
  return v28;
}

BOOL sub_1A5B7652C(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1A5B7653C()
{
  return sub_1A5BCA178();
}

uint64_t sub_1A5B76560(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A5BCA0B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6974617269707865 && a2 == 0xEA00000000006E6FLL || (sub_1A5BCA0B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656863746566 && a2 == 0xE700000000000000 || (sub_1A5BCA0B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000044 || (sub_1A5BCA0B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x44495344746C61 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1A5BCA0B8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1A5B7678C()
{
  sub_1A5BCA16C();
  sub_1A5BCA178();
  return sub_1A5BCA184();
}

uint64_t sub_1A5B767D0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1A5B76800 + 4 * byte_1A5BCCC7F[a1]))(0x65756C6176, 0xE500000000000000);
}

uint64_t sub_1A5B76800()
{
  return 0x6974617269707865;
}

uint64_t sub_1A5B7681C()
{
  return 0x64656863746566;
}

uint64_t sub_1A5B76834()
{
  return 0x496E6F6973736573;
}

uint64_t sub_1A5B76850()
{
  return 0x44495344746C61;
}

uint64_t sub_1A5B76868(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v11 = a2;
  v3 = a2[3];
  v12 = a2[2];
  v4 = type metadata accessor for CacheBox.CodingKeys(255, v12, v3, a2[4]);
  MEMORY[0x1A85B2F18](&unk_1A5BCCE08, v4);
  v5 = sub_1A5BCA088();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5BCA1B4();
  v18 = 0;
  v9 = v13;
  sub_1A5BCA07C();
  if (!v9)
  {
    v17 = 1;
    sub_1A5BC9974();
    sub_1A5B5D980(&qword_1ED10FB80, MEMORY[0x1E0CB0890]);
    sub_1A5BCA058();
    v16 = 2;
    sub_1A5BCA07C();
    v15 = 3;
    sub_1A5BCA040();
    v14 = 4;
    sub_1A5BCA040();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A5B76A84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  int *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;

  v43 = a5;
  v52 = sub_1A5BC9974();
  v45 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v44 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v11 = MEMORY[0x1E0C80A78](v10);
  v49 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v11);
  v50 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for CacheBox.CodingKeys(255, a2, a3, a4);
  MEMORY[0x1A85B2F18](&unk_1A5BCCE08, v14);
  v55 = sub_1A5BCA028();
  v48 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v16 = (char *)&v41 - v15;
  v53 = a2;
  v51 = a3;
  v47 = type metadata accessor for CacheBox(0, a2, a3, a4);
  v17 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v19 = (char *)&v41 - v18;
  v20 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v54 = v16;
  v21 = v56;
  sub_1A5BCA19C();
  if (v21)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v42 = v17;
  v23 = v48;
  v22 = v49;
  v24 = v19;
  v25 = (int *)v47;
  v56 = v20;
  v61 = 0;
  v26 = v50;
  v27 = v52;
  v28 = v53;
  sub_1A5BCA010();
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v24, v26, v28);
  v60 = 1;
  sub_1A5B5D980(&qword_1ED1107F8, MEMORY[0x1E0CB08C0]);
  v29 = (uint64_t)v22;
  v30 = v27;
  sub_1A5BC9FEC();
  sub_1A5B6F738(v29, (uint64_t)&v24[v25[11]]);
  v59 = 2;
  v31 = v44;
  sub_1A5BCA010();
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(&v24[v25[12]], v31, v30);
  v58 = 3;
  v32 = sub_1A5BC9FC8();
  v33 = (uint64_t *)&v24[v25[13]];
  *v33 = v32;
  v33[1] = v34;
  v57 = 4;
  v35 = sub_1A5BC9FC8();
  v37 = v36;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v54, v55);
  v38 = (uint64_t *)&v24[v25[14]];
  *v38 = v35;
  v38[1] = v37;
  v39 = v42;
  (*(void (**)(uint64_t, char *, int *))(v42 + 16))(v43, v24, v25);
  __swift_destroy_boxed_opaque_existential_1(v56);
  return (*(uint64_t (**)(char *, int *))(v39 + 8))(v24, v25);
}

BOOL sub_1A5B76F30(char *a1, char *a2)
{
  return sub_1A5B7652C(*a1, *a2);
}

uint64_t sub_1A5B76F48()
{
  return sub_1A5B7678C();
}

uint64_t sub_1A5B76F58()
{
  return sub_1A5B7653C();
}

uint64_t sub_1A5B76F68()
{
  sub_1A5BCA16C();
  sub_1A5B7653C();
  return sub_1A5BCA184();
}

uint64_t sub_1A5B76FB0()
{
  unsigned __int8 *v0;

  return sub_1A5B767D0(*v0);
}

uint64_t sub_1A5B76FC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5B76560(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5B76FF0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A5B771FC();
  *a1 = result;
  return result;
}

uint64_t sub_1A5B77020(uint64_t a1)
{
  MEMORY[0x1A85B2F18](&unk_1A5BCCE08, a1);
  return sub_1A5BCA1C0();
}

uint64_t sub_1A5B77054(uint64_t a1)
{
  MEMORY[0x1A85B2F18](&unk_1A5BCCE08, a1);
  return sub_1A5BCA1CC();
}

uint64_t sub_1A5B77088@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1A5B76A84(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_1A5B770A8(_QWORD *a1, _QWORD *a2)
{
  return sub_1A5B76868(a1, a2);
}

uint64_t type metadata accessor for CacheBox.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CacheBox.CodingKeys);
}

uint64_t sub_1A5B770C8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A5B77108()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1A5B77110(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1A5B7715C + 4 * byte_1A5BCCC89[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1A5B77190 + 4 * byte_1A5BCCC84[v4]))();
}

uint64_t sub_1A5B77190(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B77198(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5B771A0);
  return result;
}

uint64_t sub_1A5B771AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5B771B4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1A5B771B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B771C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1A5B771CC()
{
  JUMPOUT(0x1A85B2F18);
}

void sub_1A5B771DC()
{
  JUMPOUT(0x1A85B2F18);
}

void sub_1A5B771EC()
{
  JUMPOUT(0x1A85B2F18);
}

uint64_t sub_1A5B771FC()
{
  return 5;
}

void sub_1A5B77204(char a1)
{
  __asm { BR              X10 }
}

BOOL sub_1A5B77264()
{
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _DWORD *v7;

  v1 = objc_allocWithZone(MEMORY[0x1E0CA5870]);
  v2 = sub_1A5B77514(0xD000000000000011, 0x80000001A5BD0DD0, 0);
  if (qword_1ED10FB68 != -1)
    swift_once();
  v3 = sub_1A5BC9A64();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED10FBE8);
  v4 = v2;
  v5 = sub_1A5BC9A4C();
  v6 = sub_1A5BC9D7C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (_DWORD *)swift_slowAlloc();
    swift_slowAlloc();
    *v7 = 136315394;
    __asm { BR              X10 }
  }

  if (v2)
  return v2 != 0;
}

id sub_1A5B77514(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)sub_1A5BC9B3C();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithBundleIdentifier_allowPlaceholder_error_, v5, a3 & 1, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_1A5BC9830();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_1A5B775EC()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  _DWORD *v5;
  uint64_t result;
  __int128 v7;
  __int128 v8;
  _UNKNOWN **v9;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = (void *)sub_1A5BC9B3C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    *((_QWORD *)&v8 + 1) = sub_1A5B4FDB0();
    v9 = &off_1E4F6C640;
    *(_QWORD *)&v7 = v2;
  }
  else
  {
    v9 = 0;
    v7 = 0u;
    v8 = 0u;
  }
  type metadata accessor for TicketCache();
  v3 = swift_allocObject();
  type metadata accessor for UnfairLock();
  v4 = swift_allocObject();
  v5 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = 0;
  *(_QWORD *)(v3 + 56) = v4;
  result = sub_1A5B78E14((uint64_t)&v7, v3 + 16, qword_1ED111180);
  qword_1ED110480 = v3;
  return result;
}

uint64_t static TicketCache.shared.getter()
{
  if (qword_1ED110488 != -1)
    swift_once();
  return swift_retain();
}

uint64_t TicketCache.persistentDomain.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  sub_1A5B777C0(v0 + 16, (uint64_t)v4);
  v1 = v5;
  if (v5)
  {
    v2 = v6;
    __swift_project_boxed_opaque_existential_1(v4, v5);
    v1 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v2 + 48))(0xD000000000000030, 0x80000001A5BD0E10, v1, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  else
  {
    sub_1A5B4FBE8((uint64_t)v4, qword_1ED111180);
  }
  return v1;
}

uint64_t sub_1A5B777C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED111180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t TicketCache.allTickets(forDSID:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v3 = v2;
  sub_1A5B777C0(v2 + 16, (uint64_t)v11);
  v6 = v12;
  if (!v12)
  {
    sub_1A5B4FBE8((uint64_t)v11, qword_1ED111180);
    return MEMORY[0x1E0DEE9D8];
  }
  v7 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  v8 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v7 + 48))(0xD000000000000030, 0x80000001A5BD0E10, v6, v7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  if (!v8)
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  swift_retain();
  v9 = sub_1A5B78828(v8, v3, a1, a2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v9;
}

id sub_1A5B77908(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id *v16;
  uint64_t v17;
  id *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41[2];

  v38 = a3;
  v39 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED110500);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1104F8);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (id *)((char *)&v37 - v15);
  v17 = *(_QWORD *)(v4 + 56);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v17 + 16));
  sub_1A5B77F2C(a1, a2, (uint64_t)v9);
  v18 = v16;
  v19 = v38;
  v20 = v39;
  v37 = a1;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 16));
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1A5B4FBE8((uint64_t)v9, &qword_1ED110500);
    v21 = a2;
    if (qword_1ED110E18 != -1)
      swift_once();
    v22 = sub_1A5BC9A64();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED110E28);
    swift_bridgeObjectRetain_n();
    v23 = sub_1A5BC9A4C();
    v24 = sub_1A5BC9DA0();
    v25 = os_log_type_enabled(v23, v24);
    v26 = v37;
    if (v25)
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v41[0] = v28;
      *(_DWORD *)v27 = 136446210;
      swift_bridgeObjectRetain();
      v40 = sub_1A5B58A30(v26, v21, v41);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A5B4D000, v23, v24, "No ticket cache for featureID: %{public}s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v28, -1, -1);
      MEMORY[0x1A85B2FC0](v27, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  sub_1A5B78E14((uint64_t)v9, (uint64_t)v14, &qword_1ED1104F8);
  sub_1A5B78E14((uint64_t)v14, (uint64_t)v18, &qword_1ED1104F8);
  if ((sub_1A5B8B444(0, 0, v19, v20, 0) & 1) == 0)
  {
    v30 = a2;
    if (qword_1ED110E18 != -1)
      swift_once();
    v31 = sub_1A5BC9A64();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED110E28);
    swift_bridgeObjectRetain_n();
    v32 = sub_1A5BC9A4C();
    v33 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v41[0] = v35;
      *(_DWORD *)v34 = 136315138;
      swift_bridgeObjectRetain();
      v40 = sub_1A5B58A30(v37, v30, v41);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A5B4D000, v32, v33, "Ticket CacheBox is not valid for feature: %s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v35, -1, -1);
      MEMORY[0x1A85B2FC0](v34, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    sub_1A5B4FBE8((uint64_t)v18, &qword_1ED1104F8);
    return 0;
  }
  v29 = *v18;
  sub_1A5B4FBE8((uint64_t)v18, &qword_1ED1104F8);
  return v29;
}

uint64_t sub_1A5B77F2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  sub_1A5B777C0(v3 + 16, (uint64_t)v16);
  v8 = v17;
  if (!v17)
  {
    sub_1A5B4FBE8((uint64_t)v16, qword_1ED111180);
    goto LABEL_6;
  }
  v9 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 24))(a1, a2, v8, v9);
  v12 = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  if (v12 >> 60 == 15)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1104F8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a3, 1, 1, v15);
  }
  sub_1A5BC97F4();
  swift_allocObject();
  sub_1A5BC97E8();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1104F8);
  sub_1A5B78AE8(&qword_1EE7FA6F0, (uint64_t)&unk_1A5BCCD08);
  sub_1A5BC97DC();
  if (v4)
  {
    swift_release();
    return sub_1A5B5D9C0(v10, v12);
  }
  else
  {
    sub_1A5B5D9C0(v10, v12);
    swift_release();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 0, 1, v13);
  }
}

void sub_1A5B780C0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_QWORD *, uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  _QWORD v17[4];
  uint64_t v18[3];
  uint64_t v19;
  uint64_t v20;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1104F8);
  sub_1A5B78AE8(&qword_1EE7FA6E8, (uint64_t)&unk_1A5BCCCE0);
  v5 = sub_1A5BC9800();
  v7 = v6;
  v8 = *(_QWORD *)(v2 + 56);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v8 + 16));
  sub_1A5B777C0(v2 + 16, (uint64_t)v18);
  v9 = v19;
  if (v19)
  {
    v10 = v20;
    __swift_project_boxed_opaque_existential_1(v18, v19);
    v17[3] = MEMORY[0x1E0CB0338];
    v17[0] = v5;
    v17[1] = v7;
    v11 = *(void (**)(_QWORD *, uint64_t, unint64_t, uint64_t, uint64_t))(v10 + 16);
    sub_1A5B66D78(v5, v7);
    v11(v17, a1, a2, v9, v10);
    sub_1A5B4FBE8((uint64_t)v17, &qword_1ED110560);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  else
  {
    sub_1A5B4FBE8((uint64_t)v18, qword_1ED111180);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
  if (qword_1ED110E18 != -1)
    swift_once();
  v12 = sub_1A5BC9A64();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED110E28);
  swift_bridgeObjectRetain_n();
  v13 = sub_1A5BC9A4C();
  v14 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v18[0] = v16;
    *(_DWORD *)v15 = 136446210;
    swift_bridgeObjectRetain();
    v17[0] = sub_1A5B58A30(a1, a2, v18);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v13, v14, "Updating cache for ticket: %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v16, -1, -1);
    MEMORY[0x1A85B2FC0](v15, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  sub_1A5B5D9D4(v5, v7);

}

void sub_1A5B78558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  if (qword_1ED110E18 != -1)
    swift_once();
  v2 = sub_1A5BC9A64();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED110E28);
  swift_retain_n();
  v3 = sub_1A5BC9A4C();
  v4 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v16 = v6;
    *(_DWORD *)v5 = 136315138;
    sub_1A5B777C0(v0 + 16, (uint64_t)v13);
    v7 = v14;
    if (v14)
    {
      v8 = v15;
      __swift_project_boxed_opaque_existential_1(v13, v14);
      if ((*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v8 + 48))(0xD000000000000030, 0x80000001A5BD0E10, v7, v8))
      {
        v9 = sub_1A5BC9AF4();
        v11 = v10;
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
LABEL_11:
        v13[0] = sub_1A5B58A30(v9, v11, &v16);
        sub_1A5BC9E18();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A5B4D000, v3, v4, "Resetting ticket cache. Current domain is: %s", v5, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v6, -1, -1);
        MEMORY[0x1A85B2FC0](v5, -1, -1);

        goto LABEL_12;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    else
    {
      sub_1A5B4FBE8((uint64_t)v13, qword_1ED111180);
    }
    v11 = 0xE500000000000000;
    v9 = 0x3E6C696E3CLL;
    goto LABEL_11;
  }

  swift_release_n();
LABEL_12:
  v12 = *(_QWORD *)(v1 + 56);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v12 + 16));
  sub_1A5B78B2C(v1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
}

uint64_t TicketCache.deinit()
{
  uint64_t v0;

  sub_1A5B4FBE8(v0 + 16, qword_1ED111180);
  swift_release();
  return v0;
}

uint64_t TicketCache.__deallocating_deinit()
{
  uint64_t v0;

  sub_1A5B4FBE8(v0 + 16, qword_1ED111180);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1A5B78828(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  int64_t v31;

  v30 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a1 + 64);
  v31 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = 0;
  v29 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v9)
    goto LABEL_7;
LABEL_4:
  v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v19)) + (v11 << 6))
  {
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v16 = *v14;
    v15 = v14[1];
    swift_bridgeObjectRetain();
    v17 = sub_1A5B77908(v16, v15, a3, a4);
    if (v17)
    {
      v21 = v17;
      v22 = sub_1A5BC9C08();
      v27 = v23;
      v28 = v22;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1A5B64A9C(0, v29[2] + 1, 1, v29);
        v29 = (_QWORD *)result;
      }
      v25 = v29[2];
      v24 = v29[3];
      if (v25 >= v24 >> 1)
      {
        result = (uint64_t)sub_1A5B64A9C((_QWORD *)(v24 > 1), v25 + 1, 1, v29);
        v29 = (_QWORD *)result;
      }
      v29[2] = v25 + 1;
      v26 = &v29[3 * v25];
      v26[4] = v28;
      v26[5] = v27;
      v26[6] = v21;
      if (v9)
        goto LABEL_4;
    }
    else
    {
      result = swift_bridgeObjectRelease();
      if (v9)
        goto LABEL_4;
    }
LABEL_7:
    v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v18 >= v31)
      goto LABEL_29;
    v19 = *(_QWORD *)(v30 + 8 * v18);
    ++v11;
    if (!v19)
    {
      v11 = v18 + 1;
      if (v18 + 1 >= v31)
        goto LABEL_29;
      v19 = *(_QWORD *)(v30 + 8 * v11);
      if (!v19)
      {
        v11 = v18 + 2;
        if (v18 + 2 >= v31)
          goto LABEL_29;
        v19 = *(_QWORD *)(v30 + 8 * v11);
        if (!v19)
        {
          v11 = v18 + 3;
          if (v18 + 3 >= v31)
            goto LABEL_29;
          v19 = *(_QWORD *)(v30 + 8 * v11);
          if (!v19)
            break;
        }
      }
    }
LABEL_22:
    v9 = (v19 - 1) & v19;
  }
  v20 = v18 + 4;
  if (v20 >= v31)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v29;
  }
  v19 = *(_QWORD *)(v30 + 8 * v20);
  if (v19)
  {
    v11 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v11 >= v31)
      goto LABEL_29;
    v19 = *(_QWORD *)(v30 + 8 * v11);
    ++v20;
    if (v19)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TicketCache()
{
  return objc_opt_self();
}

uint64_t method lookup function for TicketCache()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1A5B78AE8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED1104F8);
    result = MEMORY[0x1A85B2F18](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1A5B78B2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = a1 + 16;
  sub_1A5B777C0(a1 + 16, (uint64_t)v13);
  if (v14)
  {
    v2 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    sub_1A5B5AA50(MEMORY[0x1E0DEE9D8]);
    (*(void (**)(void))(v2 + 40))();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
  else
  {
    sub_1A5B4FBE8((uint64_t)v13, qword_1ED111180);
  }
  if (qword_1ED110E18 != -1)
    swift_once();
  v3 = sub_1A5BC9A64();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED110E28);
  swift_retain_n();
  v4 = sub_1A5BC9A4C();
  v5 = sub_1A5BC9DA0();
  if (!os_log_type_enabled(v4, v5))
  {

    swift_release_n();
    return;
  }
  v6 = (uint8_t *)swift_slowAlloc();
  v7 = swift_slowAlloc();
  v16 = v7;
  *(_DWORD *)v6 = 136315138;
  sub_1A5B777C0(v1, (uint64_t)v13);
  v8 = v14;
  if (!v14)
  {
    sub_1A5B4FBE8((uint64_t)v13, qword_1ED111180);
LABEL_13:
    v12 = 0xE500000000000000;
    v10 = 0x3E6C696E3CLL;
    goto LABEL_14;
  }
  v9 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  if (!(*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v9 + 48))(0xD000000000000030, 0x80000001A5BD0E10, v8, v9))
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    goto LABEL_13;
  }
  v10 = sub_1A5BC9AF4();
  v12 = v11;
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
LABEL_14:
  v13[0] = sub_1A5B58A30(v10, v12, &v16);
  sub_1A5BC9E18();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1A5B4D000, v4, v5, "Reset ticket cache. New domain is: %s", v6, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1A85B2FC0](v7, -1, -1);
  MEMORY[0x1A85B2FC0](v6, -1, -1);

}

uint64_t sub_1A5B78E14(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1A5B78E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  *(_QWORD *)(v8 + 384) = a8;
  *(_QWORD *)(v8 + 392) = v11;
  *(_BYTE *)(v8 + 193) = a7;
  *(_QWORD *)(v8 + 368) = a5;
  *(_QWORD *)(v8 + 376) = a6;
  *(_QWORD *)(v8 + 360) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  *(_QWORD *)(v8 + 400) = swift_task_alloc();
  *(_QWORD *)(v8 + 408) = swift_task_alloc();
  *(_QWORD *)(v8 + 416) = type metadata accessor for InternalError();
  *(_QWORD *)(v8 + 424) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B0);
  *(_QWORD *)(v8 + 432) = swift_task_alloc();
  v9 = sub_1A5BC9974();
  *(_QWORD *)(v8 + 440) = v9;
  *(_QWORD *)(v8 + 448) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 456) = swift_task_alloc();
  *(_QWORD *)(v8 + 464) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5B78F80()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  char v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  unint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  id v35;
  unsigned __int8 v36;
  void *v38;
  _BYTE *v39;
  id v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  unint64_t v45;
  uint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  void (*v49)(void *, _QWORD);
  id v50;
  id v51;
  void *v52;
  void (*v53)(_QWORD, id);
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  char v58;
  id v59;
  id v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  id v64;
  id v65;
  id v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  id v73;
  id v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  id v78;
  void (*v79)(_QWORD, id);
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(id, _QWORD);
  uint64_t v88;
  uint64_t v89;
  id v90;
  id v91;
  void *v92;
  void (*v93)(id, _QWORD);
  id v94;
  void (*v95)(id, _QWORD);
  id v96;
  _QWORD *v97;
  _QWORD *v98;
  os_log_t v99;
  NSObject *v100;
  NSObject *log;
  uint64_t v102[2];

  v102[1] = *MEMORY[0x1E0C80C00];
  if (qword_1ED10FB68 != -1)
    swift_once();
  v1 = sub_1A5BC9A64();
  *(_QWORD *)(v0 + 472) = __swift_project_value_buffer(v1, (uint64_t)qword_1ED10FBE8);
  swift_bridgeObjectRetain_n();
  v2 = sub_1A5BC9A4C();
  v3 = sub_1A5BC9DA0();
  v4 = os_log_type_enabled(v2, v3);
  v5 = *(_QWORD *)(v0 + 368);
  if (v4)
  {
    v6 = *(_QWORD *)(v0 + 360);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v102[0] = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 296) = sub_1A5B58A30(v6, v5, v102);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v2, v3, "starting fetch for %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v8, -1, -1);
    MEMORY[0x1A85B2FC0](v7, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v9 = *(_BYTE *)(v0 + 193);
  v10 = (_QWORD *)(*(_QWORD *)(v0 + 376)
                 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore);
  v11 = v10[3];
  v12 = v10[4];
  __swift_project_boxed_opaque_existential_1(v10, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  v15 = v14;
  *(_QWORD *)(v0 + 480) = v13;
  *(_QWORD *)(v0 + 488) = v14;
  if ((v9 & 1) == 0)
  {
    v16 = v13;
    if (qword_1ED111118 != -1)
      swift_once();
    v17 = FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 368), v16, v15, 0, 0);
    if (v17)
    {
      v18 = v17;
      swift_bridgeObjectRelease();
      v19 = v18;
      v20 = sub_1A5BC9A4C();
      v21 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        v99 = (os_log_t)swift_slowAlloc();
        *(_DWORD *)v22 = 138412290;
        *(_QWORD *)(v0 + 352) = v19;
        v23 = v19;
        sub_1A5BC9E18();
        v99->isa = (Class)v18;

        _os_log_impl(&dword_1A5B4D000, v20, v21, "Returning cached feature: %@", v22, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v99, -1, -1);
        MEMORY[0x1A85B2FC0](v22, -1, -1);
      }
      else
      {

      }
      v49 = *(void (**)(void *, _QWORD))(v0 + 384);
      v50 = v19;
      v49(v18, 0);

      goto LABEL_27;
    }
  }
  swift_bridgeObjectRetain_n();
  v24 = sub_1A5BC9A4C();
  v25 = sub_1A5BC9DA0();
  v26 = os_log_type_enabled(v24, v25);
  v27 = *(_QWORD *)(v0 + 368);
  if (v26)
  {
    v28 = *(_QWORD *)(v0 + 360);
    v29 = (uint8_t *)swift_slowAlloc();
    v30 = swift_slowAlloc();
    v102[0] = v30;
    *(_DWORD *)v29 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 344) = sub_1A5B58A30(v28, v27, v102);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v24, v25, "No valid cache value for %s", v29, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v30, -1, -1);
    MEMORY[0x1A85B2FC0](v29, -1, -1);

    if (MKBDeviceUnlockedSinceBoot())
      goto LABEL_14;
LABEL_19:
    sub_1A5B584A8();
    v38 = (void *)swift_allocError();
    *v39 = 15;
    swift_willThrow();
    *(_QWORD *)(v0 + 312) = v38;
    v40 = v38;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v41 = *(_QWORD *)(v0 + 424);
      if (swift_getEnumCaseMultiPayload() == 2)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain_n();
        v42 = sub_1A5BC9A4C();
        v43 = sub_1A5BC9DA0();
        v44 = os_log_type_enabled(v42, v43);
        v45 = *(_QWORD *)(v0 + 368);
        if (v44)
        {
          v46 = *(_QWORD *)(v0 + 360);
          v47 = (uint8_t *)swift_slowAlloc();
          v48 = swift_slowAlloc();
          v102[0] = v48;
          *(_DWORD *)v47 = 136315138;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v0 + 248) = sub_1A5B58A30(v46, v45, v102);
          sub_1A5BC9E18();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1A5B4D000, v42, v43, "Feature %s received 204 network response", v47, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1A85B2FC0](v48, -1, -1);
          MEMORY[0x1A85B2FC0](v47, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v82 = *(_QWORD *)(v0 + 464);
        v83 = *(_QWORD *)(v0 + 440);
        v84 = *(_QWORD *)(v0 + 448);
        v86 = *(_QWORD *)(v0 + 400);
        v85 = *(_QWORD *)(v0 + 408);
        v87 = *(void (**)(id, _QWORD))(v0 + 384);
        v89 = *(_QWORD *)(v0 + 360);
        v88 = *(_QWORD *)(v0 + 368);
        sub_1A5BC9968();
        sub_1A5BC98E4();
        (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v82, v83);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v84 + 56))(v85, 0, 1, v83);
        sub_1A5B54780(v85, v86);
        v90 = objc_allocWithZone((Class)type metadata accessor for CloudFeature());
        swift_bridgeObjectRetain();
        v91 = sub_1A5B71B2C(v89, v88, 0, 0, 1, 0, 0, v86);
        sub_1A5B4FBE8(v85, &qword_1ED111280);
        v87(v91, 0);

        v92 = *(void **)(v0 + 312);
        goto LABEL_55;
      }
      sub_1A5B81718(v41);
    }

    sub_1A5B55C6C(0, &qword_1ED110E20);
    swift_getErrorValue();
    v54 = *(_QWORD *)(v0 + 96);
    v55 = v38;
    v56 = sub_1A5B5A758(v54);
    v57 = sub_1A5B68C48(13);
    v58 = sub_1A5BC9DF4();

    if ((v58 & 1) != 0)
    {
      if (qword_1ED111118 != -1)
        swift_once();
      v59 = FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 488), 1, 1);
      swift_bridgeObjectRelease();
      if (v59)
      {
        v60 = v59;
        v61 = sub_1A5BC9A4C();
        v62 = sub_1A5BC9D88();
        if (os_log_type_enabled(v61, v62))
        {
          log = v61;
          v63 = (uint8_t *)swift_slowAlloc();
          v97 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v63 = 138412290;
          *(_QWORD *)(v0 + 240) = v60;
          v64 = v60;
          sub_1A5BC9E18();
          *v97 = v59;

          v61 = log;
          _os_log_impl(&dword_1A5B4D000, log, v62, "FeatureRequest failed because we're missing auth header, falling back to cached feature %@", v63, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
          swift_arrayDestroy();
          MEMORY[0x1A85B2FC0](v97, -1, -1);
          MEMORY[0x1A85B2FC0](v63, -1, -1);
        }
        else
        {

        }
        v93 = *(void (**)(id, _QWORD))(v0 + 384);
        v94 = v60;
        v93(v59, 0);

        goto LABEL_56;
      }
      v79 = *(void (**)(_QWORD, id))(v0 + 384);
      swift_getErrorValue();
      v80 = *(_QWORD *)(v0 + 72);
    }
    else
    {
      v65 = v38;
      v66 = v38;
      v67 = sub_1A5BC9A4C();
      v68 = sub_1A5BC9D88();
      if (os_log_type_enabled(v67, v68))
      {
        v69 = (uint8_t *)swift_slowAlloc();
        v70 = swift_slowAlloc();
        v102[0] = v70;
        *(_DWORD *)v69 = 136446210;
        swift_getErrorValue();
        v71 = sub_1A5BCA130();
        *(_QWORD *)(v0 + 216) = sub_1A5B58A30(v71, v72, v102);
        sub_1A5BC9E18();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1A5B4D000, v67, v68, "FeatureRequest failed with error: %{public}s", v69, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v70, -1, -1);
        MEMORY[0x1A85B2FC0](v69, -1, -1);
      }
      else
      {

      }
      if ((*(_BYTE *)(v0 + 193) & 1) != 0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1ED111118 != -1)
          swift_once();
        v73 = FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 488), 1, 1);
        swift_bridgeObjectRelease();
        if (v73)
        {
          v74 = v73;
          v75 = sub_1A5BC9A4C();
          v76 = sub_1A5BC9DA0();
          if (os_log_type_enabled(v75, v76))
          {
            v100 = v75;
            v77 = (uint8_t *)swift_slowAlloc();
            v98 = (_QWORD *)swift_slowAlloc();
            *(_DWORD *)v77 = 138412290;
            *(_QWORD *)(v0 + 208) = v74;
            v78 = v74;
            sub_1A5BC9E18();
            *v98 = v73;

            v75 = v100;
            _os_log_impl(&dword_1A5B4D000, v100, v76, "Falling back to cached feature: %@", v77, 0xCu);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
            swift_arrayDestroy();
            MEMORY[0x1A85B2FC0](v98, -1, -1);
            MEMORY[0x1A85B2FC0](v77, -1, -1);
          }
          else
          {

          }
          v95 = *(void (**)(id, _QWORD))(v0 + 384);
          v96 = v74;
          v95(v73, 0);

          goto LABEL_54;
        }
      }
      v79 = *(void (**)(_QWORD, id))(v0 + 384);
      swift_getErrorValue();
      v80 = *(_QWORD *)(v0 + 48);
    }
    v81 = sub_1A5B5A758(v80);
    v79(0, v81);

LABEL_54:
    v92 = v38;
LABEL_55:

    goto LABEL_56;
  }

  swift_bridgeObjectRelease_n();
  if (!MKBDeviceUnlockedSinceBoot())
    goto LABEL_19;
LABEL_14:
  if ((sub_1A5BC9BFC() & 1) == 0)
  {
LABEL_17:
    *(_QWORD *)(v0 + 496) = *(_QWORD *)(*(_QWORD *)(v0 + 376)
                                      + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_taskLimiters);
    return swift_task_switch();
  }
  sub_1A5B55C6C(0, (unint64_t *)&qword_1ED10FC70);
  v31 = (void *)sub_1A5BC9DC4();
  v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CA6E38]), sel_initWithQueue_, v31);

  *(_QWORD *)(v0 + 336) = 0;
  v33 = objc_msgSend(v32, sel_getStewieSupport_, v0 + 336);

  v34 = *(void **)(v0 + 336);
  if (v33)
  {
    v35 = v34;
    v36 = objc_msgSend(v33, sel_hwSupport);

    if ((v36 & 1) != 0)
      goto LABEL_17;
  }
  else
  {
    v51 = v34;
    v52 = (void *)sub_1A5BC9830();

    swift_willThrow();
  }
  v53 = *(void (**)(_QWORD, id))(v0 + 384);
  swift_bridgeObjectRelease();
  v50 = sub_1A5B68C48(12);
  v53(0, v50);
LABEL_27:

LABEL_56:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B79E40()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 504) = sub_1A5B50C44(0x75746165466C6C61, 0xEB00000000736572);
  return swift_task_switch();
}

uint64_t sub_1A5B79EC8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  _QWORD *v17;

  if (qword_1ED111118 != -1)
    swift_once();
  *(_QWORD *)(v0 + 512) = FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(0x6C6C2E64756F6C63, 0xE90000000000006DLL, *(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 488), 0, 1);
  v1 = sub_1A5BC9A4C();
  v2 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1A5B4D000, v1, v2, "Attempting to get eligibility for feature request.", v3, 2u);
    MEMORY[0x1A85B2FC0](v3, -1, -1);
  }

  v4 = sub_1A5B85398();
  v5 = sub_1A5BC9A4C();
  v6 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    *(_QWORD *)(v0 + 328) = v4;
    v9 = v4;
    sub_1A5BC9E18();
    *v8 = v4;

    _os_log_impl(&dword_1A5B4D000, v5, v6, "Eligibility was ready for feature request: %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v8, -1, -1);
    MEMORY[0x1A85B2FC0](v7, -1, -1);

    v4 = v9;
  }
  else
  {

  }
  *(_BYTE *)(v0 + 194) = 1;
  *(_QWORD *)(v0 + 520) = v4;
  v11 = *(_QWORD *)(v0 + 480);
  v10 = *(_QWORD *)(v0 + 488);
  v13 = *(_QWORD *)(v0 + 360);
  v12 = *(_QWORD *)(v0 + 368);
  v14 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 528) = v14;
  v14[2] = v13;
  v14[3] = v12;
  v14[4] = v4;
  v14[5] = v11;
  v14[6] = v10;
  v15 = dword_1EE7FAE60;
  swift_bridgeObjectRetain();
  v16 = v4;
  swift_bridgeObjectRetain();
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 536) = v17;
  *v17 = v0;
  v17[1] = sub_1A5B7A608;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE7FAE60 + v15))(0x75746165466C6C61, 0xEB00000000736572, (uint64_t)&unk_1EE7FA7B8, (uint64_t)v14);
}

uint64_t sub_1A5B7A608(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 544) = a1;
  *(_QWORD *)(v3 + 552) = v1;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1A5B7A6CC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  BOOL v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  BOOL v19;
  unint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t);
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  void *v41;
  char *v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  _QWORD *v52;
  id v53;
  id v54;
  id v55;
  char *v56;
  id v57;
  void *v58;
  NSObject *v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  _QWORD *v63;
  NSObject *v64;
  uint8_t *v65;
  os_log_type_t v66;
  uint8_t *v67;
  _QWORD *v68;
  uint64_t v69;
  uint8_t *v70;
  void *v71;
  void *v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  BOOL v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  void *v87;
  void *v88;
  uint64_t v89[2];

  v89[1] = *MEMORY[0x1E0C80C00];
  v1 = *(_QWORD *)(v0 + 544);
  v3 = *(_QWORD *)(v0 + 360);
  v2 = *(_QWORD *)(v0 + 368);
  swift_bridgeObjectRetain();
  v4 = sub_1A5B80668(v1, v3, v2);
  swift_bridgeObjectRelease();
  v88 = v4;
  if (v4)
  {
    swift_bridgeObjectRelease();
    v5 = v4;
    swift_bridgeObjectRetain_n();
    v6 = (char *)v5;
    v7 = sub_1A5BC9A4C();
    v8 = sub_1A5BC9DA0();
    v9 = os_log_type_enabled(v7, v8);
    v10 = *(_QWORD *)(v0 + 368);
    if (v9)
    {
      v11 = *(_QWORD *)(v0 + 360);
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v89[0] = v13;
      *(_DWORD *)v12 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 280) = sub_1A5B58A30(v11, v10, v89);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v12 + 12) = 1024;
      v14 = &v6[OBJC_IVAR___CloudFeature_canUse];
      swift_beginAccess();
      v15 = *v14;

      *(_DWORD *)(v0 + 196) = v15;
      sub_1A5BC9E18();

      _os_log_impl(&dword_1A5B4D000, v7, v8, "Feature %s fetched. Can use: %{BOOL}d", (uint8_t *)v12, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v13, -1, -1);
      MEMORY[0x1A85B2FC0](v12, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v16 = 0;
  }
  else
  {
    swift_bridgeObjectRetain_n();
    v17 = sub_1A5BC9A4C();
    v18 = sub_1A5BC9DA0();
    v19 = os_log_type_enabled(v17, v18);
    v20 = *(_QWORD *)(v0 + 368);
    if (v19)
    {
      v85 = *(_QWORD *)(v0 + 360);
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v89[0] = v22;
      *(_DWORD *)v21 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 272) = sub_1A5B58A30(v85, v20, v89);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A5B4D000, v17, v18, "No value returned for feature %s assuming unavailable and stubbing in cache to prevent excessive requests.", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v22, -1, -1);
      MEMORY[0x1A85B2FC0](v21, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v86 = *(_BYTE *)(v0 + 194);
    v24 = *(_QWORD *)(v0 + 480);
    v23 = *(_QWORD *)(v0 + 488);
    v25 = *(_QWORD *)(v0 + 456);
    v26 = *(_QWORD *)(v0 + 464);
    v28 = *(_QWORD *)(v0 + 440);
    v27 = *(_QWORD *)(v0 + 448);
    v30 = *(_QWORD *)(v0 + 360);
    v29 = *(_QWORD *)(v0 + 368);
    sub_1A5BC9968();
    sub_1A5BC98E4();
    v31 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v31(v25, v28);
    sub_1A5B8E1FC(v30, v29, v26, v24, v23, v86);
    swift_bridgeObjectRelease();
    v31(v26, v28);
    v16 = sub_1A5B68C48(4);
  }
  v32 = *(_QWORD *)(v0 + 544);
  if (v32 >> 62)
  {
    swift_bridgeObjectRetain();
    v33 = sub_1A5BC9F5C();
    if (!v33)
      goto LABEL_19;
  }
  else
  {
    v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v33)
      goto LABEL_19;
  }
  v34 = *(_QWORD *)(v0 + 544);
  v35 = v32 & 0xC000000000000001;
  if (v35)
    v36 = (char *)MEMORY[0x1A85B2594](0, v34);
  else
    v36 = (char *)*(id *)(v34 + 32);
  v37 = v36;
  if (*(_QWORD *)&v36[OBJC_IVAR___CloudFeature_featureID] == 0x6C6C2E64756F6C63
    && *(_QWORD *)&v36[OBJC_IVAR___CloudFeature_featureID + 8] == 0xE90000000000006DLL
    || (sub_1A5BCA0B8() & 1) != 0)
  {
LABEL_17:
    swift_bridgeObjectRelease_n();
    goto LABEL_20;
  }

  if (v33 != 1)
  {
    if (v35)
    {
      v74 = 1;
      while (1)
      {
        v75 = MEMORY[0x1A85B2594](v74, *(_QWORD *)(v0 + 544));
        v76 = v74 + 1;
        if (__OFADD__(v74, 1))
          break;
        v37 = (char *)v75;
        v77 = *(_QWORD *)(v75 + OBJC_IVAR___CloudFeature_featureID) == 0x6C6C2E64756F6C63
           && *(_QWORD *)(v75 + OBJC_IVAR___CloudFeature_featureID + 8) == 0xE90000000000006DLL;
        if (v77 || (sub_1A5BCA0B8() & 1) != 0)
          goto LABEL_17;
        swift_unknownObjectRelease();
        ++v74;
        if (v76 == v33)
          goto LABEL_19;
      }
      __break(1u);
LABEL_62:
      __break(1u);
    }
    v78 = *(_QWORD *)(v0 + 544);
    v79 = 5;
    while (1)
    {
      v80 = v79 - 3;
      if (__OFADD__(v79 - 4, 1))
        goto LABEL_62;
      v81 = *(char **)(v78 + 8 * v79);
      v82 = *(_QWORD *)&v81[OBJC_IVAR___CloudFeature_featureID] == 0x6C6C2E64756F6C63
         && *(_QWORD *)&v81[OBJC_IVAR___CloudFeature_featureID + 8] == 0xE90000000000006DLL;
      if (v82 || (sub_1A5BCA0B8() & 1) != 0)
        break;
      ++v79;
      if (v80 == v33)
        goto LABEL_19;
    }
    v37 = v81;
    goto LABEL_17;
  }
LABEL_19:
  swift_bridgeObjectRelease_n();
  v37 = 0;
LABEL_20:
  type metadata accessor for Assets();
  sub_1A5B92498();
  v38 = sub_1A5BC9A4C();
  v39 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v40 = 0;
    _os_log_impl(&dword_1A5B4D000, v38, v39, "Determining if user is eligible for CFU.", v40, 2u);
    MEMORY[0x1A85B2FC0](v40, -1, -1);
  }

  v41 = *(void **)(v0 + 512);
  if (!v37)
  {
    if (!v41)
    {
      v60 = sub_1A5BC9A4C();
      v69 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v60, (os_log_type_t)v69))
      {
        v70 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v70 = 0;
        _os_log_impl(&dword_1A5B4D000, v60, (os_log_type_t)v69, "User is not eligible for CFU because old and new feature objects are nil.", v70, 2u);
        MEMORY[0x1A85B2FC0](v70, -1, -1);
      }
      goto LABEL_36;
    }
    v59 = v41;
    v60 = sub_1A5BC9A4C();
    v61 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v60, v61))
    {
      v84 = *(_QWORD *)(v0 + 512);
      v62 = (uint8_t *)swift_slowAlloc();
      v63 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v62 = 138412290;
      *(_QWORD *)(v0 + 256) = v59;
      v64 = v59;
      sub_1A5BC9E18();
      *v63 = v84;

      _os_log_impl(&dword_1A5B4D000, v60, v61, "User is not eligible for CFU because new feature object is nil. Old object: %@", v62, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v63, -1, -1);
      v65 = v62;
LABEL_32:
      MEMORY[0x1A85B2FC0](v65, -1, -1);

LABEL_36:
      v58 = v88;

      v71 = *(void **)(v0 + 520);
      v72 = *(void **)(v0 + 512);
      (*(void (**)(void *, id))(v0 + 384))(v88, v16);
      swift_release();

      goto LABEL_37;
    }
LABEL_33:

    v60 = v59;
    goto LABEL_36;
  }
  if (!v41)
  {
    v59 = v37;
    v60 = sub_1A5BC9A4C();
    v66 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v60, v66))
    {
      v67 = (uint8_t *)swift_slowAlloc();
      v68 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v67 = 138412290;
      *(_QWORD *)(v0 + 264) = v59;
      v64 = v59;
      sub_1A5BC9E18();
      *v68 = v37;

      _os_log_impl(&dword_1A5B4D000, v60, v66, "User is not eligible for CFU because old feature object is nil. New object: %@", v67, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v68, -1, -1);
      v65 = v67;
      goto LABEL_32;
    }
    goto LABEL_33;
  }
  v87 = v16;
  v42 = v37;
  v43 = v41;
  v44 = sub_1A5BC9A4C();
  v45 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v44, v45))
  {
    v46 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v46 = 0;
    _os_log_impl(&dword_1A5B4D000, v44, v45, "User had old and new features, attempting to further check eligiblity.", v46, 2u);
    MEMORY[0x1A85B2FC0](v46, -1, -1);
  }
  v83 = *(void **)(v0 + 520);
  v47 = *(_QWORD *)(v0 + 432);
  v48 = *(_QWORD *)(v0 + 384);
  v49 = *(_QWORD *)(v0 + 392);
  v50 = *(void **)(v0 + 376);

  v51 = sub_1A5BC9CF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v47, 1, 1, v51);
  v52 = (_QWORD *)swift_allocObject();
  v52[2] = 0;
  v52[3] = 0;
  v52[4] = v48;
  v52[5] = v49;
  v52[6] = v88;
  v52[7] = v87;
  v52[8] = v50;
  v52[9] = v43;
  v52[10] = v42;
  v53 = v87;
  v54 = v50;
  v55 = v88;
  v56 = v42;
  v57 = v43;
  swift_retain();
  sub_1A5BA0C88(v47, (uint64_t)&unk_1EE7FA7C8, (uint64_t)v52);
  swift_release();
  swift_release();

  v58 = v83;
LABEL_37:

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B7B1D8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  unint64_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  char v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  id v36;
  void (*v37)(_QWORD, id);
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(id, _QWORD);
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  void *v50;
  void (*v51)(id, _QWORD);
  id v52;
  void (*v53)(id, _QWORD);
  id v54;
  _QWORD *v56;
  _QWORD *v57;
  NSObject *log;
  NSObject *loga;
  uint64_t v60[2];

  v60[1] = *MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + 512);

  swift_release();
  v2 = *(void **)(v0 + 552);
  *(_QWORD *)(v0 + 312) = v2;
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v4 = *(_QWORD *)(v0 + 424);
    if (swift_getEnumCaseMultiPayload() == 2)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain_n();
      v5 = sub_1A5BC9A4C();
      v6 = sub_1A5BC9DA0();
      v7 = os_log_type_enabled(v5, v6);
      v8 = *(_QWORD *)(v0 + 368);
      if (v7)
      {
        v9 = *(_QWORD *)(v0 + 360);
        v10 = (uint8_t *)swift_slowAlloc();
        v11 = swift_slowAlloc();
        v60[0] = v11;
        *(_DWORD *)v10 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 248) = sub_1A5B58A30(v9, v8, v60);
        sub_1A5BC9E18();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A5B4D000, v5, v6, "Feature %s received 204 network response", v10, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v11, -1, -1);
        MEMORY[0x1A85B2FC0](v10, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      v40 = *(_QWORD *)(v0 + 464);
      v41 = *(_QWORD *)(v0 + 440);
      v42 = *(_QWORD *)(v0 + 448);
      v44 = *(_QWORD *)(v0 + 400);
      v43 = *(_QWORD *)(v0 + 408);
      v45 = *(void (**)(id, _QWORD))(v0 + 384);
      v47 = *(_QWORD *)(v0 + 360);
      v46 = *(_QWORD *)(v0 + 368);
      sub_1A5BC9968();
      sub_1A5BC98E4();
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v43, 0, 1, v41);
      sub_1A5B54780(v43, v44);
      v48 = objc_allocWithZone((Class)type metadata accessor for CloudFeature());
      swift_bridgeObjectRetain();
      v49 = sub_1A5B71B2C(v47, v46, 0, 0, 1, 0, 0, v44);
      sub_1A5B4FBE8(v43, &qword_1ED111280);
      v45(v49, 0);

      v50 = *(void **)(v0 + 312);
      goto LABEL_32;
    }
    sub_1A5B81718(v4);
  }

  sub_1A5B55C6C(0, &qword_1ED110E20);
  swift_getErrorValue();
  v12 = *(_QWORD *)(v0 + 96);
  v13 = v2;
  v14 = sub_1A5B5A758(v12);
  v15 = sub_1A5B68C48(13);
  v16 = sub_1A5BC9DF4();

  if ((v16 & 1) == 0)
  {
    v23 = v2;
    v24 = v2;
    v25 = sub_1A5BC9A4C();
    v26 = sub_1A5BC9D88();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v60[0] = v28;
      *(_DWORD *)v27 = 136446210;
      swift_getErrorValue();
      v29 = sub_1A5BCA130();
      *(_QWORD *)(v0 + 216) = sub_1A5B58A30(v29, v30, v60);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A5B4D000, v25, v26, "FeatureRequest failed with error: %{public}s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v28, -1, -1);
      MEMORY[0x1A85B2FC0](v27, -1, -1);
    }
    else
    {

    }
    if ((*(_BYTE *)(v0 + 193) & 1) != 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_1ED111118 != -1)
        swift_once();
      v31 = FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 488), 1, 1);
      swift_bridgeObjectRelease();
      if (v31)
      {
        v32 = v31;
        v33 = sub_1A5BC9A4C();
        v34 = sub_1A5BC9DA0();
        if (os_log_type_enabled(v33, v34))
        {
          loga = v33;
          v35 = (uint8_t *)swift_slowAlloc();
          v57 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v35 = 138412290;
          *(_QWORD *)(v0 + 208) = v32;
          v36 = v32;
          sub_1A5BC9E18();
          *v57 = v31;

          v33 = loga;
          _os_log_impl(&dword_1A5B4D000, loga, v34, "Falling back to cached feature: %@", v35, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
          swift_arrayDestroy();
          MEMORY[0x1A85B2FC0](v57, -1, -1);
          MEMORY[0x1A85B2FC0](v35, -1, -1);
        }
        else
        {

        }
        v53 = *(void (**)(id, _QWORD))(v0 + 384);
        v54 = v32;
        v53(v31, 0);

        goto LABEL_31;
      }
    }
    v37 = *(void (**)(_QWORD, id))(v0 + 384);
    swift_getErrorValue();
    v38 = *(_QWORD *)(v0 + 48);
LABEL_24:
    v39 = sub_1A5B5A758(v38);
    v37(0, v39);

LABEL_31:
    v50 = v2;
LABEL_32:

    goto LABEL_33;
  }
  if (qword_1ED111118 != -1)
    swift_once();
  v17 = FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(*(_QWORD *)(v0 + 360), *(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 480), *(_QWORD *)(v0 + 488), 1, 1);
  swift_bridgeObjectRelease();
  if (!v17)
  {
    v37 = *(void (**)(_QWORD, id))(v0 + 384);
    swift_getErrorValue();
    v38 = *(_QWORD *)(v0 + 72);
    goto LABEL_24;
  }
  v18 = v17;
  v19 = sub_1A5BC9A4C();
  v20 = sub_1A5BC9D88();
  if (os_log_type_enabled(v19, v20))
  {
    log = v19;
    v21 = (uint8_t *)swift_slowAlloc();
    v56 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v21 = 138412290;
    *(_QWORD *)(v0 + 240) = v18;
    v22 = v18;
    sub_1A5BC9E18();
    *v56 = v17;

    v19 = log;
    _os_log_impl(&dword_1A5B4D000, log, v20, "FeatureRequest failed because we're missing auth header, falling back to cached feature %@", v21, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v56, -1, -1);
    MEMORY[0x1A85B2FC0](v21, -1, -1);
  }
  else
  {

  }
  v51 = *(void (**)(id, _QWORD))(v0 + 384);
  v52 = v18;
  v51(v17, 0);

LABEL_33:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B7BA94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[8] = a5;
  v6[9] = a6;
  v6[6] = a3;
  v6[7] = a4;
  v6[4] = a1;
  v6[5] = a2;
  return swift_task_switch();
}

uint64_t sub_1A5B7BAB4()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;

  if (qword_1ED10FB68 != -1)
    swift_once();
  v1 = sub_1A5BC9A64();
  v0[10] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED10FBE8);
  swift_bridgeObjectRetain_n();
  v2 = sub_1A5BC9A4C();
  v3 = sub_1A5BC9DA0();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[6];
  if (v4)
  {
    v6 = v0[5];
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[3] = sub_1A5B58A30(v6, v5, &v12);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v2, v3, "starting network fetch for %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v8, -1, -1);
    MEMORY[0x1A85B2FC0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v11 = (uint64_t (*)(uint64_t))((char *)&dword_1EE7FA4E8 + dword_1EE7FA4E8);
  v9 = (_QWORD *)swift_task_alloc();
  v0[11] = v9;
  *v9 = v0;
  v9[1] = sub_1A5B7BCA0;
  return v11(v0[7]);
}

uint64_t sub_1A5B7BCA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 96) = a1;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v3 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_1A5B7BD14()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  _BOOL4 v3;
  unint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v9;

  if (qword_1ED111118 != -1)
    swift_once();
  sub_1A5B8BCD8(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
  sub_1A5B8B314();
  swift_bridgeObjectRetain_n();
  v1 = sub_1A5BC9A4C();
  v2 = sub_1A5BC9DA0();
  v3 = os_log_type_enabled(v1, v2);
  v4 = *(_QWORD *)(v0 + 48);
  if (v3)
  {
    v5 = *(_QWORD *)(v0 + 40);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v9 = v7;
    *(_DWORD *)v6 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_1A5B58A30(v5, v4, &v9);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v1, v2, "network fetch finished for %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v7, -1, -1);
    MEMORY[0x1A85B2FC0](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  **(_QWORD **)(v0 + 32) = *(_QWORD *)(v0 + 96);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B7BED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v10)();
  uint64_t v11;
  uint64_t v12;

  v7[6] = v11;
  v7[7] = v12;
  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  v10 = (uint64_t (*)())((char *)&dword_1EE7FA7D0 + dword_1EE7FA7D0);
  v8 = (_QWORD *)swift_task_alloc();
  v7[8] = v8;
  *v8 = v7;
  v8[1] = sub_1A5B7BF4C;
  return v10();
}

uint64_t sub_1A5B7BF4C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5B7BFA0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  type metadata accessor for FollowUp();
  swift_allocObject();
  if (FollowUp.init()())
  {
    if (sub_1A5BB32D4(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56)))
      sub_1A5BB013C();
    swift_release();
  }
  else
  {
    if (qword_1ED10FB68 != -1)
      swift_once();
    v1 = sub_1A5BC9A64();
    __swift_project_value_buffer(v1, (uint64_t)qword_1ED10FBE8);
    v2 = sub_1A5BC9A4C();
    v3 = sub_1A5BC9D88();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1A5B4D000, v2, v3, "No FollowUp able to be created. Will not post CFU.", v4, 2u);
      MEMORY[0x1A85B2FC0](v4, -1, -1);
    }

  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1A5B7C0C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;

  v1 = v0;
  if (qword_1ED1110F0 != -1)
    swift_once();
  v2 = sub_1A5BC9A64();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED111100);
  v3 = sub_1A5BC9A4C();
  v4 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1A5B4D000, v3, v4, "Cache clear message received by ind!", v5, 2u);
    MEMORY[0x1A85B2FC0](v5, -1, -1);
  }

  v6 = (_QWORD *)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore + 24);
  v8 = v6[4];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v7, v8);
  if (v9
    && (v10 = v9, v11 = objc_msgSend(v9, sel_aa_altDSID), v10, v11))
  {
    v12 = sub_1A5BC9B60();
    v14 = v13;

    if (qword_1ED111118 != -1)
      swift_once();
    sub_1A5B8BDEC(v12, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1ED111118 != -1)
      swift_once();
    sub_1A5B8BDEC(0, 0);
  }
  v15 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v16 = (void *)sub_1A5BC9B3C();
  v17 = objc_msgSend(v15, sel_initWithSuiteName_, v16);

  v18 = sub_1A5B5C1B8(v17);
  v19 = sub_1A5B7C394();
  sub_1A5B8AD20((uint64_t)v19, v20);

  swift_bridgeObjectRelease();
  v21 = (void *)objc_opt_self();
  v22 = objc_msgSend(v21, sel_sharedInstance);
  v23 = objc_msgSend(v22, sel_controller);

  sub_1A5BB72A0();
  sub_1A5B8B314();
  v24 = objc_msgSend(v21, sel_sharedInstance);
  v25 = objc_msgSend(v24, sel_controller);

  sub_1A5B88708();
}

id sub_1A5B7C394()
{
  id result;
  void *v1;
  id v2;
  id v3;

  result = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, sel_aa_primaryAppleAccount);

    if (v2)
    {
      v3 = objc_msgSend(v2, sel_aa_altDSID);

      if (v3)
      {
        v2 = (id)sub_1A5BC9B60();

      }
      else
      {
        return 0;
      }
    }
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5B7C484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;

  v8[16] = v10;
  v8[17] = v11;
  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[11] = a4;
  return swift_task_switch();
}

uint64_t sub_1A5B7C4B0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 144) = *(_QWORD *)(*(_QWORD *)(v0 + 88)
                                    + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_taskLimiters);
  return swift_task_switch();
}

uint64_t sub_1A5B7C4D4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 152) = sub_1A5B50C44(0x6C69626967696C65, 0xEB00000000797469);
  return swift_task_switch();
}

uint64_t sub_1A5B7C530()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = v0[14];
  v1 = v0[15];
  v4 = v0[12];
  v3 = v0[13];
  v5 = (_QWORD *)swift_allocObject();
  v0[20] = v5;
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE7FAED8 + dword_1EE7FAED8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = (_QWORD *)swift_task_alloc();
  v0[21] = v6;
  *v6 = v0;
  v6[1] = sub_1A5B7C5F0;
  return v8(v0[12], v0[13], (uint64_t)&unk_1EE7FA798, (uint64_t)v5);
}

uint64_t sub_1A5B7C5F0(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 176) = v1;
  swift_task_dealloc();
  swift_release();
  if (!v1)
    *(_BYTE *)(v4 + 184) = a1 & 1;
  return swift_task_switch();
}

uint64_t sub_1A5B7C670()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 128))(*(unsigned __int8 *)(v0 + 184), 0);
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B7C6B4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  void (*v14)(_QWORD, id);
  id v15;
  uint64_t v17;

  swift_release();
  if (qword_1ED111140 != -1)
    swift_once();
  v1 = *(void **)(v0 + 176);
  v2 = sub_1A5BC9A64();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED1110D0);
  v3 = v1;
  v4 = v1;
  v5 = sub_1A5BC9A4C();
  v6 = sub_1A5BC9D88();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 176);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v17 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_getErrorValue();
    v11 = sub_1A5BCA130();
    *(_QWORD *)(v0 + 80) = sub_1A5B58A30(v11, v12, &v17);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A5B4D000, v5, v6, "Received error from server: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v10, -1, -1);
    MEMORY[0x1A85B2FC0](v9, -1, -1);
  }
  else
  {

  }
  v13 = *(void **)(v0 + 176);
  v14 = *(void (**)(_QWORD, id))(v0 + 128);
  swift_getErrorValue();
  v15 = sub_1A5B5A758(*(_QWORD *)(v0 + 24));
  v14(0, v15);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B7C8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (__cdecl *v8)();

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v8 = (uint64_t (__cdecl *)())((char *)&dword_1EE7FA5A0 + dword_1EE7FA5A0);
  v6 = (_QWORD *)swift_task_alloc();
  v5[7] = v6;
  *v6 = v5;
  v6[1] = sub_1A5B7C940;
  return v8();
}

uint64_t sub_1A5B7C940(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 64) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B7C9BC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = sub_1A5B8EB1C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 64));
  swift_bridgeObjectRelease();
  if (qword_1ED111140 != -1)
    swift_once();
  v2 = sub_1A5BC9A64();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED1110D0);
  v3 = sub_1A5BC9A4C();
  v4 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 67240192;
    *(_DWORD *)(v0 + 72) = v1 & 1;
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v3, v4, "Returning eligibility %{BOOL,public}d from server", v5, 8u);
    MEMORY[0x1A85B2FC0](v5, -1, -1);
  }

  **(_BYTE **)(v0 + 16) = v1 & 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1A5B7CAFC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v26;

  if (qword_1ED111140 != -1)
    swift_once();
  v16 = sub_1A5BC9A64();
  __swift_project_value_buffer(v16, (uint64_t)qword_1ED1110D0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v17 = sub_1A5BC9A4C();
  v18 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v23 = a8;
    v20 = swift_slowAlloc();
    v26 = v20;
    *(_DWORD *)v19 = 136315394;
    swift_bridgeObjectRetain();
    sub_1A5B58A30(a1, a2, &v26);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1A5B58A30(a3, a4, &v26);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v17, v18, "Requesting geoclassification for featureID %s and bundleID %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    v21 = v20;
    a8 = v23;
    MEMORY[0x1A85B2FC0](v21, -1, -1);
    MEMORY[0x1A85B2FC0](v19, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  v22 = sub_1A5B57E54();
  sub_1A5B80EF8(a1, a2, a3, a4, a5, a6, a7 & 1, a8, a9, v24);

}

uint64_t sub_1A5B7CE70(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  *(_QWORD *)(v8 + 120) = v13;
  *(_OWORD *)(v8 + 104) = v12;
  *(_OWORD *)(v8 + 88) = v11;
  *(_QWORD *)(v8 + 72) = a7;
  *(_QWORD *)(v8 + 80) = a8;
  *(_QWORD *)(v8 + 56) = a5;
  *(_QWORD *)(v8 + 64) = a6;
  *(_BYTE *)(v8 + 200) = a4;
  v9 = sub_1A5BC9974();
  *(_QWORD *)(v8 + 128) = v9;
  *(_QWORD *)(v8 + 136) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 144) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5B7CEEC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void *v18;
  id v19;
  void (*v21)(void *, _QWORD);
  id v22;
  _QWORD *v23;
  NSObject *log;

  if ((*(_BYTE *)(v0 + 200) & 1) != 0
    || (v1 = sub_1A5B8A810(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(void **)(*(_QWORD *)(v0 + 56)+ OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_geoCache))) == 0)
  {
    *(_QWORD *)(v0 + 152) = *(_QWORD *)(*(_QWORD *)(v0 + 56)
                                      + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_taskLimiters);
    return swift_task_switch();
  }
  else
  {
    v2 = v1;
    v3 = *(_QWORD *)(v0 + 136);
    v4 = *(_QWORD *)(v0 + 144);
    v5 = *(_QWORD *)(v0 + 128);
    sub_1A5BC9968();
    v6 = sub_1A5BC98FC();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
    if ((v6 & 1) != 0)
    {
      v8 = *(_QWORD *)(v0 + 96);
      v7 = *(_QWORD *)(v0 + 104);
      v9 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
      v10 = (void *)sub_1A5BC9B3C();
      v11 = objc_msgSend(v9, sel_initWithSuiteName_, v10);

      v12 = sub_1A5B5C1B8(v11);
      sub_1A5B8AD20(v8, v7);

    }
    if (qword_1ED111140 != -1)
      swift_once();
    v13 = sub_1A5BC9A64();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED1110D0);
    v14 = v2;
    swift_bridgeObjectRetain();
    v15 = sub_1A5BC9A4C();
    v16 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v23 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v17 = 138412290;
      *(_QWORD *)(v0 + 48) = v14;
      log = v15;
      v18 = v2;
      v19 = v14;
      sub_1A5BC9E18();
      *v23 = v18;
      swift_bridgeObjectRelease();

      v2 = v18;
      v15 = log;
      _os_log_impl(&dword_1A5B4D000, log, v16, "serving geoclassification info from cache: %@", v17, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v23, -1, -1);
      MEMORY[0x1A85B2FC0](v17, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();

    }
    v21 = *(void (**)(void *, _QWORD))(v0 + 112);
    v22 = v14;
    v21(v2, 0);
    swift_bridgeObjectRelease();

    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1A5B7D200()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 160) = sub_1A5B50C44(7300455, 0xE300000000000000);
  return swift_task_switch();
}

uint64_t sub_1A5B7D24C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  id v9;
  _QWORD *v10;
  char *v12;

  v2 = v0[12];
  v1 = v0[13];
  v4 = v0[10];
  v3 = v0[11];
  v6 = v0[8];
  v5 = v0[9];
  v7 = (void *)v0[7];
  v8 = (_QWORD *)swift_allocObject();
  v0[21] = v8;
  v8[2] = v2;
  v8[3] = v1;
  v8[4] = v7;
  v8[5] = v6;
  v8[6] = v5;
  v8[7] = v4;
  v8[8] = v3;
  v12 = (char *)&dword_1EE7FAEB8 + dword_1EE7FAEB8;
  swift_bridgeObjectRetain();
  v9 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = (_QWORD *)swift_task_alloc();
  v0[22] = v10;
  *v10 = v0;
  v10[1] = sub_1A5B7D334;
  return ((uint64_t (*)(_QWORD, _QWORD, void *, _QWORD *))v12)(v0[8], v0[9], &unk_1EE7FA778, v8);
}

uint64_t sub_1A5B7D334(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 184) = v1;
  swift_task_dealloc();
  swift_release();
  if (!v1)
    *(_QWORD *)(v4 + 192) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B7D3B0()
{
  uint64_t v0;
  void *v1;
  void (*v2)(void *, _QWORD);
  id v3;

  v1 = *(void **)(v0 + 192);
  v2 = *(void (**)(void *, _QWORD))(v0 + 112);
  v3 = v1;
  v2(v1, 0);

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B7D420()
{
  uint64_t v0;
  void *v1;
  void (*v2)(_QWORD, id);
  id v3;

  v1 = *(void **)(v0 + 184);
  v2 = *(void (**)(_QWORD, id))(v0 + 112);
  swift_release();
  swift_getErrorValue();
  v3 = sub_1A5B5A758(*(_QWORD *)(v0 + 24));
  v2(0, v3);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B7D4B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);

  v8[22] = a7;
  v8[23] = a8;
  v8[20] = a5;
  v8[21] = a6;
  v8[18] = a3;
  v8[19] = a4;
  v8[16] = a1;
  v8[17] = a2;
  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EE7FA578 + dword_1EE7FA578);
  v11 = (_QWORD *)swift_task_alloc();
  v8[24] = v11;
  *v11 = v8;
  v11[1] = sub_1A5B7D540;
  return v13((uint64_t)(v8 + 2), a2, a3);
}

uint64_t sub_1A5B7D540()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 200) = v0;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_1A5B7D5AC()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  _OWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t *v11;

  v1 = *(NSObject **)(*(_QWORD *)(v0 + 152) + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_geoCache);
  v2 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v0 + 120) = v2;
  v3 = (_OWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 176);
  v5 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 168);
  sub_1A5B8AF88(v2, *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), v1);
  v9 = sub_1A5B8F0F8(v8, v7, v6, v5);
  if (v4)
  {
    *(_OWORD *)(v0 + 56) = *v3;
    sub_1A5B81B24(v0 + 56);
    *(_OWORD *)(v0 + 72) = *(_OWORD *)(v0 + 32);
    sub_1A5B81B24(v0 + 72);
    sub_1A5B81B4C(v0 + 120);
  }
  else
  {
    v10 = v9;
    v11 = *(unint64_t **)(v0 + 128);
    *(_OWORD *)(v0 + 88) = *v3;
    sub_1A5B81B24(v0 + 88);
    *(_OWORD *)(v0 + 104) = *(_OWORD *)(v0 + 32);
    sub_1A5B81B24(v0 + 104);
    sub_1A5B81B4C(v0 + 120);
    *v11 = v10;
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B7D704(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5B7E7A0(a1, a2, a3, a4, "Fetching ticket %s", (uint64_t)&unk_1E4F6EC28, (uint64_t)&unk_1EE7FA748);
}

uint64_t sub_1A5B7D720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[20] = a7;
  v8[21] = a8;
  v8[18] = a5;
  v8[19] = a6;
  v8[17] = a4;
  return swift_task_switch();
}

uint64_t sub_1A5B7D744()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  unint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  unint64_t v29;

  if (qword_1ED10FB68 != -1)
    swift_once();
  v1 = sub_1A5BC9A64();
  v0[22] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED10FBE8);
  swift_bridgeObjectRetain_n();
  v2 = sub_1A5BC9A4C();
  v3 = sub_1A5BC9DA0();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[18];
  if (v4)
  {
    v6 = v0[17];
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v28 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[16] = sub_1A5B58A30(v6, v5, &v28);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v2, v3, "Starting fetch for ticket %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v8, -1, -1);
    MEMORY[0x1A85B2FC0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = (_QWORD *)(v0[19] + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore);
  v10 = v9[3];
  v11 = v9[4];
  __swift_project_boxed_opaque_existential_1(v9, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  v14 = v13;
  v0[23] = v12;
  v0[24] = v13;
  if (qword_1ED110488 != -1)
    swift_once();
  v15 = (char *)sub_1A5B77908(v0[17], v0[18], v12, v14);
  if (v15)
  {
    v16 = v15;
    v17 = *(_QWORD *)&v15[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_ticket];
    v18 = *(_QWORD *)&v15[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_ticket + 8];
    swift_bridgeObjectRetain();

  }
  else
  {
    v17 = 0;
    v18 = 0;
  }
  v0[25] = v17;
  v0[26] = v18;
  swift_bridgeObjectRetain_n();
  v19 = sub_1A5BC9A4C();
  v20 = sub_1A5BC9DA0();
  v21 = os_log_type_enabled(v19, v20);
  v22 = v0[18];
  if (v21)
  {
    v23 = v0[17];
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v28 = v25;
    *(_DWORD *)v24 = 136315138;
    swift_bridgeObjectRetain();
    v0[15] = sub_1A5B58A30(v23, v22, &v28);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v19, v20, "No valid cache value for ticket %s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v25, -1, -1);
    MEMORY[0x1A85B2FC0](v24, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v0[27] = *(_QWORD *)(v0[19] + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_taskLimiters);
  v28 = 0x5F74656B636974;
  v29 = 0xE700000000000000;
  sub_1A5BC9BE4();
  v26 = v29;
  v0[28] = v28;
  v0[29] = v26;
  return swift_task_switch();
}

uint64_t sub_1A5B7DB2C()
{
  uint64_t *v0;

  v0[30] = sub_1A5B50C44(v0[28], v0[29]);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1A5B7DB7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __int128 v8;

  v8 = *(_OWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 184);
  v1 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  sub_1A5BC9BE4();
  *(_QWORD *)(v0 + 248) = 0xE700000000000000;
  v5 = swift_allocObject();
  *(_QWORD *)(v0 + 256) = v5;
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *(_OWORD *)(v5 + 32) = v8;
  *(_QWORD *)(v5 + 48) = v2;
  *(_QWORD *)(v5 + 56) = v1;
  *(_QWORD *)&v8 = (char *)&dword_1EE7FAE98 + dword_1EE7FAE98;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 264) = v6;
  *v6 = v0;
  v6[1] = sub_1A5B7DC8C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(0x5F74656B636974, 0xE700000000000000, (uint64_t)&unk_1EE7FA758, v5);
}

uint64_t sub_1A5B7DC8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 272) = v1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 280) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1A5B7DD24()
{
  uint64_t v0;
  char *v1;
  void (*v2)(void *, _QWORD);
  void *v3;
  id v4;

  v1 = *(char **)(v0 + 280);
  v2 = *(void (**)(void *, _QWORD))(v0 + 160);
  v3 = *(void **)&v1[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status];
  v4 = v3;
  v2(v3, 0);

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B7DD9C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void *v16;
  void (*v17)(void *, id);
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  void (*v22)(_QWORD, char *);
  uint64_t v24;

  v1 = *(void **)(v0 + 272);
  swift_release();
  v2 = v1;
  v3 = v1;
  v4 = sub_1A5BC9A4C();
  v5 = sub_1A5BC9D88();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 272);
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v24 = v8;
    *(_DWORD *)v7 = 136446210;
    swift_getErrorValue();
    v9 = sub_1A5BCA130();
    *(_QWORD *)(v0 + 112) = sub_1A5B58A30(v9, v10, &v24);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A5B4D000, v4, v5, "GetTicketStatus failed with error: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v8, -1, -1);
    MEMORY[0x1A85B2FC0](v7, -1, -1);
  }
  else
  {
    v11 = *(void **)(v0 + 272);

  }
  v12 = (char *)sub_1A5B77908(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192));
  swift_bridgeObjectRelease();
  if (v12)
  {
    v13 = sub_1A5BC9A4C();
    v14 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1A5B4D000, v13, v14, "Returning cached ticket status.", v15, 2u);
      MEMORY[0x1A85B2FC0](v15, -1, -1);
    }
    v16 = *(void **)(v0 + 272);
    v17 = *(void (**)(void *, id))(v0 + 160);

    v18 = *(void **)&v12[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status];
    swift_getErrorValue();
    v19 = *(_QWORD *)(v0 + 72);
    v20 = v18;
    v21 = sub_1A5B5A758(v19);
    v17(v18, v21);

  }
  else
  {
    v16 = *(void **)(v0 + 272);
    v22 = *(void (**)(_QWORD, char *))(v0 + 160);
    swift_getErrorValue();
    v12 = (char *)sub_1A5B5A758(*(_QWORD *)(v0 + 48));
    v22(0, v12);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B7E088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  v7[5] = a2;
  v7[6] = a3;
  v7[4] = a1;
  v7[11] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1104F8);
  v7[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5B7E0F4()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  if (qword_1ED10FB68 != -1)
    swift_once();
  v1 = sub_1A5BC9A64();
  v0[13] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED10FBE8);
  swift_bridgeObjectRetain_n();
  v2 = sub_1A5BC9A4C();
  v3 = sub_1A5BC9DA0();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[6];
  if (v4)
  {
    v6 = v0[5];
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[3] = sub_1A5B58A30(v6, v5, &v13);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v2, v3, "Starting network fetch for ticket %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v8, -1, -1);
    MEMORY[0x1A85B2FC0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = _s25CloudSubscriptionFeatures18EligibilityFetcherC7currentAA0D0CvgZ_0();
  v0[14] = v9;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE7FA570 + dword_1EE7FA570);
  v10 = (_QWORD *)swift_task_alloc();
  v0[15] = v10;
  *v10 = v0;
  v10[1] = sub_1A5B7E2F4;
  return v12(v0[5], v0[6], v0[7], v0[8], (uint64_t)v9);
}

uint64_t sub_1A5B7E2F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 128) = a1;
  *(_QWORD *)(v3 + 136) = v1;
  swift_task_dealloc();
  if (!v1)

  return swift_task_switch();
}

uint64_t sub_1A5B7E368()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  _QWORD *v11;
  _QWORD *v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  unint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v21;

  if (qword_1ED110488 != -1)
    swift_once();
  v1 = *(void **)(v0 + 128);
  v2 = *(_QWORD **)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(int **)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  sub_1A5BC9818();
  swift_allocObject();
  sub_1A5BC980C();
  v8 = (char *)v2 + v3[11];
  v9 = sub_1A5BC9974();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  swift_bridgeObjectRetain();
  v10 = v1;
  sub_1A5BC995C();
  *v2 = v10;
  v11 = (_QWORD *)((char *)v2 + v3[13]);
  *v11 = 0;
  v11[1] = 0;
  v12 = (_QWORD *)((char *)v2 + v3[14]);
  *v12 = v5;
  v12[1] = v4;
  sub_1A5B780C0(v7, v6);
  sub_1A5B4FBE8((uint64_t)v2, &qword_1ED1104F8);
  swift_release();
  type metadata accessor for Assets();
  sub_1A5B92498();
  sub_1A5B8B328();
  swift_bridgeObjectRetain_n();
  v13 = sub_1A5BC9A4C();
  v14 = sub_1A5BC9DA0();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 48);
  if (v15)
  {
    v17 = *(_QWORD *)(v0 + 40);
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v21 = v19;
    *(_DWORD *)v18 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 16) = sub_1A5B58A30(v17, v16, &v21);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v13, v14, "Network fetch finished for %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v19, -1, -1);
    MEMORY[0x1A85B2FC0](v18, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  **(_QWORD **)(v0 + 32) = *(_QWORD *)(v0 + 128);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B7E600()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B7E784(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1A5B7E7A0(a1, a2, a3, a4, "Getting or fetching ticket %s", (uint64_t)&unk_1E4F6EBB0, (uint64_t)&unk_1EE7FA720);
}

uint64_t sub_1A5B7E7A0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  void *v10;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  const char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v35 = a5;
  v10 = v7;
  ObjectType = swift_getObjectType();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B0);
  MEMORY[0x1E0C80A78](v16);
  v36 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED10FB68 != -1)
    swift_once();
  v18 = sub_1A5BC9A64();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED10FBE8);
  swift_bridgeObjectRetain_n();
  v19 = sub_1A5BC9A4C();
  v20 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v19, v20))
  {
    v34 = a3;
    v21 = swift_slowAlloc();
    v31 = a6;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc();
    v32 = ObjectType;
    v24 = v23;
    v38 = v23;
    v33 = v10;
    *(_DWORD *)v22 = 136315138;
    swift_bridgeObjectRetain();
    v37 = sub_1A5B58A30(a1, a2, &v38);
    v10 = v33;
    a3 = v34;
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v19, v20, v35, v22, 0xCu);
    swift_arrayDestroy();
    v25 = v24;
    ObjectType = v32;
    MEMORY[0x1A85B2FC0](v25, -1, -1);
    MEMORY[0x1A85B2FC0](v22, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v26 = sub_1A5BC9CF8();
  v27 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v36, 1, 1, v26);
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = 0;
  v28[3] = 0;
  v28[4] = a1;
  v28[5] = a2;
  v28[6] = v10;
  v28[7] = a3;
  v28[8] = a4;
  v28[9] = ObjectType;
  swift_bridgeObjectRetain();
  v29 = v10;
  swift_retain();
  sub_1A5BA0C88(v27, a7, (uint64_t)v28);
  return swift_release();
}

uint64_t sub_1A5B7EA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[19] = a7;
  v8[20] = a8;
  v8[17] = a5;
  v8[18] = a6;
  v8[16] = a4;
  v8[21] = type metadata accessor for InternalError();
  v8[22] = swift_task_alloc();
  v8[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5B7EAB0()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD *v21;
  id v22;
  os_log_type_t v23;
  BOOL v24;
  unint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  unint64_t v32;

  if (qword_1ED10FB68 != -1)
    swift_once();
  v1 = sub_1A5BC9A64();
  v0[24] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED10FBE8);
  swift_bridgeObjectRetain_n();
  v2 = sub_1A5BC9A4C();
  v3 = sub_1A5BC9DA0();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[17];
  if (v4)
  {
    v6 = v0[16];
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v31 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[15] = sub_1A5B58A30(v6, v5, &v31);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v2, v3, "Starting request for ticket %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v8, -1, -1);
    MEMORY[0x1A85B2FC0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = (_QWORD *)(v0[18] + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore);
  v10 = v9[3];
  v11 = v9[4];
  __swift_project_boxed_opaque_existential_1(v9, v10);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  v14 = v13;
  v0[25] = v12;
  v0[26] = v13;
  if (qword_1ED110488 != -1)
    swift_once();
  v15 = sub_1A5B77908(v0[16], v0[17], v12, v14);
  if (!v15)
  {
    swift_bridgeObjectRetain_n();
    v18 = sub_1A5BC9A4C();
    v23 = sub_1A5BC9DA0();
    v24 = os_log_type_enabled(v18, v23);
    v25 = v0[17];
    if (v24)
    {
      v26 = v0[16];
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v31 = v28;
      *(_DWORD *)v27 = 136315138;
      swift_bridgeObjectRetain();
      v0[13] = sub_1A5B58A30(v26, v25, &v31);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A5B4D000, v18, v23, "No valid cache value for ticket %s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v28, -1, -1);
      MEMORY[0x1A85B2FC0](v27, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    goto LABEL_15;
  }
  v16 = v15;
  v17 = v15;
  v18 = sub_1A5BC9A4C();
  v19 = sub_1A5BC9D88();
  if (!os_log_type_enabled(v18, v19))
  {

LABEL_15:
    goto LABEL_16;
  }
  v20 = (uint8_t *)swift_slowAlloc();
  v21 = (_QWORD *)swift_slowAlloc();
  *(_DWORD *)v20 = 138412290;
  v0[14] = v17;
  v22 = v17;
  sub_1A5BC9E18();
  *v21 = v16;

  _os_log_impl(&dword_1A5B4D000, v18, v19, "There already is a cached ticket when calling getTicket: %@", v20, 0xCu);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
  swift_arrayDestroy();
  MEMORY[0x1A85B2FC0](v21, -1, -1);
  MEMORY[0x1A85B2FC0](v20, -1, -1);

LABEL_16:
  v0[27] = *(_QWORD *)(v0[18] + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_taskLimiters);
  v31 = 0x656B636954746567;
  v32 = 0xEA00000000005F74;
  sub_1A5BC9BE4();
  v29 = v32;
  v0[28] = v31;
  v0[29] = v29;
  return swift_task_switch();
}

uint64_t sub_1A5B7EF88()
{
  uint64_t *v0;

  v0[30] = sub_1A5B50C44(v0[28], v0[29]);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1A5B7EFD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);

  v2 = v0[25];
  v1 = v0[26];
  v4 = v0[16];
  v3 = v0[17];
  sub_1A5BC9BE4();
  v0[31] = 0xEA00000000005F74;
  v5 = (_QWORD *)swift_allocObject();
  v0[32] = v5;
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE7FAE98 + dword_1EE7FAE98);
  swift_bridgeObjectRetain();
  v6 = (_QWORD *)swift_task_alloc();
  v0[33] = v6;
  *v6 = v0;
  v6[1] = sub_1A5B7F0D4;
  return v8(0x656B636954746567, 0xEA00000000005F74, (uint64_t)&unk_1EE7FA730, (uint64_t)v5);
}

uint64_t sub_1A5B7F0D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 272) = v1;
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  if (!v1)
    *(_QWORD *)(v4 + 280) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B7F164()
{
  uint64_t v0;
  void *v1;
  void (*v2)(void *, _QWORD);
  id v3;

  v1 = *(void **)(v0 + 280);
  v2 = *(void (**)(void *, _QWORD))(v0 + 152);
  v3 = v1;
  v2(v1, 0);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B7F1DC()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  unint64_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  void *v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void *v22;
  void (*v23)(_QWORD, id);
  id v24;
  void *v25;
  uint64_t v26;
  void (*v27)(_QWORD, id);
  id v28;
  uint64_t v30;

  v1 = *(void **)(v0 + 272);
  swift_release();
  *(_QWORD *)(v0 + 80) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v3 = *(_QWORD *)(v0 + 176);
    if (swift_getEnumCaseMultiPayload() == 2)
    {

      swift_bridgeObjectRetain_n();
      v4 = sub_1A5BC9A4C();
      v5 = sub_1A5BC9DA0();
      v6 = os_log_type_enabled(v4, v5);
      v7 = *(_QWORD *)(v0 + 136);
      if (v6)
      {
        v8 = *(_QWORD *)(v0 + 128);
        v9 = (uint8_t *)swift_slowAlloc();
        v10 = swift_slowAlloc();
        v30 = v10;
        *(_DWORD *)v9 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 96) = sub_1A5B58A30(v8, v7, &v30);
        sub_1A5BC9E18();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A5B4D000, v4, v5, "Ticket %s received 204 network response", v9, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v10, -1, -1);
        MEMORY[0x1A85B2FC0](v9, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      v26 = *(_QWORD *)(v0 + 184);
      v27 = *(void (**)(_QWORD, id))(v0 + 152);
      swift_storeEnumTagMultiPayload();
      v28 = sub_1A5B68E28();
      sub_1A5B81718(v26);
      v27(0, v28);

      v25 = *(void **)(v0 + 80);
      goto LABEL_12;
    }
    sub_1A5B81718(v3);
  }
  v11 = *(void **)(v0 + 272);

  v12 = v11;
  v13 = v11;
  v14 = sub_1A5BC9A4C();
  v15 = sub_1A5BC9D88();
  v16 = os_log_type_enabled(v14, v15);
  v17 = *(void **)(v0 + 272);
  if (v16)
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v30 = v19;
    *(_DWORD *)v18 = 136446210;
    swift_getErrorValue();
    v20 = sub_1A5BCA130();
    *(_QWORD *)(v0 + 88) = sub_1A5B58A30(v20, v21, &v30);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A5B4D000, v14, v15, "GetTicket failed with error: %{public}s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v19, -1, -1);
    MEMORY[0x1A85B2FC0](v18, -1, -1);
  }
  else
  {

  }
  v22 = *(void **)(v0 + 272);
  v23 = *(void (**)(_QWORD, id))(v0 + 152);
  swift_getErrorValue();
  v24 = sub_1A5B5A758(*(_QWORD *)(v0 + 48));
  v23(0, v24);

  v25 = v22;
LABEL_12:

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B7F5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[22] = a4;
  v5[23] = a5;
  v5[20] = a2;
  v5[21] = a3;
  v5[19] = a1;
  v5[24] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1104F8);
  v5[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5B7F62C()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  unint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  if (qword_1ED10FB68 != -1)
    swift_once();
  v1 = sub_1A5BC9A64();
  v0[26] = __swift_project_value_buffer(v1, (uint64_t)qword_1ED10FBE8);
  swift_bridgeObjectRetain_n();
  v2 = sub_1A5BC9A4C();
  v3 = sub_1A5BC9DA0();
  v4 = os_log_type_enabled(v2, v3);
  v5 = v0[21];
  if (v4)
  {
    v6 = v0[20];
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[18] = sub_1A5B58A30(v6, v5, &v13);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v2, v3, "Starting network fetch for ticket %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v8, -1, -1);
    MEMORY[0x1A85B2FC0](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v9 = _s25CloudSubscriptionFeatures18EligibilityFetcherC7currentAA0D0CvgZ_0();
  v0[27] = v9;
  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EE7FA548 + dword_1EE7FA548);
  v10 = (_QWORD *)swift_task_alloc();
  v0[28] = v10;
  *v10 = v0;
  v10[1] = sub_1A5B7F828;
  return v12(v0[20], v0[21], (uint64_t)v9);
}

uint64_t sub_1A5B7F828(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 232) = a1;
  *(_QWORD *)(v3 + 240) = v1;
  swift_task_dealloc();
  if (!v1)

  return swift_task_switch();
}

uint64_t sub_1A5B7F89C()
{
  _QWORD *v0;
  void *v1;
  _QWORD *v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;
  _QWORD *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v19;

  if (qword_1ED110488 != -1)
    swift_once();
  v1 = (void *)v0[29];
  v2 = (_QWORD *)v0[25];
  v4 = v0[23];
  v3 = (int *)v0[24];
  v5 = v0[22];
  v19 = v0[21];
  v6 = v0[20];
  sub_1A5BC9818();
  swift_allocObject();
  sub_1A5BC980C();
  v7 = (char *)v2 + v3[11];
  v8 = sub_1A5BC9974();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  swift_bridgeObjectRetain();
  v9 = v1;
  sub_1A5BC995C();
  *v2 = v9;
  v10 = (_QWORD *)((char *)v2 + v3[13]);
  *v10 = 0;
  v10[1] = 0;
  v11 = (_QWORD *)((char *)v2 + v3[14]);
  *v11 = v5;
  v11[1] = v4;
  sub_1A5B780C0(v6, v19);
  sub_1A5B4FBE8((uint64_t)v2, &qword_1ED1104F8);
  swift_release();
  type metadata accessor for Assets();
  sub_1A5B92498();
  sub_1A5B8B328();
  v12 = sub_1A5BC9A4C();
  v13 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_1A5B4D000, v12, v13, "Attempting to get primary apple account", v14, 2u);
    MEMORY[0x1A85B2FC0](v14, -1, -1);
  }

  v15 = sub_1A5B57E54();
  v0[31] = v15;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1A5B7FB1C;
  v16 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v17 = v0 + 10;
  v17[1] = 0x40000000;
  v17[2] = sub_1A5B800C4;
  v17[3] = &block_descriptor_2;
  v17[4] = v16;
  objc_msgSend(v15, sel_aa_primaryAppleAccountWithCompletion_, v17);
  return swift_continuation_await();
}

uint64_t sub_1A5B7FADC()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B7FB1C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 256) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1A5B7FB7C()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint8_t *v5;
  uint8_t *v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  unint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *(void **)(v0 + 120);

  v2 = sub_1A5BC9A4C();
  v3 = sub_1A5BC9DA0();
  v4 = os_log_type_enabled(v2, v3);
  if (v1)
  {
    if (v4)
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1A5B4D000, v2, v3, "There is an account, not registering", v5, 2u);
      MEMORY[0x1A85B2FC0](v5, -1, -1);
    }

  }
  else
  {
    if (v4)
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1A5B4D000, v2, v3, "There is no account, registering.", v6, 2u);
      MEMORY[0x1A85B2FC0](v6, -1, -1);
    }

    objc_msgSend((id)objc_opt_self(), sel_registerForLoggedOutPushNotifications);
  }
  swift_bridgeObjectRetain_n();
  v7 = sub_1A5BC9A4C();
  v8 = sub_1A5BC9DA0();
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 168);
  if (v9)
  {
    v11 = *(_QWORD *)(v0 + 160);
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v15 = v13;
    *(_DWORD *)v12 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 128) = sub_1A5B58A30(v11, v10, &v15);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v7, v8, "Network fetch finished for %s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v13, -1, -1);
    MEMORY[0x1A85B2FC0](v12, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  **(_QWORD **)(v0 + 152) = *(_QWORD *)(v0 + 232);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B7FDF0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void *v12;
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  unint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v21;

  v2 = *(void **)(v0 + 248);
  v1 = *(void **)(v0 + 256);
  swift_willThrow();

  v3 = v1;
  v4 = v1;
  v5 = sub_1A5BC9A4C();
  v6 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(void **)(v0 + 256);
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    v10 = v7;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 136) = v11;
    sub_1A5BC9E18();
    *v9 = v11;

    _os_log_impl(&dword_1A5B4D000, v5, v6, "Unable to get primary apple account: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v9, -1, -1);
    MEMORY[0x1A85B2FC0](v8, -1, -1);

  }
  else
  {
    v12 = *(void **)(v0 + 256);

  }
  swift_bridgeObjectRetain_n();
  v13 = sub_1A5BC9A4C();
  v14 = sub_1A5BC9DA0();
  v15 = os_log_type_enabled(v13, v14);
  v16 = *(_QWORD *)(v0 + 168);
  if (v15)
  {
    v17 = *(_QWORD *)(v0 + 160);
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v21 = v19;
    *(_DWORD *)v18 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 128) = sub_1A5B58A30(v17, v16, &v21);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v13, v14, "Network fetch finished for %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v19, -1, -1);
    MEMORY[0x1A85B2FC0](v18, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  **(_QWORD **)(v0 + 152) = *(_QWORD *)(v0 + 232);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B800C4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  id v9;
  void *v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v10 = a2;
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40);
    v9 = a2;
    sub_1A5B81754((uint64_t)&v10, v8);
    return swift_continuation_throwingResume();
  }
}

id sub_1A5B805DC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void *sub_1A5B80668(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  BOOL v11;

  if (a1 >> 62)
    goto LABEL_17;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_1A5BC9F5C())
  {
    v7 = 4;
    while (1)
    {
      v8 = (a1 & 0xC000000000000001) != 0
         ? (char *)MEMORY[0x1A85B2594](v7 - 4, a1)
         : (char *)*(id *)(a1 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v11 = *(_QWORD *)&v8[OBJC_IVAR___CloudFeature_featureID] == a2
         && *(_QWORD *)&v8[OBJC_IVAR___CloudFeature_featureID + 8] == a3;
      if (v11 || (sub_1A5BCA0B8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6)
        goto LABEL_18;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A5B807A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 176) = a1;
  *(_QWORD *)(v2 + 184) = a2;
  return swift_task_switch();
}

uint64_t sub_1A5B807C0()
{
  uint64_t v0;
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  id v7;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  char *v17;
  void *v18;
  uint64_t v19;
  char *v20;

  v1 = (_BYTE *)(*(_QWORD *)(v0 + 176) + OBJC_IVAR___CloudFeature_canUse);
  swift_beginAccess();
  if ((*v1 & 1) != 0
    || (v2 = (_BYTE *)(*(_QWORD *)(v0 + 184) + OBJC_IVAR___CloudFeature_canUse), swift_beginAccess(), *v2 != 1))
  {
    if (qword_1ED10FB68 != -1)
      swift_once();
    v10 = *(void **)(v0 + 176);
    v9 = *(void **)(v0 + 184);
    v11 = sub_1A5BC9A64();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED10FBE8);
    v12 = v10;
    v13 = v9;
    v14 = sub_1A5BC9A4C();
    v15 = sub_1A5BC9D7C();
    v16 = os_log_type_enabled(v14, v15);
    v18 = *(void **)(v0 + 176);
    v17 = *(char **)(v0 + 184);
    if (v16)
    {
      v19 = swift_slowAlloc();
      *(_DWORD *)v19 = 67109376;
      *(_DWORD *)(v0 + 80) = *v1;
      sub_1A5BC9E18();

      *(_WORD *)(v19 + 8) = 1024;
      v20 = &v17[OBJC_IVAR___CloudFeature_canUse];
      swift_beginAccess();
      *(_DWORD *)(v0 + 168) = *v20;
      sub_1A5BC9E18();

      _os_log_impl(&dword_1A5B4D000, v14, v15, "We did not transition to having access, skipping unregistration. Old value: %{BOOL}d, new value: %{BOOL}d", (uint8_t *)v19, 0xEu);
      MEMORY[0x1A85B2FC0](v19, -1, -1);
    }
    else
    {

    }
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_1ED10FB68 != -1)
      swift_once();
    v3 = sub_1A5BC9A64();
    *(_QWORD *)(v0 + 192) = __swift_project_value_buffer(v3, (uint64_t)qword_1ED10FBE8);
    v4 = sub_1A5BC9A4C();
    v5 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1A5B4D000, v4, v5, "Attempting to get primary apple account", v6, 2u);
      MEMORY[0x1A85B2FC0](v6, -1, -1);
    }

    v7 = sub_1A5B57E54();
    *(_QWORD *)(v0 + 200) = v7;
    *(_QWORD *)(v0 + 56) = v0 + 168;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1A5B80AE4;
    *(_QWORD *)(v0 + 112) = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x1E0C809B0];
    *(_QWORD *)(v0 + 88) = 0x40000000;
    *(_QWORD *)(v0 + 96) = sub_1A5B800C4;
    *(_QWORD *)(v0 + 104) = &block_descriptor_72;
    objc_msgSend(v7, sel_aa_primaryAppleAccountWithCompletion_, v0 + 80);
    return swift_continuation_await();
  }
}

uint64_t sub_1A5B80AE4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 208) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1A5B80B44()
{
  uint64_t v0;
  void *v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint8_t *v5;
  uint8_t *v6;

  v1 = *(void **)(v0 + 168);

  v2 = sub_1A5BC9A4C();
  v3 = sub_1A5BC9DA0();
  v4 = os_log_type_enabled(v2, v3);
  if (v1)
  {
    if (v4)
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1A5B4D000, v2, v3, "There is an account, not registering", v5, 2u);
      MEMORY[0x1A85B2FC0](v5, -1, -1);
    }

  }
  else
  {
    if (v4)
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1A5B4D000, v2, v3, "There is no account, unregistering.", v6, 2u);
      MEMORY[0x1A85B2FC0](v6, -1, -1);
    }

    objc_msgSend((id)objc_opt_self(), sel_unregisterForLoggedOutPushNotifications);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B80C60()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void *v12;

  v2 = *(void **)(v0 + 200);
  v1 = *(void **)(v0 + 208);
  swift_willThrow();

  v3 = v1;
  v4 = v1;
  v5 = sub_1A5BC9A4C();
  v6 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(void **)(v0 + 208);
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v8 = 138412290;
    v10 = v7;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v11;
    sub_1A5BC9E18();
    *v9 = v11;

    _os_log_impl(&dword_1A5B4D000, v5, v6, "Unable to get primary apple account: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v9, -1, -1);
    MEMORY[0x1A85B2FC0](v8, -1, -1);

  }
  else
  {
    v12 = *(void **)(v0 + 208);

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B80EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a5;
  v29 = a8;
  v27 = a3;
  ObjectType = swift_getObjectType();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1A5BC9CF8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = 0;
  *(_QWORD *)(v20 + 24) = 0;
  *(_BYTE *)(v20 + 32) = a7;
  *(_QWORD *)(v20 + 40) = a10;
  *(_QWORD *)(v20 + 48) = a1;
  v21 = v27;
  *(_QWORD *)(v20 + 56) = a2;
  *(_QWORD *)(v20 + 64) = v21;
  v22 = v28;
  *(_QWORD *)(v20 + 72) = a4;
  *(_QWORD *)(v20 + 80) = v22;
  v23 = v29;
  *(_QWORD *)(v20 + 88) = a6;
  *(_QWORD *)(v20 + 96) = v23;
  *(_QWORD *)(v20 + 104) = a9;
  *(_QWORD *)(v20 + 112) = ObjectType;
  v24 = a10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A5BA0C88((uint64_t)v18, (uint64_t)&unk_1EE7FA768, v20);
  return swift_release();
}

void sub_1A5B8103C(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;

  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore);
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, sel_isEnabledForDataclass_, *MEMORY[0x1E0C8EF00]);
    if (qword_1ED111140 != -1)
      swift_once();
    v9 = sub_1A5BC9A64();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED1110D0);
    v10 = sub_1A5BC9A4C();
    v11 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v12 = 67109120;
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v10, v11, "Shared albums enablement status: %{BOOL}d", v12, 8u);
      MEMORY[0x1A85B2FC0](v12, -1, -1);
    }

    (*(void (**)(uint64_t, id, _QWORD))(a2 + 16))(a2, v8, 0);
  }
  else
  {
    if (qword_1ED10FB68 != -1)
      swift_once();
    v13 = sub_1A5BC9A64();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED10FBE8);
    v14 = sub_1A5BC9A4C();
    v15 = sub_1A5BC9D88();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1A5B4D000, v14, v15, "Unable to get primary account", v16, 2u);
      MEMORY[0x1A85B2FC0](v16, -1, -1);
    }

    v17 = sub_1A5B68C48(10);
    (*(void (**)(uint64_t, _QWORD, id))(a2 + 16))(a2, 0, v17);

  }
}

void sub_1A5B812A0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;

  if (qword_1ED10FB68 != -1)
    swift_once();
  v8 = sub_1A5BC9A64();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED10FBE8);
  swift_bridgeObjectRetain_n();
  v9 = sub_1A5BC9A4C();
  v10 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v20 = v12;
    *(_DWORD *)v11 = 136315138;
    swift_bridgeObjectRetain();
    sub_1A5B58A30(a1, a2, &v20);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v9, v10, "Fetching ticket status from cache for feature %s.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v12, -1, -1);
    MEMORY[0x1A85B2FC0](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v13 = (_QWORD *)(a3 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore);
  v14 = *(_QWORD *)(a3 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21FeatureRequestHandler_accountStore + 24);
  v15 = v13[4];
  __swift_project_boxed_opaque_existential_1(v13, v14);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
  v18 = v17;
  if (qword_1ED110488 != -1)
    swift_once();
  v19 = (char *)sub_1A5B77908(a1, a2, v16, v18);
  swift_bridgeObjectRelease();
  if (v19)
  {
    (*(void (**)(uint64_t, _QWORD, _QWORD))(a4 + 16))(a4, *(_QWORD *)&v19[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status], 0);
  }
  else
  {
    v19 = (char *)sub_1A5B68C48(4);
    (*(void (**)(uint64_t, _QWORD, char *))(a4 + 16))(a4, 0, v19);
  }

}

void sub_1A5B81518(uint64_t a1)
{
  id v2;

  type metadata accessor for FollowUp();
  swift_allocObject();
  if (FollowUp.init()())
  {
    if (sub_1A5BB10F8())
    {
      (*(void (**)(uint64_t, _QWORD))(a1 + 16))(a1, 0);
      swift_release();
      return;
    }
    v2 = sub_1A5B68C48(4);
    (*(void (**)(uint64_t, id))(a1 + 16))(a1, v2);
    swift_release();
  }
  else
  {
    v2 = sub_1A5B68C48(7);
    (*(void (**)(uint64_t, id))(a1 + 16))(a1, v2);
  }

}

uint64_t sub_1A5B815D4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A5B815FC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1A5B81FC4;
  return sub_1A5B7EA3C(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1A5B816A0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1A5B81FC4;
  return sub_1A5B7F5C4(a1, v4, v5, v7, v6);
}

uint64_t sub_1A5B81718(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for InternalError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A5B81754(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_3Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5B817DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 40);
  v5 = *(_OWORD *)(v0 + 56);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1A5B81FC4;
  *(_OWORD *)(v3 + 144) = v4;
  *(_OWORD *)(v3 + 160) = v5;
  *(_QWORD *)(v3 + 136) = v2;
  return swift_task_switch();
}

uint64_t sub_1A5B81848()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5B8187C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v9 = v1[6];
  v8 = v1[7];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1A5B81FC4;
  return sub_1A5B7E088(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1A5B81908()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5B81954(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v4 = *(_QWORD *)(v1 + 24);
  v12 = *(_QWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 64);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1A5B81FC4;
  return sub_1A5B7CE70(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1A5B81A18()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5B81A54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v10;
  __int128 v11;

  v4 = *(_QWORD *)(v1 + 16);
  v11 = *(_OWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  v7 = swift_task_alloc();
  v10 = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(v2 + 16) = v7;
  *(_QWORD *)v7 = v2;
  *(_QWORD *)(v7 + 8) = sub_1A5B81FC4;
  *(_QWORD *)(v7 + 176) = v5;
  *(_QWORD *)(v7 + 184) = v6;
  *(_OWORD *)(v7 + 144) = v10;
  *(_OWORD *)(v7 + 160) = v11;
  *(_QWORD *)(v7 + 128) = a1;
  *(_QWORD *)(v7 + 136) = v4;
  *(_QWORD *)&v11 = (char *)&dword_1EE7FA578 + dword_1EE7FA578;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v7 + 192) = v8;
  *v8 = v7;
  v8[1] = sub_1A5B7D540;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(v7 + 16, v4, v10);
}

uint64_t sub_1A5B81B24(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A5B81B4C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1A5B81B74()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5B81BB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v8;

  v8 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v0 + 64);
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_1A5B65618;
  *(_QWORD *)(v5 + 136) = v4;
  *(_OWORD *)(v5 + 120) = v6;
  *(_QWORD *)(v5 + 104) = v2;
  *(_QWORD *)(v5 + 112) = v3;
  *(_OWORD *)(v5 + 88) = v8;
  return swift_task_switch();
}

uint64_t objectdestroy_7Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5B81C78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  __int128 v9;

  v9 = *(_OWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = sub_1A5B65618;
  *(_QWORD *)(v6 + 40) = v4;
  *(_QWORD *)(v6 + 48) = v5;
  *(_OWORD *)(v6 + 24) = v9;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)&v9 = (char *)&dword_1EE7FA5A0 + dword_1EE7FA5A0;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 56) = v7;
  *v7 = v6;
  v7[1] = sub_1A5B7C940;
  return ((uint64_t (__cdecl *)())v9)();
}

uint64_t sub_1A5B81D20()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5B81D5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v4 = *(_QWORD *)(v1 + 24);
  v12 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_BYTE *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 64);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1A5B81FC4;
  return sub_1A5B78E58(a1, v12, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1A5B81E08()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5B81E3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = swift_task_alloc();
  v8 = *(_OWORD *)(v1 + 24);
  *(_QWORD *)(v2 + 16) = v7;
  *(_QWORD *)v7 = v2;
  *(_QWORD *)(v7 + 8) = sub_1A5B81FC4;
  *(_QWORD *)(v7 + 64) = v5;
  *(_QWORD *)(v7 + 72) = v6;
  *(_OWORD *)(v7 + 48) = v8;
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = v4;
  return swift_task_switch();
}

uint64_t sub_1A5B81EC0()
{
  id *v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1A5B81F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = swift_task_alloc();
  v7 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)(v1 + 16) = v6;
  *(_QWORD *)v6 = v1;
  *(_QWORD *)(v6 + 8) = sub_1A5B81FC4;
  *(_QWORD *)(v6 + 48) = v4;
  *(_QWORD *)(v6 + 56) = v5;
  *(_QWORD *)(v6 + 32) = v2;
  *(_QWORD *)(v6 + 40) = v3;
  *(_OWORD *)(v6 + 16) = v7;
  v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EE7FA7D0 + dword_1EE7FA7D0);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 64) = v8;
  *v8 = v6;
  v8[1] = sub_1A5B7BF4C;
  return v10(v4, v5);
}

uint64_t sub_1A5B81FD8()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1A5B82030;
  return sub_1A5BC9D70();
}

uint64_t sub_1A5B82030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = *v4;
  v9 = swift_task_dealloc();
  if (!v3)
  {
    v9 = a1;
    v10 = a2;
    v11 = a3;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 8))(v9, v10, v11);
}

uint64_t sub_1A5B8209C()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v31[3];
  ValueMetadata *v32;
  unint64_t v33;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112E0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1A5BCC560;
  *(_QWORD *)(v0 + 32) = 0xD000000000000016;
  *(_QWORD *)(v0 + 40) = 0x80000001A5BD0FD0;
  v32 = &type metadata for CoreTelephonyFeatures;
  v1 = sub_1A5B83B14();
  v33 = v1;
  LOBYTE(v31[0]) = 0;
  v2 = sub_1A5BC9A10();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  if ((v2 & 1) != 0)
  {
    if (qword_1ED10FBB8 != -1)
      swift_once();
    v3 = sub_1A5BC9A64();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED10FB98);
    v4 = sub_1A5BC9A4C();
    v5 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      v31[0] = v7;
      *(_DWORD *)v6 = 136446210;
      sub_1A5B58A30(0xD00000000000001BLL, 0x80000001A5BD1010, v31);
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v4, v5, "Including software capabilities in request %{public}s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v7, -1, -1);
      MEMORY[0x1A85B2FC0](v6, -1, -1);
    }

    v9 = *(_QWORD *)(v0 + 16);
    v8 = *(_QWORD *)(v0 + 24);
    if (v9 >= v8 >> 1)
      v0 = (uint64_t)sub_1A5B6420C((_QWORD *)(v8 > 1), v9 + 1, 1, (_QWORD *)v0);
    *(_QWORD *)(v0 + 16) = v9 + 1;
    v10 = v0 + 16 * v9;
    *(_QWORD *)(v10 + 32) = 0xD00000000000001BLL;
    *(_QWORD *)(v10 + 40) = 0x80000001A5BD1010;
  }
  else
  {
    if (qword_1ED10FBB8 != -1)
      swift_once();
    v11 = sub_1A5BC9A64();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED10FB98);
    v12 = sub_1A5BC9A4C();
    v13 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v31[0] = v15;
      *(_DWORD *)v14 = 136446210;
      sub_1A5B58A30(0xD00000000000001BLL, 0x80000001A5BD1010, v31);
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v12, v13, "Not including software capabilities in request %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v15, -1, -1);
      MEMORY[0x1A85B2FC0](v14, -1, -1);
    }

  }
  v32 = &type metadata for CoreTelephonyFeatures;
  v33 = v1;
  LOBYTE(v31[0]) = 1;
  v16 = sub_1A5BC9A10();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  if ((v16 & 1) != 0)
  {
    if (qword_1ED10FBB8 != -1)
      swift_once();
    v17 = sub_1A5BC9A64();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED10FB98);
    v18 = sub_1A5BC9A4C();
    v19 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v31[0] = v21;
      *(_DWORD *)v20 = 136446210;
      sub_1A5B58A30(0xD000000000000011, 0x80000001A5BD0FF0, v31);
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v18, v19, "Including software capabilities in request %{public}s", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v21, -1, -1);
      MEMORY[0x1A85B2FC0](v20, -1, -1);
    }

    v23 = *(_QWORD *)(v0 + 16);
    v22 = *(_QWORD *)(v0 + 24);
    if (v23 >= v22 >> 1)
      v0 = (uint64_t)sub_1A5B6420C((_QWORD *)(v22 > 1), v23 + 1, 1, (_QWORD *)v0);
    *(_QWORD *)(v0 + 16) = v23 + 1;
    v24 = v0 + 16 * v23;
    *(_QWORD *)(v24 + 32) = 0xD000000000000011;
    *(_QWORD *)(v24 + 40) = 0x80000001A5BD0FF0;
  }
  else
  {
    if (qword_1ED10FBB8 != -1)
      swift_once();
    v25 = sub_1A5BC9A64();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED10FB98);
    v26 = sub_1A5BC9A4C();
    v27 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v31[0] = v29;
      *(_DWORD *)v28 = 136446210;
      sub_1A5B58A30(0xD000000000000011, 0x80000001A5BD0FF0, v31);
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v26, v27, "Not including software capabilities in request %{public}s", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v29, -1, -1);
      MEMORY[0x1A85B2FC0](v28, -1, -1);
    }

  }
  return v0;
}

void sub_1A5B82700(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  __objc2_meth_list **p_base_meths;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  _QWORD *v36;
  id v37;
  os_log_t v38;
  os_log_type_t v39;
  uint8_t *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  uint8_t *v48;
  uint8_t *v49;
  os_log_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;

  v4 = v3;
  v56 = a3;
  v57 = a2;
  v6 = sub_1A5BC9974();
  v54 = *(_QWORD *)(v6 - 8);
  v55 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A5BC9A04();
  v52 = *(_QWORD *)(v9 - 8);
  v53 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(double *)v3;
  v13 = objc_allocWithZone(MEMORY[0x1E0CB37A8]);
  v14 = (void *)sub_1A5BC9848();
  v15 = objc_msgSend(v13, sel_initWithURL_cachePolicy_timeoutInterval_, v14, 1, v12);

  v16 = (void *)sub_1A5BC9B3C();
  v17 = (void *)sub_1A5BC9B3C();
  objc_msgSend(v15, sel_setValue_forHTTPHeaderField_, v16, v17);

  objc_msgSend(v15, sel_setTimeoutInterval_, v12);
  if (*(_QWORD *)(sub_1A5BC99A4() + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v18 = (void *)sub_1A5BC9B3C();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = 0;
  }
  v19 = (void *)sub_1A5BC9B3C();
  objc_msgSend(v15, sel_setValue_forHTTPHeaderField_, v18, v19);

  v20 = v4[4];
  v21 = v4[5];
  __swift_project_boxed_opaque_existential_1(v4 + 1, v20);
  v22 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  v23 = v21;
  p_base_meths = &DaemonController__metaData.base_meths;
  v22(v20, v23);
  if (v25)
  {
    v26 = (void *)sub_1A5BC9B3C();
    swift_bridgeObjectRelease();
    v27 = (void *)sub_1A5BC9B3C();
    objc_msgSend(v15, sel_setValue_forHTTPHeaderField_, v26, v27);

  }
  objc_msgSend(v15, sel_ak_addClientInfoHeader);
  objc_msgSend(v15, sel_ak_addCountryHeader);
  if (a1)
  {
    v28 = a1;
    v29 = objc_msgSend(v28, sel_aa_personID);
    v30 = (void *)sub_1A5BC9B3C();
    objc_msgSend(v15, sel_setValue_forHTTPHeaderField_, v29, v30);

    if (objc_msgSend(v15, sel_respondsToSelector_, sel_aa_addBasicAuthorizationHeaderWithAccount_preferUsingPassword_))
    {
      objc_msgSend(v15, sel_aa_addBasicAuthorizationHeaderWithAccount_preferUsingPassword_, v28, 0);
    }
    else
    {
      if (qword_1ED10FBB8 != -1)
        swift_once();
      v31 = sub_1A5BC9A64();
      __swift_project_value_buffer(v31, (uint64_t)qword_1ED10FB98);
      v32 = v15;
      v33 = sub_1A5BC9A4C();
      v34 = sub_1A5BC9D88();
      if (os_log_type_enabled(v33, v34))
      {
        v50 = v33;
        v35 = (uint8_t *)swift_slowAlloc();
        v36 = (_QWORD *)swift_slowAlloc();
        v49 = v35;
        *(_DWORD *)v35 = 138412290;
        v48 = v35 + 4;
        v58 = v32;
        v51 = v28;
        v37 = v32;
        p_base_meths = (__objc2_meth_list **)(&DaemonController__metaData + 32);
        sub_1A5BC9E18();
        *v36 = v32;

        v38 = v50;
        v39 = v34;
        v40 = v49;
        _os_log_impl(&dword_1A5B4D000, v50, v39, "Unable to add authorization header to urlRequest: %@", v49, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v36, -1, -1);
        MEMORY[0x1A85B2FC0](v40, -1, -1);

        goto LABEL_15;
      }

    }
  }
LABEL_15:
  v41 = objc_msgSend((id)objc_opt_self(), sel_systemTimeZone);
  sub_1A5BC99F8();

  sub_1A5BC9968();
  sub_1A5BC99D4();
  v43 = v42;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v8, v55);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v53);
  if (v43)
  {
    v44 = (void *)sub_1A5BC9B3C();
    swift_bridgeObjectRelease();
    v45 = (void *)sub_1A5BC9B3C();
    objc_msgSend(v15, (SEL)p_base_meths[490], v44, v45);

  }
  sub_1A5B82D20(v15);
  sub_1A5B83170(v15, v57);
  sub_1A5B62724();
  v46 = (void *)sub_1A5BC9B3C();
  swift_bridgeObjectRelease();
  v47 = (void *)sub_1A5BC9B3C();
  objc_msgSend(v15, (SEL)p_base_meths[490], v46, v47);

  sub_1A5BC968C();
}

void sub_1A5B82D20(void *a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  unsigned int v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  _QWORD *v12;
  id v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  unsigned __int8 *v19;
  int v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  void *v24;
  void *v25;
  id v26[2];

  v26[1] = *(id *)MEMORY[0x1E0C80C00];
  sub_1A5B83B58();
  v2 = (void *)sub_1A5BC9DC4();
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CA6E38]), sel_initWithQueue_, v2);

  v26[0] = 0;
  v4 = objc_msgSend(v3, sel_getStewieSupport_, v26);

  if (v4)
  {
    v5 = v26[0];
    v6 = objc_msgSend(v4, sel_hwSupport);

    if (v6)
    {
      if (qword_1ED10FBB8 != -1)
        swift_once();
      v7 = sub_1A5BC9A64();
      __swift_project_value_buffer(v7, (uint64_t)qword_1ED10FB98);
      v8 = sub_1A5BC9A4C();
      v9 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc();
        v11 = (void *)swift_slowAlloc();
        v26[0] = v11;
        *(_DWORD *)v10 = 136446210;
        sub_1A5B58A30(0x696B726F7774656ELL, 0xED000074732E676ELL, (uint64_t *)v26);
        sub_1A5BC9E18();
        _os_log_impl(&dword_1A5B4D000, v8, v9, "Including device capability header in request %{public}s", v10, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v11, -1, -1);
        MEMORY[0x1A85B2FC0](v10, -1, -1);
      }

      v12 = &unk_1E4F6C310;
      goto LABEL_14;
    }
  }
  else
  {
    v13 = v26[0];
    v14 = (void *)sub_1A5BC9830();

    swift_willThrow();
  }
  if (qword_1ED10FBB8 != -1)
    swift_once();
  v15 = sub_1A5BC9A64();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED10FB98);
  v16 = sub_1A5BC9A4C();
  v17 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_1A5B4D000, v16, v17, "Not including CT device capability header in request", v18, 2u);
    MEMORY[0x1A85B2FC0](v18, -1, -1);
  }

  v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_14:
  v19 = (unsigned __int8 *)_s25CloudSubscriptionFeatures18EligibilityFetcherC7currentAA0D0CvgZ_0();
  v20 = v19[OBJC_IVAR___CSFEligibility_deviceEligibile];

  if (v20 == 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1A5B6420C(0, v12[2] + 1, 1, v12);
    v22 = v12[2];
    v21 = v12[3];
    if (v22 >= v21 >> 1)
      v12 = sub_1A5B6420C((_QWORD *)(v21 > 1), v22 + 1, 1, v12);
    v12[2] = v22 + 1;
    v23 = &v12[2 * v22];
    v23[4] = 0x6C6C2E64756F6C63;
    v23[5] = 0xE90000000000006DLL;
  }
  v26[0] = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF50);
  sub_1A5B64084();
  sub_1A5BC9B0C();
  swift_bridgeObjectRelease();
  v24 = (void *)sub_1A5BC9B3C();
  swift_bridgeObjectRelease();
  v25 = (void *)sub_1A5BC9B3C();
  objc_msgSend(a1, sel_setValue_forHTTPHeaderField_, v24, v25);

}

void sub_1A5B83170(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  NSObject *v43;
  _BYTE *v44;
  uint8_t *v45;
  id v46;
  void *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  unint64_t v51;
  _BYTE *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  _BYTE *v59;
  unint64_t v60;
  uint64_t v61;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  void (*v66)(_BYTE *, _BYTE *, uint64_t);
  unint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  void *v70;
  void *v71;
  _BYTE v72[12];
  int v73;
  uint64_t v74;
  _BYTE *v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  _QWORD *v79;

  v77 = a1;
  v3 = sub_1A5BC9878();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v75 = &v72[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FB70);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = &v72[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = &v72[-v11];
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = &v72[-v14];
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = &v72[-v17];
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = &v72[-v20];
  MEMORY[0x1E0C80A78](v19);
  v23 = &v72[-v22];
  v76 = sub_1A5B8209C();
  if (!a2)
  {
    if (qword_1ED10FBB8 != -1)
      swift_once();
    v32 = sub_1A5BC9A64();
    __swift_project_value_buffer(v32, (uint64_t)qword_1ED10FB98);
    v33 = v77;
    v34 = v77;
    v35 = sub_1A5BC9A4C();
    v36 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v74 = swift_slowAlloc();
      v79 = (_QWORD *)v74;
      *(_DWORD *)v37 = 136315138;
      v38 = objc_msgSend(v34, sel_URL);
      if (v38)
      {
        v39 = v38;
        sub_1A5BC9854();

        v40 = 0;
      }
      else
      {
        v40 = 1;
      }
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, v40, 1, v3);
      sub_1A5B83A8C((uint64_t)v9, (uint64_t)v12);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3))
      {
        v50 = 0x6C7275206C696E3CLL;
        sub_1A5B83AD4((uint64_t)v12);
        v51 = 0xE90000000000003ELL;
      }
      else
      {
        v52 = v75;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v75, v12, v3);
        sub_1A5B83AD4((uint64_t)v12);
        v50 = sub_1A5BC983C();
        v51 = v53;
        (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v52, v3);
      }
      v49 = (_QWORD *)v76;
      v78 = sub_1A5B58A30(v50, v51, (uint64_t *)&v79);
      sub_1A5BC9E18();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5B4D000, v35, v36, "Not signing request to %s with GM feature eligibility header - eligibility object not passed.", v37, 0xCu);
      v54 = v74;
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v54, -1, -1);
      MEMORY[0x1A85B2FC0](v37, -1, -1);

      v33 = v77;
      goto LABEL_42;
    }

LABEL_21:
    v49 = (_QWORD *)v76;
    goto LABEL_42;
  }
  if (!sub_1A5BBF0A0())
  {
    if (qword_1ED10FBB8 != -1)
      swift_once();
    v41 = sub_1A5BC9A64();
    __swift_project_value_buffer(v41, (uint64_t)qword_1ED10FB98);
    v33 = v77;
    v42 = v77;
    v43 = sub_1A5BC9A4C();
    LODWORD(v44) = sub_1A5BC9DA0();
    if (os_log_type_enabled(v43, (os_log_type_t)v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      v74 = swift_slowAlloc();
      v79 = (_QWORD *)v74;
      *(_DWORD *)v45 = 136315138;
      v46 = objc_msgSend(v42, sel_URL);
      if (v46)
      {
        v47 = v46;
        sub_1A5BC9854();

        v48 = 0;
      }
      else
      {
        v48 = 1;
      }
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v15, v48, 1, v3);
      sub_1A5B83A8C((uint64_t)v15, (uint64_t)v18);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v18, 1, v3))
      {
        v57 = 0x6C7275206C696E3CLL;
        sub_1A5B83AD4((uint64_t)v18);
        v58 = 0xE90000000000003ELL;
      }
      else
      {
        v66 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16);
        v73 = (int)v44;
        v44 = v75;
        v66(v75, v18, v3);
        sub_1A5B83AD4((uint64_t)v18);
        v57 = sub_1A5BC983C();
        v58 = v67;
        v68 = v44;
        LOBYTE(v44) = v73;
        (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v68, v3);
      }
      v49 = (_QWORD *)v76;
      v78 = sub_1A5B58A30(v57, v58, (uint64_t *)&v79);
      sub_1A5BC9E18();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5B4D000, v43, (os_log_type_t)v44, "Not signing request to %s with GM feature eligibility header - device is not eligible.", v45, 0xCu);
      v69 = v74;
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v69, -1, -1);
      MEMORY[0x1A85B2FC0](v45, -1, -1);

      goto LABEL_42;
    }

    goto LABEL_21;
  }
  if (qword_1ED10FBB8 != -1)
    swift_once();
  v24 = sub_1A5BC9A64();
  __swift_project_value_buffer(v24, (uint64_t)qword_1ED10FB98);
  v25 = v77;
  v26 = sub_1A5BC9A4C();
  v27 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v74 = swift_slowAlloc();
    v79 = (_QWORD *)v74;
    *(_DWORD *)v28 = 136315138;
    v29 = objc_msgSend(v25, sel_URL);
    if (v29)
    {
      v30 = v29;
      sub_1A5BC9854();

      v31 = 0;
    }
    else
    {
      v31 = 1;
    }
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v21, v31, 1, v3);
    sub_1A5B83A8C((uint64_t)v21, (uint64_t)v23);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v23, 1, v3))
    {
      v55 = 0x6C7275206C696E3CLL;
      sub_1A5B83AD4((uint64_t)v23);
      v56 = 0xE90000000000003ELL;
    }
    else
    {
      v59 = v75;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 16))(v75, v23, v3);
      sub_1A5B83AD4((uint64_t)v23);
      v55 = sub_1A5BC983C();
      v56 = v60;
      (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v59, v3);
    }
    v49 = (_QWORD *)v76;
    v78 = sub_1A5B58A30(v55, v56, (uint64_t *)&v79);
    sub_1A5BC9E18();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A5B4D000, v26, v27, "Signing request with to %s with GM feature eligibility header.", v28, 0xCu);
    v61 = v74;
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v61, -1, -1);
    MEMORY[0x1A85B2FC0](v28, -1, -1);

  }
  else
  {

    v49 = (_QWORD *)v76;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v33 = v77;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v49 = sub_1A5B6420C(0, v49[2] + 1, 1, v49);
  v64 = v49[2];
  v63 = v49[3];
  if (v64 >= v63 >> 1)
    v49 = sub_1A5B6420C((_QWORD *)(v63 > 1), v64 + 1, 1, v49);
  v49[2] = v64 + 1;
  v65 = &v49[2 * v64];
  v65[4] = 0x6C6C2E64756F6C63;
  v65[5] = 0xE90000000000006DLL;
LABEL_42:
  v79 = v49;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF50);
  sub_1A5B64084();
  sub_1A5BC9B0C();
  swift_bridgeObjectRelease();
  v70 = (void *)sub_1A5BC9B3C();
  swift_bridgeObjectRelease();
  v71 = (void *)sub_1A5BC9B3C();
  objc_msgSend(v33, sel_setValue_forHTTPHeaderField_, v70, v71);

}

uint64_t sub_1A5B83A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FB70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5B83AD4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FB70);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1A5B83B14()
{
  unint64_t result;

  result = qword_1ED10FD28;
  if (!qword_1ED10FD28)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCCC38, &type metadata for CoreTelephonyFeatures);
    atomic_store(result, (unint64_t *)&qword_1ED10FD28);
  }
  return result;
}

unint64_t sub_1A5B83B58()
{
  unint64_t result;

  result = qword_1ED10FC70;
  if (!qword_1ED10FC70)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED10FC70);
  }
  return result;
}

uint64_t destroy for GatewayRequestFactory(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 8);
}

uint64_t initializeWithCopy for GatewayRequestFactory(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a1 + 8, a2 + 8);
  return a1;
}

_QWORD *assignWithCopy for GatewayRequestFactory(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for GatewayRequestFactory(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for GatewayRequestFactory(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GatewayRequestFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GatewayRequestFactory()
{
  return &type metadata for GatewayRequestFactory;
}

id static EligibilityFetcher.currentEligibility()()
{
  return sub_1A5B85398();
}

uint64_t sub_1A5B83D30(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD *);
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;

  v4 = a3;
  v17 = *(_QWORD *)(a3 + 16);
  if (v17)
  {
    v5 = (uint64_t (*)(_QWORD *))result;
    v6 = 0;
    v7 = (uint64_t *)(a3 + 40);
    v8 = MEMORY[0x1E0DEE9D8];
    v15 = (uint64_t (*)(_QWORD *))result;
    while (v6 < *(_QWORD *)(v4 + 16))
    {
      v10 = *(v7 - 1);
      v9 = *v7;
      v18[0] = v10;
      v18[1] = v9;
      swift_bridgeObjectRetain();
      v11 = v5(v18);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if ((v11 & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v19 = v8;
        if ((result & 1) == 0)
        {
          result = sub_1A5B66E9C(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v19;
        }
        v13 = *(_QWORD *)(v8 + 16);
        v12 = *(_QWORD *)(v8 + 24);
        if (v13 >= v12 >> 1)
        {
          result = sub_1A5B66E9C(v12 > 1, v13 + 1, 1);
          v8 = v19;
        }
        *(_QWORD *)(v8 + 16) = v13 + 1;
        v14 = v8 + 16 * v13;
        *(_QWORD *)(v14 + 32) = v10;
        *(_QWORD *)(v14 + 40) = v9;
        v4 = a3;
        v5 = v15;
      }
      else
      {
        result = swift_bridgeObjectRelease();
      }
      ++v6;
      v7 += 2;
      if (v17 == v6)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

BOOL sub_1A5B83EB4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v1 = *a1;
  v2 = a1[1];
  sub_1A5B868F4();
  sub_1A5BC9A94();
  if (v5 != 1)
    return v4 == 3;
  swift_bridgeObjectRetain();
  sub_1A5BB1648(&v4, v1, v2);
  swift_bridgeObjectRelease();
  return 0;
}

id EligibilityFetcher.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id EligibilityFetcher.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EligibilityFetcher();
  return objc_msgSendSuper2(&v2, sel_init);
}

id EligibilityFetcher.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EligibilityFetcher();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A5B84020(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t isStackAllocationSafe;
  char v19;
  unint64_t v20;
  size_t v21;
  uint64_t v22;
  void *v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = a2;
  v28 = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v26 = a1;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = a2 + 56;
    v25[0] = a1 + 32;
    swift_bridgeObjectRetain();
    v5 = 0;
    while (1)
    {
      v6 = (uint64_t *)(v25[0] + 16 * v5);
      v8 = *v6;
      v7 = v6[1];
      ++v5;
      sub_1A5BCA16C();
      swift_bridgeObjectRetain();
      sub_1A5BC9BCC();
      v9 = sub_1A5BCA184();
      v10 = -1 << *(_BYTE *)(v2 + 32);
      v11 = v9 & ~v10;
      if (((*(_QWORD *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
      {
        v12 = *(_QWORD *)(v2 + 48);
        v13 = (_QWORD *)(v12 + 16 * v11);
        v14 = *v13 == v8 && v13[1] == v7;
        if (v14 || (sub_1A5BCA0B8() & 1) != 0)
        {
          isStackAllocationSafe = swift_bridgeObjectRelease();
          v27 = v5;
LABEL_19:
          v19 = *(_BYTE *)(v2 + 32);
          v20 = (unint64_t)((1 << v19) + 63) >> 6;
          v21 = 8 * v20;
          if ((v19 & 0x3Fu) < 0xE
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            memcpy((char *)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v21);
            v22 = sub_1A5B8432C((uint64_t)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            v23 = (void *)swift_slowAlloc();
            memcpy(v23, (const void *)(v2 + 56), v21);
            v22 = sub_1A5B8432C((uint64_t)v23, v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
            MEMORY[0x1A85B2FC0](v23, -1, -1);
          }
          return v22;
        }
        v15 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v15;
          if (((*(_QWORD *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
            break;
          v16 = (_QWORD *)(v12 + 16 * v11);
          v17 = *v16 == v8 && v16[1] == v7;
          if (v17 || (sub_1A5BCA0B8() & 1) != 0)
          {
            v27 = v5;
            isStackAllocationSafe = swift_bridgeObjectRelease();
            goto LABEL_19;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
    }
  }
  return v2;
}

uint64_t sub_1A5B8432C(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  BOOL v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t i;
  unint64_t v26;
  _QWORD *v27;
  BOOL v28;
  unint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  v6 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v30 = (unint64_t *)result;
  v31 = v6 - 1;
  v8 = *a5;
  v7 = a5[1];
  v9 = *(_QWORD *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    return sub_1A5B84554(v30, a2, v31, a3);
  }
  v32 = a3 + 56;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9)
      goto LABEL_29;
    v11 = v8 + 16 * v7;
    v13 = *(_QWORD *)(v11 + 32);
    v12 = *(_QWORD *)(v11 + 40);
    a5[1] = v7 + 1;
    sub_1A5BCA16C();
    swift_bridgeObjectRetain();
    sub_1A5BC9BCC();
    v14 = sub_1A5BCA184();
    v15 = -1 << *(_BYTE *)(a3 + 32);
    v16 = v14 & ~v15;
    v17 = v16 >> 6;
    v18 = 1 << v16;
    if (((1 << v16) & *(_QWORD *)(v32 + 8 * (v16 >> 6))) == 0)
      goto LABEL_4;
    v19 = *(_QWORD *)(a3 + 48);
    v20 = (_QWORD *)(v19 + 16 * v16);
    v21 = *v20 == v13 && v20[1] == v12;
    if (!v21 && (sub_1A5BCA0B8() & 1) == 0)
    {
      v24 = ~v15;
      for (i = v16 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v32 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v19 + 16 * v26);
        v28 = *v27 == v13 && v27[1] == v12;
        if (v28 || (sub_1A5BCA0B8() & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v17 = v26 >> 6;
          v18 = 1 << v26;
          goto LABEL_15;
        }
      }
LABEL_4:
      result = swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    result = swift_bridgeObjectRelease();
LABEL_15:
    v22 = v30[v17];
    v30[v17] = v22 & ~v18;
    if ((v18 & v22) != 0)
    {
      v23 = v31 - 1;
      if (__OFSUB__(v31, 1))
        goto LABEL_30;
      --v31;
      if (!v23)
        return MEMORY[0x1E0DEE9E8];
    }
LABEL_5:
    v8 = *a5;
    v7 = a5[1];
    v9 = *(_QWORD *)(*a5 + 16);
    if (v7 == v9)
      goto LABEL_2;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A5B84554(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED111220);
  result = sub_1A5BC9EA8();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_1A5BCA16C();
    swift_bridgeObjectRetain();
    sub_1A5BC9BCC();
    result = sub_1A5BCA184();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1A5B847E8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_1A5B84888(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1A5B8496C(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  BOOL v65;
  uint64_t v66;
  _QWORD *v67;
  BOOL v68;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint8_t *v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  int64_t v82;
  char *v83;
  unint64_t v84;
  char *v85;
  unint64_t v86;
  uint64_t v87;
  uint8_t *v88;
  uint64_t v89[9];
  uint64_t v90;
  uint64_t v91[2];
  uint64_t v92;

  v2 = sub_1A5BC9A88();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1A5BA5A04((uint64_t)&unk_1E4F6C278);
  swift_arrayDestroy();
  v7 = sub_1A5BC9A7C();
  v8 = sub_1A5B84020(v7, v6);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(v8 + 16);
  swift_release();
  if (v9)
  {
    if (qword_1ED110730 != -1)
      swift_once();
    v10 = sub_1A5BC9A64();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED110718);
    v11 = sub_1A5BC9A4C();
    v12 = sub_1A5BC9D88();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      v14 = "Missing language and region keys from os_eligibility response. Will assume false for both.";
LABEL_10:
      _os_log_impl(&dword_1A5B4D000, v11, v12, v14, v13, 2u);
      MEMORY[0x1A85B2FC0](v13, -1, -1);
    }
  }
  else
  {
    if (qword_1ED110730 != -1)
      swift_once();
    v15 = sub_1A5BC9A64();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED110718);
    v11 = sub_1A5BC9A4C();
    v12 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      v14 = "Eligibility statuses appear valid.";
      goto LABEL_10;
    }
  }

  v92 = MEMORY[0x1E0DEE9E8];
  v16 = sub_1A5BC9A7C();
  MEMORY[0x1E0C80A78](v16);
  *(&v79 - 2) = a1;
  *(&v79 - 1) = (uint64_t)&v92;
  v18 = sub_1A5B83D30((uint64_t)sub_1A5B868CC, (uint64_t)(&v79 - 4), v17);
  v87 = sub_1A5BA5A04(v18);
  swift_bridgeObjectRelease();
  v19 = v92;
  v20 = *(_QWORD *)(v92 + 16);
  v81 = v3;
  v82 = v2;
  v80 = v5;
  if (v20)
  {
    v79 = a1;
    v89[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1A5B66E9C(0, v20, 0);
    v21 = v89[0];
    v2 = sub_1A5B847E8(v19);
    a1 = v22;
    v88 = (uint8_t *)(v19 + 56);
    v24 = v23 & 1;
    v85 = "find class %s";
    v86 = 0x80000001A5BCFD00;
    v83 = "NPUT_DEVICE_LANGUAGE";
    v84 = 0x80000001A5BCFD30;
    do
    {
      if (v2 < 0 || v2 >= 1 << *(_BYTE *)(v19 + 32))
      {
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
        goto LABEL_70;
      }
      if (((*(_QWORD *)&v88[((unint64_t)v2 >> 3) & 0xFFFFFFFFFFFFF8] >> v2) & 1) == 0)
        goto LABEL_68;
      if (*(_DWORD *)(v19 + 36) != (_DWORD)a1)
        goto LABEL_69;
      v25 = (uint64_t *)(*(_QWORD *)(v19 + 48) + 16 * v2);
      v3 = *v25;
      v26 = v25[1];
      if (*v25 == 0xD000000000000024 && v26 == v86 || (sub_1A5BCA0B8() & 1) != 0)
      {
        v26 = 0xE800000000000000;
        v3 = 0x65676175676E614CLL;
      }
      else if (v3 == 0xD000000000000027 && v26 == v84 || (sub_1A5BCA0B8() & 1) != 0)
      {
        v26 = 0xE600000000000000;
        v3 = 0x6E6F69676552;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      v89[0] = v21;
      v5 = *(char **)(v21 + 16);
      v27 = *(_QWORD *)(v21 + 24);
      if ((unint64_t)v5 >= v27 >> 1)
      {
        sub_1A5B66E9C(v27 > 1, (int64_t)(v5 + 1), 1);
        v21 = v89[0];
      }
      *(_QWORD *)(v21 + 16) = v5 + 1;
      v28 = v21 + 16 * (_QWORD)v5;
      *(_QWORD *)(v28 + 32) = v3;
      *(_QWORD *)(v28 + 40) = v26;
      v29 = sub_1A5B84888(v2, a1, v24 & 1, v19);
      v2 = v29;
      a1 = v30;
      v24 = v31 & 1;
      --v20;
    }
    while (v20);
    sub_1A5B868E8(v29, v30, v31 & 1);
    swift_bridgeObjectRelease();
    if (qword_1ED110730 != -1)
      swift_once();
    v32 = sub_1A5BC9A64();
    __swift_project_value_buffer(v32, (uint64_t)qword_1ED110718);
    swift_retain();
    v33 = sub_1A5BC9A4C();
    v34 = sub_1A5BC9D88();
    v35 = os_log_type_enabled(v33, v34);
    a1 = v79;
    if (v35)
    {
      v36 = (uint8_t *)swift_slowAlloc();
      v37 = swift_slowAlloc();
      v89[0] = v37;
      *(_DWORD *)v36 = 136315138;
      v38 = swift_bridgeObjectRetain();
      v39 = MEMORY[0x1A85B2330](v38, MEMORY[0x1E0DEA968]);
      v41 = v40;
      swift_release();
      v91[0] = sub_1A5B58A30(v39, v41, v89);
      sub_1A5BC9E18();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5B4D000, v33, v34, "Failed to get value for the following eligibility keys: %s. May erroneously report language/region/device ineligibility.", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v37, -1, -1);
      MEMORY[0x1A85B2FC0](v36, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v3 = v81;
    v2 = v82;
    v5 = v80;
  }
  if (qword_1ED110730 != -1)
LABEL_70:
    swift_once();
  v42 = sub_1A5BC9A64();
  __swift_project_value_buffer(v42, (uint64_t)qword_1ED110718);
  (*(void (**)(char *, uint64_t, int64_t))(v3 + 16))(v5, a1, v2);
  v43 = v87;
  swift_bridgeObjectRetain_n();
  v44 = sub_1A5BC9A4C();
  v45 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v44, (os_log_type_t)v45))
  {
    LODWORD(v86) = v45;
    v46 = swift_slowAlloc();
    v85 = (char *)swift_slowAlloc();
    v91[0] = (uint64_t)v85;
    *(_DWORD *)v46 = 136315394;
    swift_bridgeObjectRetain();
    v47 = sub_1A5BC9D4C();
    v49 = v48;
    swift_bridgeObjectRelease();
    v89[0] = sub_1A5B58A30(v47, v49, v91);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v88 = (uint8_t *)v46;
    *(_WORD *)(v46 + 12) = 2080;
    v50 = sub_1A5BC9A7C();
    v51 = *(_QWORD *)(v50 + 16);
    if (v51)
    {
      v83 = (char *)v50;
      v84 = (unint64_t)v44;
      v52 = 0;
      v53 = v50 + 32;
      v54 = v43 + 56;
      v55 = MEMORY[0x1E0DEE9D8];
      v56 = v43;
      while (1)
      {
        v57 = (uint64_t *)(v53 + 16 * v52);
        v59 = *v57;
        v58 = v57[1];
        if (!*(_QWORD *)(v56 + 16))
          break;
        sub_1A5BCA16C();
        swift_bridgeObjectRetain();
        sub_1A5BC9BCC();
        v60 = sub_1A5BCA184();
        v61 = -1 << *(_BYTE *)(v56 + 32);
        v62 = v60 & ~v61;
        if (((*(_QWORD *)(v54 + ((v62 >> 3) & 0xFFFFFFFFFFFFF8)) >> v62) & 1) == 0)
          goto LABEL_57;
        v63 = *(_QWORD *)(v87 + 48);
        v64 = (_QWORD *)(v63 + 16 * v62);
        v65 = *v64 == v59 && v64[1] == v58;
        if (!v65 && (sub_1A5BCA0B8() & 1) == 0)
        {
          v66 = ~v61;
          do
          {
            v62 = (v62 + 1) & v66;
            if (((*(_QWORD *)(v54 + ((v62 >> 3) & 0xFFFFFFFFFFFFF8)) >> v62) & 1) == 0)
              goto LABEL_57;
            v67 = (_QWORD *)(v63 + 16 * v62);
            v68 = *v67 == v59 && v67[1] == v58;
          }
          while (!v68 && (sub_1A5BCA0B8() & 1) == 0);
        }
        swift_bridgeObjectRelease();
LABEL_40:
        ++v52;
        v56 = v87;
        if (v52 == v51)
        {
          swift_bridgeObjectRelease();
          v3 = v81;
          v2 = v82;
          v5 = v80;
          v44 = v84;
          goto LABEL_65;
        }
      }
      swift_bridgeObjectRetain();
LABEL_57:
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v90 = v55;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1A5B66E9C(0, *(_QWORD *)(v55 + 16) + 1, 1);
        v55 = v90;
      }
      v71 = *(_QWORD *)(v55 + 16);
      v70 = *(_QWORD *)(v55 + 24);
      if (v71 >= v70 >> 1)
      {
        sub_1A5B66E9C(v70 > 1, v71 + 1, 1);
        v55 = v90;
      }
      *(_QWORD *)(v55 + 16) = v71 + 1;
      v72 = v55 + 16 * v71;
      *(_QWORD *)(v72 + 32) = v59;
      *(_QWORD *)(v72 + 40) = v58;
      goto LABEL_40;
    }
    swift_bridgeObjectRelease();
    v55 = MEMORY[0x1E0DEE9D8];
LABEL_65:
    v73 = v88;
    v74 = MEMORY[0x1A85B2330](v55, MEMORY[0x1E0DEA968]);
    v76 = v75;
    swift_release();
    v89[0] = sub_1A5B58A30(v74, v76, v91);
    sub_1A5BC9E18();
    v43 = v87;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, int64_t))(v3 + 8))(v5, v2);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A5B4D000, v44, (os_log_type_t)v86, "Retrieved eligibleKeys: %s, ineligibleKeys: %s", v73, 0x16u);
    v77 = v85;
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v77, -1, -1);
    MEMORY[0x1A85B2FC0](v73, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, int64_t))(v3 + 8))(v5, v2);

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v43;
}

id sub_1A5B85398()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t *v5;
  unsigned int domain_answer;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t **v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint8_t *v40;
  uint8_t *v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint8_t *v46;
  uint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  BOOL v56;
  uint64_t v57;
  _QWORD *v58;
  BOOL v59;
  char v60;
  objc_class *v61;
  _BYTE *v62;
  id v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  _BOOL4 v67;
  uint64_t v68;
  uint8_t *v69;
  id v70;
  uint8_t *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  unint64_t v82;
  uint64_t v83;
  uint8_t *v84;
  uint8_t *v85;
  uint8_t *v86;
  uint64_t v87;
  objc_super v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91[11];

  v91[9] = *MEMORY[0x1E0C80C00];
  v1 = sub_1A5BC9A88();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = 0;
  v90 = 0;
  v5 = (uint64_t *)swift_slowAlloc();
  domain_answer = os_eligibility_get_domain_answer();
  if ((sub_1A5BBE504() & 1) != 0)
  {
    if (qword_1ED1107A8 != -1)
      swift_once();
    v7 = (void *)qword_1ED110798;
    v0 = (id)sub_1A5BC9B3C();
    LODWORD(v7) = objc_msgSend(v7, sel_BOOLForKey_, v0);

    if ((_DWORD)v7)
      v90 = 1;
  }
  if (domain_answer)
  {
    sub_1A5B86888();
    swift_allocError();
    *(_QWORD *)v8 = domain_answer;
    *(_BYTE *)(v8 + 8) = 0;
LABEL_17:
    swift_willThrow();
    goto LABEL_18;
  }
  v9 = v90;
  if (v89 == 2)
  {
    sub_1A5B86888();
    swift_allocError();
    *(_QWORD *)v10 = v9;
    *(_BYTE *)(v10 + 8) = 1;
    goto LABEL_17;
  }
  if (v90 == 1)
  {
    sub_1A5B86888();
    swift_allocError();
    *(_QWORD *)v11 = 0;
LABEL_16:
    *(_BYTE *)(v11 + 8) = 3;
    goto LABEL_17;
  }
  v12 = *v5;
  if (!*v5)
  {
    sub_1A5B86888();
    swift_allocError();
    *(_QWORD *)v11 = 1;
    goto LABEL_16;
  }
  v13 = swift_unknownObjectRetain();
  v14 = MEMORY[0x1A85B30F8](v13);
  if (v14 != sub_1A5BC9A70())
  {
    v15 = MEMORY[0x1A85B30F8](v12);
    sub_1A5B86888();
    swift_allocError();
    *(_QWORD *)v16 = v15;
    *(_BYTE *)(v16 + 8) = 2;
    swift_willThrow();
    swift_unknownObjectRelease();
LABEL_18:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1107C0);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v5, -1, -1);
    return v0;
  }
  v83 = v2;
  v80 = v1;
  swift_unknownObjectRetain();
  v79 = v12;
  sub_1A5BC9AA0();
  v18 = sub_1A5B8496C((uint64_t)v4);
  v85 = (uint8_t *)"find class %s";
  v86 = (uint8_t *)0x80000001A5BCFD00;
  v78 = sub_1A5B72734(0xD000000000000024, 0x80000001A5BCFD00, v18);
  v81 = "NPUT_DEVICE_LANGUAGE";
  v82 = 0x80000001A5BCFD30;
  v84 = (uint8_t *)v18;
  v77 = sub_1A5B72734(0xD000000000000027, 0x80000001A5BCFD30, v18);
  v19 = sub_1A5BC9A7C();
  v20 = *(_QWORD *)(v19 + 16);
  v76 = v19;
  if (v20)
  {
    v21 = (uint8_t **)(v19 + 40);
    v22 = MEMORY[0x1E0DEE9D8];
    do
    {
      v28 = (uint64_t)*(v21 - 1);
      v27 = *v21;
      if ((v28 != 0xD000000000000024 || v27 != v86)
        && (sub_1A5BCA0B8() & 1) == 0
        && (v28 != 0xD000000000000027 || v27 != (uint8_t *)v82)
        && (sub_1A5BCA0B8() & 1) == 0)
      {
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v91[0] = v22;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1A5B66E9C(0, *(_QWORD *)(v22 + 16) + 1, 1);
          v22 = v91[0];
        }
        v24 = *(_QWORD *)(v22 + 16);
        v23 = *(_QWORD *)(v22 + 24);
        v25 = v24 + 1;
        if (v24 >= v23 >> 1)
        {
          v75 = v24 + 1;
          sub_1A5B66E9C(v23 > 1, v24 + 1, 1);
          v25 = v75;
          v22 = v91[0];
        }
        *(_QWORD *)(v22 + 16) = v25;
        v26 = v22 + 16 * v24;
        *(_QWORD *)(v26 + 32) = v28;
        *(_QWORD *)(v26 + 40) = v27;
      }
      v21 += 2;
      --v20;
    }
    while (v20);
  }
  else
  {
    v22 = MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v22 + 16))
  {
    v81 = (char *)v22;
    v30 = v83;
    if (qword_1ED110730 != -1)
      swift_once();
    v31 = sub_1A5BC9A64();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED110718);
    v32 = v81;
    swift_retain_n();
    v33 = sub_1A5BC9A4C();
    v34 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v86 = (uint8_t *)swift_slowAlloc();
      v91[0] = (uint64_t)v86;
      v85 = v35;
      *(_DWORD *)v35 = 136315138;
      v82 = (unint64_t)(v35 + 4);
      v36 = swift_retain();
      v37 = MEMORY[0x1A85B2330](v36, MEMORY[0x1E0DEA968]);
      v39 = v38;
      swift_release();
      v87 = sub_1A5B58A30(v37, v39, v91);
      v30 = v83;
      sub_1A5BC9E18();
      swift_release_n();
      swift_bridgeObjectRelease();
      v40 = v85;
      _os_log_impl(&dword_1A5B4D000, v33, v34, "Checking remaining keys for device eligibility: %s", v85, 0xCu);
      v41 = v86;
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v41, -1, -1);
      MEMORY[0x1A85B2FC0](v40, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v46 = v84;
    v82 = *((_QWORD *)v32 + 2);
    if (v82)
    {
      v85 = (uint8_t *)(v32 + 32);
      v86 = v84 + 56;
      swift_retain();
      v47 = 0;
      do
      {
        if (!*((_QWORD *)v46 + 2))
        {
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_68;
        }
        v48 = &v85[16 * v47];
        v50 = *(_QWORD *)v48;
        v49 = *((_QWORD *)v48 + 1);
        sub_1A5BCA16C();
        swift_bridgeObjectRetain();
        sub_1A5BC9BCC();
        v51 = sub_1A5BCA184();
        v52 = -1 << v84[32];
        v53 = v51 & ~v52;
        if (((*(_QWORD *)&v86[(v53 >> 3) & 0xFFFFFFFFFFFFF8] >> v53) & 1) == 0)
          goto LABEL_67;
        v54 = *((_QWORD *)v84 + 6);
        v55 = (_QWORD *)(v54 + 16 * v53);
        v56 = *v55 == v50 && v55[1] == v49;
        if (!v56 && (sub_1A5BCA0B8() & 1) == 0)
        {
          v57 = ~v52;
          while (1)
          {
            v53 = (v53 + 1) & v57;
            if (((*(_QWORD *)&v86[(v53 >> 3) & 0xFFFFFFFFFFFFF8] >> v53) & 1) == 0)
              break;
            v58 = (_QWORD *)(v54 + 16 * v53);
            v59 = *v58 == v50 && v58[1] == v49;
            if (v59 || (sub_1A5BCA0B8() & 1) != 0)
              goto LABEL_48;
          }
LABEL_67:
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          v30 = v83;
LABEL_68:
          swift_release();
          v60 = 0;
          goto LABEL_71;
        }
LABEL_48:
        ++v47;
        swift_bridgeObjectRelease();
        v30 = v83;
        v46 = v84;
      }
      while (v47 != v82);
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    v30 = v83;
    if (qword_1ED110730 != -1)
      swift_once();
    v42 = sub_1A5BC9A64();
    __swift_project_value_buffer(v42, (uint64_t)qword_1ED110718);
    v43 = sub_1A5BC9A4C();
    v44 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v45 = 0;
      _os_log_impl(&dword_1A5B4D000, v43, v44, "No remaining keys in os_eligibility check. Will assume device is eligible.", v45, 2u);
      MEMORY[0x1A85B2FC0](v45, -1, -1);
    }

  }
  v60 = 1;
LABEL_71:
  v61 = (objc_class *)type metadata accessor for Eligibility();
  v62 = objc_allocWithZone(v61);
  v62[OBJC_IVAR___CSFEligibility_regionEligible] = v77 & 1;
  v62[OBJC_IVAR___CSFEligibility_languageEligible] = v78 & 1;
  v62[OBJC_IVAR___CSFEligibility_siriLanguageEligible] = 0;
  v62[OBJC_IVAR___CSFEligibility_locationEligible] = 0;
  v62[OBJC_IVAR___CSFEligibility_deviceEligibile] = v60;
  v88.receiver = v62;
  v88.super_class = v61;
  v63 = objc_msgSendSuper2(&v88, sel_init);
  if (qword_1ED110730 != -1)
    swift_once();
  v64 = sub_1A5BC9A64();
  __swift_project_value_buffer(v64, (uint64_t)qword_1ED110718);
  v0 = v63;
  v65 = sub_1A5BC9A4C();
  v66 = sub_1A5BC9DA0();
  v67 = os_log_type_enabled(v65, v66);
  v68 = v80;
  if (v67)
  {
    v69 = (uint8_t *)swift_slowAlloc();
    v85 = (uint8_t *)swift_slowAlloc();
    v86 = v69;
    *(_DWORD *)v69 = 138412290;
    v84 = v69 + 4;
    v91[0] = (uint64_t)v0;
    v70 = v0;
    v68 = v80;
    sub_1A5BC9E18();
    v71 = v85;
    *(_QWORD *)v85 = v0;

    v30 = v83;
    v72 = v66;
    v73 = v86;
    _os_log_impl(&dword_1A5B4D000, v65, v72, "Calculated eligibility from os_eligibility: %@", v86, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v71, -1, -1);
    MEMORY[0x1A85B2FC0](v73, -1, -1);
    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();

  }
  (*(void (**)(char *, uint64_t))(v30 + 8))(v4, v68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1107C0);
  swift_arrayDestroy();
  MEMORY[0x1A85B2FC0](v5, -1, -1);
  return v0;
}

id _s25CloudSubscriptionFeatures18EligibilityFetcherC7currentAA0D0CvgZ_0()
{
  return sub_1A5B85398();
}

uint64_t type metadata accessor for EligibilityFetcher()
{
  return objc_opt_self();
}

unint64_t sub_1A5B86888()
{
  unint64_t result;

  result = qword_1EE7FA7E8;
  if (!qword_1EE7FA7E8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD024, &type metadata for EligibilityError);
    atomic_store(result, &qword_1EE7FA7E8);
  }
  return result;
}

BOOL sub_1A5B868CC(uint64_t *a1)
{
  return sub_1A5B83EB4(a1);
}

uint64_t sub_1A5B868E8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1A5B868F4()
{
  unint64_t result;

  result = qword_1ED110588;
  if (!qword_1ED110588)
  {
    result = MEMORY[0x1A85B2F18](MEMORY[0x1E0DEE1C8], MEMORY[0x1E0DEE190]);
    atomic_store(result, (unint64_t *)&qword_1ED110588);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EligibilityError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EligibilityError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1A5B869C4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_1A5B869DC(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for EligibilityError()
{
  return &type metadata for EligibilityError;
}

uint64_t sub_1A5B86A04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 448) = v2;
  swift_task_dealloc();
  if (v2)
    return (*(uint64_t (**)(void))(v6 + 8))();
  *(_QWORD *)(v6 + 616) = a2;
  *(_QWORD *)(v6 + 624) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B86A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 464) = v2;
  swift_task_dealloc();
  if (v2)
    return (*(uint64_t (**)(void))(v6 + 8))();
  *(_QWORD *)(v6 + 472) = a2;
  *(_QWORD *)(v6 + 480) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B86B10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t (*v10)(void);

  v1 = *(_QWORD *)(v0 + 472);
  v2 = *(_QWORD *)(v0 + 464);
  *(_QWORD *)(v0 + 312) = *(_QWORD *)(v0 + 480);
  *(_QWORD *)(v0 + 320) = v1;
  strcpy((char *)(v0 + 328), "{featureKey}");
  *(_BYTE *)(v0 + 341) = 0;
  *(_WORD *)(v0 + 342) = -5120;
  *(_OWORD *)(v0 + 344) = *(_OWORD *)(v0 + 56);
  sub_1A5B87F6C();
  v3 = sub_1A5BC9E30();
  v5 = v4;
  v6 = sub_1A5B62724();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    if (v5)
    {
      *(_QWORD *)(v0 + 360) = v3;
      *(_QWORD *)(v0 + 368) = v5;
      *(_QWORD *)(v0 + 376) = 0x7D644964757BLL;
      *(_QWORD *)(v0 + 384) = 0xE600000000000000;
      *(_QWORD *)(v0 + 392) = v6;
      *(_QWORD *)(v0 + 400) = v7;
      v3 = sub_1A5BC9E30();
      v9 = v8;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v9 = 0;
    }
    sub_1A5B87CC4(v3, v9, *(_QWORD *)(v0 + 408));
    swift_bridgeObjectRelease();
    v10 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v10();
}

uint64_t sub_1A5B86CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 496) = v2;
  swift_task_dealloc();
  if (v2)
    return (*(uint64_t (**)(void))(v6 + 8))();
  *(_QWORD *)(v6 + 504) = a2;
  *(_QWORD *)(v6 + 512) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B86D2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(void);

  v1 = *(_QWORD *)(v0 + 504);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 496);
    *(_QWORD *)(v0 + 312) = *(_QWORD *)(v0 + 512);
    *(_QWORD *)(v0 + 320) = v1;
    strcpy((char *)(v0 + 328), "{featureKey}");
    *(_BYTE *)(v0 + 341) = 0;
    *(_WORD *)(v0 + 342) = -5120;
    *(_OWORD *)(v0 + 344) = *(_OWORD *)(v0 + 56);
    sub_1A5B87F6C();
    v3 = sub_1A5BC9E30();
    v5 = v4;
    v6 = sub_1A5B62724();
    if (v2)
    {
LABEL_3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = *(uint64_t (**)(void))(v0 + 8);
      return v11();
    }
  }
  else
  {
    v5 = 0;
    v3 = *(_QWORD *)(v0 + 512);
    v8 = *(_QWORD *)(v0 + 496);
    v6 = sub_1A5B62724();
    if (v8)
      goto LABEL_3;
  }
  if (v5)
  {
    *(_QWORD *)(v0 + 360) = v3;
    *(_QWORD *)(v0 + 368) = v5;
    *(_QWORD *)(v0 + 376) = 0x7D644964757BLL;
    *(_QWORD *)(v0 + 384) = 0xE600000000000000;
    *(_QWORD *)(v0 + 392) = v6;
    *(_QWORD *)(v0 + 400) = v7;
    sub_1A5B87F6C();
    v3 = sub_1A5BC9E30();
    v10 = v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v10 = 0;
  }
  sub_1A5B87CC4(v3, v10, *(_QWORD *)(v0 + 408));
  swift_bridgeObjectRelease();
  v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1A5B86EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 528) = v2;
  swift_task_dealloc();
  if (v2)
    return (*(uint64_t (**)(void))(v6 + 8))();
  *(_QWORD *)(v6 + 536) = a2;
  *(_QWORD *)(v6 + 544) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B86F68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(void);

  v1 = v0[67];
  v2 = v0[68];
  v3 = v0[66];
  v4 = sub_1A5B62724();
  if (v3)
  {
    swift_bridgeObjectRelease();
    v8 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    if (v1)
    {
      v0[33] = v2;
      v0[34] = v1;
      v0[35] = 0x7D644964757BLL;
      v0[36] = 0xE600000000000000;
      v0[37] = v4;
      v0[38] = v5;
      sub_1A5B87F6C();
      v2 = sub_1A5BC9E30();
      v7 = v6;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v7 = 0;
    }
    sub_1A5B87CC4(v2, v7, v0[51]);
    swift_bridgeObjectRelease();
    v8 = (uint64_t (*)(void))v0[1];
  }
  return v8();
}

uint64_t sub_1A5B8707C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 560) = v2;
  swift_task_dealloc();
  if (v2)
    return (*(uint64_t (**)(void))(v6 + 8))();
  *(_QWORD *)(v6 + 568) = a2;
  *(_QWORD *)(v6 + 576) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B87104()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t (*v8)(void);

  v1 = v0[72];
  v2 = v0[71];
  v3 = v0[70];
  v4 = sub_1A5B62724();
  if (v3)
  {
    swift_bridgeObjectRelease();
    v8 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    if (v2)
    {
      v0[33] = v1;
      v0[34] = v2;
      v0[35] = 0x7D644964757BLL;
      v0[36] = 0xE600000000000000;
      v0[37] = v4;
      v0[38] = v5;
      sub_1A5B87F6C();
      v1 = sub_1A5BC9E30();
      v7 = v6;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v7 = 0;
    }
    sub_1A5B87CC4(v1, v7, v0[51]);
    swift_bridgeObjectRelease();
    v8 = (uint64_t (*)(void))v0[1];
  }
  return v8();
}

uint64_t sub_1A5B87218(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 592) = v2;
  swift_task_dealloc();
  if (v2)
    return (*(uint64_t (**)(void))(v6 + 8))();
  *(_QWORD *)(v6 + 600) = a2;
  *(_QWORD *)(v6 + 608) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B872A0()
{
  uint64_t v0;

  sub_1A5B87CC4(*(_QWORD *)(v0 + 608), *(_QWORD *)(v0 + 600), *(_QWORD *)(v0 + 408));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B872F4()
{
  uint64_t v0;

  sub_1A5B87CC4(*(_QWORD *)(v0 + 624), *(_QWORD *)(v0 + 616), *(_QWORD *)(v0 + 408));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B87348(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 640) = v2;
  swift_task_dealloc();
  if (v2)
    return (*(uint64_t (**)(void))(v6 + 8))();
  *(_QWORD *)(v6 + 648) = a2;
  *(_QWORD *)(v6 + 656) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B873D0()
{
  uint64_t v0;

  sub_1A5B87CC4(*(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 648), *(_QWORD *)(v0 + 408));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B87424(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 680) = v2;
  swift_task_dealloc();
  if (v2)
    return (*(uint64_t (**)(void))(v6 + 8))();
  *(_QWORD *)(v6 + 688) = a2;
  *(_QWORD *)(v6 + 696) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B874AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t (*v13)(void);

  v1 = *(_QWORD *)(v0 + 688);
  v2 = *(_QWORD *)(v0 + 696);
  v3 = *(_QWORD *)(v0 + 680);
  v4 = sub_1A5B62724();
  if (v3)
  {
    swift_bridgeObjectRelease();
    v13 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v6 = v5;
    if (v1)
    {
      v7 = v4;
      v8 = *(_QWORD *)(v0 + 664);
      v9 = *(_QWORD *)(v0 + 432);
      *(_QWORD *)(v0 + 168) = v2;
      *(_QWORD *)(v0 + 176) = v1;
      strcpy((char *)(v0 + 184), "{featureKey}");
      *(_BYTE *)(v0 + 197) = 0;
      *(_WORD *)(v0 + 198) = -5120;
      *(_QWORD *)(v0 + 200) = v9;
      *(_QWORD *)(v0 + 208) = v8;
      sub_1A5B87F6C();
      *(_QWORD *)(v0 + 216) = sub_1A5BC9E30();
      *(_QWORD *)(v0 + 224) = v10;
      *(_QWORD *)(v0 + 232) = 0x7D644964757BLL;
      *(_QWORD *)(v0 + 240) = 0xE600000000000000;
      *(_QWORD *)(v0 + 248) = v7;
      *(_QWORD *)(v0 + 256) = v6;
      v2 = sub_1A5BC9E30();
      v12 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v12 = 0;
    }
    sub_1A5B87CC4(v2, v12, *(_QWORD *)(v0 + 408));
    swift_bridgeObjectRelease();
    v13 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v13();
}

uint64_t sub_1A5B8764C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 712) = v2;
  swift_task_dealloc();
  if (v2)
    return (*(uint64_t (**)(void))(v6 + 8))();
  *(_QWORD *)(v6 + 720) = a2;
  *(_QWORD *)(v6 + 728) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B876D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t (*v13)(void);

  v1 = *(_QWORD *)(v0 + 728);
  v2 = *(_QWORD *)(v0 + 720);
  v3 = *(_QWORD *)(v0 + 712);
  v4 = sub_1A5B62724();
  if (v3)
  {
    swift_bridgeObjectRelease();
    v13 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v6 = v5;
    if (v2)
    {
      v7 = v4;
      v8 = *(_QWORD *)(v0 + 664);
      v9 = *(_QWORD *)(v0 + 432);
      *(_QWORD *)(v0 + 168) = v1;
      *(_QWORD *)(v0 + 176) = v2;
      strcpy((char *)(v0 + 184), "{featureKey}");
      *(_BYTE *)(v0 + 197) = 0;
      *(_WORD *)(v0 + 198) = -5120;
      *(_QWORD *)(v0 + 200) = v9;
      *(_QWORD *)(v0 + 208) = v8;
      sub_1A5B87F6C();
      *(_QWORD *)(v0 + 216) = sub_1A5BC9E30();
      *(_QWORD *)(v0 + 224) = v10;
      *(_QWORD *)(v0 + 232) = 0x7D644964757BLL;
      *(_QWORD *)(v0 + 240) = 0xE600000000000000;
      *(_QWORD *)(v0 + 248) = v7;
      *(_QWORD *)(v0 + 256) = v6;
      v1 = sub_1A5BC9E30();
      v12 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v12 = 0;
    }
    sub_1A5B87CC4(v1, v12, *(_QWORD *)(v0 + 408));
    swift_bridgeObjectRelease();
    v13 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v13();
}

uint64_t sub_1A5B87874(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 752) = v2;
  swift_task_dealloc();
  if (v2)
    return (*(uint64_t (**)(void))(v6 + 8))();
  *(_QWORD *)(v6 + 760) = a2;
  *(_QWORD *)(v6 + 768) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B878FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t (*v13)(void);

  v1 = *(_QWORD *)(v0 + 760);
  v2 = *(_QWORD *)(v0 + 768);
  v3 = *(_QWORD *)(v0 + 752);
  v4 = sub_1A5B62724();
  if (v3)
  {
    swift_bridgeObjectRelease();
    v13 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v6 = v5;
    if (v1)
    {
      v7 = v4;
      v8 = *(_QWORD *)(v0 + 736);
      v9 = *(_QWORD *)(v0 + 432);
      *(_QWORD *)(v0 + 72) = v2;
      *(_QWORD *)(v0 + 80) = v1;
      strcpy((char *)(v0 + 88), "{featureKey}");
      *(_BYTE *)(v0 + 101) = 0;
      *(_WORD *)(v0 + 102) = -5120;
      *(_QWORD *)(v0 + 104) = v9;
      *(_QWORD *)(v0 + 112) = v8;
      sub_1A5B87F6C();
      *(_QWORD *)(v0 + 120) = sub_1A5BC9E30();
      *(_QWORD *)(v0 + 128) = v10;
      *(_QWORD *)(v0 + 136) = 0x7D644964757BLL;
      *(_QWORD *)(v0 + 144) = 0xE600000000000000;
      *(_QWORD *)(v0 + 152) = v7;
      *(_QWORD *)(v0 + 160) = v6;
      v2 = sub_1A5BC9E30();
      v12 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v12 = 0;
    }
    sub_1A5B87CC4(v2, v12, *(_QWORD *)(v0 + 408));
    swift_bridgeObjectRelease();
    v13 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v13();
}

uint64_t sub_1A5B87A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(v6 + 784) = v2;
  swift_task_dealloc();
  if (v2)
    return (*(uint64_t (**)(void))(v6 + 8))();
  *(_QWORD *)(v6 + 792) = a2;
  *(_QWORD *)(v6 + 800) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B87B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t (*v13)(void);

  v1 = *(_QWORD *)(v0 + 800);
  v2 = *(_QWORD *)(v0 + 792);
  v3 = *(_QWORD *)(v0 + 784);
  v4 = sub_1A5B62724();
  if (v3)
  {
    swift_bridgeObjectRelease();
    v13 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v6 = v5;
    if (v2)
    {
      v7 = v4;
      v8 = *(_QWORD *)(v0 + 736);
      v9 = *(_QWORD *)(v0 + 432);
      *(_QWORD *)(v0 + 72) = v1;
      *(_QWORD *)(v0 + 80) = v2;
      strcpy((char *)(v0 + 88), "{featureKey}");
      *(_BYTE *)(v0 + 101) = 0;
      *(_WORD *)(v0 + 102) = -5120;
      *(_QWORD *)(v0 + 104) = v9;
      *(_QWORD *)(v0 + 112) = v8;
      sub_1A5B87F6C();
      *(_QWORD *)(v0 + 120) = sub_1A5BC9E30();
      *(_QWORD *)(v0 + 128) = v10;
      *(_QWORD *)(v0 + 136) = 0x7D644964757BLL;
      *(_QWORD *)(v0 + 144) = 0xE600000000000000;
      *(_QWORD *)(v0 + 152) = v7;
      *(_QWORD *)(v0 + 160) = v6;
      v1 = sub_1A5BC9E30();
      v12 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v12 = 0;
    }
    sub_1A5B87CC4(v1, v12, *(_QWORD *)(v0 + 408));
    swift_bridgeObjectRelease();
    v13 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v13();
}

uint64_t sub_1A5B87CC4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _BYTE *v18;
  uint64_t v20;
  uint64_t v21;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FB70);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1A5BC986C();
    swift_bridgeObjectRelease();
    v9 = sub_1A5BC9878();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a3, v8, v9);
    }
    sub_1A5B83AD4((uint64_t)v8);
  }
  if (qword_1ED10FBB8 != -1)
    swift_once();
  v11 = sub_1A5BC9A64();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED10FB98);
  swift_bridgeObjectRetain();
  v12 = sub_1A5BC9A4C();
  v13 = sub_1A5BC9D88();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v21 = v15;
    *(_DWORD *)v14 = 136315138;
    if (a2)
      v16 = a1;
    else
      v16 = 0x3E6C696E3CLL;
    if (a2)
      v17 = a2;
    else
      v17 = 0xE500000000000000;
    swift_bridgeObjectRetain();
    v20 = sub_1A5B58A30(v16, v17, &v21);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A5B4D000, v12, v13, "failed to create url from string: %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v15, -1, -1);
    MEMORY[0x1A85B2FC0](v14, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1A5B584A8();
  swift_allocError();
  *v18 = 6;
  return swift_willThrow();
}

unint64_t sub_1A5B87F6C()
{
  unint64_t result;

  result = qword_1ED10FC28;
  if (!qword_1ED10FC28)
  {
    result = MEMORY[0x1A85B2F18](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED10FC28);
  }
  return result;
}

uint64_t destroy for URLResolver(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for URLResolver(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for URLResolver(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v4 = a2[6];
  a1[5] = a2[5];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[6] = v4;
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for URLResolver(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 48) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for URLResolver(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for URLResolver(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for URLResolver()
{
  return &type metadata for URLResolver;
}

uint64_t sub_1A5B88174(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  _BYTE *v14;
  char v16;
  __int128 v17;
  __int128 v18;

  v3 = v2;
  v6 = objc_msgSend(v3, sel_aa_primaryAppleAccount);
  if (!v6)
    goto LABEL_14;
  v7 = v6;
  if (qword_1ED10FFA0 != -1)
    swift_once();
  v8 = objc_msgSend(v7, sel_propertiesForDataclass_, qword_1ED112DA8);

  if (!v8)
    goto LABEL_14;
  v9 = sub_1A5BC9AE8();

  v10 = sub_1A5B88338(v9);
  swift_bridgeObjectRelease();
  if (!v10)
    goto LABEL_14;
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    v11 = sub_1A5B5AB84(a1, a2);
    if ((v12 & 1) != 0)
    {
      sub_1A5B58B00(*(_QWORD *)(v10 + 56) + 32 * v11, (uint64_t)&v17);
    }
    else
    {
      v17 = 0u;
      v18 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = 0u;
    v18 = 0u;
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED110560);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v13 = v16 & 1;
  }
  else
  {
LABEL_14:
    sub_1A5B584A8();
    swift_allocError();
    *v14 = 9;
    swift_willThrow();
  }
  return v13 & 1;
}

unint64_t sub_1A5B88338(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  int64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  __int128 v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  __int128 v24;
  _OWORD v25[2];
  _OWORD v26[2];
  __int128 v27;
  _OWORD v28[2];
  _OWORD v29[2];
  _OWORD v30[2];
  _OWORD v31[2];
  uint64_t v32;
  _OWORD v33[2];
  _OWORD v34[2];
  uint64_t v35;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FCD8);
    v2 = (_QWORD *)sub_1A5BC9F80();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v23 = a1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(a1 + 64);
  v22 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v7 << 6);
      v12 = v7;
    }
    else
    {
      v13 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_37;
      if (v13 >= v22)
      {
LABEL_33:
        sub_1A5B625C8();
        return (unint64_t)v2;
      }
      v14 = *(_QWORD *)(v23 + 8 * v13);
      v12 = v7 + 1;
      if (!v14)
      {
        v12 = v7 + 2;
        if (v7 + 2 >= v22)
          goto LABEL_33;
        v14 = *(_QWORD *)(v23 + 8 * v12);
        if (!v14)
        {
          v12 = v7 + 3;
          if (v7 + 3 >= v22)
            goto LABEL_33;
          v14 = *(_QWORD *)(v23 + 8 * v12);
          if (!v14)
          {
            v12 = v7 + 4;
            if (v7 + 4 >= v22)
              goto LABEL_33;
            v14 = *(_QWORD *)(v23 + 8 * v12);
            if (!v14)
            {
              v15 = v7 + 5;
              if (v7 + 5 >= v22)
                goto LABEL_33;
              v14 = *(_QWORD *)(v23 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  v12 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_38;
                  if (v12 >= v22)
                    goto LABEL_33;
                  v14 = *(_QWORD *)(v23 + 8 * v12);
                  ++v15;
                  if (v14)
                    goto LABEL_26;
                }
              }
              v12 = v7 + 5;
            }
          }
        }
      }
LABEL_26:
      v10 = (v14 - 1) & v14;
      v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_1A5B8A388(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)v33);
    sub_1A5B58B00(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v34 + 8);
    v31[0] = v34[0];
    v31[1] = v34[1];
    v32 = v35;
    v30[0] = v33[0];
    v30[1] = v33[1];
    sub_1A5B8A388((uint64_t)v30, (uint64_t)v25);
    if (!swift_dynamicCast())
    {
      sub_1A5B4FBE8((uint64_t)v30, &qword_1ED10FCC8);
      swift_bridgeObjectRelease();
      sub_1A5B625C8();
      swift_release();
      return 0;
    }
    sub_1A5B58B00((uint64_t)v31 + 8, (uint64_t)v25);
    sub_1A5B4FBE8((uint64_t)v30, &qword_1ED10FCC8);
    sub_1A5B5ACC8(v25, v26);
    v27 = v24;
    sub_1A5B5ACC8(v26, v28);
    v16 = v27;
    sub_1A5B5ACC8(v28, v29);
    sub_1A5B5ACC8(v29, &v27);
    result = sub_1A5B5AB84(v16, *((uint64_t *)&v16 + 1));
    v17 = result;
    if ((v18 & 1) != 0)
    {
      v8 = (_OWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v8 = v16;
      v9 = (_OWORD *)(v2[7] + 32 * v17);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
      result = (unint64_t)sub_1A5B5ACC8(&v27, v9);
      goto LABEL_8;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v16;
    result = (unint64_t)sub_1A5B5ACC8(&v27, (_OWORD *)(v2[7] + 32 * result));
    v19 = v2[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_36;
    v2[2] = v21;
LABEL_8:
    v7 = v12;
    v5 = v10;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1A5B88708()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A5BC9CF8();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v8 = v0;
  if (v7 == 1)
  {
    sub_1A5B4FBE8((uint64_t)v3, &qword_1ED1112B0);
    v9 = 0;
    v10 = 0;
  }
  else
  {
    sub_1A5BC9CEC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_1A5BC9CBC();
      v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      v9 = 0;
      v10 = 0;
    }
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = &unk_1EE7FA800;
  *(_QWORD *)(v12 + 24) = v6;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1A5B888D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_1A5B888F0()
{
  uint64_t v0;
  char v1;
  char v2;
  char v3;
  char v4;
  _QWORD *v5;

  sub_1A5B77204(0);
  if ((v1 & 1) != 0
    || (sub_1A5B77204(1), (v2 & 1) != 0)
    || (sub_1A5B77204(2), (v3 & 1) != 0)
    || (sub_1A5B77204(3), (v4 & 1) != 0))
  {
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 24) = v5;
    *v5 = v0;
    v5[1] = sub_1A5B88990;
    v5[20] = *(_QWORD *)(v0 + 16);
  }
  else
  {
    *(_BYTE *)(v0 + 40) = 0;
  }
  return swift_task_switch();
}

uint64_t sub_1A5B88990(char a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = *v1;
  v4 = *v1;
  swift_task_dealloc();
  if ((a1 & 1) != 0)
  {
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v3 + 32) = v5;
    *v5 = v4;
    v5[1] = sub_1A5B88A24;
    v5[10] = *(_QWORD *)(v3 + 16);
  }
  else
  {
    *(_BYTE *)(v3 + 40) = 0;
  }
  return swift_task_switch();
}

uint64_t sub_1A5B88A24(char a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_task_dealloc();
  *(_BYTE *)(v3 + 40) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B88A7C()
{
  uint64_t v0;

  if (qword_1EE7FA210 != -1)
    swift_once();
  sub_1A5B8A40C();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5B88ADC()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1A5B88B08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1A5B65618;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_1A5B88B68()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 160) = v0;
  return swift_task_switch();
}

uint64_t sub_1A5B88B80()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v9;

  *(_QWORD *)(v0 + 40) = &type metadata for FeatureFlag;
  v1 = sub_1A5B5D68C();
  *(_BYTE *)(v0 + 16) = 1;
  *(_QWORD *)(v0 + 48) = v1;
  v2 = sub_1A5BC9A10();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  if ((v2 & 1) != 0
    && (*(_QWORD *)(v0 + 40) = &type metadata for FeatureFlag,
        *(_QWORD *)(v0 + 48) = v1,
        *(_BYTE *)(v0 + 16) = 2,
        v3 = sub_1A5BC9A10(),
        __swift_destroy_boxed_opaque_existential_1(v0 + 16),
        (v3 & 1) != 0))
  {
    if (qword_1ED10FB68 != -1)
      swift_once();
    v4 = sub_1A5BC9A64();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED10FBE8);
    v5 = sub_1A5BC9A4C();
    v6 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1A5B4D000, v5, v6, "Both runtime feature flags for rsvp are enabled, overriding setup bag values", v7, 2u);
      MEMORY[0x1A85B2FC0](v7, -1, -1);
    }

    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 160);
    *(_WORD *)(v0 + 184) = 0;
    *(_QWORD *)(v0 + 168) = *(_QWORD *)(v9 + OBJC_IVAR___DaemonController_accountStore);
    return swift_task_switch();
  }
}

uint64_t sub_1A5B88CFC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *(_QWORD *)(v0 + 168);
  swift_beginAccess();
  v2 = *(void **)(v1 + 112);
  *(_QWORD *)(v0 + 176) = v2;
  v3 = v2;
  return swift_task_switch();
}

uint64_t sub_1A5B88D54()
{
  uint64_t v0;
  char v1;
  _BYTE *v2;
  uint64_t v3;
  int v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;

  *(_BYTE *)(v0 + 184) = sub_1A5B88174(0x62616E4570767372, 0xEB0000000064656CLL) & 1;
  v1 = sub_1A5B88174(0xD000000000000018, 0x80000001A5BD12C0);

  *(_BYTE *)(v0 + 185) = v1 & 1;
  v2 = (_BYTE *)(v0 + 184);
  if (qword_1ED10FB68 != -1)
    swift_once();
  v3 = sub_1A5BC9A64();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED10FBE8);
  v4 = *v2;
  v5 = sub_1A5BC9A4C();
  v6 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    *(_DWORD *)v7 = 67240448;
    *(_DWORD *)(v0 + 16) = v4;
    sub_1A5BC9E18();
    *(_WORD *)(v7 + 8) = 1026;
    swift_beginAccess();
    *(_DWORD *)(v0 + 80) = *(unsigned __int8 *)(v0 + 185);
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v5, v6, "setup bag results: rsvpEnabled=%{BOOL,public}d, rsvpDataDetectorsEnabled=%{BOOL,public}d", (uint8_t *)v7, 0xEu);
    MEMORY[0x1A85B2FC0](v7, -1, -1);
  }

  swift_beginAccess();
  if (*v2 != 1)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  swift_beginAccess();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 185));
}

uint64_t sub_1A5B8910C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = v0;
  return swift_task_switch();
}

uint64_t sub_1A5B89124()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;

  *(_QWORD *)(v0 + 40) = &type metadata for FeatureFlag;
  v1 = sub_1A5B5D68C();
  *(_BYTE *)(v0 + 16) = 3;
  *(_QWORD *)(v0 + 48) = v1;
  v2 = sub_1A5BC9A10();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  if ((v2 & 1) != 0)
  {
    if (qword_1ED10FB68 != -1)
      swift_once();
    v3 = sub_1A5BC9A64();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED10FBE8);
    v4 = sub_1A5BC9A4C();
    v5 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1A5B4D000, v4, v5, "Runtime flag rsvpSubscriber is enabled, overriding feature check as true", v6, 2u);
      MEMORY[0x1A85B2FC0](v6, -1, -1);
    }

    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
  else
  {
    if (qword_1ED111118 != -1)
      swift_once();
    v8 = *(_QWORD *)(v0 + 80);
    *(_QWORD *)(v0 + 88) = qword_1ED1110C8;
    *(_QWORD *)(v0 + 96) = *(_QWORD *)(v8 + OBJC_IVAR___DaemonController_accountStore);
    return swift_task_switch();
  }
}

uint64_t sub_1A5B892A8()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0[12];
  swift_beginAccess();
  v2 = *(id *)(v1 + 112);
  v3 = objc_msgSend(v2, sel_aa_primaryAppleAccount);
  v4 = v3;
  if (!v3)
  {

LABEL_6:
    v7 = 0;
    goto LABEL_7;
  }
  v5 = objc_msgSend(v3, sel_aa_altDSID);

  if (!v5)
  {

    v4 = 0;
    goto LABEL_6;
  }
  v4 = (void *)sub_1A5BC9B60();
  v7 = v6;

LABEL_7:
  v0[13] = v4;
  v0[14] = v7;
  return swift_task_switch();
}

uint64_t sub_1A5B8937C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  char *v7;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v1 = FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(0xD000000000000016, 0x80000001A5BD1280, *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), 0, 0);
  swift_bridgeObjectRelease();
  if (!v1)
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  if (qword_1ED10FB68 != -1)
    swift_once();
  v2 = sub_1A5BC9A64();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED10FBE8);
  v3 = (char *)v1;
  v4 = sub_1A5BC9A4C();
  v5 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v13 = v12;
    *(_DWORD *)v6 = 136315394;
    *(_QWORD *)(v0 + 56) = sub_1A5B58A30(0xD000000000000018, 0x80000001A5BD12A0, &v13);
    sub_1A5BC9E18();
    *(_WORD *)(v6 + 12) = 2112;
    *(_QWORD *)(v0 + 56) = v3;
    v7 = v3;
    sub_1A5BC9E18();
    *v11 = v1;

    _os_log_impl(&dword_1A5B4D000, v4, v5, "%s feature: %@", (uint8_t *)v6, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v12, -1, -1);
    MEMORY[0x1A85B2FC0](v6, -1, -1);
  }
  else
  {

  }
  v9 = &v3[OBJC_IVAR___CloudFeature_canUse];
  swift_beginAccess();
  v10 = *v9;

  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v10);
}

uint64_t _sSo17CSFFeatureManagerC25CloudSubscriptionFeaturesE23urlForRSVPDataDetectors7context10Foundation3URLVSDySSypG_tFZ_0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, unint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  int64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  int v44;
  void (*v45)(char *, uint64_t, uint64_t, uint64_t);
  char *v46;
  unint64_t v47;
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint8_t *v61;
  char *v62;
  char *v63;
  uint64_t result;
  uint64_t v65;
  char *v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  void (*v73)(char *, unint64_t);
  uint8_t *v74;
  void (*v75)(char *, unint64_t);
  uint64_t v76;
  int64_t v77;
  char *v78;
  unsigned int (*v79)(char *, uint64_t, uint64_t);
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  void (*v88)(char *, uint64_t, unint64_t);
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  int64_t v95;
  _OWORD *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  _BYTE v102[32];
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  _OWORD v106[2];
  uint64_t v107;
  uint64_t v108;
  char v109;

  v82 = a2;
  v85 = sub_1A5BC97C4();
  v89 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85);
  v80 = (char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA820);
  MEMORY[0x1E0C80A78](v4);
  v91 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_1A5BC977C();
  v6 = *(_QWORD *)(v100 - 8);
  MEMORY[0x1E0C80A78](v100);
  v101 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1A5BC9974();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v94 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FB70);
  v15 = MEMORY[0x1E0C80A78](v14);
  v84 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v76 - v17;
  v19 = sub_1A5BC9878();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  v83 = (char *)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v78 = (char *)&v76 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v81 = (char *)&v76 - v26;
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v76 - v27;
  sub_1A5BC986C();
  v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v79(v18, 1, v19) == 1)
  {
    sub_1A5B4FBE8((uint64_t)v18, (uint64_t *)&unk_1ED10FB70);
    result = sub_1A5BC9F50();
    __break(1u);
    return result;
  }
  v86 = (char *)v20;
  v29 = *(void (**)(char *, uint64_t, unint64_t))(v20 + 32);
  v90 = v28;
  v87 = v19;
  v88 = v29;
  v29(v28, (uint64_t)v18, v19);
  v30 = *(_QWORD *)(a1 + 64);
  v92 = a1 + 64;
  v31 = 1 << *(_BYTE *)(a1 + 32);
  v32 = -1;
  if (v31 < 64)
    v32 = ~(-1 << v31);
  v33 = v32 & v30;
  v96 = v106;
  v99 = &v109;
  v95 = (unint64_t)(v31 + 63) >> 6;
  v77 = v95 - 1;
  v97 = a1;
  swift_bridgeObjectRetain();
  v34 = 0;
  v35 = MEMORY[0x1E0DEE9D8];
  v98 = MEMORY[0x1E0DEE9B8] + 8;
  v93 = 0x80000001A5BD1360;
  if (!v33)
    goto LABEL_7;
LABEL_5:
  v36 = __clz(__rbit64(v33));
  v33 &= v33 - 1;
  v37 = v36 | (v34 << 6);
LABEL_6:
  v38 = *(_QWORD *)(v97 + 56);
  v39 = (_QWORD *)(*(_QWORD *)(v97 + 48) + 16 * v37);
  v40 = v39[1];
  *(_QWORD *)&v105 = *v39;
  *((_QWORD *)&v105 + 1) = v40;
  sub_1A5B58B00(v38 + 32 * v37, (uint64_t)v96);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1A5B8A3C4((uint64_t)&v105, (uint64_t)&v107);
    if (!v108)
    {
      swift_release();
      v12 = (uint64_t)v91;
      v34 = (int64_t)v90;
      sub_1A5BC97AC();
      v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
      v49 = v85;
      if (v48(v12, 1, v85))
        swift_bridgeObjectRelease();
      else
        sub_1A5BC97A0();
      v11 = (uint64_t)v83;
      v50 = v48(v12, 1, v49);
      v20 = v87;
      v10 = v86;
      v51 = (uint64_t)v84;
      if (v50)
      {
        (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v86 + 7))(v84, 1, 1, v87);
      }
      else
      {
        v52 = v89;
        v53 = v80;
        (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v80, v12, v49);
        sub_1A5BC97B8();
        (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v49);
        if (v79((char *)v51, 1, v20) != 1)
        {
          v33 = (unint64_t)v81;
          v88(v81, v51, v20);
          if (qword_1ED1112D8 != -1)
            goto LABEL_57;
          goto LABEL_50;
        }
      }
      sub_1A5B4FBE8(v51, (uint64_t *)&unk_1ED10FB70);
      if (qword_1ED1112D8 != -1)
        goto LABEL_55;
      goto LABEL_44;
    }
    v103 = v107;
    v104 = v108;
    sub_1A5B5ACC8(v99, &v105);
    sub_1A5B58B00((uint64_t)&v105, (uint64_t)v102);
    v44 = swift_dynamicCast();
    v45 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    if (v44)
    {
      v45(v10, 0, 1, v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
      {
        v46 = v94;
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v94, v10, v11);
        sub_1A5BC9BE4();
        sub_1A5BC98B4();
        sub_1A5BC9D28();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v46, v11);
        goto LABEL_31;
      }
    }
    else
    {
      v45(v10, 1, 1, v11);
    }
    sub_1A5B4FBE8((uint64_t)v10, &qword_1ED111280);
    sub_1A5B58B00((uint64_t)&v105, (uint64_t)v102);
    sub_1A5BC9B9C();
LABEL_31:
    sub_1A5BC9770();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v35 = sub_1A5B64BC0(0, *(_QWORD *)(v35 + 16) + 1, 1, v35);
    v20 = *(_QWORD *)(v35 + 16);
    v47 = *(_QWORD *)(v35 + 24);
    if (v20 >= v47 >> 1)
      v35 = sub_1A5B64BC0(v47 > 1, v20 + 1, 1, v35);
    *(_QWORD *)(v35 + 16) = v20 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v35+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v20, v101, v100);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v105);
    if (v33)
      goto LABEL_5;
LABEL_7:
    v41 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v41 < v95)
    {
      v42 = *(_QWORD *)(v92 + 8 * v41);
      if (v42)
        goto LABEL_10;
      v43 = v34 + 2;
      ++v34;
      if (v41 + 1 < v95)
      {
        v42 = *(_QWORD *)(v92 + 8 * v43);
        if (v42)
          goto LABEL_13;
        v34 = v41 + 1;
        if (v41 + 2 < v95)
        {
          v42 = *(_QWORD *)(v92 + 8 * (v41 + 2));
          if (v42)
          {
            v41 += 2;
            goto LABEL_10;
          }
          v43 = v41 + 3;
          v34 = v41 + 2;
          if (v41 + 3 < v95)
          {
            v42 = *(_QWORD *)(v92 + 8 * v43);
            if (v42)
            {
LABEL_13:
              v41 = v43;
LABEL_10:
              v33 = (v42 - 1) & v42;
              v37 = __clz(__rbit64(v42)) + (v41 << 6);
              v34 = v41;
              goto LABEL_6;
            }
            while (1)
            {
              v41 = v43 + 1;
              if (__OFADD__(v43, 1))
                break;
              if (v41 >= v95)
              {
                v34 = v77;
                goto LABEL_24;
              }
              v42 = *(_QWORD *)(v92 + 8 * v41);
              ++v43;
              if (v42)
                goto LABEL_10;
            }
            __break(1u);
LABEL_57:
            swift_once();
LABEL_50:
            v65 = sub_1A5BC9A64();
            __swift_project_value_buffer(v65, (uint64_t)qword_1ED1112C0);
            v66 = v78;
            (*((void (**)(char *, unint64_t, unint64_t))v10 + 2))(v78, v33, v20);
            v67 = sub_1A5BC9A4C();
            v68 = sub_1A5BC9DA0();
            if (os_log_type_enabled(v67, v68))
            {
              v69 = (uint8_t *)swift_slowAlloc();
              v70 = swift_slowAlloc();
              v107 = v70;
              *(_DWORD *)v69 = 136315138;
              v71 = sub_1A5BC983C();
              *(_QWORD *)&v105 = sub_1A5B58A30(v71, v72, &v107);
              sub_1A5BC9E18();
              swift_bridgeObjectRelease();
              v73 = (void (*)(char *, unint64_t))*((_QWORD *)v10 + 1);
              v73(v66, v20);
              _os_log_impl(&dword_1A5B4D000, v67, v68, "Returning URL %s", v69, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1A85B2FC0](v70, -1, -1);
              v74 = v69;
              v12 = (uint64_t)v91;
              MEMORY[0x1A85B2FC0](v74, -1, -1);

              v73(v90, v20);
            }
            else
            {

              v75 = (void (*)(char *, unint64_t))*((_QWORD *)v10 + 1);
              v75(v66, v20);
              v75((char *)v34, v20);
            }
            v63 = v82;
            v62 = v81;
            goto LABEL_48;
          }
        }
      }
    }
LABEL_24:
    v33 = 0;
    memset(v106, 0, sizeof(v106));
    v105 = 0u;
  }
  __break(1u);
LABEL_55:
  swift_once();
LABEL_44:
  v54 = sub_1A5BC9A64();
  __swift_project_value_buffer(v54, (uint64_t)qword_1ED1112C0);
  (*((void (**)(uint64_t, int64_t, unint64_t))v10 + 2))(v11, v34, v20);
  v55 = sub_1A5BC9A4C();
  v56 = sub_1A5BC9D88();
  if (os_log_type_enabled(v55, v56))
  {
    v57 = (uint8_t *)swift_slowAlloc();
    v58 = swift_slowAlloc();
    v107 = v58;
    *(_DWORD *)v57 = 136315138;
    v59 = sub_1A5BC983C();
    *(_QWORD *)&v105 = sub_1A5B58A30(v59, v60, &v107);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    (*((void (**)(uint64_t, unint64_t))v10 + 1))(v11, v20);
    _os_log_impl(&dword_1A5B4D000, v55, v56, "Unable to append context to URL, returning base URL %s", v57, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v58, -1, -1);
    v61 = v57;
    v12 = (uint64_t)v91;
    MEMORY[0x1A85B2FC0](v61, -1, -1);

    v62 = v90;
  }
  else
  {
    (*((void (**)(uint64_t, unint64_t))v10 + 1))(v11, v20);

    v62 = (char *)v34;
  }
  v63 = v82;
LABEL_48:
  v88(v63, (uint64_t)v62, v20);
  return sub_1A5B4FBE8(v12, &qword_1EE7FA820);
}

uint64_t sub_1A5B8A244(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1A5B8A2A8;
  return v6(a1);
}

uint64_t sub_1A5B8A2A8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A5B8A2F4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5B8A318(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1A5B65618;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE7FA808 + dword_1EE7FA808))(a1, v4);
}

uint64_t sub_1A5B8A388(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1A5B8A3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA828);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1A5B8A40C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;
  void *v7;
  void *v8;

  v1 = v0;
  if (qword_1ED111140 != -1)
    swift_once();
  v2 = sub_1A5BC9A64();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED1110D0);
  v3 = sub_1A5BC9A4C();
  v4 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 67240192;
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v3, v4, "Updating DataDetectors cache with new shouldShowRSVPDataDetectors value %{BOOL,public}d", v5, 8u);
    MEMORY[0x1A85B2FC0](v5, -1, -1);
  }

  v6 = *(void **)(v1 + 16);
  v7 = (void *)sub_1A5BC9CB0();
  v8 = (void *)sub_1A5BC9B3C();
  objc_msgSend(v6, sel_setObject_forKey_inDomain_, v7, v8, *MEMORY[0x1E0CB2B58]);

}

_QWORD *sub_1A5B8A564()
{
  id v0;
  void *v1;
  id v2;
  _QWORD *result;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = (void *)sub_1A5BC9B3C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  type metadata accessor for DataDetectorsCache();
  result = (_QWORD *)swift_allocObject();
  result[3] = 0xD00000000000001BLL;
  result[4] = 0x80000001A5BD1410;
  if (v2)
  {
    result[2] = v2;
    qword_1EE8000F0 = (uint64_t)result;
  }
  else
  {
    result = (_QWORD *)sub_1A5BC9F50();
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5B8A658()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t result;
  unsigned __int8 v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_1A5BC9B3C();
  v3 = objc_msgSend(v1, sel_objectForKey_inDomain_, v2, *MEMORY[0x1E0CB2B58]);

  if (v3)
  {
    sub_1A5BC9E3C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1A5B8A778((uint64_t)v6, (uint64_t)v7);
  if (v8)
  {
    result = swift_dynamicCast();
    if ((_DWORD)result)
      return v5;
  }
  else
  {
    sub_1A5B8A7C0((uint64_t)v7);
    return 0;
  }
  return result;
}

uint64_t sub_1A5B8A72C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DataDetectorsCache()
{
  return objc_opt_self();
}

uint64_t sub_1A5B8A778(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED110560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5B8A7C0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED110560);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for GeoClassificationCache()
{
  return &type metadata for GeoClassificationCache;
}

void *sub_1A5B8A810(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, void *a7)
{
  void *v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint8_t *v27;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32[2];
  uint64_t v33;
  uint64_t v34[6];

  v34[0] = a5;
  v34[1] = a6;
  v34[2] = a3;
  v34[3] = a4;
  v34[4] = a1;
  v34[5] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = (void *)sub_1A5BBD8C4(v34, a7);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ED110E18 != -1)
      swift_once();
    v18 = sub_1A5BC9A64();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED110E28);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v19 = sub_1A5BC9A4C();
    v20 = sub_1A5BC9DA0();
    if (!os_log_type_enabled(v19, v20))
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      return 0;
    }
    v21 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v32[0] = v22;
    *(_DWORD *)v21 = 136446466;
    swift_bridgeObjectRetain();
    v33 = sub_1A5B58A30(a1, a2, v32);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 12) = 2082;
    swift_bridgeObjectRetain();
    v33 = sub_1A5B58A30(a3, a4, v32);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v19, v20, "no geoclassification cache for featureID: %{public}s, and bundle ID: %{public}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v22, -1, -1);
    MEMORY[0x1A85B2FC0](v21, -1, -1);
LABEL_15:

    return 0;
  }
  v17 = v14;
  if ((sub_1A5BBCB7C(a5, a6, v14, v15, v16) & 1) == 0)
  {
    v31 = a1;
    if (qword_1ED110E18 != -1)
      swift_once();
    v23 = sub_1A5BC9A64();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED110E28);
    swift_bridgeObjectRetain_n();
    v24 = sub_1A5BC9A4C();
    v25 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v24, v25))
    {
      v30 = a7;
      v26 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v32[0] = v29;
      *(_DWORD *)v26 = 136446210;
      swift_bridgeObjectRetain();
      v33 = sub_1A5B58A30(v31, a2, v32);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A5B4D000, v24, v25, "Invalid geo cache for featureID: %{public}s. Deleting cache entry", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v29, -1, -1);
      v27 = v26;
      a7 = v30;
      MEMORY[0x1A85B2FC0](v27, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v32[0] = a5;
    v32[1] = a6;
    swift_bridgeObjectRetain();
    sub_1A5BC9BE4();
    swift_bridgeObjectRetain();
    sub_1A5BC9BE4();
    swift_bridgeObjectRelease();
    sub_1A5BC9BE4();
    swift_bridgeObjectRetain();
    sub_1A5BC9BE4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v19 = sub_1A5BC9B3C();
    swift_bridgeObjectRelease();
    objc_msgSend(a7, sel_removeObjectForKey_, v19);
    swift_bridgeObjectRelease();

    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17;
}

void sub_1A5B8AD20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  NSObject *oslog;
  _QWORD aBlock[6];

  if (a2)
  {
    if (qword_1ED111140 != -1)
      swift_once();
    v2 = sub_1A5BC9A64();
    __swift_project_value_buffer(v2, (uint64_t)qword_1ED1110D0);
    v3 = sub_1A5BC9A4C();
    v4 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1A5B4D000, v3, v4, "Refreshing geoclassification cache", v5, 2u);
      MEMORY[0x1A85B2FC0](v5, -1, -1);
    }

    v6 = (void *)objc_opt_self();
    v7 = (void *)sub_1A5BC9B3C();
    v8 = (void *)sub_1A5BC9B3C();
    v9 = (void *)sub_1A5BC9B3C();
    aBlock[4] = nullsub_1;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1A5BA0DD4;
    aBlock[3] = &block_descriptor_3;
    v10 = _Block_copy(aBlock);
    objc_msgSend(v6, sel_requestGeoClassificationForFeatureID_bundleID_altDSID_ignoreCache_completion_, v7, v8, v9, 1, v10);
    _Block_release(v10);

  }
  else
  {
    if (qword_1ED111140 != -1)
      swift_once();
    v11 = sub_1A5BC9A64();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED1110D0);
    oslog = sub_1A5BC9A4C();
    v12 = sub_1A5BC9D88();
    if (os_log_type_enabled(oslog, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_1A5B4D000, oslog, v12, "altDSID is nil, unable to refresh geoclassification", v13, 2u);
      MEMORY[0x1A85B2FC0](v13, -1, -1);
    }

  }
}

void sub_1A5B8AF88(uint64_t a1, uint64_t a2, unint64_t a3, NSObject *a4)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  NSObject *osloga;
  uint64_t v36[6];

  if (!a3)
  {
    if (qword_1ED110E18 != -1)
      goto LABEL_40;
    goto LABEL_34;
  }
  v29 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v30 = (unint64_t)(v6 + 63) >> 6;
  v9 = swift_bridgeObjectRetain();
  v10 = 0;
  v31 = v9;
  while (1)
  {
    if (v8)
    {
      v32 = (v8 - 1) & v8;
      v33 = v10;
      v11 = __clz(__rbit64(v8)) | (v10 << 6);
    }
    else
    {
      v12 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_38;
      if (v12 >= v30)
      {
LABEL_32:
        swift_release();
        return;
      }
      v13 = *(_QWORD *)(v29 + 8 * v12);
      v14 = v10 + 1;
      if (!v13)
      {
        v14 = v10 + 2;
        if (v10 + 2 >= v30)
          goto LABEL_32;
        v13 = *(_QWORD *)(v29 + 8 * v14);
        if (!v13)
        {
          v14 = v10 + 3;
          if (v10 + 3 >= v30)
            goto LABEL_32;
          v13 = *(_QWORD *)(v29 + 8 * v14);
          if (!v13)
          {
            v15 = v10 + 4;
            if (v10 + 4 >= v30)
              goto LABEL_32;
            v13 = *(_QWORD *)(v29 + 8 * v15);
            if (!v13)
            {
              while (1)
              {
                v14 = v15 + 1;
                if (__OFADD__(v15, 1))
                  goto LABEL_39;
                if (v14 >= v30)
                  goto LABEL_32;
                v13 = *(_QWORD *)(v29 + 8 * v14);
                ++v15;
                if (v13)
                  goto LABEL_21;
              }
            }
            v14 = v10 + 4;
          }
        }
      }
LABEL_21:
      v32 = (v13 - 1) & v13;
      v33 = v14;
      v11 = __clz(__rbit64(v13)) + (v14 << 6);
    }
    v16 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * v11);
    v17 = *v16;
    v18 = v16[1];
    v19 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v11);
    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v20 = sub_1A5BC9F5C();
      if (!v20)
        goto LABEL_5;
    }
    else
    {
      v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v20)
        goto LABEL_5;
    }
    if (v20 < 1)
      break;
    v21 = 0;
    do
    {
      if ((v19 & 0xC000000000000001) != 0)
        v22 = (char *)MEMORY[0x1A85B2594](v21, v19);
      else
        v22 = (char *)*(id *)(v19 + 8 * v21 + 32);
      v23 = v22;
      ++v21;
      v24 = *(_QWORD *)&v22[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey];
      v25 = *(_QWORD *)&v22[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey + 8];
      v36[0] = a2;
      v36[1] = a3;
      v36[2] = v17;
      v36[3] = v18;
      v36[4] = v24;
      v36[5] = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A5BBCE08(v36, a4, v23, a2, a3);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    while (v20 != v21);
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v31;
    v8 = v32;
    v10 = v33;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  swift_once();
LABEL_34:
  v26 = sub_1A5BC9A64();
  __swift_project_value_buffer(v26, (uint64_t)qword_1ED110E28);
  osloga = sub_1A5BC9A4C();
  v27 = sub_1A5BC9D88();
  if (os_log_type_enabled(osloga, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v28 = 0;
    _os_log_impl(&dword_1A5B4D000, osloga, v27, "failed to update geoclassification cache, missing altDSID", v28, 2u);
    MEMORY[0x1A85B2FC0](v28, -1, -1);
  }

}

void sub_1A5B8B300()
{
  sub_1A5B8B33C("Sending GM Opt-In change notification.", (CFNotificationName *)&kCloudSubscriptionOptInChangeNotificationName);
}

void sub_1A5B8B314()
{
  sub_1A5B8B33C("Sending feature change notification to clients", (CFNotificationName *)kCloudSubscriptionFeatureChangedNotificationName);
}

void sub_1A5B8B328()
{
  sub_1A5B8B33C("Sending ticket change notification to clients.", (CFNotificationName *)kCloudSubscriptionTicketChangedNotificationName);
}

void sub_1A5B8B33C(const char *a1, CFNotificationName *a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  __CFNotificationCenter *v8;

  if (qword_1ED1110F0 != -1)
    swift_once();
  v4 = sub_1A5BC9A64();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED111100);
  v5 = sub_1A5BC9A4C();
  v6 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1A5B4D000, v5, v6, a1, v7, 2u);
    MEMORY[0x1A85B2FC0](v7, -1, -1);
  }

  v8 = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterPostNotification(v8, *a2, 0, 0, 0);

}

uint64_t sub_1A5B8B444(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, int a5)
{
  return sub_1A5B8B47C(a1, a2, a3, a4, a5, &qword_1ED1104F8, (void (*)(_QWORD))type metadata accessor for Ticket, &qword_1EE7FA830);
}

uint64_t sub_1A5B8B460(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, int a5)
{
  return sub_1A5B8B47C(a1, a2, a3, a4, a5, &qword_1ED111208, (void (*)(_QWORD))type metadata accessor for CloudFeature, (uint64_t *)&unk_1ED1107C8);
}

uint64_t sub_1A5B8B47C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, int a5, uint64_t *a6, void (*a7)(_QWORD), uint64_t *a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char v32;
  _QWORD *v33;
  uint64_t v34;
  char v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  os_log_type_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BOOL8 v52;
  char *v53;
  char *v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint8_t *v61;
  uint8_t *v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint8_t *v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  unint64_t v72;
  char *v74;
  char *v75;
  void (*v76)(_QWORD);
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v76 = a7;
  v77 = a8;
  v10 = v8;
  v80 = a5;
  v81 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  ((void (*)(void))MEMORY[0x1E0C80A78])();
  v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1A5BC9974();
  v78 = *(_QWORD *)(v16 - 8);
  v79 = v16;
  v17 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v75 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v74 = (char *)&v74 - v19;
  v20 = (int *)__swift_instantiateConcreteTypeFromMangledName(a6);
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v21);
  v26 = (char *)&v74 - v25;
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v74 - v27;
  sub_1A5B56960(v10, (uint64_t)&v74 - v27, a6);
  if (!a2)
    goto LABEL_9;
  v29 = &v28[v20[13]];
  v30 = *((_QWORD *)v29 + 1);
  if (!v30)
  {
    sub_1A5B4FBE8((uint64_t)v28, a6);
LABEL_27:
    if (qword_1ED110E18 != -1)
      swift_once();
    v46 = sub_1A5BC9A64();
    __swift_project_value_buffer(v46, (uint64_t)qword_1ED110E28);
    v39 = sub_1A5BC9A4C();
    v47 = sub_1A5BC9DA0();
    if (!os_log_type_enabled(v39, v47))
      goto LABEL_60;
    v41 = swift_slowAlloc();
    v42 = swift_slowAlloc();
    v83 = v42;
    *(_DWORD *)v41 = 136315138;
    v76(0);
    __swift_instantiateConcreteTypeFromMangledName(v77);
    v48 = sub_1A5BCA1D8();
    v82 = sub_1A5B58A30(v48, v49, &v83);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A5B4D000, v39, v47, "Invalid cache box with type %s ... session id changed", (uint8_t *)v41, 0xCu);
LABEL_59:
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v42, -1, -1);
    MEMORY[0x1A85B2FC0](v41, -1, -1);
LABEL_60:

    return 0;
  }
  if (*(_QWORD *)v29 == a1 && v30 == a2)
  {
LABEL_9:
    sub_1A5B4FBE8((uint64_t)v28, a6);
  }
  else
  {
    v32 = sub_1A5BCA0B8();
    sub_1A5B4FBE8((uint64_t)v28, a6);
    if ((v32 & 1) == 0)
      goto LABEL_27;
  }
  v33 = (_QWORD *)(v10 + v20[14]);
  v34 = v33[1];
  if (!a4)
  {
    if (!v34)
    {
LABEL_31:
      sub_1A5B56960(v10, (uint64_t)v26, a6);
LABEL_32:
      sub_1A5B4FBE8((uint64_t)v26, a6);
      goto LABEL_33;
    }
LABEL_19:
    sub_1A5B56960(v10, (uint64_t)v26, a6);
    goto LABEL_20;
  }
  if (!v34)
    goto LABEL_19;
  if (*v33 == v81 && v34 == a4)
    goto LABEL_31;
  v36 = sub_1A5BCA0B8();
  sub_1A5B56960(v10, (uint64_t)v26, a6);
  if ((v36 & 1) != 0)
    goto LABEL_32;
LABEL_20:
  v37 = *(_QWORD *)&v26[v20[14] + 8];
  sub_1A5B4FBE8((uint64_t)v26, a6);
  if (v37)
  {
    if (qword_1ED110E18 != -1)
      swift_once();
    v38 = sub_1A5BC9A64();
    __swift_project_value_buffer(v38, (uint64_t)qword_1ED110E28);
    sub_1A5B56960(v10, (uint64_t)v23, a6);
    swift_bridgeObjectRetain_n();
    v39 = sub_1A5BC9A4C();
    v40 = sub_1A5BC9DA0();
    if (!os_log_type_enabled(v39, v40))
    {
      sub_1A5B4FBE8((uint64_t)v23, a6);

      swift_bridgeObjectRelease_n();
      return 0;
    }
    v41 = swift_slowAlloc();
    v42 = swift_slowAlloc();
    v83 = v42;
    *(_DWORD *)v41 = 136315394;
    v43 = (uint64_t *)&v23[v20[14]];
    if (v43[1])
    {
      v44 = *v43;
      v45 = v43[1];
    }
    else
    {
      v45 = 0xE300000000000000;
      v44 = 7104878;
    }
    swift_bridgeObjectRetain();
    v82 = sub_1A5B58A30(v44, v45, &v83);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    sub_1A5B4FBE8((uint64_t)v23, a6);
    *(_WORD *)(v41 + 12) = 2080;
    if (a4)
      v71 = v81;
    else
      v71 = 7104878;
    if (a4)
      v72 = a4;
    else
      v72 = 0xE300000000000000;
    swift_bridgeObjectRetain();
    v82 = sub_1A5B58A30(v71, v72, &v83);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A5B4D000, v39, v40, "invalid ... altDSID changed. Cache altDSID: %s, currentAltDSID: %s", (uint8_t *)v41, 0x16u);
    goto LABEL_59;
  }
LABEL_33:
  if ((v80 & 1) != 0)
    return 1;
  sub_1A5B56960(v10 + v20[11], (uint64_t)v15, &qword_1ED111280);
  v51 = v78;
  v50 = v79;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v15, 1, v79) == 1)
  {
    sub_1A5B4FBE8((uint64_t)v15, &qword_1ED111280);
    return 1;
  }
  v53 = v74;
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v74, v15, v50);
  v54 = v75;
  sub_1A5BC9968();
  sub_1A5BC98D8();
  if (v55 <= 0.0)
  {
    v64 = *(_QWORD *)&v55;
    if (qword_1ED110E18 != -1)
      swift_once();
    v65 = sub_1A5BC9A64();
    __swift_project_value_buffer(v65, (uint64_t)qword_1ED110E28);
    v66 = sub_1A5BC9A4C();
    v67 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v68 = 134349056;
      v83 = v64;
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v66, v67, "invalid ... time until expiry is %{public}f", v68, 0xCu);
      v69 = v68;
      v54 = v75;
      MEMORY[0x1A85B2FC0](v69, -1, -1);
    }

    v70 = *(void (**)(char *, uint64_t))(v51 + 8);
    v70(v54, v50);
    v70(v53, v50);
    return 0;
  }
  sub_1A5BC98D8();
  v52 = v56 > 0.0;
  if (v56 <= 0.0)
  {
    v57 = *(_QWORD *)&v56;
    if (qword_1ED110E18 != -1)
      swift_once();
    v58 = sub_1A5BC9A64();
    __swift_project_value_buffer(v58, (uint64_t)qword_1ED110E28);
    v59 = sub_1A5BC9A4C();
    v60 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v59, v60))
    {
      v61 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v61 = 134349056;
      v83 = v57;
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v59, v60, "invalid ... time since fetch is %{public}f", v61, 0xCu);
      v62 = v61;
      v54 = v75;
      MEMORY[0x1A85B2FC0](v62, -1, -1);
    }

  }
  v63 = *(void (**)(char *, uint64_t))(v51 + 8);
  v63(v54, v50);
  v63(v53, v50);
  return v52;
}

uint64_t sub_1A5B8BCD8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t i;
  char *v10;
  char *v11;

  sub_1A5BC9818();
  swift_allocObject();
  v6 = sub_1A5BC980C();
  if (!(a1 >> 62))
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_3;
LABEL_10:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_1A5BC9F5C();
  v7 = result;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if (v7 >= 1)
  {
    for (i = 0; i != v7; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v10 = (char *)MEMORY[0x1A85B2594](i, a1);
      else
        v10 = (char *)*(id *)(a1 + 8 * i + 32);
      v11 = v10;
      sub_1A5B8CCA8(v10, v6, a2, a3);

    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_1A5B8BDEC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17[3];
  uint64_t v18;
  uint64_t v19;

  v5 = *(_QWORD *)(v2 + 56);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v5 + 16));
  sub_1A5B56960(v2 + 16, (uint64_t)v17, qword_1ED111180);
  v6 = v18;
  if (v18)
  {
    v7 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    v8 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v7 + 48))(0xD000000000000029, 0x80000001A5BD14D0, v6, v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
    if (v8)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1A5B8E430(v8, v2, a1, a2);
      swift_release();
      swift_bridgeObjectRelease();
      if (qword_1ED110E18 != -1)
        swift_once();
      v9 = sub_1A5BC9A64();
      __swift_project_value_buffer(v9, (uint64_t)qword_1ED110E28);
      swift_bridgeObjectRetain_n();
      v10 = sub_1A5BC9A4C();
      v11 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = swift_slowAlloc();
        v13 = swift_slowAlloc();
        v17[0] = v13;
        *(_DWORD *)v12 = 134218242;
        sub_1A5BC9E18();
        swift_bridgeObjectRelease();
        *(_WORD *)(v12 + 12) = 2080;
        swift_bridgeObjectRetain();
        v14 = sub_1A5BC9B00();
        v16 = v15;
        swift_bridgeObjectRelease();
        sub_1A5B58A30(v14, v16, v17);
        sub_1A5BC9E18();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A5B4D000, v10, v11, "Expired cache for %ld features: %s", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v13, -1, -1);
        MEMORY[0x1A85B2FC0](v12, -1, -1);
        swift_bridgeObjectRelease();

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
    sub_1A5B4FBE8((uint64_t)v17, qword_1ED111180);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  }
  if (qword_1ED110790 != -1)
    swift_once();
  sub_1A5B9FCE4();
}

uint64_t static FeatureCache.shared.getter()
{
  if (qword_1ED111118 != -1)
    swift_once();
  return swift_retain();
}

uint64_t FeatureCache.persistentDomain.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  sub_1A5B56960(v0 + 16, (uint64_t)v4, qword_1ED111180);
  v1 = v5;
  if (v5)
  {
    v2 = v6;
    __swift_project_boxed_opaque_existential_1(v4, v5);
    v1 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v2 + 48))(0xD000000000000029, 0x80000001A5BD14D0, v1, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  else
  {
    sub_1A5B4FBE8((uint64_t)v4, qword_1ED111180);
  }
  return v1;
}

uint64_t FeatureCache.allFeatures(forDSID:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_1A5B56960(v2 + 16, (uint64_t)v10, qword_1ED111180);
  v5 = v11;
  if (!v11)
  {
    sub_1A5B4FBE8((uint64_t)v10, qword_1ED111180);
    return MEMORY[0x1E0DEE9D8];
  }
  v6 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  v7 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v6 + 48))(0xD000000000000029, 0x80000001A5BD14D0, v5, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  if (!v7)
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v8 = sub_1A5B8DF80(v7, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1A5B8C2D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  sub_1A5B56960(v3 + 16, (uint64_t)v16, qword_1ED111180);
  v8 = v17;
  if (!v17)
  {
    sub_1A5B4FBE8((uint64_t)v16, qword_1ED111180);
    goto LABEL_6;
  }
  v9 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 24))(a1, a2, v8, v9);
  v12 = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  if (v12 >> 60 == 15)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111208);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a3, 1, 1, v15);
  }
  sub_1A5BC97F4();
  swift_allocObject();
  sub_1A5BC97E8();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111208);
  sub_1A5B8E724((unint64_t *)&qword_1ED1108A0, (uint64_t)&unk_1A5BCCD08);
  sub_1A5BC97DC();
  if (v4)
  {
    swift_release();
    return sub_1A5B5D9C0(v10, v12);
  }
  else
  {
    sub_1A5B5D9C0(v10, v12);
    swift_release();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 0, 1, v13);
  }
}

void sub_1A5B8C474(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD *, _QWORD *, uint64_t, uint64_t, uint64_t);
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  _QWORD *v34;
  id v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  id v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  char *v44;
  id v45;
  _QWORD *v46;
  uint64_t v47;
  unint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  _QWORD v65[4];
  uint64_t v66[3];
  uint64_t v67;
  uint64_t v68;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A5BC9974();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v52 - v10;
  v12 = *a1;
  v13 = (uint64_t)*a1 + OBJC_IVAR___CloudFeature_featureID;
  v14 = *(_QWORD *)(v13 + 8);
  v63 = *(_QWORD **)v13;
  v64 = v14;
  swift_bridgeObjectRetain();
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111208);
  sub_1A5B8E724(&qword_1ED110010, (uint64_t)&unk_1A5BCCCE0);
  v16 = sub_1A5BC9800();
  v18 = v17;
  v55 = v15;
  v56 = v4;
  v57 = v12;
  v53 = v9;
  v58 = v5;
  v59 = v6;
  v54 = v11;
  v61 = v16;
  v19 = v62;
  v20 = *(_QWORD *)(v62 + 56);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v20 + 16));
  sub_1A5B56960(v19 + 16, (uint64_t)v66, qword_1ED111180);
  v21 = v67;
  v60 = v18;
  if (v67)
  {
    v22 = v68;
    __swift_project_boxed_opaque_existential_1(v66, v67);
    v65[3] = MEMORY[0x1E0CB0338];
    v65[0] = v61;
    v65[1] = v18;
    v23 = *(void (**)(_QWORD *, _QWORD *, uint64_t, uint64_t, uint64_t))(v22 + 16);
    sub_1A5B66D78(v61, v18);
    v23(v65, v63, v64, v21, v22);
    sub_1A5B4FBE8((uint64_t)v65, &qword_1ED110560);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
  }
  else
  {
    sub_1A5B4FBE8((uint64_t)v66, qword_1ED111180);
  }
  v24 = v57;
  v25 = v55;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));
  swift_bridgeObjectRelease();
  v26 = (uint64_t)v56;
  sub_1A5B56960((uint64_t)a1 + *(int *)(v25 + 44), (uint64_t)v56, &qword_1ED111280);
  v28 = v58;
  v27 = v59;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v26, 1, v58) == 1)
  {
    sub_1A5B4FBE8(v26, &qword_1ED111280);
    if (qword_1ED110E18 != -1)
      swift_once();
    v29 = sub_1A5BC9A64();
    __swift_project_value_buffer(v29, (uint64_t)qword_1ED110E28);
    v30 = v24;
    v31 = sub_1A5BC9A4C();
    v32 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v33 = 138543362;
      v66[0] = (uint64_t)v30;
      v35 = v30;
      sub_1A5BC9E18();
      *v34 = v30;

      _os_log_impl(&dword_1A5B4D000, v31, v32, "updating cache for feature: %{public}@, no cache-ttl.", v33, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v34, -1, -1);
      MEMORY[0x1A85B2FC0](v33, -1, -1);
      sub_1A5B5D9D4(v61, v60);

    }
    else
    {
      sub_1A5B5D9D4(v61, v60);

    }
  }
  else
  {
    v36 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v54, v26, v28);
    v37 = v60;
    if (qword_1ED110E18 != -1)
      swift_once();
    v38 = sub_1A5BC9A64();
    __swift_project_value_buffer(v38, (uint64_t)qword_1ED110E28);
    v39 = v53;
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v53, v36, v28);
    v40 = v24;
    v41 = sub_1A5BC9A4C();
    v42 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc();
      v63 = (_QWORD *)swift_slowAlloc();
      v64 = swift_slowAlloc();
      v65[0] = v40;
      v66[0] = v64;
      *(_DWORD *)v43 = 138543618;
      v44 = v39;
      v45 = v40;
      sub_1A5BC9E18();
      v46 = v63;
      *v63 = v40;

      *(_WORD *)(v43 + 12) = 2082;
      sub_1A5B5D980((unint64_t *)&qword_1ED10FB90, MEMORY[0x1E0CB08F0]);
      v47 = sub_1A5BCA094();
      v65[0] = sub_1A5B58A30(v47, v48, v66);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease();
      v49 = *(void (**)(char *, uint64_t))(v59 + 8);
      v49(v44, v28);
      _os_log_impl(&dword_1A5B4D000, v41, v42, "updating cache for feature: %{public}@, cache-ttl:%{public}s", (uint8_t *)v43, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v46, -1, -1);
      v50 = v64;
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v50, -1, -1);
      MEMORY[0x1A85B2FC0](v43, -1, -1);
      sub_1A5B5D9D4(v61, v60);

      v49(v54, v28);
    }
    else
    {
      sub_1A5B5D9D4(v61, v37);

      v51 = *(void (**)(char *, uint64_t))(v27 + 8);
      v51(v39, v28);

      v51(v36, v28);
    }
  }
}

void sub_1A5B8CCA8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int *v8;
  uint64_t v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  _QWORD *v31;
  _QWORD v32[3];
  uint64_t v33;
  char *v34;

  v33 = a3;
  v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED111208);
  MEMORY[0x1E0C80A78](v8);
  v10 = (void **)((char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A5BC9974();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1A5BC9BFC() & 1) != 0)
  {
    if (qword_1ED110790 != -1)
      swift_once();
    sub_1A5B9EEB8(a1);
  }
  else
  {
    v32[1] = a2;
    v32[2] = v4;
    v18 = (uint64_t)&a1[OBJC_IVAR___CloudFeature_ttl];
    swift_beginAccess();
    sub_1A5B56960(v18, (uint64_t)v13, &qword_1ED111280);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {
      sub_1A5B4FBE8((uint64_t)v13, &qword_1ED111280);
      if (qword_1ED110E18 != -1)
        swift_once();
      v19 = sub_1A5BC9A64();
      __swift_project_value_buffer(v19, (uint64_t)qword_1ED110E28);
      v20 = a1;
      v21 = sub_1A5BC9A4C();
      v22 = sub_1A5BC9D88();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        v24 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v23 = 138543362;
        v34 = v20;
        v25 = v20;
        sub_1A5BC9E18();
        *v24 = v20;

        _os_log_impl(&dword_1A5B4D000, v21, v22, "failed to cache feature %{public}@, missing TTL", v23, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v24, -1, -1);
        MEMORY[0x1A85B2FC0](v23, -1, -1);

      }
      else
      {

      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
      v26 = (char *)v10 + v8[11];
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v26, v17, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v26, 0, 1, v14);
      v27 = a1;
      sub_1A5BC9968();
      if (qword_1ED110578 != -1)
        swift_once();
      v28 = qword_1ED110568;
      v29 = unk_1ED110570;
      *v10 = v27;
      v30 = (uint64_t *)((char *)v10 + v8[13]);
      *v30 = v28;
      v30[1] = v29;
      v31 = (void **)((char *)v10 + v8[14]);
      *v31 = v33;
      v31[1] = a4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1A5B8C474(v10);
      sub_1A5B4FBE8((uint64_t)v10, &qword_1ED111208);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
  }
}

uint64_t sub_1A5B8D0BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;
  int64_t v18;
  _OWORD v19[3];
  __int128 v20;
  _OWORD v21[2];
  int64_t v22;

  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v22 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (v8)
  {
    v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v12 = v11 | (v10 << 6);
LABEL_5:
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v15 = *v13;
    v14 = v13[1];
    sub_1A5B58B00(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v21);
    *(_QWORD *)&v20 = v15;
    *((_QWORD *)&v20 + 1) = v14;
    v19[0] = v20;
    v19[1] = v21[0];
    v19[2] = v21[1];
    swift_bridgeObjectRetain();
    sub_1A5B8D890((uint64_t *)v19, a2);
    result = sub_1A5B4FBE8((uint64_t)v19, &qword_1ED10FC38);
    if (v2)
      return swift_release();
  }
  if (__OFADD__(v10++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v10 >= v22)
    return swift_release();
  v17 = *(_QWORD *)(v5 + 8 * v10);
  if (v17)
  {
LABEL_19:
    v8 = (v17 - 1) & v17;
    v12 = __clz(__rbit64(v17)) + (v10 << 6);
    goto LABEL_5;
  }
  v18 = v10 + 1;
  if (v10 + 1 >= v22)
    return swift_release();
  v17 = *(_QWORD *)(v5 + 8 * v18);
  if (v17)
    goto LABEL_18;
  v18 = v10 + 2;
  if (v10 + 2 >= v22)
    return swift_release();
  v17 = *(_QWORD *)(v5 + 8 * v18);
  if (v17)
    goto LABEL_18;
  v18 = v10 + 3;
  if (v10 + 3 >= v22)
    return swift_release();
  v17 = *(_QWORD *)(v5 + 8 * v18);
  if (v17)
    goto LABEL_18;
  v18 = v10 + 4;
  if (v10 + 4 >= v22)
    return swift_release();
  v17 = *(_QWORD *)(v5 + 8 * v18);
  if (v17)
  {
LABEL_18:
    v10 = v18;
    goto LABEL_19;
  }
  while (1)
  {
    v10 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v10 >= v22)
      return swift_release();
    v17 = *(_QWORD *)(v5 + 8 * v10);
    ++v18;
    if (v17)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

void sub_1A5B8D294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  void *v8;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + 56);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  sub_1A5B56960(v0 + 16, (uint64_t)v9, qword_1ED111180);
  if (v10)
  {
    v2 = v11;
    __swift_project_boxed_opaque_existential_1(v9, v10);
    sub_1A5B5AA50(MEMORY[0x1E0DEE9D8]);
    (*(void (**)(void))(v2 + 40))();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    sub_1A5B4FBE8((uint64_t)v9, qword_1ED111180);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  if (qword_1ED110E18 != -1)
    swift_once();
  v3 = sub_1A5BC9A64();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED110E28);
  v4 = sub_1A5BC9A4C();
  v5 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1A5B4D000, v4, v5, "Reset feature cache.", v6, 2u);
    MEMORY[0x1A85B2FC0](v6, -1, -1);
  }

  if (qword_1ED110790 != -1)
    swift_once();
  v7 = *(void **)(qword_1ED112DB0 + 16);
  v8 = (void *)sub_1A5BC9B3C();
  objc_msgSend(v7, sel_removeObjectForKey_, v8);

}

uint64_t sub_1A5B8D47C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  id v24;
  void *v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;

  v37 = (char *)a1;
  v2 = sub_1A5BC9974();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v36 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v34 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v9 = MEMORY[0x1E0C80A78](v8);
  v35 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v34 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v34 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v34 - v17;
  v19 = *(_QWORD *)(v1 + 56);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v19 + 16));
  sub_1A5B56960(v1 + 16, (uint64_t)v38, qword_1ED111180);
  v20 = v39;
  if (v39)
  {
    v21 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    v22 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v21 + 48))(0xD000000000000029, 0x80000001A5BD14D0, v20, v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    if (v22)
      goto LABEL_6;
  }
  else
  {
    sub_1A5B4FBE8((uint64_t)v38, qword_1ED111180);
  }
  v22 = sub_1A5B5AA50(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRelease();
LABEL_6:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 16));
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  if (*(_QWORD *)(v22 + 16))
  {
    v23(v18, 1, 1, v2);
    sub_1A5B8D0BC(v22, (uint64_t)v18);
    swift_bridgeObjectRelease();
    if (qword_1ED110790 != -1)
      swift_once();
    v24 = sub_1A5B9E95C(0);
    if (v24)
    {
      v25 = v24;
      v26 = (uint64_t)v24 + OBJC_IVAR___CloudFeature_ttl;
      swift_beginAccess();
      sub_1A5B56960(v26, (uint64_t)v16, &qword_1ED111280);
      v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
      if (v27(v16, 1, v2) == 1)
      {

        sub_1A5B4FBE8((uint64_t)v16, &qword_1ED111280);
      }
      else
      {
        v29 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
        v29(v7, v16, v2);
        sub_1A5B56960((uint64_t)v18, (uint64_t)v13, &qword_1ED111280);
        if (v27(v13, 1, v2) == 1)
        {

          sub_1A5B4FBE8((uint64_t)v13, &qword_1ED111280);
          sub_1A5B4FBE8((uint64_t)v18, &qword_1ED111280);
          v29(v18, v7, v2);
          v23(v18, 0, 1, v2);
        }
        else
        {
          v30 = v36;
          v29(v36, v13, v2);
          sub_1A5B5D980(&qword_1ED10FB88, MEMORY[0x1E0CB08B0]);
          if ((sub_1A5BC9B18() & 1) != 0)
            v31 = v7;
          else
            v31 = v30;
          v32 = (uint64_t)v35;
          (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v35, v31, v2);

          v33 = *(void (**)(char *, uint64_t))(v3 + 8);
          v33(v30, v2);
          v33(v7, v2);
          v23((char *)v32, 0, 1, v2);
          sub_1A5B4FC24(v32, (uint64_t)v18);
        }
      }
    }
    return sub_1A5B78E14((uint64_t)v18, (uint64_t)v37, &qword_1ED111280);
  }
  else
  {
    v23(v37, 1, 1, v2);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A5B8D890(uint64_t *a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v63 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v5 = MEMORY[0x1E0C80A78](v4);
  v53 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v55 = (uint64_t)&v48 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v48 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v48 - v12;
  v14 = sub_1A5BC9974();
  v56 = *(_QWORD *)(v14 - 8);
  v57 = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v52 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v54 = (char *)&v48 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111210);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111208);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a1[1];
  v60 = *a1;
  v61 = v25;
  sub_1A5B58B00((uint64_t)(a1 + 2), (uint64_t)&v62);
  result = swift_dynamicCast();
  if ((result & 1) == 0)
    return result;
  v51 = v11;
  v27 = v58;
  v28 = v59;
  sub_1A5BC97F4();
  swift_allocObject();
  sub_1A5BC97E8();
  sub_1A5B8E724((unint64_t *)&qword_1ED1108A0, (uint64_t)&unk_1A5BCCD08);
  sub_1A5BC97DC();
  if (v2)
  {

    swift_release();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
    sub_1A5B5D9D4(v27, v28);
    return sub_1A5B4FBE8((uint64_t)v20, (uint64_t *)&unk_1ED111210);
  }
  v49 = v28;
  v50 = v27;
  swift_release();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v21);
  sub_1A5B78E14((uint64_t)v20, (uint64_t)v24, &qword_1ED111208);
  v29 = &v24[*(int *)(v21 + 52)];
  v31 = *(_QWORD *)v29;
  v30 = *((_QWORD *)v29 + 1);
  v32 = qword_1ED110578;
  swift_bridgeObjectRetain();
  if (v32 == -1)
  {
    v33 = v50;
    if (!v30)
      goto LABEL_19;
  }
  else
  {
    swift_once();
    v33 = v50;
    if (!v30)
      goto LABEL_19;
  }
  if (v31 == qword_1ED110568 && v30 == unk_1ED110570)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v34 = sub_1A5BCA0B8();
  swift_bridgeObjectRelease();
  if ((v34 & 1) == 0)
  {
LABEL_19:
    sub_1A5B4FBE8((uint64_t)v24, &qword_1ED111208);
    return sub_1A5B5D9D4(v33, v49);
  }
LABEL_10:
  v35 = v63;
  sub_1A5B56960(v63, (uint64_t)v13, &qword_1ED111280);
  v36 = v57;
  v37 = v56;
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  if (v38((uint64_t)v13, 1, v57) == 1)
  {
    sub_1A5B5D9D4(v33, v49);
    sub_1A5B4FBE8((uint64_t)v13, &qword_1ED111280);
    v39 = (uint64_t)v51;
    sub_1A5B56960((uint64_t)&v24[*(int *)(v21 + 44)], (uint64_t)v51, &qword_1ED111280);
    sub_1A5B4FBE8((uint64_t)v24, &qword_1ED111208);
    return sub_1A5B4FC24(v39, v35);
  }
  else
  {
    v40 = v37;
    v41 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
    v42 = v54;
    v41(v54, v13, v36);
    v43 = v55;
    sub_1A5B56960((uint64_t)&v24[*(int *)(v21 + 44)], v55, &qword_1ED111280);
    if (v38(v43, 1, v36) == 1)
    {
      sub_1A5B5D9D4(v50, v49);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v36);
      sub_1A5B4FBE8((uint64_t)v24, &qword_1ED111208);
      return sub_1A5B4FBE8(v43, &qword_1ED111280);
    }
    else
    {
      v44 = v52;
      v41(v52, (char *)v43, v36);
      sub_1A5B5D980(&qword_1ED10FB88, MEMORY[0x1E0CB08B0]);
      if ((sub_1A5BC9B18() & 1) != 0)
        v45 = v42;
      else
        v45 = v44;
      v46 = (uint64_t)v53;
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v53, v45, v36);
      sub_1A5B5D9D4(v50, v49);
      v47 = *(void (**)(char *, uint64_t))(v40 + 8);
      v47(v44, v36);
      v47(v42, v36);
      sub_1A5B4FBE8((uint64_t)v24, &qword_1ED111208);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v46, 0, 1, v36);
      return sub_1A5B4FC24(v46, v63);
    }
  }
}

uint64_t FeatureCache.deinit()
{
  uint64_t v0;

  sub_1A5B4FBE8(v0 + 16, qword_1ED111180);
  swift_release();
  return v0;
}

uint64_t FeatureCache.__deallocating_deinit()
{
  uint64_t v0;

  sub_1A5B4FBE8(v0 + 16, qword_1ED111180);
  swift_release();
  return swift_deallocClassInstance();
}

void sub_1A5B8DE54(uint64_t a1)
{
  sub_1A5BA9C04(a1);
}

void sub_1A5B8DE74()
{
  void **v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *v0;
  v2 = (void *)sub_1A5BC9ADC();
  v3 = (id)sub_1A5BC9B3C();
  objc_msgSend(v1, sel_setPersistentDomain_forName_, v2, v3);

}

uint64_t sub_1A5B8DEFC()
{
  void **v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;

  v1 = *v0;
  v2 = (void *)sub_1A5BC9B3C();
  v3 = objc_msgSend(v1, sel_persistentDomainForName_, v2);

  if (!v3)
    return 0;
  v4 = sub_1A5BC9AE8();

  return v4;
}

uint64_t sub_1A5B8DF80(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;

  v23 = MEMORY[0x1E0DEE9D8];
  v22 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v11 >= v9)
      goto LABEL_29;
    v15 = *(_QWORD *)(v22 + 8 * v11);
    if (!v15)
      break;
LABEL_18:
    v8 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_19:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    v20 = qword_1ED111118;
    swift_bridgeObjectRetain();
    if (v20 != -1)
      swift_once();
    v21 = FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(v18, v19, a2, a3, 0, 0);
    result = swift_bridgeObjectRelease();
    if (v21)
    {
      MEMORY[0x1A85B230C](result);
      if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1A5BC9C8C();
      sub_1A5BC9CA4();
      result = sub_1A5BC9C80();
    }
  }
  v16 = v11 + 1;
  if (v11 + 1 >= v9)
    goto LABEL_29;
  v15 = *(_QWORD *)(v22 + 8 * v16);
  if (v15)
    goto LABEL_17;
  v16 = v11 + 2;
  if (v11 + 2 >= v9)
    goto LABEL_29;
  v15 = *(_QWORD *)(v22 + 8 * v16);
  if (v15)
    goto LABEL_17;
  v16 = v11 + 3;
  if (v11 + 3 >= v9)
    goto LABEL_29;
  v15 = *(_QWORD *)(v22 + 8 * v16);
  if (v15)
    goto LABEL_17;
  v16 = v11 + 4;
  if (v11 + 4 >= v9)
  {
LABEL_29:
    swift_release();
    return v23;
  }
  v15 = *(_QWORD *)(v22 + 8 * v16);
  if (v15)
  {
LABEL_17:
    v11 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v9)
      goto LABEL_29;
    v15 = *(_QWORD *)(v22 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_18;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t method lookup function for FeatureCache()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1A5B8E1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1A5B8E1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_1A5B8E1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_1A5B8E1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t sub_1A5B8E1F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

void sub_1A5B8E1FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  id v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a5;
  v11 = sub_1A5BC9974();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v24 - v19;
  if ((sub_1A5BC9BFC() & 1) != 0)
  {
    if (qword_1ED110790 != -1)
      swift_once();
    sub_1A5BA022C(a3, a6 & 1);
  }
  else
  {
    sub_1A5BC9968();
    sub_1A5BC98E4();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
    sub_1A5B56960((uint64_t)v20, (uint64_t)v18, &qword_1ED111280);
    v21 = objc_allocWithZone((Class)type metadata accessor for CloudFeature());
    swift_bridgeObjectRetain();
    v22 = (char *)sub_1A5B71B2C(a1, a2, 0, 0, 1, 0, 0, (uint64_t)v18);
    sub_1A5B4FBE8((uint64_t)v20, &qword_1ED111280);
    sub_1A5BC9818();
    swift_allocObject();
    v23 = sub_1A5BC980C();
    sub_1A5B8CCA8(v22, v23, a4, v24);

    swift_release();
  }
}

uint64_t sub_1A5B8E430(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v35 = a4;
  v34 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v5);
  v31 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 64);
  v30 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v32 = (unint64_t)(v8 + 63) >> 6;
  v33 = a1;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  if (v10)
    goto LABEL_6;
LABEL_7:
  v22 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    v20 = v35;
    v21 = v34;
    if (v22 < v32)
    {
      v23 = *(_QWORD *)(v30 + 8 * v22);
      ++v12;
      if (v23)
        goto LABEL_22;
      v12 = v22 + 1;
      if (v22 + 1 >= v32)
        return swift_release();
      v23 = *(_QWORD *)(v30 + 8 * v12);
      if (v23)
        goto LABEL_22;
      v12 = v22 + 2;
      if (v22 + 2 >= v32)
        return swift_release();
      v23 = *(_QWORD *)(v30 + 8 * v12);
      if (v23)
        goto LABEL_22;
      v12 = v22 + 3;
      if (v22 + 3 >= v32)
        return swift_release();
      v23 = *(_QWORD *)(v30 + 8 * v12);
      if (v23)
      {
LABEL_22:
        v10 = (v23 - 1) & v23;
        v19 = __clz(__rbit64(v23)) + (v12 << 6);
        while (1)
        {
          v25 = (uint64_t *)(*(_QWORD *)(v33 + 48) + 16 * v19);
          v26 = *v25;
          v27 = v25[1];
          swift_bridgeObjectRetain();
          v28 = (char *)FeatureCache.cachedFeature(identifier:altDSID:allowAnySession:ignoreTTL:)(v26, v27, v21, v20, 0, 0);
          if (v28)
          {
            v13 = v28;
            v14 = (uint64_t)v31;
            sub_1A5BC98C0();
            v15 = sub_1A5BC9974();
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
            v16 = (uint64_t)&v13[OBJC_IVAR___CloudFeature_ttl];
            swift_beginAccess();
            sub_1A5B4FC24(v14, v16);
            swift_endAccess();
            sub_1A5BC9818();
            swift_allocObject();
            v17 = sub_1A5BC980C();
            sub_1A5B8CCA8(v13, v17, v21, v20);
            swift_bridgeObjectRelease();

            result = swift_release();
            if (!v10)
              goto LABEL_7;
          }
          else
          {
            result = swift_bridgeObjectRelease();
            if (!v10)
              goto LABEL_7;
          }
LABEL_6:
          v18 = __clz(__rbit64(v10));
          v10 &= v10 - 1;
          v19 = v18 | (v12 << 6);
          v20 = v35;
          v21 = v34;
        }
      }
      v24 = v22 + 4;
      if (v24 < v32)
      {
        v23 = *(_QWORD *)(v30 + 8 * v24);
        if (v23)
        {
          v12 = v24;
          goto LABEL_22;
        }
        while (1)
        {
          v12 = v24 + 1;
          if (__OFADD__(v24, 1))
            goto LABEL_28;
          if (v12 >= v32)
            return swift_release();
          v23 = *(_QWORD *)(v30 + 8 * v12);
          ++v24;
          if (v23)
            goto LABEL_22;
        }
      }
    }
    return swift_release();
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1A5B8E724(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED111208);
    result = MEMORY[0x1A85B2F18](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static FeaturesLogger.common.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5B8E7A0(&qword_1ED10FDA0, (uint64_t)qword_1ED10FD00, a1);
}

uint64_t static FeaturesLogger.client.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5B8E7A0(&qword_1ED1112D8, (uint64_t)qword_1ED1112C0, a1);
}

uint64_t sub_1A5B8E7A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1A5BC9A64();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t static FeaturesLogger.notifications.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5B8E7A0(&qword_1ED1110F0, (uint64_t)qword_1ED111100, a1);
}

uint64_t sub_1A5B8E824(uint64_t a1)
{
  return sub_1A5B53344(a1, qword_1ED10FBE8);
}

uint64_t static FeaturesLogger.daemonXPC.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5B8E7A0(&qword_1ED10FB68, (uint64_t)qword_1ED10FBE8, a1);
}

uint64_t static FeaturesLogger.daemonController.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5B8E7A0(&qword_1ED111140, (uint64_t)qword_1ED1110D0, a1);
}

uint64_t static FeaturesLogger.daemonCache.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5B8E7A0(&qword_1ED110E18, (uint64_t)qword_1ED110E28, a1);
}

uint64_t sub_1A5B8E89C(uint64_t a1)
{
  return sub_1A5B53344(a1, qword_1ED10FBC0);
}

uint64_t static FeaturesLogger.daemonNetworking.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5B8E7A0(&qword_1ED10FBE0, (uint64_t)qword_1ED10FBC0, a1);
}

uint64_t sub_1A5B8E8DC(uint64_t a1)
{
  return sub_1A5B53344(a1, qword_1ED110408);
}

uint64_t static FeaturesLogger.daemonBGTask.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5B8E7A0(&qword_1ED110428, (uint64_t)qword_1ED110408, a1);
}

uint64_t sub_1A5B8E924(uint64_t a1)
{
  return sub_1A5B53344(a1, qword_1EE7FA838);
}

uint64_t static FeaturesLogger.serverPayload.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5B8E7A0(&qword_1EE7FA220, (uint64_t)qword_1EE7FA838, a1);
}

uint64_t sub_1A5B8E96C(uint64_t a1)
{
  return sub_1A5B53344(a1, qword_1ED10FB98);
}

uint64_t static FeaturesLogger.featureRequest.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5B8E7A0(&qword_1ED10FBB8, (uint64_t)qword_1ED10FB98, a1);
}

uint64_t sub_1A5B8E9B4(uint64_t a1)
{
  return sub_1A5B53344(a1, qword_1ED110750);
}

uint64_t static FeaturesLogger.assets.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5B8E7A0(&qword_1ED110770, (uint64_t)qword_1ED110750, a1);
}

uint64_t sub_1A5B8E9EC(uint64_t a1)
{
  return sub_1A5B53344(a1, qword_1ED110430);
}

uint64_t static FeaturesLogger.cfu.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5B8E7A0(&qword_1ED110448, (uint64_t)qword_1ED110430, a1);
}

uint64_t sub_1A5B8EA20(uint64_t a1)
{
  return sub_1A5B53344(a1, qword_1ED110718);
}

uint64_t static FeaturesLogger.deviceProperties.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5B8E7A0(&qword_1ED110730, (uint64_t)qword_1ED110718, a1);
}

uint64_t sub_1A5B8EA60(uint64_t a1)
{
  return sub_1A5B53344(a1, qword_1ED110450);
}

uint64_t static FeaturesLogger.locale.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5B8E7A0(&qword_1ED110028, (uint64_t)qword_1ED110450, a1);
}

uint64_t sub_1A5B8EA98(uint64_t a1)
{
  return sub_1A5B53344(a1, qword_1ED110738);
}

uint64_t static FeaturesLogger.optIn.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5B8E7A0(&qword_1ED1105C0, (uint64_t)qword_1ED110738, a1);
}

uint64_t sub_1A5B8EAD0(uint64_t a1)
{
  return sub_1A5B53344(a1, qword_1ED110468);
}

uint64_t static FeaturesLogger.migrator.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5B8E7A0(&qword_1ED110038, (uint64_t)qword_1ED110468, a1);
}

ValueMetadata *type metadata accessor for FeaturesLogger()
{
  return &type metadata for FeaturesLogger;
}

uint64_t sub_1A5B8EB1C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  unint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  unsigned __int8 *v26;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  if (*(_QWORD *)(a5 + 16))
  {
    swift_bridgeObjectRetain();
    v10 = sub_1A5B5AB84(a3, a4);
    if ((v11 & 1) != 0)
    {
      v12 = (uint64_t *)(*(_QWORD *)(a5 + 56) + 24 * v10);
      v13 = *v12;
      v14 = v12[1];
      v15 = v12[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v15)
      {
        swift_bridgeObjectRelease();
        v16 = sub_1A5B8EB1C(a1, a2, v14, v15, a5);
        swift_bridgeObjectRelease();
        return v16 & 1;
      }
      if (v13)
      {
        v24 = *(_QWORD *)(v13 + 16);
        if (v24)
        {
          v23 = *(unsigned __int8 *)(v13 + 48);
          v25 = *(_QWORD *)(v13 + 32) == a1 && *(_QWORD *)(v13 + 40) == a2;
          if (v25 || (sub_1A5BCA0B8() & 1) != 0)
          {
LABEL_35:
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (qword_1ED111140 != -1)
              swift_once();
            v33 = sub_1A5BC9A64();
            __swift_project_value_buffer(v33, (uint64_t)qword_1ED1110D0);
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            v34 = sub_1A5BC9A4C();
            v35 = sub_1A5BC9DA0();
            if (os_log_type_enabled(v34, v35))
            {
              v36 = swift_slowAlloc();
              v37 = swift_slowAlloc();
              v38 = v37;
              *(_DWORD *)v36 = 67240450;
              swift_bridgeObjectRelease();
              sub_1A5BC9E18();
              swift_bridgeObjectRelease();
              *(_WORD *)(v36 + 8) = 2082;
              swift_bridgeObjectRetain();
              sub_1A5B58A30(a1, a2, &v38);
              sub_1A5BC9E18();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1A5B4D000, v34, v35, "Returning eligibility status %{BOOL,public}d for feature ID: %{public}s", (uint8_t *)v36, 0x12u);
              swift_arrayDestroy();
              MEMORY[0x1A85B2FC0](v37, -1, -1);
              MEMORY[0x1A85B2FC0](v36, -1, -1);
              swift_bridgeObjectRelease();

            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
            }
            return v23;
          }
          v26 = (unsigned __int8 *)(v13 + 72);
          while (--v24)
          {
            v23 = *v26;
            if (*((_QWORD *)v26 - 2) != a1 || *((_QWORD *)v26 - 1) != a2)
            {
              v26 += 24;
              if ((sub_1A5BCA0B8() & 1) == 0)
                continue;
            }
            goto LABEL_35;
          }
        }
        swift_bridgeObjectRelease();
      }
      if (qword_1ED111140 != -1)
        swift_once();
      v28 = sub_1A5BC9A64();
      __swift_project_value_buffer(v28, (uint64_t)qword_1ED1110D0);
      swift_bridgeObjectRetain_n();
      v29 = sub_1A5BC9A4C();
      v30 = sub_1A5BC9D88();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        v32 = swift_slowAlloc();
        v38 = v32;
        *(_DWORD *)v31 = 136446210;
        swift_bridgeObjectRetain();
        sub_1A5B58A30(a1, a2, &v38);
        sub_1A5BC9E18();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1A5B4D000, v29, v30, "Eligibility section not found for feature ID: %{public}s", v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v32, -1, -1);
        MEMORY[0x1A85B2FC0](v31, -1, -1);

        return 0;
      }

      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
  }
  if (qword_1ED111140 != -1)
    swift_once();
  v18 = sub_1A5BC9A64();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED1110D0);
  swift_bridgeObjectRetain_n();
  v19 = sub_1A5BC9A4C();
  v20 = sub_1A5BC9D88();
  if (!os_log_type_enabled(v19, v20))
  {

LABEL_11:
    swift_bridgeObjectRelease_n();
    return 0;
  }
  v21 = (uint8_t *)swift_slowAlloc();
  v22 = swift_slowAlloc();
  v38 = v22;
  *(_DWORD *)v21 = 136446210;
  swift_bridgeObjectRetain();
  sub_1A5B58A30(a3, a4, &v38);
  sub_1A5BC9E18();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_1A5B4D000, v19, v20, "Eligibility section not found for bundle ID: %{public}s", v21, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1A85B2FC0](v22, -1, -1);
  MEMORY[0x1A85B2FC0](v21, -1, -1);

  return 0;
}

unint64_t sub_1A5B8F0F8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  __int128 *v4;
  __int128 *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  objc_class *v20;
  _BYTE *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  __int128 v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _BYTE *v35;
  uint64_t v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  objc_super v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;

  v5 = v4;
  v10 = sub_1A5BC9974();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v14 = a3 & 0xFFFFFFFFFFFFLL;
  if (!v14)
    goto LABEL_11;
  v15 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v15 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v15)
  {
LABEL_11:
    sub_1A5BC9968();
    v20 = (objc_class *)type metadata accessor for GeoClassificationInfo();
    v21 = objc_allocWithZone(v20);
    v22 = OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_isBeta;
    v21[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_isBeta] = 0;
    v23 = &v21[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey];
    *v23 = 0;
    v23[1] = 0xE000000000000000;
    v24 = &v21[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification];
    *v24 = 0;
    v24[1] = 0xE000000000000000;
    (*(void (**)(_BYTE *, char *, uint64_t))(v11 + 16))(&v21[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_cacheTill], v13, v10);
    v21[v22] = 0;
    v46.receiver = v21;
    v46.super_class = v20;
    a4 = (unint64_t)objc_msgSendSuper2(&v46, sel_init);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return a4;
  }
  v16 = *((_QWORD *)v5 + 4);
  if (!*(_QWORD *)(v16 + 16))
    goto LABEL_13;
  swift_bridgeObjectRetain();
  v17 = sub_1A5B5AB84(a3, a4);
  if ((v18 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    if (qword_1EE7FA220 != -1)
      swift_once();
    v25 = sub_1A5BC9A64();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EE7FA838);
    v26 = *v5;
    v48 = v5[1];
    v49 = v26;
    swift_bridgeObjectRetain();
    sub_1A5B901D0((uint64_t)&v49);
    sub_1A5B901D0((uint64_t)&v48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A5B901D0((uint64_t)&v49);
    sub_1A5B901D0((uint64_t)&v48);
    swift_bridgeObjectRetain();
    v27 = sub_1A5BC9A4C();
    v28 = sub_1A5BC9D88();
    if (!os_log_type_enabled(v27, v28))
    {
      swift_bridgeObjectRelease_n();
      sub_1A5B81B24((uint64_t)&v49);
      sub_1A5B81B24((uint64_t)&v48);
      swift_bridgeObjectRelease();
      sub_1A5B81B24((uint64_t)&v49);
      sub_1A5B81B24((uint64_t)&v48);

      swift_bridgeObjectRelease();
      goto LABEL_19;
    }
    v29 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    v50 = v30;
    *(_DWORD *)v29 = 136315394;
    swift_bridgeObjectRetain();
    v47 = sub_1A5B58A30(a3, a4, &v50);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v29 + 12) = 2080;
    a4 = v29 + 14;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA850);
    v31 = sub_1A5BC9AF4();
    v33 = v32;
    swift_bridgeObjectRelease();
    v47 = sub_1A5B58A30(v31, v33, &v50);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    sub_1A5B81B24((uint64_t)&v49);
    sub_1A5B81B24((uint64_t)&v48);
    swift_bridgeObjectRelease();
    sub_1A5B81B24((uint64_t)&v49);
    sub_1A5B81B24((uint64_t)&v48);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A5B4D000, v27, v28, "Unable to find bundleID %s in appIDs %s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v30, -1, -1);
    v34 = v29;
LABEL_17:
    MEMORY[0x1A85B2FC0](v34, -1, -1);

LABEL_19:
    sub_1A5B584A8();
    swift_allocError();
    *v35 = 2;
    swift_willThrow();
    return a4;
  }
  v19 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  a4 = (unint64_t)sub_1A5B901F8(v19, a1, a2);
  swift_bridgeObjectRelease();
  if (!a4)
  {
    if (qword_1EE7FA220 != -1)
      swift_once();
    v37 = sub_1A5BC9A64();
    __swift_project_value_buffer(v37, (uint64_t)qword_1EE7FA838);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v27 = sub_1A5BC9A4C();
    v38 = sub_1A5BC9D88();
    if (!os_log_type_enabled(v27, v38))
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_19;
    }
    a4 = swift_slowAlloc();
    v39 = swift_slowAlloc();
    v50 = v39;
    *(_DWORD *)a4 = 136315394;
    swift_bridgeObjectRetain();
    v47 = sub_1A5B58A30(a1, a2, &v50);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(a4 + 12) = 2080;
    v40 = type metadata accessor for GeoClassificationInfo();
    v41 = swift_bridgeObjectRetain();
    v42 = MEMORY[0x1A85B2330](v41, v40);
    v44 = v43;
    swift_bridgeObjectRelease();
    v47 = sub_1A5B58A30(v42, v44, &v50);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A5B4D000, v27, v38, "Unable to find featureID %s in bundle %s", (uint8_t *)a4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v39, -1, -1);
    v34 = a4;
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  return a4;
}

uint64_t sub_1A5B8F758(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  int v12;
  char v13;
  char v14;

  v12 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA8F0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5B91B24();
  sub_1A5BCA1B4();
  v14 = 0;
  sub_1A5BCA064();
  if (!v4)
  {
    v13 = 1;
    sub_1A5BCA070();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1A5B8F880(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;

  v12 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA890);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5B912E8();
  sub_1A5BCA1B4();
  v15 = a2;
  v14 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF40);
  sub_1A5B9132C(&qword_1EE7FA898, (uint64_t (*)(void))sub_1A5B9141C, MEMORY[0x1E0DEAF10]);
  sub_1A5BCA058();
  if (!v4)
  {
    v13 = 1;
    sub_1A5BCA040();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1A5B8F9E0()
{
  return 0x7263736275537369;
}

uint64_t sub_1A5B8FA00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7263736275537369 && a2 == 0xEC00000072656269)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A5BCA0B8();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A5B8FAAC()
{
  sub_1A5B913D8();
  return sub_1A5BCA1C0();
}

uint64_t sub_1A5B8FAD4()
{
  sub_1A5B913D8();
  return sub_1A5BCA1CC();
}

uint64_t sub_1A5B8FAFC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t result;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FFE0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5B913D8();
  sub_1A5BCA19C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = sub_1A5BCA004();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *a2 = v9 & 1;
  return result;
}

uint64_t sub_1A5B8FC10(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA888);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5B913D8();
  sub_1A5BCA1B4();
  sub_1A5BCA070();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1A5B8FD00()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000014;
  else
    return 0x4B65727574616566;
}

uint64_t sub_1A5B8FD44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5B90898(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A5B8FD68(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1A5B8FD74()
{
  sub_1A5B91B24();
  return sub_1A5BCA1C0();
}

uint64_t sub_1A5B8FD9C()
{
  sub_1A5B91B24();
  return sub_1A5BCA1CC();
}

uint64_t sub_1A5B8FDC4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_1A5B90990(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6 & 1;
  }
  return result;
}

uint64_t sub_1A5B8FDF4(_QWORD *a1)
{
  uint64_t v1;

  return sub_1A5B8F758(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

BOOL sub_1A5B8FE10(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1A5B8FE28()
{
  _BYTE *v0;

  if (*v0)
    return 0x754264656B6E696CLL;
  else
    return 0x446E6F6974636573;
}

uint64_t sub_1A5B8FE7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5B90B20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5B8FEA0()
{
  sub_1A5B912E8();
  return sub_1A5BCA1C0();
}

uint64_t sub_1A5B8FEC8()
{
  sub_1A5B912E8();
  return sub_1A5BCA1CC();
}

uint64_t sub_1A5B8FEF0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1A5B90C58(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1A5B8FF1C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1A5B8F880(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1A5B8FF38(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA8A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5B91218();
  sub_1A5BCA1B4();
  v13 = 0;
  sub_1A5BCA064();
  if (!v2)
  {
    v12 = 1;
    sub_1A5BCA064();
    v11 = *(_QWORD *)(v3 + 32);
    v10[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA868);
    sub_1A5B91460();
    sub_1A5BCA07C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A5B90098()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x4379616C70736964;
  if (*v0 != 1)
    v1 = 0x734449707061;
  if (*v0)
    return v1;
  else
    return 0x437972746E756F63;
}

uint64_t sub_1A5B90104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5B90E34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5B90128()
{
  sub_1A5B91218();
  return sub_1A5BCA1C0();
}

uint64_t sub_1A5B90150()
{
  sub_1A5B91218();
  return sub_1A5BCA1CC();
}

double sub_1A5B90178@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1A5B90FBC(a1, (uint64_t *)v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1A5B901BC(_QWORD *a1)
{
  return sub_1A5B8FF38(a1);
}

uint64_t sub_1A5B901D0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1A5B901F8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  BOOL v11;

  if (a1 >> 62)
    goto LABEL_17;
  v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_1A5BC9F5C())
  {
    v7 = 4;
    while (1)
    {
      v8 = (a1 & 0xC000000000000001) != 0
         ? (char *)MEMORY[0x1A85B2594](v7 - 4, a1)
         : (char *)*(id *)(a1 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v11 = *(_QWORD *)&v8[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey] == a2
         && *(_QWORD *)&v8[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey + 8] == a3;
      if (v11 || (sub_1A5BCA0B8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6)
        goto LABEL_18;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t getEnumTagSinglePayload for SubscriberStatus(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriberStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5B90424 + 4 * byte_1A5BCD245[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5B90458 + 4 * byte_1A5BCD240[v4]))();
}

uint64_t sub_1A5B90458(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B90460(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5B90468);
  return result;
}

uint64_t sub_1A5B90474(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5B9047CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5B90480(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B90488(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriberStatus()
{
  return &type metadata for SubscriberStatus;
}

uint64_t destroy for BundleEntry()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s25CloudSubscriptionFeatures11BundleEntryVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for BundleEntry(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

_QWORD *assignWithTake for BundleEntry(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BundleEntry(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BundleEntry(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for BundleEntry()
{
  return &type metadata for BundleEntry;
}

uint64_t destroy for GeoServerResponse()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for GeoServerResponse(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for GeoServerResponse(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for GeoServerResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GeoServerResponse(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GeoServerResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GeoServerResponse()
{
  return &type metadata for GeoServerResponse;
}

uint64_t sub_1A5B90898(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4B65727574616566 && a2 == 0xEA00000000007965;
  if (v2 || (sub_1A5BCA0B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001A5BD15D0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A5BCA0B8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A5B90990(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FFE8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5B91B24();
  sub_1A5BCA19C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v9[15] = 0;
    v7 = sub_1A5BC9FF8();
    v9[14] = 1;
    swift_bridgeObjectRetain();
    sub_1A5BCA004();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1A5B90B20(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x446E6F6974636573 && a2 == 0xEE00736C69617465;
  if (v2 || (sub_1A5BCA0B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x754264656B6E696CLL && a2 == 0xEF79654B656C646ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A5BCA0B8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A5B90C58(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[8];
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FFD8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1A5B912E8();
  sub_1A5BCA19C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF40);
    v9[7] = 0;
    sub_1A5B9132C(&qword_1ED10FF48, (uint64_t (*)(void))sub_1A5B91394, MEMORY[0x1E0DEAF40]);
    sub_1A5BC9FEC();
    v7 = v10;
    v9[6] = 1;
    swift_bridgeObjectRetain();
    sub_1A5BC9FC8();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1A5B90E34(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x437972746E756F63 && a2 == 0xEB0000000065646FLL;
  if (v2 || (sub_1A5BCA0B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4379616C70736964 && a2 == 0xEE007972746E756FLL || (sub_1A5BCA0B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x734449707061 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1A5BCA0B8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1A5B90FBC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA858);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5B91218();
  sub_1A5BCA19C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = 0;
  v9 = sub_1A5BC9FF8();
  v11 = v10;
  v20 = v9;
  v23 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_1A5BC9FF8();
  v14 = v13;
  v18 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA868);
  v22 = 2;
  sub_1A5B9125C();
  v19 = v14;
  swift_bridgeObjectRetain();
  sub_1A5BCA010();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v21;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  v16 = v19;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v20;
  a2[1] = v11;
  a2[2] = v18;
  a2[3] = v16;
  a2[4] = v15;
  return result;
}

unint64_t sub_1A5B91218()
{
  unint64_t result;

  result = qword_1EE7FA860;
  if (!qword_1EE7FA860)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD6EC, &type metadata for GeoServerResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA860);
  }
  return result;
}

unint64_t sub_1A5B9125C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EE7FA870;
  if (!qword_1EE7FA870)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE7FA868);
    v2 = sub_1A5B914EC(&qword_1EE7FA878, &qword_1EE7FA880, (uint64_t)&protocol conformance descriptor for GeoClassificationInfo, MEMORY[0x1E0DEAF40]);
    v3[0] = MEMORY[0x1E0DEA9A0];
    v3[1] = v2;
    result = MEMORY[0x1A85B2F18](MEMORY[0x1E0DEA0D8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EE7FA870);
  }
  return result;
}

unint64_t sub_1A5B912E8()
{
  unint64_t result;

  result = qword_1ED10FDA8;
  if (!qword_1ED10FDA8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD69C, &type metadata for BundleEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED10FDA8);
  }
  return result;
}

uint64_t sub_1A5B9132C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED10FF40);
    v8 = a2();
    result = MEMORY[0x1A85B2F18](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A5B91394()
{
  unint64_t result;

  result = qword_1ED10FEF8;
  if (!qword_1ED10FEF8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD674, &type metadata for EligibilitySection);
    atomic_store(result, (unint64_t *)&qword_1ED10FEF8);
  }
  return result;
}

unint64_t sub_1A5B913D8()
{
  unint64_t result;

  result = qword_1ED10FEB0;
  if (!qword_1ED10FEB0)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD624, &type metadata for SubscriberStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED10FEB0);
  }
  return result;
}

unint64_t sub_1A5B9141C()
{
  unint64_t result;

  result = qword_1EE7FA8A0;
  if (!qword_1EE7FA8A0)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD5FC, &type metadata for EligibilitySection);
    atomic_store(result, (unint64_t *)&qword_1EE7FA8A0);
  }
  return result;
}

unint64_t sub_1A5B91460()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EE7FA8B0;
  if (!qword_1EE7FA8B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE7FA868);
    v2 = sub_1A5B914EC(&qword_1EE7FA8B8, &qword_1EE7FA8C0, (uint64_t)&protocol conformance descriptor for GeoClassificationInfo, MEMORY[0x1E0DEAF10]);
    v3[0] = MEMORY[0x1E0DEA970];
    v3[1] = v2;
    result = MEMORY[0x1A85B2F18](MEMORY[0x1E0DEA0B8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EE7FA8B0);
  }
  return result;
}

uint64_t sub_1A5B914EC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE7FA850);
    v10 = sub_1A5B91568(a2, a3);
    result = MEMORY[0x1A85B2F18](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1A5B91568(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for GeoClassificationInfo();
    result = MEMORY[0x1A85B2F18](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SubscriberStatus.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A5B915E8 + 4 * byte_1A5BCD24A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A5B91608 + 4 * byte_1A5BCD24F[v4]))();
}

_BYTE *sub_1A5B915E8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A5B91608(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5B91610(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5B91618(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5B91620(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5B91628(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SubscriberStatus.CodingKeys()
{
  return &type metadata for SubscriberStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for BundleEntry.CodingKeys()
{
  return &type metadata for BundleEntry.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for GeoServerResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A5B916A8 + 4 * byte_1A5BCD259[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A5B916DC + 4 * byte_1A5BCD254[v4]))();
}

uint64_t sub_1A5B916DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B916E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5B916ECLL);
  return result;
}

uint64_t sub_1A5B916F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5B91700);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A5B91704(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B9170C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GeoServerResponse.CodingKeys()
{
  return &type metadata for GeoServerResponse.CodingKeys;
}

uint64_t sub_1A5B9172C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EligibilitySection(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for EligibilitySection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for EligibilitySection(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EligibilitySection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EligibilitySection()
{
  return &type metadata for EligibilitySection;
}

unint64_t sub_1A5B918A0()
{
  unint64_t result;

  result = qword_1EE7FA8C8;
  if (!qword_1EE7FA8C8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD464, &type metadata for GeoServerResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA8C8);
  }
  return result;
}

unint64_t sub_1A5B918E8()
{
  unint64_t result;

  result = qword_1EE7FA8D0;
  if (!qword_1EE7FA8D0)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD51C, &type metadata for BundleEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA8D0);
  }
  return result;
}

unint64_t sub_1A5B91930()
{
  unint64_t result;

  result = qword_1EE7FA8D8;
  if (!qword_1EE7FA8D8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD5D4, &type metadata for SubscriberStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA8D8);
  }
  return result;
}

unint64_t sub_1A5B91978()
{
  unint64_t result;

  result = qword_1ED10FEC0;
  if (!qword_1ED10FEC0)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD544, &type metadata for SubscriberStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED10FEC0);
  }
  return result;
}

unint64_t sub_1A5B919C0()
{
  unint64_t result;

  result = qword_1ED10FEB8;
  if (!qword_1ED10FEB8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD56C, &type metadata for SubscriberStatus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED10FEB8);
  }
  return result;
}

unint64_t sub_1A5B91A08()
{
  unint64_t result;

  result = qword_1ED10FDB8;
  if (!qword_1ED10FDB8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD48C, &type metadata for BundleEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED10FDB8);
  }
  return result;
}

unint64_t sub_1A5B91A50()
{
  unint64_t result;

  result = qword_1ED10FDB0;
  if (!qword_1ED10FDB0)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD4B4, &type metadata for BundleEntry.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED10FDB0);
  }
  return result;
}

unint64_t sub_1A5B91A98()
{
  unint64_t result;

  result = qword_1EE7FA8E0;
  if (!qword_1EE7FA8E0)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD3D4, &type metadata for GeoServerResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA8E0);
  }
  return result;
}

unint64_t sub_1A5B91AE0()
{
  unint64_t result;

  result = qword_1EE7FA8E8;
  if (!qword_1EE7FA8E8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD3FC, &type metadata for GeoServerResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA8E8);
  }
  return result;
}

unint64_t sub_1A5B91B24()
{
  unint64_t result;

  result = qword_1ED10FEE0;
  if (!qword_1ED10FEE0)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD7F4, &type metadata for EligibilitySection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED10FEE0);
  }
  return result;
}

uint64_t _s25CloudSubscriptionFeatures11BundleEntryV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5B91BB4 + 4 * byte_1A5BCD263[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5B91BE8 + 4 * byte_1A5BCD25E[v4]))();
}

uint64_t sub_1A5B91BE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B91BF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5B91BF8);
  return result;
}

uint64_t sub_1A5B91C04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5B91C0CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5B91C10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B91C18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EligibilitySection.CodingKeys()
{
  return &type metadata for EligibilitySection.CodingKeys;
}

unint64_t sub_1A5B91C38()
{
  unint64_t result;

  result = qword_1EE7FA8F8;
  if (!qword_1EE7FA8F8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD7CC, &type metadata for EligibilitySection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA8F8);
  }
  return result;
}

unint64_t sub_1A5B91C80()
{
  unint64_t result;

  result = qword_1ED10FEF0;
  if (!qword_1ED10FEF0)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD73C, &type metadata for EligibilitySection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED10FEF0);
  }
  return result;
}

unint64_t sub_1A5B91CC8()
{
  unint64_t result;

  result = qword_1ED10FEE8;
  if (!qword_1ED10FEE8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD764, &type metadata for EligibilitySection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED10FEE8);
  }
  return result;
}

uint64_t sub_1A5B91D18()
{
  return swift_deallocClassInstance();
}

BOOL sub_1A5B91D28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BOOL8 v13;
  id v14;
  uint64_t v15;
  uint64_t v17;

  v3 = *(_QWORD *)(a1 - 8);
  v4 = MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A5B5A758(v4);
  v8 = objc_msgSend(v7, sel_domain);

  v9 = sub_1A5BC9B60();
  v11 = v10;

  if (v9 == 0xD00000000000001ELL && v11 == 0x80000001A5BD0660)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, a1);
LABEL_5:
    v14 = sub_1A5B5A758(a1);
    v15 = (uint64_t)objc_msgSend(v14, sel_code);

    v13 = v15 > 499;
    goto LABEL_6;
  }
  v12 = sub_1A5BCA0B8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, a1);
  v13 = 0;
  if ((v12 & 1) != 0)
    goto LABEL_5;
LABEL_6:
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, a1);
  return v13;
}

unint64_t sub_1A5B91EA0()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1A5B91EBC()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1A5B91EC8()
{
  sub_1A5B92454();
  return sub_1A5BCA124();
}

uint64_t sub_1A5B91EF0()
{
  sub_1A5B92454();
  return sub_1A5BCA118();
}

BOOL sub_1A5B91F18(char *a1, char *a2)
{
  return qword_1A5BCDB00[*a1] == qword_1A5BCDB00[*a2];
}

uint64_t sub_1A5B91F3C()
{
  sub_1A5BCA16C();
  sub_1A5BCA178();
  return sub_1A5BCA184();
}

uint64_t sub_1A5B91F88()
{
  return sub_1A5BCA178();
}

uint64_t sub_1A5B91FBC()
{
  sub_1A5BCA16C();
  sub_1A5BCA178();
  return sub_1A5BCA184();
}

uint64_t sub_1A5B92004@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1A5B920E0(*a1);
  *a2 = result;
  return result;
}

void sub_1A5B9202C(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1A5BCDB00[*v1];
}

uint64_t sub_1A5B92044()
{
  char *v0;

  return qword_1A5BCDB00[*v0];
}

void sub_1A5B92058()
{
  char *v0;

  sub_1A5B93E3C(*v0);
}

void sub_1A5B92060(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4F6B908;
}

uint64_t sub_1A5B92070()
{
  sub_1A5B9233C();
  return sub_1A5BCA124();
}

uint64_t sub_1A5B92098()
{
  sub_1A5B9233C();
  sub_1A5B92410();
  sub_1A5B4F9B4();
  return sub_1A5BCA10C();
}

uint64_t sub_1A5B920E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 - 400;
  result = 1;
  switch(v1)
  {
    case 0:
      result = 2;
      break;
    case 1:
      return result;
    case 4:
      result = 3;
      break;
    case 12:
      result = 4;
      break;
    case 29:
      result = 5;
      break;
    default:
      result = 7;
      break;
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerError.OtherServerError()
{
  return &type metadata for ServerError.OtherServerError;
}

uint64_t getEnumTagSinglePayload for ServerError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ServerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1A5B9223C + 4 * byte_1A5BCD8B3[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1A5B92270 + 4 * byte_1A5BCD8AE[v4]))();
}

uint64_t sub_1A5B92270(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B92278(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5B92280);
  return result;
}

uint64_t sub_1A5B9228C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5B92294);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1A5B92298(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B922A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ServerError()
{
  return &type metadata for ServerError;
}

unint64_t sub_1A5B922C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7FA900;
  if (!qword_1EE7FA900)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE7FA908);
    result = MEMORY[0x1A85B2F18](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7FA900);
  }
  return result;
}

unint64_t sub_1A5B92310(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1A5B9233C();
  result = sub_1A5B92380();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A5B9233C()
{
  unint64_t result;

  result = qword_1EE7FA910;
  if (!qword_1EE7FA910)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD940, &type metadata for ServerError);
    atomic_store(result, (unint64_t *)&qword_1EE7FA910);
  }
  return result;
}

unint64_t sub_1A5B92380()
{
  unint64_t result;

  result = qword_1EE7FA918;
  if (!qword_1EE7FA918)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD908, &type metadata for ServerError);
    atomic_store(result, (unint64_t *)&qword_1EE7FA918);
  }
  return result;
}

unint64_t sub_1A5B923C8()
{
  unint64_t result;

  result = qword_1EE7FA920;
  if (!qword_1EE7FA920)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCDA14, &type metadata for ServerError);
    atomic_store(result, (unint64_t *)&qword_1EE7FA920);
  }
  return result;
}

unint64_t sub_1A5B92410()
{
  unint64_t result;

  result = qword_1EE7FA928;
  if (!qword_1EE7FA928)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCD99C, &type metadata for ServerError);
    atomic_store(result, (unint64_t *)&qword_1EE7FA928);
  }
  return result;
}

unint64_t sub_1A5B92454()
{
  unint64_t result;

  result = qword_1EE7FA930;
  if (!qword_1EE7FA930)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCDA3C, &type metadata for ServerError.OtherServerError);
    atomic_store(result, (unint64_t *)&qword_1EE7FA930);
  }
  return result;
}

uint64_t sub_1A5B92498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED110770 != -1)
    swift_once();
  v5 = sub_1A5BC9A64();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED110750);
  v6 = sub_1A5BC9A4C();
  v7 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1A5B4D000, v6, v7, "Evaluating whether assets should be downloaded or released silently.", v8, 2u);
    MEMORY[0x1A85B2FC0](v8, -1, -1);
  }

  v9 = sub_1A5BC9CF8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v1;
  sub_1A5BA0B34((uint64_t)v4, (uint64_t)&unk_1EE7FA960, (uint64_t)v10);
  return swift_release();
}

uint64_t Availability.shouldReleaseModels()(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  *(_BYTE *)(v2 + 32) = *((_BYTE *)v1 + 8);
  return swift_task_switch();
}

uint64_t sub_1A5B92628()
{
  uint64_t v0;
  id v1;
  unsigned int v2;
  _BOOL4 v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  char v7;
  const char *v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint8_t *v14;
  char *v15;

  v1 = objc_msgSend((id)objc_opt_self(), sel_currentAvailability);
  v2 = objc_msgSend(v1, sel_shouldShowGM);

  if (!v2)
  {
    if (qword_1ED110770 != -1)
      swift_once();
    v4 = sub_1A5BC9A64();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED110750);
    v5 = sub_1A5BC9A4C();
    v6 = sub_1A5BC9DA0();
    v7 = 0;
    if (!os_log_type_enabled(v5, v6))
      goto LABEL_29;
    v8 = "Device does not meet hardware/locale/region requirements. Will not start downloads.";
LABEL_28:
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_1A5B4D000, v5, v6, v8, v14, 2u);
    MEMORY[0x1A85B2FC0](v14, -1, -1);
    goto LABEL_29;
  }
  if ((*(_BYTE *)(v0 + 32) & 1) != 0)
  {
    v3 = 1;
    goto LABEL_14;
  }
  if ((*(_QWORD *)(v0 + 24) & 0x110) != 0)
  {
    if (qword_1ED110770 != -1)
      swift_once();
    v9 = sub_1A5BC9A64();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED110750);
    v5 = sub_1A5BC9A4C();
    v6 = sub_1A5BC9DA0();
    v7 = 1;
    if (!os_log_type_enabled(v5, v6))
      goto LABEL_29;
    v8 = "Device meets hardware/locale/region requirements but has not been dequeued (accessNotGranted). Will not start downloads.";
    goto LABEL_28;
  }
  v3 = (*(_QWORD *)(v0 + 24) & 0x80) == 0;
LABEL_14:
  v10 = objc_msgSend((id)objc_opt_self(), sel_hasEngagedWithCFU);
  if (v3)
  {
    if (qword_1ED110770 != -1)
      swift_once();
    v11 = sub_1A5BC9A64();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED110750);
    v5 = sub_1A5BC9A4C();
    v6 = sub_1A5BC9DA0();
    v7 = 3;
    if (os_log_type_enabled(v5, v6))
    {
      v8 = "Device is opted-in (has toggle enabled). Should start downloads.";
      goto LABEL_28;
    }
  }
  else if (v10)
  {
    if (qword_1ED110770 != -1)
      swift_once();
    v12 = sub_1A5BC9A64();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED110750);
    v5 = sub_1A5BC9A4C();
    v6 = sub_1A5BC9DA0();
    v7 = 2;
    if (os_log_type_enabled(v5, v6))
    {
      v8 = "Device is not opted-in (has toggle disabled). Should not start asset download.";
      goto LABEL_28;
    }
  }
  else
  {
    if (qword_1ED110770 != -1)
      swift_once();
    v13 = sub_1A5BC9A64();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED110750);
    v5 = sub_1A5BC9A4C();
    v6 = sub_1A5BC9DA0();
    v7 = 3;
    if (os_log_type_enabled(v5, v6))
    {
      v8 = "Device is not opted in but has not engaged with CFU. Should download assets.";
      goto LABEL_28;
    }
  }
LABEL_29:
  v15 = *(char **)(v0 + 16);

  *v15 = v7;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

CloudSubscriptionFeatures::ReleaseReason_optional __swiftcall ReleaseReason.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CloudSubscriptionFeatures::ReleaseReason_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A5BC9FA4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

unint64_t ReleaseReason.rawValue.getter()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000029;
  if (*v0 == 1)
    v1 = 0xD000000000000034;
  if (*v0)
    return v1;
  else
    return 0xD00000000000003DLL;
}

uint64_t sub_1A5B92A04(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A5B71628(*a1, *a2);
}

uint64_t sub_1A5B92A10()
{
  return sub_1A5BAD894();
}

uint64_t sub_1A5B92A18()
{
  return sub_1A5BADC08();
}

uint64_t sub_1A5B92A20()
{
  return sub_1A5BADC88();
}

CloudSubscriptionFeatures::ReleaseReason_optional sub_1A5B92A28(Swift::String *a1)
{
  return ReleaseReason.init(rawValue:)(*a1);
}

unint64_t sub_1A5B92A34@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result;
  unint64_t v3;

  result = ReleaseReason.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t static Assets.assetsFinishedDownloading.getter()
{
  return sub_1A5B92DBC("Skiping asset download check because of assets bypass", MEMORY[0x1E0D500F0], "Are assets ready? %{BOOL}d") & 1;
}

uint64_t static Assets.userHasEnoughStorage.getter()
{
  return sub_1A5B92DBC("Skiping storage check because of assets bypass", MEMORY[0x1E0D500F8], "Does device have enough storage? %{BOOL}d") & 1;
}

uint64_t sub_1A5B92B38(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  *(_QWORD *)(v1 + 16) = a1;
  v4 = (uint64_t (__cdecl *)())((char *)&dword_1EE7FA948 + dword_1EE7FA948);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1A5B92B94;
  return v4();
}

uint64_t sub_1A5B92B94()
{
  void *v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 32) = v0;
  swift_task_dealloc();
  if (v0)

  return swift_task_switch();
}

uint64_t sub_1A5B92C00()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 16) = *(_QWORD *)(v0 + 32) != 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static Assets.evaluateAssetEligibility()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EE7FA948 + dword_1EE7FA948);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1A5B65618;
  return v3();
}

uint64_t static Assets.startDownload()()
{
  return sub_1A5B931CC("Triggering model download.", MEMORY[0x1E0D500E8], "Triggered model downloaded successfully.", "Unable to request resources with error: %@");
}

uint64_t static Assets.removeModels()()
{
  return sub_1A5B931CC("Triggering model deletion.", MEMORY[0x1E0D500E0], "Triggered model deletion successfully.", "Unable to request model deletion with error: %@");
}

id Assets.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id Assets.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Assets();
  return objc_msgSendSuper2(&v2, sel_init);
}

id Assets.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Assets();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A5B92D98()
{
  return sub_1A5B92DBC("Skiping asset download check because of assets bypass", MEMORY[0x1E0D500F0], "Are assets ready? %{BOOL}d");
}

uint64_t sub_1A5B92DBC(const char *a1, uint64_t (*a2)(void), const char *a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  char v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;

  if ((sub_1A5BBE504() & 1) == 0)
    goto LABEL_10;
  if (qword_1ED110780 != -1)
    swift_once();
  v6 = (void *)qword_1ED110778;
  v7 = (void *)sub_1A5BC9B3C();
  LODWORD(v6) = objc_msgSend(v6, sel_BOOLForKey_, v7);

  if ((_DWORD)v6)
  {
    if (qword_1ED110770 != -1)
      swift_once();
    v8 = sub_1A5BC9A64();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED110750);
    v9 = sub_1A5BC9A4C();
    v10 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1A5B4D000, v9, v10, a1, v11, 2u);
      MEMORY[0x1A85B2FC0](v11, -1, -1);
    }

    v12 = 1;
  }
  else
  {
LABEL_10:
    sub_1A5BC9A34();
    swift_allocObject();
    sub_1A5BC9A28();
    v12 = a2();
    if (qword_1ED110770 != -1)
      swift_once();
    v13 = sub_1A5BC9A64();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED110750);
    v14 = sub_1A5BC9A4C();
    v15 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v16 = 67109120;
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v14, v15, a3, v16, 8u);
      MEMORY[0x1A85B2FC0](v16, -1, -1);
    }

    swift_release();
  }
  return v12 & 1;
}

uint64_t sub_1A5B931CC(const char *a1, void (*a2)(_QWORD), const char *a3, const char *a4)
{
  void *v4;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  void (*v15)(_QWORD);
  uint8_t *v16;
  uint8_t *v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  const char *v30;
  const char *v31;
  uint64_t v32;

  v30 = a3;
  v31 = a4;
  v7 = v4;
  v8 = sub_1A5BC9A40();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED110770 != -1)
    swift_once();
  v12 = sub_1A5BC9A64();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED110750);
  v13 = sub_1A5BC9A4C();
  v14 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = a2;
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1A5B4D000, v13, v14, a1, v16, 2u);
    v17 = v16;
    a2 = v15;
    v7 = v4;
    MEMORY[0x1A85B2FC0](v17, -1, -1);
  }

  sub_1A5BC9A34();
  swift_allocObject();
  sub_1A5BC9A28();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0D501A0], v8);
  a2(v11);
  if (v7)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v18 = v7;
    v19 = v7;
    v20 = sub_1A5BC9A4C();
    v21 = sub_1A5BC9D88();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v22 = 138412290;
      v24 = v7;
      v25 = _swift_stdlib_bridgeErrorToNSError();
      v32 = v25;
      sub_1A5BC9E18();
      *v23 = v25;

      _os_log_impl(&dword_1A5B4D000, v20, v21, v31, v22, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v23, -1, -1);
      MEMORY[0x1A85B2FC0](v22, -1, -1);
    }
    else
    {

    }
    swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v26 = sub_1A5BC9A4C();
    v27 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1A5B4D000, v26, v27, v30, v28, 2u);
      MEMORY[0x1A85B2FC0](v28, -1, -1);
    }

  }
  return swift_release();
}

uint64_t sub_1A5B93530()
{
  return swift_task_switch();
}

uint64_t sub_1A5B93544()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  id v5;
  id v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_1ED110770 != -1)
    swift_once();
  v1 = sub_1A5BC9A64();
  *(_QWORD *)(v0 + 32) = __swift_project_value_buffer(v1, (uint64_t)qword_1ED110750);
  v2 = sub_1A5BC9A4C();
  v3 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1A5B4D000, v2, v3, "Evaluating whether assets should be downloaded or released.", v4, 2u);
    MEMORY[0x1A85B2FC0](v4, -1, -1);
  }

  v5 = objc_msgSend((id)objc_opt_self(), sel_currentAvailability);
  v6 = objc_msgSend(v5, sel_status);
  v7 = (uint64_t)v6;
  if (v6)
  {
    if (v6 == (id)2)
    {
      v7 = (uint64_t)objc_msgSend(v5, sel_unavailabiltyReasons);
      v8 = 0;
      goto LABEL_11;
    }
    if (v6 != (id)1)
    {
      v8 = 0;
      v7 = 512;
      goto LABEL_11;
    }
  }
  v8 = 1;
LABEL_11:

  *(_QWORD *)(v0 + 16) = v7;
  *(_BYTE *)(v0 + 24) = v8;
  v9 = swift_task_alloc();
  *(_QWORD *)(v0 + 40) = v9;
  *(_QWORD *)v9 = v0;
  *(_QWORD *)(v9 + 8) = sub_1A5B936E8;
  v10 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v9 + 16) = v0 + 25;
  *(_QWORD *)(v9 + 24) = v10;
  *(_BYTE *)(v9 + 32) = *(_BYTE *)(v0 + 24);
  return swift_task_switch();
}

uint64_t sub_1A5B936E8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5B9373C()
{
  uint64_t v0;
  int v1;
  NSObject *v2;
  os_log_type_t v3;
  _BOOL4 v4;
  uint8_t *v5;
  const char *v6;
  void (*v7)(_QWORD);
  const char *v8;
  const char *v9;
  uint8_t *v10;

  v1 = *(unsigned __int8 *)(v0 + 25);
  v2 = sub_1A5BC9A4C();
  v3 = sub_1A5BC9DA0();
  v4 = os_log_type_enabled(v2, v3);
  if (v1 == 3)
  {
    if (v4)
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1A5B4D000, v2, v3, "Device is ready for downloads, sending requestResources signal.", v5, 2u);
      MEMORY[0x1A85B2FC0](v5, -1, -1);
    }

    v6 = "Triggering model download.";
    v7 = (void (*)(_QWORD))MEMORY[0x1E0D500E8];
    v8 = "Triggered model downloaded successfully.";
    v9 = "Unable to request resources with error: %@";
  }
  else
  {
    if (v4)
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1A5B4D000, v2, v3, "Device is not ready for downloads, sending releaseResources signal.", v10, 2u);
      MEMORY[0x1A85B2FC0](v10, -1, -1);
    }

    v6 = "Triggering model deletion.";
    v7 = (void (*)(_QWORD))MEMORY[0x1E0D500E0];
    v8 = "Triggered model deletion successfully.";
    v9 = "Unable to request model deletion with error: %@";
  }
  sub_1A5B931CC(v6, v7, v8, v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for Assets()
{
  return objc_opt_self();
}

unint64_t sub_1A5B938BC()
{
  unint64_t result;

  result = qword_1EE7FA950;
  if (!qword_1EE7FA950)
  {
    result = MEMORY[0x1A85B2F18](&protocol conformance descriptor for ReleaseReason, &type metadata for ReleaseReason);
    atomic_store(result, &qword_1EE7FA950);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ReleaseReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A5B9394C + 4 * byte_1A5BCDB45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A5B93980 + 4 * byte_1A5BCDB40[v4]))();
}

uint64_t sub_1A5B93980(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B93988(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5B93990);
  return result;
}

uint64_t sub_1A5B9399C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5B939A4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A5B939A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B939B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReleaseReason()
{
  return &type metadata for ReleaseReason;
}

uint64_t sub_1A5B939CC()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5B939F0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1A5B65618;
  v3[2] = a1;
  v6 = (uint64_t (*)(void))((char *)&dword_1EE7FA948 + dword_1EE7FA948);
  v4 = (_QWORD *)swift_task_alloc();
  v3[3] = v4;
  *v4 = v3;
  v4[1] = sub_1A5B92B94;
  return v6();
}

unint64_t static LocalError.errorDomain.getter()
{
  return 0xD00000000000001DLL;
}

uint64_t sub_1A5B93A94()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A5B93ACC + 4 * byte_1A5BCDC60[*v0]))(0xD00000000000009DLL, 0x80000001A5BD1950);
}

uint64_t sub_1A5B93ACC@<X0>(uint64_t a1@<X8>)
{
  return a1 - 36;
}

void sub_1A5B93AE4()
{
  JUMPOUT(0x1A5B93AD8);
}

void sub_1A5B93AF4()
{
  JUMPOUT(0x1A5B93AD8);
}

unint64_t sub_1A5B93B04()
{
  return 0xD000000000000038;
}

CloudSubscriptionFeatures::LocalError_optional __swiftcall LocalError.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 16;
  if ((unint64_t)rawValue < 0x10)
    v2 = rawValue;
  *v1 = v2;
  return (CloudSubscriptionFeatures::LocalError_optional)rawValue;
}

void *static LocalError.allCases.getter()
{
  return &unk_1E4F6B8D8;
}

uint64_t LocalError.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1A5B93BB4()
{
  unint64_t result;

  result = qword_1EE7FA968;
  if (!qword_1EE7FA968)
  {
    result = MEMORY[0x1A85B2F18](&protocol conformance descriptor for LocalError, &type metadata for LocalError);
    atomic_store(result, (unint64_t *)&qword_1EE7FA968);
  }
  return result;
}

CloudSubscriptionFeatures::LocalError_optional sub_1A5B93BF8(Swift::Int *a1)
{
  return LocalError.init(rawValue:)(*a1);
}

void sub_1A5B93C00(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

unint64_t sub_1A5B93C0C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1A5B4F970();
  result = sub_1A5B93C38();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A5B93C38()
{
  unint64_t result;

  result = qword_1EE7FA970;
  if (!qword_1EE7FA970)
  {
    result = MEMORY[0x1A85B2F18](&protocol conformance descriptor for LocalError, &type metadata for LocalError);
    atomic_store(result, (unint64_t *)&qword_1EE7FA970);
  }
  return result;
}

unint64_t sub_1A5B93C84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7FA978;
  if (!qword_1EE7FA978)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EE7FA980);
    result = MEMORY[0x1A85B2F18](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7FA978);
  }
  return result;
}

void sub_1A5B93CD0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4F6B8D8;
}

uint64_t getEnumTagSinglePayload for LocalError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1A5B93DBC + 4 * byte_1A5BCDC75[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1A5B93DF0 + 4 * byte_1A5BCDC70[v4]))();
}

uint64_t sub_1A5B93DF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B93DF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5B93E00);
  return result;
}

uint64_t sub_1A5B93E0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5B93E14);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1A5B93E18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B93E20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LocalError()
{
  return &type metadata for LocalError;
}

void sub_1A5B93E3C(char a1)
{
  uint64_t inited;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FCE8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A5BCDEC0;
  *(_QWORD *)(inited + 32) = sub_1A5BC9B60();
  *(_QWORD *)(inited + 40) = v3;
  __asm { BR              X11 }
}

unint64_t sub_1A5B93EF8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = MEMORY[0x1E0DEA968];
  v0[9] = MEMORY[0x1E0DEA968];
  v0[6] = v1 - 5;
  v0[7] = 0x80000001A5BD26A0;
  v0[10] = sub_1A5BC9B60();
  v0[11] = v3;
  v0[15] = v2;
  v0[12] = v1 - 11;
  v0[13] = 0x80000001A5BD2580;
  v0[16] = sub_1A5BC9B60();
  v0[17] = v4;
  v0[21] = v2;
  v0[18] = v1 - 5;
  v0[19] = 0x80000001A5BD2450;
  return sub_1A5B5AA50((uint64_t)v0);
}

uint64_t *sub_1A5B940D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v12 = sub_1A5BC9974();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = sub_1A5BC9974();
      v9 = *(_QWORD *)(v8 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      goto LABEL_10;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_1A5B94220(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v5 = sub_1A5BC9974();
    v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v7 = a1;
    return v6(v7, v5);
  }
  if (!(_DWORD)result)
  {
    v3 = sub_1A5BC9974();
    v4 = *(_QWORD *)(v3 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
    if (!(_DWORD)result)
    {
      v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
      v7 = a1;
      v5 = v3;
      return v6(v7, v5);
    }
  }
  return result;
}

void *sub_1A5B942B4(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v10 = sub_1A5BC9974();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = sub_1A5BC9974();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void *sub_1A5B943D4(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1A5B81718((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = sub_1A5BC9974();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_1A5BC9974();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1A5B94504(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v10 = sub_1A5BC9974();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = sub_1A5BC9974();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void *sub_1A5B94624(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1A5B81718((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = sub_1A5BC9974();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = sub_1A5BC9974();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1A5B94754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_1A5B94760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1A5B94770()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_1A5B94780()
{
  unint64_t v0;
  unint64_t v1;

  sub_1A5B501D4();
  if (v0 <= 0x3F)
  {
    sub_1A5BC9974();
    if (v1 <= 0x3F)
      swift_initEnumMetadataMultiPayload();
  }
}

void sub_1A5B94800(char a1)
{
  uint64_t inited;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FCE8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A5BCDEC0;
  *(_QWORD *)(inited + 32) = sub_1A5BC9B60();
  *(_QWORD *)(inited + 40) = v3;
  __asm { BR              X12 }
}

unint64_t sub_1A5B948B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1 + 3;
  v3 = v1 + 4;
  v4 = v1 + 13;
  v5 = MEMORY[0x1E0DEA968];
  v0[9] = MEMORY[0x1E0DEA968];
  v0[6] = v4;
  v0[7] = 0x80000001A5BD2270;
  v0[10] = sub_1A5BC9B60();
  v0[11] = v6;
  v0[15] = v5;
  v0[12] = v3;
  v0[13] = 0x80000001A5BD2190;
  v0[16] = sub_1A5BC9B60();
  v0[17] = v7;
  v0[21] = v5;
  v0[18] = v2;
  v0[19] = 0x80000001A5BD20E0;
  return sub_1A5B5AA50((uint64_t)v0);
}

uint64_t GeoClassificationInfo.featureKey.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1A5B94BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v6;

  v0 = sub_1A5BC9974();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5BC9968();
  v4 = sub_1A5BC98FC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

uint64_t sub_1A5B94C90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification + 8);
  swift_bridgeObjectRetain();
  return sub_1A5B95F7C(v1, v2);
}

uint64_t static GeoClassificationInfo.supportsSecureCoding.getter()
{
  return 1;
}

void *GeoClassificationInfo.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return GeoClassificationInfo.init(from:)(a1);
}

void *GeoClassificationInfo.init(from:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;
  objc_class *v27;
  _QWORD v28[2];
  _BYTE *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;
  objc_super v37;
  char v38;

  v2 = v1;
  v4 = sub_1A5BC9974();
  v31 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  MEMORY[0x1E0C80A78](v4);
  v30 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA998);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_isBeta;
  *((_BYTE *)v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_isBeta) = 0;
  v10 = a1[3];
  v35 = a1;
  v11 = __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1A5B960F4();
  v12 = v2;
  v34 = v8;
  v13 = v36;
  sub_1A5BCA19C();
  if (v13)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);

    type metadata accessor for GeoClassificationInfo();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v36 = v9;
    v14 = v6;
    v29 = v2;
    v15 = v30;
    v16 = v31;
    v17 = v32;
    v38 = 3;
    v18 = sub_1A5BC9FF8();
    v20 = v12;
    v21 = (uint64_t *)&v12[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey];
    *v21 = v18;
    v21[1] = v22;
    v38 = 0;
    v23 = sub_1A5BC9FF8();
    v24 = (uint64_t *)&v20[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification];
    *v24 = v23;
    v24[1] = v25;
    v28[1] = v24;
    v38 = 1;
    sub_1A5B5D980(&qword_1ED1107F8, MEMORY[0x1E0CB08C0]);
    sub_1A5BCA010();
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v20[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_cacheTill], v15, v17);
    v38 = 2;
    v26 = sub_1A5BC9FD4();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v34, v33);
    v29[v36] = v26 & 1;

    v27 = (objc_class *)type metadata accessor for GeoClassificationInfo();
    v37.receiver = v20;
    v37.super_class = v27;
    v11 = objc_msgSendSuper2(&v37, sel_init);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  }
  return v11;
}

id GeoClassificationInfo.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return GeoClassificationInfo.init(coder:)(a1);
}

id GeoClassificationInfo.init(coder:)(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t *v20;
  uint64_t *v21;
  void *v22;
  unsigned __int8 v23;
  objc_class *v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  const char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  objc_super v36;

  v2 = v1;
  v4 = sub_1A5BC9974();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_isBeta;
  v1[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_isBeta] = 0;
  sub_1A5B55C6C(0, (unint64_t *)&qword_1ED111130);
  v9 = v1;
  v10 = sub_1A5BC9DE8();
  if (!v10)
  {
    if (qword_1ED10FDA0 != -1)
      swift_once();
    v26 = sub_1A5BC9A64();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED10FD00);
    v27 = sub_1A5BC9A4C();
    v28 = sub_1A5BC9D88();
    if (!os_log_type_enabled(v27, v28))
      goto LABEL_18;
    v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v29 = 0;
    v30 = "Could not decode feature key for GeoclassificationInfo!";
    goto LABEL_17;
  }
  v11 = (void *)v10;
  v35 = sub_1A5BC9B60();
  v13 = v12;

  v14 = sub_1A5BC9DE8();
  if (!v14)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED10FDA0 != -1)
      swift_once();
    v31 = sub_1A5BC9A64();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED10FD00);
    v27 = sub_1A5BC9A4C();
    v28 = sub_1A5BC9D88();
    if (!os_log_type_enabled(v27, v28))
      goto LABEL_18;
    v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v29 = 0;
    v30 = "Could not decode geoClassification for GeoclassificationInfo!";
    goto LABEL_17;
  }
  v15 = (void *)v14;
  v34 = sub_1A5BC9B60();
  v17 = v16;

  sub_1A5B55C6C(0, &qword_1ED110EC0);
  v18 = sub_1A5BC9DE8();
  if (!v18)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ED10FDA0 != -1)
      swift_once();
    v32 = sub_1A5BC9A64();
    __swift_project_value_buffer(v32, (uint64_t)qword_1ED10FD00);
    v27 = sub_1A5BC9A4C();
    v28 = sub_1A5BC9D88();
    if (!os_log_type_enabled(v27, v28))
      goto LABEL_18;
    v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v29 = 0;
    v30 = "Could not decode cacheTill for GeoclassificationInfo!";
LABEL_17:
    _os_log_impl(&dword_1A5B4D000, v27, v28, v30, v29, 2u);
    MEMORY[0x1A85B2FC0](v29, -1, -1);
LABEL_18:

    type metadata accessor for GeoClassificationInfo();
    swift_deallocPartialClassInstance();
    return 0;
  }
  v19 = (void *)v18;
  v20 = (uint64_t *)&v9[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey];
  *v20 = v35;
  v20[1] = v13;
  v21 = (uint64_t *)&v9[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification];
  *v21 = v34;
  v21[1] = v17;
  sub_1A5BC9950();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v9[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_cacheTill], v7, v4);
  v22 = (void *)sub_1A5BC9B3C();
  v23 = objc_msgSend(a1, sel_decodeBoolForKey_, v22);

  v2[v8] = v23;
  v24 = (objc_class *)type metadata accessor for GeoClassificationInfo();
  v36.receiver = v9;
  v36.super_class = v24;
  v25 = objc_msgSendSuper2(&v36, sel_init);

  return v25;
}

void sub_1A5B95500(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;

  v2 = v1;
  v4 = (void *)sub_1A5BC9B3C();
  v5 = (void *)sub_1A5BC9B3C();
  objc_msgSend(a1, sel_encodeObject_forKey_, v4, v5);

  v6 = (void *)sub_1A5BC9B3C();
  v7 = (void *)sub_1A5BC9B3C();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

  v8 = (void *)sub_1A5BC98F0();
  v9 = (void *)sub_1A5BC9B3C();
  objc_msgSend(a1, sel_encodeObject_forKey_, v8, v9);

  v10 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_isBeta);
  v11 = (id)sub_1A5BC9B3C();
  objc_msgSend(a1, sel_encodeBool_forKey_, v10, v11);

}

uint64_t sub_1A5B9571C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __CFString *v5;

  v1 = v0;
  sub_1A5BC9EC0();
  sub_1A5BC9BE4();
  swift_bridgeObjectRetain();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification + 8);
  swift_bridgeObjectRetain();
  v4 = sub_1A5B95F7C(v2, v3);
  v5 = (id)CSFGeoClassificationStatusDescription(v4);
  sub_1A5BC9B60();

  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  sub_1A5BC9974();
  sub_1A5B5D980((unint64_t *)&qword_1ED10FB90, MEMORY[0x1E0CB08F0]);
  sub_1A5BCA094();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1A5B95914(uint64_t a1)
{
  uint64_t v1;
  BOOL v2;
  BOOL v3;
  char v4;
  char v5;
  char v6;
  char *v8;
  _BYTE v9[24];
  uint64_t v10;

  sub_1A5B96138(a1, (uint64_t)v9);
  if (!v10)
  {
    sub_1A5B8A7C0((uint64_t)v9);
    goto LABEL_17;
  }
  type metadata accessor for GeoClassificationInfo();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    v6 = 0;
    return v6 & 1;
  }
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey) == *(_QWORD *)&v8[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey]
    && *(_QWORD *)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey + 8) == *(_QWORD *)&v8[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_featureKey + 8];
  if (!v2 && (sub_1A5BCA0B8() & 1) == 0
    || (*(_QWORD *)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification) == *(_QWORD *)&v8[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification]
      ? (v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification + 8) == *(_QWORD *)&v8[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification + 8])
      : (v3 = 0),
        !v3 && (sub_1A5BCA0B8() & 1) == 0 || (sub_1A5BC9944() & 1) == 0))
  {

    goto LABEL_17;
  }
  v4 = *(_BYTE *)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_isBeta);
  v5 = v8[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_isBeta];

  v6 = v4 ^ v5 ^ 1;
  return v6 & 1;
}

id GeoClassificationInfo.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void GeoClassificationInfo.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1A5B95B20()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A5B95B54 + 4 * byte_1A5BCDED0[*v0]))(0xD000000000000011, 0x80000001A5BD2700);
}

uint64_t sub_1A5B95B54()
{
  return 0x6C69546568636163;
}

uint64_t sub_1A5B95B70()
{
  return 0x617465427369;
}

uint64_t sub_1A5B95B84()
{
  return 0x4B65727574616566;
}

uint64_t sub_1A5B95BA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5B9645C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1A5B95BC4(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1A5B95BD0()
{
  sub_1A5B960F4();
  return sub_1A5BCA1C0();
}

uint64_t sub_1A5B95BF8()
{
  sub_1A5B960F4();
  return sub_1A5BCA1CC();
}

id GeoClassificationInfo.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GeoClassificationInfo();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A5B95CBC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA9B0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5B960F4();
  sub_1A5BCA1B4();
  v8[15] = 0;
  sub_1A5BCA064();
  if (!v1)
  {
    v8[14] = 1;
    sub_1A5BC9974();
    sub_1A5B5D980(&qword_1ED10FB80, MEMORY[0x1E0CB0890]);
    sub_1A5BCA07C();
    v8[13] = 2;
    sub_1A5BCA070();
    v8[12] = 3;
    sub_1A5BCA064();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

void *sub_1A5B95E74@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v5;
  void *result;

  v5 = objc_allocWithZone((Class)type metadata accessor for GeoClassificationInfo());
  result = GeoClassificationInfo.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A5B95EC8(_QWORD *a1)
{
  return sub_1A5B95CBC(a1);
}

uint64_t CSFGeoClassificationStatus.description.getter(uint64_t a1)
{
  __CFString *v1;
  uint64_t v2;

  v1 = (id)CSFGeoClassificationStatusDescription(a1);
  v2 = sub_1A5BC9B60();

  return v2;
}

uint64_t sub_1A5B95F30()
{
  uint64_t *v0;
  __CFString *v1;
  uint64_t v2;

  v1 = (id)CSFGeoClassificationStatusDescription(*v0);
  v2 = sub_1A5BC9B60();

  return v2;
}

uint64_t sub_1A5B95F7C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C62616C69617661 && a2 == 0xE900000000000065;
  if (v2 || (sub_1A5BCA0B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646574696D696CLL && a2 == 0xE700000000000000 || (sub_1A5BCA0B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x616C696176616E75 && a2 == 0xEB00000000656C62)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1A5BCA0B8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 0;
  }
}

unint64_t sub_1A5B960F4()
{
  unint64_t result;

  result = qword_1EE7FA9A0;
  if (!qword_1EE7FA9A0)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE09C, &type metadata for GeoClassificationInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA9A0);
  }
  return result;
}

uint64_t sub_1A5B96138(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED110560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5B96180()
{
  return type metadata accessor for GeoClassificationInfo();
}

uint64_t sub_1A5B96188()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5BC9974();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for GeoClassificationInfo()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GeoClassificationInfo.expired.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of GeoClassificationInfo.status.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of GeoClassificationInfo.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of GeoClassificationInfo.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of GeoClassificationInfo.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of GeoClassificationInfo.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t storeEnumTagSinglePayload for GeoClassificationInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1A5B96304 + 4 * byte_1A5BCDED9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1A5B96338 + 4 * byte_1A5BCDED4[v4]))();
}

uint64_t sub_1A5B96338(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B96340(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5B96348);
  return result;
}

uint64_t sub_1A5B96354(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5B9635CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1A5B96360(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B96368(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GeoClassificationInfo.CodingKeys()
{
  return &type metadata for GeoClassificationInfo.CodingKeys;
}

unint64_t sub_1A5B96388()
{
  unint64_t result;

  result = qword_1EE7FA9B8;
  if (!qword_1EE7FA9B8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE074, &type metadata for GeoClassificationInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA9B8);
  }
  return result;
}

unint64_t sub_1A5B963D0()
{
  unint64_t result;

  result = qword_1EE7FA9C0;
  if (!qword_1EE7FA9C0)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCDFE4, &type metadata for GeoClassificationInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA9C0);
  }
  return result;
}

unint64_t sub_1A5B96418()
{
  unint64_t result;

  result = qword_1EE7FA9C8;
  if (!qword_1EE7FA9C8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE00C, &type metadata for GeoClassificationInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA9C8);
  }
  return result;
}

uint64_t sub_1A5B9645C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001A5BD2700 || (sub_1A5BCA0B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C69546568636163 && a2 == 0xE90000000000006CLL || (sub_1A5BCA0B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x617465427369 && a2 == 0xE600000000000000 || (sub_1A5BCA0B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4B65727574616566 && a2 == 0xEA00000000007965)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_1A5BCA0B8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1A5B96624()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t static Ticket.supportsSecureCoding.getter()
{
  return 1;
}

unint64_t sub_1A5B966B0()
{
  uint64_t v0;
  id v1;
  id v2;

  sub_1A5BC9EC0();
  swift_bridgeObjectRelease();
  v1 = *(id *)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status);
  v2 = objc_msgSend(v1, sel_description);
  sub_1A5BC9B60();

  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  swift_bridgeObjectRetain();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  return 0xD000000000000010;
}

uint64_t Ticket.ticket.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_ticket);
  swift_bridgeObjectRetain();
  return v1;
}

id Ticket.status.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status);
}

id Ticket.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return Ticket.init(from:)(a1);
}

id Ticket.init(from:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  objc_class *v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  objc_super v22;
  char v23;
  uint64_t v24;

  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FA9E0);
  v4 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v20 = a1;
  v8 = __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1A5B96B18();
  v21 = v1;
  v9 = v8;
  sub_1A5BCA19C();
  if (v2)
  {
    v13 = v21;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);

    type metadata accessor for Ticket();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v10 = v4;
    LOBYTE(v24) = 0;
    v11 = v19;
    v12 = sub_1A5BC9FC8();
    v15 = v21;
    v16 = (uint64_t *)&v21[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_ticket];
    *v16 = v12;
    v16[1] = v17;
    type metadata accessor for TicketStatus();
    v23 = 1;
    sub_1A5B974B0((unint64_t *)&unk_1EE7FA9F0, (uint64_t)&protocol conformance descriptor for TicketStatus);
    sub_1A5BCA010();
    *(_QWORD *)&v15[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status] = v24;

    v18 = (objc_class *)type metadata accessor for Ticket();
    v22.receiver = v15;
    v22.super_class = v18;
    v9 = objc_msgSendSuper2(&v22, sel_init);
    sub_1A5B96F40();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v11);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  }
  return v9;
}

unint64_t sub_1A5B96B18()
{
  unint64_t result;

  result = qword_1EE7FA9E8;
  if (!qword_1EE7FA9E8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE30C, &type metadata for Ticket.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FA9E8);
  }
  return result;
}

uint64_t type metadata accessor for Ticket()
{
  return objc_opt_self();
}

id Ticket.__allocating_init(ticket:status:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  char *v7;
  char *v8;
  id v9;
  id v10;
  objc_super v12;

  v7 = (char *)objc_allocWithZone(v3);
  v8 = &v7[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_ticket];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  *(_QWORD *)&v7[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status] = a3;
  v12.receiver = v7;
  v12.super_class = v3;
  v9 = a3;
  v10 = objc_msgSendSuper2(&v12, sel_init);
  sub_1A5B96F40();

  return v10;
}

id Ticket.init(ticket:status:)(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v5;
  id v6;
  id v7;
  objc_super v9;

  v5 = &v3[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_ticket];
  *(_QWORD *)v5 = a1;
  *((_QWORD *)v5 + 1) = a2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status] = a3;
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for Ticket();
  v6 = a3;
  v7 = objc_msgSendSuper2(&v9, sel_init);
  sub_1A5B96F40();

  return v7;
}

id Ticket.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return Ticket.init(coder:)(a1);
}

id Ticket.init(coder:)(void *a1)
{
  void *v1;
  char *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  objc_super v10;

  sub_1A5B97198();
  v3 = v1;
  v4 = sub_1A5BC9DE8();
  if (v4)
  {
    v5 = (void *)v4;
    sub_1A5BC9B54();

  }
  *(_OWORD *)&v3[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_ticket] = 0uLL;
  type metadata accessor for TicketStatus();
  v6 = (void *)sub_1A5BC9DE8();
  if (v6)
  {
    *(_QWORD *)&v3[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status] = v6;
    v7 = v6;

    v10.receiver = v3;
    v10.super_class = (Class)type metadata accessor for Ticket();
    v8 = objc_msgSendSuper2(&v10, sel_init);
    sub_1A5B96F40();

  }
  else
  {

    swift_bridgeObjectRelease();
    type metadata accessor for Ticket();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v8;
}

void sub_1A5B96E18(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_ticket + 8))
    v3 = sub_1A5BC9B3C();
  else
    v3 = 0;
  v4 = (void *)sub_1A5BC9B3C();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);
  swift_unknownObjectRelease();

  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status);
  v6 = (id)sub_1A5BC9B3C();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

}

void sub_1A5B96F40()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  char *v4;
  id v5;
  void *v6;
  char v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status];
  v3 = objc_allocWithZone((Class)type metadata accessor for TicketStatus());
  v4 = v2;
  v5 = TicketStatus.init(rawValue:)(0x7551746559746F6ELL, 0xEC00000064657565);
  if (v5)
  {
    v6 = v5;
    v7 = sub_1A5BC9DF4();

    if ((v7 & 1) == 0 && !*(_QWORD *)&v1[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_ticket + 8])
    {
      if (qword_1ED10FDA0 != -1)
        swift_once();
      v8 = sub_1A5BC9A64();
      __swift_project_value_buffer(v8, (uint64_t)qword_1ED10FD00);
      v16 = v1;
      v9 = sub_1A5BC9A4C();
      v10 = sub_1A5BC9D88();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        v12 = swift_slowAlloc();
        *(_DWORD *)v11 = 136315138;
        v17 = v12;
        v13 = (uint64_t *)&v4[OBJC_IVAR____TtC25CloudSubscriptionFeatures12TicketStatus_rawValue];
        swift_beginAccess();
        v15 = *v13;
        v14 = v13[1];
        swift_bridgeObjectRetain();
        sub_1A5B58A30(v15, v14, &v17);
        sub_1A5BC9E18();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1A5B4D000, v9, v10, "Ticket is not valid - has status %s but no ticket value.", v11, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v12, -1, -1);
        MEMORY[0x1A85B2FC0](v11, -1, -1);

      }
      else
      {

      }
    }
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_1A5B97198()
{
  unint64_t result;

  result = qword_1ED111130;
  if (!qword_1ED111130)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED111130);
  }
  return result;
}

id Ticket.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void Ticket.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1A5B9724C()
{
  _BYTE *v0;

  if (*v0)
    return 0x737574617473;
  else
    return 0x74656B636974;
}

uint64_t sub_1A5B97278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5B97780(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5B9729C()
{
  sub_1A5B96B18();
  return sub_1A5BCA1C0();
}

uint64_t sub_1A5B972C4()
{
  sub_1A5B96B18();
  return sub_1A5BCA1CC();
}

id Ticket.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Ticket();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A5B97358(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAA00);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5B96B18();
  sub_1A5BCA1B4();
  v12 = 0;
  sub_1A5BCA040();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status);
    v10[15] = 1;
    type metadata accessor for TicketStatus();
    sub_1A5B974B0((unint64_t *)&unk_1EE7FAA08, (uint64_t)&protocol conformance descriptor for TicketStatus);
    sub_1A5BCA07C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A5B974B0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for TicketStatus();
    result = MEMORY[0x1A85B2F18](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

id sub_1A5B974F0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v5;
  id result;

  v5 = objc_allocWithZone((Class)type metadata accessor for Ticket());
  result = Ticket.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A5B97540(_QWORD *a1)
{
  return sub_1A5B97358(a1);
}

uint64_t method lookup function for Ticket()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Ticket.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of Ticket.__allocating_init(ticket:status:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of Ticket.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of Ticket.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of Ticket.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t storeEnumTagSinglePayload for Ticket.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5B97628 + 4 * byte_1A5BCE1B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5B9765C + 4 * byte_1A5BCE1B0[v4]))();
}

uint64_t sub_1A5B9765C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B97664(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5B9766CLL);
  return result;
}

uint64_t sub_1A5B97678(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5B97680);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5B97684(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5B9768C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Ticket.CodingKeys()
{
  return &type metadata for Ticket.CodingKeys;
}

unint64_t sub_1A5B976AC()
{
  unint64_t result;

  result = qword_1EE7FAA18;
  if (!qword_1EE7FAA18)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE2E4, &type metadata for Ticket.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FAA18);
  }
  return result;
}

unint64_t sub_1A5B976F4()
{
  unint64_t result;

  result = qword_1EE7FAA20;
  if (!qword_1EE7FAA20)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE254, &type metadata for Ticket.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FAA20);
  }
  return result;
}

unint64_t sub_1A5B9773C()
{
  unint64_t result;

  result = qword_1EE7FAA28;
  if (!qword_1EE7FAA28)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE27C, &type metadata for Ticket.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FAA28);
  }
  return result;
}

uint64_t sub_1A5B97780(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74656B636974 && a2 == 0xE600000000000000;
  if (v2 || (sub_1A5BCA0B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A5BCA0B8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A5B97860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t sub_1A5B97868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 16) + *(_QWORD *)(a5 + 16));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_1A5B61B8C;
  return v13(a1, a2, a3, a4, a5);
}

void sub_1A5B978F8()
{
  sub_1A5B9C94C(MEMORY[0x1E0DF2290], "Connection to %s interrupted!");
}

void sub_1A5B9790C()
{
  sub_1A5B9C94C(MEMORY[0x1E0DF2280], "Connection to %s invalidated!");
}

void sub_1A5B97920(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_1A5B97970(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED110E98);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v13 + v12, (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  sub_1A5B5920C(a3, a4, a5, (void (*)(void *, uint64_t))sub_1A5B5C0E0, v13);
  return swift_release();
}

_WORD *sub_1A5B97A70(char a1, void (*a2)(), uint64_t a3)
{
  _WORD *v6;
  uint64_t v7;
  void *v8;
  char **v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BYTE *v18;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void (*v24)();
  uint64_t v25;
  _BYTE v26[32];
  _WORD *v27;

  v6 = sub_1A5B59918();
  v7 = MEMORY[0x1E0C809B0];
  if ((a1 & 1) != 0)
  {
    v24 = a2;
    v25 = a3;
    v20 = MEMORY[0x1E0C809B0];
    v21 = 1107296256;
    v22 = sub_1A5B97920;
    v23 = &block_descriptor_22;
    v8 = _Block_copy(&v20);
    swift_retain();
    swift_release();
    v9 = &selRef_synchronousRemoteObjectProxyWithErrorHandler_;
  }
  else
  {
    v24 = a2;
    v25 = a3;
    v20 = MEMORY[0x1E0C809B0];
    v21 = 1107296256;
    v22 = sub_1A5B97920;
    v23 = &block_descriptor_13;
    v8 = _Block_copy(&v20);
    swift_retain();
    swift_release();
    v9 = &selRef_remoteObjectProxyWithErrorHandler_;
  }
  v10 = objc_msgSend(v6, *v9, v8);
  _Block_release(v8);

  sub_1A5BC9E3C();
  swift_unknownObjectRelease();
  sub_1A5B58B00((uint64_t)v26, (uint64_t)&v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1110F8);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v6 = v27;
    v11 = sub_1A5B59918();
    v24 = sub_1A5B978F8;
    v25 = 0;
    v20 = v7;
    v21 = 1107296256;
    v22 = sub_1A5B4FD84;
    v23 = &block_descriptor_16;
    v12 = _Block_copy(&v20);
    objc_msgSend(v11, sel_setInterruptionHandler_, v12);
    _Block_release(v12);

    v13 = sub_1A5B59918();
    v24 = sub_1A5B9790C;
    v25 = 0;
    v20 = v7;
    v21 = 1107296256;
    v22 = sub_1A5B4FD84;
    v23 = &block_descriptor_19;
    v14 = _Block_copy(&v20);
    objc_msgSend(v13, sel_setInvalidationHandler_, v14);
    _Block_release(v14);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  else
  {
    if (qword_1ED1112D8 != -1)
      swift_once();
    v15 = sub_1A5BC9A64();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED1112C0);
    v16 = sub_1A5BC9A4C();
    v17 = sub_1A5BC9D88();
    if (os_log_type_enabled(v16, v17))
    {
      v6 = (_WORD *)swift_slowAlloc();
      *v6 = 0;
      _os_log_impl(&dword_1A5B4D000, v16, v17, "Proxy object has the wrong type", (uint8_t *)v6, 2u);
      MEMORY[0x1A85B2FC0](v6, -1, -1);
    }

    sub_1A5B584A8();
    swift_allocError();
    *v18 = 1;
    swift_willThrow();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  return v6;
}

void sub_1A5B97D9C()
{
  sub_1A5B97E00((void (*)())sub_1A5B97DC8, "Sending cache clear message to %s", (SEL *)&selRef_clearCacheAndNotify);
}

void sub_1A5B97DC8(void *a1)
{
  sub_1A5B97FDC(a1, "remote proxy error [clear cache]: %{public}s");
}

void sub_1A5B97DD4()
{
  sub_1A5B97E00((void (*)())sub_1A5B97FD0, "Sending ticket cache clear message to %s", (SEL *)&selRef_clearTicketCacheAndNotify);
}

void sub_1A5B97E00(void (*a1)(), const char *a2, SEL *a3)
{
  uint64_t v3;
  _WORD *v6;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint8_t *v13;
  id v14;
  SEL *v15;
  uint64_t v16;

  v6 = sub_1A5B97A70(0, a1, 0);
  if (!v3)
  {
    v7 = v6;
    if (qword_1ED1112D8 != -1)
      swift_once();
    v8 = sub_1A5BC9A64();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED1112C0);
    v9 = sub_1A5BC9A4C();
    v10 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v9, v10))
    {
      v15 = a3;
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v16 = v12;
      *(_DWORD *)v11 = 136315138;
      sub_1A5B58A30(6581865, 0xE300000000000000, &v16);
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v9, v10, a2, v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v12, -1, -1);
      v13 = v11;
      a3 = v15;
      MEMORY[0x1A85B2FC0](v13, -1, -1);
    }

    objc_msgSend(v7, *a3);
    v14 = sub_1A5B59918();
    objc_msgSend(v14, sel_invalidate);
    swift_unknownObjectRelease();

  }
}

void sub_1A5B97FD0(void *a1)
{
  sub_1A5B97FDC(a1, "remote proxy error [clear ticket cache]: %{public}s");
}

void sub_1A5B97FDC(void *a1, const char *a2)
{
  uint64_t v4;
  id v5;
  id v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  NSObject *oslog;
  uint64_t v13;

  if (qword_1ED1112D8 != -1)
    swift_once();
  v4 = sub_1A5BC9A64();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED1112C0);
  v5 = a1;
  v6 = a1;
  oslog = sub_1A5BC9A4C();
  v7 = sub_1A5BC9D88();
  if (os_log_type_enabled(oslog, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v13 = v9;
    *(_DWORD *)v8 = 136446210;
    swift_getErrorValue();
    v10 = sub_1A5BCA130();
    sub_1A5B58A30(v10, v11, &v13);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A5B4D000, oslog, v7, a2, v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v9, -1, -1);
    MEMORY[0x1A85B2FC0](v8, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_1A5B981B4(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, char *, uint64_t);
  _WORD *v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v27;
  _WORD *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t aBlock[6];
  uint64_t v34;

  v30 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1103F8);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v32 = a1;
  v9((char *)&v27 - v7, a1, v3);
  v10 = *(unsigned __int8 *)(v4 + 80);
  v11 = (v10 + 16) & ~v10;
  v12 = v10 | 7;
  v13 = swift_allocObject();
  v14 = *(void (**)(uint64_t, char *, uint64_t))(v4 + 32);
  v31 = v3;
  v14(v13 + v11, v8, v3);
  v15 = sub_1A5B97A70(0, (void (*)())sub_1A5B9E628, v13);
  v16 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = v12;
  v30 = v9;
  swift_release();
  if (qword_1ED1112D8 != -1)
    swift_once();
  v17 = sub_1A5BC9A64();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED1112C0);
  v18 = sub_1A5BC9A4C();
  v19 = sub_1A5BC9DA0();
  v20 = v16;
  if (os_log_type_enabled(v18, v19))
  {
    v21 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    aBlock[0] = v22;
    *(_DWORD *)v21 = 136315394;
    v34 = sub_1A5B58A30(0xD000000000000017, 0x80000001A5BD2B30, aBlock);
    v28 = v15;
    sub_1A5BC9E18();
    *(_WORD *)(v21 + 12) = 2080;
    v34 = sub_1A5B58A30(6581865, 0xE300000000000000, aBlock);
    v15 = v28;
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v18, v19, "Sending %s request to %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v22, -1, -1);
    MEMORY[0x1A85B2FC0](v21, -1, -1);
  }

  v23 = v31;
  v30(v20, v32, v31);
  v24 = swift_allocObject();
  v14(v24 + v11, v20, v23);
  aBlock[4] = (uint64_t)sub_1A5B9E660;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A5B50174;
  aBlock[3] = (uint64_t)&block_descriptor_131;
  v25 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v15, sel_getSharedAlbumsStatusWithCompletion_, v25);
  _Block_release(v25);
  return swift_unknownObjectRelease();
}

uint64_t sub_1A5B986E0(char a1, void *a2)
{
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  char v16;
  uint64_t v17;

  if (qword_1ED1112D8 != -1)
    swift_once();
  v4 = sub_1A5BC9A64();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED1112C0);
  v5 = a2;
  v6 = sub_1A5BC9A4C();
  v7 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v17 = v9;
    *(_DWORD *)v8 = 136315650;
    sub_1A5B58A30(0xD000000000000017, 0x80000001A5BD2B30, &v17);
    sub_1A5BC9E18();
    *(_WORD *)(v8 + 12) = 1024;
    v16 = a1;
    sub_1A5BC9E18();
    *(_WORD *)(v8 + 18) = 2080;
    if (a2)
    {
      v10 = objc_msgSend(v5, sel_localizedDescription);
      v11 = sub_1A5BC9B60();
      v13 = v12;

    }
    else
    {
      v13 = 0xE300000000000000;
      v11 = 7104878;
    }
    sub_1A5B58A30(v11, v13, &v17);
    sub_1A5BC9E18();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A5B4D000, v6, v7, "received %s response, isEnabled: %{BOOL}d, error: %s", (uint8_t *)v8, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v9, -1, -1);
    MEMORY[0x1A85B2FC0](v8, -1, -1);

    a1 = v16;
    if (!a2)
      goto LABEL_10;
LABEL_7:
    v17 = (uint64_t)v5;
    v14 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1103F8);
    return sub_1A5BC9CC8();
  }

  if (a2)
    goto LABEL_7;
LABEL_10:
  LOBYTE(v17) = a1 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1103F8);
  return sub_1A5BC9CD4();
}

uint64_t sub_1A5B98984(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B989A0()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  if (qword_1ED1112D8 != -1)
    swift_once();
  v1 = sub_1A5BC9A64();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED1112C0);
  v2 = sub_1A5BC9A4C();
  v3 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1A5B4D000, v2, v3, "Getting ticket status", v4, 2u);
    MEMORY[0x1A85B2FC0](v4, -1, -1);
  }
  v6 = v0[4];
  v5 = v0[5];
  v7 = v0[3];

  v8 = (_QWORD *)swift_task_alloc();
  v0[6] = v8;
  v8[2] = v5;
  v8[3] = v7;
  v8[4] = v6;
  v9 = (_QWORD *)swift_task_alloc();
  v0[7] = v9;
  type metadata accessor for TicketStatus();
  *v9 = v0;
  v9[1] = sub_1A5B98B08;
  return sub_1A5BCA0DC();
}

uint64_t sub_1A5B98B08()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5B98B74()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1A5B98B80()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1A5B98BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, char *, uint64_t);
  _WORD *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _QWORD v32[2];
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t aBlock[6];
  uint64_t v41;

  v35 = a4;
  v37 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAA70);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](v5);
  v36 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v32 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v39 = a1;
  v11((char *)v32 - v9, a1, v5);
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = v12 | 7;
  v15 = swift_allocObject();
  v16 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v38 = v5;
  v16(v15 + v13, v10, v5);
  v17 = sub_1A5B97A70(0, (void (*)())sub_1A5B9E550, v15);
  v32[1] = v14;
  v33 = v13;
  v34 = v11;
  swift_release();
  v18 = qword_1ED1112D8;
  swift_unknownObjectRetain();
  if (v18 != -1)
    swift_once();
  v19 = sub_1A5BC9A64();
  __swift_project_value_buffer(v19, (uint64_t)qword_1ED1112C0);
  v20 = sub_1A5BC9A4C();
  v21 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = v21;
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    aBlock[0] = v24;
    *(_DWORD *)v23 = 136315394;
    v41 = sub_1A5B58A30(0xD00000000000001CLL, 0x80000001A5BD2B10, aBlock);
    sub_1A5BC9E18();
    *(_WORD *)(v23 + 12) = 2080;
    v41 = sub_1A5B58A30(6581865, 0xE300000000000000, aBlock);
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v20, v22, "Sending %s request to %s.", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v24, -1, -1);
    MEMORY[0x1A85B2FC0](v23, -1, -1);
  }

  v25 = v36;
  v27 = v33;
  v26 = v34;
  v28 = (void *)sub_1A5BC9B3C();
  v29 = v38;
  v26(v25, v39, v38);
  v30 = swift_allocObject();
  v16(v30 + v27, v25, v29);
  aBlock[4] = (uint64_t)sub_1A5B9E588;
  aBlock[5] = v30;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A5B5D7B4;
  aBlock[3] = (uint64_t)&block_descriptor_122;
  v31 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v17, sel_getTicketStatusForFeature_completion_, v28, v31);
  swift_unknownObjectRelease();
  _Block_release(v31);
  swift_unknownObjectRelease();

}

uint64_t sub_1A5B9911C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1A5B99138()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  if (qword_1ED1112D8 != -1)
    swift_once();
  v1 = sub_1A5BC9A64();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED1112C0);
  v2 = sub_1A5BC9A4C();
  v3 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1A5B4D000, v2, v3, "Getting ticket status from cache.", v4, 2u);
    MEMORY[0x1A85B2FC0](v4, -1, -1);
  }
  v6 = v0[4];
  v5 = v0[5];
  v7 = v0[3];

  v8 = (_QWORD *)swift_task_alloc();
  v0[6] = v8;
  v8[2] = v5;
  v8[3] = v7;
  v8[4] = v6;
  v9 = (_QWORD *)swift_task_alloc();
  v0[7] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAA58);
  *v9 = v0;
  v9[1] = sub_1A5B992A4;
  return sub_1A5BCA0DC();
}

uint64_t sub_1A5B992A4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

void sub_1A5B99310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  unint64_t v12;
  uint64_t v13;
  void (*v14)(unint64_t, char *, uint64_t);
  _WORD *v15;
  void *v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v20 = a3;
  v21 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAA60);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](v5);
  v22 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v23 = a1;
  v11((char *)&v20 - v9, a1, v5);
  v12 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v13 = swift_allocObject();
  v14 = *(void (**)(unint64_t, char *, uint64_t))(v6 + 32);
  v14(v13 + v12, v10, v5);
  v15 = sub_1A5B97A70(0, (void (*)())sub_1A5B9E4B0, v13);
  swift_release();
  swift_unknownObjectRetain();
  v16 = (void *)sub_1A5BC9B3C();
  v17 = v22;
  v11(v22, v23, v5);
  v18 = swift_allocObject();
  v14(v18 + v12, v17, v5);
  aBlock[4] = sub_1A5B9E4E8;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A5B5D7B4;
  aBlock[3] = &block_descriptor_111;
  v19 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v15, sel_getTicketStatusFromCacheForFeature_completion_, v16, v19, v20, v21);
  swift_unknownObjectRelease();
  _Block_release(v19);
  swift_unknownObjectRelease();

}

uint64_t sub_1A5B996E4(void *a1, void *a2)
{
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  id v22;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;

  if (a2)
  {
    v3 = qword_1ED1112D8;
    v4 = a2;
    if (v3 != -1)
      swift_once();
    v5 = sub_1A5BC9A64();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED1112C0);
    v6 = v4;
    v7 = sub_1A5BC9A4C();
    v8 = sub_1A5BC9D88();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v10 = (_QWORD *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v32 = v31;
      *(_DWORD *)v9 = 136315394;
      sub_1A5B58A30(0xD000000000000025, 0x80000001A5BD2A90, &v32);
      sub_1A5BC9E18();
      *(_WORD *)(v9 + 12) = 2112;
      v11 = v6;
      sub_1A5BC9E18();
      *v10 = a2;

      _os_log_impl(&dword_1A5B4D000, v7, v8, "Received %s error response: %@", (uint8_t *)v9, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v10, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v31, -1, -1);
      MEMORY[0x1A85B2FC0](v9, -1, -1);

    }
    else
    {

    }
    v32 = (uint64_t)v6;
LABEL_13:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAA60);
    return sub_1A5BC9CC8();
  }
  if (!a1)
  {
    if (qword_1ED1112D8 != -1)
      swift_once();
    v24 = sub_1A5BC9A64();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED1112C0);
    v25 = sub_1A5BC9A4C();
    v26 = sub_1A5BC9D88();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v32 = v28;
      *(_DWORD *)v27 = 136315138;
      sub_1A5B58A30(0xD000000000000025, 0x80000001A5BD2A90, &v32);
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v25, v26, "Receieved %s neither an error or response object. Throwing error.", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v28, -1, -1);
      MEMORY[0x1A85B2FC0](v27, -1, -1);
    }

    sub_1A5B584A8();
    v29 = swift_allocError();
    *v30 = 2;
    v32 = v29;
    goto LABEL_13;
  }
  v13 = qword_1ED1112D8;
  v14 = a1;
  if (v13 != -1)
    swift_once();
  v15 = sub_1A5BC9A64();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED1112C0);
  v16 = v14;
  v17 = sub_1A5BC9A4C();
  v18 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v20 = (_QWORD *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v32 = v21;
    *(_DWORD *)v19 = 136315394;
    sub_1A5B58A30(0xD000000000000025, 0x80000001A5BD2A90, &v32);
    sub_1A5BC9E18();
    *(_WORD *)(v19 + 12) = 2112;
    v22 = v16;
    sub_1A5BC9E18();
    *v20 = a1;

    _os_log_impl(&dword_1A5B4D000, v17, v18, "Received %s status response: %@", (uint8_t *)v19, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v20, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v21, -1, -1);
    MEMORY[0x1A85B2FC0](v19, -1, -1);

  }
  else
  {

  }
  v32 = (uint64_t)a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAA60);
  return sub_1A5BC9CD4();
}

void sub_1A5B99C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, char *, uint64_t);
  _WORD *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _QWORD v32[2];
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t aBlock[6];
  uint64_t v41;

  v35 = a4;
  v37 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAA48);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x1E0C80A78](v5);
  v36 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v32 - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v39 = a1;
  v11((char *)v32 - v9, a1, v5);
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = (v12 + 16) & ~v12;
  v14 = v12 | 7;
  v15 = swift_allocObject();
  v16 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  v38 = v5;
  v16(v15 + v13, v10, v5);
  v17 = sub_1A5B97A70(0, (void (*)())sub_1A5B9E43C, v15);
  v32[1] = v14;
  v33 = v13;
  v34 = v11;
  swift_release();
  v18 = qword_1ED1112D8;
  swift_unknownObjectRetain();
  if (v18 != -1)
    swift_once();
  v19 = sub_1A5BC9A64();
  __swift_project_value_buffer(v19, (uint64_t)qword_1ED1112C0);
  v20 = sub_1A5BC9A4C();
  v21 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = v21;
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    aBlock[0] = v24;
    *(_DWORD *)v23 = 136315394;
    v41 = sub_1A5B58A30(0xD000000000000016, 0x80000001A5BD2A30, aBlock);
    sub_1A5BC9E18();
    *(_WORD *)(v23 + 12) = 2080;
    v41 = sub_1A5B58A30(6581865, 0xE300000000000000, aBlock);
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v20, v22, "Sending %s request to %s.", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v24, -1, -1);
    MEMORY[0x1A85B2FC0](v23, -1, -1);
  }

  v25 = v36;
  v27 = v33;
  v26 = v34;
  v28 = (void *)sub_1A5BC9B3C();
  v29 = v38;
  v26(v25, v39, v38);
  v30 = swift_allocObject();
  v16(v30 + v27, v25, v29);
  aBlock[4] = (uint64_t)sub_1A5B9E474;
  aBlock[5] = v30;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A5B5D7B4;
  aBlock[3] = (uint64_t)&block_descriptor_100;
  v31 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v17, sel_getTicketForFeature_completion_, v28, v31);
  swift_unknownObjectRelease();
  _Block_release(v31);
  swift_unknownObjectRelease();

}

uint64_t sub_1A5B9A200(void *a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t *a6)
{
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  id v17;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  id v26;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  if (a2)
  {
    v10 = qword_1ED1112D8;
    v11 = a2;
    if (v10 != -1)
      swift_once();
    v12 = sub_1A5BC9A64();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED1112C0);
    v13 = v11;
    v14 = sub_1A5BC9A4C();
    v15 = sub_1A5BC9D88();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v37 = (_QWORD *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      v41 = v39;
      *(_DWORD *)v16 = 136315394;
      sub_1A5B58A30(a4, a5, &v41);
      sub_1A5BC9E18();
      *(_WORD *)(v16 + 12) = 2112;
      v17 = v13;
      sub_1A5BC9E18();
      *v37 = a2;

      _os_log_impl(&dword_1A5B4D000, v14, v15, "Received %s error response: %@", (uint8_t *)v16, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v37, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v39, -1, -1);
      MEMORY[0x1A85B2FC0](v16, -1, -1);

    }
    else
    {

    }
    v41 = (uint64_t)v13;
LABEL_13:
    __swift_instantiateConcreteTypeFromMangledName(a6);
    return sub_1A5BC9CC8();
  }
  if (!a1)
  {
    if (qword_1ED1112D8 != -1)
      swift_once();
    v28 = sub_1A5BC9A64();
    __swift_project_value_buffer(v28, (uint64_t)qword_1ED1112C0);
    v29 = sub_1A5BC9A4C();
    v30 = sub_1A5BC9D88();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = a6;
      v33 = swift_slowAlloc();
      v41 = v33;
      *(_DWORD *)v31 = 136315138;
      sub_1A5B58A30(a4, a5, &v41);
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v29, v30, "Receieved %s neither an error or response object. Throwing error.", v31, 0xCu);
      swift_arrayDestroy();
      v34 = v33;
      a6 = v32;
      MEMORY[0x1A85B2FC0](v34, -1, -1);
      MEMORY[0x1A85B2FC0](v31, -1, -1);
    }

    sub_1A5B584A8();
    v35 = swift_allocError();
    *v36 = 2;
    v41 = v35;
    goto LABEL_13;
  }
  v19 = qword_1ED1112D8;
  v20 = a1;
  if (v19 != -1)
    swift_once();
  v21 = sub_1A5BC9A64();
  __swift_project_value_buffer(v21, (uint64_t)qword_1ED1112C0);
  v22 = v20;
  v23 = sub_1A5BC9A4C();
  v24 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc();
    v38 = (_QWORD *)swift_slowAlloc();
    v40 = swift_slowAlloc();
    v41 = v40;
    *(_DWORD *)v25 = 136315394;
    sub_1A5B58A30(a4, a5, &v41);
    sub_1A5BC9E18();
    *(_WORD *)(v25 + 12) = 2112;
    v26 = v22;
    sub_1A5BC9E18();
    *v38 = a1;

    _os_log_impl(&dword_1A5B4D000, v23, v24, "Received %s status response: %@", (uint8_t *)v25, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v38, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v40, -1, -1);
    MEMORY[0x1A85B2FC0](v25, -1, -1);

  }
  else
  {

  }
  v41 = (uint64_t)v22;
  __swift_instantiateConcreteTypeFromMangledName(a6);
  return sub_1A5BC9CD4();
}

uint64_t sub_1A5B9A7AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  unint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, char *, uint64_t);
  char *v13;
  uint64_t v14;
  _WORD *v15;
  char *v16;
  uint64_t v17;
  void *v18;
  _QWORD v20[2];
  _QWORD aBlock[6];

  v20[1] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAA40);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v3);
  v20[0] = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v20 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v9((char *)v20 - v7, a1, v3);
  v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v11 = swift_allocObject();
  v12 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
  v13 = v8;
  v14 = v3;
  v12(v11 + v10, v13, v3);
  v15 = sub_1A5B97A70(0, (void (*)())sub_1A5B9E3F0, v11);
  swift_release();
  v16 = (char *)v20[0];
  v9((char *)v20[0], a1, v14);
  v17 = swift_allocObject();
  v12(v17 + v10, v16, v14);
  aBlock[4] = sub_1A5B9E39C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A5B74514;
  aBlock[3] = &block_descriptor_91;
  v18 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v15, sel_clearCFUGateWithCompletion_, v18);
  swift_unknownObjectRelease();
  _Block_release(v18);
  return swift_unknownObjectRelease();
}

uint64_t sub_1A5B9AB84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  unint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, char *, uint64_t);
  char *v13;
  uint64_t v14;
  _WORD *v15;
  char *v16;
  uint64_t v17;
  void *v18;
  _QWORD v20[2];
  _QWORD aBlock[6];

  v20[1] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAA40);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v3);
  v20[0] = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v20 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v9((char *)v20 - v7, a1, v3);
  v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v11 = swift_allocObject();
  v12 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
  v13 = v8;
  v14 = v3;
  v12(v11 + v10, v13, v3);
  v15 = sub_1A5B97A70(0, (void (*)())sub_1A5B9E364, v11);
  swift_release();
  v16 = (char *)v20[0];
  v9((char *)v20[0], a1, v14);
  v17 = swift_allocObject();
  v12(v17 + v10, v16, v14);
  aBlock[4] = sub_1A5B9E39C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A5B74514;
  aBlock[3] = &block_descriptor_82;
  v18 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v15, sel_clearCFUWithCompletion_, v18);
  swift_unknownObjectRelease();
  _Block_release(v18);
  return swift_unknownObjectRelease();
}

uint64_t sub_1A5B9AF54(void *a1)
{
  id v1;

  if (a1)
  {
    v1 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAA40);
    return sub_1A5BC9CC8();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAA40);
    return sub_1A5BC9CD4();
  }
}

uint64_t sub_1A5B9AFB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  unint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, char *, uint64_t);
  char *v13;
  uint64_t v14;
  _WORD *v15;
  char *v16;
  uint64_t v17;
  void *v18;
  _QWORD v20[2];
  _QWORD aBlock[6];

  v20[1] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAA40);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v3);
  v20[0] = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v20 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v9((char *)v20 - v7, a1, v3);
  v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v11 = swift_allocObject();
  v12 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
  v13 = v8;
  v14 = v3;
  v12(v11 + v10, v13, v3);
  v15 = sub_1A5B97A70(0, (void (*)())sub_1A5B9E30C, v11);
  swift_release();
  v16 = (char *)v20[0];
  v9((char *)v20[0], a1, v14);
  v17 = swift_allocObject();
  v12(v17 + v10, v16, v14);
  aBlock[4] = sub_1A5B9E344;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A5B50174;
  aBlock[3] = &block_descriptor_73;
  v18 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v15, sel_postCFUIfEligibleWithCompletion_, v18);
  swift_unknownObjectRelease();
  _Block_release(v18);
  return swift_unknownObjectRelease();
}

uint64_t sub_1A5B9B384(uint64_t a1, void *a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  id v7;

  if (qword_1ED1112D8 != -1)
    swift_once();
  v3 = sub_1A5BC9A64();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED1112C0);
  v4 = sub_1A5BC9A4C();
  v5 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v6 = 67109120;
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v4, v5, "CFU was posted? %{BOOL}d", v6, 8u);
    MEMORY[0x1A85B2FC0](v6, -1, -1);
  }

  if (a2)
  {
    v7 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAA40);
    return sub_1A5BC9CC8();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAA40);
    return sub_1A5BC9CD4();
  }
}

uint64_t sub_1A5B9B4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  unint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, char *, uint64_t);
  char *v13;
  uint64_t v14;
  _WORD *v15;
  char *v16;
  uint64_t v17;
  void *v18;
  _QWORD v20[2];
  _QWORD aBlock[6];

  v20[1] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1103F8);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v3);
  v20[0] = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v20 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v9((char *)v20 - v7, a1, v3);
  v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v11 = swift_allocObject();
  v12 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
  v13 = v8;
  v14 = v3;
  v12(v11 + v10, v13, v3);
  v15 = sub_1A5B97A70(0, (void (*)())sub_1A5B9E23C, v11);
  swift_release();
  v16 = (char *)v20[0];
  v9((char *)v20[0], a1, v14);
  v17 = swift_allocObject();
  v12(v17 + v10, v16, v14);
  aBlock[4] = sub_1A5B9E2EC;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A5B50174;
  aBlock[3] = &block_descriptor_64;
  v18 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v15, sel_gmOptInToggleWithCompletion_, v18);
  swift_unknownObjectRelease();
  _Block_release(v18);
  return swift_unknownObjectRelease();
}

uint64_t sub_1A5B9B8BC(char a1, void *a2)
{
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v14;

  if (qword_1ED1112D8 != -1)
    swift_once();
  v4 = sub_1A5BC9A64();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED1112C0);
  v5 = a2;
  v6 = sub_1A5BC9A4C();
  v7 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v14 = v9;
    *(_DWORD *)v8 = 67109378;
    sub_1A5BC9E18();
    *(_WORD *)(v8 + 8) = 2080;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED110400);
    v10 = sub_1A5BC9E00();
    sub_1A5B58A30(v10, v11, &v14);
    sub_1A5BC9E18();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A5B4D000, v6, v7, "Received GM Opt-In toggle value from XPC. Value %{BOOL}d, error: %s", (uint8_t *)v8, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v9, -1, -1);
    MEMORY[0x1A85B2FC0](v8, -1, -1);

    if (a2)
    {
LABEL_5:
      v14 = (uint64_t)v5;
      v12 = v5;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1103F8);
      return sub_1A5BC9CC8();
    }
  }
  else
  {

    if (a2)
      goto LABEL_5;
  }
  LOBYTE(v14) = a1 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1103F8);
  return sub_1A5BC9CD4();
}

uint64_t sub_1A5B9BAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  unint64_t v10;
  uint64_t v11;
  void (*v12)(unint64_t, char *, uint64_t);
  char *v13;
  uint64_t v14;
  _WORD *v15;
  char *v16;
  uint64_t v17;
  void *v18;
  _QWORD v20[2];
  _QWORD aBlock[6];

  v20[1] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAA40);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v3);
  v20[0] = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v20 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v9((char *)v20 - v7, a1, v3);
  v10 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v11 = swift_allocObject();
  v12 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
  v13 = v8;
  v14 = v3;
  v12(v11 + v10, v13, v3);
  v15 = sub_1A5B97A70(0, (void (*)())sub_1A5B9E1B0, v11);
  swift_release();
  v16 = (char *)v20[0];
  v9((char *)v20[0], a1, v14);
  v17 = swift_allocObject();
  v12(v17 + v10, v16, v14);
  aBlock[4] = sub_1A5B9E1F0;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1A5B74514;
  aBlock[3] = &block_descriptor_55;
  v18 = _Block_copy(aBlock);
  swift_unknownObjectRetain();
  swift_release();
  objc_msgSend(v15, sel_forcePostCFUWithCompletion_, v18);
  swift_unknownObjectRelease();
  _Block_release(v18);
  return swift_unknownObjectRelease();
}

uint64_t sub_1A5B9BEC0(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, const char *a5, uint64_t *a6)
{
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v23;

  if (qword_1ED1112D8 != -1)
    swift_once();
  v11 = sub_1A5BC9A64();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED1112C0);
  v12 = a1;
  v13 = a1;
  v14 = sub_1A5BC9A4C();
  v15 = sub_1A5BC9D88();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v23 = v17;
    *(_DWORD *)v16 = 136315394;
    sub_1A5B58A30(a3, a4, &v23);
    sub_1A5BC9E18();
    *(_WORD *)(v16 + 12) = 2080;
    swift_getErrorValue();
    v18 = sub_1A5BCA130();
    sub_1A5B58A30(v18, v19, &v23);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A5B4D000, v14, v15, a5, (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v17, -1, -1);
    MEMORY[0x1A85B2FC0](v16, -1, -1);
  }
  else
  {

  }
  sub_1A5B584A8();
  v20 = swift_allocError();
  *v21 = 1;
  v23 = v20;
  __swift_instantiateConcreteTypeFromMangledName(a6);
  return sub_1A5BC9CC8();
}

uint64_t sub_1A5B9C108(void *a1)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v12;

  if (qword_1ED1112D8 != -1)
    swift_once();
  v2 = sub_1A5BC9A64();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED1112C0);
  v3 = a1;
  v4 = sub_1A5BC9A4C();
  v5 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v12 = v7;
    *(_DWORD *)v6 = 136315138;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED110400);
    v8 = sub_1A5BC9E00();
    sub_1A5B58A30(v8, v9, &v12);
    sub_1A5BC9E18();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A5B4D000, v4, v5, "Received response for forcePostCFU. Error: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v7, -1, -1);
    MEMORY[0x1A85B2FC0](v6, -1, -1);

    if (a1)
    {
LABEL_5:
      v12 = (uint64_t)v3;
      v10 = v3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAA40);
      return sub_1A5BC9CC8();
    }
  }
  else
  {

    if (a1)
      goto LABEL_5;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAA40);
  return sub_1A5BC9CD4();
}

void sub_1A5B9C2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void *, uint64_t), uint64_t a6)
{
  void *v6;
  void *v7;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  void *v25;
  void *v26;
  _QWORD *v27;
  void *v28;
  id v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  void *v34;
  _BYTE *v35;
  void *v36;
  uint64_t aBlock;
  uint64_t v38;
  void *v39;
  void *v40;
  void (*v41)();
  _QWORD *v42;

  v7 = v6;
  v12 = sub_1A5B59918();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a5;
  *(_QWORD *)(v13 + 24) = a6;
  v41 = (void (*)())sub_1A5B9E958;
  v42 = (_QWORD *)v13;
  v14 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v38 = 1107296256;
  v39 = sub_1A5B97920;
  v40 = &block_descriptor_177;
  v15 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v16 = objc_msgSend(v12, sel_remoteObjectProxyWithErrorHandler_, v15);
  _Block_release(v15);

  sub_1A5BC9E3C();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1110F8);
  if (swift_dynamicCast())
  {
    v17 = sub_1A5B59918();
    v41 = sub_1A5B9C938;
    v42 = 0;
    aBlock = v14;
    v38 = 1107296256;
    v39 = sub_1A5B4FD84;
    v40 = &block_descriptor_180;
    v18 = _Block_copy(&aBlock);
    objc_msgSend(v17, sel_setInterruptionHandler_, v18);
    _Block_release(v18);

    v19 = sub_1A5B59918();
    v41 = sub_1A5B9790C;
    v42 = 0;
    aBlock = v14;
    v38 = 1107296256;
    v39 = sub_1A5B4FD84;
    v40 = &block_descriptor_183;
    v20 = _Block_copy(&aBlock);
    objc_msgSend(v19, sel_setInvalidationHandler_, v20);
    _Block_release(v20);

    if (qword_1ED1112D8 != -1)
      swift_once();
    v21 = sub_1A5BC9A64();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED1112C0);
    v22 = sub_1A5BC9A4C();
    v23 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1A5B4D000, v22, v23, "sending eligibility request ...", v24, 2u);
      MEMORY[0x1A85B2FC0](v24, -1, -1);
    }

    v25 = (void *)sub_1A5BC9B3C();
    v26 = (void *)sub_1A5BC9B3C();
    v27 = (_QWORD *)swift_allocObject();
    v27[2] = a1;
    v27[3] = a2;
    v27[4] = v7;
    v27[5] = a5;
    v27[6] = a6;
    v41 = (void (*)())sub_1A5B5C0DC;
    v42 = v27;
    aBlock = v14;
    v38 = 1107296256;
    v39 = sub_1A5B50174;
    v40 = &block_descriptor_190;
    v28 = _Block_copy(&aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    v29 = v7;
    swift_release();
    objc_msgSend(v36, sel_getFeatureEligibilityFor_bundleID_completion_, v25, v26, v28);
    _Block_release(v28);
    swift_unknownObjectRelease();

  }
  else
  {
    if (qword_1ED1112D8 != -1)
      swift_once();
    v30 = sub_1A5BC9A64();
    __swift_project_value_buffer(v30, (uint64_t)qword_1ED1112C0);
    v31 = sub_1A5BC9A4C();
    v32 = sub_1A5BC9D88();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_1A5B4D000, v31, v32, "Proxy object has the wrong type", v33, 2u);
      MEMORY[0x1A85B2FC0](v33, -1, -1);
    }

    sub_1A5B584A8();
    v34 = (void *)swift_allocError();
    *v35 = 1;
    a5(v34, 1);

  }
}

uint64_t sub_1A5B9C760(void *a1, uint64_t (*a2)(void *, uint64_t))
{
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;

  if (qword_1ED1112D8 != -1)
    swift_once();
  v4 = sub_1A5BC9A64();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED1112C0);
  v5 = a1;
  v6 = a1;
  v7 = sub_1A5BC9A4C();
  v8 = sub_1A5BC9D88();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_getErrorValue();
    v11 = sub_1A5BCA130();
    sub_1A5B58A30(v11, v12, &v14);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A5B4D000, v7, v8, "Cannot get remote proxy object: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v10, -1, -1);
    MEMORY[0x1A85B2FC0](v9, -1, -1);
  }
  else
  {

  }
  return a2(a1, 1);
}

void sub_1A5B9C938()
{
  sub_1A5B9C94C(MEMORY[0x1E0DF2280], "Connection to %s interrupted!");
}

void sub_1A5B9C94C(uint64_t (*a1)(void), const char *a2)
{
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  NSObject *oslog;
  uint64_t v9;

  if (qword_1ED1112D8 != -1)
    swift_once();
  v4 = sub_1A5BC9A64();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED1112C0);
  oslog = sub_1A5BC9A4C();
  v5 = a1();
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v9 = v7;
    *(_DWORD *)v6 = 136315138;
    sub_1A5B58A30(6581865, 0xE300000000000000, &v9);
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, oslog, v5, a2, v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v7, -1, -1);
    MEMORY[0x1A85B2FC0](v6, -1, -1);

  }
  else
  {

  }
}

void sub_1A5B9CACC(void *a1, void (*a2)(void *, uint64_t))
{
  uint64_t v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  _BYTE *v14;
  uint64_t v15;

  if (qword_1ED1112D8 != -1)
    swift_once();
  v4 = sub_1A5BC9A64();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED1112C0);
  v5 = a1;
  v6 = a1;
  v7 = sub_1A5BC9A4C();
  v8 = sub_1A5BC9D88();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v15 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_getErrorValue();
    v11 = sub_1A5BCA130();
    sub_1A5B58A30(v11, v12, &v15);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A5B4D000, v7, v8, "remote proxy error [geoclassification request]: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v10, -1, -1);
    MEMORY[0x1A85B2FC0](v9, -1, -1);
  }
  else
  {

  }
  sub_1A5B584A8();
  v13 = (void *)swift_allocError();
  *v14 = 1;
  a2(v13, 1);

}

void sub_1A5B9CCD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(_QWORD, void *), uint64_t a7)
{
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  void *v26;
  void *v27;
  _QWORD *v28;
  void *v29;
  id v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  void *v35;
  _BYTE *v36;
  id v37;
  void *v38;
  uint64_t aBlock;
  uint64_t v40;
  void *v41;
  void *v42;
  void (*v43)();
  _QWORD *v44;

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a6;
  *(_QWORD *)(v12 + 24) = a7;
  swift_retain();
  v13 = sub_1A5B59918();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1A5B9E950;
  *(_QWORD *)(v14 + 24) = v12;
  v43 = (void (*)())sub_1A5B9E958;
  v44 = (_QWORD *)v14;
  v15 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v40 = 1107296256;
  v41 = sub_1A5B97920;
  v42 = &block_descriptor_157;
  v16 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v17 = objc_msgSend(v13, sel_remoteObjectProxyWithErrorHandler_, v16);
  _Block_release(v16);

  sub_1A5BC9E3C();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1110F8);
  if (swift_dynamicCast())
  {
    v18 = sub_1A5B59918();
    v43 = sub_1A5B9C938;
    v44 = 0;
    aBlock = v15;
    v40 = 1107296256;
    v41 = sub_1A5B4FD84;
    v42 = &block_descriptor_160;
    v19 = _Block_copy(&aBlock);
    objc_msgSend(v18, sel_setInterruptionHandler_, v19);
    _Block_release(v19);

    v20 = sub_1A5B59918();
    v43 = sub_1A5B9790C;
    v44 = 0;
    aBlock = v15;
    v40 = 1107296256;
    v41 = sub_1A5B4FD84;
    v42 = &block_descriptor_163;
    v21 = _Block_copy(&aBlock);
    objc_msgSend(v20, sel_setInvalidationHandler_, v21);
    _Block_release(v21);

    if (qword_1ED1112D8 != -1)
      swift_once();
    v22 = sub_1A5BC9A64();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED1112C0);
    v23 = sub_1A5BC9A4C();
    v24 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_1A5B4D000, v23, v24, "sending eligibility request ...", v25, 2u);
      MEMORY[0x1A85B2FC0](v25, -1, -1);
    }

    v26 = (void *)sub_1A5BC9B3C();
    v27 = (void *)sub_1A5BC9B3C();
    v28 = (_QWORD *)swift_allocObject();
    v28[2] = a1;
    v28[3] = a2;
    v28[4] = a5;
    v28[5] = sub_1A5B9E950;
    v28[6] = v12;
    v43 = (void (*)())sub_1A5B5C0DC;
    v44 = v28;
    aBlock = v15;
    v40 = 1107296256;
    v41 = sub_1A5B50174;
    v42 = &block_descriptor_170;
    v29 = _Block_copy(&aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    v30 = a5;
    swift_release();
    objc_msgSend(v38, sel_getFeatureEligibilityFor_bundleID_completion_, v26, v27, v29);
    _Block_release(v29);
    swift_release();
    swift_unknownObjectRelease();

  }
  else
  {
    if (qword_1ED1112D8 != -1)
      swift_once();
    v31 = sub_1A5BC9A64();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED1112C0);
    v32 = sub_1A5BC9A4C();
    v33 = sub_1A5BC9D88();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_1A5B4D000, v32, v33, "Proxy object has the wrong type", v34, 2u);
      MEMORY[0x1A85B2FC0](v34, -1, -1);
    }

    sub_1A5B584A8();
    v35 = (void *)swift_allocError();
    *v36 = 1;
    v37 = v35;
    a6(0, v35);

    swift_release();
  }
}

void sub_1A5B9D188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, void *a8, const void *a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  _QWORD *v25;
  void *v26;
  id v27;
  void *v28;
  _WORD *v29;
  uint64_t v31;
  uint64_t aBlock[7];

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a9;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1A5B9D718;
  *(_QWORD *)(v15 + 24) = v14;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1A5B9D720;
  *(_QWORD *)(v16 + 24) = v15;
  _Block_copy(a9);
  swift_retain();
  v31 = v15;
  swift_retain();
  v28 = a8;
  v29 = sub_1A5B97A70(0, (void (*)())sub_1A5B9D72C, v16);
  swift_release();
  if (qword_1ED1112D8 != -1)
    swift_once();
  v17 = sub_1A5BC9A64();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED1112C0);
  v18 = sub_1A5BC9A4C();
  v19 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    aBlock[0] = v21;
    *(_DWORD *)v20 = 136315138;
    aBlock[6] = sub_1A5B58A30(6581865, 0xE300000000000000, aBlock);
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v18, v19, "Sending geoclassification request to %s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v21, -1, -1);
    MEMORY[0x1A85B2FC0](v20, -1, -1);
  }

  v22 = (void *)sub_1A5BC9B3C();
  v23 = (void *)sub_1A5BC9B3C();
  v24 = (void *)sub_1A5BC9B3C();
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = v28;
  v25[3] = a1;
  v25[4] = a2;
  v25[5] = a3;
  v25[6] = a4;
  v25[7] = sub_1A5B9D720;
  v25[8] = v31;
  aBlock[4] = (uint64_t)sub_1A5B9D738;
  aBlock[5] = (uint64_t)v25;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A5B5D7B4;
  aBlock[3] = (uint64_t)&block_descriptor_4;
  v26 = _Block_copy(aBlock);
  swift_retain();
  v27 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v29, sel_requestGeoClassificationFor_bundleID_altDSID_ignoreCache_completion_, v22, v23, v24, a7 & 1, v26);
  _Block_release(v26);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();

}

uint64_t sub_1A5B9D6F4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1A5B9D718(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;

  sub_1A5BA2B40(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

void sub_1A5B9D720(char *a1, char a2)
{
  uint64_t v2;

  sub_1A5BA29CC(a1, a2 & 1, *(void (**)(uint64_t, uint64_t, char *))(v2 + 16));
}

void sub_1A5B9D72C(void *a1)
{
  uint64_t v1;

  sub_1A5B9CACC(a1, *(void (**)(void *, uint64_t))(v1 + 16));
}

void sub_1A5B9D73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  _QWORD *v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  _WORD *v31;
  uint64_t v32;
  uint64_t aBlock[7];

  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a9;
  *(_QWORD *)(v15 + 24) = a10;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1A5B9E94C;
  *(_QWORD *)(v16 + 24) = v15;
  swift_retain();
  v32 = v15;
  swift_retain();
  v28 = a8;
  v29 = a4;
  v31 = sub_1A5B97A70(0, (void (*)())sub_1A5B9E954, v16);
  swift_release();
  if (qword_1ED1112D8 != -1)
    swift_once();
  v17 = sub_1A5BC9A64();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED1112C0);
  v18 = sub_1A5BC9A4C();
  v19 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    aBlock[0] = v21;
    *(_DWORD *)v20 = 136315138;
    aBlock[6] = sub_1A5B58A30(6581865, 0xE300000000000000, aBlock);
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v18, v19, "Sending geoclassification request to %s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v21, -1, -1);
    MEMORY[0x1A85B2FC0](v20, -1, -1);
  }

  v22 = (void *)sub_1A5BC9B3C();
  v23 = (void *)sub_1A5BC9B3C();
  v24 = (void *)sub_1A5BC9B3C();
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = v28;
  v25[3] = a1;
  v25[4] = a2;
  v25[5] = a3;
  v25[6] = v29;
  v25[7] = sub_1A5B9E94C;
  v25[8] = v32;
  aBlock[4] = (uint64_t)sub_1A5B9D738;
  aBlock[5] = (uint64_t)v25;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A5B5D7B4;
  aBlock[3] = (uint64_t)&block_descriptor_146;
  v26 = _Block_copy(aBlock);
  swift_retain();
  v27 = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v31, sel_requestGeoClassificationFor_bundleID_altDSID_ignoreCache_completion_, v22, v23, v24, a7 & 1, v26);
  _Block_release(v26);
  swift_release();
  swift_unknownObjectRelease();

}

void sub_1A5B9DC3C(void *a1, void *a2, void (*a3)(_QWORD, _QWORD))
{
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD *v26;
  id v27;
  _QWORD *v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  void *v36;
  _BYTE *v37;
  NSObject *log;
  _QWORD *v39;
  uint64_t v40;
  void (*v41)(_QWORD, _QWORD);
  void (*v42)(_QWORD, _QWORD);
  uint64_t v43;

  if (a2)
  {
    v5 = qword_1ED1112D8;
    v6 = a2;
    if (v5 != -1)
      swift_once();
    v7 = sub_1A5BC9A64();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED1112C0);
    v8 = v6;
    v9 = sub_1A5BC9A4C();
    v10 = sub_1A5BC9D88();
    if (os_log_type_enabled(v9, v10))
    {
      v41 = a3;
      v11 = swift_slowAlloc();
      v39 = (_QWORD *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      v43 = v40;
      *(_DWORD *)v11 = 138412546;
      log = v9;
      v12 = v8;
      sub_1A5BC9E18();
      *v39 = a2;

      *(_WORD *)(v11 + 12) = 2080;
      v13 = objc_msgSend(v12, sel_userInfo);
      sub_1A5BC9AE8();

      v14 = sub_1A5BC9AF4();
      v16 = v15;
      swift_bridgeObjectRelease();
      sub_1A5B58A30(v14, v16, &v43);
      sub_1A5BC9E18();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5B4D000, log, v10, "Received error from daemon: %@, %s", (uint8_t *)v11, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v39, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v40, -1, -1);
      v17 = v11;
      a3 = v41;
      MEMORY[0x1A85B2FC0](v17, -1, -1);

    }
    else
    {

    }
    v29 = v8;
    v30 = a2;
    v31 = 1;
LABEL_20:
    a3(v30, v31);

    return;
  }
  if (a1)
  {
    v19 = qword_1ED1112D8;
    v20 = a1;
    if (v19 != -1)
      swift_once();
    v21 = sub_1A5BC9A64();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED1112C0);
    v22 = v20;
    v23 = sub_1A5BC9A4C();
    v24 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v42 = a3;
      v26 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v25 = 138412290;
      v43 = (uint64_t)v22;
      v27 = v22;
      sub_1A5BC9E18();
      *v26 = a1;

      _os_log_impl(&dword_1A5B4D000, v23, v24, "received geoclassification response: %@", v25, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
      swift_arrayDestroy();
      v28 = v26;
      a3 = v42;
      MEMORY[0x1A85B2FC0](v28, -1, -1);
      MEMORY[0x1A85B2FC0](v25, -1, -1);

    }
    else
    {

    }
    v29 = v22;
    v30 = a1;
    v31 = 0;
    goto LABEL_20;
  }
  if (qword_1ED1112D8 != -1)
    swift_once();
  v32 = sub_1A5BC9A64();
  __swift_project_value_buffer(v32, (uint64_t)qword_1ED1112C0);
  v33 = sub_1A5BC9A4C();
  v34 = sub_1A5BC9D88();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v35 = 0;
    _os_log_impl(&dword_1A5B4D000, v33, v34, "Receivved no error and no geoclassification", v35, 2u);
    MEMORY[0x1A85B2FC0](v35, -1, -1);
  }

  sub_1A5B584A8();
  v36 = (void *)swift_allocError();
  *v37 = 7;
  a3(v36, 1);

}

uint64_t sub_1A5B9E1A4()
{
  return objectdestroy_48Tm(&qword_1EE7FAA40);
}

uint64_t sub_1A5B9E1B0(void *a1)
{
  return sub_1A5B9E270(a1, &qword_1EE7FAA40, 0x736F506563726F66, 0xEE00292855464374, "Remote proxy error in %s: %s");
}

uint64_t sub_1A5B9E1E4()
{
  return objectdestroy_48Tm(&qword_1EE7FAA40);
}

uint64_t sub_1A5B9E1F0(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAA40);
  return sub_1A5B9C108(a1);
}

uint64_t sub_1A5B9E230()
{
  return objectdestroy_48Tm(&qword_1ED1103F8);
}

uint64_t sub_1A5B9E23C(void *a1)
{
  return sub_1A5B9E270(a1, &qword_1ED1103F8, 0x546E4974704F6D67, 0xEF2928656C67676FLL, "Remote proxy error in %s: %s");
}

uint64_t sub_1A5B9E270(void *a1, uint64_t *a2, uint64_t a3, unint64_t a4, const char *a5)
{
  uint64_t v5;
  uint64_t v11;

  v11 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8) + 80);
  return sub_1A5B9BEC0(a1, v5 + ((v11 + 16) & ~v11), a3, a4, a5, a2);
}

uint64_t sub_1A5B9E2E0()
{
  return objectdestroy_48Tm(&qword_1ED1103F8);
}

uint64_t sub_1A5B9E2EC(uint64_t a1, uint64_t a2)
{
  return sub_1A5B9E674(a1, a2, &qword_1ED1103F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5B9B8BC);
}

uint64_t sub_1A5B9E300()
{
  return objectdestroy_48Tm(&qword_1EE7FAA40);
}

uint64_t sub_1A5B9E30C(void *a1)
{
  return sub_1A5B9E270(a1, &qword_1EE7FAA40, 0xD000000000000013, 0x80000001A5BD2A10, "Remote proxy error in %s: %s");
}

uint64_t sub_1A5B9E338()
{
  return objectdestroy_48Tm(&qword_1EE7FAA40);
}

uint64_t sub_1A5B9E344(uint64_t a1, uint64_t a2)
{
  return sub_1A5B9E674(a1, a2, &qword_1EE7FAA40, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5B9B384);
}

uint64_t sub_1A5B9E358()
{
  return objectdestroy_48Tm(&qword_1EE7FAA40);
}

uint64_t sub_1A5B9E364(void *a1)
{
  return sub_1A5B9E270(a1, &qword_1EE7FAA40, 0x5546437261656C63, 0xEA00000000002928, "Remote proxy error in %s: %s");
}

uint64_t sub_1A5B9E390()
{
  return objectdestroy_48Tm(&qword_1EE7FAA40);
}

uint64_t sub_1A5B9E3A0(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAA40);
  return sub_1A5B9AF54(a1);
}

uint64_t sub_1A5B9E3E4()
{
  return objectdestroy_48Tm(&qword_1EE7FAA40);
}

uint64_t sub_1A5B9E3F0(void *a1)
{
  return sub_1A5B9E270(a1, &qword_1EE7FAA40, 0x5546437261656C63, 0xEE00292865746147, "Remote proxy error in %s: %s");
}

uint64_t sub_1A5B9E424()
{
  return objectdestroy_48Tm(&qword_1EE7FAA40);
}

uint64_t sub_1A5B9E430()
{
  return objectdestroy_48Tm(&qword_1EE7FAA48);
}

uint64_t sub_1A5B9E43C(void *a1)
{
  return sub_1A5B9E270(a1, &qword_1EE7FAA48, 0xD000000000000016, 0x80000001A5BD2A30, "Remote proxy error in %s: %s");
}

uint64_t sub_1A5B9E468()
{
  return objectdestroy_48Tm(&qword_1EE7FAA48);
}

uint64_t sub_1A5B9E474(void *a1, void *a2)
{
  return sub_1A5B9E5AC(a1, a2, &qword_1EE7FAA48, 0xD000000000000016, 0x80000001A5BD2A30);
}

void sub_1A5B9E498(uint64_t a1)
{
  uint64_t *v1;

  sub_1A5B99310(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1A5B9E4A4()
{
  return objectdestroy_48Tm(&qword_1EE7FAA60);
}

uint64_t sub_1A5B9E4B0(void *a1)
{
  return sub_1A5B9E270(a1, &qword_1EE7FAA60, 0xD000000000000025, 0x80000001A5BD2A90, "Remote proxy error in %s: %s");
}

uint64_t sub_1A5B9E4DC()
{
  return objectdestroy_48Tm(&qword_1EE7FAA60);
}

uint64_t sub_1A5B9E4E8(void *a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAA60);
  return sub_1A5B996E4(a1, a2);
}

void sub_1A5B9E538(uint64_t a1)
{
  uint64_t *v1;

  sub_1A5B98BB4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1A5B9E544()
{
  return objectdestroy_48Tm(&qword_1EE7FAA70);
}

uint64_t sub_1A5B9E550(void *a1)
{
  return sub_1A5B9E270(a1, &qword_1EE7FAA70, 0xD00000000000001CLL, 0x80000001A5BD2B10, "Remote proxy error in %s: %s");
}

uint64_t sub_1A5B9E57C()
{
  return objectdestroy_48Tm(&qword_1EE7FAA70);
}

uint64_t sub_1A5B9E588(void *a1, void *a2)
{
  return sub_1A5B9E5AC(a1, a2, &qword_1EE7FAA70, 0xD00000000000001CLL, 0x80000001A5BD2B10);
}

uint64_t sub_1A5B9E5AC(void *a1, void *a2, uint64_t *a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t v11;

  v11 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 80);
  return sub_1A5B9A200(a1, a2, v5 + ((v11 + 16) & ~v11), a4, a5, a3);
}

uint64_t sub_1A5B9E61C()
{
  return objectdestroy_48Tm(&qword_1ED1103F8);
}

uint64_t sub_1A5B9E628(void *a1)
{
  return sub_1A5B9E270(a1, &qword_1ED1103F8, 0xD000000000000017, 0x80000001A5BD2B30, "remote proxy error in %s: %s");
}

uint64_t sub_1A5B9E654()
{
  return objectdestroy_48Tm(&qword_1ED1103F8);
}

uint64_t sub_1A5B9E660(uint64_t a1, uint64_t a2)
{
  return sub_1A5B9E674(a1, a2, &qword_1ED1103F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1A5B986E0);
}

uint64_t sub_1A5B9E674(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 80);
  return a4(a1, a2, v4 + ((v7 + 16) & ~v7));
}

uint64_t sub_1A5B9E6D0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_9Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1A5B9E734(void *a1, void *a2)
{
  uint64_t v2;

  sub_1A5B9DC3C(a1, a2, *(void (**)(_QWORD, _QWORD))(v2 + 56));
}

uint64_t objectdestroy_42Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5B9E778()
{
  return objectdestroy_48Tm(&qword_1ED110E98);
}

uint64_t objectdestroy_48Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t sub_1A5B9E7E0(void *a1)
{
  uint64_t v1;

  return sub_1A5B9C760(a1, *(uint64_t (**)(void *, uint64_t))(v1 + 16));
}

uint64_t sub_1A5B9E7F8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

id sub_1A5B9E95C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  _QWORD v26[2];
  uint64_t v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111210);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111208);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (id *)((char *)v26 - v12);
  v14 = *(_QWORD *)(v2 + 24);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v14 + 16));
  sub_1A5B9FE84(v2, (uint64_t)v6);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1A5B4FBE8((uint64_t)v6, (uint64_t *)&unk_1ED111210);
    if (qword_1ED110E18 != -1)
      swift_once();
    v15 = sub_1A5BC9A64();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED110E28);
    v16 = sub_1A5BC9A4C();
    v17 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_1A5B4D000, v16, v17, "No cache for cloud.llm found.", v18, 2u);
      MEMORY[0x1A85B2FC0](v18, -1, -1);
    }

  }
  else
  {
    sub_1A5BA0700((uint64_t)v6, (uint64_t)v11);
    sub_1A5BA0700((uint64_t)v11, (uint64_t)v13);
    if ((sub_1A5B8B460(0, 0, 0, 0, a1 & 1) & 1) != 0)
    {
      v19 = *v13;
      sub_1A5B4FBE8((uint64_t)v13, &qword_1ED111208);
      return v19;
    }
    if (qword_1ED110E18 != -1)
      swift_once();
    v21 = sub_1A5BC9A64();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED110E28);
    v22 = sub_1A5BC9A4C();
    v23 = sub_1A5BC9D88();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v27 = v25;
      *(_DWORD *)v24 = 136315138;
      v26[1] = sub_1A5B58A30(0x6C6C2E64756F6C63, 0xE90000000000006DLL, &v27);
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v22, v23, "Cache for %s is not valid.", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v25, -1, -1);
      MEMORY[0x1A85B2FC0](v24, -1, -1);
    }

    sub_1A5B4FBE8((uint64_t)v13, &qword_1ED111208);
  }
  return 0;
}

uint64_t sub_1A5B9EEB8(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  char **v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  os_unfair_lock_s *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  NSObject *v59;
  os_log_type_t v60;
  _BOOL4 v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v71;
  char *v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83[2];
  uint64_t v84[4];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A5BC9974();
  v80 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v77 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v71 - v8;
  v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED111208);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char **)((char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(_QWORD *)&a1[OBJC_IVAR___CloudFeature_featureID];
  v13 = *(_QWORD *)&a1[OBJC_IVAR___CloudFeature_featureID + 8];
  v15 = v14 == 0x6C6C2E64756F6C63 && v13 == 0xE90000000000006DLL;
  if (v15 || (sub_1A5BCA0B8() & 1) != 0)
  {
    v78 = v14;
    v76 = v5;
    v16 = (uint64_t)&a1[OBJC_IVAR___CloudFeature_ttl];
    swift_beginAccess();
    v17 = (uint64_t)v12 + v10[11];
    sub_1A5B54780(v16, v17);
    v18 = qword_1ED110578;
    v19 = a1;
    if (v18 != -1)
      swift_once();
    v21 = qword_1ED110568;
    v20 = unk_1ED110570;
    swift_bridgeObjectRetain();
    sub_1A5BC995C();
    *v12 = v19;
    v22 = (uint64_t *)((char *)v12 + v10[13]);
    *v22 = v21;
    v22[1] = v20;
    v23 = (char **)((char *)v12 + v10[14]);
    sub_1A5BC9818();
    *v23 = 0;
    v23[1] = 0;
    swift_allocObject();
    v24 = sub_1A5BC980C();
    sub_1A5B8E724(&qword_1ED110010, (uint64_t)&unk_1A5BCCCE0);
    v25 = sub_1A5BC9800();
    v72 = v9;
    v75 = v24;
    v26 = v79;
    v27 = *(_QWORD *)(v79 + 24);
    v28 = *(os_unfair_lock_s **)(v27 + 16);
    v29 = v25;
    v30 = v13;
    v32 = v31;
    sub_1A5B66D78(v25, v31);
    os_unfair_lock_lock(v28);
    v33 = *(void **)(v26 + 16);
    v34 = (void *)sub_1A5BC9884();
    v73 = v30;
    v35 = (void *)sub_1A5BC9B3C();
    objc_msgSend(v33, sel_setObject_forKey_, v34, v35);

    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v27 + 16));
    v74 = v29;
    v79 = v32;
    sub_1A5B5D9D4(v29, v32);
    sub_1A5B54780(v17, (uint64_t)v4);
    v36 = v80;
    v37 = v76;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v4, 1, v76) == 1)
    {
      sub_1A5B4FBE8((uint64_t)v4, &qword_1ED111280);
      if (qword_1ED110E18 != -1)
        swift_once();
      v38 = sub_1A5BC9A64();
      __swift_project_value_buffer(v38, (uint64_t)qword_1ED110E28);
      v39 = v19;
      v40 = sub_1A5BC9A4C();
      v41 = sub_1A5BC9DA0();
      v42 = os_log_type_enabled(v40, v41);
      v43 = v73;
      v44 = v78;
      if (v42)
      {
        v45 = swift_slowAlloc();
        v46 = swift_slowAlloc();
        v83[0] = v46;
        *(_DWORD *)v45 = 136446466;
        swift_bridgeObjectRetain();
        v82 = sub_1A5B58A30(v44, v43, v83);
        sub_1A5BC9E18();

        swift_bridgeObjectRelease();
        *(_WORD *)(v45 + 12) = 1024;
        v47 = &v39[OBJC_IVAR___CloudFeature_canUse];
        swift_beginAccess();
        LODWORD(v47) = *v47;

        v81 = (int)v47;
        sub_1A5BC9E18();

        _os_log_impl(&dword_1A5B4D000, v40, v41, "Updating cache for %{public}s, cache-ttl: nil, canUse: %{BOOL}d", (uint8_t *)v45, 0x12u);
        v48 = 1;
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v46, -1, -1);
        MEMORY[0x1A85B2FC0](v45, -1, -1);
        sub_1A5B5D9D4(v74, v79);

        swift_release();
        sub_1A5B4FBE8((uint64_t)v12, &qword_1ED111208);
        return v48;
      }
      sub_1A5B5D9D4(v74, v79);

      swift_release();
    }
    else
    {
      v55 = v72;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v72, v4, v37);
      if (qword_1ED110E18 != -1)
        swift_once();
      v56 = sub_1A5BC9A64();
      __swift_project_value_buffer(v56, (uint64_t)qword_1ED110E28);
      v57 = v77;
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v77, v55, v37);
      v58 = v19;
      v59 = sub_1A5BC9A4C();
      v60 = sub_1A5BC9DA0();
      v61 = os_log_type_enabled(v59, v60);
      v62 = v73;
      if (v61)
      {
        v63 = swift_slowAlloc();
        v71 = swift_slowAlloc();
        v83[0] = v71;
        *(_DWORD *)v63 = 136446722;
        swift_bridgeObjectRetain();
        v82 = sub_1A5B58A30(v78, v62, v83);
        sub_1A5BC9E18();

        swift_bridgeObjectRelease();
        *(_WORD *)(v63 + 12) = 2082;
        sub_1A5BA06B8();
        v64 = sub_1A5BCA094();
        v82 = sub_1A5B58A30(v64, v65, v83);
        sub_1A5BC9E18();
        swift_bridgeObjectRelease();
        v66 = *(void (**)(char *, uint64_t))(v80 + 8);
        v66(v57, v37);
        *(_WORD *)(v63 + 22) = 1024;
        v67 = &v58[OBJC_IVAR___CloudFeature_canUse];
        swift_beginAccess();
        LODWORD(v67) = *v67;

        v81 = (int)v67;
        sub_1A5BC9E18();

        _os_log_impl(&dword_1A5B4D000, v59, v60, "Updating cache for %{public}s, cache-ttl: %{public}s, canUse: %{BOOL}d", (uint8_t *)v63, 0x1Cu);
        v68 = v71;
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v68, -1, -1);
        MEMORY[0x1A85B2FC0](v63, -1, -1);
        sub_1A5B5D9D4(v74, v79);

        swift_release();
        v66(v72, v37);
      }
      else
      {
        sub_1A5B5D9D4(v74, v79);

        swift_release();
        v69 = *(void (**)(char *, uint64_t))(v36 + 8);
        v69(v57, v37);

        v69(v55, v37);
      }
    }
    sub_1A5B4FBE8((uint64_t)v12, &qword_1ED111208);
    return 1;
  }
  if (qword_1ED110E18 != -1)
    swift_once();
  v49 = sub_1A5BC9A64();
  __swift_project_value_buffer(v49, (uint64_t)qword_1ED110E28);
  v50 = a1;
  v51 = sub_1A5BC9A4C();
  v52 = sub_1A5BC9D88();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = (uint8_t *)swift_slowAlloc();
    v54 = swift_slowAlloc();
    v84[0] = v54;
    *(_DWORD *)v53 = 136446210;
    swift_bridgeObjectRetain();
    v82 = sub_1A5B58A30(v14, v13, v84);
    sub_1A5BC9E18();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A5B4D000, v51, v52, "Attempted to save feature %{public}s to GM feature cache.", v53, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v54, -1, -1);
    MEMORY[0x1A85B2FC0](v53, -1, -1);

  }
  else
  {

  }
  return 0;
}

_DWORD *sub_1A5B9F824()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  _DWORD *result;

  v0 = sub_1A5BA0040();
  type metadata accessor for GMFeatureCache();
  v1 = swift_allocObject();
  type metadata accessor for UnfairLock();
  v2 = swift_allocObject();
  result = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v2 + 16) = result;
  *result = 0;
  *(_QWORD *)(v1 + 16) = v0;
  *(_QWORD *)(v1 + 24) = v2;
  qword_1ED112DB0 = v1;
  return result;
}

void *sub_1A5B9F898(char a1)
{
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  const char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v19;

  if ((a1 & 1) != 0)
  {
    if (qword_1ED110E18 != -1)
      swift_once();
    v1 = sub_1A5BC9A64();
    __swift_project_value_buffer(v1, (uint64_t)qword_1ED110E28);
    v2 = sub_1A5BC9A4C();
    v3 = sub_1A5BC9DA0();
    if (!os_log_type_enabled(v2, v3))
      goto LABEL_16;
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v19 = v5;
    *(_DWORD *)v4 = 136315138;
    sub_1A5B58A30(0xD000000000000037, 0x80000001A5BD2C00, &v19);
    sub_1A5BC9E18();
    v6 = "%s eligibility answer was ready and we should respect the server-returned value. Returning nil.";
LABEL_15:
    _os_log_impl(&dword_1A5B4D000, v2, v3, v6, v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v5, -1, -1);
    MEMORY[0x1A85B2FC0](v4, -1, -1);
LABEL_16:

    return 0;
  }
  v7 = sub_1A5B9E95C(1);
  if (!v7)
  {
    if (qword_1ED110E18 != -1)
      swift_once();
    v17 = sub_1A5BC9A64();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED110E28);
    v2 = sub_1A5BC9A4C();
    v3 = sub_1A5BC9DA0();
    if (!os_log_type_enabled(v2, v3))
      goto LABEL_16;
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v19 = v5;
    *(_DWORD *)v4 = 136315138;
    sub_1A5B58A30(0xD000000000000037, 0x80000001A5BD2C00, &v19);
    sub_1A5BC9E18();
    v6 = "%s eligibility answer is not ready but there is no existing value. Returning nil.";
    goto LABEL_15;
  }
  v8 = v7;
  if (qword_1ED110E18 != -1)
    swift_once();
  v9 = sub_1A5BC9A64();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED110E28);
  v10 = v8;
  v11 = sub_1A5BC9A4C();
  v12 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = (_QWORD *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v19 = v15;
    *(_DWORD *)v13 = 136315394;
    sub_1A5B58A30(0xD000000000000037, 0x80000001A5BD2C00, &v19);
    sub_1A5BC9E18();
    *(_WORD *)(v13 + 12) = 2112;
    v16 = v10;
    sub_1A5BC9E18();
    *v14 = v8;

    _os_log_impl(&dword_1A5B4D000, v11, v12, "%s eligibility answer is not ready and there is an existing feature value %@.", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v14, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v15, -1, -1);
    MEMORY[0x1A85B2FC0](v13, -1, -1);

  }
  else
  {

  }
  return v8;
}

void sub_1A5B9FCE4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  NSObject *v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (char *)sub_1A5B9E95C(1);
  if (v3)
  {
    v4 = v3;
    sub_1A5BC98C0();
    v5 = sub_1A5BC9974();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v2, 0, 1, v5);
    v6 = (uint64_t)&v4[OBJC_IVAR___CloudFeature_ttl];
    swift_beginAccess();
    sub_1A5B4FC24((uint64_t)v2, v6);
    swift_endAccess();
    sub_1A5B9EEB8(v4);

  }
  else
  {
    if (qword_1ED110E18 != -1)
      swift_once();
    v7 = sub_1A5BC9A64();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED110E28);
    v10 = sub_1A5BC9A4C();
    v8 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v10, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1A5B4D000, v10, v8, "Attempted to expire GM feature cache but no cached object was found.", v9, 2u);
      MEMORY[0x1A85B2FC0](v9, -1, -1);
    }

  }
}

uint64_t sub_1A5B9FE84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = *(void **)(a1 + 16);
  v5 = (void *)sub_1A5BC9B3C();
  v6 = objc_msgSend(v4, sel_dataForKey_, v5);

  if (v6)
  {
    v7 = sub_1A5BC989C();
    v9 = v8;

    sub_1A5BC97F4();
    swift_allocObject();
    sub_1A5BC97E8();
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111208);
    sub_1A5B8E724((unint64_t *)&qword_1ED1108A0, (uint64_t)&unk_1A5BCCD08);
    sub_1A5BC97DC();
    if (v2)
    {
      swift_release();
      return sub_1A5B5D9D4(v7, v9);
    }
    else
    {
      sub_1A5B5D9D4(v7, v9);
      swift_release();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a2, 0, 1, v10);
    }
  }
  else
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111208);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a2, 1, 1, v12);
  }
}

uint64_t sub_1A5B9FFF4()
{
  uint64_t v0;

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GMFeatureCache()
{
  return objc_opt_self();
}

id sub_1A5BA0040()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = (void *)sub_1A5BC9B3C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
    return v2;
  if (qword_1ED110E18 != -1)
    swift_once();
  v4 = sub_1A5BC9A64();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED110E28);
  v5 = sub_1A5BC9A4C();
  v6 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v9 = v8;
    *(_DWORD *)v7 = 136315138;
    sub_1A5B58A30(0xD00000000000002BLL, 0x80000001A5BD2C40, &v9);
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v5, v6, "Unable to create user defaults with suiteID %s. Will use standard suite.", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v8, -1, -1);
    MEMORY[0x1A85B2FC0](v7, -1, -1);
  }

  return objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
}

void sub_1A5BA022C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32[3];
  uint64_t v33;

  v3 = v2;
  v5 = sub_1A5BC9974();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v30 - v13;
  v15 = (char *)sub_1A5B9F898(a2);
  if (v15)
  {
    v16 = v15;
    if (qword_1ED110E18 != -1)
      swift_once();
    v17 = sub_1A5BC9A64();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED110E28);
    v18 = sub_1A5BC9A4C();
    v19 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v31 = v6;
      v32[0] = v21;
      *(_DWORD *)v20 = 136315138;
      v33 = sub_1A5B58A30(0xD00000000000003BLL, 0x80000001A5BD2BC0, v32);
      v6 = v31;
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v18, v19, "%s found valid existing feature. Extending TTL to .distantFuture.", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v21, -1, -1);
      MEMORY[0x1A85B2FC0](v20, -1, -1);
    }

    sub_1A5BC98CC();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v14, 0, 1, v5);
    v22 = (uint64_t)&v16[OBJC_IVAR___CloudFeature_ttl];
    swift_beginAccess();
    sub_1A5B4FC24((uint64_t)v14, v22);
    swift_endAccess();
  }
  else
  {
    if (qword_1ED110E18 != -1)
      swift_once();
    v23 = sub_1A5BC9A64();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED110E28);
    v24 = sub_1A5BC9A4C();
    v25 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v31 = v3;
      v32[0] = v27;
      v28 = v27;
      *(_DWORD *)v26 = 136315138;
      v30 = v26 + 4;
      v33 = sub_1A5B58A30(0xD00000000000003BLL, 0x80000001A5BD2BC0, v32);
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v24, v25, "%s did not find existing feature, will stub feature object from scratch.", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v28, -1, -1);
      MEMORY[0x1A85B2FC0](v26, -1, -1);
    }

    sub_1A5BC9968();
    sub_1A5BC98E4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v14, 0, 1, v5);
    sub_1A5B54780((uint64_t)v14, (uint64_t)v12);
    v29 = objc_allocWithZone((Class)type metadata accessor for CloudFeature());
    v16 = (char *)sub_1A5B71B2C(0x6C6C2E64756F6C63, 0xE90000000000006DLL, 0, 0, 1, 0, 0, (uint64_t)v12);
    sub_1A5B4FBE8((uint64_t)v14, &qword_1ED111280);
  }
  sub_1A5B9EEB8(v16);

}

unint64_t sub_1A5BA06B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED10FB90;
  if (!qword_1ED10FB90)
  {
    v1 = sub_1A5BC9974();
    result = MEMORY[0x1A85B2F18](MEMORY[0x1E0CB08F0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED10FB90);
  }
  return result;
}

uint64_t sub_1A5BA0700(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1A5BA0748()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = (void *)sub_1A5BC9B3C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  qword_1ED112DA0 = (uint64_t)v2;
}

uint64_t sub_1A5BA07B4()
{
  void *v0;
  void *v1;
  id v2;
  _OWORD v4[2];
  __int128 v5;
  __int128 v6;

  if (qword_1ED10FD38 != -1)
    swift_once();
  v0 = (void *)qword_1ED112DA0;
  if (!qword_1ED112DA0)
  {
    v5 = 0u;
    v6 = 0u;
LABEL_12:
    sub_1A5B8A7C0((uint64_t)&v5);
    return 2;
  }
  v1 = (void *)sub_1A5BC9B3C();
  v2 = objc_msgSend(v0, sel_valueForKey_, v1);

  if (v2)
  {
    sub_1A5BC9E3C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_1A5B8A778((uint64_t)v4, (uint64_t)&v5);
  if (!*((_QWORD *)&v6 + 1))
    goto LABEL_12;
  if (swift_dynamicCast())
    return LOBYTE(v4[0]);
  else
    return 2;
}

unint64_t sub_1A5BA08D4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FCD0);
  v2 = (_QWORD *)sub_1A5BC9F80();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1A5B5AB84(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1A5BA09F4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FFC8);
  v2 = sub_1A5BC9F80();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1A5B56960(v6, (uint64_t)v15, (uint64_t *)&unk_1ED10FFB0);
    result = sub_1A5BBB07C((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1A5B5ACC8(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1A5BA0B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1A5BC9CF8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1A5BC9CEC();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1A5B4FBE8(a1, &qword_1ED1112B0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A5BC9CBC();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED110040);
  return swift_task_create();
}

uint64_t sub_1A5BA0C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1A5BC9CF8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1A5BC9CEC();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1A5B4FBE8(a1, &qword_1ED1112B0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A5BC9CBC();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_1A5BA0DD4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void (*v7)(uint64_t, uint64_t, void *);
  id v8;

  v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  swift_retain();
  v8 = a4;
  v7(a2, a3, a4);
  swift_release();

}

uint64_t static CSFFeatureManager.expireCache(defaults:domain:)(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  void *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t result;
  int64_t v24;
  unint64_t v25;
  BOOL v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t, uint64_t);
  objc_class *v45;
  _BYTE *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _BYTE *v51;
  char *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  _BYTE *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  int64_t v75;
  void *v76;
  uint64_t v77;
  _OWORD *v78;
  uint64_t *v79;
  uint64_t v80;
  int64_t v81;
  objc_super v82;
  uint64_t v83;
  _BYTE *v84;
  __int128 v85;
  uint64_t v86;
  __int128 v87;
  _OWORD v88[2];
  __int128 v89;
  _OWORD v90[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v2);
  v63 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111210);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111208);
  v74 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED1112D8 != -1)
LABEL_41:
    swift_once();
  v10 = sub_1A5BC9A64();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED1112C0);
  v11 = sub_1A5BC9A4C();
  v12 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_1A5B4D000, v11, v12, "Expiring existing features cache!", v13, 2u);
    MEMORY[0x1A85B2FC0](v13, -1, -1);
  }

  v14 = (void *)sub_1A5BC9B3C();
  v15 = objc_msgSend(a1, sel_persistentDomainForName_, v14);

  v16 = MEMORY[0x1E0DEE9B8];
  if (v15)
  {
    v17 = sub_1A5BC9AE8();

  }
  else
  {
    v17 = sub_1A5B5AA50(MEMORY[0x1E0DEE9D8]);
  }
  v18 = v9;
  v19 = v17 + 64;
  v20 = 1 << *(_BYTE *)(v17 + 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & *(_QWORD *)(v17 + 64);
  v75 = (unint64_t)(v20 + 63) >> 6;
  v9 = (char *)v90;
  v78 = v88;
  v79 = &v86;
  result = swift_bridgeObjectRetain();
  v24 = 0;
  v76 = 0;
  v77 = v16 + 8;
  v61 = v17;
  v62 = v6;
  v59 = v18;
  v60 = v17 + 64;
  v73 = (char *)v90;
  v58 = v7;
  while (1)
  {
    if (v22)
    {
      v80 = (v22 - 1) & v22;
      v81 = v24;
      v25 = __clz(__rbit64(v22)) | (v24 << 6);
      goto LABEL_30;
    }
    v26 = __OFADD__(v24, 1);
    v27 = v24 + 1;
    if (v26)
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v27 >= v75)
      goto LABEL_39;
    v28 = *(_QWORD *)(v19 + 8 * v27);
    if (!v28)
      break;
LABEL_29:
    v80 = (v28 - 1) & v28;
    v81 = v27;
    v25 = __clz(__rbit64(v28)) + (v27 << 6);
LABEL_30:
    v30 = (uint64_t *)(*(_QWORD *)(v17 + 48) + 16 * v25);
    v32 = *v30;
    v31 = v30[1];
    sub_1A5B58B00(*(_QWORD *)(v17 + 56) + 32 * v25, (uint64_t)v9);
    *(_QWORD *)&v89 = v32;
    *((_QWORD *)&v89 + 1) = v31;
    v87 = v89;
    v88[0] = v90[0];
    v88[1] = v90[1];
    v85 = v89;
    sub_1A5B58B00((uint64_t)v78, (uint64_t)v79);
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
    {
      v33 = v83;
      a1 = v84;
      sub_1A5BC97F4();
      swift_allocObject();
      sub_1A5BC97E8();
      sub_1A5BA1640();
      v34 = v76;
      sub_1A5BC97DC();
      if (v34)
      {
        swift_release();

        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v6, 1, 1, v7);
        sub_1A5B5D9D4(v33, (unint64_t)a1);
        sub_1A5B4FBE8((uint64_t)v6, (uint64_t *)&unk_1ED111210);
        v76 = 0;
      }
      else
      {
        v71 = a1;
        v72 = v33;
        v76 = 0;
        swift_release();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v6, 0, 1, v7);
        sub_1A5B78E14((uint64_t)v6, (uint64_t)v18, &qword_1ED111208);
        v35 = (char *)*v18;
        v36 = (uint64_t *)(*v18 + OBJC_IVAR___CloudFeature_featureID);
        v37 = v36[1];
        v69 = *v36;
        v64 = v37;
        v38 = &v35[OBJC_IVAR___CloudFeature_canUse];
        swift_beginAccess();
        v65 = *v38;
        v39 = &v35[OBJC_IVAR___CloudFeature_limit];
        swift_beginAccess();
        v68 = *(_QWORD *)v39;
        v67 = v39[8];
        v40 = &v35[OBJC_IVAR___CloudFeature_accessToken];
        swift_beginAccess();
        v41 = *((_QWORD *)v40 + 1);
        v66 = *(_QWORD *)v40;
        swift_bridgeObjectRetain();
        v70 = v35;
        swift_bridgeObjectRetain();
        v42 = (uint64_t)v63;
        sub_1A5BC98C0();
        v43 = sub_1A5BC9974();
        v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56);
        v44(v42, 0, 1, v43);
        v45 = (objc_class *)type metadata accessor for CloudFeature();
        v46 = objc_allocWithZone(v45);
        a1 = &v46[OBJC_IVAR___CloudFeature_limit];
        *(_QWORD *)a1 = 0;
        a1[8] = 1;
        v47 = &v46[OBJC_IVAR___CloudFeature_accessToken];
        *v47 = 0;
        v47[1] = 0;
        v48 = (uint64_t)&v46[OBJC_IVAR___CloudFeature_ttl];
        v44((uint64_t)&v46[OBJC_IVAR___CloudFeature_ttl], 1, 1, v43);
        v46[OBJC_IVAR___CloudFeature_canUse] = v65;
        v49 = &v46[OBJC_IVAR___CloudFeature_featureID];
        v50 = v64;
        *v49 = v69;
        v49[1] = v50;
        swift_beginAccess();
        *(_QWORD *)a1 = v68;
        a1[8] = v67;
        swift_beginAccess();
        *v47 = v66;
        v47[1] = v41;
        v51 = v46;
        swift_bridgeObjectRelease();
        swift_beginAccess();
        sub_1A5B72DF4(v42, v48);
        swift_endAccess();

        v82.receiver = v51;
        v82.super_class = v45;
        v52 = (char *)objc_msgSendSuper2(&v82, sel_init);
        sub_1A5B4FBE8(v42, &qword_1ED111280);
        if (qword_1ED111118 != -1)
          swift_once();
        v7 = v58;
        v53 = (uint64_t)v59;
        v54 = (_QWORD *)((char *)v59 + *(int *)(v58 + 56));
        v55 = *v54;
        v56 = v54[1];
        sub_1A5BC9818();
        swift_allocObject();
        swift_bridgeObjectRetain();
        v57 = sub_1A5BC980C();
        sub_1A5B8CCA8(v52, v57, v55, v56);

        swift_bridgeObjectRelease();
        swift_release();
        sub_1A5B5D9D4(v72, (unint64_t)v71);

        sub_1A5B4FBE8(v53, &qword_1ED111208);
        v17 = v61;
        v6 = v62;
        v18 = (_QWORD *)v53;
        v19 = v60;
      }
      v9 = v73;
    }
    result = sub_1A5B4FBE8((uint64_t)&v87, &qword_1ED10FC38);
    v22 = v80;
    v24 = v81;
  }
  v29 = v27 + 1;
  if (v27 + 1 >= v75)
    goto LABEL_39;
  v28 = *(_QWORD *)(v19 + 8 * v29);
  if (v28)
    goto LABEL_28;
  v29 = v27 + 2;
  if (v27 + 2 >= v75)
    goto LABEL_39;
  v28 = *(_QWORD *)(v19 + 8 * v29);
  if (v28)
    goto LABEL_28;
  v29 = v27 + 3;
  if (v27 + 3 >= v75)
    goto LABEL_39;
  v28 = *(_QWORD *)(v19 + 8 * v29);
  if (v28)
    goto LABEL_28;
  v29 = v27 + 4;
  if (v27 + 4 >= v75)
    goto LABEL_39;
  v28 = *(_QWORD *)(v19 + 8 * v29);
  if (v28)
    goto LABEL_28;
  v29 = v27 + 5;
  if (v27 + 5 >= v75)
  {
LABEL_39:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  v28 = *(_QWORD *)(v19 + 8 * v29);
  if (v28)
  {
LABEL_28:
    v27 = v29;
    goto LABEL_29;
  }
  while (1)
  {
    v27 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v27 >= v75)
      goto LABEL_39;
    v28 = *(_QWORD *)(v19 + 8 * v27);
    ++v29;
    if (v28)
      goto LABEL_29;
  }
  __break(1u);
  return result;
}

unint64_t sub_1A5BA1640()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED1108A0;
  if (!qword_1ED1108A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED111208);
    result = MEMORY[0x1A85B2F18](&unk_1A5BCCD08, v1);
    atomic_store(result, (unint64_t *)&qword_1ED1108A0);
  }
  return result;
}

void static CSFFeatureManager.requestFeature(id:completion:)(uint64_t a1, unint64_t a2, void (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD);
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  objc_class *v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  id v32;
  char *v33;
  uint64_t v34;
  __int128 v35[2];
  uint64_t v36[3];
  ValueMetadata *v37;
  _UNKNOWN **v38;

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED1112D8 != -1)
    swift_once();
  v13 = sub_1A5BC9A64();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED1112C0);
  swift_bridgeObjectRetain_n();
  v14 = sub_1A5BC9A4C();
  v15 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v33 = v12;
    v34 = v5;
    v17 = a4;
    v18 = a3;
    v19 = (uint8_t *)v16;
    v20 = a1;
    v21 = swift_slowAlloc();
    v36[0] = v21;
    *(_DWORD *)v19 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v35[0] = sub_1A5B58A30(v20, a2, v36);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v14, v15, "Checking feature with id: %s [swift]", v19, 0xCu);
    swift_arrayDestroy();
    v22 = v21;
    a1 = v20;
    MEMORY[0x1A85B2FC0](v22, -1, -1);
    v23 = v19;
    a3 = v18;
    a4 = v17;
    v12 = v33;
    v5 = v34;
    MEMORY[0x1A85B2FC0](v23, -1, -1);

    if ((sub_1A5B52EF8() & 1) == 0)
      goto LABEL_10;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if ((sub_1A5B52EF8() & 1) == 0)
      goto LABEL_10;
  }
  v24 = sub_1A5BB39B8(a1, a2);
  v25 = (id)v24;
  if (v24 || (v25 = sub_1A5BB3C98(a1, a2)) != 0)
  {
    a3(v25, v24 != 0);
    sub_1A5BA5B20(v25);
    return;
  }
LABEL_10:
  v26 = sub_1A5B5100C(a1, a2);
  if (v26)
  {
    v27 = v26;
    a3(v26, 0);

  }
  else
  {
    v37 = &type metadata for FeatureFlag;
    v38 = (_UNKNOWN **)sub_1A5B5D68C();
    LOBYTE(v36[0]) = 0;
    sub_1A5BC9A10();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    v28 = (objc_class *)type metadata accessor for XPCCaller();
    v29 = objc_msgSend(objc_allocWithZone(v28), sel_init);
    v37 = (ValueMetadata *)v28;
    v38 = &off_1E4F6DD70;
    v36[0] = (uint64_t)v29;
    v30 = sub_1A5BC9CF8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v12, 1, 1, v30);
    sub_1A5B569A4((uint64_t)v36, (uint64_t)v35);
    v31 = (_QWORD *)swift_allocObject();
    v31[2] = 0;
    v31[3] = 0;
    v31[4] = v5;
    v31[5] = a1;
    v31[6] = a2;
    sub_1A5B579BC(v35, (uint64_t)(v31 + 7));
    v31[12] = a3;
    v31[13] = a4;
    swift_bridgeObjectRetain();
    v32 = v29;
    swift_retain();
    sub_1A5BA0C88((uint64_t)v12, (uint64_t)&unk_1EE7FAA88, (uint64_t)v31);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);

  }
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  objc_class *v30;
  id v31;
  id v32;
  uint64_t v33;
  _QWORD *v34;
  id v35;
  void (*v36)(_QWORD, _QWORD);
  char *v37;
  __int128 v38[2];
  uint64_t v39[3];
  ValueMetadata *v40;
  _UNKNOWN **v41;

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED1112D8 != -1)
    swift_once();
  v13 = sub_1A5BC9A64();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED1112C0);
  swift_bridgeObjectRetain_n();
  v14 = sub_1A5BC9A4C();
  v15 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v36 = a3;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    v37 = v12;
    v19 = a4;
    v20 = v5;
    v21 = v18;
    v39[0] = v18;
    *(_DWORD *)v17 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v38[0] = sub_1A5B58A30(a1, a2, v39);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v14, v15, "Checking feature with id: %s [objc]", v17, 0xCu);
    swift_arrayDestroy();
    v22 = v21;
    v5 = v20;
    a4 = v19;
    v12 = v37;
    MEMORY[0x1A85B2FC0](v22, -1, -1);
    v23 = v17;
    a3 = v36;
    MEMORY[0x1A85B2FC0](v23, -1, -1);

    if ((sub_1A5B52EF8() & 1) == 0)
      goto LABEL_10;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    if ((sub_1A5B52EF8() & 1) == 0)
      goto LABEL_10;
  }
  v24 = sub_1A5BB39B8(a1, a2);
  if (v24)
  {
    v25 = (void *)v24;
    a3(0, v24);

    return;
  }
  v26 = sub_1A5BB3C98(a1, a2);
  if (v26)
    goto LABEL_11;
LABEL_10:
  v26 = sub_1A5B5100C(a1, a2);
  if (v26)
  {
LABEL_11:
    v27 = v26;
    v28 = CloudFeature.cloudFeatureObject.getter();
    a3(v28, 0);

    return;
  }
  v40 = &type metadata for FeatureFlag;
  v41 = (_UNKNOWN **)sub_1A5B5D68C();
  LOBYTE(v39[0]) = 0;
  sub_1A5BC9A10();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = a3;
  *(_QWORD *)(v29 + 24) = a4;
  v30 = (objc_class *)type metadata accessor for XPCCaller();
  v31 = objc_allocWithZone(v30);
  swift_retain();
  v32 = objc_msgSend(v31, sel_init);
  v40 = (ValueMetadata *)v30;
  v41 = &off_1E4F6DD70;
  v39[0] = (uint64_t)v32;
  v33 = sub_1A5BC9CF8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v12, 1, 1, v33);
  sub_1A5B569A4((uint64_t)v39, (uint64_t)v38);
  v34 = (_QWORD *)swift_allocObject();
  v34[2] = 0;
  v34[3] = 0;
  v34[4] = v5;
  v34[5] = a1;
  v34[6] = a2;
  sub_1A5B579BC(v38, (uint64_t)(v34 + 7));
  v34[12] = sub_1A5B5BF08;
  v34[13] = v29;
  swift_bridgeObjectRetain();
  v35 = v32;
  swift_retain();
  sub_1A5BA0C88((uint64_t)v12, (uint64_t)&unk_1EE7FAA90, (uint64_t)v34);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);

  swift_release();
}

uint64_t sub_1A5BA1A18()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_1A5BA5A04((uint64_t)&unk_1E4F6C678);
  result = swift_arrayDestroy();
  qword_1EE7FAA78 = v0;
  return result;
}

id static CSFFeatureManager.cachedFeatureObject(id:)(uint64_t a1, unint64_t a2)
{
  id v2;
  void *v3;
  id v4;

  v2 = sub_1A5B5100C(a1, a2);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = CloudFeature.cloudFeatureObject.getter();

  return v4;
}

uint64_t sub_1A5BA1EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;

  v8[11] = a8;
  v8[12] = v10;
  v8[9] = a6;
  v8[10] = a7;
  v8[7] = a4;
  v8[8] = a5;
  return swift_task_switch();
}

uint64_t sub_1A5BA1EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  char *v7;

  if (qword_1ED110EB0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  sub_1A5B569A4(*(_QWORD *)(v0 + 80), v0 + 16);
  v4 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 104) = v4;
  sub_1A5B579BC((__int128 *)(v0 + 16), (uint64_t)(v4 + 2));
  v4[7] = v2;
  v4[8] = v1;
  v4[9] = v3;
  v7 = (char *)&dword_1EE7FAF48 + dword_1EE7FAF48;
  swift_bridgeObjectRetain();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v5;
  *v5 = v0;
  v5[1] = sub_1A5BA1FE8;
  return ((uint64_t (*)(_QWORD, _QWORD, void *, _QWORD *))v7)(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), &unk_1EE7FAC68, v4);
}

uint64_t sub_1A5BA1FE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 120) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    *(_QWORD *)(v4 + 128) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1A5BA2064()
{
  uint64_t v0;
  void *v1;
  void (*v2)(void *, _QWORD);
  id v3;

  v1 = *(void **)(v0 + 128);
  v2 = *(void (**)(void *, _QWORD))(v0 + 88);
  v3 = v1;
  v2(v1, 0);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BA20B8()
{
  uint64_t v0;
  void *v1;
  void (*v2)(void *, uint64_t);
  id v3;

  v1 = *(void **)(v0 + 120);
  v2 = *(void (**)(void *, uint64_t))(v0 + 88);
  swift_release();
  v3 = v1;
  v2(v1, 1);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BA211C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  return swift_task_switch();
}

uint64_t sub_1A5BA2138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 72), *(_QWORD *)(*(_QWORD *)(v0 + 72) + 24));
  *(_QWORD *)(v0 + 40) = &type metadata for FeatureFlag;
  *(_QWORD *)(v0 + 48) = sub_1A5B5D68C();
  *(_BYTE *)(v0 + 16) = 0;
  v4 = sub_1A5BC9A10();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v5 = *v3;
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v6;
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v2;
  *(_QWORD *)(v6 + 32) = v1;
  *(_BYTE *)(v6 + 40) = (v4 & 1) == 0;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v7;
  type metadata accessor for CloudFeature();
  *v7 = v0;
  v7[1] = sub_1A5BA2240;
  return sub_1A5BCA0DC();
}

uint64_t sub_1A5BA2240()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5BA22AC()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 64) = *(_QWORD *)(v0 + 56);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BA22C0()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void static CSFFeatureManager.getFeatureEligibility(for:bundleID:completion:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void *, uint64_t), uint64_t a6)
{
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;

  if (qword_1ED1112D8 != -1)
    swift_once();
  v12 = sub_1A5BC9A64();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED1112C0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v13 = sub_1A5BC9A4C();
  v14 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    v18 = v16;
    *(_DWORD *)v15 = 136315394;
    swift_bridgeObjectRetain();
    sub_1A5B58A30(a1, a2, &v18);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1A5B58A30(a3, a4, &v18);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v13, v14, "Checking feature eligibility with feature id: %s, bundle id: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v16, -1, -1);
    MEMORY[0x1A85B2FC0](v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v17 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  sub_1A5B9C2F8(a1, a2, a3, a4, a5, a6);

}

uint64_t static CSFFeatureManager.getFeatureEligibility(forFeatureWithId:bundleId:completion:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(_QWORD, void *), uint64_t a6)
{
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint8_t *v17;
  void (*v19)(_QWORD, void *);
  uint64_t v20;

  if (qword_1ED1112D8 != -1)
    swift_once();
  v12 = sub_1A5BC9A64();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED1112C0);
  v13 = sub_1A5BC9A4C();
  v14 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v13, v14))
  {
    v19 = a5;
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v20 = v16;
    *(_DWORD *)v15 = 136315138;
    sub_1A5B58A30(0xD00000000000003CLL, 0x80000001A5BD2C70, &v20);
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v13, v14, "%s [objc]", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v16, -1, -1);
    v17 = v15;
    a5 = v19;
    MEMORY[0x1A85B2FC0](v17, -1, -1);
  }

  swift_retain();
  sub_1A5BA5B30(a1, a2, a3, a4, a5, a6);
  return swift_release();
}

uint64_t static CSFFeatureManager.requestGeoClassification(forFeatureID:bundleID:altDSID:ignoreCache:completion:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v24;
  uint64_t v26;

  if (qword_1ED1112D8 != -1)
    swift_once();
  v16 = sub_1A5BC9A64();
  __swift_project_value_buffer(v16, (uint64_t)qword_1ED1112C0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v17 = sub_1A5BC9A4C();
  v18 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v24 = a6;
    v20 = swift_slowAlloc();
    v26 = v20;
    *(_DWORD *)v19 = 136315394;
    swift_bridgeObjectRetain();
    sub_1A5B58A30(a1, a2, &v26);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1A5B58A30(a3, a4, &v26);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v17, v18, "Checking geoclassification for feature id: %s and bundle id %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    v21 = v20;
    a6 = v24;
    MEMORY[0x1A85B2FC0](v21, -1, -1);
    MEMORY[0x1A85B2FC0](v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v22 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  swift_retain();
  sub_1A5B9D73C(a1, a2, a3, a4, a5, a6, a7 & 1, v22, a8, a9);

  return swift_release();
}

void sub_1A5BA29CC(char *a1, char a2, void (*a3)(uint64_t, uint64_t, char *))
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  if ((a2 & 1) != 0)
  {
    v5 = a1;
    v6 = 0;
    v7 = 0;
    v8 = a1;
  }
  else
  {
    v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification];
    v10 = *(_QWORD *)&a1[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_geoClassification + 8];
    sub_1A5BA98D4(a1);
    swift_bridgeObjectRetain();
    v6 = sub_1A5B95F7C(v9, v10);
    v7 = a1[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_isBeta];
    v8 = 0;
  }
  a3(v6, v7, v8);
  sub_1A5BA5B20(a1);
}

void sub_1A5BA2B40(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  id v8;

  if (a3)
    v7 = sub_1A5BC9824();
  else
    v7 = 0;
  v8 = (id)v7;
  (*(void (**)(uint64_t, uint64_t, _QWORD))(a4 + 16))(a4, a1, a2 & 1);

}

void static CSFFeatureManager.requestGeoClassification(forFeatureID:bundleID:ignoreCache:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(uint64_t, _QWORD, void *), uint64_t a7)
{
  id v10;
  void *v11;
  id v12;
  id v13;
  void *ObjCClassFromMetadata;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void (*v19)(uint64_t, _QWORD, void *);
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  void *v24;
  _BYTE *v25;
  _QWORD aBlock[6];

  v10 = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, sel_aa_primaryAppleAccount);

    if (v12 && (v13 = objc_msgSend(v12, sel_aa_altDSID), v12, v13))
    {
      sub_1A5BC9B60();

      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      v15 = (void *)sub_1A5BC9B3C();
      v16 = (void *)sub_1A5BC9B3C();
      v17 = (void *)sub_1A5BC9B3C();
      swift_bridgeObjectRelease();
      aBlock[4] = a6;
      aBlock[5] = a7;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1A5BA0DD4;
      aBlock[3] = &block_descriptor_5;
      v18 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(ObjCClassFromMetadata, sel_requestGeoClassificationForFeatureID_bundleID_altDSID_ignoreCache_completion_, v15, v16, v17, a5 & 1, v18);
      _Block_release(v18);

    }
    else
    {
      if (qword_1ED1112D8 != -1)
        swift_once();
      v19 = a6;
      v20 = sub_1A5BC9A64();
      __swift_project_value_buffer(v20, (uint64_t)qword_1ED1112C0);
      v21 = sub_1A5BC9A4C();
      v22 = sub_1A5BC9D88();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_1A5B4D000, v21, v22, "Unable to access altDSID", v23, 2u);
        MEMORY[0x1A85B2FC0](v23, -1, -1);
      }

      sub_1A5B584A8();
      v24 = (void *)swift_allocError();
      *v25 = 3;
      v19(3, 0, v24);

    }
  }
  else
  {
    __break(1u);
  }
}

id static CSFFeatureManager.addFeatureChangeObserver(change:)(uint64_t a1, uint64_t a2)
{
  if (qword_1ED110E10 != -1)
    swift_once();
  return NotificationObservation.addObserver(change:)(a1, a2);
}

id static CSFFeatureManager.addTicketChangeObserver(featureName:change:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  id v10;

  if (qword_1ED110E10 != -1)
    swift_once();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v4;
  v9[3] = a1;
  v9[4] = a2;
  v9[5] = a3;
  v9[6] = a4;
  swift_bridgeObjectRetain();
  swift_retain();
  v10 = NotificationObservation.addTicketObserver(change:)((uint64_t)sub_1A5BA6370, (uint64_t)v9);
  swift_release();
  return v10;
}

uint64_t sub_1A5BA3060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A5BC9CF8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = a1;
  v14[5] = a2;
  v14[6] = a3;
  v14[7] = a4;
  v14[8] = a5;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A5BA0C88((uint64_t)v12, (uint64_t)&unk_1EE7FAC58, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_1A5BA3154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;

  v8[19] = a7;
  v8[20] = a8;
  v8[17] = a5;
  v8[18] = a6;
  v8[16] = a4;
  return swift_task_switch();
}

uint64_t sub_1A5BA3174()
{
  _QWORD *v0;
  void *ObjCClassFromMetadata;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v2 = sub_1A5BC9B3C();
  v0[21] = v2;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1A5BA323C;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_1A5BA3334;
  v4[3] = &block_descriptor_203;
  v4[4] = v3;
  objc_msgSend(ObjCClassFromMetadata, sel_getTicketStatusFromCacheForFeature_completionHandler_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_1A5BA323C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 176) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1A5BA329C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 120);

  (*(void (**)(void *))(v0 + 152))(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BA32E0()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 168);
  v2 = *(void **)(v0 + 176);
  swift_willThrow();

  (*(void (**)(_QWORD))(v0 + 152))(0);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BA3334(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  id v9;
  void *v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v10 = a2;
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + 64) + 40);
    v9 = a2;
    sub_1A5B78E14((uint64_t)&v10, v8, &qword_1EE7FAA58);
    return swift_continuation_throwingResume();
  }
}

void _sSo17CSFFeatureManagerC25CloudSubscriptionFeaturesE27removeFeatureChangeObserver5tokenySo8NSObject_p_tFZ_0(void *a1)
{
  if (qword_1ED110E10 != -1)
    swift_once();
  _s25CloudSubscriptionFeatures23NotificationObservationC14removeObserver5tokenySo8NSObject_p_tF_0(a1);
}

void static CSFFeatureManager.processPushNotification(dictionary:)()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  id v25;
  uint64_t v26;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (!v1)
    goto LABEL_9;
  v2 = sub_1A5BC9B60();
  v4 = v3;

  if (qword_1EE7FA228 != -1)
    swift_once();
  v5 = sub_1A5B72734(v2, v4, qword_1EE7FAA78);
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
  {
    if (qword_1ED1110F0 != -1)
      swift_once();
    v6 = sub_1A5BC9A64();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED111100);
    swift_bridgeObjectRetain_n();
    v7 = sub_1A5BC9A4C();
    v8 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v26 = v10;
      *(_DWORD *)v9 = 136315138;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAA98);
      v11 = sub_1A5BC9B9C();
      sub_1A5B58A30(v11, v12, &v26);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5B4D000, v7, v8, "processing push notification: %s, posting darwin notification", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v10, -1, -1);
      MEMORY[0x1A85B2FC0](v9, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v17 = objc_msgSend((id)objc_opt_self(), sel_defaultStore);
    if (v17)
    {
      v18 = v17;
      v19 = objc_msgSend(v17, sel_aa_primaryAppleAccount);

      if (v19 && (v20 = objc_msgSend(v19, sel_aa_altDSID), v19, v20))
      {
        v21 = sub_1A5BC9B60();
        v23 = v22;

        if (qword_1ED111118 != -1)
          swift_once();
        sub_1A5B8BDEC(v21, v23);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1ED111118 != -1)
          swift_once();
        sub_1A5B8BDEC(0, 0);
      }
      v24 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
      v25 = objc_msgSend(v24, sel_controller);

      sub_1A5BB72A0();
      sub_1A5B8B314();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
LABEL_9:
    if (qword_1ED1110F0 != -1)
      swift_once();
    v13 = sub_1A5BC9A64();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED111100);
    v14 = sub_1A5BC9A4C();
    v15 = sub_1A5BC9D88();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      MEMORY[0x1A85B2FC0](v16, -1, -1);
    }

    objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_clearFeatureCacheAndNotify);
  }
}

void static CSFFeatureManager.clearFeatureCacheAndNotify()()
{
  sub_1A5BA6374("Cache clear request", sub_1A5B97D9C);
}

void static CSFFeatureManager.clearTicketCacheAndNotify()()
{
  sub_1A5BA6374("Ticket cache clear request received.", sub_1A5B97DD4);
}

uint64_t static CSFFeatureManager.getSharedAlbumsStatus()()
{
  return swift_task_switch();
}

uint64_t sub_1A5BA3C58()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;

  if (qword_1ED1112D8 != -1)
    swift_once();
  v1 = sub_1A5BC9A64();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED1112C0);
  v2 = sub_1A5BC9A4C();
  v3 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10 = v5;
    *(_DWORD *)v4 = 136315138;
    v0[2] = sub_1A5B58A30(0xD000000000000017, 0x80000001A5BD2B30, &v10);
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v2, v3, "%s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v5, -1, -1);
    MEMORY[0x1A85B2FC0](v4, -1, -1);
  }

  v6 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  v0[3] = v6;
  v7 = swift_task_alloc();
  v0[4] = v7;
  *(_QWORD *)(v7 + 16) = v6;
  v8 = (_QWORD *)swift_task_alloc();
  v0[5] = v8;
  *v8 = v0;
  v8[1] = sub_1A5BA3E64;
  return sub_1A5BCA0DC();
}

uint64_t sub_1A5BA3E64()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5BA3ED0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_1A5BA3F08()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 24);
  swift_task_dealloc();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t static CSFFeatureManager.getTicketStatus(forFeature:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EE7FAAB0 + dword_1EE7FAAB0);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1A5B6131C;
  return v7(a1, a2);
}

uint64_t sub_1A5BA40DC(int a1, void *aBlock)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v2[2] = _Block_copy(aBlock);
  v3 = sub_1A5BC9B60();
  v5 = v4;
  v2[3] = v4;
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EE7FAAB0 + dword_1EE7FAAB0);
  v6 = (_QWORD *)swift_task_alloc();
  v2[4] = v6;
  *v6 = v2;
  v6[1] = sub_1A5BA4164;
  return v8(v3, v5);
}

uint64_t sub_1A5BA4164(void *a1)
{
  void *v1;
  uint64_t *v2;
  void *v3;
  uint64_t v5;
  void (**v6)(_QWORD, _QWORD, _QWORD);
  void *v7;

  v3 = v1;
  v5 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  v6 = *(void (***)(_QWORD, _QWORD, _QWORD))(v5 + 16);
  if (v3)
  {
    v7 = (void *)sub_1A5BC9824();

    ((void (**)(_QWORD, _QWORD, void *))v6)[2](v6, 0, v7);
    _Block_release(v6);
  }
  else
  {
    ((void (**)(_QWORD, void *, _QWORD))v6)[2](*(_QWORD *)(v5 + 16), a1, 0);
    _Block_release(v6);

  }
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t static CSFFeatureManager.getTicketStatusFromCache(forFeature:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EE7FAAC0 + dword_1EE7FAAC0);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1A5BA9BF0;
  return v7(a1, a2);
}

uint64_t sub_1A5BA43B8(int a1, void *aBlock)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v2[2] = _Block_copy(aBlock);
  v3 = sub_1A5BC9B60();
  v5 = v4;
  v2[3] = v4;
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EE7FAAC0 + dword_1EE7FAAC0);
  v6 = (_QWORD *)swift_task_alloc();
  v2[4] = v6;
  *v6 = v2;
  v6[1] = sub_1A5BA4164;
  return v8(v3, v5);
}

uint64_t static CSFFeatureManager.getTicket(forFeature:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EE7FAAD0 + dword_1EE7FAAD0);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1A5BA9BF0;
  return v7(a1, a2);
}

uint64_t sub_1A5BA45D8(int a1, void *aBlock)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v2[2] = _Block_copy(aBlock);
  v3 = sub_1A5BC9B60();
  v5 = v4;
  v2[3] = v4;
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1EE7FAAD0 + dword_1EE7FAAD0);
  v6 = (_QWORD *)swift_task_alloc();
  v2[4] = v6;
  *v6 = v2;
  v6[1] = sub_1A5BA9C00;
  return v8(v3, v5);
}

uint64_t static CSFFeatureManager.deviceHasAnyTicket()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = v0;
  return swift_task_switch();
}

uint64_t sub_1A5BA4678()
{
  _QWORD *v0;
  void *ObjCClassFromMetadata;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v2 = sub_1A5BC9B3C();
  v0[17] = v2;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1A5BA4744;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_1A5BA3334;
  v4[3] = &block_descriptor_21;
  v4[4] = v3;
  objc_msgSend(ObjCClassFromMetadata, sel_getTicketStatusFromCacheForFeature_completionHandler_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_1A5BA4744()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

id sub_1A5BA47A4()
{
  uint64_t v0;
  void *v1;
  id result;
  void *v3;
  id v4;
  char v5;

  v1 = *(void **)(v0 + 120);

  objc_allocWithZone((Class)type metadata accessor for TicketStatus());
  result = TicketStatus.init(rawValue:)(0x6465756575716E65, 0xE800000000000000);
  if (result)
  {
    v3 = result;
    if (v1)
    {
      v4 = v1;
      v5 = sub_1A5BC9DF4();

    }
    else
    {
      v5 = 0;
      v4 = result;
    }

    return (id)(*(uint64_t (**)(_QWORD))(v0 + 8))(v5 & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5BA4850()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  void *v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;

  v1 = *(void **)(v0 + 136);
  swift_willThrow();

  if (qword_1ED1112D8 != -1)
    swift_once();
  v2 = *(void **)(v0 + 144);
  v3 = sub_1A5BC9A64();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED1112C0);
  v4 = v2;
  v5 = v2;
  v6 = sub_1A5BC9A4C();
  v7 = sub_1A5BC9D88();
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(void **)(v0 + 144);
  if (v8)
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138412290;
    v12 = v9;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 80) = v13;
    sub_1A5BC9E18();
    *v11 = v13;

    _os_log_impl(&dword_1A5B4D000, v6, v7, "Error getting ticket status from cache: %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v11, -1, -1);
    MEMORY[0x1A85B2FC0](v10, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1A5BA4B40(const void *a1)
{
  uint64_t v1;
  uint64_t ObjCClassMetadata;
  _QWORD *v3;

  *(_QWORD *)(v1 + 16) = _Block_copy(a1);
  ObjCClassMetadata = swift_getObjCClassMetadata();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v3;
  *v3 = v1;
  v3[1] = sub_1A5BA4BB4;
  v3[16] = ObjCClassMetadata;
  return swift_task_switch();
}

uint64_t sub_1A5BA4BB4(char a1)
{
  uint64_t *v1;
  void (**v3)(_QWORD, _QWORD);
  uint64_t v5;

  v3 = *(void (***)(_QWORD, _QWORD))(*v1 + 16);
  v5 = *v1;
  swift_task_dealloc();
  v3[2](v3, a1 & 1);
  _Block_release(v3);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t static CSFFeatureManager.clearCFUGate(name:)()
{
  return swift_task_switch();
}

uint64_t sub_1A5BA4C2C()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  v0[2] = v1;
  v2 = swift_task_alloc();
  v0[3] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[4] = v3;
  *v3 = v0;
  v3[1] = sub_1A5BA4CE8;
  return sub_1A5BCA0DC();
}

uint64_t sub_1A5BA4CE8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5BA4D54()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BA4D88()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  swift_task_dealloc();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static CSFFeatureManager.clearCFU()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EE7FAAF0 + dword_1EE7FAAF0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1A5B81FC4;
  return v3();
}

uint64_t sub_1A5BA4F2C(const void *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  *(_QWORD *)(v1 + 16) = _Block_copy(a1);
  v4 = (uint64_t (__cdecl *)())((char *)&dword_1EE7FAAF0 + dword_1EE7FAAF0);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1A5BA9BFC;
  return v4();
}

uint64_t static CSFFeatureManager.postCFUIfEligible()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EE7FAB00 + dword_1EE7FAB00);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1A5B81FC4;
  return v3();
}

uint64_t sub_1A5BA50F8(const void *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  *(_QWORD *)(v1 + 16) = _Block_copy(a1);
  v4 = (uint64_t (__cdecl *)())((char *)&dword_1EE7FAB00 + dword_1EE7FAB00);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1A5BA9BFC;
  return v4();
}

uint64_t static CSFFeatureManager.gmOptInToggle()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EE7FAB10 + dword_1EE7FAB10);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1A5BA51B0;
  return v3();
}

uint64_t sub_1A5BA51B0(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  swift_task_dealloc();
  if (v1)
    v5 = 0;
  else
    v5 = a1 & 1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_1A5BA5320(const void *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  *(_QWORD *)(v1 + 16) = _Block_copy(a1);
  v4 = (uint64_t (__cdecl *)())((char *)&dword_1EE7FAB10 + dword_1EE7FAB10);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1A5BA5380;
  return v4();
}

uint64_t sub_1A5BA5380(char a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = *v2;
  swift_task_dealloc();
  v5 = *(_QWORD *)(v4 + 16);
  if (v1)
  {
    v6 = (void *)sub_1A5BC9824();

    (*(void (**)(uint64_t, _QWORD, void *))(v5 + 16))(v5, 0, v6);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v5 + 16))(*(_QWORD *)(v4 + 16), a1 & 1, 0);
  }
  _Block_release(*(const void **)(v4 + 16));
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t static CSFFeatureManager.forcePostCFU()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_1EE7FAB20 + dword_1EE7FAB20);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1A5B65618;
  return v3();
}

uint64_t sub_1A5BA5590(const void *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t (__cdecl *v4)();

  *(_QWORD *)(v1 + 16) = _Block_copy(a1);
  v4 = (uint64_t (__cdecl *)())((char *)&dword_1EE7FAB20 + dword_1EE7FAB20);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_1A5BA55F0;
  return v4();
}

uint64_t sub_1A5BA55F0()
{
  void *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *v1;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 16);
  if (v0)
  {
    v4 = (void *)sub_1A5BC9824();

    (*(void (**)(uint64_t, void *))(v3 + 16))(v3, v4);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v3 + 16))(*(_QWORD *)(v2 + 16), 0);
  }
  _Block_release(*(const void **)(v2 + 16));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1A5BA5688(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_1A5BA56A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_1A5B81FC4;
  return v6();
}

uint64_t sub_1A5BA56FC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_1A5B81FC4;
  return v7();
}

uint64_t sub_1A5BA5750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1A5BC9CF8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1A5BC9CEC();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1A5B4FBE8(a1, &qword_1ED1112B0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A5BC9CBC();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_1A5BA589C(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_1A5BC9E18();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t sub_1A5BA594C(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_1A5BA59B4;
  return v5(v2 + 32);
}

uint64_t sub_1A5BA59B4()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1A5BA5A04(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1A5BC9D58();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1A5BB1648(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1A5BA5A9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v6;

  v6 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 96);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1A5B81FC4;
  *(_OWORD *)(v3 + 88) = v4;
  *(_QWORD *)(v3 + 72) = v2;
  *(_QWORD *)(v3 + 80) = v0 + 56;
  *(_OWORD *)(v3 + 56) = v6;
  return swift_task_switch();
}

void sub_1A5BA5B20(id a1)
{

}

uint64_t sub_1A5BA5B30(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(_QWORD, void *), uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v20;

  v12 = qword_1ED1112D8;
  swift_retain();
  if (v12 != -1)
    swift_once();
  v13 = sub_1A5BC9A64();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED1112C0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v14 = sub_1A5BC9A4C();
  v15 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v20 = v17;
    *(_DWORD *)v16 = 136315394;
    swift_bridgeObjectRetain();
    sub_1A5B58A30(a1, a2, &v20);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1A5B58A30(a3, a4, &v20);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v14, v15, "Checking feature eligibility with feature id: %s, bundle id: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v17, -1, -1);
    MEMORY[0x1A85B2FC0](v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v18 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  swift_retain();
  sub_1A5B9CCD0(a1, a2, a3, a4, v18, a5, a6);

  return swift_release_n();
}

void sub_1A5BA5DB0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, char a7, void *aBlock)
{
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  _Block_copy(aBlock);
  if (qword_1ED1112D8 != -1)
    swift_once();
  v16 = sub_1A5BC9A64();
  __swift_project_value_buffer(v16, (uint64_t)qword_1ED1112C0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v17 = sub_1A5BC9A4C();
  v18 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v17, v18))
  {
    v25 = a1;
    v19 = swift_slowAlloc();
    v24 = a6;
    v20 = swift_slowAlloc();
    v26 = v20;
    *(_DWORD *)v19 = 136315394;
    swift_bridgeObjectRetain();
    sub_1A5B58A30(v25, a2, &v26);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v19 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1A5B58A30(a3, a4, &v26);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v17, v18, "Checking geoclassification for feature id: %s and bundle id %s", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    v21 = v20;
    a6 = v24;
    MEMORY[0x1A85B2FC0](v21, -1, -1);
    v22 = v19;
    a1 = v25;
    MEMORY[0x1A85B2FC0](v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v23 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  _Block_copy(aBlock);
  sub_1A5B9D188(a1, a2, a3, a4, a5, a6, a7 & 1, v23, aBlock);
  _Block_release(aBlock);

  _Block_release(aBlock);
}

void sub_1A5BA6050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, void (**a7)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *ObjCClassFromMetadata;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  void *v24;
  _BYTE *v25;
  void *v26;
  char v27;
  _QWORD aBlock[6];

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a7;
  v10 = (void *)objc_opt_self();
  _Block_copy(a7);
  v11 = objc_msgSend(v10, sel_defaultStore);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, sel_aa_primaryAppleAccount);

    if (v13 && (v14 = objc_msgSend(v13, sel_aa_altDSID), v13, v14))
    {
      sub_1A5BC9B60();
      v27 = a5;

      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      v16 = (void *)sub_1A5BC9B3C();
      v17 = (void *)sub_1A5BC9B3C();
      v18 = (void *)sub_1A5BC9B3C();
      swift_bridgeObjectRelease();
      aBlock[4] = sub_1A5B9D718;
      aBlock[5] = v9;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1A5BA0DD4;
      aBlock[3] = &block_descriptor_172;
      v19 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(ObjCClassFromMetadata, sel_requestGeoClassificationForFeatureID_bundleID_altDSID_ignoreCache_completion_, v16, v17, v18, v27 & 1, v19);
      _Block_release(v19);
      swift_release();

    }
    else
    {
      if (qword_1ED1112D8 != -1)
        swift_once();
      v20 = sub_1A5BC9A64();
      __swift_project_value_buffer(v20, (uint64_t)qword_1ED1112C0);
      v21 = sub_1A5BC9A4C();
      v22 = sub_1A5BC9D88();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_1A5B4D000, v21, v22, "Unable to access altDSID", v23, 2u);
        MEMORY[0x1A85B2FC0](v23, -1, -1);
      }

      sub_1A5B584A8();
      v24 = (void *)swift_allocError();
      *v25 = 3;
      v26 = (void *)sub_1A5BC9824();
      ((void (**)(_QWORD, uint64_t, _QWORD, void *))a7)[2](a7, 3, 0, v26);

      swift_release();
    }
  }
  else
  {
    _Block_release(a7);
    __break(1u);
  }
}

void sub_1A5BA6374(const char *a1, void (*a2)(void))
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  id v8;

  if (qword_1ED1112D8 != -1)
    swift_once();
  v4 = sub_1A5BC9A64();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED1112C0);
  v5 = sub_1A5BC9A4C();
  v6 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1A5B4D000, v5, v6, a1, v7, 2u);
    MEMORY[0x1A85B2FC0](v7, -1, -1);
  }

  v8 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  a2();

}

uint64_t _sSo17CSFFeatureManagerC25CloudSubscriptionFeaturesE32refreshAllGeoclassificationCacheyyFZ_0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;

  if (qword_1ED1112D8 != -1)
    swift_once();
  v0 = sub_1A5BC9A64();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED1112C0);
  v1 = sub_1A5BC9A4C();
  v2 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1A5B4D000, v1, v2, "Geoclassification cache refresh request", v3, 2u);
    MEMORY[0x1A85B2FC0](v3, -1, -1);
  }

  v4 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v5 = (void *)sub_1A5BC9B3C();
  v6 = objc_msgSend(v4, sel_initWithSuiteName_, v5);

  v7 = sub_1A5B5C1B8(v6);
  v8 = sub_1A5B7C394();
  sub_1A5B8AD20((uint64_t)v8, v9);

  return swift_bridgeObjectRelease();
}

BOOL _sSo17CSFFeatureManagerC25CloudSubscriptionFeaturesE02isC10SubscriberSbyFZ_0()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  char v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  int v13;
  int v14;
  _BYTE v17[40];
  _OWORD v18[2];
  uint64_t v19;
  __int128 v20;
  unint64_t v21;
  _UNKNOWN **v22;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedServerWithNoUrlCache);
  v21 = sub_1A5BA9940();
  v22 = &off_1E4F6DDF0;
  *(_QWORD *)&v20 = v0;
  sub_1A5B57F84();
  v2 = v1;
  memset(v18, 0, sizeof(v18));
  v19 = 0;
  sub_1A5B579BC(&v20, (uint64_t)v17);
  ObjectType = swift_getObjectType();
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(ObjectType, v2);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1A5B4FBE8((uint64_t)v18, &qword_1ED10FED0);
  if (v4 == 2)
  {
    if (qword_1ED1112D8 != -1)
      swift_once();
    v5 = sub_1A5BC9A64();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED1112C0);
    v6 = sub_1A5BC9A4C();
    v7 = sub_1A5BC9D88();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1A5B4D000, v6, v7, "SubscriptionStatus not found, defaulting to true", v8, 2u);
      MEMORY[0x1A85B2FC0](v8, -1, -1);
    }

  }
  if (qword_1ED1112D8 != -1)
    swift_once();
  v9 = sub_1A5BC9A64();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED1112C0);
  v10 = sub_1A5BC9A4C();
  v11 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v12 = 67109120;
    v13 = v4 & 1;
    if (v4 == 2)
      v14 = 1;
    else
      v14 = v4 & 1;
    LODWORD(v20) = v14;
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v10, v11, "SubscriptionStatus requested: %{BOOL}d", v12, 8u);
    MEMORY[0x1A85B2FC0](v12, -1, -1);

  }
  else
  {

    v13 = v4 & 1;
  }
  return v4 == 2 || v13 != 0;
}

uint64_t _sSo17CSFFeatureManagerC25CloudSubscriptionFeaturesE27shouldShowRSVPDataDetectorsSbyFZ_0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  char v7;
  char v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  char v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18[3];
  ValueMetadata *v19;
  unint64_t v20;

  if (qword_1ED1112D8 != -1)
    swift_once();
  v0 = sub_1A5BC9A64();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED1112C0);
  v1 = sub_1A5BC9A4C();
  v2 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v18[0] = v4;
    *(_DWORD *)v3 = 136315138;
    sub_1A5B58A30(0xD00000000000001DLL, 0x80000001A5BD2D30, v18);
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v1, v2, "%s requested", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v4, -1, -1);
    MEMORY[0x1A85B2FC0](v3, -1, -1);
  }

  v19 = &type metadata for FeatureFlag;
  v5 = sub_1A5B5D68C();
  v20 = v5;
  LOBYTE(v18[0]) = 1;
  v6 = sub_1A5BC9A10();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  if ((v6 & 1) == 0)
    goto LABEL_13;
  v19 = &type metadata for FeatureFlag;
  v20 = v5;
  LOBYTE(v18[0]) = 2;
  v7 = sub_1A5BC9A10();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  if ((v7 & 1) == 0)
    goto LABEL_13;
  v19 = &type metadata for FeatureFlag;
  v20 = v5;
  LOBYTE(v18[0]) = 3;
  v8 = sub_1A5BC9A10();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  if ((v8 & 1) != 0)
  {
    if (qword_1ED10FB68 != -1)
      swift_once();
    __swift_project_value_buffer(v0, (uint64_t)qword_1ED10FBE8);
    v9 = sub_1A5BC9A4C();
    v10 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1A5B4D000, v9, v10, "All feature flags for rsvp are enabled, skipping XPCConnetion call", v11, 2u);
      MEMORY[0x1A85B2FC0](v11, -1, -1);
    }

    v12 = 1;
  }
  else
  {
LABEL_13:
    if (qword_1EE7FA210 != -1)
      swift_once();
    v12 = sub_1A5B8A658();
    v13 = sub_1A5BC9A4C();
    v14 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v16 = swift_slowAlloc();
      v18[0] = v16;
      *(_DWORD *)v15 = 136315394;
      sub_1A5B58A30(0xD00000000000001DLL, 0x80000001A5BD2D30, v18);
      sub_1A5BC9E18();
      *(_WORD *)(v15 + 12) = 1026;
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v13, v14, "%s returning result: %{BOOL,public}d", (uint8_t *)v15, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v16, -1, -1);
      MEMORY[0x1A85B2FC0](v15, -1, -1);
    }

  }
  return v12 & 1;
}

uint64_t sub_1A5BA6DD4(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5B981B4(a1, *(void (**)(char *, uint64_t, uint64_t))(v1 + 16));
}

uint64_t sub_1A5BA6DDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return swift_task_switch();
}

uint64_t sub_1A5BA6DF4()
{
  uint64_t v0;
  id v1;
  BOOL v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27[2];

  v1 = _s25CloudSubscriptionFeatures18EligibilityFetcherC7currentAA0D0CvgZ_0();
  v2 = sub_1A5BBEC78();

  if (v2)
  {
    if ((sub_1A5B52EF8() & 1) != 0 && (v3 = sub_1A5BB4388(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88))) != 0)
    {
      v4 = v3;
      if (qword_1ED1112D8 != -1)
        swift_once();
      v5 = sub_1A5BC9A64();
      __swift_project_value_buffer(v5, (uint64_t)qword_1ED1112C0);
      v6 = v4;
      v7 = sub_1A5BC9A4C();
      v8 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = swift_slowAlloc();
        v25 = (_QWORD *)swift_slowAlloc();
        v26 = swift_slowAlloc();
        v27[0] = v26;
        *(_DWORD *)v9 = 136315394;
        *(_QWORD *)(v0 + 64) = sub_1A5B58A30(0xD00000000000001CLL, 0x80000001A5BD2B10, v27);
        sub_1A5BC9E18();
        *(_WORD *)(v9 + 12) = 2112;
        *(_QWORD *)(v0 + 72) = v6;
        v10 = v6;
        sub_1A5BC9E18();
        *v25 = v4;

        _os_log_impl(&dword_1A5B4D000, v7, v8, "%s Returning mocked ticket: %@", (uint8_t *)v9, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v25, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v26, -1, -1);
        MEMORY[0x1A85B2FC0](v9, -1, -1);
      }
      else
      {

      }
      v24 = *(id *)&v6[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status];

      return (*(uint64_t (**)(id))(v0 + 8))(v24);
    }
    else
    {
      if (qword_1ED1112D8 != -1)
        swift_once();
      v18 = sub_1A5BC9A64();
      *(_QWORD *)(v0 + 96) = __swift_project_value_buffer(v18, (uint64_t)qword_1ED1112C0);
      v19 = sub_1A5BC9A4C();
      v20 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        v22 = swift_slowAlloc();
        v27[0] = v22;
        *(_DWORD *)v21 = 136315138;
        *(_QWORD *)(v0 + 56) = sub_1A5B58A30(0xD00000000000001CLL, 0x80000001A5BD2B10, v27);
        sub_1A5BC9E18();
        _os_log_impl(&dword_1A5B4D000, v19, v20, "%s Attempting to get ticket status from daemon.", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v22, -1, -1);
        MEMORY[0x1A85B2FC0](v21, -1, -1);
      }

      *(_QWORD *)(v0 + 104) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
      v23 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 112) = v23;
      *v23 = v0;
      v23[1] = sub_1A5BA7390;
      return sub_1A5B98984(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
    }
  }
  else
  {
    if (qword_1ED1112D8 != -1)
      swift_once();
    v11 = sub_1A5BC9A64();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED1112C0);
    v12 = sub_1A5BC9A4C();
    v13 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v27[0] = v15;
      *(_DWORD *)v14 = 136315138;
      *(_QWORD *)(v0 + 16) = sub_1A5B58A30(0xD00000000000001CLL, 0x80000001A5BD2B10, v27);
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v12, v13, "%s Device is not eligible.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v15, -1, -1);
      MEMORY[0x1A85B2FC0](v14, -1, -1);
    }

    sub_1A5B584A8();
    swift_allocError();
    *v16 = 12;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1A5BA7390(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 120) = a1;
  *(_QWORD *)(v3 + 128) = v1;
  swift_task_dealloc();
  if (!v1)

  return swift_task_switch();
}

uint64_t sub_1A5BA7404()
{
  uint64_t v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(id *)(v0 + 120);
  v2 = sub_1A5BC9A4C();
  v3 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(void **)(v0 + 120);
    v5 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v11 = v10;
    *(_DWORD *)v5 = 136315394;
    *(_QWORD *)(v0 + 40) = sub_1A5B58A30(0xD00000000000001CLL, 0x80000001A5BD2B10, &v11);
    sub_1A5BC9E18();
    *(_WORD *)(v5 + 12) = 2112;
    *(_QWORD *)(v0 + 48) = v4;
    v6 = v4;
    sub_1A5BC9E18();
    *v9 = v4;

    _os_log_impl(&dword_1A5B4D000, v2, v3, "%s Returning ticket: %@", (uint8_t *)v5, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v10, -1, -1);
    MEMORY[0x1A85B2FC0](v5, -1, -1);
  }
  else
  {
    v7 = *(void **)(v0 + 120);

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120));
}

uint64_t sub_1A5BA75EC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 128);

  v2 = v1;
  v3 = v1;
  v4 = sub_1A5BC9A4C();
  v5 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 128);
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v14 = v13;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 24) = sub_1A5B58A30(0xD00000000000001CLL, 0x80000001A5BD2B10, &v14);
    sub_1A5BC9E18();
    *(_WORD *)(v7 + 12) = 2112;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 32) = v10;
    sub_1A5BC9E18();
    *v8 = v10;

    _os_log_impl(&dword_1A5B4D000, v4, v5, "%s Unable to get ticket with error: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v13, -1, -1);
    MEMORY[0x1A85B2FC0](v7, -1, -1);
  }
  else
  {
    v11 = *(void **)(v0 + 128);

  }
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BA77F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  return swift_task_switch();
}

uint64_t sub_1A5BA7854()
{
  uint64_t v0;
  id v1;
  BOOL v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  uint64_t v28[2];

  v28[1] = *MEMORY[0x1E0C80C00];
  v1 = _s25CloudSubscriptionFeatures18EligibilityFetcherC7currentAA0D0CvgZ_0();
  v2 = sub_1A5BBEC78();

  if (v2)
  {
    if ((sub_1A5B52EF8() & 1) != 0 && (v3 = sub_1A5BB4388(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96))) != 0)
    {
      v4 = v3;
      if (qword_1ED1112D8 != -1)
        swift_once();
      v5 = sub_1A5BC9A64();
      __swift_project_value_buffer(v5, (uint64_t)qword_1ED1112C0);
      v6 = v4;
      v7 = sub_1A5BC9A4C();
      v8 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = swift_slowAlloc();
        v10 = (_QWORD *)swift_slowAlloc();
        v27 = swift_slowAlloc();
        v28[0] = v27;
        *(_DWORD *)v9 = 136315394;
        *(_QWORD *)(v0 + 72) = sub_1A5B58A30(0xD000000000000025, 0x80000001A5BD2A90, v28);
        sub_1A5BC9E18();
        *(_WORD *)(v9 + 12) = 2112;
        v11 = *(void **)&v6[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status];
        *(_QWORD *)(v0 + 80) = v11;
        v12 = v11;
        sub_1A5BC9E18();
        *v10 = v11;

        _os_log_impl(&dword_1A5B4D000, v7, v8, "%s Returning mocked ticket: %@", (uint8_t *)v9, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v10, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v27, -1, -1);
        MEMORY[0x1A85B2FC0](v9, -1, -1);
      }
      else
      {

      }
      v26 = *(id *)&v6[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status];

      return (*(uint64_t (**)(id))(v0 + 8))(v26);
    }
    else
    {
      if (qword_1ED1112D8 != -1)
        swift_once();
      v20 = sub_1A5BC9A64();
      *(_QWORD *)(v0 + 104) = __swift_project_value_buffer(v20, (uint64_t)qword_1ED1112C0);
      v21 = sub_1A5BC9A4C();
      v22 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        v24 = swift_slowAlloc();
        v28[0] = v24;
        *(_DWORD *)v23 = 136315138;
        *(_QWORD *)(v0 + 64) = sub_1A5B58A30(0xD000000000000025, 0x80000001A5BD2A90, v28);
        sub_1A5BC9E18();
        _os_log_impl(&dword_1A5B4D000, v21, v22, "%s Attempting to get ticket status from cache.", v23, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v24, -1, -1);
        MEMORY[0x1A85B2FC0](v23, -1, -1);
      }

      *(_QWORD *)(v0 + 112) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
      v25 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 120) = v25;
      *v25 = v0;
      v25[1] = sub_1A5BA7E5C;
      return sub_1A5B9911C(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
    }
  }
  else
  {
    if (qword_1ED1112D8 != -1)
      swift_once();
    v13 = sub_1A5BC9A64();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED1112C0);
    v14 = sub_1A5BC9A4C();
    v15 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v28[0] = v17;
      *(_DWORD *)v16 = 136315138;
      *(_QWORD *)(v0 + 16) = sub_1A5B58A30(0xD000000000000025, 0x80000001A5BD2A90, v28);
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v14, v15, "%s Device is not eligible.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v17, -1, -1);
      MEMORY[0x1A85B2FC0](v16, -1, -1);
    }

    sub_1A5B584A8();
    swift_allocError();
    *v18 = 12;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1A5BA7E5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 128) = a1;
  *(_QWORD *)(v3 + 136) = v1;
  swift_task_dealloc();
  if (!v1)

  return swift_task_switch();
}

uint64_t sub_1A5BA7F1C()
{
  uint64_t v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  uint64_t v9;
  uint64_t v10[2];

  v10[1] = *MEMORY[0x1E0C80C00];
  v1 = *(id *)(v0 + 128);
  v2 = sub_1A5BC9A4C();
  v3 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v2, v3))
  {
    v9 = *(_QWORD *)(v0 + 128);
    v4 = swift_slowAlloc();
    v5 = (_QWORD *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v10[0] = v6;
    *(_DWORD *)v4 = 136315394;
    *(_QWORD *)(v0 + 40) = sub_1A5B58A30(0xD000000000000025, 0x80000001A5BD2A90, v10);
    sub_1A5BC9E18();
    *(_WORD *)(v4 + 12) = 2112;
    if (v9)
    {
      *(_QWORD *)(v0 + 56) = v1;
      v7 = v1;
    }
    else
    {
      *(_QWORD *)(v0 + 48) = 0;
    }
    sub_1A5BC9E18();
    *v5 = *(_QWORD *)(v0 + 128);

    _os_log_impl(&dword_1A5B4D000, v2, v3, "%s Returning ticket: %@", (uint8_t *)v4, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v5, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v6, -1, -1);
    MEMORY[0x1A85B2FC0](v4, -1, -1);
  }
  else
  {

  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 128));
}

uint64_t sub_1A5BA814C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;
  uint64_t v14[2];

  v14[1] = *MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + 136);

  v2 = v1;
  v3 = v1;
  v4 = sub_1A5BC9A4C();
  v5 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 136);
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v14[0] = v13;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 24) = sub_1A5B58A30(0xD000000000000025, 0x80000001A5BD2A90, v14);
    sub_1A5BC9E18();
    *(_WORD *)(v7 + 12) = 2112;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 32) = v10;
    sub_1A5BC9E18();
    *v8 = v10;

    _os_log_impl(&dword_1A5B4D000, v4, v5, "%s Unable to get ticket with error: %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v13, -1, -1);
    MEMORY[0x1A85B2FC0](v7, -1, -1);
  }
  else
  {
    v11 = *(void **)(v0 + 136);

  }
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BA8380(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  return swift_task_switch();
}

uint64_t sub_1A5BA8398()
{
  uint64_t v0;
  id v1;
  BOOL v2;
  _QWORD *v3;
  void *v4;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30[2];

  v1 = _s25CloudSubscriptionFeatures18EligibilityFetcherC7currentAA0D0CvgZ_0();
  v2 = sub_1A5BBEC78();

  if (v2)
  {
    if ((sub_1A5B52EF8() & 1) != 0 && (v3 = sub_1A5BB4388(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96))) != 0)
    {
      v4 = v3;
      if (qword_1ED1112D8 != -1)
        swift_once();
      v5 = sub_1A5BC9A64();
      __swift_project_value_buffer(v5, (uint64_t)qword_1ED1112C0);
      v6 = v4;
      v7 = sub_1A5BC9A4C();
      v8 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = swift_slowAlloc();
        v28 = (_QWORD *)swift_slowAlloc();
        v29 = swift_slowAlloc();
        v30[0] = v29;
        *(_DWORD *)v9 = 136315394;
        *(_QWORD *)(v0 + 72) = sub_1A5B58A30(0xD000000000000016, 0x80000001A5BD2A30, v30);
        sub_1A5BC9E18();
        *(_WORD *)(v9 + 12) = 2112;
        *(_QWORD *)(v0 + 80) = v6;
        v10 = v6;
        sub_1A5BC9E18();
        *v28 = v4;

        _os_log_impl(&dword_1A5B4D000, v7, v8, "%s Returning mocked ticket: %@", (uint8_t *)v9, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v28, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v29, -1, -1);
        MEMORY[0x1A85B2FC0](v9, -1, -1);
      }
      else
      {

      }
      return (*(uint64_t (**)(id))(v0 + 8))(v6);
    }
    else
    {
      if (qword_1ED1112D8 != -1)
        swift_once();
      v18 = sub_1A5BC9A64();
      *(_QWORD *)(v0 + 104) = __swift_project_value_buffer(v18, (uint64_t)qword_1ED1112C0);
      v19 = sub_1A5BC9A4C();
      v20 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        v22 = swift_slowAlloc();
        v30[0] = v22;
        *(_DWORD *)v21 = 136315138;
        *(_QWORD *)(v0 + 64) = sub_1A5B58A30(0xD000000000000016, 0x80000001A5BD2A30, v30);
        sub_1A5BC9E18();
        _os_log_impl(&dword_1A5B4D000, v19, v20, "%s Attempting to create new ticket.", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v22, -1, -1);
        MEMORY[0x1A85B2FC0](v21, -1, -1);
      }

      v24 = *(_QWORD *)(v0 + 88);
      v23 = *(_QWORD *)(v0 + 96);
      v25 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
      *(_QWORD *)(v0 + 112) = v25;
      v26 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 120) = v26;
      v26[2] = v25;
      v26[3] = v24;
      v26[4] = v23;
      v27 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 128) = v27;
      type metadata accessor for Ticket();
      *v27 = v0;
      v27[1] = sub_1A5BA8974;
      return sub_1A5BCA0DC();
    }
  }
  else
  {
    if (qword_1ED1112D8 != -1)
      swift_once();
    v11 = sub_1A5BC9A64();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED1112C0);
    v12 = sub_1A5BC9A4C();
    v13 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v30[0] = v15;
      *(_DWORD *)v14 = 136315138;
      *(_QWORD *)(v0 + 16) = sub_1A5B58A30(0xD000000000000016, 0x80000001A5BD2A30, v30);
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v12, v13, "%s Device is not eligible.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v15, -1, -1);
      MEMORY[0x1A85B2FC0](v14, -1, -1);
    }

    sub_1A5B584A8();
    swift_allocError();
    *v16 = 12;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1A5BA8974()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5BA89E0()
{
  uint64_t v0;
  id v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  id v5;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(id *)(v0 + 24);
  v2 = sub_1A5BC9A4C();
  v3 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v9 = v8;
    *(_DWORD *)v4 = 136315394;
    *(_QWORD *)(v0 + 48) = sub_1A5B58A30(0xD000000000000016, 0x80000001A5BD2A30, &v9);
    sub_1A5BC9E18();
    *(_WORD *)(v4 + 12) = 2112;
    *(_QWORD *)(v0 + 56) = v1;
    v5 = v1;
    sub_1A5BC9E18();
    *v7 = v1;

    _os_log_impl(&dword_1A5B4D000, v2, v3, "%s Returning ticket: %@", (uint8_t *)v4, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v7, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v8, -1, -1);
    MEMORY[0x1A85B2FC0](v4, -1, -1);
  }
  else
  {

  }
  return (*(uint64_t (**)(id))(v0 + 8))(v1);
}

uint64_t sub_1A5BA8BC4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;
  uint64_t v15;

  v1 = *(void **)(v0 + 136);
  v2 = *(void **)(v0 + 112);
  swift_task_dealloc();

  v3 = v1;
  v4 = v1;
  v5 = sub_1A5BC9A4C();
  v6 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = *(void **)(v0 + 136);
    v8 = swift_slowAlloc();
    v9 = (_QWORD *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v15 = v14;
    *(_DWORD *)v8 = 136315394;
    *(_QWORD *)(v0 + 32) = sub_1A5B58A30(0xD000000000000016, 0x80000001A5BD2A30, &v15);
    sub_1A5BC9E18();
    *(_WORD *)(v8 + 12) = 2112;
    v10 = v7;
    v11 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 40) = v11;
    sub_1A5BC9E18();
    *v9 = v11;

    _os_log_impl(&dword_1A5B4D000, v5, v6, "%s Unable to get ticket with error: %@", (uint8_t *)v8, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v14, -1, -1);
    MEMORY[0x1A85B2FC0](v8, -1, -1);
  }
  else
  {
    v12 = *(void **)(v0 + 136);

  }
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BA8DD0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5B9A7AC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A5BA8DD8()
{
  return swift_task_switch();
}

uint64_t sub_1A5BA8DEC()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  v0[2] = v1;
  v2 = swift_task_alloc();
  v0[3] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[4] = v3;
  *v3 = v0;
  v3[1] = sub_1A5BA8EA0;
  return sub_1A5BCA0DC();
}

uint64_t sub_1A5BA8EA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5BA8F0C()
{
  return swift_task_switch();
}

uint64_t sub_1A5BA8F20()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  v0[2] = v1;
  v2 = swift_task_alloc();
  v0[3] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[4] = v3;
  *v3 = v0;
  v3[1] = sub_1A5BA8EA0;
  return sub_1A5BCA0DC();
}

uint64_t sub_1A5BA8FD4()
{
  return swift_task_switch();
}

uint64_t sub_1A5BA8FE8()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  v0[2] = v1;
  v2 = swift_task_alloc();
  v0[3] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[4] = v3;
  *v3 = v0;
  v3[1] = sub_1A5BA90B4;
  return sub_1A5BCA0DC();
}

uint64_t sub_1A5BA90B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5BA9120()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 48));
}

uint64_t sub_1A5BA9158()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  swift_task_dealloc();

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1A5BA9194()
{
  return swift_task_switch();
}

uint64_t sub_1A5BA91A8()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for XPCCaller()), sel_init);
  v0[2] = v1;
  v2 = swift_task_alloc();
  v0[3] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[4] = v3;
  *v3 = v0;
  v3[1] = sub_1A5BA8EA0;
  return sub_1A5BCA0DC();
}

uint64_t sub_1A5BA9264()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A5BA9288()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  _QWORD *v3;

  v2 = *(const void **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1A5B81FC4;
  return ((uint64_t (*)(const void *))((char *)&dword_1EE7FAB28 + dword_1EE7FAB28))(v2);
}

uint64_t sub_1A5BA92F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1A5B81FC4;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EE7FAB38 + dword_1EE7FAB38))(v2, v3, v4);
}

uint64_t sub_1A5BA936C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1A5B81FC4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EE7FAB48 + dword_1EE7FAB48))(a1, v4, v5, v6);
}

uint64_t sub_1A5BA93F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1A5B81FC4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE7FAB58 + dword_1EE7FAB58))(a1, v4);
}

uint64_t sub_1A5BA9460()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  _QWORD *v3;

  v2 = *(const void **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1A5B81FC4;
  return ((uint64_t (*)(const void *))((char *)&dword_1EE7FAB68 + dword_1EE7FAB68))(v2);
}

uint64_t sub_1A5BA94CC()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  _QWORD *v3;

  v2 = *(const void **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1A5B81FC4;
  return ((uint64_t (*)(const void *))((char *)&dword_1EE7FAB88 + dword_1EE7FAB88))(v2);
}

uint64_t sub_1A5BA9538()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  _QWORD *v3;

  v2 = *(const void **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1A5B81FC4;
  return ((uint64_t (*)(const void *))((char *)&dword_1EE7FABA8 + dword_1EE7FABA8))(v2);
}

uint64_t sub_1A5BA95A4()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  _QWORD *v3;

  v2 = *(const void **)(v0 + 16);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1A5B81FC4;
  return ((uint64_t (*)(const void *))((char *)&dword_1EE7FABC8 + dword_1EE7FABC8))(v2);
}

uint64_t sub_1A5BA9610(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1A5B65618;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EE7FAB48 + dword_1EE7FAB48))(a1, v4, v5, v6);
}

uint64_t sub_1A5BA9698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1A5B81FC4;
  return ((uint64_t (*)(int, void *))((char *)&dword_1EE7FABE8 + dword_1EE7FABE8))(v2, v3);
}

uint64_t sub_1A5BA9710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1A5B81FC4;
  return ((uint64_t (*)(int, void *))((char *)&dword_1EE7FAC08 + dword_1EE7FAC08))(v2, v3);
}

uint64_t objectdestroy_113Tm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_1A5BA97B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1A5B81FC4;
  return ((uint64_t (*)(int, void *))((char *)&dword_1EE7FAC28 + dword_1EE7FAC28))(v2, v3);
}

uint64_t objectdestroy_37Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5BA9854()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1A5BA9878()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t objectdestroy_11Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5BA98B8()
{
  uint64_t *v0;

  return sub_1A5BA3060(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_1A5BA98C8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

id sub_1A5BA98D4(id a1)
{
  return a1;
}

void sub_1A5BA98E0(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

uint64_t sub_1A5BA98EC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5BA9914(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5B9BAE8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A5BA991C(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5B9B4E4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A5BA9924(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5B9AFB4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1A5BA992C(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5B9AB84(a1, *(_QWORD *)(v1 + 16));
}

void sub_1A5BA9934(uint64_t a1)
{
  uint64_t *v1;

  sub_1A5B99C98(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_1A5BA9940()
{
  unint64_t result;

  result = qword_1ED10FF90;
  if (!qword_1ED10FF90)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED10FF90);
  }
  return result;
}

uint64_t sub_1A5BA997C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5BA99B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = swift_task_alloc();
  v6 = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 16) = v5;
  *(_QWORD *)v5 = v1;
  *(_QWORD *)(v5 + 8) = sub_1A5B81FC4;
  *(_QWORD *)(v5 + 160) = v4;
  *(_OWORD *)(v5 + 144) = v6;
  *(_QWORD *)(v5 + 128) = v2;
  *(_QWORD *)(v5 + 136) = v3;
  return swift_task_switch();
}

uint64_t sub_1A5BA9A28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1A5B81FC4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE7FA808 + dword_1EE7FA808))(a1, v4);
}

uint64_t sub_1A5BA9A98()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5BA9AC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1 + 16;
  v6 = *(_QWORD *)(v1 + 56);
  v5 = *(_QWORD *)(v1 + 64);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1A5B65618;
  v7[10] = v6;
  v7[11] = v5;
  v7[8] = a1;
  v7[9] = v4;
  return swift_task_switch();
}

uint64_t sub_1A5BA9B38(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5B97970(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40));
}

uint64_t sub_1A5BA9B48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1A5B81FC4;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EE7FAC70 + dword_1EE7FAC70))(a1, v4);
}

void sub_1A5BA9C04(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[3];
  uint64_t v10;

  sub_1A5B56960(a1, (uint64_t)v9, &qword_1ED110560);
  v2 = v10;
  if (v10)
  {
    v3 = __swift_project_boxed_opaque_existential_1(v9, v10);
    v4 = *(_QWORD *)(v2 - 8);
    MEMORY[0x1E0C80A78](v3);
    v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v4 + 16))(v6);
    v7 = sub_1A5BCA0AC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    v7 = 0;
  }
  v8 = (void *)sub_1A5BC9B3C();
  objc_msgSend(v1, sel_setObject_forKey_, v7, v8);
  swift_unknownObjectRelease();

}

uint64_t sub_1A5BA9D14(uint64_t result, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  id v6;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40) = a2;
    v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5BA9DA0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 128) = a1;
  *(_QWORD *)(v2 + 136) = v3;
  return swift_task_switch();
}

uint64_t sub_1A5BA9DBC()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[17];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1A5BA9E50;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_1A5BA9D14;
  v3[3] = &block_descriptor_6;
  v3[4] = v2;
  objc_msgSend(v1, sel_configurationWithCompletion_, v3);
  return swift_continuation_await();
}

uint64_t sub_1A5BA9E50()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 144) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1A5BA9EB0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD **)(v0 + 128);
  v2[3] = sub_1A5BAC7A4();
  v2[4] = &off_1E4F6DEF8;
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BA9EF8()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BA9F34()
{
  void **v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;

  v1 = *v0;
  v2 = (void *)sub_1A5BC9B3C();
  v3 = objc_msgSend(v1, sel__urlStringForKey_, v2);

  if (!v3)
    return 0;
  v4 = sub_1A5BC9B60();

  return v4;
}

uint64_t sub_1A5BA9FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[24] = a2;
  v3[25] = v2;
  v3[23] = a1;
  return swift_task_switch();
}

uint64_t sub_1A5BA9FCC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD, _QWORD, uint64_t, uint64_t);

  v1 = v0[25];
  v0[26] = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  v0[27] = v2;
  ObjectType = swift_getObjectType();
  v0[28] = ObjectType;
  v6 = (uint64_t (*)(_QWORD, _QWORD, uint64_t, uint64_t))(**(int **)(v2 + 24) + *(_QWORD *)(v2 + 24));
  v4 = (_QWORD *)swift_task_alloc();
  v0[29] = v4;
  *v4 = v0;
  v4[1] = sub_1A5BAA05C;
  return v6(v0[23], v0[24], ObjectType, v2);
}

uint64_t sub_1A5BAA05C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;

  v6 = *v3;
  v7 = *v3;
  swift_task_dealloc();
  if (v2)
    return (*(uint64_t (**)(void))(v7 + 8))();
  *(_QWORD *)(v6 + 240) = a2;
  *(_QWORD *)(v6 + 248) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5BAA0DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _BYTE *v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 240);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 248);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
  }
  v4 = *(_QWORD *)(v0 + 200) + 72;
  swift_beginAccess();
  sub_1A5B56960(v4, v0 + 16, &qword_1ED10FED0);
  v5 = *(_QWORD *)(v0 + 40);
  sub_1A5B4FBE8(v0 + 16, &qword_1ED10FED0);
  if (v5)
  {
    v6 = *(_QWORD *)(v0 + 200);
    if (*(_QWORD *)(v6 + 96))
    {
      v7 = *(_QWORD *)(v0 + 184);
      v8 = *(_QWORD *)(v0 + 192);
      sub_1A5B569A4(v6 + 72, v0 + 96);
      v9 = *(_QWORD *)(v0 + 120);
      v10 = *(_QWORD *)(v0 + 128);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), v9);
      v2 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(v7, v8, v9, v10);
      v1 = v11;
      __swift_destroy_boxed_opaque_existential_1(v0 + 96);
      if (v1)
      {
        (*(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 32))(v2, v1, *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 224));
        return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
      }
    }
    sub_1A5B584A8();
    swift_allocError();
    *v16 = 5;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v12 = *(_QWORD **)(v0 + 200);
    v13 = v12[7];
    v14 = v12[8];
    __swift_project_boxed_opaque_existential_1(v12 + 4, v13);
    v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v14 + 8) + *(_QWORD *)(v14 + 8));
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 256) = v15;
    *v15 = v0;
    v15[1] = sub_1A5BAA2C0;
    return v17(v0 + 56, v13, v14);
  }
}

uint64_t sub_1A5BAA2C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5BAA324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v11;

  v1 = *(_QWORD *)(v0 + 200) + 72;
  swift_beginAccess();
  sub_1A5BAC514(v0 + 56, v1);
  swift_endAccess();
  v2 = *(_QWORD *)(v0 + 200);
  if (!*(_QWORD *)(v2 + 96))
    goto LABEL_4;
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 192);
  sub_1A5B569A4(v2 + 72, v0 + 96);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 128);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(v3, v4, v5, v6);
  v9 = v8;
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  if (v9)
  {
    (*(void (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 216) + 32))(v7, v9, *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 224));
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v7, v9);
  }
  else
  {
LABEL_4:
    sub_1A5B584A8();
    swift_allocError();
    *v11 = 5;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1A5BAA46C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BAA478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t ObjectType;

  v7 = *(_QWORD *)(v3 + 24);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, a3, ObjectType, v7);
}

uint64_t sub_1A5BAA4D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1A5BAD890;
  v6[24] = a2;
  v6[25] = v2;
  v6[23] = a1;
  return swift_task_switch();
}

uint64_t sub_1A5BAA548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t ObjectType;

  v9 = *(_QWORD *)(v4 + 24);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 32))(a1, a2, a3, a4, ObjectType, v9);
}

uint64_t sub_1A5BAA5B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40))(ObjectType, v1);
}

uint64_t sub_1A5BAA5F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, ObjectType, v3);
}

uint64_t sub_1A5BAA63C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  v1 = *(_QWORD *)(v0 + 24);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 64))(ObjectType, v1) & 1;
}

uint64_t sub_1A5BAA67C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v1 + 24);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 72))(a1, ObjectType, v3);
}

uint64_t sub_1A5BAA6C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD v17[4];
  _QWORD v18[3];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = a4;
  v21 = a1;
  v22 = a2;
  v23 = a3;
  sub_1A5BC9818();
  swift_allocObject();
  sub_1A5BC980C();
  sub_1A5BAC66C();
  v10 = sub_1A5BC9800();
  v12 = v11;
  result = swift_release();
  if (!v7)
  {
    sub_1A5B56960(v6 + 16, (uint64_t)v18, &qword_1ED10FED8);
    v14 = v19;
    if (v19)
    {
      v15 = v20;
      __swift_project_boxed_opaque_existential_1(v18, v19);
      v17[3] = MEMORY[0x1E0CB0338];
      v17[0] = v10;
      v17[1] = v12;
      v16 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8);
      sub_1A5B66D78(v10, v12);
      v16(v17, a5, a6, v14, v15);
      sub_1A5B5D9D4(v10, v12);
      sub_1A5B4FBE8((uint64_t)v17, &qword_1ED110560);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    }
    else
    {
      sub_1A5B5D9D4(v10, v12);
      return sub_1A5B4FBE8((uint64_t)v18, &qword_1ED10FED8);
    }
  }
  return result;
}

uint64_t sub_1A5BAA820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD v14[4];
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  sub_1A5BC9818();
  swift_allocObject();
  sub_1A5BC980C();
  type metadata accessor for NextRefreshCacheBox();
  sub_1A5B50E80(&qword_1EE7FACC8, (uint64_t (*)(uint64_t))type metadata accessor for NextRefreshCacheBox, (uint64_t)&unk_1A5BCE5F0);
  v7 = sub_1A5BC9800();
  v9 = v8;
  result = swift_release();
  if (!v4)
  {
    sub_1A5B56960(v3 + 16, (uint64_t)v15, &qword_1ED10FED8);
    v11 = v16;
    if (v16)
    {
      v12 = v17;
      __swift_project_boxed_opaque_existential_1(v15, v16);
      v14[3] = MEMORY[0x1E0CB0338];
      v14[0] = v7;
      v14[1] = v9;
      v13 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8);
      sub_1A5B66D78(v7, v9);
      v13(v14, a2, a3, v11, v12);
      sub_1A5B5D9D4(v7, v9);
      sub_1A5B4FBE8((uint64_t)v14, &qword_1ED110560);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    }
    else
    {
      sub_1A5B5D9D4(v7, v9);
      return sub_1A5B4FBE8((uint64_t)v15, &qword_1ED10FED8);
    }
  }
  return result;
}

uint64_t sub_1A5BAA998(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD v16[4];
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a3;
  v20 = a1;
  v21 = a2;
  sub_1A5BC9818();
  swift_allocObject();
  sub_1A5BC980C();
  sub_1A5BAC628();
  v9 = sub_1A5BC9800();
  v11 = v10;
  result = swift_release();
  if (!v6)
  {
    sub_1A5B56960(v5 + 16, (uint64_t)v17, &qword_1ED10FED8);
    v13 = v18;
    if (v18)
    {
      v14 = v19;
      __swift_project_boxed_opaque_existential_1(v17, v18);
      v16[3] = MEMORY[0x1E0CB0338];
      v16[0] = v9;
      v16[1] = v11;
      v15 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 8);
      sub_1A5B66D78(v9, v11);
      v15(v16, a4, a5, v13, v14);
      sub_1A5B5D9D4(v9, v11);
      sub_1A5B4FBE8((uint64_t)v16, &qword_1ED110560);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    }
    else
    {
      sub_1A5B5D9D4(v9, v11);
      return sub_1A5B4FBE8((uint64_t)v17, &qword_1ED10FED8);
    }
  }
  return result;
}

uint64_t sub_1A5BAAAF4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD v14[4];
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  char v18;

  v18 = a1;
  sub_1A5BC9818();
  swift_allocObject();
  sub_1A5BC980C();
  sub_1A5BAC55C();
  v7 = sub_1A5BC9800();
  v9 = v8;
  result = swift_release();
  if (!v4)
  {
    sub_1A5B56960(v3 + 16, (uint64_t)v15, &qword_1ED10FED8);
    v11 = v16;
    if (v16)
    {
      v12 = v17;
      __swift_project_boxed_opaque_existential_1(v15, v16);
      v14[3] = MEMORY[0x1E0CB0338];
      v14[0] = v7;
      v14[1] = v9;
      v13 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8);
      sub_1A5B66D78(v7, v9);
      v13(v14, a2, a3, v11, v12);
      sub_1A5B5D9D4(v7, v9);
      sub_1A5B4FBE8((uint64_t)v14, &qword_1ED110560);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    }
    else
    {
      sub_1A5B5D9D4(v7, v9);
      return sub_1A5B4FBE8((uint64_t)v15, &qword_1ED10FED8);
    }
  }
  return result;
}

uint64_t sub_1A5BAAC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1A5B56960(v2 + 16, (uint64_t)v12, &qword_1ED10FED8);
  v6 = v13;
  if (!v13)
  {
    sub_1A5B4FBE8((uint64_t)v12, &qword_1ED10FED8);
    return 0;
  }
  v7 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6, v7);
  v10 = v9;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  if (v10 >> 60 == 15)
    return 0;
  sub_1A5BC97F4();
  swift_allocObject();
  sub_1A5BC97E8();
  sub_1A5BAC5E4();
  sub_1A5BC97DC();
  if (v3)
  {
    swift_release();
    return sub_1A5B5D9C0(v8, v10);
  }
  else
  {
    sub_1A5B5D9C0(v8, v10);
    swift_release();
    return v15;
  }
}

uint64_t sub_1A5BAAD94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t RefreshCacheBox;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  RefreshCacheBox = type metadata accessor for NextRefreshCacheBox();
  MEMORY[0x1E0C80A78](RefreshCacheBox);
  v9 = (char *)&v21[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v21[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1A5BC9974();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v21[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5B56960(a1, (uint64_t)v12, &qword_1ED111280);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1A5B4FBE8((uint64_t)v12, &qword_1ED111280);
    sub_1A5B56960(v3 + 16, (uint64_t)v21, &qword_1ED10FED8);
    v17 = v22;
    if (v22)
    {
      v18 = v23;
      __swift_project_boxed_opaque_existential_1(v21, v22);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 24))(a2, a3, v17, v18);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    }
    else
    {
      return sub_1A5B4FBE8((uint64_t)v21, &qword_1ED10FED8);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v9, v16, v13);
    sub_1A5BAA820((uint64_t)v9, a2, a3);
    sub_1A5BAC724((uint64_t)v9);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

uint64_t sub_1A5BAAF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return swift_task_switch();
}

uint64_t sub_1A5BAAFA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 104) + 16;
  sub_1A5B56960(v1, v0 + 16, &qword_1ED10FED8);
  v2 = *(_QWORD *)(v0 + 40);
  if (!v2)
    goto LABEL_11;
  v4 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v3, v2, v5);
  v8 = v7;
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  if (v8 >> 60 == 15)
  {
LABEL_12:
    v10 = 0;
    v9 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v10, v9);
  }
  sub_1A5BC97F4();
  swift_allocObject();
  sub_1A5BC97E8();
  sub_1A5BAC6E0();
  sub_1A5BC97DC();
  sub_1A5B5D9C0(v6, v8);
  swift_release();
  v9 = *(_QWORD *)(v0 + 64);
  if (!v9)
  {
    v10 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v10, v9);
  }
  v10 = *(_QWORD *)(v0 + 56);
  v11 = *(_QWORD *)(v0 + 104);
  if ((*(_QWORD *)(v11 + 56) != *(_QWORD *)(v0 + 72) || *(_QWORD *)(v0 + 80) != *(_QWORD *)(v11 + 64))
    && (sub_1A5BCA0B8() & 1) == 0)
  {
    sub_1A5BAC6B0(v10, v9);
    sub_1A5B56960(v1, v0 + 16, &qword_1ED10FED8);
    v12 = *(_QWORD *)(v0 + 40);
    if (v12)
    {
      v14 = *(_QWORD *)(v0 + 88);
      v13 = *(_QWORD *)(v0 + 96);
      v15 = *(_QWORD *)(v0 + 48);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 24))(v14, v13, v12, v15);
      __swift_destroy_boxed_opaque_existential_1(v0 + 16);
      goto LABEL_12;
    }
LABEL_11:
    sub_1A5B4FBE8(v0 + 16, &qword_1ED10FED8);
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  sub_1A5BAC6B0(v10, v9);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v10, v9);
}

uint64_t sub_1A5BAB1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  if (a2)
  {
    v10 = *(_QWORD *)(v4 + 56);
    v9 = *(_QWORD *)(v4 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1A5BAA6C4(a1, a2, v10, v9, a3, a4);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1A5B56960(v4 + 16, (uint64_t)v14, &qword_1ED10FED8);
    v12 = v15;
    if (v15)
    {
      v13 = v16;
      __swift_project_boxed_opaque_existential_1(v14, v15);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24))(a3, a4, v12, v13);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    }
    else
    {
      return sub_1A5B4FBE8((uint64_t)v14, &qword_1ED10FED8);
    }
  }
}

uint64_t sub_1A5BAB2F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1A5B56960(v0 + 16, (uint64_t)v8, &qword_1ED10FED8);
  v1 = v9;
  if (v9)
  {
    v2 = v10;
    __swift_project_boxed_opaque_existential_1(v8, v9);
    v3 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v2 + 16))(0xD000000000000012, 0x80000001A5BD2E30, v1, v2);
    v5 = v4;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    if (v5 >> 60 != 15)
    {
      sub_1A5BC97F4();
      swift_allocObject();
      sub_1A5BC97E8();
      sub_1A5BAC5E4();
      sub_1A5BC97DC();
      sub_1A5B5D9C0(v3, v5);
      swift_release();
      if (v12)
      {
        v6 = v11 & 1;
        swift_bridgeObjectRelease();
        return v6;
      }
    }
  }
  else
  {
    sub_1A5B4FBE8((uint64_t)v8, &qword_1ED10FED8);
  }
  return 2;
}

uint64_t sub_1A5BAB440(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  if (a1 == 2)
  {
    sub_1A5B56960(v1 + 16, (uint64_t)v10, &qword_1ED10FED8);
    v3 = v11;
    if (v11)
    {
      v4 = v12;
      __swift_project_boxed_opaque_existential_1(v10, v11);
      (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v4 + 24))(0xD000000000000012, 0x80000001A5BD2E30, v3, v4);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    }
    else
    {
      return sub_1A5B4FBE8((uint64_t)v10, &qword_1ED10FED8);
    }
  }
  else
  {
    sub_1A5B56960(v1 + 16, (uint64_t)v10, &qword_1ED10FED8);
    v6 = v11;
    if (v11)
    {
      v7 = v12;
      __swift_project_boxed_opaque_existential_1(v10, v11);
      (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v7 + 24))(0xD000000000000019, 0x80000001A5BD2E10, v6, v7);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    }
    else
    {
      sub_1A5B4FBE8((uint64_t)v10, &qword_1ED10FED8);
    }
    v8 = *(_QWORD *)(v1 + 56);
    v9 = *(_QWORD *)(v1 + 64);
    swift_bridgeObjectRetain();
    sub_1A5BAA998(a1 & 1, v8, v9, 0xD000000000000012, 0x80000001A5BD2E30);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1A5BAB5C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  char v14;

  sub_1A5B56960(v0 + 16, (uint64_t)v11, &qword_1ED10FED8);
  v1 = v12;
  if (v12)
  {
    v2 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    v3 = (*(uint64_t (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v2 + 16))(0xD000000000000019, 0x80000001A5BD2E10, v1, v2);
    v5 = v4;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    if (v5 >> 60 != 15)
    {
      sub_1A5BC97F4();
      swift_allocObject();
      sub_1A5BC97E8();
      sub_1A5BAC5A0();
      sub_1A5BC97DC();
      sub_1A5B5D9C0(v3, v5);
      swift_release();
      if ((v14 & 1) != 0)
        goto LABEL_6;
    }
  }
  else
  {
    sub_1A5B4FBE8((uint64_t)v11, &qword_1ED10FED8);
  }
  sub_1A5BAAC4C(0xD000000000000012, 0x80000001A5BD2E30);
  if (!v7)
  {
LABEL_6:
    v8 = 1;
    return v8 & 1;
  }
  if (v6 == *(_QWORD *)(v0 + 56) && v7 == *(_QWORD *)(v0 + 64))
  {
    swift_bridgeObjectRelease();
    v8 = 0;
  }
  else
  {
    v10 = sub_1A5BCA0B8();
    swift_bridgeObjectRelease();
    v8 = v10 ^ 1;
  }
  return v8 & 1;
}

uint64_t sub_1A5BAB794@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t RefreshCacheBox;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;

  v15 = a2;
  v17 = sub_1A5BC9974();
  v14 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v16 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAD08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  RefreshCacheBox = type metadata accessor for NextRefreshCacheBox();
  MEMORY[0x1E0C80A78](RefreshCacheBox);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5BAD354();
  sub_1A5BCA19C();
  if (!v2)
  {
    sub_1A5B50E80(&qword_1ED1107F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    sub_1A5BCA010();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v16, v17);
    sub_1A5BAC760((uint64_t)v11, v15);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A5BAB958(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];
  char v12;
  char v13;

  v11[1] = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FFF8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5BAD034();
  sub_1A5BCA1B4();
  v13 = 0;
  sub_1A5BCA070();
  if (!v4)
  {
    v12 = 1;
    sub_1A5BCA064();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1A5BABA80(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];
  char v13;
  char v14;

  v12[0] = a4;
  v12[1] = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FACE0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5BAD078();
  sub_1A5BCA1B4();
  v14 = 0;
  sub_1A5BCA064();
  if (!v5)
  {
    v13 = 1;
    sub_1A5BCA064();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1A5BABBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1A5B505F4;
  v6[12] = a2;
  v6[13] = v2;
  v6[11] = a1;
  return swift_task_switch();
}

uint64_t sub_1A5BABC2C(char a1)
{
  return sub_1A5BAAAF4(a1, 0xD000000000000019, 0x80000001A5BD2E10);
}

uint64_t sub_1A5BABC8C()
{
  return 0x726665527478656ELL;
}

uint64_t sub_1A5BABCAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x726665527478656ELL && a2 == 0xEB00000000687365)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A5BCA0B8();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A5BABD58()
{
  sub_1A5BAD354();
  return sub_1A5BCA1C0();
}

uint64_t sub_1A5BABD80()
{
  sub_1A5BAD354();
  return sub_1A5BCA1CC();
}

uint64_t sub_1A5BABDA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A5BAB794(a1, a2);
}

uint64_t sub_1A5BABDBC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FACF8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5BAD354();
  sub_1A5BCA1B4();
  sub_1A5BC9974();
  sub_1A5B50E80(&qword_1ED10FB80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1A5BCA07C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1A5BABECC()
{
  _BYTE *v0;

  if (*v0)
    return 0x496E6F6973736573;
  else
    return 0xD000000000000012;
}

uint64_t sub_1A5BABF10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5BACDE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5BABF34()
{
  sub_1A5BAD034();
  return sub_1A5BCA1C0();
}

uint64_t sub_1A5BABF5C()
{
  sub_1A5BAD034();
  return sub_1A5BCA1CC();
}

uint64_t sub_1A5BABF84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1A5BACEE0(a1);
  if (!v2)
  {
    *(_BYTE *)a2 = result & 1;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_1A5BABFB4(_QWORD *a1)
{
  unsigned __int8 *v1;

  return sub_1A5BAB958(a1, *v1, *((_QWORD *)v1 + 1), *((_QWORD *)v1 + 2));
}

uint64_t sub_1A5BABFD0()
{
  _BYTE *v0;

  if (*v0)
    return 0x496E6F6973736573;
  else
    return 7107189;
}

uint64_t sub_1A5BAC008@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5BAD0BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5BAC02C()
{
  sub_1A5BAD078();
  return sub_1A5BCA1C0();
}

uint64_t sub_1A5BAC054()
{
  sub_1A5BAD078();
  return sub_1A5BCA1CC();
}

uint64_t sub_1A5BAC07C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1A5BAD1A8(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1A5BAC0A8(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1A5BABA80(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1A5BAC0C4()
{
  return 0x65756C6176;
}

uint64_t sub_1A5BAC0D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1A5BCA0B8();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1A5BAC164()
{
  sub_1A5BACDA4();
  return sub_1A5BCA1C0();
}

uint64_t sub_1A5BAC18C()
{
  sub_1A5BACDA4();
  return sub_1A5BCA1CC();
}

uint64_t sub_1A5BAC1B4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t result;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED110540);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5BACDA4();
  sub_1A5BCA19C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = sub_1A5BCA004();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *a2 = v9 & 1;
  return result;
}

uint64_t sub_1A5BAC2C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED110000);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5BACDA4();
  sub_1A5BCA1B4();
  sub_1A5BCA070();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1A5BAC3B0()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  v2 = (id)sub_1A5BC9B3C();
  objc_msgSend(v1, sel_removeObjectForKey_, v2);

}

uint64_t sub_1A5BAC3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 24) + *(_QWORD *)(a4 + 24));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_1A5B61C78;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1A5BAC478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t sub_1A5BAC480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_1A5BAC488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t sub_1A5BAC490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1A5BAC498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 8) + *(_QWORD *)(a3 + 8));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1A5B65618;
  return v9(a1, a2, a3);
}

uint64_t sub_1A5BAC514(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1A5BAC55C()
{
  unint64_t result;

  result = qword_1ED10FE70;
  if (!qword_1ED10FE70)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE6E0, &type metadata for BoolCacheBox);
    atomic_store(result, (unint64_t *)&qword_1ED10FE70);
  }
  return result;
}

unint64_t sub_1A5BAC5A0()
{
  unint64_t result;

  result = qword_1ED110538;
  if (!qword_1ED110538)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE6B8, &type metadata for BoolCacheBox);
    atomic_store(result, (unint64_t *)&qword_1ED110538);
  }
  return result;
}

unint64_t sub_1A5BAC5E4()
{
  unint64_t result;

  result = qword_1ED10FD90;
  if (!qword_1ED10FD90)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE690, &type metadata for SubscriptionStatusCacheBox);
    atomic_store(result, (unint64_t *)&qword_1ED10FD90);
  }
  return result;
}

unint64_t sub_1A5BAC628()
{
  unint64_t result;

  result = qword_1ED10FD88;
  if (!qword_1ED10FD88)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE668, &type metadata for SubscriptionStatusCacheBox);
    atomic_store(result, (unint64_t *)&qword_1ED10FD88);
  }
  return result;
}

unint64_t sub_1A5BAC66C()
{
  unint64_t result;

  result = qword_1EE7FACB0;
  if (!qword_1EE7FACB0)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE640, &type metadata for URLCacheBox);
    atomic_store(result, &qword_1EE7FACB0);
  }
  return result;
}

uint64_t sub_1A5BAC6B0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1A5BAC6E0()
{
  unint64_t result;

  result = qword_1EE7FACC0;
  if (!qword_1EE7FACC0)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE618, &type metadata for URLCacheBox);
    atomic_store(result, (unint64_t *)&qword_1EE7FACC0);
  }
  return result;
}

uint64_t sub_1A5BAC724(uint64_t a1)
{
  uint64_t RefreshCacheBox;

  RefreshCacheBox = type metadata accessor for NextRefreshCacheBox();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(RefreshCacheBox - 8) + 8))(a1, RefreshCacheBox);
  return a1;
}

uint64_t sub_1A5BAC760(uint64_t a1, uint64_t a2)
{
  uint64_t RefreshCacheBox;

  RefreshCacheBox = type metadata accessor for NextRefreshCacheBox();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(RefreshCacheBox - 8) + 32))(a2, a1, RefreshCacheBox);
  return a2;
}

unint64_t sub_1A5BAC7A4()
{
  unint64_t result;

  result = qword_1EE7FACD8;
  if (!qword_1EE7FACD8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EE7FACD8);
  }
  return result;
}

uint64_t sub_1A5BAC7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A5BC9974();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1A5BAC81C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A5BC9974();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1A5BAC850(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A5BC9974();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A5BAC894(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A5BC9974();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A5BAC8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A5BC9974();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A5BAC91C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A5BC9974();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1A5BAC960()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5BAC96C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A5BC9974();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1A5BAC9A8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5BAC9B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1A5BC9974();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1A5BAC9F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5BC9974();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for URLCacheBox()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for URLCacheBox(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for URLCacheBox(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for URLCacheBox(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for URLCacheBox()
{
  return &type metadata for URLCacheBox;
}

uint64_t destroy for SubscriptionStatusCacheBox()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s25CloudSubscriptionFeatures26SubscriptionStatusCacheBoxVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SubscriptionStatusCacheBox(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SubscriptionStatusCacheBox(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionStatusCacheBox(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionStatusCacheBox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionStatusCacheBox()
{
  return &type metadata for SubscriptionStatusCacheBox;
}

uint64_t storeEnumTagSinglePayload for BoolCacheBox(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5BACD24 + 4 * byte_1A5BCE405[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5BACD58 + 4 * asc_1A5BCE400[v4]))();
}

uint64_t sub_1A5BACD58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5BACD60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5BACD68);
  return result;
}

uint64_t sub_1A5BACD74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5BACD7CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5BACD80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5BACD88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BoolCacheBox()
{
  return &type metadata for BoolCacheBox;
}

unint64_t sub_1A5BACDA4()
{
  unint64_t result;

  result = qword_1ED10FE58;
  if (!qword_1ED10FE58)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCEAE4, &type metadata for BoolCacheBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED10FE58);
  }
  return result;
}

uint64_t sub_1A5BACDE8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001A5BD2E30 || (sub_1A5BCA0B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1A5BCA0B8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A5BACEE0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FFD0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1A5BAD034();
  sub_1A5BCA19C();
  if (!v1)
  {
    v9[15] = 0;
    LOBYTE(v7) = sub_1A5BCA004();
    v9[14] = 1;
    sub_1A5BC9FF8();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7 & 1;
}

unint64_t sub_1A5BAD034()
{
  unint64_t result;

  result = qword_1ED10FD70;
  if (!qword_1ED10FD70)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCEA94, &type metadata for SubscriptionStatusCacheBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED10FD70);
  }
  return result;
}

unint64_t sub_1A5BAD078()
{
  unint64_t result;

  result = qword_1EE7FACE8;
  if (!qword_1EE7FACE8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCEA44, &type metadata for URLCacheBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FACE8);
  }
  return result;
}

uint64_t sub_1A5BAD0BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v2 || (sub_1A5BCA0B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A5BCA0B8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1A5BAD1A8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FACF0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5BAD078();
  sub_1A5BCA19C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v11 = 0;
    v7 = sub_1A5BC9FF8();
    v10 = 1;
    swift_bridgeObjectRetain();
    sub_1A5BC9FF8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1A5BAD354()
{
  unint64_t result;

  result = qword_1EE7FAD00;
  if (!qword_1EE7FAD00)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE9F4, &type metadata for NextRefreshCacheBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FAD00);
  }
  return result;
}

ValueMetadata *type metadata accessor for NextRefreshCacheBox.CodingKeys()
{
  return &type metadata for NextRefreshCacheBox.CodingKeys;
}

ValueMetadata *type metadata accessor for URLCacheBox.CodingKeys()
{
  return &type metadata for URLCacheBox.CodingKeys;
}

uint64_t _s25CloudSubscriptionFeatures11URLCacheBoxV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5BAD410 + 4 * byte_1A5BCE40F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5BAD444 + 4 * byte_1A5BCE40A[v4]))();
}

uint64_t sub_1A5BAD444(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5BAD44C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5BAD454);
  return result;
}

uint64_t sub_1A5BAD460(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5BAD468);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5BAD46C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5BAD474(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionStatusCacheBox.CodingKeys()
{
  return &type metadata for SubscriptionStatusCacheBox.CodingKeys;
}

uint64_t _s25CloudSubscriptionFeatures19NextRefreshCacheBoxV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1A5BAD4D0 + 4 * byte_1A5BCE414[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1A5BAD4F0 + 4 * byte_1A5BCE419[v4]))();
}

_BYTE *sub_1A5BAD4D0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1A5BAD4F0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5BAD4F8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5BAD500(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1A5BAD508(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1A5BAD510(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for BoolCacheBox.CodingKeys()
{
  return &type metadata for BoolCacheBox.CodingKeys;
}

unint64_t sub_1A5BAD530()
{
  unint64_t result;

  result = qword_1EE7FAD10;
  if (!qword_1EE7FAD10)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE7A4, &type metadata for BoolCacheBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FAD10);
  }
  return result;
}

unint64_t sub_1A5BAD578()
{
  unint64_t result;

  result = qword_1EE7FAD18;
  if (!qword_1EE7FAD18)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE85C, &type metadata for SubscriptionStatusCacheBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FAD18);
  }
  return result;
}

unint64_t sub_1A5BAD5C0()
{
  unint64_t result;

  result = qword_1EE7FAD20;
  if (!qword_1EE7FAD20)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE914, &type metadata for URLCacheBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FAD20);
  }
  return result;
}

unint64_t sub_1A5BAD608()
{
  unint64_t result;

  result = qword_1EE7FAD28;
  if (!qword_1EE7FAD28)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE9CC, &type metadata for NextRefreshCacheBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FAD28);
  }
  return result;
}

unint64_t sub_1A5BAD650()
{
  unint64_t result;

  result = qword_1EE7FAD30;
  if (!qword_1EE7FAD30)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE93C, &type metadata for NextRefreshCacheBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FAD30);
  }
  return result;
}

unint64_t sub_1A5BAD698()
{
  unint64_t result;

  result = qword_1EE7FAD38;
  if (!qword_1EE7FAD38)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE964, &type metadata for NextRefreshCacheBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FAD38);
  }
  return result;
}

unint64_t sub_1A5BAD6E0()
{
  unint64_t result;

  result = qword_1EE7FAD40;
  if (!qword_1EE7FAD40)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE884, &type metadata for URLCacheBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FAD40);
  }
  return result;
}

unint64_t sub_1A5BAD728()
{
  unint64_t result;

  result = qword_1EE7FAD48;
  if (!qword_1EE7FAD48)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE8AC, &type metadata for URLCacheBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FAD48);
  }
  return result;
}

unint64_t sub_1A5BAD770()
{
  unint64_t result;

  result = qword_1ED10FD80;
  if (!qword_1ED10FD80)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE7CC, &type metadata for SubscriptionStatusCacheBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED10FD80);
  }
  return result;
}

unint64_t sub_1A5BAD7B8()
{
  unint64_t result;

  result = qword_1ED10FD78;
  if (!qword_1ED10FD78)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE7F4, &type metadata for SubscriptionStatusCacheBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED10FD78);
  }
  return result;
}

unint64_t sub_1A5BAD800()
{
  unint64_t result;

  result = qword_1ED10FE68;
  if (!qword_1ED10FE68)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE714, &type metadata for BoolCacheBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED10FE68);
  }
  return result;
}

unint64_t sub_1A5BAD848()
{
  unint64_t result;

  result = qword_1ED10FE60;
  if (!qword_1ED10FE60)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCE73C, &type metadata for BoolCacheBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED10FE60);
  }
  return result;
}

uint64_t sub_1A5BAD894()
{
  sub_1A5BCA16C();
  sub_1A5BC9BCC();
  swift_bridgeObjectRelease();
  return sub_1A5BCA184();
}

void sub_1A5BAD93C(char a1)
{
  sub_1A5BCA16C();
  __asm { BR              X10 }
}

uint64_t sub_1A5BAD994()
{
  sub_1A5BC9BCC();
  swift_bridgeObjectRelease();
  return sub_1A5BCA184();
}

void sub_1A5BADA18(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A5BADA5C()
{
  sub_1A5BC9BCC();
  return swift_bridgeObjectRelease();
}

void sub_1A5BADAC4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1A5BADAFC()
{
  sub_1A5BC9BCC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5BADC08()
{
  sub_1A5BC9BCC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5BADC88()
{
  sub_1A5BCA16C();
  sub_1A5BC9BCC();
  swift_bridgeObjectRelease();
  return sub_1A5BCA184();
}

void sub_1A5BADD2C(uint64_t a1, char a2)
{
  sub_1A5BCA16C();
  __asm { BR              X10 }
}

uint64_t sub_1A5BADD80()
{
  sub_1A5BC9BCC();
  swift_bridgeObjectRelease();
  return sub_1A5BCA184();
}

uint64_t sub_1A5BADE04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  _QWORD v18[2];
  _BYTE v19[32];

  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v14 >= v6)
      goto LABEL_24;
    v15 = *(_QWORD *)(v2 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v6)
        goto LABEL_24;
      v15 = *(_QWORD *)(v2 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v6)
          goto LABEL_24;
        v15 = *(_QWORD *)(v2 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v6)
            goto LABEL_24;
          v15 = *(_QWORD *)(v2 + 8 * v8);
          if (!v15)
          {
            v16 = v14 + 4;
            if (v16 >= v6)
            {
LABEL_24:
              v17 = 0;
              goto LABEL_25;
            }
            v15 = *(_QWORD *)(v2 + 8 * v16);
            if (!v15)
            {
              while (1)
              {
                v8 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_27;
                if (v8 >= v6)
                  goto LABEL_24;
                v15 = *(_QWORD *)(v2 + 8 * v8);
                ++v16;
                if (v15)
                  goto LABEL_22;
              }
            }
            v8 = v16;
          }
        }
      }
    }
LABEL_22:
    v5 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    sub_1A5B58B00(*(_QWORD *)(a1 + 56) + 32 * v10, (uint64_t)v19);
    v18[0] = v12;
    v18[1] = v13;
    swift_bridgeObjectRetain();
    LOBYTE(v12) = sub_1A5BAF87C(v12, v13, (uint64_t)v19);
    result = sub_1A5B4FBE8((uint64_t)v18, &qword_1ED10FC38);
    if ((v12 & 1) != 0)
    {
      v17 = 1;
LABEL_25:
      swift_release();
      return v17;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t FollowUp.__allocating_init()()
{
  swift_allocObject();
  return FollowUp.init()();
}

id static FollowUp.hasEngagedWithCFU.getter()
{
  return objc_msgSend((id)objc_opt_self(), sel_hasEngagedWithCFU);
}

CloudSubscriptionFeatures::FollowUp::IneligibilityReason_optional __swiftcall FollowUp.IneligibilityReason.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  CloudSubscriptionFeatures::FollowUp::IneligibilityReason_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1A5BC9FA4();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FollowUp.IneligibilityReason.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1A5BAE0A8 + 4 * byte_1A5BCEB5C[*v0]))(0xD000000000000011, 0x80000001A5BCFF50);
}

void sub_1A5BAE0FC(char *a1)
{
  sub_1A5B710D4(*a1);
}

void sub_1A5BAE108()
{
  char *v0;

  sub_1A5BAD93C(*v0);
}

void sub_1A5BAE110(uint64_t a1)
{
  char *v1;

  sub_1A5BADA18(a1, *v1);
}

void sub_1A5BAE118(uint64_t a1)
{
  char *v1;

  sub_1A5BADD2C(a1, *v1);
}

CloudSubscriptionFeatures::FollowUp::IneligibilityReason_optional sub_1A5BAE120(Swift::String *a1)
{
  return FollowUp.IneligibilityReason.init(rawValue:)(*a1);
}

uint64_t sub_1A5BAE12C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FollowUp.IneligibilityReason.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1A5BAE150()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = 0xD00000000000001FLL;
  v2 = v0[5];
  v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  if (v4)
  {
    sub_1A5BC9BE4();
    swift_bridgeObjectRelease();
    return 0xD000000000000020;
  }
  return v1;
}

uint64_t sub_1A5BAE1F0()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  id v4;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = (void *)sub_1A5BC9B3C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (!v2)
    return 2;
  sub_1A5BAE150();
  v3 = (void *)sub_1A5BC9B3C();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_BOOLForKey_, v3);

  return (uint64_t)v4;
}

uint64_t sub_1A5BAE2A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v31;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112E0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1A5BCC560;
  *(_QWORD *)(v1 + 32) = 0x746E6553736168;
  *(_QWORD *)(v1 + 40) = 0xE700000000000000;
  v2 = v0[5];
  v3 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  if (v5)
  {
    v6 = v4;
    v7 = v5;
    v1 = (uint64_t)sub_1A5B6420C((_QWORD *)1, 2, 1, (_QWORD *)v1);
    *(_QWORD *)(v1 + 16) = 2;
    *(_QWORD *)(v1 + 48) = v6;
    *(_QWORD *)(v1 + 56) = v7;
  }
  v8 = sub_1A5B57E54();
  v9 = objc_msgSend(v8, sel_aa_primaryAppleAccount);

  if (v9)
  {
    v10 = objc_msgSend(v9, sel_aa_personID);
    if (v10)
    {
      v11 = v10;
      v12 = sub_1A5BC9B60();
      v14 = v13;

      v16 = *(_QWORD *)(v1 + 16);
      v15 = *(_QWORD *)(v1 + 24);
      if (v16 >= v15 >> 1)
        v1 = (uint64_t)sub_1A5B6420C((_QWORD *)(v15 > 1), v16 + 1, 1, (_QWORD *)v1);
      *(_QWORD *)(v1 + 16) = v16 + 1;
      v17 = v1 + 16 * v16;
      *(_QWORD *)(v17 + 32) = v12;
      *(_QWORD *)(v17 + 40) = v14;
    }
    else
    {
      if (qword_1ED110448 != -1)
        swift_once();
      v18 = sub_1A5BC9A64();
      __swift_project_value_buffer(v18, (uint64_t)qword_1ED110430);
      v19 = sub_1A5BC9A4C();
      v20 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_1A5B4D000, v19, v20, "Primary account is non-nil but personID (DSID) is nil. CFU hasSent will be keyed on ", v21, 2u);
        MEMORY[0x1A85B2FC0](v21, -1, -1);
      }

    }
  }
  v31 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF50);
  sub_1A5B64084();
  v22 = sub_1A5BC9B0C();
  v24 = v23;
  swift_bridgeObjectRelease();
  if (qword_1ED110448 != -1)
    swift_once();
  v25 = sub_1A5BC9A64();
  __swift_project_value_buffer(v25, (uint64_t)qword_1ED110430);
  swift_bridgeObjectRetain_n();
  v26 = sub_1A5BC9A4C();
  v27 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v31 = v29;
    *(_DWORD *)v28 = 136315138;
    swift_bridgeObjectRetain();
    sub_1A5B58A30(v22, v24, &v31);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v26, v27, "Returning CFU hasPosted key: %s", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v29, -1, -1);
    MEMORY[0x1A85B2FC0](v28, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v22;
}

uint64_t sub_1A5BAE658(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5B54780(a1, (uint64_t)v4);
  return sub_1A5BAE928((uint64_t)v4);
}

uint64_t sub_1A5BAE6D4@<X0>(uint64_t a1@<X8>)
{
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v13;
  int v14;
  uint64_t v15;
  _OWORD v16[2];
  _BYTE v17[24];
  uint64_t v18;

  v2 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v3 = (void *)sub_1A5BC9B3C();
  v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  if (v4)
  {
    sub_1A5BAE2A4();
    v5 = (void *)sub_1A5BC9B3C();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v4, sel_valueForKey_, v5);

    if (v6)
    {
      sub_1A5BC9E3C();

      swift_unknownObjectRelease();
    }
    else
    {

      memset(v16, 0, sizeof(v16));
    }
    sub_1A5B8A778((uint64_t)v16, (uint64_t)v17);
    if (v18)
    {
      v13 = sub_1A5BC9974();
      v14 = swift_dynamicCast();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a1, v14 ^ 1u, 1, v13);
    }
    else
    {
      sub_1A5B4FBE8((uint64_t)v17, &qword_1ED110560);
      v15 = sub_1A5BC9974();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 1, 1, v15);
    }
  }
  else
  {
    if (qword_1ED110448 != -1)
      swift_once();
    v7 = sub_1A5BC9A64();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED110430);
    v8 = sub_1A5BC9A4C();
    v9 = sub_1A5BC9D88();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1A5B4D000, v8, v9, "Unable to init UserDefaults, will not read hasSeenCFU and will return false. User may see CFU erroneously.", v10, 2u);
      MEMORY[0x1A85B2FC0](v10, -1, -1);
    }

    v11 = sub_1A5BC9974();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
}

uint64_t sub_1A5BAE928(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v34 - v8;
  v10 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v11 = (void *)sub_1A5BC9B3C();
  v12 = objc_msgSend(v10, sel_initWithSuiteName_, v11);

  if (v12)
  {
    if (qword_1ED110448 != -1)
      swift_once();
    v13 = sub_1A5BC9A64();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED110430);
    sub_1A5B54780(a1, (uint64_t)v9);
    swift_retain_n();
    v14 = sub_1A5BC9A4C();
    v15 = sub_1A5BC9DA0();
    v16 = os_log_type_enabled(v14, v15);
    v37 = v2;
    if (v16)
    {
      v17 = swift_slowAlloc();
      v36 = a1;
      v18 = v17;
      v35 = swift_slowAlloc();
      v39 = v35;
      *(_DWORD *)v18 = 136315394;
      v19 = sub_1A5BAE2A4();
      v34 = v4;
      v38 = sub_1A5B58A30(v19, v20, &v39);
      sub_1A5BC9E18();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      v21 = sub_1A5BC9E00();
      v38 = sub_1A5B58A30(v21, v22, &v39);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease();
      sub_1A5B4FBE8((uint64_t)v9, &qword_1ED111280);
      _os_log_impl(&dword_1A5B4D000, v14, v15, "Updating UserDefaults for key %s to value: %s", (uint8_t *)v18, 0x16u);
      v23 = v35;
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v23, -1, -1);
      v24 = v18;
      a1 = v36;
      MEMORY[0x1A85B2FC0](v24, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_1A5B4FBE8((uint64_t)v9, &qword_1ED111280);
    }

    sub_1A5B54780(a1, (uint64_t)v7);
    v29 = sub_1A5BC9974();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v7, 1, v29) != 1)
    {
      v31 = sub_1A5BC98F0();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v29);
    }
    sub_1A5BAE2A4();
    v32 = (void *)sub_1A5BC9B3C();
    swift_bridgeObjectRelease();
    objc_msgSend(v12, sel_setObject_forKey_, v31, v32);

    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1ED110448 != -1)
      swift_once();
    v25 = sub_1A5BC9A64();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED110430);
    v26 = sub_1A5BC9A4C();
    v27 = sub_1A5BC9D88();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1A5B4D000, v26, v27, "Unable to init UserDefaults, will not update hasSeenCFU.", v28, 2u);
      MEMORY[0x1A85B2FC0](v28, -1, -1);
    }

  }
  return sub_1A5B4FBE8(a1, &qword_1ED111280);
}

void (*sub_1A5BAED4C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;
  void *v4;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280) - 8) + 64);
  a1[1] = malloc(v3);
  v4 = malloc(v3);
  a1[2] = v4;
  sub_1A5BAE6D4((uint64_t)v4);
  return sub_1A5BAEDB8;
}

void sub_1A5BAEDB8(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_1A5B54780((uint64_t)v3, (uint64_t)v2);
    sub_1A5BAE928((uint64_t)v2);
    sub_1A5B4FBE8((uint64_t)v3, &qword_1ED111280);
  }
  else
  {
    sub_1A5BAE928((uint64_t)v3);
  }
  free(v3);
  free(v2);
}

uint64_t sub_1A5BAEE1C(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == 1)
  {
    sub_1A5BC9968();
    v5 = sub_1A5BC9974();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 0, 1, v5);
  }
  else
  {
    v6 = sub_1A5BC9974();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  }
  return sub_1A5BAE928((uint64_t)v4);
}

uint64_t sub_1A5BAEEE4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  uint8_t *v19;
  void *v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void (*v25)(char *, uint64_t);
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  void (*v37)(char *, uint64_t);
  uint8_t *v39;
  uint8_t *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1A5BC9974();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v39 - v8;
  sub_1A5BAE6D4((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v2, v3);
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36A8]), sel_init);
    if (qword_1ED110448 != -1)
      swift_once();
    v14 = sub_1A5BC9A64();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED110430);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    v15 = v13;
    v16 = sub_1A5BC9A4C();
    v17 = sub_1A5BC9DA0();
    v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      v42 = v18;
      v19 = (uint8_t *)swift_slowAlloc();
      v41 = swift_slowAlloc();
      v44 = v41;
      *(_DWORD *)v19 = 136315138;
      v39 = v19 + 4;
      v40 = v19;
      v20 = (void *)sub_1A5BC98F0();
      v21 = objc_msgSend(v15, sel_stringFromDate_, v20);

      v22 = sub_1A5BC9B60();
      v24 = v23;

      v43 = sub_1A5B58A30(v22, v24, &v44);
      sub_1A5BC9E18();

      swift_bridgeObjectRelease();
      v25 = *(void (**)(char *, uint64_t))(v4 + 8);
      v25(v7, v3);
      v26 = v40;
      _os_log_impl(&dword_1A5B4D000, v16, (os_log_type_t)v42, "User saw CFU at %s", v40, 0xCu);
      v27 = 1;
      v28 = v41;
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v28, -1, -1);
      MEMORY[0x1A85B2FC0](v26, -1, -1);

      v25(v9, v3);
      return v27;
    }

    v37 = *(void (**)(char *, uint64_t))(v4 + 8);
    v37(v7, v3);

    v37(v9, v3);
    return 1;
  }
  sub_1A5B4FBE8((uint64_t)v2, &qword_1ED111280);
  v10 = sub_1A5B57E54();
  v11 = objc_msgSend(v10, sel_aa_primaryAppleAccount);

  if (!v11 || (v12 = objc_msgSend(v11, sel_aa_personID), v11, !v12))
  {
    if ((sub_1A5BAF564() & 1) == 0)
      goto LABEL_15;
    if (qword_1ED110448 != -1)
      swift_once();
    v29 = sub_1A5BC9A64();
    __swift_project_value_buffer(v29, (uint64_t)qword_1ED110430);
    v30 = sub_1A5BC9A4C();
    v31 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_1A5B4D000, v30, v31, "No value for hasSentCFU but previous user has seen CFU. Returning true.", v32, 2u);
      MEMORY[0x1A85B2FC0](v32, -1, -1);
    }

    return 1;
  }

LABEL_15:
  if (qword_1ED110448 != -1)
    swift_once();
  v33 = sub_1A5BC9A64();
  __swift_project_value_buffer(v33, (uint64_t)qword_1ED110430);
  v34 = sub_1A5BC9A4C();
  v35 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v36 = 0;
    _os_log_impl(&dword_1A5B4D000, v34, v35, "User has not seen CFU.", v36, 2u);
    MEMORY[0x1A85B2FC0](v36, -1, -1);
  }

  return 0;
}

uint64_t sub_1A5BAF3E0(char a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    sub_1A5BC9968();
    v5 = sub_1A5BC9974();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 0, 1, v5);
  }
  else
  {
    v6 = sub_1A5BC9974();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  }
  return sub_1A5BAE928((uint64_t)v4);
}

void (*sub_1A5BAF498(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  *(_QWORD *)(a1 + 8) = malloc(*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  *(_BYTE *)(a1 + 16) = sub_1A5BAEEE4() & 1;
  return sub_1A5BAF4EC;
}

void sub_1A5BAF4EC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(a1 + 8);
  if (*(_BYTE *)(a1 + 16))
  {
    sub_1A5BC9968();
    v2 = 0;
  }
  else
  {
    v2 = 1;
  }
  v3 = sub_1A5BC9974();
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v1, v2, 1, v3);
  sub_1A5BAE928((uint64_t)v1);
  free(v1);
}

uint64_t sub_1A5BAF564()
{
  id v0;
  char v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v13;

  v0 = sub_1A5BB356C();
  if (v0)
  {
    v1 = sub_1A5BADE04((uint64_t)v0);
    swift_bridgeObjectRelease();
    if (qword_1ED110448 != -1)
      swift_once();
    v2 = sub_1A5BC9A64();
    __swift_project_value_buffer(v2, (uint64_t)qword_1ED110430);
    v3 = sub_1A5BC9A4C();
    v4 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = swift_slowAlloc();
      v6 = swift_slowAlloc();
      v13 = v6;
      *(_DWORD *)v5 = 136315394;
      sub_1A5B58A30(0xD000000000000015, 0x80000001A5BD2FC0, &v13);
      sub_1A5BC9E18();
      *(_WORD *)(v5 + 12) = 1024;
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v3, v4, "%s returning %{BOOL}d", (uint8_t *)v5, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v6, -1, -1);
      MEMORY[0x1A85B2FC0](v5, -1, -1);
    }

  }
  else
  {
    if (qword_1ED110448 != -1)
      swift_once();
    v7 = sub_1A5BC9A64();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED110430);
    swift_retain();
    v8 = sub_1A5BC9A4C();
    v9 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v13 = v11;
      *(_DWORD *)v10 = 136315138;
      sub_1A5B58A30(0xD000000000000013, 0x80000001A5BD2ED0, &v13);
      sub_1A5BC9E18();
      swift_release();
      _os_log_impl(&dword_1A5B4D000, v8, v9, "No persistent domain for suite %s, no users have been sent CFU.", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v11, -1, -1);
      MEMORY[0x1A85B2FC0](v10, -1, -1);

    }
    else
    {

      swift_release();
    }
    v1 = 0;
  }
  return v1 & 1;
}

uint64_t sub_1A5BAF87C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  int v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void (*v30)(char *, uint64_t);
  os_log_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  _QWORD v41[2];
  int v42;
  os_log_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A5BC9974();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v41 - v14;
  sub_1A5B58B00(a3, (uint64_t)v46);
  v16 = swift_dynamicCast();
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (v16)
  {
    v17(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
      v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36A8]), sel_init);
      if (qword_1ED110448 != -1)
        swift_once();
      v19 = sub_1A5BC9A64();
      __swift_project_value_buffer(v19, (uint64_t)qword_1ED110430);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
      swift_bridgeObjectRetain_n();
      v20 = v18;
      v21 = sub_1A5BC9A4C();
      v22 = sub_1A5BC9DA0();
      v23 = v22;
      if (os_log_type_enabled(v21, v22))
      {
        v24 = swift_slowAlloc();
        v44 = swift_slowAlloc();
        v46[0] = v44;
        *(_DWORD *)v24 = 136315394;
        v43 = v21;
        swift_bridgeObjectRetain();
        v45 = sub_1A5B58A30(a1, a2, v46);
        v42 = v23;
        sub_1A5BC9E18();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v24 + 12) = 2080;
        v41[1] = v24 + 14;
        v25 = (void *)sub_1A5BC98F0();
        v26 = objc_msgSend(v20, sel_stringFromDate_, v25);

        v27 = sub_1A5BC9B60();
        v29 = v28;

        v45 = sub_1A5B58A30(v27, v29, v46);
        sub_1A5BC9E18();

        swift_bridgeObjectRelease();
        v30 = *(void (**)(char *, uint64_t))(v10 + 8);
        v30(v13, v9);
        v31 = v43;
        _os_log_impl(&dword_1A5B4D000, v43, (os_log_type_t)v42, "Previous key %s was sent CFU on %s", (uint8_t *)v24, 0x16u);
        v32 = v44;
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v32, -1, -1);
        MEMORY[0x1A85B2FC0](v24, -1, -1);

        v30(v15, v9);
      }
      else
      {

        v39 = *(void (**)(char *, uint64_t))(v10 + 8);
        v39(v13, v9);

        swift_bridgeObjectRelease_n();
        v39(v15, v9);
      }
      return 1;
    }
  }
  else
  {
    v17(v8, 1, 1, v9);
  }
  sub_1A5B4FBE8((uint64_t)v8, &qword_1ED111280);
  sub_1A5B58B00(a3, (uint64_t)v46);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v33 = v45;
  if (qword_1ED110448 != -1)
    swift_once();
  v34 = sub_1A5BC9A64();
  __swift_project_value_buffer(v34, (uint64_t)qword_1ED110430);
  swift_bridgeObjectRetain_n();
  v35 = sub_1A5BC9A4C();
  v36 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    v46[0] = v38;
    *(_DWORD *)v37 = 136315394;
    swift_bridgeObjectRetain();
    v45 = sub_1A5B58A30(a1, a2, v46);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v37 + 12) = 1024;
    LODWORD(v45) = v33;
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v35, v36, "Previous key %s was sent CFU without date. Returning %{BOOL}d.", (uint8_t *)v37, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v38, -1, -1);
    MEMORY[0x1A85B2FC0](v37, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return v33;
}

uint64_t FollowUp.init()()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  v1 = v0;
  *(_QWORD *)(v0 + 40) = &type metadata for SiriAssistantLocale;
  *(_QWORD *)(v0 + 48) = &protocol witness table for SiriAssistantLocale;
  v2 = objc_allocWithZone(MEMORY[0x1E0D15E30]);
  v3 = (void *)sub_1A5BC9B3C();
  v4 = objc_msgSend(v2, sel_initWithClientIdentifier_, v3);

  if (v4)
  {
    *(_QWORD *)(v1 + 56) = v4;
  }
  else
  {
    if (qword_1ED110448 != -1)
      swift_once();
    v5 = sub_1A5BC9A64();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED110430);
    v6 = sub_1A5BC9A4C();
    v7 = sub_1A5BC9D88();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1A5B4D000, v6, v7, "Unable to make followup controller. Will not post CFUs.", v8, 2u);
      MEMORY[0x1A85B2FC0](v8, -1, -1);
    }

    __swift_destroy_boxed_opaque_existential_1(v1 + 16);
    type metadata accessor for FollowUp();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v1;
}

uint64_t sub_1A5BAFF90()
{
  char v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = sub_1A5B92D98();
  if ((v0 & 1) != 0)
  {
    sub_1A5BB013C();
  }
  else
  {
    if (qword_1ED110448 != -1)
      swift_once();
    v1 = sub_1A5BC9A64();
    __swift_project_value_buffer(v1, (uint64_t)qword_1ED110430);
    v2 = sub_1A5BC9A4C();
    v3 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = swift_slowAlloc();
      v5 = swift_slowAlloc();
      v7 = v5;
      *(_DWORD *)v4 = 136315394;
      sub_1A5B58A30(0xD00000000000002DLL, 0x80000001A5BD2F90, &v7);
      sub_1A5BC9E18();
      *(_WORD *)(v4 + 12) = 1024;
      sub_1A5B92D98();
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v2, v3, "Skipping %s: assetsFinishedDownloading is %{BOOL}d)", (uint8_t *)v4, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v5, -1, -1);
      MEMORY[0x1A85B2FC0](v4, -1, -1);
    }

  }
  return v0 & 1;
}

void sub_1A5BB013C()
{
  NSObject *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  id v13;
  unsigned int v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;
  void *v25;
  void *v26;
  uint64_t ObjCClassFromMetadata;
  void *v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  _BOOL4 v52;
  NSObject *v53;
  uint8_t *v54;
  Class isa;
  id v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  _QWORD *v69;
  id v70;
  void *v71;
  uint64_t v72;
  char *v73;
  id v74;
  unsigned int (*v75)(char *, uint64_t, uint64_t);
  const char *v76;
  const char *v77;
  char *v78;
  uint64_t v79;
  NSObject *v80;
  id v81[2];

  v1 = v0;
  v81[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FB70);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v72 - v9;
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_currentAvailability);
  if (objc_msgSend(v12, sel_status) == (id)2)
    objc_msgSend(v12, sel_unavailabiltyReasons);

  v13 = objc_msgSend(v11, sel_currentAvailability);
  v14 = objc_msgSend(v13, sel_shouldShowGM);

  if (!v14)
  {
    if (qword_1ED110448 != -1)
      swift_once();
    v19 = sub_1A5BC9A64();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED110430);
    v80 = sub_1A5BC9A4C();
    v16 = sub_1A5BC9DA0();
    if (!os_log_type_enabled(v80, v16))
      goto LABEL_14;
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    v18 = "Attempted to post CFU but device does not preconditions.";
    goto LABEL_13;
  }
  if ((sub_1A5BAEEE4() & 1) != 0)
  {
    if (qword_1ED110448 != -1)
      swift_once();
    v15 = sub_1A5BC9A64();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED110430);
    v80 = sub_1A5BC9A4C();
    v16 = sub_1A5BC9DA0();
    if (!os_log_type_enabled(v80, v16))
      goto LABEL_14;
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    v18 = "User has seen CFU before. Will not post CFU.";
LABEL_13:
    _os_log_impl(&dword_1A5B4D000, v80, v16, v18, v17, 2u);
    MEMORY[0x1A85B2FC0](v17, -1, -1);
LABEL_14:

    return;
  }
  if (qword_1ED110448 != -1)
    swift_once();
  v73 = v4;
  v20 = sub_1A5BC9A64();
  v79 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED110430);
  v21 = sub_1A5BC9A4C();
  v22 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_1A5B4D000, v21, v22, "Attempting to post GM CFU", v23, 2u);
    MEMORY[0x1A85B2FC0](v23, -1, -1);
  }

  v80 = v1;
  sub_1A5BB0EA0();
  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D15E38]), sel_init);
  v25 = (void *)sub_1A5BC9B3C();
  objc_msgSend(v24, sel_setUniqueIdentifier_, v25);

  sub_1A5BC9B60();
  v26 = (void *)sub_1A5BC9B3C();
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_setGroupIdentifier_, v26);

  sub_1A5B55C6C(0, &qword_1EE7FAD50);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v28 = (void *)objc_opt_self();
  v29 = objc_msgSend(v28, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1A5BC97D0();

  v30 = (void *)sub_1A5BC9B3C();
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_setTitle_, v30);

  v31 = objc_msgSend(v28, sel_bundleForClass_, ObjCClassFromMetadata);
  v78 = "FollowUp";
  sub_1A5BC97D0();

  v32 = (void *)sub_1A5BC9B3C();
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_setInformativeText_, v32);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED110018);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1A5BCECB0;
  v34 = objc_msgSend(v28, sel_bundleForClass_, ObjCClassFromMetadata);
  v77 = "GM_CFU_DESCRIPTION";
  sub_1A5BC97D0();

  v76 = "GM_CFU_ACTION_TEXT";
  sub_1A5BC986C();
  v35 = (void *)sub_1A5BC9B3C();
  swift_bridgeObjectRelease();
  v36 = sub_1A5BC9878();
  v37 = *(_QWORD *)(v36 - 8);
  v75 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  v38 = 0;
  if (v75(v10, 1, v36) != 1)
  {
    v38 = (void *)sub_1A5BC9848();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v36);
  }
  v72 = v37;
  v74 = (id)objc_opt_self();
  v39 = objc_msgSend(v74, sel_actionWithLabel_url_, v35, v38);

  if (v39)
  {
    *(_QWORD *)(v33 + 32) = v39;
    v81[0] = (id)v33;
    sub_1A5BC9C80();
    sub_1A5B55C6C(0, &qword_1EE7FAD58);
    v40 = (void *)sub_1A5BC9C5C();
    swift_bridgeObjectRelease();
    objc_msgSend(v24, sel_setActions_, v40);

    objc_msgSend(v24, sel_setDisplayStyle_, 3);
    v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D15E40]), sel_init);
    v42 = objc_msgSend(v28, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1A5BC97D0();

    v43 = (void *)sub_1A5BC9B3C();
    swift_bridgeObjectRelease();
    objc_msgSend(v41, sel_setTitle_, v43);

    v44 = objc_msgSend(v28, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1A5BC97D0();

    v45 = (void *)sub_1A5BC9B3C();
    swift_bridgeObjectRelease();
    objc_msgSend(v41, sel_setInformativeText_, v45);

    objc_msgSend(v41, sel_setFrequency_, INFINITY);
    v46 = objc_msgSend(v28, sel_bundleForClass_, ObjCClassFromMetadata);
    sub_1A5BC97D0();

    sub_1A5BC986C();
    v47 = (void *)sub_1A5BC9B3C();
    swift_bridgeObjectRelease();
    v48 = 0;
    if (v75(v8, 1, v36) != 1)
    {
      v48 = (void *)sub_1A5BC9848();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v8, v36);
    }
    v49 = objc_msgSend(v74, sel_actionWithLabel_url_, v47, v48);

    objc_msgSend(v41, sel_setActivateAction_, v49);
    objc_msgSend(v24, sel_setNotification_, v41);
    v50 = sub_1A5BC9A4C();
    v51 = sub_1A5BC9DA0();
    v52 = os_log_type_enabled(v50, v51);
    v53 = v80;
    if (v52)
    {
      v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v54 = 0;
      _os_log_impl(&dword_1A5B4D000, v50, v51, "Attempting to post CFU...", v54, 2u);
      MEMORY[0x1A85B2FC0](v54, -1, -1);
    }

    isa = v53[7].isa;
    v81[0] = 0;
    if (-[objc_class postFollowUpItem:error:](isa, sel_postFollowUpItem_error_, v24, v81))
    {
      v56 = v81[0];
      v57 = sub_1A5BC9A4C();
      v58 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v57, v58))
      {
        v59 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v59 = 0;
        _os_log_impl(&dword_1A5B4D000, v57, v58, "Successfully posted CFU.", v59, 2u);
        MEMORY[0x1A85B2FC0](v59, -1, -1);
      }

      v60 = (uint64_t)v73;
      sub_1A5BC9968();
      v61 = sub_1A5BC9974();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 0, 1, v61);
      sub_1A5BAE928(v60);

    }
    else
    {
      v62 = v81[0];
      v63 = (void *)sub_1A5BC9830();

      swift_willThrow();
      v64 = v63;
      v65 = v63;
      v66 = sub_1A5BC9A4C();
      v67 = sub_1A5BC9D88();
      if (os_log_type_enabled(v66, v67))
      {
        v68 = (uint8_t *)swift_slowAlloc();
        v69 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v68 = 138412290;
        v70 = v63;
        v71 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v81[0] = v71;
        sub_1A5BC9E18();
        *v69 = v71;

        _os_log_impl(&dword_1A5B4D000, v66, v67, "Unable to post CFU: %@", v68, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v69, -1, -1);
        MEMORY[0x1A85B2FC0](v68, -1, -1);

      }
      else
      {

      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1A5BB0EA0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  void *v13;
  id v14[2];

  v14[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + 56);
  v14[0] = 0;
  if (objc_msgSend(v1, sel_clearPendingFollowUpItems_, v14))
  {
    v2 = v14[0];
  }
  else
  {
    v3 = v14[0];
    v4 = (void *)sub_1A5BC9830();

    swift_willThrow();
    if (qword_1ED110448 != -1)
      swift_once();
    v5 = sub_1A5BC9A64();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED110430);
    v6 = v4;
    v7 = v4;
    v8 = sub_1A5BC9A4C();
    v9 = sub_1A5BC9D88();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v10 = 138412290;
      v12 = v4;
      v13 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v14[0] = v13;
      sub_1A5BC9E18();
      *v11 = v13;

      _os_log_impl(&dword_1A5B4D000, v8, v9, "Unable to clear pending followups with error: %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v11, -1, -1);
      MEMORY[0x1A85B2FC0](v10, -1, -1);

    }
    else
    {

    }
  }
}

BOOL sub_1A5BB10F8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v24;
  uint64_t v25;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5BAE6D4((uint64_t)v2);
  v3 = sub_1A5BC9974();
  v4 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3);
  sub_1A5B4FBE8((uint64_t)v2, &qword_1ED111280);
  if (v4 == 1)
  {
    if (qword_1ED110448 != -1)
      swift_once();
    v12 = sub_1A5BC9A64();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED110430);
    swift_retain_n();
    v13 = sub_1A5BC9A4C();
    v14 = sub_1A5BC9D88();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v25 = v16;
      *(_DWORD *)v15 = 136315138;
      v17 = sub_1A5BAE2A4();
      v24 = sub_1A5B58A30(v17, v18, &v25);
      sub_1A5BC9E18();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5B4D000, v13, v14, "Attempted to clear CFU user default \"%s\" but no value is stored.", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v16, -1, -1);
      MEMORY[0x1A85B2FC0](v15, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    if (qword_1ED110448 != -1)
      swift_once();
    v5 = sub_1A5BC9A64();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED110430);
    swift_retain_n();
    v6 = sub_1A5BC9A4C();
    v7 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v25 = v9;
      *(_DWORD *)v8 = 136315138;
      v10 = sub_1A5BAE2A4();
      v24 = sub_1A5B58A30(v10, v11, &v25);
      sub_1A5BC9E18();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5B4D000, v6, v7, "Reseting value for key \"%s\".", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v9, -1, -1);
      MEMORY[0x1A85B2FC0](v8, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v19 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
    v20 = (void *)sub_1A5BC9B3C();
    v21 = objc_msgSend(v19, sel_initWithSuiteName_, v20);

    if (v21)
    {
      sub_1A5BAE2A4();
      v22 = (void *)sub_1A5BC9B3C();
      swift_bridgeObjectRelease();
      objc_msgSend(v21, sel_removeObjectForKey_, v22);

    }
  }
  return v4 != 1;
}

id static FollowUp.hasEngagedWithCFU.setter(char a1)
{
  return objc_msgSend((id)objc_opt_self(), sel_setHasEngagedWithCFU_, a1 & 1);
}

id (*static FollowUp.hasEngagedWithCFU.modify(uint64_t a1))(uint64_t a1)
{
  void *v2;

  v2 = (void *)objc_opt_self();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = objc_msgSend(v2, sel_hasEngagedWithCFU);
  return sub_1A5BB1580;
}

id sub_1A5BB1580(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setHasEngagedWithCFU_, *(unsigned __int8 *)(a1 + 8));
}

uint64_t static FollowUp.hasEngagedWithCFUGlobalDomain.getter()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_hasEngagedWithCFUGlobalDomain);
  if (!v0)
    return 2;
  v1 = v0;
  v2 = objc_msgSend(v0, sel_BOOLValue);

  return (uint64_t)v2;
}

uint64_t FollowUp.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return v0;
}

uint64_t FollowUp.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_1A5BB1648(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1A5BCA16C();
  swift_bridgeObjectRetain();
  sub_1A5BC9BCC();
  v8 = sub_1A5BCA184();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1A5BCA0B8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1A5BCA0B8() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1A5BB221C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

void sub_1A5BB17F4(uint64_t a1, char a2)
{
  sub_1A5BCA16C();
  __asm { BR              X10 }
}

uint64_t sub_1A5BB1864()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t *v5;
  _BYTE *v6;
  uint64_t v7;

  swift_bridgeObjectRetain();
  sub_1A5BC9BCC();
  swift_bridgeObjectRelease();
  v2 = sub_1A5BCA184() & ~(-1 << *(_BYTE *)(v1 + 32));
  if (((*(_QWORD *)(v1 + 56 + ((v2 >> 3) & 0xFFFFFFFFFFFFF8)) >> v2) & 1) != 0)
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v5;
  *v5 = 0x8000000000000000;
  sub_1A5BB23B4(v0, v2, isUniquelyReferenced_nonNull_native);
  *v5 = v7;
  swift_bridgeObjectRelease();
  result = 1;
  *v6 = (_BYTE)v0;
  return result;
}

uint64_t sub_1A5BB1B7C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED111220);
  v3 = sub_1A5BC9E9C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1A5BCA16C();
      sub_1A5BC9BCC();
      result = sub_1A5BCA184();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1A5BB1E58()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED110528);
  v2 = sub_1A5BC9E9C();
  if (!*(_QWORD *)(v1 + 16))
    goto LABEL_25;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v14 = (_QWORD *)(v1 + 56);
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_retain();
  if (v5)
  {
    v7 = __clz(__rbit64(v5));
    goto LABEL_20;
  }
  if (v6 > 1)
  {
    v8 = *(_QWORD *)(v1 + 64);
    v9 = 1;
    if (v8)
      goto LABEL_19;
    v9 = 2;
    if (v6 > 2)
    {
      v8 = *(_QWORD *)(v1 + 72);
      if (v8)
        goto LABEL_19;
      v9 = 3;
      if (v6 > 3)
      {
        v8 = *(_QWORD *)(v1 + 80);
        if (!v8)
        {
          v10 = 4;
          if (v6 > 4)
          {
            v8 = *(_QWORD *)(v1 + 88);
            if (v8)
            {
              v9 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v9 = v10 + 1;
              if (__OFADD__(v10, 1))
              {
                __break(1u);
                JUMPOUT(0x1A5BB2204);
              }
              if (v9 >= v6)
                break;
              v8 = v14[v9];
              ++v10;
              if (v8)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v7 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_20:
        v11 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 48) + v7);
        sub_1A5BCA16C();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  swift_release();
  v12 = 1 << *(_BYTE *)(v1 + 32);
  if (v12 > 63)
    bzero(v14, ((unint64_t)(v12 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v14 = -1 << v12;
  *(_QWORD *)(v1 + 16) = 0;
LABEL_25:
  result = swift_release();
  *v0 = v2;
  return result;
}

uint64_t sub_1A5BB221C(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1A5BB1B7C();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1A5BB2780();
      goto LABEL_22;
    }
    sub_1A5BB2AC0();
  }
  v11 = *v4;
  sub_1A5BCA16C();
  sub_1A5BC9BCC();
  result = sub_1A5BCA184();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1A5BCA0B8(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1A5BCA0F4();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1A5BCA0B8();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void *sub_1A5BB23B4(void *result, unint64_t a2, char a3)
{
  uint64_t v3;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t *v12;
  char v13;

  v5 = (char)result;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1A5BB1E58();
      goto LABEL_8;
    }
    if (v7 <= v6)
    {
      sub_1A5BB2D6C();
LABEL_8:
      sub_1A5BCA16C();
      __asm { BR              X10 }
    }
    result = sub_1A5BB2930();
  }
  v8 = *v12;
  *(_QWORD *)(*v12 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v8 + 48) + a2) = v13;
  v9 = *(_QWORD *)(v8 + 16);
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
  {
    __break(1u);
    JUMPOUT(0x1A5BB271CLL);
  }
  *(_QWORD *)(v8 + 16) = v11;
  return result;
}

void *sub_1A5BB2780()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED111220);
  v2 = *v0;
  v3 = sub_1A5BC9E90();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1A5BB2930()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED110528);
  v2 = *v0;
  v3 = sub_1A5BC9E90();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A5BB2AC0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED111220);
  v3 = sub_1A5BC9E9C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1A5BCA16C();
    swift_bridgeObjectRetain();
    sub_1A5BC9BCC();
    result = sub_1A5BCA184();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1A5BB2D6C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED110528);
  v2 = sub_1A5BC9E9C();
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
    goto LABEL_23;
  }
  v3 = 1 << *(_BYTE *)(v1 + 32);
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 56);
  v12 = (unint64_t)(v3 + 63) >> 6;
  swift_retain();
  if (v5)
  {
    v6 = __clz(__rbit64(v5));
    goto LABEL_20;
  }
  if (v12 > 1)
  {
    v7 = *(_QWORD *)(v1 + 64);
    v8 = 1;
    if (v7)
      goto LABEL_19;
    v8 = 2;
    if (v12 > 2)
    {
      v7 = *(_QWORD *)(v1 + 72);
      if (v7)
        goto LABEL_19;
      v8 = 3;
      if (v12 > 3)
      {
        v7 = *(_QWORD *)(v1 + 80);
        if (!v7)
        {
          v9 = 4;
          if (v12 > 4)
          {
            v7 = *(_QWORD *)(v1 + 88);
            if (v7)
            {
              v8 = 4;
              goto LABEL_19;
            }
            while (1)
            {
              v8 = v9 + 1;
              if (__OFADD__(v9, 1))
              {
                __break(1u);
                JUMPOUT(0x1A5BB30E0);
              }
              if (v8 >= v12)
                break;
              v7 = *(_QWORD *)(v1 + 56 + 8 * v8);
              ++v9;
              if (v7)
                goto LABEL_19;
            }
          }
          goto LABEL_21;
        }
LABEL_19:
        v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_20:
        v10 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 48) + v6);
        sub_1A5BCA16C();
        __asm { BR              X8 }
      }
    }
  }
LABEL_21:
  result = swift_release_n();
LABEL_23:
  *v0 = v2;
  return result;
}

uint64_t sub_1A5BB30F8(uint64_t a1, uint64_t a2)
{
  _BYTE *v3;
  _BYTE *v4;
  _BYTE *v5;
  id v6;
  objc_class *v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  id v13;
  char v15[24];
  objc_super v16;
  char v17;
  uint64_t v18;

  v18 = MEMORY[0x1E0DEE9E8];
  if (!a1 || (v3 = (_BYTE *)(a1 + OBJC_IVAR___CloudFeature_canUse), swift_beginAccess(), *v3 == 1))
    sub_1A5BB17F4((uint64_t)v15, 0);
  if (a2)
  {
    v4 = (_BYTE *)(a2 + OBJC_IVAR___CloudFeature_canUse);
    swift_beginAccess();
    if ((*v4 & 1) == 0)
      sub_1A5BB17F4((uint64_t)&v17, 1);
  }
  v5 = _s25CloudSubscriptionFeatures18EligibilityFetcherC7currentAA0D0CvgZ_0();
  if ((v5[OBJC_IVAR___CSFEligibility_deviceEligibile] & 1) == 0)
    sub_1A5BB17F4((uint64_t)&v17, 2);
  if (!sub_1A5BBF0A0())
    sub_1A5BB17F4((uint64_t)&v17, 3);
  if ((sub_1A5B92D98() & 1) == 0)
    sub_1A5BB17F4((uint64_t)&v17, 4);
  v6 = sub_1A5B74938();
  v7 = (objc_class *)type metadata accessor for GMOptIn();
  v8 = (char *)objc_allocWithZone(v7);
  v9 = OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_globalUserDefaults;
  v10 = (void *)objc_opt_self();
  v11 = v8;
  *(_QWORD *)&v8[v9] = objc_msgSend(v10, sel_standardUserDefaults);
  *(_QWORD *)&v11[OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_userDefaults] = v6;
  v12 = v6;

  v16.receiver = v11;
  v16.super_class = v7;
  v13 = objc_msgSendSuper2(&v16, sel_init);

  LOBYTE(v12) = sub_1A5B73094();
  if ((v12 & 1) != 0)
    sub_1A5BB17F4((uint64_t)&v17, 5);

  return v18;
}

BOOL sub_1A5BB32D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v16;

  v2 = *(_QWORD *)(sub_1A5BB30F8(a1, a2) + 16);
  if (v2)
  {
    if (qword_1ED110448 != -1)
      swift_once();
    v3 = sub_1A5BC9A64();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED110430);
    swift_bridgeObjectRetain();
    v4 = sub_1A5BC9A4C();
    v5 = sub_1A5BC9D88();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      v16 = v7;
      *(_DWORD *)v6 = 136315138;
      sub_1A5BB3908();
      swift_bridgeObjectRetain();
      v8 = sub_1A5BC9D4C();
      v10 = v9;
      swift_bridgeObjectRelease();
      sub_1A5B58A30(v8, v10, &v16);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5B4D000, v4, v5, "User is ineligible for GM CFU with reasons: %s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v7, -1, -1);
      MEMORY[0x1A85B2FC0](v6, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1ED110448 != -1)
      swift_once();
    v11 = sub_1A5BC9A64();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED110430);
    v12 = sub_1A5BC9A4C();
    v13 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1A5B4D000, v12, v13, "User is eligible for CFU.", v14, 2u);
      MEMORY[0x1A85B2FC0](v14, -1, -1);
    }

  }
  return v2 == 0;
}

id sub_1A5BB356C()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  id v4;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = (void *)sub_1A5BC9B3C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    v3 = (void *)sub_1A5BC9B3C();
    v4 = objc_msgSend(v2, sel_persistentDomainForName_, v3);

    if (v4)
    {
      v2 = (id)sub_1A5BC9AE8();

    }
    else
    {
      return 0;
    }
  }
  return v2;
}

uint64_t type metadata accessor for FollowUp()
{
  return objc_opt_self();
}

unint64_t sub_1A5BB367C()
{
  unint64_t result;

  result = qword_1ED110510;
  if (!qword_1ED110510)
  {
    result = MEMORY[0x1A85B2F18](&protocol conformance descriptor for FollowUp.IneligibilityReason, &type metadata for FollowUp.IneligibilityReason);
    atomic_store(result, (unint64_t *)&qword_1ED110510);
  }
  return result;
}

uint64_t sub_1A5BB36C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1A5BAE6D4(a1);
}

uint64_t sub_1A5BB36E4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A5BAEEE4();
  *a1 = result & 1;
  return result;
}

uint64_t method lookup function for FollowUp()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FollowUp.oldPostedCFUUserDefaultKey.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of FollowUp.oldPostedCFUUserDefaultValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of FollowUp.postedCFUUserDefaultKey.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of FollowUp.dateSentCFU.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of FollowUp.dateSentCFU.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of FollowUp.dateSentCFU.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of FollowUp.hasSentCFU.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of FollowUp.hasSentCFU.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of FollowUp.hasSentCFU.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of FollowUp.allData.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of FollowUp.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of FollowUp.ineligibilityReasons(oldFeature:newFeature:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t getEnumTagSinglePayload for FollowUp.IneligibilityReason(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FollowUp.IneligibilityReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1A5BB3888 + 4 * byte_1A5BCEB79[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1A5BB38BC + 4 * byte_1A5BCEB74[v4]))();
}

uint64_t sub_1A5BB38BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5BB38C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5BB38CCLL);
  return result;
}

uint64_t sub_1A5BB38D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5BB38E0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1A5BB38E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5BB38EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FollowUp.IneligibilityReason()
{
  return &type metadata for FollowUp.IneligibilityReason;
}

unint64_t sub_1A5BB3908()
{
  unint64_t result;

  result = qword_1ED110508;
  if (!qword_1ED110508)
  {
    result = MEMORY[0x1A85B2F18](&protocol conformance descriptor for FollowUp.IneligibilityReason, &type metadata for FollowUp.IneligibilityReason);
    atomic_store(result, (unint64_t *)&qword_1ED110508);
  }
  return result;
}

void sub_1A5BB394C()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = (void *)sub_1A5BC9B3C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  qword_1ED10FB40 = (uint64_t)v2;
}

uint64_t sub_1A5BB39B8(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  char v11;
  char v12;
  uint64_t result;
  unint64_t v14;
  char v15;
  char v16;
  _BYTE *v17;
  Swift::Int rawValue;
  __int128 v19;
  __int128 v20;

  if (qword_1ED10FB50 != -1)
    swift_once();
  v4 = (void *)qword_1ED10FB40;
  if (!qword_1ED10FB40
    || (v5 = (void *)sub_1A5BC9B3C(),
        v6 = objc_msgSend(v4, sel_dictionaryForKey_, v5),
        v5,
        !v6))
  {
    v19 = 0u;
    v20 = 0u;
    goto LABEL_18;
  }
  v7 = sub_1A5BC9AE8();

  if (!*(_QWORD *)(v7 + 16))
  {
    v19 = 0u;
    v20 = 0u;
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  v8 = sub_1A5B5AB84(a1, a2);
  if ((v9 & 1) == 0)
  {
    v19 = 0u;
    v20 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  sub_1A5B58B00(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v20 + 1))
    goto LABEL_18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAD60);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  if (!*(_QWORD *)(rawValue + 16)
    || (v10 = sub_1A5B5AB84(0xD000000000000012, 0x80000001A5BD2FE0), (v11 & 1) == 0)
    || (sub_1A5B58B00(*(_QWORD *)(rawValue + 56) + 32 * v10, (uint64_t)&v19), (swift_dynamicCast() & 1) == 0))
  {
    if (*(_QWORD *)(rawValue + 16) && (v14 = sub_1A5B5AB84(0xD000000000000013, 0x80000001A5BD3000), (v15 & 1) != 0))
    {
      sub_1A5B58B00(*(_QWORD *)(rawValue + 56) + 32 * v14, (uint64_t)&v19);
    }
    else
    {
      v19 = 0u;
      v20 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v20 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v16 = sub_1A5B920E0(rawValue);
        if (v16 != 7)
        {
          v12 = v16;
          sub_1A5B6F7FC();
          goto LABEL_28;
        }
      }
      return 0;
    }
LABEL_18:
    sub_1A5B4FBE8((uint64_t)&v19, &qword_1ED110560);
    return 0;
  }
  swift_bridgeObjectRelease();
  LocalError.init(rawValue:)(rawValue);
  v12 = v19;
  if (v19 == 16)
    return 0;
  sub_1A5B584A8();
LABEL_28:
  result = swift_allocError();
  *v17 = v12;
  return result;
}

id sub_1A5BB3C98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t *v24;
  char *v25;
  id v26;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void (*v43)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAD68);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v43 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v43 - v15;
  v17 = sub_1A5BB41EC(a1, a2);
  if (v17)
  {
    v18 = v17;
    if (*(_QWORD *)(v17 + 16))
    {
      swift_bridgeObjectRetain();
      v19 = sub_1A5B5AB84(0x737574617473, 0xE600000000000000);
      if ((v20 & 1) != 0)
      {
        sub_1A5B58B00(*(_QWORD *)(v18 + 56) + 32 * v19, (uint64_t)&v51);
        swift_bridgeObjectRelease();
        if (*((_QWORD *)&v52 + 1))
        {
          if ((swift_dynamicCast() & 1) == 0)
            goto LABEL_31;
          v21 = *(_QWORD *)(v18 + 16);
          v48 = v49;
          if (v21)
          {
            swift_bridgeObjectRetain();
            v22 = sub_1A5B5AB84(0x65756C6176, 0xE500000000000000);
            if ((v23 & 1) != 0)
            {
              sub_1A5B58B00(*(_QWORD *)(v18 + 56) + 32 * v22, (uint64_t)&v51);
            }
            else
            {
              v51 = 0u;
              v52 = 0u;
            }
            swift_bridgeObjectRelease();
            if (*((_QWORD *)&v52 + 1))
            {
              if (!swift_dynamicCast())
                goto LABEL_31;
              v28 = 0;
              v29 = v49;
LABEL_23:
              v30 = *(_QWORD *)(v18 + 16);
              v46 = v28;
              v45 = v29;
              if (v30)
              {
                swift_bridgeObjectRetain();
                v31 = sub_1A5B5AB84(0x6F54737365636361, 0xEB000000006E656BLL);
                if ((v32 & 1) != 0)
                {
                  sub_1A5B58B00(*(_QWORD *)(v18 + 56) + 32 * v31, (uint64_t)&v51);
                }
                else
                {
                  v51 = 0u;
                  v52 = 0u;
                }
                swift_bridgeObjectRelease();
                if (*((_QWORD *)&v52 + 1))
                {
                  if (swift_dynamicCast())
                  {
                    v44 = v49;
                    v47 = v50;
                    goto LABEL_33;
                  }
LABEL_31:
                  swift_bridgeObjectRelease();
                  return 0;
                }
              }
              else
              {
                v51 = 0u;
                v52 = 0u;
              }
              sub_1A5B4FBE8((uint64_t)&v51, &qword_1ED110560);
              v44 = 0;
              v47 = 0;
LABEL_33:
              if (*(_QWORD *)(v18 + 16) && (v33 = sub_1A5B5AB84(7107700, 0xE300000000000000), (v34 & 1) != 0))
              {
                sub_1A5B58B00(*(_QWORD *)(v18 + 56) + 32 * v33, (uint64_t)&v51);
              }
              else
              {
                v51 = 0u;
                v52 = 0u;
              }
              swift_bridgeObjectRelease();
              if (!*((_QWORD *)&v52 + 1))
              {
                sub_1A5B4FBE8((uint64_t)&v51, &qword_1ED110560);
                v39 = sub_1A5BC9974();
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v6, 1, 1, v39);
                goto LABEL_42;
              }
              v35 = sub_1A5BC9974();
              v36 = swift_dynamicCast();
              v37 = *(_QWORD *)(v35 - 8);
              v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
              if (v36)
              {
                v43 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56);
                v38(v14, 0, 1, v35);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v14, 1, v35) != 1)
                {
                  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v6, v14, v35);
                  v43(v6, 0, 1, v35);
LABEL_42:
                  v40 = v47;
                  v41 = v44;
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
                  sub_1A5B6F738((uint64_t)v6, (uint64_t)v16);
                  v42 = v48 != 2;
                  sub_1A5B54780((uint64_t)v16, (uint64_t)v11);
                  objc_allocWithZone((Class)type metadata accessor for CloudFeature());
                  swift_bridgeObjectRetain();
                  v26 = sub_1A5B71B2C(a1, a2, v42, v45, v46, v41, v40, (uint64_t)v11);
                  sub_1A5B4FBE8((uint64_t)v16, &qword_1ED111280);
                  return v26;
                }
              }
              else
              {
                v38(v14, 1, 1, v35);
              }
              sub_1A5B4FBE8((uint64_t)v14, &qword_1ED111280);
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
              swift_bridgeObjectRelease();
              v24 = &qword_1EE7FAD68;
              v25 = v6;
              goto LABEL_14;
            }
          }
          else
          {
            v51 = 0u;
            v52 = 0u;
          }
          sub_1A5B4FBE8((uint64_t)&v51, &qword_1ED110560);
          v29 = 0;
          v28 = 1;
          goto LABEL_23;
        }
      }
      else
      {
        v51 = 0u;
        v52 = 0u;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      v51 = 0u;
      v52 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v51 = 0u;
    v52 = 0u;
  }
  v24 = &qword_1ED110560;
  v25 = (char *)&v51;
LABEL_14:
  sub_1A5B4FBE8((uint64_t)v25, v24);
  return 0;
}

uint64_t sub_1A5BB41EC(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v11;
  __int128 v12;
  __int128 v13;

  if (qword_1ED10FB50 != -1)
    swift_once();
  v4 = (void *)qword_1ED10FB40;
  if (!qword_1ED10FB40
    || (v5 = (void *)sub_1A5BC9B3C(),
        v6 = objc_msgSend(v4, sel_dictionaryForKey_, v5),
        v5,
        !v6))
  {
    v12 = 0u;
    v13 = 0u;
    goto LABEL_15;
  }
  v7 = sub_1A5BC9AE8();

  if (!*(_QWORD *)(v7 + 16))
  {
    v12 = 0u;
    v13 = 0u;
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  v8 = sub_1A5B5AB84(a1, a2);
  if ((v9 & 1) == 0)
  {
    v12 = 0u;
    v13 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  sub_1A5B58B00(*(_QWORD *)(v7 + 56) + 32 * v8, (uint64_t)&v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v13 + 1))
  {
LABEL_15:
    sub_1A5B4FBE8((uint64_t)&v12, &qword_1ED110560);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAD60);
  if (swift_dynamicCast())
    return v11;
  else
    return 0;
}

_QWORD *sub_1A5BB4388(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  unint64_t v7;
  char v8;
  id v10;
  objc_class *v11;
  char *v12;
  char *v13;
  _QWORD *v14;
  objc_super v15;
  uint64_t v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;

  v2 = sub_1A5BB41EC(a1, a2);
  v3 = (_QWORD *)v2;
  if (v2)
  {
    if (*(_QWORD *)(v2 + 16))
    {
      v4 = sub_1A5B5AB84(0x6E656B6F74, 0xE500000000000000);
      if ((v5 & 1) != 0)
      {
        sub_1A5B58B00(v3[7] + 32 * v4, (uint64_t)&v18);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v6 = v17;
          if (v3[2] && (v7 = sub_1A5B5AB84(0x737574617473, 0xE600000000000000), (v8 & 1) != 0))
          {
            sub_1A5B58B00(v3[7] + 32 * v7, (uint64_t)&v18);
          }
          else
          {
            v18 = 0u;
            v19 = 0u;
          }
          swift_bridgeObjectRelease();
          if (!*((_QWORD *)&v19 + 1))
          {
            swift_bridgeObjectRelease();
            sub_1A5B4FBE8((uint64_t)&v18, &qword_1ED110560);
            return 0;
          }
          if ((swift_dynamicCast() & 1) != 0)
          {
            v10 = objc_allocWithZone((Class)type metadata accessor for TicketStatus());
            v3 = TicketStatus.init(rawValue:)(v16, v17);
            if (v3)
            {
              v11 = (objc_class *)type metadata accessor for Ticket();
              v12 = (char *)objc_allocWithZone(v11);
              v13 = &v12[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_ticket];
              *(_QWORD *)v13 = v16;
              *((_QWORD *)v13 + 1) = v6;
              *(_QWORD *)&v12[OBJC_IVAR____TtC25CloudSubscriptionFeatures6Ticket_status] = v3;
              v15.receiver = v12;
              v15.super_class = v11;
              v14 = v3;
              v3 = objc_msgSendSuper2(&v15, sel_init);
              sub_1A5B96F40();

            }
            else
            {
              swift_bridgeObjectRelease();
            }
            return v3;
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_1A5BB457C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[32] = a4;
  v5[33] = v4;
  v5[30] = a2;
  v5[31] = a3;
  v5[29] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B0);
  v5[34] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5BB45E0()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  unint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  unint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  BOOL v30;
  unint64_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  BOOL v39;
  unint64_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[5];

  v1 = (_OWORD *)(v0 + 96);
  v48 = *(_QWORD *)(v0 + 264) + 112;
  swift_beginAccess();
  v2 = *(_QWORD *)v48;
  if (!*(_QWORD *)(*(_QWORD *)v48 + 16))
  {
    *(_QWORD *)(v0 + 128) = 0;
    *v1 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
LABEL_12:
    sub_1A5B4FBE8(v0 + 96, &qword_1ED111158);
    goto LABEL_14;
  }
  v3 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1A5B5AB84(v3, v4);
  if ((v6 & 1) != 0)
  {
    sub_1A5B569A4(*(_QWORD *)(v2 + 56) + 40 * v5, v0 + 96);
  }
  else
  {
    *(_QWORD *)(v0 + 128) = 0;
    *v1 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v0 + 120))
    goto LABEL_12;
  sub_1A5B579BC((__int128 *)(v0 + 96), v0 + 56);
  sub_1A5B569A4(v0 + 56, v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1108B0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FF60);
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)(v0 + 280) = *(_QWORD *)(v0 + 216);
    if (qword_1ED111140 != -1)
      swift_once();
    v7 = sub_1A5BC9A64();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED1110D0);
    swift_bridgeObjectRetain_n();
    v8 = sub_1A5BC9A4C();
    v9 = sub_1A5BC9D7C();
    v10 = os_log_type_enabled(v8, v9);
    v11 = *(_QWORD *)(v0 + 240);
    if (v10)
    {
      v47 = *(_QWORD *)(v0 + 232);
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v49[0] = v13;
      *(_DWORD *)v12 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 224) = sub_1A5B58A30(v47, v11, v49);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A5B4D000, v8, v9, "TaskLimiter: reusing existing task for identifier %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v13, -1, -1);
      MEMORY[0x1A85B2FC0](v12, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v46 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 288) = v46;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF30);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
    *v46 = v0;
    v46[1] = sub_1A5BB4E24;
    return sub_1A5BC9D1C();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
LABEL_14:
  if (qword_1ED111140 != -1)
    swift_once();
  v14 = sub_1A5BC9A64();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED1110D0);
  swift_bridgeObjectRetain_n();
  v15 = sub_1A5BC9A4C();
  v16 = sub_1A5BC9D7C();
  v17 = os_log_type_enabled(v15, v16);
  v18 = *(_QWORD *)(v0 + 240);
  if (v17)
  {
    v19 = *(_QWORD *)(v0 + 232);
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v49[0] = v21;
    *(_DWORD *)v20 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 200) = sub_1A5B58A30(v19, v18, v49);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v15, v16, "TaskLimiter: creating new task for identifier %s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v21, -1, -1);
    MEMORY[0x1A85B2FC0](v20, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v22 = *(_QWORD *)(v0 + 272);
  v24 = *(_QWORD *)(v0 + 248);
  v23 = *(_QWORD *)(v0 + 256);
  v25 = sub_1A5BC9CF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = 0;
  v26[3] = 0;
  v26[4] = v24;
  v26[5] = v23;
  swift_retain();
  v27 = sub_1A5BB6E1C(v22, (uint64_t)&unk_1EE7FAE78, (uint64_t)v26);
  *(_QWORD *)(v0 + 304) = v27;
  swift_bridgeObjectRetain_n();
  v28 = sub_1A5BC9A4C();
  v29 = sub_1A5BC9D7C();
  v30 = os_log_type_enabled(v28, v29);
  v31 = *(_QWORD *)(v0 + 240);
  if (v30)
  {
    v32 = *(_QWORD *)(v0 + 232);
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v49[0] = v34;
    *(_DWORD *)v33 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 192) = sub_1A5B58A30(v32, v31, v49);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v28, v29, "TaskLimiter: storing task for identifier %s", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v34, -1, -1);
    MEMORY[0x1A85B2FC0](v33, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v36 = *(_QWORD *)(v0 + 232);
  v35 = *(_QWORD *)(v0 + 240);
  v49[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FF60);
  v49[4] = (uint64_t)&off_1E4F6DD88;
  v49[0] = v27;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A5B578E8((uint64_t)v49, v36, v35);
  swift_endAccess();
  swift_bridgeObjectRetain_n();
  v37 = sub_1A5BC9A4C();
  v38 = sub_1A5BC9D7C();
  v39 = os_log_type_enabled(v37, v38);
  v40 = *(_QWORD *)(v0 + 240);
  if (v39)
  {
    v41 = *(_QWORD *)(v0 + 232);
    v42 = (uint8_t *)swift_slowAlloc();
    v43 = swift_slowAlloc();
    v49[0] = v43;
    *(_DWORD *)v42 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 184) = sub_1A5B58A30(v41, v40, v49);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v37, v38, "TaskLimiter: performing task operation for identifier %s", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v43, -1, -1);
    MEMORY[0x1A85B2FC0](v42, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v44 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v44;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF30);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
  *v44 = v0;
  v44[1] = sub_1A5BB4E88;
  return sub_1A5BC9D1C();
}

uint64_t sub_1A5BB4E24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5BB4E88()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5BB4EEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 288) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5BB4F50()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  v1 = *(unsigned __int8 *)(v0 + 320);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1A5BB4FA0()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_1A5BB4FEC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 224);
  v1 = *(_QWORD *)(v0 + 232);
  swift_release();
  sub_1A5B576FC(v2, v1);
  v3 = *(unsigned __int8 *)(v0 + 320);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v3);
}

uint64_t sub_1A5BB5050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[32] = a4;
  v5[33] = v4;
  v5[30] = a2;
  v5[31] = a3;
  v5[29] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B0);
  v5[34] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5BB50B4()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  unint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  unint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  BOOL v30;
  unint64_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  BOOL v39;
  unint64_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[5];

  v1 = (_OWORD *)(v0 + 96);
  v48 = *(_QWORD *)(v0 + 264) + 112;
  swift_beginAccess();
  v2 = *(_QWORD *)v48;
  if (!*(_QWORD *)(*(_QWORD *)v48 + 16))
  {
    *(_QWORD *)(v0 + 128) = 0;
    *v1 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
LABEL_12:
    sub_1A5B4FBE8(v0 + 96, &qword_1ED111158);
    goto LABEL_14;
  }
  v3 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1A5B5AB84(v3, v4);
  if ((v6 & 1) != 0)
  {
    sub_1A5B569A4(*(_QWORD *)(v2 + 56) + 40 * v5, v0 + 96);
  }
  else
  {
    *(_QWORD *)(v0 + 128) = 0;
    *v1 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v0 + 120))
    goto LABEL_12;
  sub_1A5B579BC((__int128 *)(v0 + 96), v0 + 56);
  sub_1A5B569A4(v0 + 56, v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1108B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAED0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)(v0 + 280) = *(_QWORD *)(v0 + 216);
    if (qword_1ED111140 != -1)
      swift_once();
    v7 = sub_1A5BC9A64();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED1110D0);
    swift_bridgeObjectRetain_n();
    v8 = sub_1A5BC9A4C();
    v9 = sub_1A5BC9D7C();
    v10 = os_log_type_enabled(v8, v9);
    v11 = *(_QWORD *)(v0 + 240);
    if (v10)
    {
      v47 = *(_QWORD *)(v0 + 232);
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v49[0] = v13;
      *(_DWORD *)v12 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 224) = sub_1A5B58A30(v47, v11, v49);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A5B4D000, v8, v9, "TaskLimiter: reusing existing task for identifier %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v13, -1, -1);
      MEMORY[0x1A85B2FC0](v12, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v46 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 288) = v46;
    type metadata accessor for GeoClassificationInfo();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
    *v46 = v0;
    v46[1] = sub_1A5BB4E24;
    return sub_1A5BC9D1C();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
LABEL_14:
  if (qword_1ED111140 != -1)
    swift_once();
  v14 = sub_1A5BC9A64();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED1110D0);
  swift_bridgeObjectRetain_n();
  v15 = sub_1A5BC9A4C();
  v16 = sub_1A5BC9D7C();
  v17 = os_log_type_enabled(v15, v16);
  v18 = *(_QWORD *)(v0 + 240);
  if (v17)
  {
    v19 = *(_QWORD *)(v0 + 232);
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v49[0] = v21;
    *(_DWORD *)v20 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 200) = sub_1A5B58A30(v19, v18, v49);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v15, v16, "TaskLimiter: creating new task for identifier %s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v21, -1, -1);
    MEMORY[0x1A85B2FC0](v20, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v22 = *(_QWORD *)(v0 + 272);
  v24 = *(_QWORD *)(v0 + 248);
  v23 = *(_QWORD *)(v0 + 256);
  v25 = sub_1A5BC9CF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = 0;
  v26[3] = 0;
  v26[4] = v24;
  v26[5] = v23;
  swift_retain();
  v27 = sub_1A5BB7080(v22, (uint64_t)&unk_1EE7FAEC8, (uint64_t)v26, (void (*)(_QWORD))type metadata accessor for GeoClassificationInfo);
  *(_QWORD *)(v0 + 304) = v27;
  swift_bridgeObjectRetain_n();
  v28 = sub_1A5BC9A4C();
  v29 = sub_1A5BC9D7C();
  v30 = os_log_type_enabled(v28, v29);
  v31 = *(_QWORD *)(v0 + 240);
  if (v30)
  {
    v32 = *(_QWORD *)(v0 + 232);
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v49[0] = v34;
    *(_DWORD *)v33 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 192) = sub_1A5B58A30(v32, v31, v49);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v28, v29, "TaskLimiter: storing task for identifier %s", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v34, -1, -1);
    MEMORY[0x1A85B2FC0](v33, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v36 = *(_QWORD *)(v0 + 232);
  v35 = *(_QWORD *)(v0 + 240);
  v49[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAED0);
  v49[4] = (uint64_t)&off_1E4F6DD88;
  v49[0] = v27;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A5B578E8((uint64_t)v49, v36, v35);
  swift_endAccess();
  swift_bridgeObjectRetain_n();
  v37 = sub_1A5BC9A4C();
  v38 = sub_1A5BC9D7C();
  v39 = os_log_type_enabled(v37, v38);
  v40 = *(_QWORD *)(v0 + 240);
  if (v39)
  {
    v41 = *(_QWORD *)(v0 + 232);
    v42 = (uint8_t *)swift_slowAlloc();
    v43 = swift_slowAlloc();
    v49[0] = v43;
    *(_DWORD *)v42 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 184) = sub_1A5B58A30(v41, v40, v49);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v37, v38, "TaskLimiter: performing task operation for identifier %s", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v43, -1, -1);
    MEMORY[0x1A85B2FC0](v42, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v44 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v44;
  type metadata accessor for GeoClassificationInfo();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
  *v44 = v0;
  v44[1] = sub_1A5BB4E88;
  return sub_1A5BC9D1C();
}

uint64_t sub_1A5BB58F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[32] = a4;
  v5[33] = v4;
  v5[30] = a2;
  v5[31] = a3;
  v5[29] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B0);
  v5[34] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5BB595C()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  unint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  BOOL v17;
  unint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  BOOL v30;
  unint64_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  BOOL v39;
  unint64_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[5];

  v1 = (_OWORD *)(v0 + 96);
  v48 = *(_QWORD *)(v0 + 264) + 112;
  swift_beginAccess();
  v2 = *(_QWORD *)v48;
  if (!*(_QWORD *)(*(_QWORD *)v48 + 16))
  {
    *(_QWORD *)(v0 + 128) = 0;
    *v1 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
LABEL_12:
    sub_1A5B4FBE8(v0 + 96, &qword_1ED111158);
    goto LABEL_14;
  }
  v3 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1A5B5AB84(v3, v4);
  if ((v6 & 1) != 0)
  {
    sub_1A5B569A4(*(_QWORD *)(v2 + 56) + 40 * v5, v0 + 96);
  }
  else
  {
    *(_QWORD *)(v0 + 128) = 0;
    *v1 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v0 + 120))
    goto LABEL_12;
  sub_1A5B579BC((__int128 *)(v0 + 96), v0 + 56);
  sub_1A5B569A4(v0 + 56, v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1108B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAEB0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)(v0 + 280) = *(_QWORD *)(v0 + 216);
    if (qword_1ED111140 != -1)
      swift_once();
    v7 = sub_1A5BC9A64();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED1110D0);
    swift_bridgeObjectRetain_n();
    v8 = sub_1A5BC9A4C();
    v9 = sub_1A5BC9D7C();
    v10 = os_log_type_enabled(v8, v9);
    v11 = *(_QWORD *)(v0 + 240);
    if (v10)
    {
      v47 = *(_QWORD *)(v0 + 232);
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v49[0] = v13;
      *(_DWORD *)v12 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 224) = sub_1A5B58A30(v47, v11, v49);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A5B4D000, v8, v9, "TaskLimiter: reusing existing task for identifier %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v13, -1, -1);
      MEMORY[0x1A85B2FC0](v12, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v46 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 288) = v46;
    type metadata accessor for Ticket();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
    *v46 = v0;
    v46[1] = sub_1A5BB4E24;
    return sub_1A5BC9D1C();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
LABEL_14:
  if (qword_1ED111140 != -1)
    swift_once();
  v14 = sub_1A5BC9A64();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED1110D0);
  swift_bridgeObjectRetain_n();
  v15 = sub_1A5BC9A4C();
  v16 = sub_1A5BC9D7C();
  v17 = os_log_type_enabled(v15, v16);
  v18 = *(_QWORD *)(v0 + 240);
  if (v17)
  {
    v19 = *(_QWORD *)(v0 + 232);
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v49[0] = v21;
    *(_DWORD *)v20 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 200) = sub_1A5B58A30(v19, v18, v49);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v15, v16, "TaskLimiter: creating new task for identifier %s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v21, -1, -1);
    MEMORY[0x1A85B2FC0](v20, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v22 = *(_QWORD *)(v0 + 272);
  v24 = *(_QWORD *)(v0 + 248);
  v23 = *(_QWORD *)(v0 + 256);
  v25 = sub_1A5BC9CF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 1, 1, v25);
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = 0;
  v26[3] = 0;
  v26[4] = v24;
  v26[5] = v23;
  swift_retain();
  v27 = sub_1A5BB7080(v22, (uint64_t)&unk_1EE7FAEA8, (uint64_t)v26, (void (*)(_QWORD))type metadata accessor for Ticket);
  *(_QWORD *)(v0 + 304) = v27;
  swift_bridgeObjectRetain_n();
  v28 = sub_1A5BC9A4C();
  v29 = sub_1A5BC9D7C();
  v30 = os_log_type_enabled(v28, v29);
  v31 = *(_QWORD *)(v0 + 240);
  if (v30)
  {
    v32 = *(_QWORD *)(v0 + 232);
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v49[0] = v34;
    *(_DWORD *)v33 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 192) = sub_1A5B58A30(v32, v31, v49);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v28, v29, "TaskLimiter: storing task for identifier %s", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v34, -1, -1);
    MEMORY[0x1A85B2FC0](v33, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v36 = *(_QWORD *)(v0 + 232);
  v35 = *(_QWORD *)(v0 + 240);
  v49[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAEB0);
  v49[4] = (uint64_t)&off_1E4F6DD88;
  v49[0] = v27;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A5B578E8((uint64_t)v49, v36, v35);
  swift_endAccess();
  swift_bridgeObjectRetain_n();
  v37 = sub_1A5BC9A4C();
  v38 = sub_1A5BC9D7C();
  v39 = os_log_type_enabled(v37, v38);
  v40 = *(_QWORD *)(v0 + 240);
  if (v39)
  {
    v41 = *(_QWORD *)(v0 + 232);
    v42 = (uint8_t *)swift_slowAlloc();
    v43 = swift_slowAlloc();
    v49[0] = v43;
    *(_DWORD *)v42 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 184) = sub_1A5B58A30(v41, v40, v49);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v37, v38, "TaskLimiter: performing task operation for identifier %s", v42, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v43, -1, -1);
    MEMORY[0x1A85B2FC0](v42, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v44 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v44;
  type metadata accessor for Ticket();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
  *v44 = v0;
  v44[1] = sub_1A5BB4E88;
  return sub_1A5BC9D1C();
}

uint64_t sub_1A5BB61A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[32] = a4;
  v5[33] = v4;
  v5[30] = a2;
  v5[31] = a3;
  v5[29] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B0);
  v5[34] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5BB6204()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5BB6268()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  v1 = *(_QWORD *)(v0 + 208);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1A5BB62B8()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BB6300()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 232);
  v1 = *(_QWORD *)(v0 + 240);
  swift_release();
  sub_1A5B576FC(v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BB635C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[32] = a5;
  v6[33] = v5;
  v6[30] = a3;
  v6[31] = a4;
  v6[28] = a1;
  v6[29] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B0);
  v6[34] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5BB63C0()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  BOOL v10;
  unint64_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  BOOL v18;
  unint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  BOOL v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  BOOL v42;
  unint64_t v43;
  uint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51[5];

  v1 = (_OWORD *)(v0 + 56);
  v50 = *(_QWORD *)(v0 + 264) + 112;
  swift_beginAccess();
  v2 = *(_QWORD *)v50;
  if (!*(_QWORD *)(*(_QWORD *)v50 + 16))
  {
    *(_QWORD *)(v0 + 88) = 0;
    *v1 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
LABEL_12:
    sub_1A5B4FBE8(v0 + 56, &qword_1ED111158);
    goto LABEL_14;
  }
  v4 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_1A5B5AB84(v4, v3);
  if ((v6 & 1) != 0)
  {
    sub_1A5B569A4(*(_QWORD *)(v2 + 56) + 40 * v5, v0 + 56);
  }
  else
  {
    *(_QWORD *)(v0 + 88) = 0;
    *v1 = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v0 + 80))
    goto LABEL_12;
  sub_1A5B579BC((__int128 *)(v0 + 56), v0 + 16);
  sub_1A5B569A4(v0 + 16, v0 + 96);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1108B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF80);
  if ((swift_dynamicCast() & 1) != 0)
  {
    *(_QWORD *)(v0 + 280) = *(_QWORD *)(v0 + 208);
    if (qword_1ED111140 != -1)
      swift_once();
    v7 = sub_1A5BC9A64();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED1110D0);
    swift_bridgeObjectRetain_n();
    v8 = sub_1A5BC9A4C();
    v9 = sub_1A5BC9D7C();
    v10 = os_log_type_enabled(v8, v9);
    v11 = *(_QWORD *)(v0 + 240);
    if (v10)
    {
      v12 = *(_QWORD *)(v0 + 232);
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v51[0] = v14;
      *(_DWORD *)v13 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 216) = sub_1A5B58A30(v12, v11, v51);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A5B4D000, v8, v9, "TaskLimiter: reusing existing task for identifier %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v14, -1, -1);
      MEMORY[0x1A85B2FC0](v13, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v49 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 288) = v49;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
    *v49 = v0;
    v49[1] = sub_1A5BB6C04;
    return sub_1A5BC9D1C();
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
LABEL_14:
  if (qword_1ED111140 != -1)
    swift_once();
  v15 = sub_1A5BC9A64();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED1110D0);
  swift_bridgeObjectRetain_n();
  v16 = sub_1A5BC9A4C();
  v17 = sub_1A5BC9D7C();
  v18 = os_log_type_enabled(v16, v17);
  v19 = *(_QWORD *)(v0 + 240);
  if (v18)
  {
    v20 = *(_QWORD *)(v0 + 232);
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v51[0] = v22;
    *(_DWORD *)v21 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 192) = sub_1A5B58A30(v20, v19, v51);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v16, v17, "TaskLimiter: creating new task for identifier %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v22, -1, -1);
    MEMORY[0x1A85B2FC0](v21, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v23 = *(_QWORD *)(v0 + 272);
  v25 = *(_QWORD *)(v0 + 248);
  v24 = *(_QWORD *)(v0 + 256);
  v26 = sub_1A5BC9CF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v23, 1, 1, v26);
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = 0;
  v27[3] = 0;
  v27[4] = v25;
  v27[5] = v24;
  swift_retain();
  v28 = sub_1A5BB6F50(v23, (uint64_t)&unk_1EE7FAF38, (uint64_t)v27);
  *(_QWORD *)(v0 + 304) = v28;
  swift_bridgeObjectRetain_n();
  v29 = sub_1A5BC9A4C();
  v30 = sub_1A5BC9D7C();
  v31 = os_log_type_enabled(v29, v30);
  v32 = *(_QWORD *)(v0 + 240);
  if (v31)
  {
    v33 = v28;
    v34 = *(_QWORD *)(v0 + 232);
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v51[0] = v36;
    *(_DWORD *)v35 = 136315138;
    swift_bridgeObjectRetain();
    v37 = v34;
    v28 = v33;
    *(_QWORD *)(v0 + 184) = sub_1A5B58A30(v37, v32, v51);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v29, v30, "TaskLimiter: storing task for identifier %s", v35, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v36, -1, -1);
    MEMORY[0x1A85B2FC0](v35, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v39 = *(_QWORD *)(v0 + 232);
  v38 = *(_QWORD *)(v0 + 240);
  v51[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF80);
  v51[4] = (uint64_t)&off_1E4F6DD88;
  v51[0] = v28;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1A5B578E8((uint64_t)v51, v39, v38);
  swift_endAccess();
  swift_bridgeObjectRetain_n();
  v40 = sub_1A5BC9A4C();
  v41 = sub_1A5BC9D7C();
  v42 = os_log_type_enabled(v40, v41);
  v43 = *(_QWORD *)(v0 + 240);
  if (v42)
  {
    v44 = *(_QWORD *)(v0 + 232);
    v45 = (uint8_t *)swift_slowAlloc();
    v46 = swift_slowAlloc();
    v51[0] = v46;
    *(_DWORD *)v45 = 136315138;
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 200) = sub_1A5B58A30(v44, v43, v51);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v40, v41, "TaskLimiter: performing task operation for identifier %s", v45, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v46, -1, -1);
    MEMORY[0x1A85B2FC0](v45, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  v47 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v47;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
  *v47 = v0;
  v47[1] = sub_1A5BB6CF8;
  return sub_1A5BC9D1C();
}

uint64_t sub_1A5BB6C04()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5BB6C68()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BB6CB0()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BB6CF8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5BB6D5C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 232);
  v1 = *(_QWORD *)(v0 + 240);
  swift_release();
  sub_1A5B576FC(v2, v1);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BB6DB8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v6;
  *v6 = v4;
  v6[1] = sub_1A5B65618;
  return v8(a1);
}

uint64_t sub_1A5BB6E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1A5BC9CF8();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1A5BC9CEC();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1A5B4FBE8(a1, &qword_1ED1112B0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A5BC9CBC();
    swift_unknownObjectRelease();
  }
LABEL_5:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF30);
  return swift_task_create();
}

uint64_t sub_1A5BB6F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1A5BC9CF8();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1A5BC9CEC();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_1A5B4FBE8(a1, &qword_1ED1112B0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A5BC9CBC();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_1A5BB7080(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;

  v7 = sub_1A5BC9CF8();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, 1, v7) != 1)
  {
    sub_1A5BC9CEC();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1A5B4FBE8(a1, &qword_1ED1112B0);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1A5BC9CBC();
    swift_unknownObjectRelease();
  }
LABEL_5:
  a4(0);
  return swift_task_create();
}

id DaemonController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id DaemonController.init()()
{
  id v0;
  id v1;
  id v2;
  id v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedSessionWithNoUrlCache);
  v1 = objc_msgSend(v0, sel_urlSession);

  v2 = objc_allocWithZone((Class)type metadata accessor for DaemonController());
  v3 = DaemonController.init(session:)(v1);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v3;
}

id DaemonController.__allocating_init(session:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return DaemonController.init(session:)(a1);
}

uint64_t sub_1A5BB72A0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[4];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A5BC9CF8();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  v8 = v0;
  if (v7 == 1)
  {
    sub_1A5B4FBE8((uint64_t)v3, &qword_1ED1112B0);
  }
  else
  {
    sub_1A5BC9CEC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_1A5BC9CBC();
      v11 = v10;
      swift_unknownObjectRelease();
      if (v11 | v9)
      {
        v13[0] = 0;
        v13[1] = 0;
        v13[2] = v9;
        v13[3] = v11;
      }
    }
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1A5BB745C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_1A5BB7474()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;

  v1 = (_QWORD *)(v0[2] + OBJC_IVAR___DaemonController_configStore);
  v0[3] = *v1;
  v2 = v1[1];
  v0[4] = v2;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 72))(1, ObjectType, v2);
  if (qword_1ED111140 != -1)
    swift_once();
  v4 = sub_1A5BC9A64();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED1110D0);
  v5 = sub_1A5BC9A4C();
  v6 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1A5B4D000, v5, v6, "Start Fetching Subscriber status", v7, 2u);
    MEMORY[0x1A85B2FC0](v7, -1, -1);
  }
  v8 = v0[2];

  v0[5] = *(_QWORD *)(v8 + OBJC_IVAR___DaemonController_taskLimiters);
  return swift_task_switch();
}

uint64_t sub_1A5BB75A8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = sub_1A5B50C44(0xD000000000000012, 0x80000001A5BD2E30);
  return swift_task_switch();
}

uint64_t sub_1A5BB7600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR___DaemonController_accountStore);
  v2 = swift_allocObject();
  *(_QWORD *)(v0 + 56) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE7FAF28 + dword_1EE7FAF28);
  swift_unknownObjectRetain();
  swift_retain();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_1A5BB76D4;
  return v5((uint64_t)v5, 0xD000000000000012, 0x80000001A5BD2E30, (uint64_t)&unk_1EE7FAF20, v2);
}

uint64_t sub_1A5BB76D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_1A5BB7748()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BB7754()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BB7790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (__cdecl *v7)();

  v4[11] = a3;
  v4[12] = a4;
  v4[10] = a2;
  v7 = (uint64_t (__cdecl *)())((char *)&dword_1EE7FA5C0 + dword_1EE7FA5C0);
  v5 = (_QWORD *)swift_task_alloc();
  v4[13] = v5;
  *v5 = v4;
  v5[1] = sub_1A5BB77F0;
  return v7();
}

uint64_t sub_1A5BB77F0(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_BYTE *)(v3 + 124) = a1;
  *(_QWORD *)(v3 + 112) = v1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5BB7860()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;

  v1 = *(unsigned __int8 *)(v0 + 124);
  v2 = *(_QWORD *)(v0 + 88);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, ObjectType, v2);
  return swift_task_switch();
}

uint64_t sub_1A5BB78C8()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 124);
  swift_beginAccess();
  sub_1A5B60A5C(v1);
  swift_endAccess();
  return swift_task_switch();
}

uint64_t sub_1A5BB7938()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  int v4;
  uint8_t *v5;

  if (qword_1ED111140 != -1)
    swift_once();
  v1 = sub_1A5BC9A64();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED1110D0);
  v2 = sub_1A5BC9A4C();
  v3 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(unsigned __int8 *)(v0 + 124);
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 67240192;
    *(_DWORD *)(v0 + 120) = v4;
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v2, v3, "Subscriber status fetched: %{BOOL,public}d", v5, 8u);
    MEMORY[0x1A85B2FC0](v5, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BB7A58()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;

  if (qword_1ED111140 != -1)
    swift_once();
  v1 = *(void **)(v0 + 112);
  v2 = sub_1A5BC9A64();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED1110D0);
  v3 = v1;
  v4 = v1;
  v5 = sub_1A5BC9A4C();
  v6 = sub_1A5BC9DA0();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 112);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14 = v10;
    *(_DWORD *)v9 = 136446210;
    swift_getErrorValue();
    v11 = sub_1A5BCA130();
    *(_QWORD *)(v0 + 72) = sub_1A5B58A30(v11, v12, &v14);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1A5B4D000, v5, v6, "Subscriber status fetch failed with error: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v10, -1, -1);
    MEMORY[0x1A85B2FC0](v9, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_1A5BB7C4C(void *a1)
{
  type metadata accessor for Assets();
  sub_1A5B92498();
  return objc_msgSend(a1, sel_setTaskCompleted);
}

uint64_t sub_1A5BB7C84()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED110518);
  v0[2] = v1;
  v0[3] = *(_QWORD *)(v1 - 8);
  v0[4] = swift_task_alloc();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED110520);
  v0[5] = v2;
  v0[6] = *(_QWORD *)(v2 - 8);
  v0[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5BB7D10()
{
  uint64_t v0;
  _QWORD *v1;

  sub_1A5BC9A1C();
  sub_1A5BC9D04();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_1A5BB7D9C;
  return sub_1A5BC9D10();
}

uint64_t sub_1A5BB7D9C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5BB7DF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  id v10;
  void *v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _QWORD *v19;

  if (*(_BYTE *)(v0 + 72) == 2)
  {
    v2 = *(_QWORD *)(v0 + 48);
    v1 = *(_QWORD *)(v0 + 56);
    v3 = *(_QWORD *)(v0 + 40);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 24) + 8))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 16));
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_1ED111140 != -1)
      swift_once();
    v5 = sub_1A5BC9A64();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED1110D0);
    v6 = sub_1A5BC9A4C();
    v7 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1A5B4D000, v6, v7, "Received new value in stream for asset notification.", v8, 2u);
      MEMORY[0x1A85B2FC0](v8, -1, -1);
    }

    type metadata accessor for FollowUp();
    v9 = (_QWORD *)swift_allocObject();
    v9[5] = &type metadata for SiriAssistantLocale;
    v9[6] = &protocol witness table for SiriAssistantLocale;
    v10 = objc_allocWithZone(MEMORY[0x1E0D15E30]);
    v11 = (void *)sub_1A5BC9B3C();
    v12 = objc_msgSend(v10, sel_initWithClientIdentifier_, v11);

    if (v12)
    {
      v9[7] = v12;
      sub_1A5BAFF90();
      swift_release();
    }
    else
    {
      if (qword_1ED110448 != -1)
        swift_once();
      __swift_project_value_buffer(v5, (uint64_t)qword_1ED110430);
      v13 = sub_1A5BC9A4C();
      v14 = sub_1A5BC9D88();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_1A5B4D000, v13, v14, "Unable to make followup controller. Will not post CFUs.", v15, 2u);
        MEMORY[0x1A85B2FC0](v15, -1, -1);
      }

      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v9 + 2));
      swift_deallocPartialClassInstance();
      v16 = sub_1A5BC9A4C();
      v17 = sub_1A5BC9D88();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_1A5B4D000, v16, v17, "Attempted to check for deferred notification eligibility and post but could not create FollowUp object.", v18, 2u);
        MEMORY[0x1A85B2FC0](v18, -1, -1);
      }

    }
    v19 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 64) = v19;
    *v19 = v0;
    v19[1] = sub_1A5BB7D9C;
    return sub_1A5BC9D10();
  }
}

uint64_t sub_1A5BB814C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5B56960(a1, (uint64_t)v8, &qword_1ED1112B0);
  v9 = sub_1A5BC9CF8();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1A5B4FBE8((uint64_t)v8, &qword_1ED1112B0);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_1A5BC9CBC();
      v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1A5BC9CEC();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v11 = 0;
  v13 = 0;
LABEL_6:
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

void sub_1A5BB82E4(_xpc_activity_s *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _BOOL4 v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  NSObject *v13;
  _BOOL4 v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (xpc_activity_should_defer(a1))
  {
    v6 = xpc_activity_set_state(a1, 3);
    if (qword_1ED111140 != -1)
      swift_once();
    v7 = sub_1A5BC9A64();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED1110D0);
    v13 = sub_1A5BC9A4C();
    v8 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v13, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v9 = 67240192;
      v14 = v6;
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v13, v8, "run deferred, result: %{BOOL,public}d", v9, 8u);
      MEMORY[0x1A85B2FC0](v9, -1, -1);
    }

  }
  else
  {
    v10 = sub_1A5BC9CF8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = 0;
    v11[3] = 0;
    v11[4] = v1;
    v11[5] = a1;
    v12 = v1;
    swift_unknownObjectRetain();
    sub_1A5BA0C88((uint64_t)v5, (uint64_t)&unk_1EE7FAE90, (uint64_t)v11);
    swift_release();
  }
}

uint64_t sub_1A5BB84C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[8] = a4;
  v5[9] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v5[10] = swift_task_alloc();
  v6 = sub_1A5BC9974();
  v5[11] = v6;
  v5[12] = *(_QWORD *)(v6 - 8);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5BB8560()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  double v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 64) + OBJC_IVAR___DaemonController_configStore + 8);
  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v1 + 64))(ObjectType, v1) & 1) != 0)
    sub_1A5BB72A0();
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 80);
  sub_1A5BBA6BC(*(_xpc_activity_s **)(v0 + 72), v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1)
  {
    sub_1A5B4FBE8(*(_QWORD *)(v0 + 80), &qword_1ED111280);
    if (qword_1ED111140 != -1)
      swift_once();
    v6 = sub_1A5BC9A64();
    *(_QWORD *)(v0 + 128) = __swift_project_value_buffer(v6, (uint64_t)qword_1ED1110D0);
    v7 = sub_1A5BC9A4C();
    v8 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1A5B4D000, v7, v8, "rebuilding cache, fetching all features from service", v9, 2u);
      MEMORY[0x1A85B2FC0](v9, -1, -1);
    }

    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v10;
    *v10 = v0;
    v10[1] = sub_1A5BB89DC;
    return sub_1A5BB9694(*(_QWORD *)(v0 + 104));
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 32))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
  if (qword_1ED111140 != -1)
    swift_once();
  v13 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 120);
  v15 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 96);
  v16 = sub_1A5BC9A64();
  __swift_project_value_buffer(v16, (uint64_t)qword_1ED1110D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v13, v12, v15);
  v17 = sub_1A5BC9A4C();
  v18 = sub_1A5BC9DA0();
  v19 = os_log_type_enabled(v17, v18);
  v20 = *(_QWORD *)(v0 + 112);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  if (v19)
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v34 = v24;
    *(_DWORD *)v23 = 136315138;
    sub_1A5B50E80((unint64_t *)&qword_1ED10FB90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v25 = sub_1A5BCA094();
    *(_QWORD *)(v0 + 24) = sub_1A5B58A30(v25, v26, &v34);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    v27 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v27(v20, v21);
    _os_log_impl(&dword_1A5B4D000, v17, v18, "rebuilding cache deferred to %s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v24, -1, -1);
    MEMORY[0x1A85B2FC0](v23, -1, -1);
  }
  else
  {
    v27 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v27(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88));
  }

  result = sub_1A5BC992C();
  if ((~*(_QWORD *)&v28 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v28 <= -9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v28 >= 9.22337204e18)
  {
LABEL_22:
    __break(1u);
    return result;
  }
  v29 = *(_QWORD *)(v0 + 120);
  v30 = *(_QWORD *)(v0 + 88);
  sub_1A5BB8FF0(*(_xpc_activity_s **)(v0 + 72), (uint64_t)v28);
  v27(v29, v30);
  v31 = sub_1A5BC9A4C();
  v32 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v33 = 0;
    _os_log_impl(&dword_1A5B4D000, v31, v32, "run complete", v33, 2u);
    MEMORY[0x1A85B2FC0](v33, -1, -1);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BB89DC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5BB8A40()
{
  uint64_t v0;
  uint64_t result;
  double v2;
  void *v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  NSObject *v8;
  uint8_t *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  result = sub_1A5BC992C();
  if ((~*(_QWORD *)&v2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v2 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v3 = *(void **)(v0 + 64);
  sub_1A5BB8FF0(*(_xpc_activity_s **)(v0 + 72), (uint64_t)v2);
  v4 = v3;
  v5 = sub_1A5BC9A4C();
  v6 = sub_1A5BC9D7C();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(NSObject **)(v0 + 64);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v9 = 134217984;
    *(v0 + 56) = *((char *)v8 + OBJC_IVAR___DaemonController_minimumActivityInterval);
    sub_1A5BC9E18();

    _os_log_impl(&dword_1A5B4D000, v5, v6, "Resetting backoff time to %lld", v9, 0xCu);
    MEMORY[0x1A85B2FC0](v9, -1, -1);
  }
  else
  {

    v5 = v8;
  }

  v10 = *(_QWORD *)(v0 + 64);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  *(_QWORD *)(v10 + OBJC_IVAR___DaemonController_failureActivityInterval) = *(_QWORD *)(v10
                                                                                      + OBJC_IVAR___DaemonController_minimumActivityInterval);
  v11 = sub_1A5BC9A4C();
  v12 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_1A5B4D000, v11, v12, "run complete", v13, 2u);
    MEMORY[0x1A85B2FC0](v13, -1, -1);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BB8C5C()
{
  uint64_t v0;
  void *v1;
  id v2;
  _xpc_activity_s *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint8_t *v8;
  _xpc_activity_s *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  void *v14;
  uint8_t *v15;
  _xpc_activity_s *v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;

  v1 = *(void **)(v0 + 144);
  *(_QWORD *)(v0 + 16) = v1;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED111290);
  if ((swift_dynamicCast() & 1) != 0)
  {

    if (*(_BYTE *)(v0 + 152) == 1)
    {
      if (qword_1ED111118 != -1)
        swift_once();
      v3 = *(_xpc_activity_s **)(v0 + 72);
      sub_1A5B8D294();
      v4 = sub_1A5BB92E8();
      sub_1A5BB8FF0(v3, v4);
      v5 = sub_1A5BC9A4C();
      v6 = sub_1A5BC9DA0();
      if (!os_log_type_enabled(v5, v6))
        goto LABEL_13;
      v7 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v7 = 134349056;
      *(_QWORD *)(v0 + 48) = v4;
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v5, v6, "empty response, rescheduling with interval %{public}lld", v7, 0xCu);
      v8 = v7;
    }
    else
    {
      v16 = *(_xpc_activity_s **)(v0 + 72);
      v17 = sub_1A5BB92E8();
      sub_1A5BB8FF0(v16, v17);
      v5 = sub_1A5BC9A4C();
      v18 = sub_1A5BC9D88();
      if (!os_log_type_enabled(v5, v18))
      {
LABEL_13:

        goto LABEL_14;
      }
      v19 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v19 = 134349056;
      *(_QWORD *)(v0 + 40) = v17;
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v5, v18, "invalid new expiration after successful fetch, rescheduling with interval %{public}lld", v19, 0xCu);
      v8 = v19;
    }
    MEMORY[0x1A85B2FC0](v8, -1, -1);
    goto LABEL_13;
  }
  v9 = *(_xpc_activity_s **)(v0 + 72);

  v10 = sub_1A5BB92E8();
  sub_1A5BB8FF0(v9, v10);
  v11 = sub_1A5BC9A4C();
  v12 = sub_1A5BC9D88();
  v13 = os_log_type_enabled(v11, v12);
  v14 = *(void **)(v0 + 144);
  if (v13)
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v15 = 134349056;
    *(_QWORD *)(v0 + 32) = v10;
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v11, v12, "failed, rescheduling with interval %{public}lld", v15, 0xCu);
    MEMORY[0x1A85B2FC0](v15, -1, -1);
  }

LABEL_14:
  v20 = sub_1A5BC9A4C();
  v21 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_1A5B4D000, v20, v21, "run complete", v22, 2u);
    MEMORY[0x1A85B2FC0](v22, -1, -1);
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1A5BB8FF0(_xpc_activity_s *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  xpc_object_t empty;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _xpc_activity_s *v23;
  uint64_t v24;
  uint64_t v25;

  v4 = sub_1A5BC9974();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED111140 != -1)
    swift_once();
  v8 = sub_1A5BC9A64();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED1110D0);
  v9 = sub_1A5BC9A4C();
  v10 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v21 = v5;
    v12 = v11;
    v22 = swift_slowAlloc();
    v24 = a2;
    v25 = v22;
    *(_DWORD *)v12 = 134349314;
    v23 = a1;
    sub_1A5BC9E18();
    *(_WORD *)(v12 + 12) = 2082;
    v20 = v12 + 14;
    sub_1A5BC9920();
    sub_1A5B50E80((unint64_t *)&qword_1ED10FB90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v13 = sub_1A5BCA094();
    v15 = v14;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v4);
    v24 = sub_1A5B58A30(v13, v15, &v25);
    a1 = v23;
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A5B4D000, v9, v10, "scheduling cache reload in before %{public}llds (%{public}s)", (uint8_t *)v12, 0x16u);
    v16 = v22;
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v16, -1, -1);
    MEMORY[0x1A85B2FC0](v12, -1, -1);
  }

  empty = xpc_activity_copy_criteria(a1);
  if (empty)
    goto LABEL_8;
  empty = xpc_dictionary_create_empty();
  xpc_dictionary_set_string(empty, (const char *)*MEMORY[0x1E0C80878], (const char *)*MEMORY[0x1E0C80888]);
  xpc_dictionary_set_BOOL(empty, (const char *)*MEMORY[0x1E0C80738], 1);
  xpc_dictionary_set_BOOL(empty, (const char *)*MEMORY[0x1E0C80898], 0);
  if (*MEMORY[0x1E0C808D0])
  {
    xpc_dictionary_set_BOOL(empty, (const char *)*MEMORY[0x1E0C808D0], 1);
LABEL_8:
    v18 = sub_1A5BB95D8(a2);
    sub_1A5BBC0B0(empty, v18, v19);
    xpc_activity_set_criteria(a1, empty);
    swift_unknownObjectRelease();
    return;
  }
  __break(1u);
}

uint64_t sub_1A5BB92E8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t ObjectType;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  double v19;
  double v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1A5BC9974();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)&v0[OBJC_IVAR___DaemonController_configStore + 8];
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v9 + 8))(0x726665527478656ELL, 0xEF65746144687365, ObjectType, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1A5B4FBE8((uint64_t)v4, &qword_1ED111280);
    v11 = OBJC_IVAR___DaemonController_failureActivityInterval;
    v12 = *(_QWORD *)&v0[OBJC_IVAR___DaemonController_failureActivityInterval];
    if (v12 + 0x4000000000000000 < 0)
    {
      __break(1u);
    }
    else
    {
      v13 = 2 * v12;
      if (*(_QWORD *)&v0[OBJC_IVAR___DaemonController_maximumActivityInterval] < 2 * v12)
        v13 = *(_QWORD *)&v0[OBJC_IVAR___DaemonController_maximumActivityInterval];
      *(_QWORD *)&v0[OBJC_IVAR___DaemonController_failureActivityInterval] = v13;
      if (qword_1ED111140 == -1)
        goto LABEL_6;
    }
    swift_once();
LABEL_6:
    v14 = sub_1A5BC9A64();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED1110D0);
    v15 = v0;
    v16 = sub_1A5BC9A4C();
    v17 = sub_1A5BC9D7C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      *(_DWORD *)v18 = 134218240;
      v23 = v12;
      sub_1A5BC9E18();
      *(_WORD *)(v18 + 12) = 2048;
      v23 = *(_QWORD *)&v1[v11];
      sub_1A5BC9E18();

      _os_log_impl(&dword_1A5B4D000, v16, v17, "Backoff time increased. Current backoff: %lld. Next backoff: %lld", (uint8_t *)v18, 0x16u);
      MEMORY[0x1A85B2FC0](v18, -1, -1);

    }
    else
    {

    }
    return v12;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  sub_1A5BC992C();
  v20 = v19;
  result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((~*(_QWORD *)&v20 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v20 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v20 < 9.22337204e18)
    return (uint64_t)v20;
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1A5BB95D8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR___DaemonController_minimumActivityInterval);
  if (v2 <= result)
    v2 = result;
  if (v2 >= *(_QWORD *)(v1 + OBJC_IVAR___DaemonController_maximumActivityInterval))
    v2 = *(_QWORD *)(v1 + OBJC_IVAR___DaemonController_maximumActivityInterval);
  if ((*MEMORY[0x1E0C807C0] & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v2 < 0 || v2 >= *MEMORY[0x1E0C807C0])
  {
    v4 = (double)v2 * 0.2;
    if ((~*(_QWORD *)&v4 & 0x7FF0000000000000) == 0)
    {
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    if (v4 <= -9.22337204e18)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    if (v4 >= 9.22337204e18)
    {
LABEL_21:
      __break(1u);
      return result;
    }
    if ((uint64_t)v4 <= 1)
      v3 = 1;
    else
      v3 = (uint64_t)v4;
  }
  else
  {
    v3 = 1;
  }
  result = v2 - v3;
  if (__OFSUB__(v2, v3))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_1A5BB9694(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[9] = a1;
  v2[10] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v2[11] = swift_task_alloc();
  v3 = sub_1A5BC9974();
  v2[12] = v3;
  v2[13] = *(_QWORD *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5BB9758()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 160) = *(_QWORD *)(*(_QWORD *)(v0 + 80) + OBJC_IVAR___DaemonController_taskLimiters);
  return swift_task_switch();
}

uint64_t sub_1A5BB977C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 168) = sub_1A5B50C44(0x75746165466C6C61, 0xEB00000000736572);
  return swift_task_switch();
}

uint64_t sub_1A5BB97D8()
{
  _QWORD *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  id v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);

  if (qword_1ED10FB68 != -1)
    swift_once();
  v1 = sub_1A5BC9A64();
  v0[22] = v1;
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED10FBE8);
  v2 = sub_1A5BC9A4C();
  v3 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1A5B4D000, v2, v3, "Attempting to get eligibility.", v4, 2u);
    MEMORY[0x1A85B2FC0](v4, -1, -1);
  }

  v5 = sub_1A5B85398();
  v0[23] = v5;
  v6 = swift_allocObject();
  v0[24] = v6;
  *(_QWORD *)(v6 + 16) = v5;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EE7FAE60 + dword_1EE7FAE60);
  v7 = v5;
  v8 = (_QWORD *)swift_task_alloc();
  v0[25] = v8;
  *v8 = v0;
  v8[1] = sub_1A5BB9AC4;
  return v10(0x75746165466C6C61, 0xEB00000000736572, (uint64_t)&unk_1EE7FAE58, v6);
}

uint64_t sub_1A5BB9AC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 208) = a1;
  *(_QWORD *)(v3 + 216) = v1;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_1A5BB9B38()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t ObjectType;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  void *v50;
  uint64_t v51;
  uint64_t (*v52)(void);
  uint64_t v53;
  uint64_t v54;
  _BYTE *v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  void *v59;
  _BYTE *v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  char *v64[2];

  v1 = v0[26];
  if (v1 >> 62)
    goto LABEL_27;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v2)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    if (qword_1ED111140 != -1)
      swift_once();
    __swift_project_value_buffer(v0[22], (uint64_t)qword_1ED1110D0);
    v56 = sub_1A5BC9A4C();
    v57 = sub_1A5BC9D88();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v58 = 0;
      _os_log_impl(&dword_1A5B4D000, v56, v57, "no feature availability in response", v58, 2u);
      MEMORY[0x1A85B2FC0](v58, -1, -1);
    }
    v59 = (void *)v0[23];

    sub_1A5BBC394();
    swift_allocError();
    *v60 = 1;
    swift_willThrow();

    swift_release();
    goto LABEL_33;
  }
  while (1)
  {
    if (qword_1ED111118 != -1)
      swift_once();
    v3 = v0[26];
    v5 = v0[17];
    v4 = v0[18];
    v6 = v0[12];
    v7 = v0[13];
    sub_1A5B8D294();
    sub_1A5BC98CC();
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v9 = v4;
    v10 = v3;
    v8(v5, v9, v6);
    v11 = v1 & 0xC000000000000001;
    v12 = v0[27];
    swift_bridgeObjectRetain();
    if (v11)
      v13 = (char *)MEMORY[0x1A85B2594](0, v0[26]);
    else
      v13 = (char *)*(id *)(v10 + 32);
    v14 = v13;
    v15 = (char *)v0[17];
    v16 = v0[15];
    v64[0] = v14;
    sub_1A5BBA2A4(v15, v64, v16);
    if (v12)
    {
      v17 = v0[17];
      v18 = v0[12];

      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v17, v18);
    }
    v61 = v8;
    v62 = v10;
    v20 = v0[17];
    v21 = v0[15];
    v22 = v0[12];

    v63 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v63(v20, v22);
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
    v23(v20, v21, v22);
    if (v2 == 1)
      break;
    v24 = 5;
    while (1)
    {
      v1 = v24 - 4;
      v25 = v11 ? (char *)MEMORY[0x1A85B2594](v24 - 4, v0[26]) : (char *)*(id *)(v62 + 8 * v24);
      v26 = v25;
      v27 = v24 - 3;
      if (__OFADD__(v1, 1))
        break;
      v28 = (char *)v0[17];
      v29 = v0[15];
      v64[0] = v26;
      sub_1A5BBA2A4(v28, v64, v29);
      v30 = v0[17];
      v31 = v0[15];
      v32 = v0[12];

      v63(v30, v32);
      v23(v30, v31, v32);
      ++v24;
      if (v27 == v2)
        goto LABEL_17;
    }
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    v2 = sub_1A5BC9F5C();
    swift_bridgeObjectRelease();
    if (!v2)
      goto LABEL_28;
  }
LABEL_17:
  v34 = v0[18];
  v33 = v0[19];
  v35 = v0[17];
  v36 = v0[12];
  v37 = v0[13];
  v39 = v0[10];
  v38 = v0[11];
  swift_bridgeObjectRelease();
  v23(v33, v35, v36);
  v63(v34, v36);
  swift_bridgeObjectRelease();
  sub_1A5B8B314();
  v40 = *(_QWORD *)(v39 + OBJC_IVAR___DaemonController_configStore + 8);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v40 + 8))(0x726665527478656ELL, 0xEF65746144687365, ObjectType, v40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v38, 1, v36) == 1)
  {
    v42 = v0[11];
    sub_1A5BC98C0();
    sub_1A5B4FBE8(v42, &qword_1ED111280);
  }
  else
  {
    v23(v0[16], v0[11], v0[12]);
  }
  v43 = v0[19];
  v44 = v0[16];
  v45 = v0[14];
  v46 = v0[12];
  v47 = v0[9];
  sub_1A5B50E80(&qword_1ED10FB88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  if ((sub_1A5BC9B24() & 1) != 0)
    v48 = v44;
  else
    v48 = v43;
  v61(v47, v48, v46);
  v63(v44, v46);
  sub_1A5BC98CC();
  v49 = sub_1A5BC9908();
  v63(v45, v46);
  v50 = (void *)v0[23];
  v51 = v0[19];
  if ((v49 & 1) == 0)
  {
    v53 = v0[12];
    v54 = v0[9];
    sub_1A5BBC394();
    swift_allocError();
    *v55 = 0;
    swift_willThrow();
    swift_release();

    v63(v54, v53);
    v63(v51, v53);
LABEL_33:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v52 = (uint64_t (*)(void))v0[1];
    return v52();
  }
  v63(v0[19], v0[12]);

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v52 = (uint64_t (*)(void))v0[1];
  return v52();
}

uint64_t sub_1A5BBA110()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BBA1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v6 = (uint64_t (*)(uint64_t))((char *)&dword_1EE7FA4E8 + dword_1EE7FA4E8);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_1A5BBA210;
  return v6(a2);
}

uint64_t sub_1A5BBA210(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 32) = a1;
  return swift_task_switch();
}

uint64_t sub_1A5BBA28C()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BBA2A4@<X0>(char *a1@<X0>, char **a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD *v26;
  char *v27;
  uint8_t *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint8_t *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;

  v36 = a1;
  v35 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1A5BC9974();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a2;
  if (qword_1ED111118 != -1)
    swift_once();
  v37 = v8;
  v12 = sub_1A5B57E54();
  v13 = objc_msgSend(v12, sel_aa_primaryAppleAccount);
  v14 = v13;
  if (v13)
  {
    v15 = objc_msgSend(v13, sel_aa_altDSID);

    if (v15)
    {
      v16 = sub_1A5BC9B60();
      v14 = v17;

    }
    else
    {

      v16 = 0;
      v14 = 0;
    }
  }
  else
  {

    v16 = 0;
  }
  sub_1A5BC9818();
  swift_allocObject();
  v18 = sub_1A5BC980C();
  sub_1A5B8CCA8(v11, v18, v16, (uint64_t)v14);
  swift_release();
  swift_bridgeObjectRelease();
  v19 = (uint64_t)&v11[OBJC_IVAR___CloudFeature_ttl];
  swift_beginAccess();
  sub_1A5B56960(v19, (uint64_t)v6, &qword_1ED111280);
  v20 = v37;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v6, 1, v7) == 1)
  {
    sub_1A5B4FBE8((uint64_t)v6, &qword_1ED111280);
    if (qword_1ED111140 != -1)
      swift_once();
    v21 = sub_1A5BC9A64();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED1110D0);
    v22 = v11;
    v23 = sub_1A5BC9A4C();
    v24 = sub_1A5BC9D88();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = (_QWORD *)swift_slowAlloc();
      v34 = v25;
      *(_DWORD *)v25 = 138543362;
      v38 = v22;
      v27 = v22;
      v20 = v37;
      sub_1A5BC9E18();
      *v26 = v22;

      v28 = v34;
      _os_log_impl(&dword_1A5B4D000, v23, v24, "feature fetched without TTL: %{public}@", v34, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v26, -1, -1);
      MEMORY[0x1A85B2FC0](v28, -1, -1);
    }
    else
    {

      v23 = v22;
    }
    v32 = v36;

    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v20 + 16))(v35, v32, v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v10, v6, v7);
    sub_1A5B50E80(&qword_1ED10FB88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v29 = v36;
    if ((sub_1A5BC9B18() & 1) != 0)
    {
      v30 = v35;
      v31 = v10;
    }
    else
    {
      v30 = v35;
      v31 = v29;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v20 + 16))(v30, v31, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v10, v7);
  }
}

void sub_1A5BBA6BC(_xpc_activity_s *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  void (*v48)(_QWORD, _QWORD, _QWORD);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  int v53;
  int v54;
  char *v55;
  char *v56;
  _QWORD *v57;
  char *v58;
  char *v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  xpc_object_t empty;
  int64_t int64;
  char *v64;
  NSObject *v65;
  os_log_type_t v66;
  char *v67;
  uint8_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint8_t *v74;
  char *v75;
  char *v76;
  char v77;
  uint64_t v78;
  _QWORD v79[2];
  char *v80;
  char *v81;
  char *v82;
  xpc_activity_t v83;
  uint64_t v84;
  _QWORD *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;

  v3 = v2;
  v83 = a1;
  v87 = a2;
  v84 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FD58);
  MEMORY[0x1E0C80A78](v84);
  v85 = (_QWORD *)((char *)v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_1A5BC9974();
  v91 = *(_QWORD *)(v5 - 8);
  v92 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v86 = (char *)v79 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v89 = (char *)v79 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v81 = (char *)v79 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v80 = (char *)v79 - v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v79 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)v79 - v24;
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)v79 - v27;
  v29 = MEMORY[0x1E0C80A78](v26);
  v31 = (char *)v79 - v30;
  MEMORY[0x1E0C80A78](v29);
  v33 = (char *)v79 - v32;
  if (qword_1ED111118 != -1)
    swift_once();
  v88 = v18;
  sub_1A5B8D47C((uint64_t)v33);
  v34 = *(_QWORD *)(v3 + OBJC_IVAR___DaemonController_configStore + 8);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v34 + 8))(0x726665527478656ELL, 0xEF65746144687365, ObjectType, v34);
  if (qword_1ED111140 != -1)
    swift_once();
  v36 = sub_1A5BC9A64();
  v37 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED1110D0);
  sub_1A5B56960((uint64_t)v33, (uint64_t)v28, &qword_1ED111280);
  v93 = v31;
  sub_1A5B56960((uint64_t)v31, (uint64_t)v25, &qword_1ED111280);
  v38 = sub_1A5BC9A4C();
  v39 = sub_1A5BC9DA0();
  v40 = os_log_type_enabled(v38, v39);
  v82 = v8;
  v90 = v33;
  if (v40)
  {
    v41 = swift_slowAlloc();
    v79[1] = v37;
    v42 = v41;
    v79[0] = swift_slowAlloc();
    v95 = v79[0];
    *(_DWORD *)v42 = 136315394;
    sub_1A5B56960((uint64_t)v28, (uint64_t)v22, &qword_1ED111280);
    v43 = sub_1A5BC9B9C();
    v94 = sub_1A5B58A30(v43, v44, &v95);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    sub_1A5B4FBE8((uint64_t)v28, &qword_1ED111280);
    *(_WORD *)(v42 + 12) = 2080;
    sub_1A5B56960((uint64_t)v25, (uint64_t)v22, &qword_1ED111280);
    v45 = sub_1A5BC9B9C();
    v94 = sub_1A5B58A30(v45, v46, &v95);
    v33 = v90;
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    sub_1A5B4FBE8((uint64_t)v25, &qword_1ED111280);
    _os_log_impl(&dword_1A5B4D000, v38, v39, "existing cache first feature expiry: %s next alllowed retry: %s", (uint8_t *)v42, 0x16u);
    v47 = v79[0];
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v47, -1, -1);
    MEMORY[0x1A85B2FC0](v42, -1, -1);
  }
  else
  {
    sub_1A5B4FBE8((uint64_t)v28, &qword_1ED111280);
    sub_1A5B4FBE8((uint64_t)v25, &qword_1ED111280);
  }

  v48 = (void (*)(_QWORD, _QWORD, _QWORD))v85;
  v49 = (uint64_t)v85 + *(int *)(v84 + 48);
  sub_1A5B56960((uint64_t)v33, (uint64_t)v85, &qword_1ED111280);
  sub_1A5B56960((uint64_t)v93, v49, &qword_1ED111280);
  v50 = v91;
  v51 = v92;
  v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 48);
  v53 = v52((uint64_t)v48, 1, v92);
  v54 = v52(v49, 1, v51);
  v55 = v88;
  if (v53 == 1)
  {
    v56 = v86;
    if (v54 == 1)
    {
      sub_1A5B4FBE8((uint64_t)v93, &qword_1ED111280);
      sub_1A5B4FBE8((uint64_t)v90, &qword_1ED111280);
      goto LABEL_28;
    }
    v85 = *(_QWORD **)(v50 + 32);
    ((void (*)(char *, uint64_t, uint64_t))v85)(v88, v49, v51);
  }
  else
  {
    v57 = *(_QWORD **)(v50 + 32);
    v56 = v86;
    v85 = v57;
    if (v54 == 1)
    {
      ((void (*)(char *, _QWORD, uint64_t))v57)(v88, v48, v51);
    }
    else
    {
      v58 = v80;
      ((void (*)(char *, _QWORD, uint64_t))v57)(v80, v48, v51);
      v59 = v81;
      ((void (*)(char *, uint64_t, uint64_t))v57)(v81, v49, v51);
      sub_1A5B50E80(&qword_1ED10FB88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
      if ((sub_1A5BC9B24() & 1) != 0)
        v60 = v59;
      else
        v60 = v58;
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v55, v60, v51);
      v61 = *(void (**)(char *, uint64_t))(v50 + 8);
      v61(v59, v51);
      v61(v58, v51);
    }
  }
  empty = xpc_activity_copy_criteria(v83);
  if (!empty)
  {
    empty = xpc_dictionary_create_empty();
    xpc_dictionary_set_string(empty, (const char *)*MEMORY[0x1E0C80878], (const char *)*MEMORY[0x1E0C80888]);
    xpc_dictionary_set_BOOL(empty, (const char *)*MEMORY[0x1E0C80738], 1);
    xpc_dictionary_set_BOOL(empty, (const char *)*MEMORY[0x1E0C80898], 0);
    if (!*MEMORY[0x1E0C808D0])
      goto LABEL_31;
    xpc_dictionary_set_BOOL(empty, (const char *)*MEMORY[0x1E0C808D0], 1);
  }
  int64 = xpc_dictionary_get_int64(empty, (const char *)*MEMORY[0x1E0C80760]);
  if (!__OFADD__(int64, xpc_dictionary_get_int64(empty, (const char *)*MEMORY[0x1E0C80790])))
  {
    v64 = v89;
    sub_1A5BC9914();
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v56, v64, v51);
    v65 = sub_1A5BC9A4C();
    v66 = sub_1A5BC9DA0();
    v67 = v56;
    if (os_log_type_enabled(v65, v66))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      v69 = swift_slowAlloc();
      v95 = v69;
      *(_DWORD *)v68 = 136315138;
      sub_1A5B50E80((unint64_t *)&qword_1ED10FB90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v70 = sub_1A5BCA094();
      v94 = sub_1A5B58A30(v70, v71, &v95);
      v51 = v92;
      sub_1A5BC9E18();
      swift_bridgeObjectRelease();
      v72 = *(void (**)(char *, uint64_t))(v91 + 8);
      v72(v67, v51);
      _os_log_impl(&dword_1A5B4D000, v65, v66, "earliest allowed time to rebuild cache: %s", v68, 0xCu);
      swift_arrayDestroy();
      v73 = v69;
      v55 = v88;
      MEMORY[0x1A85B2FC0](v73, -1, -1);
      v74 = v68;
      v50 = v91;
      MEMORY[0x1A85B2FC0](v74, -1, -1);
    }
    else
    {
      v72 = *(void (**)(char *, uint64_t))(v50 + 8);
      v72(v67, v51);
    }

    v75 = v82;
    sub_1A5BC995C();
    v76 = v89;
    v77 = sub_1A5BC98FC();
    swift_unknownObjectRelease();
    v72(v75, v51);
    v72(v76, v51);
    sub_1A5B4FBE8((uint64_t)v93, &qword_1ED111280);
    sub_1A5B4FBE8((uint64_t)v90, &qword_1ED111280);
    if ((v77 & 1) != 0)
    {
      ((void (*)(uint64_t, char *, uint64_t))v85)(v87, v55, v51);
      v78 = 0;
LABEL_29:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v87, v78, 1, v51);
      return;
    }
    v72(v55, v51);
LABEL_28:
    v78 = 1;
    goto LABEL_29;
  }
  __break(1u);
LABEL_31:
  __break(1u);
}

id DaemonController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DaemonController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1A5BBB07C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1A5BC9E6C();
  return sub_1A5BBB0AC(a1, v2);
}

unint64_t sub_1A5BBB0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1A5B8A388(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1A85B2534](v9, a1);
      sub_1A5BBC460((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1A5BBB170(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FFC0);
  v36 = a2;
  v6 = sub_1A5BC9F74();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1A5BCA16C();
    sub_1A5BC9BCC();
    result = sub_1A5BCA184();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1A5BBB484(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1A5B5AB84(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1A5BBB5E0();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_release();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1A5BBB170(v15, a4 & 1);
  v21 = sub_1A5B5AB84(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1A5BCA100();
  __break(1u);
  return result;
}

void *sub_1A5BBB5E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FFC0);
  v2 = *v0;
  v3 = sub_1A5BC9F68();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1A5BBB794()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  __int128 v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111178);
  v2 = *v0;
  v3 = sub_1A5BC9F68();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 40 * v15;
    sub_1A5B569A4(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1A5B579BC(v26, *(_QWORD *)(v4 + 56) + v20);
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1A5BBB97C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  *(_QWORD *)(v4 + 24) = a1;
  v7 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_1A5BBCB6C;
  return v7(v4 + 16);
}

uint64_t sub_1A5BBB9E4(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  *(_QWORD *)(v4 + 16) = a1;
  v7 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v5;
  *v5 = v4;
  v5[1] = sub_1A5BBBA4C;
  return v7(v4 + 32);
}

uint64_t sub_1A5BBBA4C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (!v0)
    **(_BYTE **)(v2 + 16) = *(_BYTE *)(v2 + 32);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1A5BBBAA0(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  *(_QWORD *)(v4 + 24) = a1;
  v7 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 32) = v5;
  *v5 = v4;
  v5[1] = sub_1A5BBBB08;
  return v7(v4 + 16);
}

uint64_t sub_1A5BBBB08()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (!v0)
    **(_QWORD **)(v2 + 24) = *(_QWORD *)(v2 + 16);
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_1A5BBBB58()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112B0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED111140 != -1)
    swift_once();
  v3 = sub_1A5BC9A64();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED1110D0);
  v4 = sub_1A5BC9A4C();
  v5 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1A5B4D000, v4, v5, "Registering for asset notifications.", v6, 2u);
    MEMORY[0x1A85B2FC0](v6, -1, -1);
  }

  sub_1A5BC9CE0();
  v7 = sub_1A5BC9CF8();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v2, 0, 1, v7);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = 0;
  sub_1A5BB814C((uint64_t)v2, (uint64_t)&unk_1EE7FAEF8, v8);
  swift_release();
  return sub_1A5B4FBE8((uint64_t)v2, &qword_1ED1112B0);
}

void sub_1A5BBBCCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t aBlock[6];

  v0 = sub_1A5BC9DB8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1A5BC9DAC();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1A5BC9AD0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED110428 != -1)
    swift_once();
  v8 = sub_1A5BC9A64();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED110408);
  v9 = sub_1A5BC9A4C();
  v10 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v21 = v0;
    v13 = v12;
    aBlock[0] = v12;
    v20[1] = v7;
    *(_DWORD *)v11 = 136315138;
    v22 = sub_1A5B58A30(0xD000000000000014, 0x80000001A5BD31B0, aBlock);
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v9, v10, "Registering for background task %s.", v11, 0xCu);
    swift_arrayDestroy();
    v14 = v13;
    v0 = v21;
    MEMORY[0x1A85B2FC0](v14, -1, -1);
    MEMORY[0x1A85B2FC0](v11, -1, -1);
  }

  sub_1A5B55C6C(0, (unint64_t *)&qword_1ED10FC70);
  sub_1A5BC9AC4();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1A5B50E80(&qword_1ED10FC68, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FC50);
  sub_1A5BBC6FC();
  sub_1A5BC9E54();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  v15 = (void *)sub_1A5BC9DD0();
  v16 = objc_msgSend((id)objc_opt_self(), sel_sharedScheduler);
  v17 = (void *)sub_1A5BC9B3C();
  aBlock[4] = (uint64_t)sub_1A5BB7C4C;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1A5B97920;
  aBlock[3] = (uint64_t)&block_descriptor_52;
  v18 = _Block_copy(aBlock);
  v19 = v15;
  objc_msgSend(v16, sel_registerForTaskWithIdentifier_usingQueue_launchHandler_, v17, v19, v18);
  _Block_release(v18);

}

void sub_1A5BBC0B0(void *a1, int64_t a2, int64_t a3)
{
  uint64_t v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *oslog;
  uint64_t v10;

  xpc_dictionary_set_int64(a1, (const char *)*MEMORY[0x1E0C80790], a3);
  xpc_dictionary_set_int64(a1, (const char *)*MEMORY[0x1E0C80760], a2);
  if (qword_1ED111140 != -1)
    swift_once();
  v5 = sub_1A5BC9A64();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED1110D0);
  oslog = sub_1A5BC9A4C();
  v6 = sub_1A5BC9DA0();
  if (os_log_type_enabled(oslog, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v10 = v8;
    *(_DWORD *)v7 = 136315650;
    sub_1A5B58A30(0xD000000000000022, 0x80000001A5BD30E0, &v10);
    sub_1A5BC9E18();
    *(_WORD *)(v7 + 12) = 2050;
    sub_1A5BC9E18();
    *(_WORD *)(v7 + 22) = 2050;
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, oslog, v6, "activity %s, delay: %{public}lld, grace: %{public}lld", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v8, -1, -1);
    MEMORY[0x1A85B2FC0](v7, -1, -1);

  }
  else
  {

  }
}

uint64_t method lookup function for DaemonController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DaemonController.__allocating_init(session:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of DaemonController.start()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t sub_1A5BBC2E0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A5BBC304(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t);

  v4 = *(_QWORD *)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1A5B65618;
  v5[2] = a1;
  v8 = (uint64_t (*)(uint64_t))((char *)&dword_1EE7FA4E8 + dword_1EE7FA4E8);
  v6 = (_QWORD *)swift_task_alloc();
  v5[3] = v6;
  *v6 = v5;
  v6[1] = sub_1A5BBA210;
  return v8(v4);
}

unint64_t sub_1A5BBC394()
{
  unint64_t result;

  result = qword_1EE7FAE68;
  if (!qword_1EE7FAE68)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCEDDC, &type metadata for PreemptiveCaching);
    atomic_store(result, (unint64_t *)&qword_1EE7FAE68);
  }
  return result;
}

uint64_t sub_1A5BBC3DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1A5B81FC4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EE7FAE70 + dword_1EE7FAE70))(a1, v4, v5, v6);
}

uint64_t sub_1A5BBC460(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1A5BBC494()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5BBC4C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1A5B65618;
  return sub_1A5BB84C0(a1, v4, v5, v7, v6);
}

uint64_t sub_1A5BBC540()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1A5BBC568(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1A5B81FC4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EE7FAEA0 + dword_1EE7FAEA0))(a1, v4, v5, v6);
}

uint64_t sub_1A5BBC5F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1A5B81FC4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EE7FAEC0 + dword_1EE7FAEC0))(a1, v4, v5, v6);
}

uint64_t sub_1A5BBC678(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1A5B81FC4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EE7FAEE0 + dword_1EE7FAEE0))(a1, v4, v5, v6);
}

unint64_t sub_1A5BBC6FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED10FC58;
  if (!qword_1ED10FC58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED10FC50);
    result = MEMORY[0x1A85B2F18](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED10FC58);
  }
  return result;
}

uint64_t sub_1A5BBC748()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1A5BBC76C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1A5B81FC4;
  return sub_1A5BB7C84();
}

uint64_t sub_1A5BBC7D0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5BBC7F4()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1A5BBC820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1A5B81FC4;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_1A5BBC880()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5BBC8AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;
  uint64_t (__cdecl *v7)();

  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_1A5B81FC4;
  *(_QWORD *)(v3 + 96) = v2;
  *(_OWORD *)(v3 + 80) = v4;
  v7 = (uint64_t (__cdecl *)())((char *)&dword_1EE7FA5C0 + dword_1EE7FA5C0);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 104) = v5;
  *v5 = v3;
  v5[1] = sub_1A5BB77F0;
  return v7();
}

uint64_t sub_1A5BBC940(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1A5B81FC4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EE7FAF30 + dword_1EE7FAF30))(a1, v4, v5, v6);
}

uint64_t sub_1A5BBC9C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1A5B81FC4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EE7FAF50 + dword_1EE7FAF50))(a1, v4, v5, v6);
}

uint64_t storeEnumTagSinglePayload for PreemptiveCaching(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5BBCA98 + 4 * byte_1A5BCECF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5BBCACC + 4 * byte_1A5BCECF0[v4]))();
}

uint64_t sub_1A5BBCACC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5BBCAD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5BBCADCLL);
  return result;
}

uint64_t sub_1A5BBCAE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5BBCAF0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5BBCAF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5BBCAFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PreemptiveCaching()
{
  return &type metadata for PreemptiveCaching;
}

unint64_t sub_1A5BBCB1C()
{
  unint64_t result;

  result = qword_1EE7FAF68;
  if (!qword_1EE7FAF68)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCEDB4, &type metadata for PreemptiveCaching);
    atomic_store(result, (unint64_t *)&qword_1EE7FAF68);
  }
  return result;
}

uint64_t sub_1A5BBCB7C(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, unint64_t a5)
{
  uint64_t v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  if (a2 && (a1 == a4 && a5 == a2 || (sub_1A5BCA0B8() & 1) != 0))
    return 1;
  if (qword_1ED110E18 != -1)
    swift_once();
  v11 = sub_1A5BC9A64();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED110E28);
  swift_bridgeObjectRetain_n();
  v12 = a3;
  swift_bridgeObjectRetain_n();
  v13 = v12;
  v14 = sub_1A5BC9A4C();
  v15 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v17 = swift_slowAlloc();
    v20 = v17;
    *(_DWORD *)v16 = 136315394;
    swift_bridgeObjectRetain();
    sub_1A5B58A30(a4, a5, &v20);
    sub_1A5BC9E18();

    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2080;
    if (a2)
      v18 = a1;
    else
      v18 = 7104878;
    if (a2)
      v19 = a2;
    else
      v19 = 0xE300000000000000;
    swift_bridgeObjectRetain();
    sub_1A5B58A30(v18, v19, &v20);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A5B4D000, v14, v15, "invalid geoclassification cache, altDSID changed. Cache altDSID: %s, currentAltDSID: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v17, -1, -1);
    MEMORY[0x1A85B2FC0](v16, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

  }
  return 0;
}

void sub_1A5BBCE08(uint64_t *a1, NSObject *a2, char *a3, uint64_t a4, unint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  unint64_t v36;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t *v50;
  NSObject *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;

  v50 = a1;
  v51 = a2;
  v8 = sub_1A5BC971C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1A5BC9974();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = &a3[OBJC_IVAR____TtC25CloudSubscriptionFeatures21GeoClassificationInfo_cacheTill];
  sub_1A5BC9968();
  v53 = v16;
  LOBYTE(v16) = sub_1A5BC98FC();
  v17 = *(void (**)(char *, uint64_t))(v13 + 8);
  v52 = v12;
  v17(v15, v12);
  if ((v16 & 1) != 0)
  {
    sub_1A5BC974C();
    swift_allocObject();
    sub_1A5BC9740();
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0CAE150], v8);
    sub_1A5BC9728();
    v54 = a3;
    v55 = a4;
    v56 = a5;
    sub_1A5BBD880();
    v27 = sub_1A5BC9734();
    v29 = v28;
    v30 = a3;
    v47 = a4;
    swift_release();
    v48 = v27;
    v49 = v29;
    v31 = (void *)sub_1A5BC9884();
    v32 = v50[1];
    v54 = (char *)*v50;
    v55 = v32;
    swift_bridgeObjectRetain();
    sub_1A5BC9BE4();
    swift_bridgeObjectRetain();
    sub_1A5BC9BE4();
    swift_bridgeObjectRelease();
    sub_1A5BC9BE4();
    swift_bridgeObjectRetain();
    sub_1A5BC9BE4();
    swift_bridgeObjectRelease();
    v33 = (void *)sub_1A5BC9B3C();
    swift_bridgeObjectRelease();
    -[NSObject setObject:forKey:](v51, sel_setObject_forKey_, v31, v33);

    if (qword_1ED110E18 != -1)
      swift_once();
    v34 = sub_1A5BC9A64();
    __swift_project_value_buffer(v34, (uint64_t)qword_1ED110E28);
    v35 = v30;
    v36 = a5;
    swift_bridgeObjectRetain_n();
    v37 = v35;
    v38 = sub_1A5BC9A4C();
    v39 = sub_1A5BC9DA0();
    v51 = v38;
    if (os_log_type_enabled(v38, v39))
    {
      v40 = swift_slowAlloc();
      v41 = (_QWORD *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      v54 = (char *)v42;
      *(_DWORD *)v40 = 138412802;
      v57 = (uint64_t)v37;
      v43 = v37;
      sub_1A5BC9E18();
      *v41 = v37;

      *(_WORD *)(v40 + 12) = 2080;
      swift_bridgeObjectRetain();
      v57 = sub_1A5B58A30(v47, v36, (uint64_t *)&v54);
      sub_1A5BC9E18();

      swift_bridgeObjectRelease_n();
      *(_WORD *)(v40 + 22) = 2082;
      sub_1A5B50E80((unint64_t *)&qword_1ED10FB90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v44 = sub_1A5BCA094();
      v57 = sub_1A5B58A30(v44, v45, (uint64_t *)&v54);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease();
      v46 = v51;
      _os_log_impl(&dword_1A5B4D000, v51, v39, "updating geoclassification cache with info: %@, altDSID: %s, ttl:%{public}s", (uint8_t *)v40, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED1112A0);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v41, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v42, -1, -1);
      MEMORY[0x1A85B2FC0](v40, -1, -1);
      sub_1A5B5D9D4(v48, v49);

    }
    else
    {
      swift_bridgeObjectRelease_n();

      sub_1A5B5D9D4(v48, v49);
    }
  }
  else
  {
    if (qword_1ED110E18 != -1)
      swift_once();
    v18 = sub_1A5BC9A64();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED110E28);
    v19 = a3;
    swift_bridgeObjectRetain_n();
    v20 = v19;
    v21 = sub_1A5BC9A4C();
    v22 = sub_1A5BC9D88();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v54 = (char *)v24;
      *(_DWORD *)v23 = 136315138;
      sub_1A5B50E80((unint64_t *)&qword_1ED10FB90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v25 = sub_1A5BCA094();
      v57 = sub_1A5B58A30(v25, v26, (uint64_t *)&v54);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5B4D000, v21, v22, "cacheTill value is in the past: %s, will not cache this geoclassification", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v24, -1, -1);
      MEMORY[0x1A85B2FC0](v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1A5BBD634(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;

  v12 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAF80);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5BBDCBC();
  sub_1A5BCA1B4();
  v15 = a2;
  v14 = 0;
  type metadata accessor for GeoClassificationInfo();
  sub_1A5B50E80(&qword_1EE7FA8C0, (uint64_t (*)(uint64_t))type metadata accessor for GeoClassificationInfo, (uint64_t)&protocol conformance descriptor for GeoClassificationInfo);
  sub_1A5BCA07C();
  if (!v4)
  {
    v13 = 1;
    sub_1A5BCA064();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1A5BBD790()
{
  _BYTE *v0;

  if (*v0)
    return 0x44495344746C61;
  else
    return 0x6F666E496F6567;
}

uint64_t sub_1A5BBD7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5BBDD00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5BBD7E8()
{
  sub_1A5BBDCBC();
  return sub_1A5BCA1C0();
}

uint64_t sub_1A5BBD810()
{
  sub_1A5BBDCBC();
  return sub_1A5BCA1CC();
}

id sub_1A5BBD838@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1A5BBDDF0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

uint64_t sub_1A5BBD864(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1A5BBD634(a1, *v1, v1[1], v1[2]);
}

unint64_t sub_1A5BBD880()
{
  unint64_t result;

  result = qword_1EE7FAF70;
  if (!qword_1EE7FAF70)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCEE90, &type metadata for GeoCacheBox);
    atomic_store(result, (unint64_t *)&qword_1EE7FAF70);
  }
  return result;
}

uint64_t sub_1A5BBD8C4(uint64_t *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = sub_1A5BC96E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[1];
  v16 = *a1;
  v17 = v8;
  swift_bridgeObjectRetain();
  sub_1A5BC9BE4();
  swift_bridgeObjectRetain();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  swift_bridgeObjectRetain();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_1A5BC9B3C();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(a2, sel_dataForKey_, v9);

  if (!v10)
    return 0;
  v11 = sub_1A5BC989C();
  v13 = v12;

  sub_1A5BC9710();
  swift_allocObject();
  sub_1A5B66D78(v11, v13);
  sub_1A5BC9704();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CAE038], v4);
  sub_1A5BC96EC();
  sub_1A5BBDAD4();
  sub_1A5BC96F8();
  sub_1A5B5D9D4(v11, v13);
  swift_release();
  sub_1A5B5D9D4(v11, v13);
  return v16;
}

unint64_t sub_1A5BBDAD4()
{
  unint64_t result;

  result = qword_1EE7FAF78;
  if (!qword_1EE7FAF78)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCEE68, &type metadata for GeoCacheBox);
    atomic_store(result, (unint64_t *)&qword_1EE7FAF78);
  }
  return result;
}

uint64_t destroy for GeoCacheBox(id *a1)
{

  return swift_bridgeObjectRelease();
}

_QWORD *_s25CloudSubscriptionFeatures11GeoCacheBoxVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GeoCacheBox(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for GeoCacheBox(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GeoCacheBox(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GeoCacheBox(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GeoCacheBox()
{
  return &type metadata for GeoCacheBox;
}

unint64_t sub_1A5BBDCBC()
{
  unint64_t result;

  result = qword_1EE7FAF88;
  if (!qword_1EE7FAF88)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCEF7C, &type metadata for GeoCacheBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FAF88);
  }
  return result;
}

uint64_t sub_1A5BBDD00(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6F666E496F6567 && a2 == 0xE700000000000000;
  if (v2 || (sub_1A5BCA0B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44495344746C61 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A5BCA0B8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

id sub_1A5BBDDF0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  id v7;
  _BYTE v9[8];
  id v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAF90);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = (id)a1[3];
  __swift_project_boxed_opaque_existential_1(a1, (uint64_t)v7);
  sub_1A5BBDCBC();
  sub_1A5BCA19C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    type metadata accessor for GeoClassificationInfo();
    v9[7] = 0;
    sub_1A5B50E80(&qword_1EE7FA880, (uint64_t (*)(uint64_t))type metadata accessor for GeoClassificationInfo, (uint64_t)&protocol conformance descriptor for GeoClassificationInfo);
    sub_1A5BCA010();
    v9[6] = 1;
    v7 = v10;
    sub_1A5BC9FF8();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();

  }
  return v7;
}

uint64_t storeEnumTagSinglePayload for GeoCacheBox.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5BBE008 + 4 * byte_1A5BCEE35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5BBE03C + 4 * byte_1A5BCEE30[v4]))();
}

uint64_t sub_1A5BBE03C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5BBE044(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5BBE04CLL);
  return result;
}

uint64_t sub_1A5BBE058(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5BBE060);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5BBE064(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5BBE06C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GeoCacheBox.CodingKeys()
{
  return &type metadata for GeoCacheBox.CodingKeys;
}

unint64_t sub_1A5BBE08C()
{
  unint64_t result;

  result = qword_1EE7FAF98;
  if (!qword_1EE7FAF98)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCEF54, &type metadata for GeoCacheBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FAF98);
  }
  return result;
}

unint64_t sub_1A5BBE0D4()
{
  unint64_t result;

  result = qword_1EE7FAFA0;
  if (!qword_1EE7FAFA0)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCEEC4, &type metadata for GeoCacheBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FAFA0);
  }
  return result;
}

unint64_t sub_1A5BBE11C()
{
  unint64_t result;

  result = qword_1EE7FAFA8;
  if (!qword_1EE7FAFA8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCEEEC, &type metadata for GeoCacheBox.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FAFA8);
  }
  return result;
}

id static GMEligibilityBypass.bypass.getter()
{
  void *v0;
  void *v1;
  id v2;

  if ((sub_1A5BBE504() & 1) == 0)
    return 0;
  if (qword_1ED1107A8 != -1)
    swift_once();
  v0 = (void *)qword_1ED110798;
  v1 = (void *)sub_1A5BC9B3C();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

void sub_1A5BBE1F8()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = (void *)sub_1A5BC9B3C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (!v2)
    v2 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  qword_1ED110798 = (uint64_t)v2;
}

void static GMEligibilityBypass.bypass.setter(char a1)
{
  void *v2;
  id v3;

  if ((sub_1A5BBE504() & 1) != 0)
  {
    if (qword_1ED1107A8 != -1)
      swift_once();
    v2 = (void *)qword_1ED110798;
    v3 = (id)sub_1A5BC9B3C();
    objc_msgSend(v2, sel_setBool_forKey_, a1 & 1, v3);

  }
}

void (*static GMEligibilityBypass.bypass.modify(unsigned __int8 *a1))(unsigned __int8 *a1)
{
  void *v2;
  void *v3;
  unsigned __int8 v4;

  if ((sub_1A5BBE504() & 1) != 0)
  {
    if (qword_1ED1107A8 != -1)
      swift_once();
    v2 = (void *)qword_1ED110798;
    v3 = (void *)sub_1A5BC9B3C();
    v4 = objc_msgSend(v2, sel_BOOLForKey_, v3);

  }
  else
  {
    v4 = 0;
  }
  *a1 = v4;
  return sub_1A5BBE3E8;
}

void sub_1A5BBE3E8(unsigned __int8 *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *a1;
  if ((sub_1A5BBE504() & 1) != 0)
  {
    if (qword_1ED1107A8 != -1)
      swift_once();
    v2 = (void *)qword_1ED110798;
    v3 = (id)sub_1A5BC9B3C();
    objc_msgSend(v2, sel_setBool_forKey_, v1);

  }
}

id GMEligibilityBypass.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GMEligibilityBypass();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1A5BBE504()
{
  id v0;
  id v1;
  uint64_t has_internal_ui;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    sub_1A5BC9B60();

    sub_1A5BC9BA8();
    swift_bridgeObjectRelease();
  }
  has_internal_ui = os_variant_has_internal_ui();
  swift_unknownObjectRelease();
  return has_internal_ui;
}

uint64_t type metadata accessor for GMEligibilityBypass()
{
  return objc_opt_self();
}

id static GMAssetsBypass.gmAssetsBypass()()
{
  void *v0;
  void *v1;
  id v2;

  if ((sub_1A5BBE504() & 1) == 0)
    return 0;
  if (qword_1ED110780 != -1)
    swift_once();
  v0 = (void *)qword_1ED110778;
  v1 = (void *)sub_1A5BC9B3C();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

void sub_1A5BBE66C()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = (void *)sub_1A5BC9B3C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (!v2)
    v2 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  qword_1ED110778 = (uint64_t)v2;
}

void static GMAssetsBypass.setGMEligibilityBypass(_:)(char a1)
{
  void *v2;
  id v3;

  if ((sub_1A5BBE504() & 1) != 0)
  {
    if (qword_1ED110780 != -1)
      swift_once();
    v2 = (void *)qword_1ED110778;
    v3 = (id)sub_1A5BC9B3C();
    objc_msgSend(v2, sel_setBool_forKey_, a1 & 1, v3);

  }
}

id GMAssetsBypass.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GMAssetsBypass();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for GMAssetsBypass()
{
  return objc_opt_self();
}

uint64_t Eligibility.regionEligible.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___CSFEligibility_regionEligible);
}

uint64_t Eligibility.languageEligible.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___CSFEligibility_languageEligible);
}

uint64_t Eligibility.siriLanguageEligible.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___CSFEligibility_siriLanguageEligible);
}

uint64_t Eligibility.locationEligible.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___CSFEligibility_locationEligible);
}

uint64_t Eligibility.deviceEligibile.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR___CSFEligibility_deviceEligibile);
}

uint64_t sub_1A5BBEA70()
{
  sub_1A5BC9EC0();
  sub_1A5BC9BE4();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  return 0;
}

BOOL sub_1A5BBEC78()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint8_t *v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v26[3];
  _QWORD *v27;

  v1 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if ((*(_BYTE *)(v0 + OBJC_IVAR___CSFEligibility_languageEligible) & 1) == 0)
  {
    v1 = sub_1A5B6420C(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v3 = v1[2];
    v2 = v1[3];
    if (v3 >= v2 >> 1)
      v1 = sub_1A5B6420C((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
    v1[2] = v3 + 1;
    v4 = &v1[2 * v3];
    v4[4] = 0x65676175676E616CLL;
    v4[5] = 0xE800000000000000;
    v27 = v1;
  }
  if ((*(_BYTE *)(v0 + OBJC_IVAR___CSFEligibility_regionEligible) & 1) == 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_1A5B6420C(0, v1[2] + 1, 1, v1);
    v6 = v1[2];
    v5 = v1[3];
    if (v6 >= v5 >> 1)
      v1 = sub_1A5B6420C((_QWORD *)(v5 > 1), v6 + 1, 1, v1);
    v1[2] = v6 + 1;
    v7 = &v1[2 * v6];
    v7[4] = 0x6E6F69676572;
    v7[5] = 0xE600000000000000;
    v27 = v1;
  }
  if ((*(_BYTE *)(v0 + OBJC_IVAR___CSFEligibility_deviceEligibile) & 1) != 0)
  {
    if (!v1[2])
    {
      if (qword_1ED110730 != -1)
        swift_once();
      v8 = sub_1A5BC9A64();
      __swift_project_value_buffer(v8, (uint64_t)qword_1ED110718);
      v9 = sub_1A5BC9A4C();
      v10 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v11 = 0;
        _os_log_impl(&dword_1A5B4D000, v9, v10, "Device is eligible for GM SPIs.", v11, 2u);
        v12 = v11;
LABEL_26:
        MEMORY[0x1A85B2FC0](v12, -1, -1);
        goto LABEL_27;
      }
      goto LABEL_27;
    }
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_1A5B6420C(0, v1[2] + 1, 1, v1);
    v14 = v1[2];
    v13 = v1[3];
    if (v14 >= v13 >> 1)
      v1 = sub_1A5B6420C((_QWORD *)(v13 > 1), v14 + 1, 1, v1);
    v1[2] = v14 + 1;
    v15 = &v1[2 * v14];
    v15[4] = 0xD000000000000012;
    v15[5] = 0x80000001A5BD34D0;
    v27 = v1;
  }
  if (qword_1ED110730 != -1)
    swift_once();
  v16 = sub_1A5BC9A64();
  __swift_project_value_buffer(v16, (uint64_t)qword_1ED110718);
  v9 = sub_1A5BC9A4C();
  v17 = sub_1A5BC9D88();
  if (os_log_type_enabled(v9, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v26[0] = v19;
    *(_DWORD *)v18 = 136315138;
    swift_beginAccess();
    v20 = swift_bridgeObjectRetain();
    v21 = MEMORY[0x1A85B2330](v20, MEMORY[0x1E0DEA968]);
    v23 = v22;
    swift_bridgeObjectRelease();
    sub_1A5B58A30(v21, v23, v26);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A5B4D000, v9, v17, "Device is not eligible for GM SPIs or UI: %s", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v19, -1, -1);
    v12 = v18;
    goto LABEL_26;
  }
LABEL_27:

  swift_beginAccess();
  v24 = v27[2];
  swift_bridgeObjectRelease();
  return v24 == 0;
}

BOOL sub_1A5BBF0A0()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint8_t *v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v23[3];
  _QWORD *v24;

  v1 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if ((*(_BYTE *)(v0 + OBJC_IVAR___CSFEligibility_languageEligible) & 1) == 0)
  {
    v1 = sub_1A5B6420C(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v3 = v1[2];
    v2 = v1[3];
    if (v3 >= v2 >> 1)
      v1 = sub_1A5B6420C((_QWORD *)(v2 > 1), v3 + 1, 1, v1);
    v1[2] = v3 + 1;
    v4 = &v1[2 * v3];
    v4[4] = 0x65676175676E616CLL;
    v4[5] = 0xE800000000000000;
    v24 = v1;
  }
  if ((*(_BYTE *)(v0 + OBJC_IVAR___CSFEligibility_regionEligible) & 1) != 0)
  {
    if (!v1[2])
    {
      if (qword_1ED110730 != -1)
        swift_once();
      v5 = sub_1A5BC9A64();
      __swift_project_value_buffer(v5, (uint64_t)qword_1ED110718);
      v6 = sub_1A5BC9A4C();
      v7 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v8 = 0;
        _os_log_impl(&dword_1A5B4D000, v6, v7, "Device is eligible for GM SPIs.", v8, 2u);
        v9 = v8;
LABEL_20:
        MEMORY[0x1A85B2FC0](v9, -1, -1);
        goto LABEL_21;
      }
      goto LABEL_21;
    }
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v1 = sub_1A5B6420C(0, v1[2] + 1, 1, v1);
    v11 = v1[2];
    v10 = v1[3];
    if (v11 >= v10 >> 1)
      v1 = sub_1A5B6420C((_QWORD *)(v10 > 1), v11 + 1, 1, v1);
    v1[2] = v11 + 1;
    v12 = &v1[2 * v11];
    v12[4] = 0x6E6F69676572;
    v12[5] = 0xE600000000000000;
    v24 = v1;
  }
  if (qword_1ED110730 != -1)
    swift_once();
  v13 = sub_1A5BC9A64();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED110718);
  v6 = sub_1A5BC9A4C();
  v14 = sub_1A5BC9D88();
  if (os_log_type_enabled(v6, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v23[0] = v16;
    *(_DWORD *)v15 = 136315138;
    swift_beginAccess();
    v17 = swift_bridgeObjectRetain();
    v18 = MEMORY[0x1A85B2330](v17, MEMORY[0x1E0DEA968]);
    v20 = v19;
    swift_bridgeObjectRelease();
    sub_1A5B58A30(v18, v20, v23);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A5B4D000, v6, v14, "Device is not eligible for GM SPIs or UI: %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v16, -1, -1);
    v9 = v15;
    goto LABEL_20;
  }
LABEL_21:

  swift_beginAccess();
  v21 = v24[2];
  swift_bridgeObjectRelease();
  return v21 == 0;
}

id Eligibility.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void Eligibility.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id Eligibility.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Eligibility();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for Eligibility()
{
  return objc_opt_self();
}

uint64_t method lookup function for Eligibility()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1A5BBF508(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1A5BBF510(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_1A5BBF518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t sub_1A5BBF520(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1A5B66E9C(0, v1, 0);
    v2 = v14;
    v4 = *(_QWORD *)(type metadata accessor for DefaultsMigrator.Migration() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = sub_1A5BBFAB8();
      v9 = v8;
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_1A5B66E9C(v10 > 1, v11 + 1, 1);
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = v14 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v9;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void static DefaultsMigrator.migrate()()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  if (qword_1ED110038 != -1)
    swift_once();
  v0 = sub_1A5BC9A64();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED110468);
  v1 = sub_1A5BC9A4C();
  v2 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1A5B4D000, v1, v2, "Starting migration checks.", v3, 2u);
    MEMORY[0x1A85B2FC0](v3, -1, -1);
  }

  sub_1A5BC0B34();
  static DefaultsMigrator.migrateCFUEngagement()();
  static DefaultsMigrator.migrateOptIn()();
  oslog = sub_1A5BC9A4C();
  v4 = sub_1A5BC9DA0();
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1A5B4D000, oslog, v4, "Finished migration checks.", v5, 2u);
    MEMORY[0x1A85B2FC0](v5, -1, -1);
  }

}

uint64_t sub_1A5BBF780(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1A5B71234(*a1, *a2);
}

uint64_t sub_1A5BBF78C()
{
  sub_1A5BCA16C();
  sub_1A5BC9BCC();
  swift_bridgeObjectRelease();
  return sub_1A5BCA184();
}

uint64_t sub_1A5BBF838()
{
  sub_1A5BC9BCC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5BBF8C0()
{
  sub_1A5BCA16C();
  sub_1A5BC9BCC();
  swift_bridgeObjectRelease();
  return sub_1A5BCA184();
}

uint64_t sub_1A5BBF968@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1A5BC3BFC();
  *a1 = result;
  return result;
}

void sub_1A5BBF994(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEA0000000000746ELL;
  v4 = 0xED0000746E656D65;
  v5 = 0x6761676E45756663;
  if (v2 != 1)
  {
    v5 = 0x6E4974706FLL;
    v4 = 0xE500000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6553736148756663;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1A5BBFA00()
{
  sub_1A5BC3D1C();
  return sub_1A5BC9C38();
}

uint64_t sub_1A5BBFA5C()
{
  sub_1A5BC3D1C();
  return sub_1A5BC9C20();
}

void sub_1A5BBFAA8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4F6C1C0;
}

unint64_t sub_1A5BBFAB8()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  objc_msgSend(v0, sel_setDateStyle_, 4);
  objc_msgSend(v0, sel_setTimeStyle_, 4);
  sub_1A5BC9EC0();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();
  type metadata accessor for DefaultsMigrator.Migration();
  v1 = (void *)sub_1A5BC98F0();
  v2 = objc_msgSend(v0, sel_stringFromDate_, v1);

  sub_1A5BC9B60();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  sub_1A5BC9BE4();

  return 0xD000000000000012;
}

uint64_t sub_1A5BBFC78(_QWORD *a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EE7FAFD8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5BC3828();
  sub_1A5BCA1B4();
  v10[15] = *v3;
  v10[14] = 0;
  sub_1A5BC38B0();
  sub_1A5BCA07C();
  if (!v2)
  {
    type metadata accessor for DefaultsMigrator.Migration();
    v10[13] = 1;
    sub_1A5BC9974();
    sub_1A5B50E80(&qword_1ED10FB80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1A5BCA07C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1A5BBFDE4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _BYTE *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;

  v25 = a2;
  v24 = sub_1A5BC9974();
  v22 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v23 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED110530);
  v5 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DefaultsMigrator.Migration();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5BC3828();
  sub_1A5BCA19C();
  if (!v2)
  {
    v20 = v8;
    v21 = v5;
    v11 = v10;
    v13 = v23;
    v12 = v24;
    v14 = v25;
    v28 = 0;
    sub_1A5BC386C();
    v15 = v26;
    sub_1A5BCA010();
    v19 = v11;
    *v11 = v29;
    v27 = 1;
    sub_1A5B50E80(&qword_1ED1107F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    sub_1A5BCA010();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v15);
    v16 = v14;
    v17 = (uint64_t)v19;
    (*(void (**)(_BYTE *, char *, uint64_t))(v22 + 32))(&v19[*(int *)(v20 + 20)], v13, v12);
    sub_1A5BC2D1C(v17, v16);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1A5BC0040()
{
  _BYTE *v0;

  if (*v0)
    return 1702125924;
  else
    return 0x646C656966;
}

uint64_t sub_1A5BC0070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1A5BC3C44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1A5BC0094()
{
  sub_1A5BC3828();
  return sub_1A5BCA1C0();
}

uint64_t sub_1A5BC00BC()
{
  sub_1A5BC3828();
  return sub_1A5BCA1CC();
}

uint64_t sub_1A5BC00E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1A5BBFDE4(a1, a2);
}

uint64_t sub_1A5BC00F8(_QWORD *a1)
{
  return sub_1A5BBFC78(a1);
}

id sub_1A5BC0110()
{
  id result;

  result = sub_1A5BC012C();
  qword_1ED110498 = (uint64_t)result;
  return result;
}

id sub_1A5BC012C()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = (void *)sub_1A5BC9B3C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
    return v2;
  if (qword_1ED110038 != -1)
    swift_once();
  v4 = sub_1A5BC9A64();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED110468);
  v5 = sub_1A5BC9A4C();
  v6 = sub_1A5BC9D88();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v9 = v8;
    *(_DWORD *)v7 = 136315138;
    sub_1A5B58A30(0xD00000000000002ELL, 0x80000001A5BD3550, &v9);
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v5, v6, "Unable to create defaults for key %s. Will use .standard.", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v8, -1, -1);
    MEMORY[0x1A85B2FC0](v7, -1, -1);
  }

  return objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
}

uint64_t static DefaultsMigrator.diagnostics()()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BYTE v16[16];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1104F0);
  MEMORY[0x1E0C80A78](v0);
  v2 = &v16[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for DefaultsMigrator.Migration();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v16[-v8];
  v10 = 0;
  v11 = MEMORY[0x1E0DEE9D8];
  do
  {
    sub_1A5BC0500(byte_1E4F6BFE8[v10 + 32], (uint64_t)v2);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    {
      sub_1A5BC2CDC((uint64_t)v2);
    }
    else
    {
      sub_1A5BC2D1C((uint64_t)v2, (uint64_t)v9);
      sub_1A5BC2D1C((uint64_t)v9, (uint64_t)v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1A5B64BD4(0, *(_QWORD *)(v11 + 16) + 1, 1, v11);
      v13 = *(_QWORD *)(v11 + 16);
      v12 = *(_QWORD *)(v11 + 24);
      if (v13 >= v12 >> 1)
        v11 = sub_1A5B64BD4(v12 > 1, v13 + 1, 1, v11);
      *(_QWORD *)(v11 + 16) = v13 + 1;
      sub_1A5BC2D1C((uint64_t)v7, v11+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v13);
    }
    ++v10;
  }
  while (v10 != 3);
  v14 = sub_1A5BBF520(v11);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1A5BC0500@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[7];
  uint64_t v27;

  v4 = type metadata accessor for DefaultsMigrator.Migration();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED1104A8 != -1)
    swift_once();
  v8 = 0xEA0000000000746ELL;
  v9 = (void *)qword_1ED110498;
  v10 = (void *)sub_1A5BC9B3C();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_dataForKey_, v10);

  if (v11)
  {
    v12 = sub_1A5BC989C();
    v14 = v13;

    sub_1A5BC97F4();
    swift_allocObject();
    sub_1A5BC97E8();
    sub_1A5B50E80(&qword_1ED1104D8, (uint64_t (*)(uint64_t))type metadata accessor for DefaultsMigrator.Migration, (uint64_t)&unk_1A5BCF1C0);
    v15 = 0;
    sub_1A5BC97DC();
    sub_1A5B5D9D4(v12, v14);
    swift_release();
    sub_1A5BC2D1C((uint64_t)v7, a2);
  }
  else
  {
    if (qword_1ED110038 != -1)
      swift_once();
    v16 = sub_1A5BC9A64();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED110468);
    v17 = sub_1A5BC9A4C();
    v18 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = v5;
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v27 = v21;
      *(_DWORD *)v20 = 136315138;
      v22 = a1;
      if (a1)
      {
        v23 = a2;
        if (v22 == 1)
          v24 = 0x6761676E45756663;
        else
          v24 = 0x6E4974706FLL;
        if (v22 == 1)
          v8 = 0xED0000746E656D65;
        else
          v8 = 0xE500000000000000;
      }
      else
      {
        v23 = a2;
        v24 = 0x6553736148756663;
      }
      v26[6] = sub_1A5B58A30(v24, v8, &v27);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5B4D000, v17, v18, "Attempted to get existing migration but there is no value for key %s.", v20, 0xCu);
      v15 = 1;
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v21, -1, -1);
      MEMORY[0x1A85B2FC0](v20, -1, -1);

      a2 = v23;
      v5 = v19;
    }
    else
    {

      v15 = 1;
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v15, 1, v4);
}

void sub_1A5BC0B34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  unsigned int v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  uint64_t v54;
  _QWORD v55[3];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1104F0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DefaultsMigrator.Migration();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v56 = (uint64_t)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v55 - v12;
  if (qword_1ED110038 != -1)
    swift_once();
  v14 = sub_1A5BC9A64();
  v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED110468);
  v16 = sub_1A5BC9A4C();
  v17 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v16, v17))
  {
    v55[0] = v8;
    v18 = swift_slowAlloc();
    v55[2] = v15;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc();
    v55[1] = v1;
    v21 = v20;
    v58 = v20;
    *(_DWORD *)v19 = 136315138;
    v57 = sub_1A5B58A30(0xD000000000000013, 0x80000001A5BD35A0, &v58);
    v8 = v55[0];
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v16, v17, "%s checking if existing migration exists.", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v21, -1, -1);
    MEMORY[0x1A85B2FC0](v19, -1, -1);
  }

  sub_1A5BC0500(0, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1A5BC2CDC((uint64_t)v7);
    v22 = sub_1A5BC9A4C();
    v23 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v58 = v25;
      *(_DWORD *)v24 = 136315138;
      v57 = sub_1A5B58A30(0xD000000000000013, 0x80000001A5BD35A0, &v58);
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v22, v23, "%s Starting migration.", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v25, -1, -1);
      MEMORY[0x1A85B2FC0](v24, -1, -1);
    }

    type metadata accessor for FollowUp();
    swift_allocObject();
    if (!FollowUp.init()())
    {
      v43 = sub_1A5BC9A4C();
      v44 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc();
        v46 = swift_slowAlloc();
        v58 = v46;
        *(_DWORD *)v45 = 136315138;
        v57 = sub_1A5B58A30(0xD000000000000013, 0x80000001A5BD35A0, &v58);
        sub_1A5BC9E18();
        _os_log_impl(&dword_1A5B4D000, v43, v44, "%s Unable to get FollowUp object. Will not migrate.", v45, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v46, -1, -1);
        MEMORY[0x1A85B2FC0](v45, -1, -1);
      }

      goto LABEL_28;
    }
    v26 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
    v27 = (void *)sub_1A5BC9B3C();
    v28 = objc_msgSend(v26, sel_initWithSuiteName_, v27);

    if (v28)
    {
      sub_1A5BAE150();
      v29 = (void *)sub_1A5BC9B3C();
      swift_bridgeObjectRelease();
      v30 = objc_msgSend(v28, sel_BOOLForKey_, v29);

      v31 = sub_1A5BC9A4C();
      v32 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = swift_slowAlloc();
        v34 = swift_slowAlloc();
        v58 = v34;
        *(_DWORD *)v33 = 136315394;
        v57 = sub_1A5B58A30(0xD000000000000013, 0x80000001A5BD35A0, &v58);
        sub_1A5BC9E18();
        *(_WORD *)(v33 + 12) = 1024;
        LODWORD(v57) = v30;
        sub_1A5BC9E18();
        _os_log_impl(&dword_1A5B4D000, v31, v32, "%s Updating value to %{BOOL}d", (uint8_t *)v33, 0x12u);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v34, -1, -1);
        MEMORY[0x1A85B2FC0](v33, -1, -1);
      }

      if (v30)
      {
        sub_1A5BC9968();
        v35 = sub_1A5BC9974();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v4, 0, 1, v35);
      }
      else
      {
        v52 = sub_1A5BC9974();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v4, 1, 1, v52);
      }
      sub_1A5BAE928((uint64_t)v4);
      v47 = sub_1A5BC9A4C();
      v53 = sub_1A5BC9DA0();
      if (!os_log_type_enabled(v47, v53))
        goto LABEL_27;
      v49 = swift_slowAlloc();
      v54 = swift_slowAlloc();
      v58 = v54;
      *(_DWORD *)v49 = 136315394;
      v57 = sub_1A5B58A30(0xD000000000000013, 0x80000001A5BD35A0, &v58);
      sub_1A5BC9E18();
      *(_WORD *)(v49 + 12) = 1024;
      LODWORD(v57) = v30;
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v47, v53, "%s Updated value to %{BOOL}d", (uint8_t *)v49, 0x12u);
      swift_arrayDestroy();
      v51 = v54;
    }
    else
    {
      v47 = sub_1A5BC9A4C();
      v48 = sub_1A5BC9DA0();
      if (!os_log_type_enabled(v47, v48))
      {
LABEL_27:

        swift_release();
LABEL_28:
        sub_1A5BC32CC(0, 0xD000000000000013, 0x80000001A5BD35A0);
        return;
      }
      v49 = swift_slowAlloc();
      v50 = swift_slowAlloc();
      v58 = v50;
      *(_DWORD *)v49 = 136315138;
      v57 = sub_1A5B58A30(0xD000000000000013, 0x80000001A5BD35A0, &v58);
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v47, v48, "%s Unable to get old value. Will not migrate.", (uint8_t *)v49, 0xCu);
      swift_arrayDestroy();
      v51 = v50;
    }
    MEMORY[0x1A85B2FC0](v51, -1, -1);
    MEMORY[0x1A85B2FC0](v49, -1, -1);
    goto LABEL_27;
  }
  sub_1A5BC2D1C((uint64_t)v7, (uint64_t)v13);
  v36 = v56;
  sub_1A5BC324C((uint64_t)v13, v56);
  v37 = sub_1A5BC9A4C();
  v38 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = swift_slowAlloc();
    v40 = swift_slowAlloc();
    v58 = v40;
    *(_DWORD *)v39 = 136315394;
    v57 = sub_1A5B58A30(0xD000000000000013, 0x80000001A5BD35A0, &v58);
    sub_1A5BC9E18();
    *(_WORD *)(v39 + 12) = 2080;
    v41 = sub_1A5BBFAB8();
    v57 = sub_1A5B58A30(v41, v42, &v58);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    sub_1A5BC3290(v36);
    _os_log_impl(&dword_1A5B4D000, v37, v38, "%s Skipping migration, existing migration occurred: %s.", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v40, -1, -1);
    MEMORY[0x1A85B2FC0](v39, -1, -1);

  }
  else
  {

    sub_1A5BC3290(v36);
  }
  sub_1A5BC3290((uint64_t)v13);
}

void static DefaultsMigrator.migrateCFUEngagement()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  os_log_type_t v41;
  uint64_t v42;
  _QWORD v43[2];
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1104F0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DefaultsMigrator.Migration();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v43 - v10;
  if (qword_1ED110038 != -1)
    swift_once();
  v12 = sub_1A5BC9A64();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED110468);
  v14 = sub_1A5BC9A4C();
  v15 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v14, v15))
  {
    v44 = v9;
    v16 = swift_slowAlloc();
    v43[1] = v1;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    v45 = v13;
    v19 = v11;
    v20 = v18;
    v47 = v18;
    *(_DWORD *)v17 = 136315138;
    v46 = sub_1A5B58A30(0xD000000000000016, 0x80000001A5BD34F0, &v47);
    v9 = v44;
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v14, v15, "%s checking if existing migration exists.", v17, 0xCu);
    swift_arrayDestroy();
    v21 = v20;
    v11 = v19;
    MEMORY[0x1A85B2FC0](v21, -1, -1);
    MEMORY[0x1A85B2FC0](v17, -1, -1);
  }

  sub_1A5BC0500(1u, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1A5BC2CDC((uint64_t)v4);
    v22 = sub_1A5BC9A4C();
    v23 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v47 = v25;
      *(_DWORD *)v24 = 136315138;
      v46 = sub_1A5B58A30(0xD000000000000016, 0x80000001A5BD34F0, &v47);
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v22, v23, "%s Starting migration.", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v25, -1, -1);
      MEMORY[0x1A85B2FC0](v24, -1, -1);
    }

    v26 = (void *)objc_opt_self();
    v27 = objc_msgSend(v26, sel_hasEngagedWithCFUGlobalDomain);
    if (v27)
    {
      v28 = v27;
      v29 = objc_msgSend(v27, sel_BOOLValue);

      objc_msgSend(v26, sel_setHasEngagedWithCFU_, v29);
      v30 = sub_1A5BC9A4C();
      v31 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = swift_slowAlloc();
        v33 = swift_slowAlloc();
        v47 = v33;
        *(_DWORD *)v32 = 136315394;
        v46 = sub_1A5B58A30(0xD000000000000016, 0x80000001A5BD34F0, &v47);
        sub_1A5BC9E18();
        *(_WORD *)(v32 + 12) = 1024;
        LODWORD(v46) = (_DWORD)v29;
        sub_1A5BC9E18();
        _os_log_impl(&dword_1A5B4D000, v30, v31, "%s Updated new value to %{BOOL}d", (uint8_t *)v32, 0x12u);
        swift_arrayDestroy();
        v34 = v33;
LABEL_17:
        MEMORY[0x1A85B2FC0](v34, -1, -1);
        MEMORY[0x1A85B2FC0](v32, -1, -1);
      }
    }
    else
    {
      v30 = sub_1A5BC9A4C();
      v41 = sub_1A5BC9DA0();
      if (os_log_type_enabled(v30, v41))
      {
        v32 = swift_slowAlloc();
        v42 = swift_slowAlloc();
        v47 = v42;
        *(_DWORD *)v32 = 136315138;
        v46 = sub_1A5B58A30(0xD000000000000016, 0x80000001A5BD34F0, &v47);
        sub_1A5BC9E18();
        _os_log_impl(&dword_1A5B4D000, v30, v41, "%s Will not migrate value as old one does not exist.", (uint8_t *)v32, 0xCu);
        swift_arrayDestroy();
        v34 = v42;
        goto LABEL_17;
      }
    }

    sub_1A5BC32CC(1, 0xD000000000000016, 0x80000001A5BD34F0);
    return;
  }
  sub_1A5BC2D1C((uint64_t)v4, (uint64_t)v11);
  sub_1A5BC324C((uint64_t)v11, (uint64_t)v9);
  v35 = sub_1A5BC9A4C();
  v36 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    v47 = v38;
    *(_DWORD *)v37 = 136315394;
    v46 = sub_1A5B58A30(0xD000000000000016, 0x80000001A5BD34F0, &v47);
    sub_1A5BC9E18();
    *(_WORD *)(v37 + 12) = 2080;
    v39 = sub_1A5BBFAB8();
    v46 = sub_1A5B58A30(v39, v40, &v47);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    sub_1A5BC3290((uint64_t)v9);
    _os_log_impl(&dword_1A5B4D000, v35, v36, "%s Skipping migration, existing migration occurred: %s.", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v38, -1, -1);
    MEMORY[0x1A85B2FC0](v37, -1, -1);

  }
  else
  {

    sub_1A5BC3290((uint64_t)v9);
  }
  sub_1A5BC3290((uint64_t)v11);
}

void static DefaultsMigrator.migrateOptIn()()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  id v23;
  objc_class *v24;
  char *v25;
  uint64_t v26;
  void *v27;
  char *v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  id v34;
  char *v35;
  uint64_t v36;
  char *v37;
  id v38;
  id v39;
  id v40;
  char *v41;
  uint64_t v42;
  char *v43;
  id v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  objc_super v58;
  objc_super v59;
  objc_super v60;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1104F0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v52 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DefaultsMigrator.Migration();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v52 - v8;
  if (qword_1ED110038 != -1)
    swift_once();
  v10 = sub_1A5BC9A64();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED110468);
  v11 = sub_1A5BC9A4C();
  v12 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v11, v12))
  {
    v54 = v3;
    v13 = swift_slowAlloc();
    v53 = v4;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v55 = v7;
    v16 = v15;
    v57 = v15;
    *(_DWORD *)v14 = 136315138;
    v56 = sub_1A5B58A30(0x4F6574617267696DLL, 0xEE0029286E497470, &v57);
    v3 = v54;
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, v11, v12, "%s checking if existing migration exists.", v14, 0xCu);
    swift_arrayDestroy();
    v17 = v16;
    v7 = v55;
    MEMORY[0x1A85B2FC0](v17, -1, -1);
    v18 = v14;
    v4 = v53;
    MEMORY[0x1A85B2FC0](v18, -1, -1);
  }

  sub_1A5BC0500(2u, (uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1A5BC2CDC((uint64_t)v2);
    v19 = sub_1A5BC9A4C();
    v20 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v57 = v22;
      *(_DWORD *)v21 = 136315138;
      v56 = sub_1A5B58A30(0x4F6574617267696DLL, 0xEE0029286E497470, &v57);
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v19, v20, "%s Starting migration.", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v22, -1, -1);
      MEMORY[0x1A85B2FC0](v21, -1, -1);
    }

    v23 = sub_1A5B74938();
    v24 = (objc_class *)type metadata accessor for GMOptIn();
    v25 = (char *)objc_allocWithZone(v24);
    v26 = OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_globalUserDefaults;
    v27 = (void *)objc_opt_self();
    v28 = v25;
    *(_QWORD *)&v25[v26] = objc_msgSend(v27, sel_standardUserDefaults);
    *(_QWORD *)&v28[OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_userDefaults] = v23;
    v29 = v23;

    v60.receiver = v28;
    v60.super_class = v24;
    v30 = objc_msgSendSuper2(&v60, sel_init);

    LODWORD(v55) = sub_1A5B72F14();
    v31 = sub_1A5BC9A4C();
    v32 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = swift_slowAlloc();
      *(_DWORD *)v33 = 67109376;
      v34 = sub_1A5B74938();
      v35 = (char *)objc_allocWithZone(v24);
      v36 = OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_globalUserDefaults;
      v37 = v35;
      *(_QWORD *)&v35[v36] = objc_msgSend(v27, (SEL)&stru_1E4F73810.align + 3);
      *(_QWORD *)&v37[OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_userDefaults] = v34;
      v38 = v34;

      v58.receiver = v37;
      v58.super_class = v24;
      v39 = objc_msgSendSuper2(&v58, sel_init);

      LOBYTE(v38) = sub_1A5B73094();
      LODWORD(v57) = v38 & 1;
      sub_1A5BC9E18();
      *(_WORD *)(v33 + 8) = 1024;
      LODWORD(v57) = v55 & 1;
      sub_1A5BC9E18();
      _os_log_impl(&dword_1A5B4D000, v31, v32, "Updating optedIn (currently %{BOOL}d) to value from global domain: %{BOOL}d.", (uint8_t *)v33, 0xEu);
      MEMORY[0x1A85B2FC0](v33, -1, -1);
    }

    v40 = sub_1A5B74938();
    v41 = (char *)objc_allocWithZone(v24);
    v42 = OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_globalUserDefaults;
    v43 = v41;
    *(_QWORD *)&v41[v42] = objc_msgSend(v27, sel_standardUserDefaults);
    *(_QWORD *)&v43[OBJC_IVAR____TtC25CloudSubscriptionFeatures7GMOptIn_userDefaults] = v40;
    v44 = v40;

    v59.receiver = v43;
    v59.super_class = v24;
    v45 = objc_msgSendSuper2(&v59, sel_init);

    sub_1A5B735CC(v55 & 1);
    sub_1A5BC32CC(2, 0x4F6574617267696DLL, 0xEE0029286E497470);
  }
  else
  {
    sub_1A5BC2D1C((uint64_t)v2, (uint64_t)v9);
    sub_1A5BC324C((uint64_t)v9, (uint64_t)v7);
    v46 = sub_1A5BC9A4C();
    v47 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = swift_slowAlloc();
      v49 = swift_slowAlloc();
      v57 = v49;
      *(_DWORD *)v48 = 136315394;
      v56 = sub_1A5B58A30(0x4F6574617267696DLL, 0xEE0029286E497470, &v57);
      sub_1A5BC9E18();
      *(_WORD *)(v48 + 12) = 2080;
      v50 = sub_1A5BBFAB8();
      v56 = sub_1A5B58A30(v50, v51, &v57);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease();
      sub_1A5BC3290((uint64_t)v7);
      _os_log_impl(&dword_1A5B4D000, v46, v47, "%s Skipping migration, existing migration occurred: %s.", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v49, -1, -1);
      MEMORY[0x1A85B2FC0](v48, -1, -1);

    }
    else
    {

      sub_1A5BC3290((uint64_t)v7);
    }
    sub_1A5BC3290((uint64_t)v9);
  }
}

uint64_t static DefaultsMigrator.resetMigrations()()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _BYTE v16[16];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1104F0);
  MEMORY[0x1E0C80A78](v0);
  v2 = &v16[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = type metadata accessor for DefaultsMigrator.Migration();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v16[-v8];
  v10 = 0;
  v11 = MEMORY[0x1E0DEE9D8];
  do
  {
    sub_1A5BC2638(byte_1E4F6C010[v10 + 32], (uint64_t)v2);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    {
      sub_1A5BC2CDC((uint64_t)v2);
    }
    else
    {
      sub_1A5BC2D1C((uint64_t)v2, (uint64_t)v9);
      sub_1A5BC2D1C((uint64_t)v9, (uint64_t)v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1A5B64BD4(0, *(_QWORD *)(v11 + 16) + 1, 1, v11);
      v13 = *(_QWORD *)(v11 + 16);
      v12 = *(_QWORD *)(v11 + 24);
      if (v13 >= v12 >> 1)
        v11 = sub_1A5B64BD4(v12 > 1, v13 + 1, 1, v11);
      *(_QWORD *)(v11 + 16) = v13 + 1;
      sub_1A5BC2D1C((uint64_t)v7, v11+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v13);
    }
    ++v10;
  }
  while (v10 != 3);
  v14 = sub_1A5BBF520(v11);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1A5BC2638@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1104F0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DefaultsMigrator.Migration();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1A5BC0500(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1A5BC2CDC((uint64_t)v6);
    if (qword_1ED110038 != -1)
      swift_once();
    v11 = sub_1A5BC9A64();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED110468);
    v12 = sub_1A5BC9A4C();
    v13 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v39 = v15;
      *(_DWORD *)v14 = 136315138;
      if (a1)
      {
        if (a1 == 1)
          v16 = 0x6761676E45756663;
        else
          v16 = 0x6E4974706FLL;
        if (a1 == 1)
          v17 = 0xED0000746E656D65;
        else
          v17 = 0xE500000000000000;
      }
      else
      {
        v16 = 0x6553736148756663;
        v17 = 0xEA0000000000746ELL;
      }
      v38 = sub_1A5B58A30(v16, v17, &v39);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5B4D000, v12, v13, "No migration to delete for %s", v14, 0xCu);
      v26 = 1;
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v15, -1, -1);
      MEMORY[0x1A85B2FC0](v14, -1, -1);

    }
    else
    {

      v26 = 1;
    }
  }
  else
  {
    v37 = a2;
    sub_1A5BC2D1C((uint64_t)v6, (uint64_t)v10);
    if (qword_1ED110038 != -1)
      swift_once();
    v18 = sub_1A5BC9A64();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED110468);
    v19 = sub_1A5BC9A4C();
    v20 = sub_1A5BC9DA0();
    v21 = os_log_type_enabled(v19, v20);
    v36 = v7;
    if (v21)
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v39 = v23;
      *(_DWORD *)v22 = 136315138;
      if (a1)
      {
        if (a1 == 1)
          v24 = 0x6761676E45756663;
        else
          v24 = 0x6E4974706FLL;
        if (a1 == 1)
          v25 = 0xED0000746E656D65;
        else
          v25 = 0xE500000000000000;
      }
      else
      {
        v24 = 0x6553736148756663;
        v25 = 0xEA0000000000746ELL;
      }
      v38 = sub_1A5B58A30(v24, v25, &v39);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5B4D000, v19, v20, "Deleting migration: %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v23, -1, -1);
      MEMORY[0x1A85B2FC0](v22, -1, -1);
    }

    a2 = v37;
    if (qword_1ED1104A8 != -1)
      swift_once();
    v27 = (void *)qword_1ED110498;
    v28 = (void *)sub_1A5BC9B3C();
    swift_bridgeObjectRelease();
    objc_msgSend(v27, sel_removeObjectForKey_, v28);

    v29 = sub_1A5BC9A4C();
    v30 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v32 = swift_slowAlloc();
      v39 = v32;
      *(_DWORD *)v31 = 136315138;
      if (a1)
      {
        if (a1 == 1)
          v33 = 0x6761676E45756663;
        else
          v33 = 0x6E4974706FLL;
        if (a1 == 1)
          v34 = 0xED0000746E656D65;
        else
          v34 = 0xE500000000000000;
      }
      else
      {
        v34 = 0xEA0000000000746ELL;
        v33 = 0x6553736148756663;
      }
      v38 = sub_1A5B58A30(v33, v34, &v39);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1A5B4D000, v29, v30, "Deleted migration: %s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v32, -1, -1);
      MEMORY[0x1A85B2FC0](v31, -1, -1);
    }

    sub_1A5BC2D1C((uint64_t)v10, a2);
    v26 = 0;
    v7 = v36;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v26, 1, v7);
}

uint64_t DefaultsMigrator.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DefaultsMigrator.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DefaultsMigrator.Migration()
{
  uint64_t result;

  result = qword_1ED1104E0;
  if (!qword_1ED1104E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1A5BC2CDC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1104F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1A5BC2D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DefaultsMigrator.Migration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5BC2D60(int a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  _QWORD v23[2];
  int v24;
  uint64_t v25;
  uint64_t v26;

  v2 = type metadata accessor for DefaultsMigrator.Migration();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v23 - v6;
  sub_1A5BC9968();
  *v7 = a1;
  sub_1A5BC9818();
  swift_allocObject();
  sub_1A5BC980C();
  sub_1A5B50E80(&qword_1EE7FAFE8, (uint64_t (*)(uint64_t))type metadata accessor for DefaultsMigrator.Migration, (uint64_t)&unk_1A5BCF198);
  v8 = sub_1A5BC9800();
  v10 = v9;
  swift_release();
  sub_1A5B66D78(v8, v10);
  if (qword_1ED110038 != -1)
    swift_once();
  v11 = sub_1A5BC9A64();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED110468);
  sub_1A5BC324C((uint64_t)v7, (uint64_t)v5);
  v12 = sub_1A5BC9A4C();
  v13 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v24 = a1;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc();
    v26 = v16;
    *(_DWORD *)v15 = 136315138;
    v23[1] = v15 + 4;
    v17 = sub_1A5BBFAB8();
    v25 = sub_1A5B58A30(v17, v18, &v26);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease();
    sub_1A5BC3290((uint64_t)v5);
    _os_log_impl(&dword_1A5B4D000, v12, v13, "Setting migration into user defaults: %s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v16, -1, -1);
    MEMORY[0x1A85B2FC0](v15, -1, -1);
  }
  else
  {
    sub_1A5BC3290((uint64_t)v5);
  }

  if (qword_1ED1104A8 != -1)
    swift_once();
  v19 = (void *)qword_1ED110498;
  v20 = (void *)sub_1A5BC9884();
  sub_1A5B5D9D4(v8, v10);
  v21 = (void *)sub_1A5BC9B3C();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setObject_forKey_, v20, v21);

  sub_1A5B5D9D4(v8, v10);
  return sub_1A5BC3290((uint64_t)v7);
}

uint64_t sub_1A5BC324C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DefaultsMigrator.Migration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1A5BC3290(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DefaultsMigrator.Migration();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1A5BC32CC(int a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  NSObject *oslog;
  uint64_t v10;

  sub_1A5BC2D60(a1);
  if (qword_1ED110038 != -1)
    swift_once();
  v5 = sub_1A5BC9A64();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED110468);
  oslog = sub_1A5BC9A4C();
  v6 = sub_1A5BC9DA0();
  if (os_log_type_enabled(oslog, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v10 = v8;
    *(_DWORD *)v7 = 136315138;
    sub_1A5B58A30(a2, a3, &v10);
    sub_1A5BC9E18();
    _os_log_impl(&dword_1A5B4D000, oslog, v6, "%s Finished migration.", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v8, -1, -1);
    MEMORY[0x1A85B2FC0](v7, -1, -1);

  }
  else
  {

  }
}

uint64_t type metadata accessor for DefaultsMigrator()
{
  return objc_opt_self();
}

uint64_t method lookup function for DefaultsMigrator()
{
  return swift_lookUpClassMethod();
}

uint64_t *sub_1A5BC3488(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1A5BC9974();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1A5BC3510(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1A5BC9974();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *sub_1A5BC3548(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1A5BC9974();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *sub_1A5BC35A4(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1A5BC9974();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *sub_1A5BC3600(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1A5BC9974();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *sub_1A5BC365C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1A5BC9974();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1A5BC36B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5BC36C4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 253)
  {
    v4 = *a1;
    if (v4 >= 3)
      return v4 - 2;
    else
      return 0;
  }
  else
  {
    v8 = sub_1A5BC9974();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1A5BC3738()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_1A5BC3744(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 253)
  {
    *result = a2 + 2;
  }
  else
  {
    v7 = sub_1A5BC9974();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1A5BC37B4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1A5BC9974();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1A5BC3828()
{
  unint64_t result;

  result = qword_1ED1104B0;
  if (!qword_1ED1104B0)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCF3DC, &type metadata for DefaultsMigrator.Migration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1104B0);
  }
  return result;
}

unint64_t sub_1A5BC386C()
{
  unint64_t result;

  result = qword_1ED1104D0;
  if (!qword_1ED1104D0)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCF3B4, &type metadata for DefaultsMigrator.Migration.Field);
    atomic_store(result, (unint64_t *)&qword_1ED1104D0);
  }
  return result;
}

unint64_t sub_1A5BC38B0()
{
  unint64_t result;

  result = qword_1EE7FAFE0;
  if (!qword_1EE7FAFE0)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCF38C, &type metadata for DefaultsMigrator.Migration.Field);
    atomic_store(result, (unint64_t *)&qword_1EE7FAFE0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DefaultsMigrator.Migration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1A5BC3940 + 4 * byte_1A5BCF0E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1A5BC3974 + 4 * asc_1A5BCF0E0[v4]))();
}

uint64_t sub_1A5BC3974(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5BC397C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5BC3984);
  return result;
}

uint64_t sub_1A5BC3990(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5BC3998);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1A5BC399C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5BC39A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DefaultsMigrator.Migration.CodingKeys()
{
  return &type metadata for DefaultsMigrator.Migration.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for DefaultsMigrator.Migration.Field(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1A5BC3A0C + 4 * byte_1A5BCF0EF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1A5BC3A40 + 4 * byte_1A5BCF0EA[v4]))();
}

uint64_t sub_1A5BC3A40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5BC3A48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5BC3A50);
  return result;
}

uint64_t sub_1A5BC3A5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5BC3A64);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1A5BC3A68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5BC3A70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DefaultsMigrator.Migration.Field()
{
  return &type metadata for DefaultsMigrator.Migration.Field;
}

unint64_t sub_1A5BC3A90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7FAFF0;
  if (!qword_1EE7FAFF0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE7FAFF8);
    result = MEMORY[0x1A85B2F18](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7FAFF0);
  }
  return result;
}

unint64_t sub_1A5BC3AE0()
{
  unint64_t result;

  result = qword_1EE7FB000;
  if (!qword_1EE7FB000)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCF2AC, &type metadata for DefaultsMigrator.Migration.Field);
    atomic_store(result, (unint64_t *)&qword_1EE7FB000);
  }
  return result;
}

unint64_t sub_1A5BC3B28()
{
  unint64_t result;

  result = qword_1EE7FB008;
  if (!qword_1EE7FB008)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCF364, &type metadata for DefaultsMigrator.Migration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EE7FB008);
  }
  return result;
}

unint64_t sub_1A5BC3B70()
{
  unint64_t result;

  result = qword_1ED1104C0;
  if (!qword_1ED1104C0)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCF2D4, &type metadata for DefaultsMigrator.Migration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1104C0);
  }
  return result;
}

unint64_t sub_1A5BC3BB8()
{
  unint64_t result;

  result = qword_1ED1104B8;
  if (!qword_1ED1104B8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCF2FC, &type metadata for DefaultsMigrator.Migration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED1104B8);
  }
  return result;
}

uint64_t sub_1A5BC3BFC()
{
  unint64_t v0;

  v0 = sub_1A5BC9FA4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1A5BC3C44(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x646C656966 && a2 == 0xE500000000000000;
  if (v2 || (sub_1A5BCA0B8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1A5BCA0B8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1A5BC3D1C()
{
  unint64_t result;

  result = qword_1ED1104C8;
  if (!qword_1ED1104C8)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCF234, &type metadata for DefaultsMigrator.Migration.Field);
    atomic_store(result, (unint64_t *)&qword_1ED1104C8);
  }
  return result;
}

id sub_1A5BC3D60()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36A8]), sel_init);
  qword_1EE8000F8 = (uint64_t)result;
  return result;
}

id sub_1A5BC3D90()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v15;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EE7FB010);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1A5BC99C8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  v8 = objc_msgSend((id)objc_opt_self(), sel_currentLocale);
  sub_1A5BC99BC();

  v9 = (void *)sub_1A5BC99B0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  objc_msgSend(v7, sel_setLocale_, v9);

  sub_1A5BC99E0();
  v10 = sub_1A5BC9A04();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v2, 1, v10) != 1)
  {
    v12 = (void *)sub_1A5BC99EC();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v2, v10);
  }
  objc_msgSend(v7, sel_setTimeZone_, v12);

  v13 = (void *)sub_1A5BC9B3C();
  objc_msgSend(v7, sel_setDateFormat_, v13);

  return v7;
}

uint64_t sub_1A5BC3F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t sub_1A5BC3F5C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  void (*v6)(void *, uint64_t, void *);
  uint64_t v7;
  id v8;
  id v9;

  v6 = *(void (**)(void *, uint64_t, void *))(a1 + 32);
  if (a3)
    v7 = sub_1A5BC9C68();
  else
    v7 = 0;
  swift_retain();
  v8 = a2;
  v9 = a4;
  v6(a2, v7, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5BC3FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED10FB70);
  v3[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1A5BC4058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  _BYTE *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;

  v1 = *(_QWORD *)(v0 + 88);
  sub_1A5BC9698();
  v2 = sub_1A5BC9878();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  v5 = *(_QWORD *)(v0 + 88);
  if (v4 == 1)
  {
    sub_1A5B4FBE8(*(_QWORD *)(v0 + 88), (uint64_t *)&unk_1ED10FB70);
    if (qword_1ED10FBE0 != -1)
      swift_once();
    v6 = sub_1A5BC9A64();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED10FBC0);
    v7 = sub_1A5BC9A4C();
    v8 = sub_1A5BC9D88();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1A5B4D000, v7, v8, "Attempted to BAA sign request with no path", v9, 2u);
      MEMORY[0x1A85B2FC0](v9, -1, -1);
    }

    sub_1A5BC4614();
    swift_allocError();
    *v10 = 0;
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 64);
    v12 = *(_QWORD *)(v0 + 72);
    v14 = sub_1A5BC9860();
    v16 = v15;
    *(_QWORD *)(v0 + 96) = v15;
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v5, v2);
    v17 = sub_1A5BC96D4();
    *(_QWORD *)(v0 + 104) = v17;
    v18 = *(_QWORD *)(v17 - 8);
    *(_QWORD *)(v0 + 112) = v18;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v13, v12, v17);
    if (qword_1ED10FBE0 != -1)
      swift_once();
    v19 = sub_1A5BC9A64();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED10FBC0);
    v20 = sub_1A5BC9A4C();
    v21 = sub_1A5BC9D7C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1A5B4D000, v20, v21, "Fetching BAA signing credentials", v22, 2u);
      MEMORY[0x1A85B2FC0](v22, -1, -1);
    }
    v23 = *(_QWORD *)(v0 + 80);

    v24 = v23 + *(int *)(type metadata accessor for BAARequestSigner() + 20);
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v25;
    v25[2] = v24;
    v25[3] = v23;
    v25[4] = v14;
    v25[5] = v16;
    v26 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FD50);
    *v26 = v0;
    v26[1] = sub_1A5BC4374;
    return sub_1A5BCA0DC();
  }
}

uint64_t sub_1A5BC4374()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1A5BC43E0()
{
  uint64_t v0;
  __SecCertificate *v1;
  __SecCertificate *v2;
  CFDataRef v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  CFDataRef v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v0 + 24);
  v15 = *(_QWORD *)(v0 + 16);
  v12 = *(_QWORD *)(v0 + 40);
  v13 = *(_QWORD *)(v0 + 32);
  v1 = *(__SecCertificate **)(v0 + 48);
  v2 = *(__SecCertificate **)(v0 + 56);
  sub_1A5BC9890();
  sub_1A5BC96B0();
  swift_bridgeObjectRelease();
  sub_1A5BC9890();
  sub_1A5BC96B0();
  swift_bridgeObjectRelease();
  v3 = SecCertificateCopyData(v1);
  v4 = sub_1A5BC989C();
  v6 = v5;

  v16 = v4;
  v17 = v6;
  v7 = SecCertificateCopyData(v2);
  v8 = sub_1A5BC989C();
  v10 = v9;

  sub_1A5BC98A8();
  sub_1A5B66D78(v16, v17);
  sub_1A5BC9890();
  sub_1A5B5D9D4(v16, v17);
  sub_1A5BC96B0();
  swift_bridgeObjectRelease();
  sub_1A5B5D9D4(v8, v10);

  sub_1A5B5D9D4(v13, v12);
  sub_1A5B5D9D4(v15, v14);
  sub_1A5B5D9D4(v16, v17);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A5BC45B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1A5BC4614()
{
  unint64_t result;

  result = qword_1EE7FB028;
  if (!qword_1EE7FB028)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCF674, &type metadata for RequestSigningError);
    atomic_store(result, (unint64_t *)&qword_1EE7FB028);
  }
  return result;
}

void sub_1A5BC4658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, void *, uint64_t, void *);
  void *v46;
  void (*v47)(void *, uint64_t, void *);
  uint64_t v48;

  v41 = a4;
  v42 = a5;
  v39 = a3;
  v37 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v38 = *(_QWORD *)(v5 - 8);
  v40 = *(_QWORD *)(v38 + 64);
  MEMORY[0x1E0C80A78](v5);
  v36 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF58);
  v7 = *(_QWORD *)(v35 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v35);
  v34 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1A5BC9AB8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED110008);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1A5BCDEC0;
  v43 = sub_1A5BC9B60();
  v44 = v14;
  v15 = MEMORY[0x1E0DEA968];
  sub_1A5BC9E84();
  *(_QWORD *)(inited + 96) = v15;
  *(_QWORD *)(inited + 72) = 4608835;
  *(_QWORD *)(inited + 80) = 0xE300000000000000;
  v43 = sub_1A5BC9B60();
  v44 = v16;
  sub_1A5BC9E84();
  *(_QWORD *)(inited + 168) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 144) = 129600;
  v43 = sub_1A5BC9B60();
  v44 = v17;
  sub_1A5BC9E84();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED1112E0);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1A5BCB520;
  *(_QWORD *)(v18 + 32) = sub_1A5BC9B60();
  *(_QWORD *)(v18 + 40) = v19;
  *(_QWORD *)(v18 + 48) = sub_1A5BC9B60();
  *(_QWORD *)(v18 + 56) = v20;
  *(_QWORD *)(inited + 240) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF50);
  *(_QWORD *)(inited + 216) = v18;
  v33 = sub_1A5BA09F4(inited);
  sub_1A5B83B58();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF540], v9);
  v21 = (void *)sub_1A5BC9DDC();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v22 = v34;
  v23 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v34, v37, v35);
  v24 = v36;
  sub_1A5B54780(v39, v36);
  v25 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v26 = (v8 + *(unsigned __int8 *)(v38 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v27 = (v40 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  v28 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v28 + v25, v22, v23);
  sub_1A5B6F738(v24, v28 + v26);
  v29 = (_QWORD *)(v28 + v27);
  v30 = v42;
  *v29 = v41;
  v29[1] = v30;
  swift_bridgeObjectRetain();
  v31 = (void *)sub_1A5BC9ADC();
  v47 = sub_1A5BC5AC8;
  v48 = v28;
  v43 = MEMORY[0x1E0C809B0];
  v44 = 1107296256;
  v45 = sub_1A5BC3F5C;
  v46 = &block_descriptor_8;
  v32 = _Block_copy(&v43);
  swift_retain();
  swift_release();
  DeviceIdentityIssueClientCertificateWithCompletion();
  _Block_release(v32);
  swift_release();

  swift_bridgeObjectRelease();
}

void sub_1A5BC4A54(void *a1, uint64_t a2, void *a3, uint64_t a4, CFDataRef Signature, uint64_t a6, uint8_t *a7)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  id v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  _BYTE *v56;
  id v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  BOOL v61;
  uint8_t *v62;
  uint64_t v63;
  _BYTE *v64;
  double v65;
  double v66;
  double v67;
  void *v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  const __CFString *v73;
  const __CFData *v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  CFErrorRef v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  id v85;
  id v86;
  id v87;
  uint64_t v88;
  __CFError *v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  uint8_t *v101;
  uint64_t v102;
  _BYTE *v103;
  uint64_t v104;
  _BYTE *v105;
  _QWORD v106[2];
  uint8_t *v107;
  uint64_t v108;
  id v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  id v116;
  id v117;
  CFErrorRef error[3];

  v107 = a7;
  v106[1] = a6;
  v110 = a4;
  error[1] = *(CFErrorRef *)MEMORY[0x1E0C80C00];
  v108 = sub_1A5BC9B90();
  v11 = *(_QWORD *)(v108 - 8);
  MEMORY[0x1E0C80A78](v108);
  v13 = (char *)v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1A5BC9974();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = a1;
  if (a1)
  {
    if (a3)
    {
      v21 = v109;
      v22 = v109;
      v23 = a3;
      if (qword_1ED10FBE0 != -1)
        swift_once();
      v24 = sub_1A5BC9A64();
      __swift_project_value_buffer(v24, (uint64_t)qword_1ED10FBC0);
      v25 = a3;
      v26 = a3;
      v27 = sub_1A5BC9A4C();
      v28 = sub_1A5BC9D88();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        v30 = swift_slowAlloc();
        v112 = v30;
        *(_DWORD *)v29 = 136315138;
        swift_getErrorValue();
        v31 = sub_1A5BCA130();
        error[0] = (CFErrorRef)sub_1A5B58A30(v31, v32, &v112);
        sub_1A5BC9E18();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1A5B4D000, v27, v28, "Unable to get BAA certificates. Error: %s", v29, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1A85B2FC0](v30, -1, -1);
        MEMORY[0x1A85B2FC0](v29, -1, -1);
      }
      else
      {

      }
      sub_1A5BC4614();
      v47 = swift_allocError();
      *v48 = 1;
      v112 = v47;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF58);
      sub_1A5BC9CC8();

      goto LABEL_32;
    }
    if (!a2)
    {
      v57 = v109;
      goto LABEL_27;
    }
    v43 = v109;
    v44 = sub_1A5BC581C(a2);
    if (!v44)
    {
LABEL_27:
      if (qword_1ED10FBE0 != -1)
        swift_once();
      v58 = sub_1A5BC9A64();
      __swift_project_value_buffer(v58, (uint64_t)qword_1ED10FBC0);
      v59 = sub_1A5BC9A4C();
      v60 = sub_1A5BC9D88();
      v61 = os_log_type_enabled(v59, v60);
      v21 = v109;
      if (v61)
      {
        v62 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v62 = 0;
        _os_log_impl(&dword_1A5B4D000, v59, v60, "Unable to get BAA certificates. Unknown error.", v62, 2u);
        MEMORY[0x1A85B2FC0](v62, -1, -1);
      }

      sub_1A5BC4614();
      v63 = swift_allocError();
      *v64 = 1;
      v112 = v63;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF58);
      sub_1A5BC9CC8();
      goto LABEL_32;
    }
    v45 = v44;
    v46 = v44 & 0xFFFFFFFFFFFFFF8;
    if (v44 >> 62)
    {
      if (sub_1A5BC9F5C() < 2)
        goto LABEL_16;
    }
    else if (*(uint64_t *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
    sub_1A5B54780((uint64_t)Signature, (uint64_t)v20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) == 1)
    {
      sub_1A5B4FBE8((uint64_t)v20, &qword_1ED111280);
      sub_1A5BC995C();
      v20 = v17;
    }
    sub_1A5BC9938();
    v66 = v65;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    v67 = v66 * 1000.0;
    if ((~COERCE__INT64(v66 * 1000.0) & 0x7FF0000000000000) != 0)
    {
      if (v67 > -1.0)
      {
        if (v67 < 1.84467441e19)
        {
          v68 = v43;
          v112 = (unint64_t)v67;
          v112 = sub_1A5BCA094();
          v113 = v69;
          swift_bridgeObjectRetain();
          sub_1A5BC9BE4();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_1A5BC9BE4();
          swift_bridgeObjectRelease();
          sub_1A5BC9B84();
          v43 = (id)sub_1A5BC9B6C();
          v15 = v70;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v108);
          if (v15 >> 60 == 15)
          {
            swift_bridgeObjectRelease();
            sub_1A5BC4614();
            v71 = swift_allocError();
            *v72 = 4;
            v112 = v71;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF58);
            sub_1A5BC9CC8();

            return;
          }
          error[0] = 0;
          v73 = (const __CFString *)*MEMORY[0x1E0CD6DF8];
          v74 = (const __CFData *)sub_1A5BC9884();
          Signature = SecKeyCreateSignature((SecKeyRef)v68, v73, v74, error);

          if (!Signature)
          {
            swift_bridgeObjectRelease();
            v79 = error[0];
            if (!error[0])
            {
              if (qword_1ED10FBE0 != -1)
                swift_once();
              v98 = sub_1A5BC9A64();
              __swift_project_value_buffer(v98, (uint64_t)qword_1ED10FBC0);
              v99 = sub_1A5BC9A4C();
              v100 = sub_1A5BC9D88();
              if (os_log_type_enabled(v99, v100))
              {
                v101 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)v101 = 0;
                _os_log_impl(&dword_1A5B4D000, v99, v100, "BAA signature was empty", v101, 2u);
                MEMORY[0x1A85B2FC0](v101, -1, -1);
              }

              sub_1A5BC4614();
              v102 = swift_allocError();
              *v103 = 3;
              v112 = v102;
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF58);
              sub_1A5BC9CC8();
              sub_1A5B5D9C0((uint64_t)v43, v15);
              v21 = v109;
              goto LABEL_32;
            }
            if (qword_1ED10FBE0 == -1)
              goto LABEL_52;
            goto LABEL_68;
          }
          v11 = v46;
          if (qword_1ED10FBE0 == -1)
          {
LABEL_43:
            v75 = sub_1A5BC9A64();
            __swift_project_value_buffer(v75, (uint64_t)qword_1ED10FBC0);
            v76 = sub_1A5BC9A4C();
            v77 = sub_1A5BC9D7C();
            if (os_log_type_enabled(v76, v77))
            {
              v78 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v78 = 0;
              _os_log_impl(&dword_1A5B4D000, v76, v77, "Successfully fetched BAA signing credentials", v78, 2u);
              MEMORY[0x1A85B2FC0](v78, -1, -1);
            }

            sub_1A5B6F940((uint64_t)v43, v15);
            v79 = Signature;
            v80 = sub_1A5BC989C();
            v82 = v81;

            if ((v45 & 0xC000000000000001) != 0)
            {
              v85 = (id)MEMORY[0x1A85B2594](0, v45);
              v86 = (id)MEMORY[0x1A85B2594](1, v45);
              goto LABEL_49;
            }
            v83 = *(_QWORD *)(v11 + 16);
            if (v83)
            {
              if (v83 != 1)
              {
                v84 = *(void **)(v45 + 40);
                v85 = *(id *)(v45 + 32);
                v86 = v84;
LABEL_49:
                v87 = v86;
                swift_bridgeObjectRelease();
                v112 = (uint64_t)v43;
                v113 = v15;
                v114 = v80;
                v115 = v82;
                v116 = v85;
                v117 = v87;
                __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF58);
                sub_1A5BC9CD4();
                sub_1A5B5D9C0((uint64_t)v43, v15);

                v21 = v109;
LABEL_32:

                return;
              }
            }
            else
            {
              __break(1u);
            }
            __break(1u);
LABEL_68:
            swift_once();
LABEL_52:
            v88 = sub_1A5BC9A64();
            __swift_project_value_buffer(v88, (uint64_t)qword_1ED10FBC0);
            v89 = v79;
            v90 = sub_1A5BC9A4C();
            v91 = sub_1A5BC9D88();
            if (os_log_type_enabled(v90, v91))
            {
              v92 = (uint8_t *)swift_slowAlloc();
              v93 = swift_slowAlloc();
              v108 = (uint64_t)v43;
              v94 = v93;
              v112 = v93;
              *(_DWORD *)v92 = 136315138;
              v107 = v92 + 4;
              v111 = (uint64_t)v89;
              type metadata accessor for CFError(0);
              sub_1A5BC5B68();
              v95 = sub_1A5BCA130();
              v111 = sub_1A5B58A30(v95, v96, &v112);
              sub_1A5BC9E18();

              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1A5B4D000, v90, v91, "Unable to create BAA signature: %s", v92, 0xCu);
              swift_arrayDestroy();
              v97 = v94;
              v43 = (id)v108;
              MEMORY[0x1A85B2FC0](v97, -1, -1);
              MEMORY[0x1A85B2FC0](v92, -1, -1);

            }
            else
            {

            }
            sub_1A5BC4614();
            v104 = swift_allocError();
            *v105 = 5;
            v112 = v104;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF58);
            sub_1A5BC9CC8();
            sub_1A5B5D9C0((uint64_t)v43, v15);

            v21 = v109;
            goto LABEL_32;
          }
LABEL_64:
          swift_once();
          goto LABEL_43;
        }
LABEL_63:
        __break(1u);
        goto LABEL_64;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_63;
  }
  if (a3)
  {
    v33 = a3;
    if (qword_1ED10FBE0 != -1)
      swift_once();
    v34 = sub_1A5BC9A64();
    __swift_project_value_buffer(v34, (uint64_t)qword_1ED10FBC0);
    v35 = a3;
    v36 = a3;
    v37 = sub_1A5BC9A4C();
    v38 = sub_1A5BC9D88();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = swift_slowAlloc();
      v112 = v40;
      *(_DWORD *)v39 = 136315138;
      swift_getErrorValue();
      v41 = sub_1A5BCA130();
      error[0] = (CFErrorRef)sub_1A5B58A30(v41, v42, &v112);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1A5B4D000, v37, v38, "Unable to get BAA signing keys. Error: %s", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v40, -1, -1);
      MEMORY[0x1A85B2FC0](v39, -1, -1);
    }
    else
    {

    }
    sub_1A5BC4614();
    v55 = swift_allocError();
    *v56 = 2;
    v112 = v55;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF58);
    sub_1A5BC9CC8();

  }
  else
  {
    if (qword_1ED10FBE0 != -1)
      swift_once();
    v49 = sub_1A5BC9A64();
    __swift_project_value_buffer(v49, (uint64_t)qword_1ED10FBC0);
    v50 = sub_1A5BC9A4C();
    v51 = sub_1A5BC9D88();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v52 = 0;
      _os_log_impl(&dword_1A5B4D000, v50, v51, "Unable to get BAA signing keys. Unknown error.", v52, 2u);
      MEMORY[0x1A85B2FC0](v52, -1, -1);
    }

    sub_1A5BC4614();
    v53 = swift_allocError();
    *v54 = 2;
    v112 = v53;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF58);
    sub_1A5BC9CC8();
  }
}

uint64_t sub_1A5BC581C(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  _BYTE v5[32];
  uint64_t v6;

  v6 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(a1 + 16);
  sub_1A5BC9F20();
  if (!v2)
    return v6;
  for (i = a1 + 32; ; i += 32)
  {
    sub_1A5B58B00(i, (uint64_t)v5);
    type metadata accessor for SecCertificate(0);
    if (!swift_dynamicCast())
      break;
    sub_1A5BC9F08();
    sub_1A5BC9F2C();
    sub_1A5BC9F38();
    sub_1A5BC9F14();
    if (!--v2)
      return v6;
  }
  swift_release();

  return 0;
}

unint64_t sub_1A5BC5914@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1A5BC6488(*a1);
  *a2 = result;
  return result;
}

void sub_1A5BC5940()
{
  char *v0;

  sub_1A5B94800(*v0);
}

void sub_1A5BC5948(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E4F6C2B8;
}

uint64_t sub_1A5BC5958()
{
  sub_1A5BC6374();
  return sub_1A5BCA124();
}

uint64_t sub_1A5BC5980()
{
  sub_1A5BC6374();
  sub_1A5BC6444();
  sub_1A5B4F9B4();
  return sub_1A5BCA10C();
}

void sub_1A5BC59C8(uint64_t a1)
{
  uint64_t *v1;

  sub_1A5BC4658(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1A5BC59D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF58);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280) - 8);
  v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v7 = sub_1A5BC9974();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v6, 1, v7))
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v6, v7);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1A5BC5AC8(void *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED10FF58) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280) - 8);
  v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = v3 + ((*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  sub_1A5BC4A54(a1, a2, a3, v3 + v8, (CFDataRef)(v3 + v11), *(_QWORD *)v12, *(uint8_t **)(v12 + 8));
}

unint64_t sub_1A5BC5B68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7FB030;
  if (!qword_1EE7FB030)
  {
    type metadata accessor for CFError(255);
    result = MEMORY[0x1A85B2F18](MEMORY[0x1E0CB1C60], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7FB030);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RequestSigningError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1A5BC5BFC + 4 * byte_1A5BCF435[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1A5BC5C30 + 4 * byte_1A5BCF430[v4]))();
}

uint64_t sub_1A5BC5C30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5BC5C38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1A5BC5C40);
  return result;
}

uint64_t sub_1A5BC5C4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1A5BC5C54);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1A5BC5C58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1A5BC5C60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RequestSigningError()
{
  return &type metadata for RequestSigningError;
}

ValueMetadata *type metadata accessor for BAASigningEnvironment()
{
  return &type metadata for BAASigningEnvironment;
}

ValueMetadata *type metadata accessor for DeviceIdentityCertificateFetcher()
{
  return &type metadata for DeviceIdentityCertificateFetcher;
}

uint64_t *sub_1A5BC5C9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1A5BC9974();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = *(_OWORD *)((char *)a2 + v11 + 24);
    *(_OWORD *)((char *)a1 + v11 + 24) = v12;
    (**(void (***)(void))(v12 - 8))();
  }
  return a1;
}

char *sub_1A5BC5D9C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v6 = sub_1A5BC9974();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = *(_OWORD *)&a2[v9 + 24];
  *(_OWORD *)&a1[v9 + 24] = v10;
  (**(void (***)(void))(v10 - 8))();
  return a1;
}

char *sub_1A5BC5E70(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_1A5BC9974();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&a1[*(int *)(a3 + 20)], (uint64_t *)&a2[*(int *)(a3 + 20)]);
  return a1;
}

char *sub_1A5BC5F7C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;

  v6 = sub_1A5BC9974();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
  return a1;
}

char *sub_1A5BC6048(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;

  v6 = sub_1A5BC9974();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v12]);
  v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((_QWORD *)v13 + 4) = *((_QWORD *)v14 + 4);
  return a1;
}

uint64_t sub_1A5BC6168()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5BC6174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1A5BC61F8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1A5BC6204(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED111280);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  return result;
}

void sub_1A5BC6284()
{
  unint64_t v0;

  sub_1A5B501D4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_1A5BC62F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EE7FB038;
  if (!qword_1EE7FB038)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EE7FB040);
    result = MEMORY[0x1A85B2F18](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EE7FB038);
  }
  return result;
}

unint64_t sub_1A5BC6348(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1A5BC6374();
  result = sub_1A5BC63B8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1A5BC6374()
{
  unint64_t result;

  result = qword_1EE7FB048;
  if (!qword_1EE7FB048)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCF578, &type metadata for RequestSigningError);
    atomic_store(result, (unint64_t *)&qword_1EE7FB048);
  }
  return result;
}

unint64_t sub_1A5BC63B8()
{
  unint64_t result;

  result = qword_1EE7FB050;
  if (!qword_1EE7FB050)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCF540, &type metadata for RequestSigningError);
    atomic_store(result, (unint64_t *)&qword_1EE7FB050);
  }
  return result;
}

unint64_t sub_1A5BC6400()
{
  unint64_t result;

  result = qword_1EE7FB058;
  if (!qword_1EE7FB058)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCF64C, &type metadata for RequestSigningError);
    atomic_store(result, (unint64_t *)&qword_1EE7FB058);
  }
  return result;
}

unint64_t sub_1A5BC6444()
{
  unint64_t result;

  result = qword_1EE7FB060;
  if (!qword_1EE7FB060)
  {
    result = MEMORY[0x1A85B2F18](&unk_1A5BCF5D4, &type metadata for RequestSigningError);
    atomic_store(result, (unint64_t *)&qword_1EE7FB060);
  }
  return result;
}

unint64_t sub_1A5BC6488(unint64_t result)
{
  if (result >= 7)
    return 7;
  return result;
}

uint64_t SiriAssistantLocale.current.getter()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  __CFString *v4;
  __CFString *v5;
  __CFString *v6;
  CFPropertyListRef v7;
  const void *v8;
  CFTypeID v9;
  uint64_t v10;
  unint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  const char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v33[2];
  uint64_t v34;

  if (qword_1ED110028 != -1)
    swift_once();
  v0 = sub_1A5BC9A64();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED110450);
  v1 = sub_1A5BC9A4C();
  v2 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1A5B4D000, v1, v2, "Attempting to get locale from CFPreferences.", v3, 2u);
    MEMORY[0x1A85B2FC0](v3, -1, -1);
  }

  v4 = (__CFString *)sub_1A5BC9B3C();
  CFPreferencesSynchronize(v4, (CFStringRef)*MEMORY[0x1E0C9B260], (CFStringRef)*MEMORY[0x1E0C9B250]);

  v5 = (__CFString *)sub_1A5BC9B3C();
  v6 = (__CFString *)sub_1A5BC9B3C();
  v7 = CFPreferencesCopyAppValue(v5, v6);

  if (!v7)
  {
    v16 = sub_1A5BC9A4C();
    v17 = sub_1A5BC9D88();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_1A5B4D000, v16, v17, "SiriAssistantLocale.current - Unable to get locale from CFPreferences", v18, 2u);
      MEMORY[0x1A85B2FC0](v18, -1, -1);
    }

    return 0;
  }
  v8 = (const void *)swift_unknownObjectRetain();
  v9 = CFGetTypeID(v8);
  if (v9 != CFStringGetTypeID())
  {
    swift_unknownObjectRetain_n();
    v19 = sub_1A5BC9A4C();
    v20 = sub_1A5BC9D88();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      v33[0] = v22;
      *(_DWORD *)v21 = 136315394;
      swift_getObjectType();
      v23 = sub_1A5BCA1D8();
      v34 = sub_1A5B58A30(v23, v24, v33);
      sub_1A5BC9E18();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      v34 = (uint64_t)v7;
      swift_unknownObjectRetain();
      v25 = sub_1A5BC9B9C();
      v34 = sub_1A5B58A30(v25, v26, v33);
      sub_1A5BC9E18();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      v27 = "SiriAssistantLocale.current - Value from preferences is not expected type CFString. Type is: %s - %s";
LABEL_17:
      _os_log_impl(&dword_1A5B4D000, v19, v20, v27, (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v22, -1, -1);
      MEMORY[0x1A85B2FC0](v21, -1, -1);
      swift_unknownObjectRelease_n();

      return 0;
    }
LABEL_18:

    swift_unknownObjectRelease_n();
    return 0;
  }
  v34 = (uint64_t)v7;
  swift_unknownObjectRetain();
  if (!swift_dynamicCast())
  {
    swift_unknownObjectRetain_n();
    v19 = sub_1A5BC9A4C();
    v20 = sub_1A5BC9D88();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      v33[0] = v22;
      *(_DWORD *)v21 = 136315394;
      swift_getObjectType();
      v28 = sub_1A5BCA1D8();
      v34 = sub_1A5B58A30(v28, v29, v33);
      sub_1A5BC9E18();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      v34 = (uint64_t)v7;
      swift_unknownObjectRetain();
      v30 = sub_1A5BC9B9C();
      v34 = sub_1A5B58A30(v30, v31, v33);
      sub_1A5BC9E18();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      v27 = "SiriAssistantLocale.current - Unable to downcast to String: %s - %s";
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  v10 = v33[0];
  v11 = v33[1];
  swift_bridgeObjectRetain_n();
  v12 = sub_1A5BC9A4C();
  v13 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v33[0] = v15;
    *(_DWORD *)v14 = 136315138;
    swift_bridgeObjectRetain();
    v34 = sub_1A5B58A30(v10, v11, v33);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v12, v13, "SiriAssistantLocale.current - Resolved, returning locale: %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v15, -1, -1);
    MEMORY[0x1A85B2FC0](v14, -1, -1);
    swift_unknownObjectRelease_n();

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease_n();
  }
  return v10;
}

uint64_t sub_1A5BC6AE0()
{
  return SiriAssistantLocale.current.getter();
}

uint64_t sub_1A5BC6AF4(void (*a1)(void))
{
  a1();
  return sub_1A5BCA1D8();
}

uint64_t dispatch thunk of UserLocaleProtocol.current.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for SiriAssistantLocale()
{
  return &type metadata for SiriAssistantLocale;
}

void sub_1A5BC6B30()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v1 = (void *)sub_1A5BC9B3C();
  v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (!v2)
    v2 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  qword_1ED1107B0 = (uint64_t)v2;
}

id static GMBypass.gmEligibilityBypass()()
{
  void *v0;
  void *v1;
  id v2;

  if ((sub_1A5BBE504() & 1) == 0)
    return 0;
  if (qword_1ED1107B8 != -1)
    swift_once();
  v0 = (void *)qword_1ED1107B0;
  v1 = (void *)sub_1A5BC9B3C();
  v2 = objc_msgSend(v0, sel_BOOLForKey_, v1);

  return v2;
}

void static GMBypass.setGMEligibilityBypass(_:)()
{
  void *v0;
  void *v1;
  id v2;

  if ((sub_1A5BBE504() & 1) != 0)
  {
    if (qword_1ED1107B8 != -1)
      swift_once();
    v0 = (void *)qword_1ED1107B0;
    v1 = (void *)sub_1A5BC9CB0();
    v2 = (id)sub_1A5BC9B3C();
    objc_msgSend(v0, sel_setValue_forKey_, v1, v2);

  }
}

id GMBypass.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GMBypass();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for GMBypass()
{
  return objc_opt_self();
}

id NotificationObservation.addTicketObserver(change:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v13[6];

  v5 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  v13[4] = sub_1A5BC779C;
  v13[5] = v7;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1A5BC7410;
  v13[3] = &block_descriptor_6;
  v8 = _Block_copy(v13);
  swift_retain();
  swift_release();
  v9 = objc_msgSend(v5, sel_addObserverForName_object_queue_usingBlock_, v6, 0, 0, v8);
  _Block_release(v8);

  if ((*(_BYTE *)(v2 + 33) & 1) == 0)
  {
    v10 = sub_1A5BC9B60();
    sub_1A5B547C8(v10, v11);
    swift_bridgeObjectRelease();
    *(_BYTE *)(v2 + 33) = 1;
  }
  return v9;
}

uint64_t sub_1A5BC7018(uint64_t result, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;

  if (a2)
  {
    v8 = (void *)result;
    swift_unknownObjectRetain();
    v9 = v8;
    v10 = a3;
    v11 = a5;
    swift_getObjectType();
    if (swift_conformsToProtocol2())
      v12 = a2;
    else
      v12 = 0;
    if (v12)
    {
      if (v10)
      {
        v13 = sub_1A5BC9B60();
        v15 = v14;
      }
      else
      {
        v13 = 0;
        v15 = 0;
      }
      sub_1A5BC77C8(v13, v15);

      swift_unknownObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {

      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_1A5BC7108(uint64_t a1, unint64_t a2)
{
  const void *v2;
  const void *v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  __CFNotificationCenter *v11;
  __CFString *v12;
  uint64_t v13;

  v3 = v2;
  if (qword_1ED1110F0 != -1)
    swift_once();
  v6 = sub_1A5BC9A64();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED111100);
  swift_bridgeObjectRetain_n();
  v7 = sub_1A5BC9A4C();
  v8 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v13 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_1A5B58A30(a1, a2, &v13);
    sub_1A5BC9E18();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1A5B4D000, v7, v8, "deregistering darwin observer for name: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v10, -1, -1);
    MEMORY[0x1A85B2FC0](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v11 = CFNotificationCenterGetDarwinNotifyCenter();
  v12 = (__CFString *)sub_1A5BC9B3C();
  CFNotificationCenterRemoveObserver(v11, v3, v12, 0);

}

uint64_t NotificationObservation.deinit()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v1 = sub_1A5BC9B60();
  sub_1A5BC7108(v1, v2);
  swift_bridgeObjectRelease();
  v3 = sub_1A5BC9B60();
  sub_1A5BC7108(v3, v4);
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t NotificationObservation.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v1 = sub_1A5BC9B60();
  sub_1A5BC7108(v1, v2);
  swift_bridgeObjectRelease();
  v3 = sub_1A5BC9B60();
  sub_1A5BC7108(v3, v4);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1A5BC73CC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1A5BC73F0(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5BC74B4(a1, *(uint64_t (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), "Notifying registered clients of features change.");
}

uint64_t sub_1A5BC7410(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_1A5BC9764();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_1A5BC9758();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1A5BC74B4(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, const char *a4)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  if (qword_1ED1110F0 != -1)
    swift_once();
  v6 = sub_1A5BC9A64();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED111100);
  v7 = sub_1A5BC9A4C();
  v8 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1A5B4D000, v7, v8, a4, v9, 2u);
    MEMORY[0x1A85B2FC0](v9, -1, -1);
  }

  return a2();
}

void _s25CloudSubscriptionFeatures23NotificationObservationC14removeObserver5tokenySo8NSObject_p_tF_0(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;

  if (qword_1ED1110F0 != -1)
    swift_once();
  v2 = sub_1A5BC9A64();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED111100);
  swift_unknownObjectRetain_n();
  v3 = sub_1A5BC9A4C();
  v4 = sub_1A5BC9DA0();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v12 = v6;
    *(_DWORD *)v5 = 136315138;
    v7 = objc_msgSend(a1, sel_description);
    v8 = sub_1A5BC9B60();
    v10 = v9;

    sub_1A5B58A30(v8, v10, &v12);
    sub_1A5BC9E18();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1A5B4D000, v3, v4, "removing observer for token: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1A85B2FC0](v6, -1, -1);
    MEMORY[0x1A85B2FC0](v5, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  v11 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v11, sel_removeObserver_, a1);

}

uint64_t sub_1A5BC779C(uint64_t a1)
{
  uint64_t v1;

  return sub_1A5BC74B4(a1, *(uint64_t (**)(void))(v1 + 16), *(_QWORD *)(v1 + 24), "Notifying registered clients of tickets change.");
}

uint64_t method lookup function for NotificationObservation()
{
  return swift_lookUpClassMethod();
}

void sub_1A5BC77C8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (a2)
  {
    v3 = v2;
    if (sub_1A5BC9B60() == a1 && v6 == a2)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = sub_1A5BCA0B8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0)
      {
        if (sub_1A5BC9B60() == a1 && v9 == a2)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v11 = sub_1A5BCA0B8();
          swift_bridgeObjectRelease();
          if ((v11 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            return;
          }
        }
        if (qword_1ED1110F0 != -1)
          swift_once();
        v20 = sub_1A5BC9A64();
        __swift_project_value_buffer(v20, (uint64_t)qword_1ED111100);
        swift_bridgeObjectRetain();
        v21 = sub_1A5BC9A4C();
        v22 = sub_1A5BC9DA0();
        if (os_log_type_enabled(v21, v22))
        {
          v23 = (uint8_t *)swift_slowAlloc();
          v24 = swift_slowAlloc();
          v26 = v24;
          *(_DWORD *)v23 = 136315138;
          swift_bridgeObjectRetain();
          v25 = sub_1A5B58A30(a1, a2, &v26);
          sub_1A5BC9E18();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1A5B4D000, v21, v22, "Receieved Ticket darwin notification %s, posting new local notification.", v23, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1A85B2FC0](v24, -1, -1);
          MEMORY[0x1A85B2FC0](v23, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v17 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
        v18 = v17;
        v19 = *(_QWORD *)(v3 + 24);
        goto LABEL_27;
      }
    }
    if (qword_1ED1110F0 != -1)
      swift_once();
    v12 = sub_1A5BC9A64();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED111100);
    swift_bridgeObjectRetain();
    v13 = sub_1A5BC9A4C();
    v14 = sub_1A5BC9DA0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v26 = v16;
      *(_DWORD *)v15 = 136315138;
      swift_bridgeObjectRetain();
      v25 = sub_1A5B58A30(a1, a2, &v26);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A5B4D000, v13, v14, "Received Feature darwin notification %s, posting new local notification.", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v16, -1, -1);
      MEMORY[0x1A85B2FC0](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v17 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    v18 = v17;
    v19 = *(_QWORD *)(v3 + 16);
LABEL_27:
    objc_msgSend(v17, sel_postNotificationName_object_, v19, 0, v25, v26);

  }
}

id static TicketStatus.notYetQueued.getter()
{
  return sub_1A5BC7D5C(0x7551746559746F6ELL, 0xEC00000064657565);
}

id static TicketStatus.enqueued.getter()
{
  return sub_1A5BC7D5C(0x6465756575716E65, 0xE800000000000000);
}

id TicketStatus.__allocating_init(rawValue:)(uint64_t a1, unint64_t a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return TicketStatus.init(rawValue:)(a1, a2);
}

uint64_t type metadata accessor for TicketStatus()
{
  return objc_opt_self();
}

uint64_t static TicketStatus.supportsSecureCoding.getter()
{
  return 1;
}

id sub_1A5BC7D04(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  id v6;
  id result;

  v6 = objc_allocWithZone((Class)type metadata accessor for TicketStatus());
  result = TicketStatus.init(rawValue:)(a3, a4);
  if (result)
    return result;
  __break(1u);
  return result;
}

id static TicketStatus.active.getter()
{
  return sub_1A5BC7D5C(0x657669746361, 0xE600000000000000);
}

id sub_1A5BC7D5C(uint64_t a1, unint64_t a2)
{
  id v4;
  id result;

  v4 = objc_allocWithZone((Class)type metadata accessor for TicketStatus());
  result = TicketStatus.init(rawValue:)(a1, a2);
  if (!result)
    __break(1u);
  return result;
}

uint64_t sub_1A5BC7E08()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC25CloudSubscriptionFeatures12TicketStatus_rawValue);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1A5BC7EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC25CloudSubscriptionFeatures12TicketStatus_rawValue);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1A5BC7F20(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC25CloudSubscriptionFeatures12TicketStatus_rawValue);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1A5BC7F88())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1A5BC808C()
{
  _QWORD v1[2];

  strcpy((char *)v1, "TicketStatus.");
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1A5BC9BE4();
  swift_bridgeObjectRelease();
  return v1[0];
}

id TicketStatus.init(rawValue:)(uint64_t a1, unint64_t a2)
{
  char *v2;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  objc_super v15;
  uint64_t v16;
  uint64_t v17;

  v5 = OBJC_IVAR____TtC25CloudSubscriptionFeatures12TicketStatus_allowedValues;
  v6 = v2;
  v7 = sub_1A5BC900C((uint64_t)&unk_1E4F6BBC0);
  swift_arrayDestroy();
  *(_QWORD *)&v2[v5] = v7;
  if ((sub_1A5B72734(a1, a2, v7) & 1) != 0)
  {
    v8 = (uint64_t *)&v6[OBJC_IVAR____TtC25CloudSubscriptionFeatures12TicketStatus_rawValue];
    *v8 = a1;
    v8[1] = a2;

    v15.receiver = v6;
    v15.super_class = (Class)type metadata accessor for TicketStatus();
    return objc_msgSendSuper2(&v15, sel_init);
  }
  else
  {
    if (qword_1ED110E18 != -1)
      swift_once();
    v10 = sub_1A5BC9A64();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED110E28);
    swift_bridgeObjectRetain();
    v11 = sub_1A5BC9A4C();
    v12 = sub_1A5BC9D88();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v17 = v14;
      *(_DWORD *)v13 = 136315138;
      swift_bridgeObjectRetain();
      v16 = sub_1A5B58A30(a1, a2, &v17);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A5B4D000, v11, v12, "Decoded ticket with non-allowed value: %s. Will return nil.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v14, -1, -1);
      MEMORY[0x1A85B2FC0](v13, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }

    swift_bridgeObjectRelease();
    type metadata accessor for TicketStatus();
    swift_deallocPartialClassInstance();
    return 0;
  }
}

char *TicketStatus.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return TicketStatus.init(from:)(a1);
}

char *TicketStatus.init(from:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _BYTE *v15;
  uint64_t v17;
  objc_super v18;
  uint64_t v19[7];

  v4 = OBJC_IVAR____TtC25CloudSubscriptionFeatures12TicketStatus_allowedValues;
  v5 = v1;
  v6 = sub_1A5BC900C((uint64_t)&unk_1E4F6BB20);
  swift_arrayDestroy();
  *(_QWORD *)&v1[v4] = v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5BCA190();
  if (v2)
  {
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

    swift_bridgeObjectRelease();
    type metadata accessor for TicketStatus();
    swift_deallocPartialClassInstance();
    return v5;
  }
  __swift_project_boxed_opaque_existential_1(v19, v19[3]);
  v7 = sub_1A5BCA0C4();
  v9 = v8;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  if ((sub_1A5B72734(v7, v9, *(_QWORD *)&v1[v4]) & 1) == 0)
  {
    if (qword_1ED110E18 != -1)
      swift_once();
    v11 = sub_1A5BC9A64();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED110E28);
    swift_bridgeObjectRetain();
    v12 = sub_1A5BC9A4C();
    v13 = sub_1A5BC9D88();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v19[0] = v17;
      *(_DWORD *)v14 = 136315138;
      swift_bridgeObjectRetain();
      v19[6] = sub_1A5B58A30(v7, v9, v19);
      sub_1A5BC9E18();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1A5B4D000, v12, v13, "Decoded ticket with non-allowed value: %s. Will return nil.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1A85B2FC0](v17, -1, -1);
      MEMORY[0x1A85B2FC0](v14, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1A5B584A8();
    swift_allocError();
    *v15 = 4;
    swift_willThrow();
    goto LABEL_10;
  }
  v10 = (uint64_t *)&v5[OBJC_IVAR____TtC25CloudSubscriptionFeatures12TicketStatus_rawValue];
  *v10 = v7;
  v10[1] = v9;

  v18.receiver = v5;
  v18.super_class = (Class)type metadata accessor for TicketStatus();
  v5 = (char *)objc_msgSendSuper2(&v18, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v5;
}

uint64_t TicketStatus.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return TicketStatus.init(coder:)(a1);
}

uint64_t TicketStatus.init(coder:)(void *a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;
  uint64_t v10;

  v3 = OBJC_IVAR____TtC25CloudSubscriptionFeatures12TicketStatus_allowedValues;
  v4 = v1;
  v5 = sub_1A5BC900C((uint64_t)&unk_1E4F6BB70);
  swift_arrayDestroy();
  *(_QWORD *)&v1[v3] = v5;
  sub_1A5B97198();
  v6 = sub_1A5BC9DE8();
  if (v6)
  {
    v7 = (void *)v6;
    v9 = 0;
    v10 = 0;
    sub_1A5BC9B54();

  }
  swift_bridgeObjectRelease();
  type metadata accessor for TicketStatus();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_1A5BC89D8(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5BCA1A8();
  swift_beginAccess();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  swift_bridgeObjectRetain();
  sub_1A5BCA0D0();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

void sub_1A5BC8AA0(void *a1)
{
  void *v2;
  void *v3;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1A5BC9B3C();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1A5BC9B3C();
  objc_msgSend(a1, sel_encodeObject_forKey_, v2, v3);

}

uint64_t sub_1A5BC8C0C(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  char v7;
  char *v9;
  _BYTE v10[24];
  uint64_t v11;

  sub_1A5B96138(a1, (uint64_t)v10);
  if (!v11)
  {
    sub_1A5B8A7C0((uint64_t)v10);
    goto LABEL_9;
  }
  type metadata accessor for TicketStatus();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    v7 = 0;
    return v7 & 1;
  }
  v2 = &v9[OBJC_IVAR____TtC25CloudSubscriptionFeatures12TicketStatus_rawValue];
  swift_beginAccess();
  v3 = *(_QWORD *)v2;
  v4 = *((_QWORD *)v2 + 1);
  v5 = (_QWORD *)(v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures12TicketStatus_rawValue);
  swift_beginAccess();
  if (v3 == *v5 && v4 == v5[1])
  {

    v7 = 1;
  }
  else
  {
    v7 = sub_1A5BCA0B8();

  }
  return v7 & 1;
}

id TicketStatus.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void TicketStatus.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id TicketStatus.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TicketStatus();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1A5BC8E58@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  id result;

  v3 = *a1;
  v4 = a1[1];
  v5 = objc_allocWithZone((Class)type metadata accessor for TicketStatus());
  result = TicketStatus.init(rawValue:)(v3, v4);
  *a2 = result;
  return result;
}

uint64_t sub_1A5BC8EA0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*v1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures12TicketStatus_rawValue);
  swift_beginAccess();
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

char *sub_1A5BC8EF4@<X0>(_QWORD *a1@<X0>, char **a2@<X8>)
{
  uint64_t v2;
  id v5;
  char *result;

  v5 = objc_allocWithZone((Class)type metadata accessor for TicketStatus());
  result = TicketStatus.init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1A5BC8F44(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1A5BCA1A8();
  swift_beginAccess();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  swift_bridgeObjectRetain();
  sub_1A5BCA0D0();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_1A5BC900C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED111220);
    v3 = sub_1A5BC9EA8();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_1A5BCA16C();
      swift_bridgeObjectRetain();
      sub_1A5BC9BCC();
      result = sub_1A5BCA184();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_1A5BCA0B8(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_1A5BCA0B8();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1A5BC91D4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC25CloudSubscriptionFeatures12TicketStatus_rawValue);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for TicketStatus()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TicketStatus.rawValue.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t dispatch thunk of TicketStatus.rawValue.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of TicketStatus.rawValue.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of TicketStatus.__allocating_init(rawValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of TicketStatus.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of TicketStatus.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of TicketStatus.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of TicketStatus.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

void __getINDaemonConnectionClass_block_invoke_cold_1()
{
  abort_report_np();
  sub_1A5BC9674();
}

uint64_t sub_1A5BC9674()
{
  return MEMORY[0x1E0CADEB0]();
}

uint64_t sub_1A5BC9680()
{
  return MEMORY[0x1E0CADEF0]();
}

uint64_t sub_1A5BC968C()
{
  return MEMORY[0x1E0CADF08]();
}

uint64_t sub_1A5BC9698()
{
  return MEMORY[0x1E0CADF18]();
}

uint64_t sub_1A5BC96A4()
{
  return MEMORY[0x1E0CADF28]();
}

uint64_t sub_1A5BC96B0()
{
  return MEMORY[0x1E0CADF30]();
}

uint64_t sub_1A5BC96BC()
{
  return MEMORY[0x1E0CADF38]();
}

uint64_t sub_1A5BC96C8()
{
  return MEMORY[0x1E0CADF40]();
}

uint64_t sub_1A5BC96D4()
{
  return MEMORY[0x1E0CADF50]();
}

uint64_t sub_1A5BC96E0()
{
  return MEMORY[0x1E0CAE048]();
}

uint64_t sub_1A5BC96EC()
{
  return MEMORY[0x1E0CAE060]();
}

uint64_t sub_1A5BC96F8()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_1A5BC9704()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_1A5BC9710()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_1A5BC971C()
{
  return MEMORY[0x1E0CAE160]();
}

uint64_t sub_1A5BC9728()
{
  return MEMORY[0x1E0CAE178]();
}

uint64_t sub_1A5BC9734()
{
  return MEMORY[0x1E0CAE1A0]();
}

uint64_t sub_1A5BC9740()
{
  return MEMORY[0x1E0CAE1D8]();
}

uint64_t sub_1A5BC974C()
{
  return MEMORY[0x1E0CAE1E8]();
}

uint64_t sub_1A5BC9758()
{
  return MEMORY[0x1E0CAE618]();
}

uint64_t sub_1A5BC9764()
{
  return MEMORY[0x1E0CAE648]();
}

uint64_t sub_1A5BC9770()
{
  return MEMORY[0x1E0CAE668]();
}

uint64_t sub_1A5BC977C()
{
  return MEMORY[0x1E0CAE690]();
}

uint64_t sub_1A5BC9788()
{
  return MEMORY[0x1E0CAE6D0]();
}

uint64_t sub_1A5BC9794()
{
  return MEMORY[0x1E0CAE6E0]();
}

uint64_t sub_1A5BC97A0()
{
  return MEMORY[0x1E0CAE778]();
}

uint64_t sub_1A5BC97AC()
{
  return MEMORY[0x1E0CAE7C8]();
}

uint64_t sub_1A5BC97B8()
{
  return MEMORY[0x1E0CAE7D0]();
}

uint64_t sub_1A5BC97C4()
{
  return MEMORY[0x1E0CAE890]();
}

uint64_t sub_1A5BC97D0()
{
  return MEMORY[0x1E0CAF328]();
}

uint64_t sub_1A5BC97DC()
{
  return MEMORY[0x1E0CAF5C8]();
}

uint64_t sub_1A5BC97E8()
{
  return MEMORY[0x1E0CAF5F8]();
}

uint64_t sub_1A5BC97F4()
{
  return MEMORY[0x1E0CAF608]();
}

uint64_t sub_1A5BC9800()
{
  return MEMORY[0x1E0CAF638]();
}

uint64_t sub_1A5BC980C()
{
  return MEMORY[0x1E0CAF668]();
}

uint64_t sub_1A5BC9818()
{
  return MEMORY[0x1E0CAF670]();
}

uint64_t sub_1A5BC9824()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1A5BC9830()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1A5BC983C()
{
  return MEMORY[0x1E0CAFDA0]();
}

uint64_t sub_1A5BC9848()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1A5BC9854()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1A5BC9860()
{
  return MEMORY[0x1E0CAFF40]();
}

uint64_t sub_1A5BC986C()
{
  return MEMORY[0x1E0CAFF90]();
}

uint64_t sub_1A5BC9878()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1A5BC9884()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1A5BC9890()
{
  return MEMORY[0x1E0CB01F8]();
}

uint64_t sub_1A5BC989C()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1A5BC98A8()
{
  return MEMORY[0x1E0CB0298]();
}

uint64_t sub_1A5BC98B4()
{
  return MEMORY[0x1E0CB03C0]();
}

uint64_t sub_1A5BC98C0()
{
  return MEMORY[0x1E0CB0588]();
}

uint64_t sub_1A5BC98CC()
{
  return MEMORY[0x1E0CB05A8]();
}

uint64_t sub_1A5BC98D8()
{
  return MEMORY[0x1E0CB05D8]();
}

uint64_t sub_1A5BC98E4()
{
  return MEMORY[0x1E0CB0680]();
}

uint64_t sub_1A5BC98F0()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_1A5BC98FC()
{
  return MEMORY[0x1E0CB06D0]();
}

uint64_t sub_1A5BC9908()
{
  return MEMORY[0x1E0CB06D8]();
}

uint64_t sub_1A5BC9914()
{
  return MEMORY[0x1E0CB06F0]();
}

uint64_t sub_1A5BC9920()
{
  return MEMORY[0x1E0CB0700]();
}

uint64_t sub_1A5BC992C()
{
  return MEMORY[0x1E0CB0708]();
}

uint64_t sub_1A5BC9938()
{
  return MEMORY[0x1E0CB07C0]();
}

uint64_t sub_1A5BC9944()
{
  return MEMORY[0x1E0CB07C8]();
}

uint64_t sub_1A5BC9950()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t sub_1A5BC995C()
{
  return MEMORY[0x1E0CB07F8]();
}

uint64_t sub_1A5BC9968()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1A5BC9974()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1A5BC9980()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1A5BC998C()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1A5BC9998()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1A5BC99A4()
{
  return MEMORY[0x1E0CB0BD8]();
}

uint64_t sub_1A5BC99B0()
{
  return MEMORY[0x1E0CB0BE0]();
}

uint64_t sub_1A5BC99BC()
{
  return MEMORY[0x1E0CB0C30]();
}

uint64_t sub_1A5BC99C8()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_1A5BC99D4()
{
  return MEMORY[0x1E0CB1418]();
}

uint64_t sub_1A5BC99E0()
{
  return MEMORY[0x1E0CB1438]();
}

uint64_t sub_1A5BC99EC()
{
  return MEMORY[0x1E0CB1440]();
}

uint64_t sub_1A5BC99F8()
{
  return MEMORY[0x1E0CB1458]();
}

uint64_t sub_1A5BC9A04()
{
  return MEMORY[0x1E0CB1470]();
}

uint64_t sub_1A5BC9A10()
{
  return MEMORY[0x1E0D20EF8]();
}

uint64_t sub_1A5BC9A1C()
{
  return MEMORY[0x1E0D4FF20]();
}

uint64_t sub_1A5BC9A28()
{
  return MEMORY[0x1E0D50100]();
}

uint64_t sub_1A5BC9A34()
{
  return MEMORY[0x1E0D50108]();
}

uint64_t sub_1A5BC9A40()
{
  return MEMORY[0x1E0D501A8]();
}

uint64_t sub_1A5BC9A4C()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1A5BC9A58()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1A5BC9A64()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1A5BC9A70()
{
  return MEMORY[0x1E0DF0410]();
}

uint64_t sub_1A5BC9A7C()
{
  return MEMORY[0x1E0DF0500]();
}

uint64_t sub_1A5BC9A88()
{
  return MEMORY[0x1E0DF0508]();
}

uint64_t sub_1A5BC9A94()
{
  return MEMORY[0x1E0DF0510]();
}

uint64_t sub_1A5BC9AA0()
{
  return MEMORY[0x1E0DF0518]();
}

uint64_t sub_1A5BC9AAC()
{
  return MEMORY[0x1E0DF2040]();
}

uint64_t sub_1A5BC9AB8()
{
  return MEMORY[0x1E0DEF560]();
}

uint64_t sub_1A5BC9AC4()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1A5BC9AD0()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1A5BC9ADC()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1A5BC9AE8()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1A5BC9AF4()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_1A5BC9B00()
{
  return MEMORY[0x1E0DE9E90]();
}

uint64_t sub_1A5BC9B0C()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1A5BC9B18()
{
  return MEMORY[0x1E0DEA3C0]();
}

uint64_t sub_1A5BC9B24()
{
  return MEMORY[0x1E0DEA3C8]();
}

uint64_t sub_1A5BC9B30()
{
  return MEMORY[0x1E0CB1850]();
}

uint64_t sub_1A5BC9B3C()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1A5BC9B48()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_1A5BC9B54()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_1A5BC9B60()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1A5BC9B6C()
{
  return MEMORY[0x1E0CB1988]();
}

uint64_t sub_1A5BC9B78()
{
  return MEMORY[0x1E0CB1990]();
}

uint64_t sub_1A5BC9B84()
{
  return MEMORY[0x1E0CB19E8]();
}

uint64_t sub_1A5BC9B90()
{
  return MEMORY[0x1E0CB1A18]();
}

uint64_t sub_1A5BC9B9C()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1A5BC9BA8()
{
  return MEMORY[0x1E0DEA630]();
}

uint64_t sub_1A5BC9BB4()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1A5BC9BC0()
{
  return MEMORY[0x1E0DEA6F0]();
}

uint64_t sub_1A5BC9BCC()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1A5BC9BD8()
{
  return MEMORY[0x1E0DEA7D0]();
}

uint64_t sub_1A5BC9BE4()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1A5BC9BF0()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1A5BC9BFC()
{
  return MEMORY[0x1E0DEA940]();
}

uint64_t sub_1A5BC9C08()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_1A5BC9C14()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1A5BC9C20()
{
  return MEMORY[0x1E0DEACA0]();
}

uint64_t sub_1A5BC9C2C()
{
  return MEMORY[0x1E0DEACB8]();
}

uint64_t sub_1A5BC9C38()
{
  return MEMORY[0x1E0DEAD18]();
}

uint64_t sub_1A5BC9C44()
{
  return MEMORY[0x1E0DEAD30]();
}

uint64_t sub_1A5BC9C50()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_1A5BC9C5C()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1A5BC9C68()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1A5BC9C74()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1A5BC9C80()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1A5BC9C8C()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_1A5BC9C98()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_1A5BC9CA4()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_1A5BC9CB0()
{
  return MEMORY[0x1E0CB1B28]();
}

uint64_t sub_1A5BC9CBC()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1A5BC9CC8()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t sub_1A5BC9CD4()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t sub_1A5BC9CE0()
{
  return MEMORY[0x1E0DF0730]();
}

uint64_t sub_1A5BC9CEC()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_1A5BC9CF8()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_1A5BC9D04()
{
  return MEMORY[0x1E0DF07F8]();
}

uint64_t sub_1A5BC9D10()
{
  return MEMORY[0x1E0DF0800]();
}

uint64_t sub_1A5BC9D1C()
{
  return MEMORY[0x1E0DF0860]();
}

uint64_t sub_1A5BC9D28()
{
  return MEMORY[0x1E0DEAFE8]();
}

uint64_t sub_1A5BC9D34()
{
  return MEMORY[0x1E0CB1BB0]();
}

uint64_t sub_1A5BC9D40()
{
  return MEMORY[0x1E0CB1BC0]();
}

uint64_t sub_1A5BC9D4C()
{
  return MEMORY[0x1E0DEB220]();
}

uint64_t sub_1A5BC9D58()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1A5BC9D64()
{
  return MEMORY[0x1E0CB1C20]();
}

uint64_t sub_1A5BC9D70()
{
  return MEMORY[0x1E0CB1D70]();
}

uint64_t sub_1A5BC9D7C()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1A5BC9D88()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1A5BC9D94()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1A5BC9DA0()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1A5BC9DAC()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1A5BC9DB8()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1A5BC9DC4()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1A5BC9DD0()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_1A5BC9DDC()
{
  return MEMORY[0x1E0DEF920]();
}

uint64_t sub_1A5BC9DE8()
{
  return MEMORY[0x1E0CB2020]();
}

uint64_t sub_1A5BC9DF4()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_1A5BC9E00()
{
  return MEMORY[0x1E0DEB930]();
}

uint64_t sub_1A5BC9E0C()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1A5BC9E18()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1A5BC9E24()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1A5BC9E30()
{
  return MEMORY[0x1E0CB24A8]();
}

uint64_t sub_1A5BC9E3C()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1A5BC9E48()
{
  return MEMORY[0x1E0DEC050]();
}

uint64_t sub_1A5BC9E54()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1A5BC9E60()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1A5BC9E6C()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1A5BC9E78()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_1A5BC9E84()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1A5BC9E90()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1A5BC9E9C()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1A5BC9EA8()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1A5BC9EB4()
{
  return MEMORY[0x1E0DEC280]();
}

uint64_t sub_1A5BC9EC0()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1A5BC9ECC()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1A5BC9ED8()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1A5BC9EE4()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_1A5BC9EF0()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_1A5BC9EFC()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1A5BC9F08()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1A5BC9F14()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1A5BC9F20()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_1A5BC9F2C()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1A5BC9F38()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1A5BC9F44()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1A5BC9F50()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1A5BC9F5C()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1A5BC9F68()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1A5BC9F74()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1A5BC9F80()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1A5BC9F8C()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1A5BC9F98()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1A5BC9FA4()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1A5BC9FB0()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_1A5BC9FBC()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t sub_1A5BC9FC8()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_1A5BC9FD4()
{
  return MEMORY[0x1E0DECF60]();
}

uint64_t sub_1A5BC9FE0()
{
  return MEMORY[0x1E0DECF78]();
}

uint64_t sub_1A5BC9FEC()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1A5BC9FF8()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_1A5BCA004()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_1A5BCA010()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1A5BCA01C()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_1A5BCA028()
{
  return MEMORY[0x1E0DED048]();
}

uint64_t sub_1A5BCA034()
{
  return MEMORY[0x1E0DED070]();
}

uint64_t sub_1A5BCA040()
{
  return MEMORY[0x1E0DED090]();
}

uint64_t sub_1A5BCA04C()
{
  return MEMORY[0x1E0DED0B0]();
}

uint64_t sub_1A5BCA058()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_1A5BCA064()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_1A5BCA070()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t sub_1A5BCA07C()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1A5BCA088()
{
  return MEMORY[0x1E0DED170]();
}

uint64_t sub_1A5BCA094()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1A5BCA0A0()
{
  return MEMORY[0x1E0DED4A0]();
}

uint64_t sub_1A5BCA0AC()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_1A5BCA0B8()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1A5BCA0C4()
{
  return MEMORY[0x1E0DED628]();
}

uint64_t sub_1A5BCA0D0()
{
  return MEMORY[0x1E0DED6C8]();
}

uint64_t sub_1A5BCA0DC()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t sub_1A5BCA0E8()
{
  return MEMORY[0x1E0DED9F8]();
}

uint64_t sub_1A5BCA0F4()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1A5BCA100()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1A5BCA10C()
{
  return MEMORY[0x1E0CB2620]();
}

uint64_t sub_1A5BCA118()
{
  return MEMORY[0x1E0CB2628]();
}

uint64_t sub_1A5BCA124()
{
  return MEMORY[0x1E0CB2640]();
}

uint64_t sub_1A5BCA130()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t sub_1A5BCA13C()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1A5BCA148()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1A5BCA154()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1A5BCA160()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1A5BCA16C()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1A5BCA178()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1A5BCA184()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1A5BCA190()
{
  return MEMORY[0x1E0DEE230]();
}

uint64_t sub_1A5BCA19C()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1A5BCA1A8()
{
  return MEMORY[0x1E0DEE260]();
}

uint64_t sub_1A5BCA1B4()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1A5BCA1C0()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1A5BCA1CC()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t sub_1A5BCA1D8()
{
  return MEMORY[0x1E0DEE978]();
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1E0C98738](cf);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
  MEMORY[0x1E0C988B0](center, observer, callBack, name, object, suspensionBehavior);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988B8]();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
  MEMORY[0x1E0C988E0](center, name, object, userInfo, deliverImmediately);
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
  MEMORY[0x1E0C98900](center, observer, name, object);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98A40](key, applicationID);
}

Boolean CFPreferencesSynchronize(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return MEMORY[0x1E0C98A98](applicationID, userName, hostName);
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x1E0C99170]();
}

uint64_t DeviceIdentityIssueClientCertificateWithCompletion()
{
  return MEMORY[0x1E0D1D0F8]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1E0DE2B20]();
}

uint64_t MKBDeviceUnlockedSinceBoot()
{
  return MEMORY[0x1E0D4E4A0]();
}

CFDataRef SecCertificateCopyData(SecCertificateRef certificate)
{
  return (CFDataRef)MEMORY[0x1E0CD5F60](certificate);
}

CFDataRef SecKeyCreateSignature(SecKeyRef key, SecKeyAlgorithm algorithm, CFDataRef dataToSign, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x1E0CD6390](key, algorithm, dataToSign, error);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81020](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1E0DA88F0]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x1E0DEEA50]();
}

uint64_t abort_report_np()
{
  return MEMORY[0x1E0C813B0]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82D48](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E48](label, attr);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

uid_t geteuid(void)
{
  return MEMORY[0x1E0C83668]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7CB0](name);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

uint64_t os_eligibility_get_domain_answer()
{
  return MEMORY[0x1E0C84678]();
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

uint64_t os_variant_has_internal_ui()
{
  return MEMORY[0x1E0C84A00]();
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1E0C85548](*(_QWORD *)&__errnum);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1E0DEEB40]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x1E0DF0F98]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x1E0DF0FB0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1E0DF0FB8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1E0DF0FC0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return MEMORY[0x1E0C857A0](a1, a2, a3, a4, a5);
}

xpc_object_t xpc_activity_copy_criteria(xpc_activity_t activity)
{
  return (xpc_object_t)MEMORY[0x1E0C85D80](activity);
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return MEMORY[0x1E0C85D90](activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
  MEMORY[0x1E0C85D98](identifier, criteria, handler);
}

void xpc_activity_set_criteria(xpc_activity_t activity, xpc_object_t criteria)
{
  MEMORY[0x1E0C85DB0](activity, criteria);
}

BOOL xpc_activity_set_state(xpc_activity_t activity, xpc_activity_state_t state)
{
  return MEMORY[0x1E0C85DB8](activity, state);
}

BOOL xpc_activity_should_defer(xpc_activity_t activity)
{
  return MEMORY[0x1E0C85DC8](activity);
}

xpc_object_t xpc_dictionary_create_empty(void)
{
  return (xpc_object_t)MEMORY[0x1E0C86218]();
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C862A0](xdict, key);
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
  MEMORY[0x1E0C86310](xdict, key, value);
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
  MEMORY[0x1E0C86360](xdict, key, value);
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
  MEMORY[0x1E0C86390](xdict, key, string);
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x1E0C86520](object);
}

