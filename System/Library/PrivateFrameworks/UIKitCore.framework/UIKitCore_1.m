uint64_t _UIUserInterfaceStyleFromString(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Light")) & 1) != 0)
  {
    v2 = 1;
  }
  else if (objc_msgSend(v1, "isEqualToString:", CFSTR("Dark")))
  {
    v2 = 2;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

void sub_1854539B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

_UIOverlayEffect *_UIVisualEffectNewOverlay(uint64_t a1, double a2)
{
  void *v3;
  _UIOverlayEffect *v4;

  _UICompositingFilterForMode(a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v4 = objc_alloc_init(_UIOverlayEffect);
    -[_UIOverlayEffect setFilterType:](v4, "setFilterType:", v3);
    -[_UIOverlayEffect setAlpha:](v4, "setAlpha:", a2);
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

id _UICompositingFilterForMode(uint64_t a1)
{
  id *v1;
  id v2;

  v1 = (id *)MEMORY[0x1E0CD2E70];
  switch(a1)
  {
    case 0:
      goto LABEL_41;
    case 1:
      v1 = (id *)MEMORY[0x1E0CD2E58];
      goto LABEL_41;
    case 2:
      v1 = (id *)MEMORY[0x1E0CD2EB0];
      goto LABEL_41;
    case 3:
      v1 = (id *)MEMORY[0x1E0CD2E80];
      goto LABEL_41;
    case 4:
      v1 = (id *)MEMORY[0x1E0CD2C28];
      goto LABEL_41;
    case 5:
      v1 = (id *)MEMORY[0x1E0CD2DD8];
      goto LABEL_41;
    case 6:
      v1 = (id *)MEMORY[0x1E0CD2BD0];
      goto LABEL_41;
    case 7:
      v1 = (id *)MEMORY[0x1E0CD2BC0];
      goto LABEL_41;
    case 8:
      v1 = (id *)MEMORY[0x1E0CD2EB8];
      goto LABEL_41;
    case 9:
      v1 = (id *)MEMORY[0x1E0CD2C90];
      goto LABEL_41;
    case 10:
      v1 = (id *)MEMORY[0x1E0CD2C60];
      goto LABEL_41;
    case 11:
      v1 = (id *)MEMORY[0x1E0CD2C80];
      goto LABEL_41;
    case 12:
      v1 = (id *)MEMORY[0x1E0CD2BA0];
      goto LABEL_41;
    case 13:
      v1 = (id *)MEMORY[0x1E0CD2C18];
      goto LABEL_41;
    case 14:
      v1 = (id *)MEMORY[0x1E0CD2EC8];
      goto LABEL_41;
    case 15:
      v1 = (id *)MEMORY[0x1E0CD2ED0];
      goto LABEL_41;
    case 16:
      v1 = (id *)MEMORY[0x1E0CD2EC0];
      goto LABEL_41;
    case 17:
      v1 = (id *)MEMORY[0x1E0CD2C38];
      goto LABEL_41;
    case 18:
      v1 = (id *)MEMORY[0x1E0CD2C58];
      goto LABEL_41;
    case 19:
      v1 = (id *)MEMORY[0x1E0CD2C48];
      goto LABEL_41;
    case 20:
      v1 = (id *)MEMORY[0x1E0CD2C50];
      goto LABEL_41;
    case 21:
      v1 = (id *)MEMORY[0x1E0CD2C40];
      goto LABEL_41;
    case 22:
      v1 = (id *)MEMORY[0x1E0CD2F28];
      goto LABEL_41;
    case 23:
      v1 = (id *)MEMORY[0x1E0CD2E98];
      goto LABEL_41;
    case 24:
      v1 = (id *)MEMORY[0x1E0CD2EA0];
LABEL_41:
      v2 = *v1;
      break;
    default:
      switch(a1)
      {
        case 1000:
          v1 = (id *)MEMORY[0x1E0CD2EF0];
          goto LABEL_41;
        case 1001:
          v1 = (id *)MEMORY[0x1E0CD2EE8];
          goto LABEL_41;
        case 1002:
          v1 = (id *)MEMORY[0x1E0CD2E48];
          goto LABEL_41;
        case 1003:
          v1 = (id *)MEMORY[0x1E0CD2E38];
          goto LABEL_41;
        case 1004:
          v1 = (id *)MEMORY[0x1E0CD2E50];
          goto LABEL_41;
        case 1005:
          v1 = (id *)MEMORY[0x1E0CD2C68];
          goto LABEL_41;
        case 1006:
          v1 = (id *)MEMORY[0x1E0CD2DF8];
          goto LABEL_41;
        case 1007:
          v1 = (id *)MEMORY[0x1E0CD2E00];
          goto LABEL_41;
        case 1008:
          v1 = (id *)MEMORY[0x1E0CD2E08];
          goto LABEL_41;
        case 1009:
          v1 = (id *)MEMORY[0x1E0CD2E90];
          goto LABEL_41;
        case 1010:
          v1 = (id *)MEMORY[0x1E0CD2C30];
          goto LABEL_41;
        case 1011:
          v1 = (id *)MEMORY[0x1E0CD2DE0];
          goto LABEL_41;
        default:
          v2 = 0;
          break;
      }
      break;
  }
  return v2;
}

void sub_185455A04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1854594F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 304), 8);
  _Block_object_dispose((const void *)(v1 - 272), 8);
  _Unwind_Resume(a1);
}

void sub_1854599C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t TaggingAppearanceGeneralSetterIMP(void *a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9, __n128 a10, __n128 a11, __n128 a12, __n128 a13, __n128 a14, __n128 a15, __n128 a16)
{
  IMP v16;
  __n128 *v18;
  _OWORD v19[8];
  void *v20;
  const char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t vars0;

  v19[0] = a9;
  v19[1] = a10;
  v19[2] = a11;
  v19[3] = a12;
  v19[4] = a13;
  v19[5] = a14;
  v19[6] = a15;
  v19[7] = a16;
  v20 = a1;
  v21 = a2;
  v22 = a3;
  v23 = a4;
  v24 = a5;
  v25 = a6;
  v26 = a7;
  v27 = a8;
  v16 = _ObjectTaggingUtility(a1, a2, v19, (unint64_t)&vars0, vars0, &v18);
  ((void (*)(unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, unint64_t, __n128, __n128, __n128, __n128, __n128, __n128, __n128, __n128))v16)(v18[8].n128_u64[0], v18[8].n128_u64[1], v18[9].n128_u64[0], v18[9].n128_u64[1], v18[10].n128_u64[0], v18[10].n128_u64[1], v18[11].n128_u64[0], v18[11].n128_u64[1], *v18, v18[1], v18[2], v18[3], v18[4], v18[5], v18[6], v18[7]);
  return _ObjectTaggingCleanupUtility();
}

IMP _ObjectTaggingUtility(void *a1, const char *a2, _QWORD *a3, unint64_t a4, uint64_t a5, _QWORD *a6)
{
  unint64_t v12;
  _DWORD *v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  int *v22;
  int v23;
  int *v24;
  int v25;
  unint64_t v26;
  _BYTE *v27;
  char *v28;
  char v29;
  void *v30;
  const char *v31;
  unsigned int v32;
  id v33;
  unint64_t v34;
  int v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  void *v40;
  _QWORD v41[3];

  v41[2] = *MEMORY[0x1E0C80C00];
  v12 = a5 - a4;
  v13 = a6 + 2;
  if ((_QWORD *)((char *)a6 + a5 - a4 + 16) != a3)
  {
    v40 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    objc_msgSend(v40, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "IMP _ObjectTaggingUtility(id, SEL, u_int8_t *, u_int8_t *, u_int8_t *, u_int8_t *)"), CFSTR("UIAppearance.m"), 561, CFSTR("Error copying stack frame in appearance proxy tagging."));
  }
  if (a5 != a4 && a6 != (_QWORD *)a4)
  {
    v14 = v12 >> 2;
    v15 = v12 & 3;
    if ((unint64_t)a6 <= a4)
    {
      if (v12 >= 4)
      {
        v24 = (int *)(a4 + 16);
        if (v14 <= 1)
          v14 = 1;
        do
        {
          v25 = *v24++;
          *v13++ = v25;
          --v14;
        }
        while (v14);
      }
      if ((v12 & 3) != 0)
      {
        v26 = (v12 & 0xFFFFFFFFFFFFFFFCLL) + 17;
        v27 = (char *)a6 + v26;
        v28 = (char *)(a4 + v26);
        do
        {
          v29 = *v28++;
          *v27++ = v29;
          --v15;
        }
        while (v15);
      }
    }
    else
    {
      if ((v12 & 3) != 0)
      {
        v16 = (char *)(a5 + 15);
        v17 = (char *)a6 + a5 + 15 - a4;
        do
        {
          v18 = *v16--;
          *v17-- = v18;
          --v15;
        }
        while (v15);
      }
      if (v12 >= 4)
      {
        if (v14 <= 1)
          v19 = 1;
        else
          v19 = v12 >> 2;
        v20 = 4 * v14 + 12;
        v21 = (_DWORD *)((char *)a6 + v20);
        v22 = (int *)(a4 + v20);
        do
        {
          v23 = *v22--;
          *v21-- = v23;
          --v19;
        }
        while (v19);
      }
    }
  }
  *a6 = a3;
  v30 = (void *)objc_msgSend(a1, "methodSignatureForSelector:", a2);
  v31 = (const char *)objc_msgSend(v30, "getArgumentTypeAtIndex:", 2);
  if (!strcmp(v31, "@")
    || !strcmp(v31, "Q")
    || !strcmp(v31, "q")
    || !strcmp(v31, "i")
    || !strcmp(v31, "I")
    || !strcmp(v31, "B")
    || !strcmp(v31, "c"))
  {
    v32 = 3;
  }
  else
  {
    v32 = 2;
  }
  v33 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v34 = objc_msgSend(v30, "numberOfArguments");
  if (v34 >= 4)
  {
    v35 = 8 * v32;
    v36 = v34 - 3;
    do
    {
      if (v32 >= 8)
        v37 = 144;
      else
        v37 = 128;
      objc_msgSend(v33, "addObject:", objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", *(_QWORD *)((char *)a3 + (v37 + v35))));
      ++v32;
      v35 += 8;
      --v36;
    }
    while (v36);
  }
  _UIAppearanceTagObjectForSelector(a1, a2, v33);

  if (!qword_1ECD7E188)
    qword_1ECD7E188 = (uint64_t)objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v41[0] = a1;
  v41[1] = NSStringFromSelector(a2);
  v38 = objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v41, 2);
  objc_msgSend((id)qword_1ECD7E188, "addObject:", v38);
  PushNextClassForSettingIMP(a1, a2);
  return CurrentOrginalSettingIMP(a1, a2);
}

uint64_t _ObjectTaggingCleanupUtility()
{
  void *v0;
  void *v1;
  const char *v2;
  id AssociatedObject;

  v0 = (void *)objc_msgSend((id)qword_1ECD7E188, "lastObject");
  v1 = (void *)objc_msgSend(v0, "objectAtIndexedSubscript:", 0);
  v2 = NSSelectorFromString((NSString *)objc_msgSend(v0, "objectAtIndexedSubscript:", 1));
  AssociatedObject = objc_getAssociatedObject(v1, &unk_1ECD7E182);
  objc_msgSend((id)objc_msgSend(AssociatedObject, "objectForKey:", NSStringFromSelector(v2)), "removeLastObject");
  return objc_msgSend((id)qword_1ECD7E188, "removeLastObject");
}

BOOL UIAccessibilityIsGuidedAccessEnabled(void)
{
  unint64_t v1;
  NSObject *v2;
  NSObject *v3;
  uint8_t v4[16];
  uint8_t buf[16];

  if (dyld_program_sdk_at_least())
  {
    if (pthread_main_np() != 1)
    {
      if (os_variant_has_internal_diagnostics())
      {
        v3 = __UIFaultDebugAssertLog();
        if (os_log_type_enabled(v3, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_fault_impl(&dword_185066000, v3, OS_LOG_TYPE_FAULT, "Unsupported use of UIKit API off the main thread: UIAccessibilityIsGuidedAccessEnabled()", buf, 2u);
        }
      }
      else
      {
        v1 = UIAccessibilityIsGuidedAccessEnabled___s_category;
        if (!UIAccessibilityIsGuidedAccessEnabled___s_category)
        {
          v1 = __UILogCategoryGetNode("Assert", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
          atomic_store(v1, (unint64_t *)&UIAccessibilityIsGuidedAccessEnabled___s_category);
        }
        v2 = *(NSObject **)(v1 + 8);
        if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)v4 = 0;
          _os_log_impl(&dword_185066000, v2, OS_LOG_TYPE_ERROR, "Unsupported use of UIKit API off the main thread: UIAccessibilityIsGuidedAccessEnabled()", v4, 2u);
        }
      }
    }
    +[UIApplication _accessibilityLoadSettingsLoaderIfNeeded](UIApplication, "_accessibilityLoadSettingsLoaderIfNeeded");
  }
  return objc_msgSend(MEMORY[0x1E0DE7910], "__accessibilityGuidedAccessStateEnabled");
}

id _UIKitResourceBundlePath(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  _UIKitBundlePath();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringByAppendingPathComponent:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id _UIKitBundlePath()
{
  pthread_once(&_UIKitBundlePath_initUIKitBundleLocationOnce, __InitializeUIKitBundlePath);
  return (id)__kitLocation;
}

id UIKBMoreKeyStringForActiveInputMode(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  const __CFString *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  double v12;
  _BOOL4 v13;
  id v14;
  void *v16;

  v3 = a1;
  v4 = a2;
  objc_msgSend(v4, "displayString");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "visualStyle") == 101)
    goto LABEL_34;
  v6 = CFSTR("123");
  switch(objc_msgSend(v4, "displayTypeHint"))
  {
    case 1u:
      UIKeyboardGetABCStringForActiveInputMode();
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_32;
    case 2u:
      if (objc_msgSend(v3, "visualStyle") == 301)
        goto LABEL_22;
      if (((objc_msgSend(v3, "visualStyling") & 0x3F) == 1
         || (objc_msgSend(v3, "visualStyling") & 0x3F) == 0x18
         || (objc_msgSend(v3, "visualStyling") & 0x3F) == 0x19
         || (objc_msgSend(v3, "visualStyling") & 0x3F) == 0x1A
         || (objc_msgSend(v3, "visualStyling") & 0x3F) == 0x17)
        && (objc_msgSend(v3, "isFloating") & 1) == 0)
      {
        +[UIKeyboardPreferencesController sharedPreferencesController](UIKeyboardPreferencesController, "sharedPreferencesController");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "preferencesActions");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "rivenSizeFactor:", 1.0);
        if (v12 <= 1.0 || (unint64_t)objc_msgSend((id)UIKeyboardActiveUserSelectableInputModes, "count") < 2)
        {

        }
        else
        {
          v13 = +[UIDictationController fetchCurrentInputModeSupportsDictation](UIDictationController, "fetchCurrentInputModeSupportsDictation");

          if (v13)
          {
LABEL_22:
            UIKeyboardGetNumbersStringForActiveInputMode();
            v7 = objc_claimAutoreleasedReturnValue();
LABEL_32:
            v6 = (const __CFString *)v7;
            goto LABEL_33;
          }
        }
LABEL_31:
        UIKeyboardGetNumbersSymbolsStringForActiveInputMode();
        v7 = objc_claimAutoreleasedReturnValue();
        goto LABEL_32;
      }
      if ((unint64_t)objc_msgSend((id)UIKeyboardActiveUserSelectableInputModes, "count") > 1
        || +[UIDictationController fetchCurrentInputModeSupportsDictation](UIDictationController, "fetchCurrentInputModeSupportsDictation"))
      {
        goto LABEL_22;
      }
      if (UIKBKeyboardIsURLKeyboard(v3))
      {
        v8 = (void *)MEMORY[0x1E0CB3940];
        UIKeyboardGetNumbersStringForActiveInputMode();
        v9 = objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "stringWithFormat:", CFSTR("@%@"), v9);
        goto LABEL_37;
      }
      if (!UIKBKeyboardIsEmailKeyboard(v3))
        goto LABEL_31;
      v16 = (void *)MEMORY[0x1E0CB3940];
      UIKeyboardGetNumbersStringForActiveInputMode();
      v9 = objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "stringWithFormat:", CFSTR("_%@"), v9);
LABEL_37:
      v6 = (const __CFString *)objc_claimAutoreleasedReturnValue();

      v5 = (void *)v9;
LABEL_33:

      v5 = (void *)v6;
LABEL_34:
      v14 = v5;

      return v14;
    case 4u:
      goto LABEL_33;
    case 5u:
      v6 = CFSTR("");
      goto LABEL_33;
    case 6u:
      v6 = CFSTR("symbols");
      goto LABEL_33;
    case 8u:
      UIKeyboardGetJapaneseAIUStringForActiveInputMode();
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_32;
    default:
      if ((unint64_t)objc_msgSend((id)UIKeyboardActiveUserSelectableInputModes, "count") >= 2
        && ((objc_msgSend(v3, "visualStyling") & 0x3F) != 1
         && (objc_msgSend(v3, "visualStyling") & 0x3F) != 0x18
         && (objc_msgSend(v3, "visualStyling") & 0x3F) != 0x19
         && (objc_msgSend(v3, "visualStyling") & 0x3F) != 0x1A
         && (objc_msgSend(v3, "visualStyling") & 0x3F) != 0x17
         || objc_msgSend(v3, "isFloating")))
      {
        goto LABEL_22;
      }
      goto LABEL_31;
  }
}

void sub_18545D79C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17)
{

  _Unwind_Resume(a1);
}

void sub_18545DDF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,id a47)
{
  __destructor_8_sb0_sb8_sb16_sb24_sb32_sb40(&a47);

  _Unwind_Resume(a1);
}

void *__copy_constructor_8_8_sb0_sb8_sb16_sb24_sb32_sb40(void **a1, const void **a2)
{
  void *result;

  *a1 = _Block_copy(*a2);
  a1[1] = _Block_copy(a2[1]);
  a1[2] = _Block_copy(a2[2]);
  a1[3] = _Block_copy(a2[3]);
  a1[4] = _Block_copy(a2[4]);
  result = _Block_copy(a2[5]);
  a1[5] = result;
  return result;
}

void UIViewAlertForUnsatisfiableConstraints(uint64_t a1, void *a2)
{
  char IsBeingDebugged;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  const __CFString *v12;
  uint64_t v13;
  unint64_t v14;
  NSObject *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint8_t v20[128];
  __int128 buf;
  void (*v22)(uint64_t);
  void *v23;
  char v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  IsBeingDebugged = _UIKitProcessIsBeingDebugged();
  *(_QWORD *)&buf = MEMORY[0x1E0C809B0];
  *((_QWORD *)&buf + 1) = 3221225472;
  v22 = ___UIConstraintBasedLayoutLogUnsatisfiableWithDefault_block_invoke;
  v23 = &__block_descriptor_33_e5_v8__0l;
  v24 = IsBeingDebugged;
  if (qword_1ECD79110 != -1)
    dispatch_once(&qword_1ECD79110, &buf);
  v5 = byte_1ECD790B5;
  if (qword_1ECD79130 != -1)
    dispatch_once(&qword_1ECD79130, &__block_literal_global_59_3);
  v6 = byte_1ECD790B7;
  if (byte_1ECD790B7 | v5)
  {
    if (qword_1ECD79100 != -1)
      dispatch_once(&qword_1ECD79100, &__block_literal_global_50_3);
    if (byte_1ECD790B4)
      -[UIDevice _playSystemSound:](+[UIDevice currentDevice](UIDevice, "currentDevice"), "_playSystemSound:", 1006);
    v18 = 0u;
    v19 = 0u;
    v16 = 0u;
    v17 = 0u;
    v7 = objc_msgSend(a2, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v17;
      while (2)
      {
        for (i = 0; i != v8; ++i)
        {
          if (*(_QWORD *)v17 != v9)
            objc_enumerationMutation(a2);
          v11 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * i);
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            objc_msgSend(v11, "firstItem");
            if ((objc_opt_respondsToSelector() & 1) != 0
              && (objc_msgSend((id)objc_msgSend((id)objc_msgSend(v11, "firstItem"), "_internalConstraints"), "containsObject:", v11) & 1) != 0)
            {
              v12 = CFSTR("\n\t(Note: If you're seeing NSAutoresizingMaskLayoutConstraints that you don't understand, refer to the documentation for the UIView property translatesAutoresizingMaskIntoConstraints) ");
              goto LABEL_23;
            }
          }
        }
        v8 = objc_msgSend(a2, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
        if (v8)
          continue;
        break;
      }
      v12 = &stru_1E16EDF20;
    }
    else
    {
      v12 = &stru_1E16EDF20;
    }
LABEL_23:
    v13 = objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unable to simultaneously satisfy constraints.\n\tProbably at least one of the constraints in the following list is one you don't want. \n\tTry this: \n\t\t(1) look at each constraint and try to figure out which you don't expect; \n\t\t(2) find the code that added the unwanted constraint or constraints and fix it. %@\n%@\n\nWill attempt to recover by breaking constraint \n%@\n\nMake a symbolic breakpoint at UIViewAlertForUnsatisfiableConstraints to catch this in the debugger.\nThe methods in the UIConstraintBasedLayoutDebugging category on UIView listed in <UIKitCore/UIView.h> may also be helpful."),
            v12,
            objc_msgSend((id)objc_msgSend(a2, "sortedArrayUsingFunction:context:", compareConstraintsAlphabetically, &__block_literal_global_314_1), "sortedArrayUsingFunction:context:", compareConstraintsAlphabetically, &__block_literal_global_315_0), a1);
    if (v6)
    {
      objc_msgSend((id)objc_msgSend(MEMORY[0x1E0C99DA0], "exceptionWithName:reason:userInfo:", *MEMORY[0x1E0C99778], v13, 0), "raise");
    }
    else if (v5)
    {
      v14 = qword_1ECD791C0;
      if (!qword_1ECD791C0)
      {
        v14 = __UILogCategoryGetNode("LayoutConstraints", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
        atomic_store(v14, (unint64_t *)&qword_1ECD791C0);
      }
      v15 = *(NSObject **)(v14 + 8);
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      {
        LODWORD(buf) = 138412290;
        *(_QWORD *)((char *)&buf + 4) = v13;
        _os_log_impl(&dword_185066000, v15, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&buf, 0xCu);
      }
    }
  }
}

uint64_t _UIKitProcessIsBeingDebugged()
{
  size_t v1;
  _OWORD v2[2];
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  int v33[2];
  int v34;
  pid_t v35;
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v31 = 0u;
  v32 = 0u;
  v29 = 0u;
  v30 = 0u;
  v27 = 0u;
  v28 = 0u;
  v25 = 0u;
  v26 = 0u;
  v23 = 0u;
  v24 = 0u;
  v21 = 0u;
  v22 = 0u;
  v19 = 0u;
  v20 = 0u;
  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v11 = 0u;
  v12 = 0u;
  v9 = 0u;
  v10 = 0u;
  v7 = 0u;
  v8 = 0u;
  v5 = 0u;
  v6 = 0u;
  v3 = 0u;
  v4 = 0u;
  memset(v2, 0, sizeof(v2));
  LODWORD(v3) = 0;
  *(_QWORD *)v33 = 0xE00000001;
  v34 = 1;
  v35 = getpid();
  v1 = 648;
  sysctl(v33, 4u, v2, &v1, 0, 0);
  return (v3 >> 11) & 1;
}

void UIKeyboardSetActiveInputModes(void *a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v5 = a1;
  if ((id)UIKeyboardActiveInputModes != v5)
  {
    objc_storeStrong((id *)&UIKeyboardActiveInputModes, a1);
    +[UIKeyboardInputModeController sharedInputModeController](UIKeyboardInputModeController, "sharedInputModeController");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "userSelectableInputModeIdentifiersFromInputModeIdentifiers:", v5);
    v3 = objc_claimAutoreleasedReturnValue();

    v4 = (void *)UIKeyboardActiveUserSelectableInputModes;
    UIKeyboardActiveUserSelectableInputModes = v3;

  }
}

void __UISceneAccessClassComponentArray(int a1, void *a2)
{
  id v3;
  NSObject *v4;
  id *v5;
  id v6;
  id v7;
  id v8;
  _QWORD v9[4];
  id v10;
  _QWORD block[4];
  id v12;

  v3 = a2;
  v8 = v3;
  if (qword_1ECD79210 != -1)
  {
    dispatch_once(&qword_1ECD79210, &__block_literal_global_622);
    v3 = v8;
  }
  v4 = qword_1ECD79208;
  if (a1)
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ____UISceneAccessClassComponentArray_block_invoke_2;
    block[3] = &unk_1E16B1BF8;
    v5 = &v12;
    v12 = v3;
    v6 = v3;
    dispatch_barrier_sync(v4, block);
  }
  else
  {
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = ____UISceneAccessClassComponentArray_block_invoke_3;
    v9[3] = &unk_1E16B1BF8;
    v5 = &v10;
    v10 = v3;
    v7 = v3;
    dispatch_sync(v4, v9);
  }

}

void sub_185464734(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

uint64_t __UIAPPLICATION_IS_LOADING_INITIALIZATION_INFO_FROM_THE_SYSTEM__(uint64_t result)
{
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

id _nextWindowSizedViewController(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _BOOL4 v7;
  id v8;
  void *v9;
  id v10;

  objc_msgSend(a1, "presentedViewController");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = v1;
  if (!v1)
  {
    v9 = 0;
    goto LABEL_17;
  }
  if (objc_msgSend(v1, "modalPresentationStyle")
    && objc_msgSend(v2, "modalPresentationStyle") != 5
    && objc_msgSend(v2, "modalPresentationStyle") != 17
    && objc_msgSend(v2, "modalPresentationStyle") != 4
    || (objc_msgSend(v2, "_existingView"), v3 = (void *)objc_claimAutoreleasedReturnValue(), v3, !v3))
  {
    _nextWindowSizedViewController(v2);
    v10 = (id)objc_claimAutoreleasedReturnValue();
LABEL_14:
    v9 = v10;
    goto LABEL_17;
  }
  if (objc_msgSend(v2, "modalPresentationStyle") != 4)
  {
    v10 = v2;
    goto LABEL_14;
  }
  objc_msgSend(v2, "_existingView");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "window");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5
    && (objc_msgSend(v2, "_existingView"),
        v6 = (void *)objc_claimAutoreleasedReturnValue(),
        v7 = +[UIViewController _isViewSizeFullScreen:inWindow:ignoreInWindowCheck:](UIViewController, "_isViewSizeFullScreen:inWindow:ignoreInWindowCheck:", v6, v5, 0), v6, v7))
  {
    v8 = v2;
  }
  else
  {
    _nextWindowSizedViewController(v2);
    v8 = (id)objc_claimAutoreleasedReturnValue();
  }
  v9 = v8;

LABEL_17:
  return v9;
}

void sub_185466F74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _UIAppStatusBarHeightForWindow(void *a1)
{
  void *v1;

  if (*(double *)&__SplashBoardOverrideStatusBarHeight == 1.79769313e308)
  {
    __UIStatusBarManagerForWindow(a1);
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "statusBarHeight");

  }
}

void _UIAppStatusBarDefaultHeight()
{
  void *v0;
  void *v1;

  if (UIApp)
  {
    objc_msgSend((id)UIApp, "_findUISceneForLegacyInterfaceOrientation");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      objc_msgSend(v0, "statusBarManager");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v1, "defaultStatusBarHeightInOrientation:", 1);

      return;
    }

  }
  +[UIStatusBar_Base heightForStyle:orientation:inWindow:](UIStatusBar, "heightForStyle:orientation:inWindow:", 0, 1, 0);
}

BOOL _containedInViewOfClass(void *a1)
{
  void *v1;
  _BOOL8 v2;

  _enclosingViewOfClass(a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = v1 != 0;

  return v2;
}

id _enclosingViewOfClass(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    v3 = v1;
    do
    {
      if ((objc_opt_isKindOfClass() & 1) != 0)
        break;
      objc_msgSend(v3, "superview");
      v4 = objc_claimAutoreleasedReturnValue();

      v3 = (void *)v4;
    }
    while (v4);
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

void __defaultConfiguration_block_invoke()
{
  void *v0;
  char v1;
  void *v2;
  char v3;
  id v4;
  char v5[16];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  makeProfilePath("Default", v5);
  if (access(v5, 0) && (MGGetBoolAnswer() & 1) == 0)
  {
    v8 = 0u;
    v9 = 0u;
    v6 = 0u;
    v7 = 0u;
    *(_OWORD *)v5 = 0u;
    os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR);
    _UIUpdateInputTimingProfilePath("Default");
    v4 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
    objc_msgSend(v4, "UTF8String");
    _os_log_send_and_compose_impl();

    _os_crash_msg();
    __break(1u);
    return;
  }
  if (!_UIInternalPreferenceUsesDefault(&_UIInternalPreference_UpdateCycleCompatibility, (uint64_t)CFSTR("UpdateCycleCompatibility"), (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool))
  {
    if (!byte_1ECD76794)
      goto LABEL_5;
LABEL_7:
    _UIMainBundleIdentifier();
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    v1 = objc_msgSend(&unk_1E1A945E0, "containsObject:", v0);

    byte_1ECD7F572 = v1 ^ 1;
    if ((v1 & 1) != 0)
      return;
    goto LABEL_8;
  }
  if ((dyld_program_sdk_at_least() & 1) == 0)
    goto LABEL_7;
LABEL_5:
  byte_1ECD7F572 = 1;
LABEL_8:
  objc_msgSend(MEMORY[0x1E0CD2728], "mainDisplay");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "supportsVariableFrameDuration");

  byte_1ECD7F573 = v3;
}

uint64_t UIKeyboardAlwaysShowCandidateBarForCurrentInputMode()
{
  void *v0;
  uint64_t v1;

  UIKeyboardGetCurrentInputMode();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = UIKeyboardAlwaysShowCandidateBarForInputMode();

  return v1;
}

uint64_t UIKeyboardAlwaysShowCandidateBarForInputMode()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  TIInputModeGetNormalizedIdentifier();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  TIGetInputModeProperties();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "objectForKey:", *MEMORY[0x1E0DBE060]);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "BOOLValue");

  return v3;
}

BOOL _shouldEnableUIKitParallaxEffects()
{
  if (!os_variant_has_internal_diagnostics())
    return 1;
  if (qword_1EDDCA8A8 != -1)
    dispatch_once(&qword_1EDDCA8A8, &__block_literal_global_3380);
  return byte_1EDDCA612 != 0;
}

double _convertVisualAltitudeFromViewToView(void *a1, void *a2, double a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  double v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  double v22;
  uint64_t v23;

  v5 = a1;
  v6 = a2;
  objc_msgSend(v5, "layer");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "layer");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "ancestorSharedWithLayer:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "layer");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (v10 != v9)
  {
    objc_msgSend(v5, "layer");
    v11 = objc_claimAutoreleasedReturnValue();
    if ((void *)v11 != v9)
    {
      v12 = (void *)v11;
      do
      {
        v13 = (id)objc_msgSend(v12, "unsafeUnretainedDelegate");
        if (v13)
        {
          v14 = v13;
          if (_IsKindOfUIView((uint64_t)v13))
            v13 = v14;
          else
            v13 = 0;
        }
        objc_msgSend(v13, "_visualAltitude");
        a3 = a3 + v15;
        objc_msgSend(v12, "superlayer");
        v16 = objc_claimAutoreleasedReturnValue();

        v12 = (void *)v16;
      }
      while ((void *)v16 != v9);
    }

  }
  objc_msgSend(v6, "layer");
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  if (v17 != v9)
  {
    objc_msgSend(v6, "layer");
    v18 = objc_claimAutoreleasedReturnValue();
    if ((void *)v18 != v9)
    {
      v19 = (void *)v18;
      do
      {
        v20 = (id)objc_msgSend(v19, "unsafeUnretainedDelegate");
        if (v20)
        {
          v21 = v20;
          if (_IsKindOfUIView((uint64_t)v20))
            v20 = v21;
          else
            v20 = 0;
        }
        objc_msgSend(v20, "_visualAltitude");
        a3 = a3 - v22;
        objc_msgSend(v19, "superlayer");
        v23 = objc_claimAutoreleasedReturnValue();

        v19 = (void *)v23;
      }
      while ((void *)v23 != v9);
    }

  }
  return a3;
}

void sub_18546D0BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18546D8EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getTUISystemInputAssistantStyleStandardClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  TextInputUILibrary_1();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("TUISystemInputAssistantStyleStandard");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getTUISystemInputAssistantStyleStandardClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUISystemInputAssistantStyleStandardClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UISystemInputAssistantViewController.m"), 104, CFSTR("Unable to find class %s"), "TUISystemInputAssistantStyleStandard");

    __break(1u);
  }
}

uint64_t UIGetAssistantBarStyleFromPlacement(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if (objc_msgSend(v1, "isCompactAssistantView"))
  {
    if ((objc_msgSend(v1, "isMemberOfClass:", objc_opt_class()) & 1) != 0)
    {
      v2 = 3;
    }
    else if (objc_msgSend(v1, "isMemberOfClass:", objc_opt_class()))
    {
      v2 = 4;
    }
    else
    {
      v2 = 2;
    }
  }
  else
  {
    v2 = objc_msgSend(v1, "isFloatingAssistantView");
  }

  return v2;
}

uint64_t _UIInterfaceOrientationRotationDirectionForRotationFromInterfaceOrientationToInterfaceOrientation(uint64_t a1, uint64_t a2, int a3)
{
  double v3;
  double v4;

  if ((unint64_t)(a1 - 3) < 2 != (unint64_t)(a2 - 3) < 2)
  {
    v3 = 0.0;
    v4 = 0.0;
    if (a1 != 1)
    {
      if (a1 == 3)
      {
        v4 = 1.57079633;
      }
      else if (a1 == 4)
      {
        v4 = -1.57079633;
      }
      else
      {
        v4 = 3.14159265;
        if (a1 != 2)
          v4 = 0.0;
      }
    }
    if (a2 != 1)
    {
      if (a2 == 3)
      {
        v3 = 1.57079633;
      }
      else if (a2 == 4)
      {
        v3 = -1.57079633;
      }
      else
      {
        v3 = 3.14159265;
        if (a2 != 2)
          v3 = 0.0;
      }
    }
    return _UIInterfaceOrientationRotationDirectionForRotationFromAngleToAngle(a3, v4, v3);
  }
  else if (a3)
  {
    return 2;
  }
  else
  {
    return 1;
  }
}

uint64_t _UISwipeGestureRecognizerCommonInit(_QWORD *a1)
{
  id v2;
  void *v3;

  a1[34] = 0x3FE0000000000000;
  a1[35] = 0x4049000000000000;
  a1[36] = 0x47EFFFFFE0000000;
  a1[37] = 0;
  a1[38] = 0x4049000000000000;
  a1[39] = 0;
  a1[41] = 0x3FAEB851EB851EB8;
  a1[42] = 0x3F947AE147AE147BLL;
  a1[40] = 0;
  a1[45] = 1;
  v2 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v3 = (void *)a1[44];
  a1[44] = v2;

  objc_msgSend(a1, "setNumberOfTouchesRequired:", 1);
  return objc_msgSend(a1, "_setRequiresSystemGesturesToFail:", 1);
}

BOOL ___largeTitleBaselineToTopDistance_block_invoke()
{
  _BOOL8 result;
  double v1;

  result = _UIIsFourInch();
  v1 = 36.0;
  if (result)
    v1 = 31.0;
  qword_1ECD7CDB0 = *(_QWORD *)&v1;
  return result;
}

BOOL ___largeTitleRestingHeight_block_invoke()
{
  _BOOL8 result;
  double v1;

  result = _UIIsFourInch();
  v1 = 52.0;
  if (result)
    v1 = 47.0;
  _MergedGlobals_8 = *(_QWORD *)&v1;
  return result;
}

BOOL _UIIsFourInch()
{
  void *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;

  +[UIScreen mainScreen](UIScreen, "mainScreen");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;

  if (v2 >= v4)
    v5 = v4;
  else
    v5 = v2;
  v6 = fabs(v5 + -320.0);
  if (v2 >= v4)
    v7 = v2;
  else
    v7 = v4;
  return fabs(v7 + -568.0) <= 2.22044605e-16 && v6 <= 2.22044605e-16;
}

double _UIScrollViewRubberBandCoefficient(uint64_t a1)
{
  int v1;
  double result;
  BOOL v3;
  double v4;
  int v5;
  int *v6;
  const __CFString *v7;
  int v8;
  int v9;
  int v10;

  switch(a1)
  {
    case 1:
      v1 = _UIInternalPreferenceUsesDefault((int *)&unk_1ECD769F8, (uint64_t)CFSTR("SmallTrackpadRubberBandingCoefficient"), (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
      result = *(double *)&qword_1ECD76A00;
      v3 = v1 == 0;
      v4 = 0.715;
      break;
    case 2:
      v6 = (int *)&unk_1ECD76A08;
      v7 = CFSTR("LargeTrackpadRubberBandingCoefficient");
      goto LABEL_7;
    case 3:
      v8 = _UIInternalPreferenceUsesDefault((int *)&unk_1ECD76A18, (uint64_t)CFSTR("ContinuousMouseRubberBandingCoefficient"), (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
      result = *(double *)&qword_1ECD76A20;
      v3 = v8 == 0;
      v4 = 0.4;
      break;
    case 4:
      v6 = (int *)&unk_1ECD76A28;
      v7 = CFSTR("DiscreteHighResolutionMouseRubberBandingCoefficient");
LABEL_7:
      v9 = _UIInternalPreferenceUsesDefault(v6, (uint64_t)v7, (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
      result = *((double *)v6 + 1);
      v3 = v9 == 0;
      v4 = 0.17;
      break;
    case 5:
      v10 = _UIInternalPreferenceUsesDefault((int *)&unk_1ECD76A38, (uint64_t)CFSTR("DiscreteLowResolutionMouseRubberBandingCoefficient"), (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
      result = *(double *)&qword_1ECD76A40;
      v3 = v10 == 0;
      v4 = 0.5;
      break;
    default:
      v5 = _UIInternalPreferenceUsesDefault((int *)&unk_1ECD76A48, (uint64_t)CFSTR("TouchRubberBandingCoefficient"), (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
      result = *(double *)&qword_1ECD76A50;
      v3 = v5 == 0;
      v4 = 0.55;
      break;
  }
  if (!v3)
    return v4;
  return result;
}

void ___navigationBarHeightToUseForTopInsetCalculationsOfViewController_block_invoke()
{
  id v0;

  _UIMainBundleIdentifier();
  v0 = (id)objc_claimAutoreleasedReturnValue();
  byte_1EDDB0E53 = objc_msgSend(v0, "isEqualToString:", CFSTR("com.apple.mobilenotes"));

}

_QWORD *_UIUpdateSequenceInsertItem(_QWORD *a1, int a2, uint64_t a3, int a4, uint64_t a5, const void *a6)
{
  _QWORD *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  v12 = malloc_type_calloc(1uLL, 0x30uLL, 0x10F004096A70276uLL);
  v12[2] = a3;
  *((_DWORD *)v12 + 6) = a4;
  v12[4] = a5;
  v13 = _Block_copy(a6);
  v14 = (void *)v12[5];
  v12[5] = v13;

  if (a2 == 1)
  {
    v16 = *a1;
    *v12 = *a1;
    if (v16)
      *(_QWORD *)(*a1 + 8) = v12;
    *a1 = v12;
    v12[1] = a1;
  }
  else if (!a2)
  {
    v15 = a1[1];
    *v12 = a1;
    v12[1] = v15;
    *(_QWORD *)a1[1] = v12;
    a1[1] = v12;
  }
  return v12;
}

void _UIQOSManagedCommitsBegin(void *a1, void *a2)
{
  id v3;
  id v4;
  CFIndex Count;
  void *Value;
  objc_class *Class;
  const char *Name;
  char __dst[8];

  v3 = a1;
  v4 = a2;
  _MergedGlobals_1293 = 0;
  if (qword_1ECD82128 != -1)
    dispatch_once(&qword_1ECD82128, &__block_literal_global_5_13);
  Count = CFDictionaryGetCount((CFDictionaryRef)qword_1ECD82130);
  Value = (void *)CFDictionaryGetValue((CFDictionaryRef)qword_1ECD82130, v3);
  if (!Value)
  {
    Value = CFSetCreateMutable((CFAllocatorRef)*MEMORY[0x1E0C9AE00], 0, MEMORY[0x1E0C9B3B0]);
    CFDictionaryAddValue((CFMutableDictionaryRef)qword_1ECD82130, v3, Value);
    CFRelease(Value);
  }
  CFSetAddValue((CFMutableSetRef)Value, v4);
  if (!Count)
  {
    Class = object_getClass(v3);
    Name = class_getName(Class);
    strncpy(__dst, Name, 8uLL);
    strncpy(__dst, (const char *)objc_msgSend(objc_retainAutorelease(v4), "UTF8String"), 8uLL);
    _tracepointArg4((uint64_t)&qword_1ECD82130);
    kdebug_trace();
    if (dword_1ECD82138)
    {
      if (!(_BYTE)word_1ECD82168)
        _beginInterval();
    }
  }

}

void requestRegistrySignaledCallback(_DWORD *a1, uint64_t a2)
{
  uint64_t v3;
  int v5;
  BOOL v6;

  v3 = *(_QWORD *)(a2 + 8);
  if (!v3 || (*a1 & 8) == 0)
    goto LABEL_3;
  *a1 &= ~8u;
  v5 = a1[33];
  v6 = v5 != 0;
  if (v5)
  {
    if (!*(_BYTE *)(v3 + 763))
      _UIQOSManagedCommitsBegin(CFSTR("HighFidelity"), CFSTR("HighFidelity"));
  }
  else if (*(_BYTE *)(v3 + 763))
  {
    _UIQOSManagedCommitsEnd(CFSTR("HighFidelity"), CFSTR("HighFidelity"));
  }
  *(_BYTE *)(v3 + 763) = v6;
  if (*a1)
LABEL_3:
    signalChanges(a2, 2);
}

uint64_t _UIUpdateRequestRegistryAddRecord(uint64_t a1, int *a2, unsigned int a3)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t result;
  int v20;
  int v21;
  uint64_t (*v22)(uint64_t, _QWORD);
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;

  v6 = a1 + 88;
  v7 = *(_WORD *)(a1 + 102) == 0;
  if ((*a2 & 1) != 0)
    v8 = a1 + 8;
  else
    v8 = a1 + 48;
  if (!_UIUpdateRequestRecordSortedSetAddRecord(v8, (unint64_t)a2, a3))
    goto LABEL_23;
  v9 = *a2;
  v10 = 64;
  if ((*a2 & 4) != 0)
  {
    v23 = *(_DWORD *)(a1 + 116);
    *(_DWORD *)(a1 + 116) = v23 + 1;
    if (v23)
      v10 = 64;
    else
      v10 = 66;
    if ((v9 & 0x10) == 0)
    {
LABEL_7:
      if ((v9 & 0x20) == 0)
        goto LABEL_8;
      goto LABEL_36;
    }
  }
  else if ((v9 & 0x10) == 0)
  {
    goto LABEL_7;
  }
  v24 = *(_DWORD *)(a1 + 120);
  *(_DWORD *)(a1 + 120) = v24 + 1;
  if (!v24)
    v10 |= 4u;
  if ((v9 & 0x20) == 0)
  {
LABEL_8:
    if ((v9 & 0x40) == 0)
      goto LABEL_9;
    goto LABEL_39;
  }
LABEL_36:
  v25 = *(_DWORD *)(a1 + 132);
  *(_DWORD *)(a1 + 132) = v25 + 1;
  if (!v25)
    v10 |= 8u;
  if ((v9 & 0x40) == 0)
  {
LABEL_9:
    if ((v9 & 0x80) == 0)
      goto LABEL_10;
LABEL_42:
    v27 = *(_DWORD *)(a1 + 128);
    *(_DWORD *)(a1 + 128) = v27 + 1;
    if (!v27)
      v10 |= 0x80u;
    if ((v9 & 1) == 0)
      goto LABEL_12;
    goto LABEL_11;
  }
LABEL_39:
  v26 = *(_DWORD *)(a1 + 124);
  *(_DWORD *)(a1 + 124) = v26 + 1;
  if (!v26)
    v10 |= 0x10u;
  if ((v9 & 0x80) != 0)
    goto LABEL_42;
LABEL_10:
  if ((v9 & 1) != 0)
LABEL_11:
    *a2 = v9 | 2;
LABEL_12:
  if ((*(_BYTE *)(v8 + 24) & 1) == 0)
  {
    v11 = (float)a2[1];
    v12 = (float)a2[3];
    v13 = (float)a2[2];
    if (*(_QWORD *)(v8 + 8) != 1)
    {
      v14 = *(float *)(v8 + 32);
      v15 = *(float *)(v8 + 36);
      v16 = *(float *)(v8 + 28);
      if (v16 <= v11)
        v16 = v11;
      v11 = (float)v16;
      v17 = v15;
      if (v15 <= v13)
        v17 = v13;
      v13 = (float)v17;
      v18 = v14;
      if (v14 - 1 >= v12 - 1)
        v18 = v12;
      v12 = (float)v18;
    }
    *(float *)(v8 + 28) = v11;
    *(float *)(v8 + 32) = v12;
    *(float *)(v8 + 36) = v13;
  }
  *(_DWORD *)(a1 + 4) |= 1u;
  v7 |= v10;
LABEL_23:
  result = _UIUpdateReasonSortedSetAddReason(v6, a3);
  v20 = v7 | 0x20;
  if (!(_DWORD)result)
    v20 = v7;
  v21 = *(_DWORD *)a1 | v20;
  if (v21 != *(_DWORD *)a1)
  {
    *(_DWORD *)a1 = v21;
    v22 = *(uint64_t (**)(uint64_t, _QWORD))(a1 + 136);
    if (v22)
      return v22(a1, *(_QWORD *)(a1 + 144));
  }
  return result;
}

uint64_t _UIUpdateReasonSortedSetAddReason(uint64_t a1, unsigned int a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  char *v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t result;
  unsigned __int16 v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v4 = *(char **)a1;
  if (*(_QWORD *)a1)
  {
    v5 = *(unsigned __int16 *)(a1 + 12);
  }
  else
  {
    v4 = (char *)(a1 + 8);
    v5 = 1;
  }
  v7 = (char *)(a1 + 14);
  v6 = *(unsigned __int16 *)(a1 + 14);
  if (*(_WORD *)(a1 + 14))
  {
    v8 = v4;
    v9 = *(unsigned __int16 *)(a1 + 14);
    do
    {
      v10 = v9 >> 1;
      v11 = &v8[4 * (v9 >> 1)];
      v13 = *(_DWORD *)v11;
      v12 = v11 + 4;
      v9 += ~(v9 >> 1);
      if (v13 < a2)
        v8 = v12;
      else
        v9 = v10;
    }
    while (v9);
    v14 = (v8 - v4) >> 2;
    if (&v4[4 * v6] != v8 && *(_DWORD *)v8 == a2)
    {
      result = 0;
      v7 = &v4[4 * v5 + 2 * v14];
      goto LABEL_23;
    }
  }
  else
  {
    v14 = 0;
  }
  if (v5 < (unsigned __int16)(v6 + 1))
  {
    if (2 * (int)v5 <= (unsigned __int16)(v6 + 1))
      v16 = v6 + 1;
    else
      v16 = 2 * v5;
    v5 = v16;
    v17 = (char *)malloc_type_malloc(6 * v5, 0xEB2617ADuLL);
    v4 = v17;
    v18 = &v17[4 * v5];
    if (*(_QWORD *)a1)
    {
      memcpy(v17, *(const void **)a1, 4 * *(unsigned __int16 *)(a1 + 14));
      memcpy(v18, (const void *)(*(_QWORD *)a1 + 4 * *(unsigned __int16 *)(a1 + 12)), 2 * *(unsigned __int16 *)(a1 + 14));
      free(*(void **)a1);
    }
    else
    {
      *(_DWORD *)v17 = *(_DWORD *)(a1 + 8);
      *(_WORD *)v18 = *(_WORD *)(a1 + 12);
    }
    *(_QWORD *)a1 = v4;
    *(_WORD *)(a1 + 12) = v16;
    v6 = *(unsigned __int16 *)(a1 + 14);
  }
  v19 = &v4[4 * v14];
  v20 = v6 - v14;
  v21 = &v4[4 * v5 + 2 * v14];
  memmove(v19 + 4, v19, 4 * (v6 - v14));
  memmove(v21 + 2, v21, 2 * v20);
  *(_DWORD *)v19 = a2;
  result = 1;
  *(_WORD *)v21 = 1;
LABEL_23:
  ++*(_WORD *)v7;
  return result;
}

uint64_t _UIUpdateRequestRecordSortedSetAddRecord(uint64_t a1, unint64_t a2, unsigned int a3)
{
  char *v6;
  _QWORD *v7;
  unint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;

  v6 = *(char **)a1;
  v7 = (_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 8);
  v9 = (char *)(*(_QWORD *)a1 + 24 * v8);
  if (!v8)
    goto LABEL_8;
  do
  {
    v10 = v8 >> 1;
    v11 = &v6[24 * (v8 >> 1)];
    v13 = *(_QWORD *)v11;
    v12 = v11 + 24;
    v8 += ~(v8 >> 1);
    if (v13 < a2)
      v6 = v12;
    else
      v8 = v10;
  }
  while (v8);
  if (v9 != v6 && (v9 = v6, *(_QWORD *)v6 == a2))
  {
    _UIUpdateReasonSortedSetAddReason((uint64_t)(v6 + 8), a3);
    return 0;
  }
  else
  {
LABEL_8:
    v14 = 1;
    v15 = _UICArrayInsert(v9, 1, 24, v7, (unint64_t *)(a1 + 16), (const void **)a1);
    *(_QWORD *)v15 = a2;
    *((_QWORD *)v15 + 1) = 0;
    *((_DWORD *)v15 + 4) = a3;
    *((_DWORD *)v15 + 5) = 65537;
  }
  return v14;
}

char *_UICArrayInsert(char *__src, uint64_t a2, uint64_t a3, _QWORD *a4, unint64_t *a5, const void **a6)
{
  char *v8;
  char *v9;
  uint64_t v10;
  size_t v11;
  unint64_t v12;
  void *v14;
  const void *v15;

  v8 = __src;
  v9 = (char *)(__src - (_BYTE *)*a6);
  v10 = a3 * a2;
  v11 = (_BYTE *)*a6 - __src + *a4 * a3;
  v12 = *a4 + a2;
  if (*a5 >= v12)
  {
    memmove(&__src[v10], __src, v11);
  }
  else
  {
    if (2 * *a5 > v12)
      v12 = 2 * *a5;
    *a5 = v12;
    v14 = malloc_type_malloc(v12 * a3, 0x8752E377uLL);
    v15 = v14;
    if (*a6)
    {
      memcpy(v14, *a6, (size_t)v9);
      memcpy(&v9[(_QWORD)v15 + v10], v8, v11);
      free((void *)*a6);
    }
    *a6 = v15;
    v8 = &v9[(_QWORD)v15];
  }
  *a4 += a2;
  return v8;
}

id _persistenceQueue()
{
  if (qword_1ECD7F338 != -1)
    dispatch_once(&qword_1ECD7F338, &__block_literal_global_408);
  return (id)qword_1ECD7F330;
}

uint64_t _UIViewControllerSupportsInteractionActivityTracking()
{
  uint64_t result;

  LODWORD(result) = _UIInternalPreferenceUsesDefault(&_UIInternalPreference_EnableViewControllerInteractionActivityTracking, (uint64_t)CFSTR("EnableViewControllerInteractionActivityTracking"), (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
  if (byte_1ECD760C4)
    return 1;
  else
    return result;
}

void sub_18547A75C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _domainWithCategoryAndSuffix(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  id *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = a2;
  v7 = a1;
  if (objc_msgSend(v5, "length"))
  {
    v14 = v7;
    v15 = v6;
    v16 = v5;
    v8 = (void *)MEMORY[0x1E0C99D20];
    v9 = &v14;
    v10 = 3;
  }
  else
  {
    v17 = v7;
    v18 = v6;
    v8 = (void *)MEMORY[0x1E0C99D20];
    v9 = &v17;
    v10 = 2;
  }
  objc_msgSend(v8, "arrayWithObjects:count:", v9, v10, v14, v15, v16, v17, v18, v19);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v11, "componentsJoinedByString:", CFSTR("."));
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

__CFString *_UIStatisticsBundleIdentifier(uint64_t a1)
{
  __CFString *v1;
  BOOL v3;
  __CFString *v4;

  v1 = &stru_1E16EDF20;
  if (a1 != 1)
  {
    if (qword_1ECD820E0 != -1)
      dispatch_once(&qword_1ECD820E0, &__block_literal_global_306);
    v3 = _MergedGlobals_1291 == 0;
    if (a1)
      v3 = a1 != 3;
    v4 = (__CFString *)qword_1ECD820D8;
    if (v3 && byte_1ECD82011 == 0)
      v4 = &stru_1E16EDF20;
    v1 = v4;
  }
  return v1;
}

void sub_18547BED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_18547C2B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_18547CD6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18547D03C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_18547DB90@<X0>(SEL *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t result;

  v3 = objc_msgSend((id)objc_opt_self(), *a1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD82490);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *a2 = result;
  return result;
}

void sub_18547F580(void *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  id v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  void *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  id v40;
  char isUniquelyReferenced_nonNull_native;
  char v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  id v50;
  unint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  int64_t v72;
  uint64_t v73;
  int64_t v74;
  unint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;

  v2 = a1;
  v4 = objc_msgSend(a1, sel_traitCollection);
  v5 = objc_msgSend(v2, sel_searchText);
  if (v5)
  {
    v6 = v5;
    v7 = sub_1865074F8();
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  v10 = objc_msgSend(v2, sel__customStatesForSwiftBridging);
  if (!v10)
  {
    v20 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_51;
  }
  v11 = v10;
  v66 = v9;
  v67 = v7;
  v68 = v4;
  v69 = v2;
  v70 = a2;
  type metadata accessor for UIConfigurationStateCustomKey(0);
  sub_1850F731C();
  v12 = MEMORY[0x1E0DEE9B8];
  v13 = sub_1865073A8();

  v14 = 0;
  v15 = *(_QWORD *)(v13 + 64);
  v71 = v13 + 64;
  v16 = 1 << *(_BYTE *)(v13 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v73 = v13;
  v19 = &v84;
  v72 = (unint64_t)(v16 + 63) >> 6;
  v20 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v21 = (uint64_t *)&unk_1EDD81F68;
  v22 = 0uLL;
  v23 = MEMORY[0x1E0DEC198];
  v24 = &qword_1EDD816C0;
  if ((v17 & v15) == 0)
    goto LABEL_10;
LABEL_8:
  v25 = __clz(__rbit64(v18));
  v26 = (v18 - 1) & v18;
  v27 = v25 | (v14 << 6);
LABEL_9:
  v28 = *(_QWORD *)(v73 + 56);
  *(_QWORD *)&v80 = *(_QWORD *)(*(_QWORD *)(v73 + 48) + 8 * v27);
  v29 = (void *)v80;
  sub_1850F69D4(v28 + 32 * v27, (uint64_t)&v80 + 8);
  v30 = v29;
  while (1)
  {
    sub_1850F26F8((uint64_t)&v80, (uint64_t)&v83, v21);
    v34 = v83;
    if (!v83)
    {
      swift_release();
      v2 = v69;
      a2 = v70;
      v7 = v67;
      v4 = v68;
      v9 = v66;
LABEL_51:
      v64 = v2;
      v65 = objc_msgSend(v64, sel__mutations);

      *(_QWORD *)a2 = v4;
      *(_QWORD *)(a2 + 8) = v7;
      *(_QWORD *)(a2 + 16) = v9;
      *(_QWORD *)(a2 + 24) = v20;
      *(_QWORD *)(a2 + 32) = v2;
      *(_QWORD *)(a2 + 40) = v65;
      *(_BYTE *)(a2 + 48) = 0;
      return;
    }
    v75 = v26;
    sub_1850F6908(v19, &v79);
    if (!swift_dynamicCast())
    {
      v82 = 0;
      v80 = 0u;
      v81 = 0u;
      v50 = v34;
      sub_18519F088((uint64_t)&v80, v24);
      swift_bridgeObjectRetain();
      v51 = sub_1850F6BB4(v50);
      v53 = v52;
      swift_bridgeObjectRelease();
      if ((v53 & 1) != 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_185685AEC();

        v54 = v20[7] + 40 * v51;
        v55 = *(_QWORD *)(v54 + 32);
        v56 = *(_OWORD *)(v54 + 16);
        v76 = *(_OWORD *)v54;
        v77 = v56;
        v78 = v55;
        sub_1856823DC(v51, (uint64_t)v20);
        swift_bridgeObjectRelease();
      }
      else
      {
        v78 = 0;
        v76 = 0u;
        v77 = 0u;
      }
      v18 = v75;

      sub_18519F088((uint64_t)&v76, v24);
      v22 = 0uLL;
      if (v75)
        goto LABEL_8;
      goto LABEL_10;
    }
    v74 = v14;
    v35 = v24;
    v36 = v23;
    v37 = v19;
    v38 = v21;
    v39 = v12;
    v76 = v80;
    v77 = v81;
    v78 = v82;
    v40 = v34;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v43 = sub_1850F6BB4(v40);
    v44 = v20[2];
    v45 = (v42 & 1) == 0;
    v46 = v44 + v45;
    if (__OFADD__(v44, v45))
      break;
    v47 = v42;
    if (v20[3] >= v46)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_185685AEC();
    }
    else
    {
      sub_1850F6D2C(v46, isUniquelyReferenced_nonNull_native);
      v48 = sub_1850F6BB4(v40);
      if ((v47 & 1) != (v49 & 1))
        goto LABEL_56;
      v43 = v48;
    }
    v12 = v39;
    v21 = v38;
    if ((v47 & 1) != 0)
    {
      sub_18564AE50((uint64_t)&v76, v20[7] + 40 * v43);
      v19 = v37;
    }
    else
    {
      v20[(v43 >> 6) + 8] |= 1 << v43;
      *(_QWORD *)(v20[6] + 8 * v43) = v40;
      v57 = v20[7] + 40 * v43;
      v58 = v76;
      v59 = v77;
      *(_QWORD *)(v57 + 32) = v78;
      *(_OWORD *)v57 = v58;
      *(_OWORD *)(v57 + 16) = v59;
      v60 = v20[2];
      v61 = __OFADD__(v60, 1);
      v62 = v60 + 1;
      if (v61)
        goto LABEL_54;
      v19 = v37;
      v20[2] = v62;
      v63 = v40;
    }

    swift_bridgeObjectRelease();
    v22 = 0uLL;
    v23 = v36;
    v24 = v35;
    v14 = v74;
    v18 = v75;
    if (v75)
      goto LABEL_8;
LABEL_10:
    v31 = v14 + 1;
    if (__OFADD__(v14, 1))
      goto LABEL_53;
    if (v31 < v72)
    {
      v32 = *(_QWORD *)(v71 + 8 * v31);
      if (v32)
        goto LABEL_13;
      v33 = v14 + 2;
      ++v14;
      if (v31 + 1 < v72)
      {
        v32 = *(_QWORD *)(v71 + 8 * v33);
        if (v32)
          goto LABEL_16;
        v14 = v31 + 1;
        if (v31 + 2 < v72)
        {
          v32 = *(_QWORD *)(v71 + 8 * (v31 + 2));
          if (v32)
          {
            v31 += 2;
            goto LABEL_13;
          }
          v33 = v31 + 3;
          v14 = v31 + 2;
          if (v31 + 3 < v72)
          {
            v32 = *(_QWORD *)(v71 + 8 * v33);
            if (!v32)
            {
              while (1)
              {
                v31 = v33 + 1;
                if (__OFADD__(v33, 1))
                  goto LABEL_55;
                if (v31 >= v72)
                {
                  v14 = v72 - 1;
                  goto LABEL_27;
                }
                v32 = *(_QWORD *)(v71 + 8 * v31);
                ++v33;
                if (v32)
                  goto LABEL_13;
              }
            }
LABEL_16:
            v31 = v33;
LABEL_13:
            v26 = (v32 - 1) & v32;
            v27 = __clz(__rbit64(v32)) + (v31 << 6);
            v14 = v31;
            goto LABEL_9;
          }
        }
      }
    }
LABEL_27:
    v26 = 0;
    v82 = 0;
    v80 = v22;
    v81 = v22;
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  sub_186508074();
  __break(1u);
}

void sub_18547FB14()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  void *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  void *v24;
  uint64_t v25;
  int64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  void *v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;

  v1 = *v0;
  v3 = v0[2];
  v2 = v0[3];
  v4 = (void *)v0[4];
  if (v4)
  {
    v5 = (id)v0[5];
    v6 = *((_BYTE *)v0 + 48);
    v7 = v4;
    v8 = objc_msgSend(v7, sel__mutations);
    if ((v6 & 1) == 0 && v5 == v8)
      return;

  }
  v9 = objc_msgSend(objc_allocWithZone((Class)UIContentUnavailableConfigurationState), sel_initWithTraitCollection_, v1);
  if (v3)
    v10 = (void *)sub_1865074D4();
  else
    v10 = 0;
  objc_msgSend(v9, sel_setSearchText_, v10);

  v25 = v2 + 64;
  v11 = 1 << *(_BYTE *)(v2 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v2 + 64);
  v26 = (unint64_t)(v11 + 63) >> 6;
  swift_bridgeObjectRetain();
  v14 = 0;
  if (!v13)
    goto LABEL_15;
LABEL_13:
  v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  v17 = v16 | (v14 << 6);
  while (2)
  {
    v18 = *(_QWORD *)(v2 + 56);
    *(_QWORD *)&v27 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v17);
    v19 = (void *)v27;
    sub_1850F28CC(v18 + 40 * v17, (uint64_t)&v27 + 8);
    v20 = v19;
    while (1)
    {
      sub_1850F26F8((uint64_t)&v27, (uint64_t)&v30, &qword_1EDD816B8);
      v24 = v30;
      if (!v30)
      {
        swift_release();
        return;
      }
      v27 = v31;
      v28 = v32;
      *(_QWORD *)&v29 = v33;
      v15 = (void *)sub_186507BA0();
      sub_1850F7064((uint64_t)&v27);
      objc_msgSend(v9, sel__setSwiftBridgingCustomState_forKey_, v15, v24);

      if (v13)
        goto LABEL_13;
LABEL_15:
      v21 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
        goto LABEL_37;
      }
      if (v21 < v26)
      {
        v22 = *(_QWORD *)(v25 + 8 * v21);
        if (v22)
          goto LABEL_18;
        v23 = v14 + 2;
        ++v14;
        if (v21 + 1 < v26)
        {
          v22 = *(_QWORD *)(v25 + 8 * v23);
          if (v22)
            goto LABEL_21;
          v14 = v21 + 1;
          if (v21 + 2 < v26)
          {
            v22 = *(_QWORD *)(v25 + 8 * (v21 + 2));
            if (v22)
            {
              v21 += 2;
              goto LABEL_18;
            }
            v23 = v21 + 3;
            v14 = v21 + 2;
            if (v21 + 3 < v26)
              break;
          }
        }
      }
LABEL_32:
      v13 = 0;
      v28 = 0u;
      v29 = 0u;
      v27 = 0u;
    }
    v22 = *(_QWORD *)(v25 + 8 * v23);
    if (v22)
    {
LABEL_21:
      v21 = v23;
LABEL_18:
      v13 = (v22 - 1) & v22;
      v17 = __clz(__rbit64(v22)) + (v21 << 6);
      v14 = v21;
      continue;
    }
    break;
  }
  while (1)
  {
    v21 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v21 >= v26)
    {
      v14 = v26 - 1;
      goto LABEL_32;
    }
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v23;
    if (v22)
      goto LABEL_18;
  }
LABEL_37:
  __break(1u);
}

void sub_18547FF50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185480158(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id UIButton.Configuration.image.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_image);
}

void _UIPhysicalButtonEnumerateAllButtonsWithBlock(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  char v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v11 = 0;
  _UIPhysicalButtonAllAvailableButtons();
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v2 = (id)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v8;
LABEL_3:
    v6 = 0;
    while (1)
    {
      if (*(_QWORD *)v8 != v5)
        objc_enumerationMutation(v2);
      (*(void (**)(uint64_t, uint64_t, char *))(a1 + 16))(a1, objc_msgSend(*(id *)(*((_QWORD *)&v7 + 1) + 8 * v6), "unsignedIntegerValue", (_QWORD)v7), &v11);
      if (v11)
        break;
      if (v4 == ++v6)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v12, 16);
        if (v4)
          goto LABEL_3;
        break;
      }
    }
  }

}

const __CFString *_NSStringFromUIPhysicalButton(unint64_t a1)
{
  if (a1 > 5)
    return &stru_1E16EDF20;
  else
    return off_1E16B2D40[a1];
}

uint64_t _UIPhysicalButtonConfigurationNSSetIsMostlyValid(void *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  int IsValid;
  int IsValidForButton;
  void *v13;
  BOOL IsValidForBehavior;
  BOOL v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  _QWORD *v22;
  id obj;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  obj = a1;
  v3 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
  if (v3)
  {
    v4 = v3;
    v22 = a2;
    v5 = 0;
    v6 = *(_QWORD *)v25;
    while (2)
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v25 != v6)
          objc_enumerationMutation(obj);
        v8 = *(void **)(*((_QWORD *)&v24 + 1) + 8 * i);
        v9 = objc_msgSend(v8, "_button");
        v10 = objc_msgSend(v8, "_behavior");
        IsValid = _UIPhysicalButtonIsValid(v9);
        IsValidForButton = _UIPhysicalButtonBehaviorIsValidForButton(v10, v9);
        objc_msgSend(v8, "_behaviorOptions");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        IsValidForBehavior = _UIPhysicalButtonBehaviorOptionsIsValidForBehavior(v13, v10);

        if (IsValid)
          v15 = IsValidForButton == 0;
        else
          v15 = 1;
        if (v15 || !IsValidForBehavior)
        {
          if (v22)
          {
            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Invalid configuration: %@"), v8);
            v18 = 0;
            *v22 = (id)objc_claimAutoreleasedReturnValue();
            goto LABEL_24;
          }
          goto LABEL_23;
        }
        v16 = objc_msgSend(v8, "_button");
        if (v16 - 1 >= 5)
          v17 = 0;
        else
          v17 = 1 << v16;
        if ((v17 & ~v5) == 0)
        {
          if (v22)
          {
            v19 = (void *)MEMORY[0x1E0CB3940];
            _NSStringFromUIPhysicalButton(v16);
            v20 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v19, "stringWithFormat:", CFSTR("Configuration set contains more than one %@ button"), v20);
            *v22 = (id)objc_claimAutoreleasedReturnValue();

          }
LABEL_23:
          v18 = 0;
          goto LABEL_24;
        }
        v5 |= v17;
      }
      v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
      v18 = 1;
      if (v4)
        continue;
      break;
    }
  }
  else
  {
    v18 = 1;
  }
LABEL_24:

  return v18;
}

void sub_185483704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _UIPhysicalButtonBehaviorIsValidForButton(unint64_t a1, uint64_t a2)
{
  int IsValid;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;

  if (a1 > 2)
    return 0;
  IsValid = _UIPhysicalButtonIsValid(a2);
  if (a2 == 4 || !IsValid)
    return 0;
  if (qword_1ECD7CA68 != -1)
    dispatch_once(&qword_1ECD7CA68, &__block_literal_global_159);
  v5 = (void *)MEMORY[0x1E0CB37E8];
  v6 = (id)qword_1ECD7CA60;
  objc_msgSend(v5, "numberWithUnsignedInteger:", a1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKey:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v8, "containsObject:", v9);

  return v10;
}

uint64_t _UIPhysicalButtonIsValid(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;

  if ((unint64_t)(a1 - 1) > 4)
    return 0;
  _UIPhysicalButtonAllAvailableButtons();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v2, "containsObject:", v3);

  return v4;
}

id _UIPhysicalButtonAllAvailableButtons()
{
  if (qword_1ECD7CA58 != -1)
    dispatch_once(&qword_1ECD7CA58, &__block_literal_global_15);
  return (id)_MergedGlobals_932;
}

BOOL _UIPhysicalButtonBehaviorOptionsIsValidForBehavior(void *a1, uint64_t a2)
{
  id v3;

  if (!a1)
    return 1;
  if (objc_msgSend(a1, "_behavior") != a2)
    return 0;
  v3 = _UIPhysicalButtonBehaviorOptionsClassForBehavior(a2);
  return objc_opt_class() == (_QWORD)v3;
}

id _UIPhysicalButtonBehaviorOptionsClassForBehavior(uint64_t a1)
{
  void *v1;

  if (a1)
    v1 = 0;
  else
    v1 = (void *)objc_opt_class();
  return v1;
}

void *_UIPhysicalButtonRequiredButtonsForButton(uint64_t a1)
{
  void *v1;

  v1 = (void *)MEMORY[0x1E0C9AA60];
  if (a1 == 2)
    v1 = &unk_1E1A92A98;
  if (a1 == 1)
    return &unk_1E1A92A80;
  else
    return v1;
}

void sub_185484714(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;

  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185486704(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_185486C54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185487630(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x5B0], 8);
  _Unwind_Resume(a1);
}

void _UIApplyCornerRadiusToView(void *a1, double a2)
{
  id v3;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v8;
  CGFloat v9;
  double v10;
  void *v11;
  id v12;
  CGRect v13;
  CGRect v14;

  v3 = a1;
  v12 = v3;
  if (a2 > 0.0)
  {
    objc_msgSend(v3, "bounds");
    x = v13.origin.x;
    y = v13.origin.y;
    width = v13.size.width;
    height = v13.size.height;
    v8 = CGRectGetWidth(v13) * 0.5;
    v14.origin.x = x;
    v14.origin.y = y;
    v14.size.width = width;
    v14.size.height = height;
    v9 = CGRectGetHeight(v14);
    v3 = v12;
    v10 = v9 * 0.5;
    if (v8 < v10)
      v10 = v8;
    if (v10 < a2)
      a2 = v10;
  }
  objc_msgSend(v3, "layer");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setMasksToBounds:", 1);
  objc_msgSend(v11, "setCornerCurve:", *MEMORY[0x1E0CD2A68]);
  objc_msgSend(v11, "setCornerRadius:", a2);

}

void sub_18548A5B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
  _Block_object_dispose(&a47, 8);
  _Unwind_Resume(a1);
}

id sub_18548BF34(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v3 = *(void **)(v1 + qword_1EDD8B090[0]);
  v4 = (void *)sub_1865074D4();
  v5 = (void *)sub_186506C1C();
  v6 = objc_msgSend(v3, sel__viewForSupplementaryElementOfKind_atIndexPath_collectionView_, v4, v5, a1);

  return v6;
}

id sub_18548C714(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(void);
  id v9;
  void *v10;
  uint64_t v12;

  v4 = sub_186506C4C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(uint64_t (**)(void))(a1 + 32);
  sub_1865074F8();
  sub_186506C28();
  swift_retain();
  v9 = a2;
  v10 = (void *)v8();

  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v10;
}

void ___uiMultitouchAnalyticsLog_block_invoke()
{
  os_log_t v0;
  id v1;
  void *v2;

  if (os_variant_has_internal_diagnostics())
  {
    v0 = os_log_create("com.apple.UIKit", "MultitouchAnalytics");
  }
  else
  {
    v0 = (os_log_t)MEMORY[0x1E0C81030];
    v1 = MEMORY[0x1E0C81030];
  }
  v2 = (void *)qword_1ECD825A8;
  qword_1ECD825A8 = (uint64_t)v0;

}

id _UIKeyboardLayoutGuideLogger()
{
  if (qword_1ECD7A798 != -1)
    dispatch_once(&qword_1ECD7A798, &__block_literal_global_263_1);
  return (id)_MergedGlobals_3_24;
}

void ___isContentBackSwipeEnabled_block_invoke()
{
  char v0;
  int v1;
  BOOL v2;
  int v3;

  if ((_os_feature_enabled_impl() & 1) != 0)
  {
    v0 = 1;
  }
  else
  {
    if (_UIInternalPreferencesRevisionOnce != -1)
      dispatch_once(&_UIInternalPreferencesRevisionOnce, &__block_literal_global_4_20);
    v1 = _UIInternalPreferencesRevisionVar;
    if (_UIInternalPreferencesRevisionVar < 1
      || (v3 = _UIInternalPreference_UINavigationContentBackSwipe,
          _UIInternalPreferencesRevisionVar == _UIInternalPreference_UINavigationContentBackSwipe))
    {
      v2 = 0;
    }
    else
    {
      do
      {
        v2 = v1 < v3;
        if (v1 < v3)
          break;
        _UIInternalPreferenceSync(v1, &_UIInternalPreference_UINavigationContentBackSwipe, (uint64_t)CFSTR("UINavigationContentBackSwipe"), (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
        v3 = _UIInternalPreference_UINavigationContentBackSwipe;
      }
      while (v1 != _UIInternalPreference_UINavigationContentBackSwipe);
    }
    if (byte_1ECD76934)
      v0 = v2;
    else
      v0 = 0;
  }
  _MergedGlobals_25_0 = v0;
}

void _sSo6UIViewC5UIKitE14traitOverridesAC07UITraitD0Vvs_0(uint64_t *a1)
{
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = objc_msgSend(v1, sel_traitOverrides);
  v4 = (void *)swift_dynamicCastObjCProtocolUnconditional();
  v5 = *(id *)(v2 + 16);
  swift_release();
  objc_msgSend(v4, sel__replaceWithOverrides_, v5);
  swift_unknownObjectRelease();

}

void sub_185492770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  _Block_object_dispose(&a32, 8);
  _Unwind_Resume(a1);
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return (NSData *)_UIImageDataRepresentation(image, CFSTR("public.png"), &__block_literal_global_29);
}

CGColorSpaceRef __sRGBColorSpace_block_invoke()
{
  CGColorSpaceRef result;

  if (dyld_program_sdk_at_least())
    result = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E0C9DA10]);
  else
    result = CGColorSpaceCreateDeviceRGB();
  qword_1ECD7C4F8 = (uint64_t)result;
  return result;
}

void sub_185493B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFNumber *_UIDefineNewTrait(uint64_t a1)
{
  __int128 v2;
  const __CFNumber *v3;
  _OWORD v5[3];
  uint64_t v6;

  os_unfair_lock_lock((os_unfair_lock_t)&_UITraitLock);
  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  v3 = _UIDefineNewTraitLocked((uint64_t)v5);
  os_unfair_lock_unlock((os_unfair_lock_t)&_UITraitLock);
  return v3;
}

const __CFNumber *_UIDefineNewTraitLocked(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  const __CFNumber *v4;
  const __CFNumber *v5;
  int v6;
  void *v7;
  uint64_t v8;
  const __CFNumber *v9;
  unint64_t v10;
  size_t v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int v20;
  char v21;
  char v22;
  _QWORD *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  __n128 v28;
  unint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  unsigned int v34;
  void *v35;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  __CFString *v45;
  void *v46;
  void *v47;
  void *v48;
  unint64_t v49;
  NSObject *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint8_t buf[4];
  uint64_t v71;
  __int16 v72;
  uint64_t v73;
  __int16 v74;
  void *v75;
  uint64_t v76;

  v76 = *MEMORY[0x1E0C80C00];
  v2 = *(_QWORD *)(a1 + 8);
  if (!objc_msgSend(*(id *)(a1 + 16), "length"))
  {
    v37 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    objc_msgSend(v37, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSNumber *_UIDefineNewTraitLocked(_UITraitDefinitionMetadata)"), CFSTR("UITrait_NonARC.m"), 146, CFSTR("Trait name cannot be nil or empty"));
  }
  if (!objc_msgSend(*(id *)(a1 + 24), "length"))
    *(_QWORD *)(a1 + 24) = objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@:%@"), objc_msgSend((id)objc_msgSend(MEMORY[0x1E0CB3A28], "UUID"), "UUIDString"), *(_QWORD *)(a1 + 16));
  v3 = _MergedGlobals_1186;
  if (v2 && (v4 = *(const __CFNumber **)a1) != 0)
  {
    v69 = 0;
    v67 = 0u;
    v68 = 0u;
    v66 = 0u;
    _UIGetTraitMetadataLocked(v4, 0, (uint64_t)&v66);
    if (*((_QWORD *)&v66 + 1))
    {
      v39 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      objc_msgSend(v39, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSNumber *_UIDefineNewTraitLocked(_UITraitDefinitionMetadata)"), CFSTR("UITrait_NonARC.m"), 159, CFSTR("Attempting to define a trait for a placeholder token that corresponds to a trait that was already defined: %@"), *(_QWORD *)a1);
    }
    v5 = 0;
    v3 = v66 - 27;
    v6 = 1;
  }
  else
  {
    v7 = (void *)_traitTokensByIdentifier;
    if (!_traitTokensByIdentifier)
    {
      v38 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      objc_msgSend(v38, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSNumber *_UIDefineNewTraitLocked(_UITraitDefinitionMetadata)"), CFSTR("UITrait_NonARC.m"), 163, CFSTR("_traitTokensByIdentifier was never initialized"));
      v7 = (void *)_traitTokensByIdentifier;
    }
    v5 = (const __CFNumber *)objc_msgSend(v7, "objectForKey:", *(_QWORD *)(a1 + 24));
    if (v5)
    {
      v69 = 0;
      v67 = 0u;
      v68 = 0u;
      v66 = 0u;
      _UIGetTraitMetadataLocked(v5, 0, (uint64_t)&v66);
      v6 = *((_QWORD *)&v66 + 1) == 0;
      if (!*((_QWORD *)&v66 + 1))
        v3 = v66 - 27;
    }
    else
    {
      v6 = 0;
    }
  }
  v8 = qword_1ECD7F7C0;
  if (qword_1ECD7F7C0)
  {
    if (v3 < qword_1ECD7F7C0)
      goto LABEL_29;
    v9 = v5;
    v10 = vcvtpd_u64_f64((double)(unint64_t)qword_1ECD7F7C0 * 1.6);
    if (qword_1ECD7F7C0 >= v10)
    {
      v11 = 0;
    }
    else
    {
      v11 = 56 * v10;
      if (is_mul_ok(v10, 0x38uLL))
      {
LABEL_26:
        qword_1ECD7F7A8 = (uint64_t)malloc_type_realloc((void *)qword_1ECD7F7A8, v11, 0xE1F269C0uLL);
        if (!qword_1ECD7F7A8)
        {
          v41 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
          objc_msgSend(v41, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSNumber *_UIDefineNewTraitLocked(_UITraitDefinitionMetadata)"), CFSTR("UITrait_NonARC.m"), 190, CFSTR("Failed to reallocate dynamic trait metadata with capacity: %lu"), v10);
        }
        goto LABEL_28;
      }
    }
    v12 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    objc_msgSend(v12, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSNumber *_UIDefineNewTraitLocked(_UITraitDefinitionMetadata)"), CFSTR("UITrait_NonARC.m"), 187, CFSTR("Cannot reallocate dynamic trait metadata with existing capacity: %lu, new capacity: %lu"), v8, v10);
    goto LABEL_26;
  }
  v9 = v5;
  qword_1ECD7F7A8 = (uint64_t)malloc_type_malloc(0x380uLL, 0x108004018ED67BBuLL);
  if (qword_1ECD7F7A8)
  {
    v10 = 16;
  }
  else
  {
    v40 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v10 = 16;
    objc_msgSend(v40, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSNumber *_UIDefineNewTraitLocked(_UITraitDefinitionMetadata)"), CFSTR("UITrait_NonARC.m"), 180, CFSTR("Failed to allocate dynamic trait metadata with capacity: %lu"), 16);
  }
LABEL_28:
  qword_1ECD7F7C0 = v10;
  v5 = v9;
LABEL_29:
  if (((v5 != 0) & ~v6) == 0)
  {
    v13 = v3;
    v65 = v3 + 27;
    v14 = *(_QWORD *)(a1 + 8);
    if (v14 == 1)
    {
      v15 = *(id *)(a1 + 40);
      v14 = *(_QWORD *)(a1 + 8);
    }
    v64 = objc_msgSend(*(id *)(a1 + 16), "copy");
    v16 = objc_msgSend(*(id *)(a1 + 24), "copy");
    v17 = objc_msgSend(*(id *)(a1 + 32), "copy");
    v18 = *(_QWORD *)(a1 + 40);
    v19 = (4 * *(_BYTE *)(a1 + 50)) | (2 * *(_BYTE *)(a1 + 48));
    v20 = *(unsigned __int8 *)(a1 + 49);
    v21 = v19 | (8 * v20);
    v22 = v6;
    if (v6)
    {
      v63 = v2;
      v23 = (_QWORD *)(qword_1ECD7F7A8 + 56 * v13);
      v24 = (void *)v23[2];
      v25 = (void *)v23[3];
      v26 = (void *)v23[4];
      if (v24)

      if (v25)
      v2 = v63;
      if (v26)

    }
    v27 = qword_1ECD7F7A8 + 56 * v13;
    *(_QWORD *)v27 = v65;
    *(_QWORD *)(v27 + 8) = v14;
    *(_QWORD *)(v27 + 16) = v64;
    *(_QWORD *)(v27 + 24) = v16;
    *(_QWORD *)(v27 + 32) = v17;
    *(_QWORD *)(v27 + 40) = v18;
    *(_BYTE *)(v27 + 48) = v21;
    *(_DWORD *)(v27 + 49) = 0;
    *(_DWORD *)(v27 + 52) = 0;
    v5 = (const __CFNumber *)objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v65);
    if ((v22 & 1) == 0)
    {
      objc_msgSend((id)_traitTokensByIdentifier, "setObject:forKey:", v5, v16);
      _MergedGlobals_1186 = v13 + 1;
    }
    if (v2 && v20 && dyld_program_sdk_at_least())
      _UITraitTokenSetInsert(_allTraitTokensAffectingColorAppearance, v65, v28);
    return v5;
  }
  if (!v2)
    return v5;
  v69 = 0;
  v67 = 0u;
  v68 = 0u;
  v66 = 0u;
  _UIGetTraitMetadataLocked(v5, 0, (uint64_t)&v66);
  v29 = *((_QWORD *)&v66 + 1);
  if (*((_QWORD *)&v66 + 1) == *(_QWORD *)(a1 + 8))
  {
    v30 = (void *)v67;
  }
  else
  {
    v42 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v43 = objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSNumber *_UIDefineNewTraitLocked(_UITraitDefinitionMetadata)");
    v44 = *(_QWORD *)(a1 + 16);
    v45 = _UITraitDataTypeToString(*(_QWORD *)(a1 + 8));
    v30 = (void *)v67;
    objc_msgSend(v42, "handleFailureInFunction:file:lineNumber:description:", v43, CFSTR("UITrait_NonARC.m"), 240, CFSTR("Attempting to use a trait named '%@' with data type %@ that has the same identifier '%@' as a previously used trait named '%@' with a different data type %@. Trait definitions with the same identifier must have the same data type."), v44, v45, *(_QWORD *)(a1 + 24), (_QWORD)v67, _UITraitDataTypeToString(v29));
  }
  if ((objc_msgSend(v30, "isEqualToString:", *(_QWORD *)(a1 + 16)) & 1) == 0)
  {
    v46 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    objc_msgSend(v46, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSNumber *_UIDefineNewTraitLocked(_UITraitDefinitionMetadata)"), CFSTR("UITrait_NonARC.m"), 241, CFSTR("Attempting to use a trait named '%@' that has the same identifier '%@' as a previously used trait with a different name '%@'. Trait definitions with the same identifier must have the same name."), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v30);
  }
  v31 = *(void **)(a1 + 40);
  v32 = (void *)*((_QWORD *)&v68 + 1);
  v33 = v68;
  v34 = v69;
  if ((v69 & 1) != 0)
  {
    switch(v29)
    {
      case 1uLL:
        v32 = (void *)**((_QWORD **)&v68 + 1);
        if (v31 != **((void ***)&v68 + 1))
          goto LABEL_58;
        break;
      case 2uLL:
      case 3uLL:
      case 4uLL:
        v32 = (void *)**((_QWORD **)&v68 + 1);
        goto LABEL_56;
      default:
        v35 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler", *((_QWORD *)&v68 + 1));
        objc_msgSend(v35, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "_UITraitWordValue _UITraitDefaultValue(const _UITraitMetadata)"), CFSTR("UITrait_Internal.h"), 94, CFSTR("Data type is unknown for trait %@"), v30);
        v32 = 0;
        goto LABEL_56;
    }
    goto LABEL_64;
  }
LABEL_56:
  if (v32 != v31)
  {
    if (v29 != 1)
      goto LABEL_71;
LABEL_58:
    if (!v33)
    {
      if (v31 && v32 && (objc_msgSend(v31, "isEqual:") & 1) != 0)
        goto LABEL_64;
      goto LABEL_71;
    }
    if (((*(uint64_t (**)(uint64_t, void *))(v33 + 16))(v33, v31) & 1) == 0)
    {
LABEL_71:
      v47 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      objc_msgSend(v47, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSNumber *_UIDefineNewTraitLocked(_UITraitDefinitionMetadata)"), CFSTR("UITrait_NonARC.m"), 242, CFSTR("Attempt to use a trait named '%@' that has the same identifier '%@' as a previously used trait named '%@' with a different defaultValue. Trait definitions with the same identifier must have the same defaultValue."), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v30);
    }
  }
LABEL_64:
  if (((v34 >> 3) & 1) != *(_BYTE *)(a1 + 49))
  {
    v48 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    objc_msgSend(v48, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSNumber *_UIDefineNewTraitLocked(_UITraitDefinitionMetadata)"), CFSTR("UITrait_NonARC.m"), 243, CFSTR("Attempt to use a trait named '%@' that has the same identifier '%@' as a previously used trait named '%@' with a different affectsColorAppearance value. Trait definitions with the same identifier must have the same affectsColorAppearance value."), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v30);
  }
  if (((v34 >> 1) & 1) != *(_BYTE *)(a1 + 48))
  {
    if (os_variant_has_internal_diagnostics())
    {
      v57 = __UIFaultDebugAssertLog();
      if (os_log_type_enabled(v57, OS_LOG_TYPE_FAULT))
      {
        v58 = *(_QWORD *)(a1 + 16);
        v59 = *(_QWORD *)(a1 + 24);
        *(_DWORD *)buf = 138412802;
        v71 = v58;
        v72 = 2112;
        v73 = v59;
        v74 = 2112;
        v75 = v30;
        _os_log_fault_impl(&dword_185066000, v57, OS_LOG_TYPE_FAULT, "Attempt to use a trait with name '%@' that has the same identifier '%@' as a previously used trait named '%@' with a different defaultValueRepresentsUnspecified value. Trait definitions with the same identifier must have the same defaultValueRepresentsUnspecified value.", buf, 0x20u);
      }
    }
    else
    {
      v49 = qword_1ECD7F7C8;
      if (!qword_1ECD7F7C8)
      {
        v49 = __UILogCategoryGetNode("Assert", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
        atomic_store(v49, (unint64_t *)&qword_1ECD7F7C8);
      }
      v50 = *(NSObject **)(v49 + 8);
      if (os_log_type_enabled(v50, OS_LOG_TYPE_ERROR))
      {
        v51 = *(_QWORD *)(a1 + 16);
        v52 = *(_QWORD *)(a1 + 24);
        *(_DWORD *)buf = 138412802;
        v71 = v51;
        v72 = 2112;
        v73 = v52;
        v74 = 2112;
        v75 = v30;
        _os_log_impl(&dword_185066000, v50, OS_LOG_TYPE_ERROR, "Attempt to use a trait with name '%@' that has the same identifier '%@' as a previously used trait named '%@' with a different defaultValueRepresentsUnspecified value. Trait definitions with the same identifier must have the same defaultValueRepresentsUnspecified value.", buf, 0x20u);
      }
    }
  }
  if (((v34 >> 2) & 1) != *(_BYTE *)(a1 + 50))
  {
    if (os_variant_has_internal_diagnostics())
    {
      v60 = __UIFaultDebugAssertLog();
      if (os_log_type_enabled(v60, OS_LOG_TYPE_FAULT))
      {
        v61 = *(_QWORD *)(a1 + 16);
        v62 = *(_QWORD *)(a1 + 24);
        *(_DWORD *)buf = 138412802;
        v71 = v61;
        v72 = 2112;
        v73 = v62;
        v74 = 2112;
        v75 = v30;
        _os_log_fault_impl(&dword_185066000, v60, OS_LOG_TYPE_FAULT, "Attempt to use a trait with name '%@' that has the same identifier '%@' as a previously used trait named '%@' with a different _isPrivate value. Trait definitions with the same identifier must have the same _isPrivate value.", buf, 0x20u);
      }
    }
    else
    {
      v53 = qword_1ECD7F7D0;
      if (!qword_1ECD7F7D0)
      {
        v53 = __UILogCategoryGetNode("Assert", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
        atomic_store(v53, (unint64_t *)&qword_1ECD7F7D0);
      }
      v54 = *(NSObject **)(v53 + 8);
      if (os_log_type_enabled(v54, OS_LOG_TYPE_ERROR))
      {
        v55 = *(_QWORD *)(a1 + 16);
        v56 = *(_QWORD *)(a1 + 24);
        *(_DWORD *)buf = 138412802;
        v71 = v55;
        v72 = 2112;
        v73 = v56;
        v74 = 2112;
        v75 = v30;
        _os_log_impl(&dword_185066000, v54, OS_LOG_TYPE_ERROR, "Attempt to use a trait with name '%@' that has the same identifier '%@' as a previously used trait named '%@' with a different _isPrivate value. Trait definitions with the same identifier must have the same _isPrivate value.", buf, 0x20u);
      }
    }
  }
  return v5;
}

void sub_18549A968(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id UICollectionViewCell.configurationUpdateHandler.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  void *v7;
  _QWORD v9[6];

  v3 = v2;
  if (!a1)
    return objc_msgSend(v2, sel_setConfigurationUpdateHandler_, 0);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v9[4] = sub_1851C78D4;
  v9[5] = v6;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1851C78D0;
  v9[3] = &block_descriptor_77;
  v7 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_setConfigurationUpdateHandler_, v7);
  _Block_release(v7);
  return (id)sub_18518D718(a1);
}

void ___navigationBarPrefersLargeTitles_block_invoke()
{
  void *v0;
  void *v1;
  id v2;

  _UIKitUserDefaults();
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", CFSTR("ForceLargeTitlesOn"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = v0;
  if (v0 && objc_msgSend(v0, "BOOLValue"))
    _MergedGlobals_131 = 257;

}

void ____reusePoolRegistrationQueue_block_invoke()
{
  dispatch_queue_t v0;
  void *v1;

  v0 = dispatch_queue_create("com.apple.UIKit.UIGraphicsRenderer.reuseRegistration", 0);
  v1 = (void *)qword_1ECD7A670;
  qword_1ECD7A670 = (uint64_t)v0;

}

void ____registeredReusePools_block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3868], "weakObjectsPointerArray");
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)qword_1ECD7A680;
  qword_1ECD7A680 = v0;

}

void UIResourceBeginDecodingNIBWithCoderFromBundleAndIdentifierForStringsFile(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  __CFDictionary *v7;
  __CFDictionary *v8;
  __CFDictionary *v9;
  void *v10;
  id key;

  key = a1;
  v5 = a3;
  v6 = a2;
  v7 = UICoderToBundleMap();
  CFDictionarySetValue(v7, key, v6);

  v8 = UICoderToNibIdentifierForStringsFileMap();
  v9 = v8;
  if (v5)
  {
    CFDictionarySetValue(v8, key, v5);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0C99E38], "null");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    CFDictionarySetValue(v9, key, v10);

  }
}

void UIResourceFinishDecodingNIBWithCoder(void *a1)
{
  id v1;
  __CFDictionary *v2;
  __CFDictionary *v3;
  const __CFDictionary *v4;
  id v5;

  v1 = a1;
  v2 = UICoderToBundleMap();
  CFDictionaryRemoveValue(v2, v1);
  v3 = UICoderToNibIdentifierForStringsFileMap();
  CFDictionaryRemoveValue(v3, v1);

  v4 = UICoderToBundleMap();
  if (!CFDictionaryGetCount(v4))
  {
    UINIBResrouceUniqueingTable();
    v5 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "removeAllObjects");

  }
}

CFMutableDictionaryRef UICoderToBundleMap()
{
  CFMutableDictionaryRef result;
  __int128 v1;
  CFDictionaryKeyCallBacks v2;

  result = (CFMutableDictionaryRef)UICoderToBundleMap_coderToBundleMap;
  if (!UICoderToBundleMap_coderToBundleMap)
  {
    v1 = *(_OWORD *)(MEMORY[0x1E0C9B390] + 16);
    *(_OWORD *)&v2.version = *MEMORY[0x1E0C9B390];
    *(_OWORD *)&v2.release = v1;
    v2.equal = 0;
    v2.hash = 0;
    result = CFDictionaryCreateMutable(0, 0, &v2, MEMORY[0x1E0C9B3A0]);
    UICoderToBundleMap_coderToBundleMap = (uint64_t)result;
  }
  return result;
}

CFMutableDictionaryRef UICoderToNibIdentifierForStringsFileMap()
{
  CFMutableDictionaryRef result;
  __int128 v1;
  CFDictionaryKeyCallBacks v2;

  result = (CFMutableDictionaryRef)UICoderToNibIdentifierForStringsFileMap_coderToNibIdentifierForStringsFileMap;
  if (!UICoderToNibIdentifierForStringsFileMap_coderToNibIdentifierForStringsFileMap)
  {
    v1 = *(_OWORD *)(MEMORY[0x1E0C9B390] + 16);
    *(_OWORD *)&v2.version = *MEMORY[0x1E0C9B390];
    *(_OWORD *)&v2.release = v1;
    v2.equal = 0;
    v2.hash = 0;
    result = CFDictionaryCreateMutable(0, 0, &v2, MEMORY[0x1E0C9B3A0]);
    UICoderToNibIdentifierForStringsFileMap_coderToNibIdentifierForStringsFileMap = (uint64_t)result;
  }
  return result;
}

id UINIBResrouceUniqueingTable()
{
  void *v0;
  id v1;
  void *v2;

  v0 = (void *)UINIBResrouceUniqueingTable_resourceUniquing;
  if (!UINIBResrouceUniqueingTable_resourceUniquing)
  {
    v1 = objc_alloc_init(MEMORY[0x1E0C99E08]);
    v2 = (void *)UINIBResrouceUniqueingTable_resourceUniquing;
    UINIBResrouceUniqueingTable_resourceUniquing = (uint64_t)v1;

    v0 = (void *)UINIBResrouceUniqueingTable_resourceUniquing;
  }
  return v0;
}

id UICurrentNibPaths()
{
  void *v0;
  uint64_t v1;
  void *v2;

  v0 = (void *)UICurrentNibPaths_stack;
  if (!UICurrentNibPaths_stack)
  {
    v1 = objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", 1);
    v2 = (void *)UICurrentNibPaths_stack;
    UICurrentNibPaths_stack = v1;

    v0 = (void *)UICurrentNibPaths_stack;
  }
  return v0;
}

id UICurrentNibLoadingBundles()
{
  void *v0;
  uint64_t v1;
  void *v2;

  v0 = (void *)UICurrentNibLoadingBundles_stack;
  if (!UICurrentNibLoadingBundles_stack)
  {
    v1 = objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", 1);
    v2 = (void *)UICurrentNibLoadingBundles_stack;
    UICurrentNibLoadingBundles_stack = v1;

    v0 = (void *)UICurrentNibLoadingBundles_stack;
  }
  return v0;
}

void sub_1854A1AB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _GLOBAL__sub_I__UIUpdateSequence_mm()
{
  void *v0;

  v0 = (void *)MEMORY[0x186DC9484]();
  __cxa_atexit((void (*)(void *))_UIUpdateSequenceItemInternal::~_UIUpdateSequenceItemInternal, &_UIUpdateSequenceScheduledItemInternal, &dword_185066000);
  __cxa_atexit((void (*)(void *))_UIUpdateSequenceItemInternal::~_UIUpdateSequenceItemInternal, &_UIUpdateSequenceBeginItemInternal, &dword_185066000);
  __cxa_atexit((void (*)(void *))_UIUpdateSequenceItemInternal::~_UIUpdateSequenceItemInternal, &_UIUpdateSequenceHIDEventsItemInternal, &dword_185066000);
  __cxa_atexit((void (*)(void *))_UIUpdateSequenceItemInternal::~_UIUpdateSequenceItemInternal, _UIUpdateSequenceCADisplayLinksItemInternal, &dword_185066000);
  __cxa_atexit((void (*)(void *))_UIUpdateSequenceItemInternal::~_UIUpdateSequenceItemInternal, &_MergedGlobals_896, &dword_185066000);
  __cxa_atexit((void (*)(void *))_UIUpdateSequenceItemInternal::~_UIUpdateSequenceItemInternal, &_UIUpdateSequenceCATransactionCommitItemInternal, &dword_185066000);
  __cxa_atexit((void (*)(void *))_UIUpdateSequenceItemInternal::~_UIUpdateSequenceItemInternal, &unk_1ECD75D78, &dword_185066000);
  __cxa_atexit((void (*)(void *))_UIUpdateSequenceItemInternal::~_UIUpdateSequenceItemInternal, off_1ECD75DA8, &dword_185066000);
  __cxa_atexit((void (*)(void *))_UIUpdateSequenceItemInternal::~_UIUpdateSequenceItemInternal, &_UIUpdateSequenceLowLatencyHIDEventsItemInternal, &dword_185066000);
  __cxa_atexit((void (*)(void *))_UIUpdateSequenceItemInternal::~_UIUpdateSequenceItemInternal, &_UIUpdateSequenceLowLatencyCATransactionCommitItemInternal, &dword_185066000);
  __cxa_atexit((void (*)(void *))_UIUpdateSequenceItemInternal::~_UIUpdateSequenceItemInternal, &unk_1ECD75DD8, &dword_185066000);
  __cxa_atexit((void (*)(void *))_UIUpdateSequenceItemInternal::~_UIUpdateSequenceItemInternal, &_UIUpdateSequenceDoneItemInternal, &dword_185066000);
  objc_autoreleasePoolPop(v0);
}

void sub_1854A5828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1854A5A50(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

id UITextInputSessionAccidentalDictationGetAnalyticsPayloadForResult(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  double v19;
  double v20;
  void *v21;
  double v22;
  double v23;
  void *v24;
  void *v25;
  double v26;
  void *v27;
  void *v28;
  double v29;
  void *v30;
  void *v31;
  double v32;
  void *v33;
  void *v34;
  double v35;
  void *v36;
  void *v37;
  double v38;
  double v39;
  void *v40;
  double v41;
  double v42;
  __CFString *v43;
  __CFString *v44;
  __CFString *v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const __CFString *v51;
  const __CFString *v52;
  const __CFString *v53;
  const __CFString *v54;
  const __CFString *v55;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  __CFString *v61;
  __CFString *v62;
  id v63;
  void *v64;
  void *v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  _QWORD v70[13];
  _QWORD v71[13];
  _BYTE v72[128];
  uint64_t v73;

  v73 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if (!objc_msgSend(v4, "result"))
  {
    v17 = 0;
    goto LABEL_37;
  }
  v68 = 0u;
  v69 = 0u;
  v66 = 0u;
  v67 = 0u;
  v63 = v3;
  v5 = v3;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v66, v72, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v67;
    while (2)
    {
      for (i = 0; i != v7; ++i)
      {
        if (*(_QWORD *)v67 != v8)
          objc_enumerationMutation(v5);
        v10 = *(void **)(*((_QWORD *)&v66 + 1) + 8 * i);
        objc_msgSend(v10, "language");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        if (v11)
        {

LABEL_15:
          objc_msgSend(v10, "language");
          v16 = objc_claimAutoreleasedReturnValue();
          objc_msgSend(v10, "region");
          v15 = objc_claimAutoreleasedReturnValue();
          objc_msgSend(v10, "keyboardVariant");
          v14 = objc_claimAutoreleasedReturnValue();
          objc_msgSend(v10, "keyboardLayout");
          v13 = objc_claimAutoreleasedReturnValue();
          objc_msgSend(v10, "keyboardType");
          v6 = objc_claimAutoreleasedReturnValue();
          goto LABEL_16;
        }
        objc_msgSend(v10, "region");
        v12 = (void *)objc_claimAutoreleasedReturnValue();

        if (v12)
          goto LABEL_15;
      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v66, v72, 16);
      v6 = 0;
      v13 = 0;
      v14 = 0;
      v15 = 0;
      v16 = 0;
      if (v7)
        continue;
      break;
    }
  }
  else
  {
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
  }
LABEL_16:
  v61 = (__CFString *)v6;
  v62 = (__CFString *)v14;

  objc_msgSend(v4, "triggerAction");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "buttonSize");
  v20 = v19;

  objc_msgSend(v4, "triggerAction");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "buttonSize");
  v23 = v22;

  v24 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(v4, "triggerAction");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v25, "touchDownPoint");
  objc_msgSend(v24, "numberWithInt:", (int)(v26 / v20 * 100.0));
  v60 = (void *)objc_claimAutoreleasedReturnValue();

  v27 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(v4, "triggerAction");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "touchDownPoint");
  objc_msgSend(v27, "numberWithInt:", (int)(v29 / v23 * 100.0));
  v65 = (void *)objc_claimAutoreleasedReturnValue();

  v30 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(v4, "triggerAction");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v31, "touchUpPoint");
  objc_msgSend(v30, "numberWithInt:", (int)(v32 / v20 * 100.0));
  v64 = (void *)objc_claimAutoreleasedReturnValue();

  v33 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(v4, "triggerAction");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v34, "touchUpPoint");
  objc_msgSend(v33, "numberWithInt:", (int)(v35 / v23 * 100.0));
  v36 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v4, "triggerAction");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v37, "touchDuration");
  v39 = v38;

  objc_msgSend(v4, "triggerAction");
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v40, "touchDuration");
  v42 = v41;
  if (v39 >= 1.0)
  {
    v44 = (__CFString *)v15;

    v43 = (__CFString *)v13;
    v45 = (__CFString *)v16;
    if (v42 >= 5.0)
    {
      v48 = 108;
      goto LABEL_22;
    }
    objc_msgSend(v4, "triggerAction");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v40, "touchDuration");
    v46 = v47 + -1.0 + v47 + -1.0 + 100.0;
  }
  else
  {
    v43 = (__CFString *)v13;
    v44 = (__CFString *)v15;
    v45 = (__CFString *)v16;
    v46 = v41 / 0.01;
  }
  v48 = (uint64_t)v46;

LABEL_22:
  v70[0] = CFSTR("type");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLong:", objc_msgSend(v4, "result"));
  v59 = (void *)objc_claimAutoreleasedReturnValue();
  v71[0] = v59;
  v70[1] = CFSTR("width");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v20);
  v58 = (void *)objc_claimAutoreleasedReturnValue();
  v71[1] = v58;
  v70[2] = CFSTR("height");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v23);
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  v71[2] = v57;
  v71[3] = v60;
  v70[3] = CFSTR("downX");
  v70[4] = CFSTR("downY");
  v71[4] = v65;
  v71[5] = v64;
  v70[5] = CFSTR("upX");
  v70[6] = CFSTR("upY");
  v71[6] = v36;
  v70[7] = CFSTR("touchDuration");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLong:", v48);
  v49 = objc_claimAutoreleasedReturnValue();
  v50 = (void *)v49;
  v51 = CFSTR("None");
  if (v45)
    v52 = v45;
  else
    v52 = CFSTR("None");
  v71[7] = v49;
  v71[8] = v52;
  v70[8] = CFSTR("language");
  v70[9] = CFSTR("region");
  if (v44)
    v53 = v44;
  else
    v53 = CFSTR("None");
  if (v62)
    v54 = v62;
  else
    v54 = CFSTR("None");
  v71[9] = v53;
  v71[10] = v54;
  v70[10] = CFSTR("keyboardVariant");
  v70[11] = CFSTR("keyboardLayout");
  v70[12] = CFSTR("keyboardType");
  if (v43)
    v55 = v43;
  else
    v55 = CFSTR("None");
  if (v61)
    v51 = v61;
  v71[11] = v55;
  v71[12] = v51;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v71, v70, 13);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  v3 = v63;
LABEL_37:

  return v17;
}

_UITextInputSessionAcccidentalDictationResult *UITextInputSessionAccidentalDictationCheckForDictationResult(void *a1)
{
  id v1;
  NSObject *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  _BOOL4 v25;
  int v26;
  uint64_t v27;
  int v28;
  NSObject *v29;
  uint64_t v30;
  _UITextInputSessionAcccidentalDictationResult *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint8_t v45[128];
  _BYTE buf[24];
  void *v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;

  v50 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v32 = objc_alloc_init(_UITextInputSessionAcccidentalDictationResult);
  -[_UITextInputSessionAcccidentalDictationResult setResult:](v32, "setResult:", 0);
  UITextInputSessionLog();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
  {
    *(_WORD *)buf = 0;
    _os_log_debug_impl(&dword_185066000, v2, OS_LOG_TYPE_DEBUG, "[UITextInputSessionAccidentalDictation] Received actions (most recent to oldest):", buf, 2u);
  }

  v35 = 0u;
  v36 = 0u;
  v33 = 0u;
  v34 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v33, v45, 16);
  if (v4)
  {
    v5 = 0;
    v6 = *(_QWORD *)v34;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v34 != v6)
          objc_enumerationMutation(v3);
        v8 = *(_QWORD *)(*((_QWORD *)&v33 + 1) + 8 * v7);
        UITextInputSessionLog();
        v9 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 134218242;
          *(_QWORD *)&buf[4] = v5;
          *(_WORD *)&buf[12] = 2112;
          *(_QWORD *)&buf[14] = v8;
          _os_log_debug_impl(&dword_185066000, v9, OS_LOG_TYPE_DEBUG, "[UITextInputSessionAccidentalDictation]  %lu: %@", buf, 0x16u);
          ++v5;
        }

        ++v7;
      }
      while (v4 != v7);
      v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v33, v45, 16);
    }
    while (v4);
  }

  if ((unint64_t)objc_msgSend(v3, "count") >= 2)
  {
    v10 = v3;
    v41 = 0;
    v42 = &v41;
    v43 = 0x2020000000;
    v44 = 0;
    v37 = 0;
    v38 = &v37;
    v39 = 0x2020000000;
    v40 = -1;
    v11 = MEMORY[0x1E0C809B0];
    *(_QWORD *)buf = MEMORY[0x1E0C809B0];
    *(_QWORD *)&buf[8] = 3221225472;
    *(_QWORD *)&buf[16] = __UITextInputSessionAccidentalDictationIdentifyTruePositive_block_invoke;
    v47 = &unk_1E16B92A0;
    v48 = &v41;
    v49 = &v37;
    objc_msgSend(v10, "enumerateObjectsUsingBlock:", buf);
    v12 = v38[3];
    _Block_object_dispose(&v37, 8);
    _Block_object_dispose(&v41, 8);

    if ((v12 & 0x8000000000000000) == 0)
    {
      UITextInputSessionLog();
      v13 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        *(_QWORD *)&buf[4] = CFSTR("com.apple.inputAnalytics.accidentalDictation");
        _os_log_debug_impl(&dword_185066000, v13, OS_LOG_TYPE_DEBUG, "[UITextInputSessionAccidentalDictation] %@: True Positive", buf, 0xCu);
      }

      -[_UITextInputSessionAcccidentalDictationResult setResult:](v32, "setResult:", 1);
      objc_msgSend(v10, "objectAtIndex:", v12);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "asKeyboardDockItemButtonPress");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      -[_UITextInputSessionAcccidentalDictationResult setTriggerAction:](v32, "setTriggerAction:", v15);
      goto LABEL_48;
    }
    v16 = v10;
    v41 = 0;
    v42 = &v41;
    v43 = 0x2020000000;
    v44 = 0;
    v37 = 0;
    v38 = &v37;
    v39 = 0x2020000000;
    v40 = -1;
    *(_QWORD *)buf = v11;
    *(_QWORD *)&buf[8] = 3221225472;
    *(_QWORD *)&buf[16] = __UITextInputSessionAccidentalDictationIdentifyFalsePositive_block_invoke;
    v47 = &unk_1E16B92A0;
    v48 = &v41;
    v49 = &v37;
    objc_msgSend(v16, "enumerateObjectsUsingBlock:", buf);
    v17 = v38[3];
    _Block_object_dispose(&v37, 8);
    _Block_object_dispose(&v41, 8);

    if ((v17 & 0x8000000000000000) == 0)
    {
      UITextInputSessionLog();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 138412290;
        *(_QWORD *)&buf[4] = CFSTR("com.apple.inputAnalytics.accidentalDictation");
        _os_log_debug_impl(&dword_185066000, v18, OS_LOG_TYPE_DEBUG, "[UITextInputSessionAccidentalDictation] %@: False Positive", buf, 0xCu);
      }

      -[_UITextInputSessionAcccidentalDictationResult setResult:](v32, "setResult:", 2);
      objc_msgSend(v16, "objectAtIndex:", v17);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "asKeyboardDockItemButtonPress");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      -[_UITextInputSessionAcccidentalDictationResult setTriggerAction:](v32, "setTriggerAction:", v15);
      goto LABEL_48;
    }
    objc_msgSend(v16, "objectAtIndexedSubscript:", 0);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "asKeyboardDockItemButtonPress");
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v16, "objectAtIndexedSubscript:", 1);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "asKeyboardDockItemButtonPress");
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v14, "buttonType") == 1)
      v21 = v14;
    else
      v21 = 0;
    v22 = v21;
    if (objc_msgSend(v15, "buttonType") == 1)
      v23 = v15;
    else
      v23 = 0;
    v24 = v23;
    if (v22 && objc_msgSend(v22, "uiOrientation") == 1)
    {
      v25 = objc_msgSend(v22, "buttonPressResult") == 1;
      v26 = 1;
    }
    else
    {
      v26 = 0;
      v25 = 0;
    }
    if (v24 && objc_msgSend(v24, "buttonPressResult") == 2)
    {
      v27 = objc_msgSend(v24, "uiOrientation");
      v28 = v27 != 1 || v25;
      if (((v22 == 0) | v26) == 1 && !v28)
      {
        UITextInputSessionLog();
        v29 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          *(_QWORD *)&buf[4] = CFSTR("com.apple.inputAnalytics.accidentalDictation");
          _os_log_debug_impl(&dword_185066000, v29, OS_LOG_TYPE_DEBUG, "[UITextInputSessionAccidentalDictation] %@: True Negative", buf, 0xCu);
        }
        v30 = 3;
LABEL_46:

        -[_UITextInputSessionAcccidentalDictationResult setResult:](v32, "setResult:", v30);
        -[_UITextInputSessionAcccidentalDictationResult setTriggerAction:](v32, "setTriggerAction:", v15);

LABEL_48:
        goto LABEL_49;
      }
      if (v27 == 1 && v25)
      {
        UITextInputSessionLog();
        v29 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138412290;
          *(_QWORD *)&buf[4] = CFSTR("com.apple.inputAnalytics.accidentalDictation");
          _os_log_debug_impl(&dword_185066000, v29, OS_LOG_TYPE_DEBUG, "[UITextInputSessionAccidentalDictation] %@: False Negative", buf, 0xCu);
        }
        v30 = 4;
        goto LABEL_46;
      }
    }

    goto LABEL_48;
  }
LABEL_49:

  return v32;
}

void sub_1854A7AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v14;
  va_list va;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a13);
  va_start(va, a13);
  v14 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

id UITextInputSessionLog()
{
  if (UITextInputSessionLog_onceToken != -1)
    dispatch_once(&UITextInputSessionLog_onceToken, &__block_literal_global_255);
  return (id)UITextInputSessionLog___instance;
}

_UITextInputSessionAcccidentalDictationResult *UITextInputSessionAccidentalDictationCheckForGlobeResult(void *a1)
{
  id v1;
  _UITextInputSessionAcccidentalDictationResult *v2;
  void *v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v10;
  const __CFString *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = objc_alloc_init(_UITextInputSessionAcccidentalDictationResult);
  -[_UITextInputSessionAcccidentalDictationResult setResult:](v2, "setResult:", 0);
  if (objc_msgSend(v1, "count"))
  {
    objc_msgSend(v1, "objectAtIndexedSubscript:", 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "asKeyboardDockItemButtonPress");
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v4, "buttonType") == 2 && objc_msgSend(v4, "uiOrientation") == 1)
    {
      UITextInputSessionLog();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
      {
        v10 = 138412290;
        v11 = CFSTR("com.apple.inputAnalytics.accidentalDictation");
        _os_log_debug_impl(&dword_185066000, v5, OS_LOG_TYPE_DEBUG, "[UITextInputSessionAccidentalDictation] %@: Globe key press - reporting touch", (uint8_t *)&v10, 0xCu);
      }

      v6 = objc_msgSend(v4, "buttonPressResult");
      v7 = 6;
      if (v6 != 2)
        v7 = 7;
      if (v6 == 1)
        v8 = 5;
      else
        v8 = v7;
      -[_UITextInputSessionAcccidentalDictationResult setResult:](v2, "setResult:", v8);
      -[_UITextInputSessionAcccidentalDictationResult setTriggerAction:](v2, "setTriggerAction:", v4);
    }

  }
  return v2;
}

id _captureUserActionData()
{
  void *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v21;
  void *v22;
  uint64_t v23;

  v0 = (void *)MEMORY[0x186DC9484]();
  v1 = mach_absolute_time();
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  +[UIScreen _carScreen](UIScreen, "_carScreen");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
    objc_msgSend((id)UIApp, "_keyWindowForScreen:", v3);
  else
    +[UIWindow _applicationKeyWindow](UIWindow, "_applicationKeyWindow");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = UIApp;
  objc_msgSend(v4, "rootViewController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[UIApplication _topMostViewController:](v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "_existingView");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v8;
  if (v8)
  {
    v10 = v8;
  }
  else
  {
    objc_msgSend(v7, "view");
    v10 = (id)objc_claimAutoreleasedReturnValue();
  }
  v11 = v10;

  -[UIViewController _userActionDescription](v7);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v12, CFSTR("TopVC"));

  -[UIView _userActionDescription:maxLevel:](v11, 1, 0x19u);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v13, CFSTR("TopVCView"));

  _UIMainBundleIdentifier();
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v14, CFSTR("BundleID"));

  objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "objectForInfoDictionaryKey:", CFSTR("CFBundleDisplayName"));
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v16, CFSTR("DisplayName"));

  v17 = mach_absolute_time();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", _UIMediaDurationForMachDuration(v17 - v1) * 1000000.0);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v18, CFSTR("TraversalTimeuSec"));

  v23 = 0;
  objc_msgSend(MEMORY[0x1E0CB36D8], "dataWithJSONObject:options:error:", v2, 0, &v23);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v19)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSData *_captureUserActionData(void)");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "handleFailureInFunction:file:lineNumber:description:", v22, CFSTR("UIApplication.m"), 3719, CFSTR("Failed to serialize user activity information"));

  }
  objc_autoreleasePoolPop(v0);
  return v19;
}

double _UIMediaDurationForMachDuration(uint64_t a1)
{
  if (qword_1ECD7F5A0 != -1)
    dispatch_once(&qword_1ECD7F5A0, &__block_literal_global_23_8);
  return (double)a1 / *(double *)&qword_1ECD7F5A8;
}

void _addUserActionDescription(void *a1, void *a2)
{
  char *v3;
  id v4;
  void *v5;
  objc_class *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v3 && v4)
  {
    v6 = (objc_class *)objc_opt_class();
    NSStringFromClass(v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v7, CFSTR("ClassName"));

    -[UIViewController _descriptionForPrintingHierarchyIncludingInsets:](v3, 0);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v8, CFSTR("Description"));

    objc_msgSend(v3, "presentingViewController");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "_presentationController");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "_descriptionForPrintingViewControllerHierarchy");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v11, CFSTR("PresentationController"));

    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setObject:forKeyedSubscript:", v12, CFSTR("SubVCs"));

    v28 = 0u;
    v29 = 0u;
    v26 = 0u;
    v27 = 0u;
    v25 = v3;
    objc_msgSend(v3, "childViewControllers");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
    if (v14)
    {
      v15 = v14;
      v16 = *(_QWORD *)v27;
      do
      {
        for (i = 0; i != v15; ++i)
        {
          if (*(_QWORD *)v27 != v16)
            objc_enumerationMutation(v13);
          v18 = *(_QWORD *)(*((_QWORD *)&v26 + 1) + 8 * i);
          objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("SubVCs"));
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v20, "addObject:", v19);

          _addUserActionDescription(v18, v19);
        }
        v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
      }
      while (v15);
    }

    v3 = v25;
    objc_msgSend(v25, "childModalViewController");
    v21 = (void *)objc_claimAutoreleasedReturnValue();

    if (v21)
    {
      objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("SubVCs"));
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "addObject:", v22);

      objc_msgSend(v25, "childModalViewController");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      _addUserActionDescription(v24, v22);

    }
  }

}

void _addUserActionDescription_0(void *a1, void *a2, int a3, int a4, unsigned int a5)
{
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  objc_class *v13;
  void *v14;
  void *v15;
  unint64_t v16;
  BOOL v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  id obj;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[128];
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a2;
  v9 = v8;
  if (v7 && v8)
  {
    v10 = (id)objc_msgSend(v7, "unsafeUnretainedDelegate");
    if (v10 && (v11 = v10, _IsKindOfUIView((uint64_t)v10)))
    {
      v12 = v11;
      v13 = (objc_class *)objc_opt_class();
      NSStringFromClass(v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "setObject:forKeyedSubscript:", v14, CFSTR("ClassName"));

    }
    else
    {
      objc_msgSend(v9, "setObject:forKeyedSubscript:", CFSTR("CALayer"), CFSTR("ClassName"));
    }
    objc_msgSend(v7, "sublayers");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = objc_msgSend(v15, "count");

    if (v16 < 4 || (v17 = a4 < 1, --a4, !v17))
    {
      if (a3 < (int)a5)
      {
        objc_msgSend(MEMORY[0x1E0C99DE8], "array");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        v19 = v9;
        objc_msgSend(v9, "setObject:forKeyedSubscript:", v18, CFSTR("Subviews"));

        v34 = 0u;
        v35 = 0u;
        v32 = 0u;
        v33 = 0u;
        v28 = v7;
        objc_msgSend(v7, "sublayers");
        obj = (id)objc_claimAutoreleasedReturnValue();
        v20 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v32, v36, 16);
        if (v20)
        {
          v21 = v20;
          v22 = *(_QWORD *)v33;
          v23 = (a3 + 1);
          do
          {
            v24 = 0;
            do
            {
              if (*(_QWORD *)v33 != v22)
                objc_enumerationMutation(obj);
              v25 = *(_QWORD *)(*((_QWORD *)&v32 + 1) + 8 * v24);
              objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
              v26 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v19, "objectForKeyedSubscript:", CFSTR("Subviews"));
              v27 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v27, "addObject:", v26);

              _addUserActionDescription_0(v25, v26, v23, a4, a5);
              ++v24;
            }
            while (v21 != v24);
            v21 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v32, v36, 16);
          }
          while (v21);
        }

        v7 = v28;
        v9 = v19;
      }
    }
  }

}

void sub_1854A8E58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _UIDateLabelUpdateLocaleInfo()
{
  void *v0;
  void *v1;
  BOOL v2;
  uint64_t v3;
  BOOL v4;
  unint64_t v5;
  unint64_t v6;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  v0 = (void *)MEMORY[0x1E0CB3578];
  objc_msgSend(MEMORY[0x1E0C99DC8], "currentLocale");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "dateFormatFromTemplate:options:locale:", CFSTR("j"), 0, v1);
  v14 = (id)objc_claimAutoreleasedReturnValue();

  v2 = objc_msgSend(v14, "rangeOfString:", CFSTR("H")) != 0x7FFFFFFFFFFFFFFFLL
    || objc_msgSend(v14, "rangeOfString:", CFSTR("k")) != 0x7FFFFFFFFFFFFFFFLL;
  _MergedGlobals_7_15 = v2;
  v3 = objc_msgSend(v14, "rangeOfString:", CFSTR("a"));
  if (v3 == 0x7FFFFFFFFFFFFFFFLL)
  {
    v4 = 0;
  }
  else
  {
    v5 = v3;
    v6 = objc_msgSend(v14, "rangeOfString:options:", CFSTR("h"), 1);
    if (v6 == 0x7FFFFFFFFFFFFFFFLL)
      v6 = objc_msgSend(v14, "rangeOfString:options:", CFSTR("k"), 1);
    v4 = v6 != 0x7FFFFFFFFFFFFFFFLL && v5 < v6;
  }
  byte_1ECD7B411 = v4;
  v8 = (void *)qword_1ECD7B418;
  qword_1ECD7B418 = 0;

  v9 = (void *)qword_1ECD7B420;
  qword_1ECD7B420 = 0;

  v10 = (void *)qword_1ECD7B428;
  qword_1ECD7B428 = 0;

  v11 = (void *)qword_1ECD7B430;
  qword_1ECD7B430 = 0;

  v12 = (void *)qword_1ECD7B438;
  qword_1ECD7B438 = 0;

  v13 = (void *)qword_1ECD7B440;
  qword_1ECD7B440 = 0;

}

uint64_t _UIApplicationSupportsIndirectInputEventsGivenInfo(void *a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  int v5;
  int v6;
  void *v7;
  int v8;
  int v9;
  int v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t i;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  int v27;
  int v28;
  _BOOL4 v29;
  int v31;
  void *v32;
  id v33;
  void *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[128];
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  _UIMainBundleIdentifier();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (!dyld_program_sdk_at_least())
  {
    v5 = 0;
    goto LABEL_39;
  }
  +[UIDevice currentDevice](UIDevice, "currentDevice");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "userInterfaceIdiom");

  if (v4 == 6)
  {
    v5 = 1;
    goto LABEL_39;
  }
  v6 = dyld_program_sdk_at_least();
  _UIMainBundleIdentifier();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v7, "isEqualToString:", CFSTR("com.apple.springboard")) & 1) != 0
    || (objc_msgSend(v7, "isEqualToString:", CFSTR("com.apple.PointerUI.pointeruid")) & 1) != 0
    || (objc_msgSend(v7, "isEqualToString:", CFSTR("com.apple.mobileslideshow")) & 1) != 0
    || objc_msgSend(v7, "isEqualToString:", CFSTR("com.apple.Home")))
  {

  }
  else
  {
    v31 = objc_msgSend(v7, "isEqualToString:", CFSTR("com.apple.stocks"));

    if (!v31)
      goto LABEL_11;
  }
  v6 = 0;
LABEL_11:
  v8 = objc_msgSend(a1, "hasSupportsIndirectInputEventsKey");
  v9 = objc_msgSend(a1, "supportsIndirectInputEvents");
  if (v8)
    v5 = v9;
  else
    v5 = v6;
  v10 = _UIInternalPreferenceUsesDefault((int *)&unk_1ECD75EB8, (uint64_t)CFSTR("BundleIdentifiersWantingOverriddenIndirectEventSupport"), (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateId);
  v11 = (void *)qword_1ECD75EC0;
  if (v10)
    v11 = 0;
  v12 = v11;
  objc_msgSend(MEMORY[0x1E0CB3500], "whitespaceCharacterSet");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "stringByTrimmingCharactersInSet:", v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (v14 && objc_msgSend(v14, "length"))
  {
    v33 = v12;
    v34 = v2;
    objc_msgSend(MEMORY[0x1E0CB3500], "characterSetWithCharactersInString:", CFSTR(","));
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v32 = v14;
    objc_msgSend(v14, "componentsSeparatedByCharactersInSet:", v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    v37 = 0u;
    v38 = 0u;
    v35 = 0u;
    v36 = 0u;
    v17 = v16;
    v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v35, v39, 16);
    if (v18)
    {
      v19 = v18;
      v20 = 0;
      v21 = *(_QWORD *)v36;
      do
      {
        for (i = 0; i != v19; ++i)
        {
          if (*(_QWORD *)v36 != v21)
            objc_enumerationMutation(v17);
          v23 = *(void **)(*((_QWORD *)&v35 + 1) + 8 * i);
          if (!v20)
            v20 = (void *)objc_opt_new();
          objc_msgSend(MEMORY[0x1E0CB3500], "whitespaceCharacterSet");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v23, "stringByTrimmingCharactersInSet:", v24);
          v25 = (void *)objc_claimAutoreleasedReturnValue();

          if (v25)
            objc_msgSend(v20, "addObject:", v25);

        }
        v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v35, v39, 16);
      }
      while (v19);
    }
    else
    {
      v20 = 0;
    }

    v12 = v33;
    v2 = v34;
    v14 = v32;
  }
  else
  {
    v20 = 0;
  }
  v26 = (void *)objc_msgSend(v20, "copy");

  if (v26 && objc_msgSend(v26, "containsObject:", v2))
  {
    v27 = _UIInternalPreferenceUsesDefault(&_MergedGlobals_900, (uint64_t)CFSTR("OverrideValueForBundleIdentifiersWantingOverriddenIndirectEventSupport"), (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
    if (byte_1ECD75EAC)
      v5 = 1;
    else
      v5 = v27;
  }

LABEL_39:
  v28 = _UIInternalPreferenceUsesDefault(&dword_1ECD75EB0, (uint64_t)CFSTR("ForceEnableIndirectEventSupportForAllApps"), (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
  v29 = byte_1ECD75EB4 != 0;

  return v29 & ~v28 | v5;
}

void UIMotionEffectCommonInit(void *a1)
{
  id *v1;
  void *v2;
  _UIMotionAnalyzerSettings *v3;
  void *v4;
  id *v5;

  v1 = a1;
  v2 = (void *)_UIMotionEffectDefaultAnalyzerSettings__defaultSettings;
  v5 = v1;
  if (!_UIMotionEffectDefaultAnalyzerSettings__defaultSettings)
  {
    v3 = -[_UISettings initWithDefaultValues]([_UIMotionAnalyzerSettings alloc], "initWithDefaultValues");
    v4 = (void *)_UIMotionEffectDefaultAnalyzerSettings__defaultSettings;
    _UIMotionEffectDefaultAnalyzerSettings__defaultSettings = (uint64_t)v3;

    v1 = v5;
    v2 = (void *)_UIMotionEffectDefaultAnalyzerSettings__defaultSettings;
  }
  objc_storeStrong(v1 + 1, v2);

}

void _UIParallaxMotionEffectCommonInit(void *a1)
{
  UIMotionEffectGroup *v1;
  void *v2;
  _QWORD *v3;

  v3 = a1;
  v1 = objc_alloc_init(UIMotionEffectGroup);
  v2 = (void *)v3[3];
  v3[3] = v1;

  objc_msgSend(v3, "_updateGroupMotionEffect");
}

void sub_1854AB6C8(uint64_t a1, uint64_t a2, SEL *a3)
{
  void *v5;
  id v6;
  id v7;

  v5 = (void *)sub_1856F6D14();
  v6 = v5;
  if (a2)
  {
    v7 = (id)sub_1865074D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  objc_msgSend(v5, *a3, v7);

}

void sub_1854AB7BC(uint64_t *a1, unint64_t *a2, uint64_t a3, SEL *a4)
{
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;

  v6 = *a1;
  v7 = (void *)sub_1856F6D14();
  v8 = *(void **)(v6 + 16);
  v9 = v7;
  v10 = v8;
  swift_release();
  objc_msgSend(v10, sel_copy);

  sub_186507B1C();
  swift_unknownObjectRelease();
  sub_1851F9080(0, a2);
  swift_dynamicCast();
  objc_msgSend(v9, *a4, v11);

}

void sub_1854ABF50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1854AF788@<X0>(SEL *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t result;

  v3 = objc_msgSend((id)objc_opt_self(), *a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74BB8);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *a2 = result;
  return result;
}

BOOL UIAccessibilityIsVideoAutoplayEnabled(void)
{
  return _AXSReduceMotionAutoplayVideoPreviewsEnabled() != 0;
}

__CFString *UIKeyboardLocalizedReturnKeyName(uint64_t a1)
{
  void *v1;
  __CFString *v2;
  __CFString *v3;
  __CFString *v4;

  KeyboardReturnKeyStringConstantFromReturnKeyType(a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v1, "hasSuffix:", CFSTR(".png")))
  {
    v2 = v1;
  }
  else
  {
    if (v1)
    {
      UIKeyboardLocalizedString(v1, 0, 0, 0);
      v3 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v3 = 0;
    }
    v4 = CFSTR("return");
    if (v3)
      v4 = v3;
    v2 = v4;

  }
  return v2;
}

const __CFString *KeyboardReturnKeyStringConstantFromReturnKeyType(uint64_t a1)
{
  uint64_t v1;
  const __CFString *result;
  const __CFString *v3;

  if ((int)a1 >= 0)
    v1 = a1;
  else
    v1 = -a1;
  switch(v1)
  {
    case 0:
      result = CFSTR("UI-Return");
      break;
    case 1:
      result = CFSTR("UI-Go");
      break;
    case 2:
    case 6:
    case 8:
      result = CFSTR("UI-Search");
      break;
    case 3:
      result = CFSTR("UI-Join");
      break;
    case 4:
      result = CFSTR("UI-Next");
      break;
    case 5:
      result = CFSTR("UI-Route");
      break;
    case 7:
      result = CFSTR("UI-Send");
      break;
    case 9:
      result = CFSTR("UI-Done");
      break;
    case 10:
      result = CFSTR("UI-EmergencyCall");
      break;
    case 11:
      result = CFSTR("UI-Continue");
      break;
    default:
      v3 = CFSTR("UI-Buy");
      if (v1 != 126)
        v3 = 0;
      if (v1 == 124)
        result = CFSTR("UI-Speak");
      else
        result = v3;
      break;
  }
  return result;
}

id UIKeyboardLocalizedString(void *a1, void *a2, void *a3, void *a4)
{
  void *v4;
  void *v5;
  id v6;

  UIKeyboardLocalizedObject(a1, a2, a3, a4, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v5 = v4;
  else
    v5 = 0;
  v6 = v5;

  return v6;
}

id UIKeyboardLocalizedObject(void *a1, void *a2, void *a3, void *a4, int a5)
{
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v32;

  v8 = a1;
  v9 = a2;
  v32 = a3;
  v10 = a4;
  if (!v9)
  {
    +[UIKeyboardImpl activeInstance](UIKeyboardImpl, "activeInstance");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "textInputTraits");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "useInterfaceLanguageForLocalization");

    if (v13)
    {
      UIKeyboardGetCurrentUILanguage();
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      TIGetDefaultInputModesForLanguage();
      v15 = (void *)objc_claimAutoreleasedReturnValue();

      if (objc_msgSend(v15, "count"))
      {
        objc_msgSend(v15, "objectAtIndex:", 0);
        v9 = (id)objc_claimAutoreleasedReturnValue();

        if (v9)
          goto LABEL_8;
      }
      else
      {

      }
    }
    UIKeyboardGetCurrentInputMode();
    v9 = (id)objc_claimAutoreleasedReturnValue();
  }
LABEL_8:
  TIInputModeGetComponentsFromIdentifier();
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = *MEMORY[0x1E0C997E8];
  objc_msgSend(v16, "objectForKey:", *MEMORY[0x1E0C997E8]);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = *MEMORY[0x1E0C99820];
  objc_msgSend(v16, "objectForKey:", *MEMORY[0x1E0C99820]);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionaryWithObjectsAndKeys:", v18, v17, 0);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = v21;
  if (v20)
    objc_msgSend(v21, "setObject:forKey:", v20, v19);
  objc_msgSend(MEMORY[0x1E0C99DC8], "localeIdentifierFromComponents:", v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v16, "objectForKey:", *MEMORY[0x1E0C997B0]);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "objectForKeyedSubscript:", CFSTR("rg"));
  v25 = (void *)objc_claimAutoreleasedReturnValue();

  if (v25)
  {
    objc_msgSend(MEMORY[0x1E0C99DC8], "localeWithLocaleIdentifier:", v9);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v26, "regionCode");
    v27 = objc_claimAutoreleasedReturnValue();

    v24 = (void *)v27;
  }
  objc_msgSend(v16, "objectForKey:", *MEMORY[0x1E0C99848]);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  LookupInternationalObject(v8, v23, v24, v28, v10, a5);
  v29 = (void *)objc_claimAutoreleasedReturnValue();

  return v29;
}

id LookupInternationalObject(void *a1, void *a2, void *a3, void *a4, void *a5, int a6)
{
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t CurrentIdiom;
  const __CFString *v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  __CFString *v29;
  const __CFString *v30;
  uint64_t *v31;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;

  v11 = a1;
  v12 = a2;
  v13 = a3;
  v14 = a4;
  v15 = a5;
  if (v11)
  {
    if (objc_msgSend(v13, "length"))
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@-%@-%@"), v12, v13, v14);
    else
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@-%@"), v12, v14, v33);
    v17 = objc_claimAutoreleasedReturnValue();
    UIKeyboardGetCurrentUILanguage();
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = (void *)MEMORY[0x1E0CB3940];
    CurrentIdiom = UIKeyboardGetCurrentIdiom();
    v21 = CFSTR("WITHOUT");
    if (a6)
      v21 = CFSTR("WITH");
    v38 = (void *)v17;
    objc_msgSend(v19, "stringWithFormat:", CFSTR("%@-%ld-%@-%@-Defaults"), v17, CurrentIdiom, v18, v21);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    if (!_MergedGlobals_1135)
    {
      v23 = objc_alloc_init(MEMORY[0x1E0C99E08]);
      v24 = (void *)_MergedGlobals_1135;
      _MergedGlobals_1135 = (uint64_t)v23;

    }
    v25 = (void *)qword_1ECD7F008;
    if (!qword_1ECD7F008)
    {
      v26 = objc_alloc_init(MEMORY[0x1E0C99E08]);
      v27 = (void *)qword_1ECD7F008;
      qword_1ECD7F008 = (uint64_t)v26;

      v25 = (void *)qword_1ECD7F008;
    }
    objc_msgSend(v25, "objectForKey:", v22);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    if (v28)
    {
      v16 = v15;
    }
    else
    {
      objc_msgSend((id)_MergedGlobals_1135, "objectForKey:", v22);
      v29 = (__CFString *)objc_claimAutoreleasedReturnValue();
      if (!v29)
      {
        v37 = v12;
        v36 = v13;
        v35 = v14;
        v34 = v18;
        UIKeyboardGetCurrentIdiom();
        TILoadMergedKeyboardPlistForLocale();
        v29 = (__CFString *)objc_claimAutoreleasedReturnValue();

        if (v29)
          v30 = v29;
        else
          v30 = CFSTR("sentinel");
        v31 = &_MergedGlobals_1135;
        if (!v29)
          v31 = &qword_1ECD7F008;
        objc_msgSend((id)*v31, "setObject:forKey:", v30, v22);
      }
      -[__CFString objectForKey:](v29, "objectForKey:", v11);
      v16 = (id)objc_claimAutoreleasedReturnValue();
      if (!v16)
        v16 = v15;

    }
  }
  else
  {
    v16 = 0;
  }

  return v16;
}

id UIKeyboardGetCurrentUILanguage()
{
  void *v0;
  void *v1;
  __CFString *v2;
  uint64_t v3;
  void *v4;

  v0 = (void *)UIKeyboardCurrentUILanguage;
  if (!UIKeyboardCurrentUILanguage)
  {
    objc_msgSend(MEMORY[0x1E0C99DC8], "preferredLanguages");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v1, "count"))
    {
      objc_msgSend(v1, "objectAtIndex:", 0);
      v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v2 = CFSTR("intl");
    }
    v3 = -[__CFString copy](v2, "copy");
    v4 = (void *)UIKeyboardCurrentUILanguage;
    UIKeyboardCurrentUILanguage = v3;

    v0 = (void *)UIKeyboardCurrentUILanguage;
  }
  return v0;
}

uint64_t UIKeyboardInputModeWithTypeUsesKBStar(void *a1, unsigned int a2)
{
  id v3;
  uint64_t v4;

  v3 = a1;
  v4 = UIKeyboardInputModeUsesKBStar(v3);
  if (a2 <= 0xB && ((1 << a2) & 0x930) != 0 || a2 == 127)
    v4 = UIKeyboardLayoutSupportsNumberPads(v3) & v4;

  return v4;
}

uint64_t UIKeyboardInputModeUsesKBStar(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v1 = a1;
  if (!UIKeyboardInputModeUsesKBStar___dict)
  {
    v2 = objc_alloc(MEMORY[0x1E0C99E08]);
    v3 = objc_msgSend(v2, "initWithObjectsAndKeys:", CFSTR("dictation"), MEMORY[0x1E0C9AAA0], CFSTR("autofillsignup"), 0);
    v4 = (void *)UIKeyboardInputModeUsesKBStar___dict;
    UIKeyboardInputModeUsesKBStar___dict = v3;

  }
  TICanonicalInputModeName();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend((id)UIKeyboardInputModeUsesKBStar___dict, "objectForKey:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (v6)
    v8 = objc_msgSend(v6, "BOOLValue");
  else
    v8 = 1;

  return v8;
}

id UIKeyboardGetKBStarName(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7;
  id v8;
  unint64_t v9;
  void *v10;
  void *v11;
  char v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  char v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  void *v32;
  void *v33;
  const __CFString *v34;
  BOOL v35;
  uint64_t v36;
  const __CFString *v37;
  __CFString *v38;
  void *v39;
  void *v40;
  double v41;
  double v42;
  void *v43;
  double v44;
  void *v45;
  double v46;
  double v47;
  double v48;
  double v49;
  void *v50;
  void *v51;
  void *v52;
  double v53;
  void *v54;
  double v55;
  void *v56;
  void *v57;
  uint64_t v58;
  void *v59;
  const __CFString *v60;
  const __CFString *v61;
  void *v62;
  uint64_t v63;
  const __CFString *v64;
  const __CFString *v65;
  void *v66;
  void *v67;
  __CFString *v68;
  const __CFString *v69;
  __CFString *v70;
  void *v71;
  void *v73;
  void *v74;
  void *v75;
  uint64_t v76;
  const __CFString *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;

  v7 = a1;
  v8 = a2;
  v9 = objc_msgSend(v8, "idiom");
  UIKeyboardComputeKeyboardIdiomFromScreenTraits(v8, v9, objc_msgSend(v8, "isSplit"));
  if (objc_msgSend(v8, "isFloating"))
    v9 = 0;
  +[UIKeyboardPreferencesController sharedPreferencesController](UIKeyboardPreferencesController, "sharedPreferencesController");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "preferencesActions");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "inputModeSupportsCrescendo:", v7);

  if (v9 == 3)
  {
    UIKeyboardGetDerivedKeyboard(v7, v8, a3);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "derivedKBStarPrefixName");
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    if (v17)
    {
      objc_msgSend(v16, "derivedKBStarPrefixName");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      KBStarLayoutString(v7);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      UIKeyboardPhoneLayoutToUseForCarPlayInputMode(v7);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v21 = v20;
      if (v20)
      {
        v22 = v20;

        v19 = v22;
      }
      objc_msgSend(MEMORY[0x1E0CB37A0], "stringWithFormat:", CFSTR("%@-%@"), v18, v19);
      v15 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_32:
      if (v15)
      {
LABEL_33:
        v38 = 0;
        goto LABEL_77;
      }
      goto LABEL_46;
    }
    v32 = (void *)MEMORY[0x1E0CB37A0];
    KBStarLayoutString(v7);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v32, "stringWithFormat:", CFSTR("%@-Landscape-%@"), CFSTR("Car"), v18, v76, v78, v79);
LABEL_31:
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    goto LABEL_32;
  }
  if (v9 == 2)
  {
    if (a3 <= 0xB && ((1 << a3) & 0x930) != 0 || (_DWORD)a3 == 127)
    {
      v13 = (void *)MEMORY[0x1E0CB37A0];
      KBStarTypeStringWithTVLinearKeyboardLayout(a3, objc_msgSend(v8, "isLinear"));
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "stringWithFormat:", CFSTR("%@-Linear-%@"), CFSTR("Monolith"), v14);
      v15 = (void *)objc_claimAutoreleasedReturnValue();

      if (v15)
        goto LABEL_33;
    }
    v33 = (void *)MEMORY[0x1E0CB37A0];
    if (objc_msgSend(v8, "isLinear"))
      v34 = CFSTR("Linear-");
    else
      v34 = &stru_1E16EDF20;
    v35 = a3 == 120 || a3 == 10;
    v36 = a4;
    if (v35)
      v37 = CFSTR("Uncased-");
    else
      v37 = &stru_1E16EDF20;
    KBStarLayoutStringForIdiom(2, v7);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    KBStarTypeStringWithTVLinearKeyboardLayout(a3, objc_msgSend(v8, "isLinear"));
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v77 = v37;
    a4 = v36;
    objc_msgSend(v33, "stringWithFormat:", CFSTR("%@-%@%@%@-%@"), CFSTR("Monolith"), v34, v77, v16, v18);
    goto LABEL_31;
  }
  if (v9 > 1)
  {
LABEL_46:
    v38 = CFSTR("iPhone-Portrait");
    goto LABEL_47;
  }
  UIKeyboardGetDerivedKeyboard(v7, v8, a3);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = v23;
  v25 = v12 ^ 1;
  if (a3 == 127)
    v25 = 1;
  if ((v25 & 1) != 0)
  {
    objc_msgSend(v23, "derivedKBStarPrefixName");
    v39 = (void *)objc_claimAutoreleasedReturnValue();

    if (v39)
    {
      objc_msgSend(v24, "derivedKBStarPrefixName");
      v38 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      objc_msgSend(getTUIKeyboardLayoutFactoryClass(), "sharedKeyboardFactory");
      v54 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "keyboardWidth");
      objc_msgSend(v54, "keyboardPrefixForWidth:andEdge:", objc_msgSend(v8, "isKeyboardMinorEdgeWidth"), round(v55));
      v38 = (__CFString *)objc_claimAutoreleasedReturnValue();

    }
  }
  else
  {
    objc_msgSend(v8, "keyboardScreenReferenceSize");
    v27 = v26;
    v29 = v28;
    if (objc_msgSend(v8, "isFloating"))
    {
      objc_msgSend(v8, "keyboardWidth");
      v27 = v30;
      objc_msgSend(v8, "keyboardWidth");
      v29 = v31;
    }
    else if (v9 == 1)
    {
      objc_msgSend(v8, "screen");
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v40, "scale");
      v41 = 1.0;
      if (v42 > 0.0)
      {
        objc_msgSend(v8, "screen");
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v43, "scale");
        v41 = v44;

      }
      objc_msgSend(v8, "screen");
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v45, "nativeBounds");
      v47 = v46;
      v49 = v48;

      v27 = v47 / v41;
      v29 = v49 / v41;
    }
    objc_msgSend(getTUIKeyboardLayoutFactoryClass(), "sharedKeyboardFactory");
    v50 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v50, "keyboardSuffixForScreenDimensions:", v27, v29);
    v51 = (void *)objc_claimAutoreleasedReturnValue();

    if ((a3 > 0xB || ((1 << a3) & 0x930) == 0) && (_DWORD)a3 != 127 || v9)
    {
      v73 = (void *)MEMORY[0x1E0CB37A0];
      KBStarLayoutStringForIdiom(v9, v7);
      v74 = (void *)objc_claimAutoreleasedReturnValue();
      KBStarTypeString(v9, a3);
      v80 = v24;
      v75 = (void *)objc_claimAutoreleasedReturnValue();
      v38 = CFSTR("Dynamic");
      objc_msgSend(v73, "stringWithFormat:", CFSTR("%@-%@-%@-%@"), CFSTR("Dynamic"), v74, v51, v75);
      v15 = (void *)objc_claimAutoreleasedReturnValue();

      if (v15)
        goto LABEL_77;
      goto LABEL_47;
    }
    objc_msgSend(getTUIKeyboardLayoutFactoryClass(), "sharedKeyboardFactory");
    v52 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "keyboardWidth");
    objc_msgSend(v52, "keyboardPrefixForWidth:andEdge:", objc_msgSend(v8, "isKeyboardMinorEdgeWidth"), round(v53));
    v38 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  if (!v38)
    goto LABEL_46;
LABEL_47:
  if (a3 == 127 || !v9)
  {
    if (a3 <= 0xB && ((1 << a3) & 0x930) != 0)
    {
      v56 = (void *)MEMORY[0x1E0CB37A0];
      KBStarTypeString(v9, a3);
      v57 = (void *)objc_claimAutoreleasedReturnValue();
      KBStarLayoutString(v7);
      v58 = objc_claimAutoreleasedReturnValue();
      v59 = (void *)v58;
      v60 = &stru_1E16EDF20;
      v61 = CFSTR("RightHanded");
      if (a4 != 1)
        v61 = &stru_1E16EDF20;
      if (a4 == 2)
        v61 = CFSTR("LeftHanded");
      if (a3 != 127)
        v60 = v61;
      objc_msgSend(v56, "stringWithFormat:", CFSTR("%@-%@-%@-%@"), v38, v57, v58, v60);
      v15 = (void *)objc_claimAutoreleasedReturnValue();

      goto LABEL_58;
    }
    if ((_DWORD)a3 == 127)
    {
      v62 = (void *)MEMORY[0x1E0CB37A0];
      KBStarTypeString(v9, 127);
      v63 = objc_claimAutoreleasedReturnValue();
      v57 = (void *)v63;
      v64 = &stru_1E16EDF20;
      v65 = CFSTR("RightHanded");
      if (a4 != 1)
        v65 = &stru_1E16EDF20;
      if (a4 == 2)
        v65 = CFSTR("LeftHanded");
      if (a3 != 127)
        v64 = v65;
      objc_msgSend(v62, "stringWithFormat:", CFSTR("%@-%@-%@"), v38, v63, v64);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_58:

      if (v15)
        goto LABEL_77;
    }
  }
  v15 = 0;
  if (v9 <= 4 && ((1 << v9) & 0x13) != 0)
  {
    v66 = (void *)MEMORY[0x1E0CB37A0];
    KBStarLayoutStringForIdiom(v9, v7);
    v67 = (void *)objc_claimAutoreleasedReturnValue();
    v68 = &stru_1E16EDF20;
    v69 = CFSTR("RightHanded");
    if (a4 != 1)
      v69 = &stru_1E16EDF20;
    if (a4 == 2)
      v69 = CFSTR("LeftHanded");
    if (a3 != 127)
      v68 = (__CFString *)v69;
    v70 = v68;
    KBStarTypeString(v9, a3);
    v71 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v66, "stringWithFormat:", CFSTR("%@-%@-%@-%@"), v38, v67, v70, v71);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

  }
LABEL_77:
  while (objc_msgSend(v15, "replaceOccurrencesOfString:withString:options:range:", CFSTR("--"), CFSTR("-"), 2, 0, objc_msgSend(v15, "length")));
  while (objc_msgSend(v15, "length"))
  {
    if (!objc_msgSend(v15, "hasPrefix:", CFSTR("-")))
      break;
    objc_msgSend(v15, "deleteCharactersInRange:", 0, 1);
  }
  while (objc_msgSend(v15, "length"))
  {
    if (!objc_msgSend(v15, "hasSuffix:", CFSTR("-")))
      break;
    objc_msgSend(v15, "deleteCharactersInRange:", objc_msgSend(v15, "length") - 1, 1);
  }

  return v15;
}

const __CFString *KBStarTypeString(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  NSObject *v5;
  const __CFString *result;
  NSObject *v7;
  uint8_t v8[16];
  uint8_t buf[16];
  uint64_t v10;
  uint64_t v11;

  if (a1 == 1)
  {
    switch(a2)
    {
      case 3:
LABEL_18:
        result = CFSTR("URL");
        break;
      case 4:
      case 5:
      case 8:
      case 11:
        result = CFSTR("Pad");
        break;
      case 6:
LABEL_19:
        result = CFSTR("NamePhonePad");
        break;
      case 7:
LABEL_20:
        result = CFSTR("Email");
        break;
      case 9:
LABEL_21:
        result = CFSTR("Twitter");
        break;
      case 10:
        goto LABEL_17;
      default:
LABEL_13:
        if (a2 == 120)
        {
LABEL_17:
          result = CFSTR("AlphaWithURL");
        }
        else if (a2 == 127)
        {
          result = CFSTR("PasscodePad");
        }
        else
        {
          result = &stru_1E16EDF20;
        }
        break;
    }
  }
  else if (a1 == 2)
  {
    v10 = v2;
    v11 = v3;
    if (os_variant_has_internal_diagnostics())
    {
      __UIFaultDebugAssertLog();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_fault_impl(&dword_185066000, v7, OS_LOG_TYPE_FAULT, "Must call KBStarTypeStringWithTVLinearKeyboardLayout(...) on tvOS.", buf, 2u);
      }

    }
    else
    {
      v4 = KBStarTypeString___s_category;
      if (!KBStarTypeString___s_category)
      {
        v4 = __UILogCategoryGetNode("Assert", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
        atomic_store(v4, (unint64_t *)&KBStarTypeString___s_category);
      }
      v5 = *(NSObject **)(v4 + 8);
      if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v8 = 0;
        _os_log_impl(&dword_185066000, v5, OS_LOG_TYPE_ERROR, "Must call KBStarTypeStringWithTVLinearKeyboardLayout(...) on tvOS.", v8, 2u);
      }
    }
    return &stru_1E16EDF20;
  }
  else
  {
    switch(a2)
    {
      case 3:
        goto LABEL_18;
      case 4:
      case 11:
        result = CFSTR("NumberPad");
        break;
      case 5:
        result = CFSTR("PhonePad");
        break;
      case 6:
        goto LABEL_19;
      case 7:
        goto LABEL_20;
      case 8:
        result = CFSTR("DecimalPad");
        break;
      case 9:
        goto LABEL_21;
      case 10:
        goto LABEL_17;
      default:
        goto LABEL_13;
    }
  }
  return result;
}

void sub_1854B4EF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _UIKBTrimKBStarName_iOS(void *a1)
{
  void *v1;

  v1 = (void *)objc_msgSend(a1, "mutableCopy");
  objc_msgSend(v1, "replaceOccurrencesOfString:withString:options:range:", CFSTR("_GeometrySet"), &stru_1E16EDF20, 0, 0, objc_msgSend(v1, "length"));
  objc_msgSend(v1, "replaceOccurrencesOfString:withString:options:range:", CFSTR("-Keyset"), &stru_1E16EDF20, 0, 0, objc_msgSend(v1, "length"));
  objc_msgSend(v1, "replaceOccurrencesOfString:withString:options:range:", CFSTR("-Display"), &stru_1E16EDF20, 0, 0, objc_msgSend(v1, "length"));
  objc_msgSend(v1, "replaceOccurrencesOfString:withString:options:range:", CFSTR("Wildcat-"), &stru_1E16EDF20, 0, 0, objc_msgSend(v1, "length"));
  return v1;
}

void sub_1854B6DD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48)
{
  _Block_object_dispose(&a48, 8);
  _Unwind_Resume(a1);
}

void sub_1854B71BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a22, 8);
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

void sub_1854B7978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;

  _Block_object_dispose(&a34, 8);
  _Block_object_dispose((const void *)(v34 - 200), 8);
  _Block_object_dispose((const void *)(v34 - 168), 8);
  _Block_object_dispose((const void *)(v34 - 136), 8);
  _Unwind_Resume(a1);
}

void ___fixAppLayoutAmbiguityIfNecessary_block_invoke()
{
  void *v0;
  id v1;

  if ((dyld_program_sdk_at_least() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
    v1 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "bundleIdentifier");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    byte_1ECD7B579 = objc_msgSend(v0, "isEqualToString:", CFSTR("com.outerspaceapps.itranslate"));

  }
}

int UIApplicationMain(int argc, char **argv, NSString *principalClassName, NSString *delegateClassName)
{
  NSString *v7;
  NSString *v8;
  char *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  _Unwind_Exception *v14;
  _QWORD v15[5];
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v7 = principalClassName;
  v8 = delegateClassName;
  v9 = getenv("ActivePrewarm");
  if (v9 && *v9 == 49)
  {
    v16 = 0;
    v17 = &v16;
    v18 = 0x2050000000;
    v10 = (void *)qword_1EDDC8418;
    v19 = qword_1EDDC8418;
    if (!qword_1EDDC8418)
    {
      v15[0] = MEMORY[0x1E0C809B0];
      v15[1] = 3221225472;
      v15[2] = __get_OSPrewarmSchedulerClass_block_invoke;
      v15[3] = &unk_1E16B14C0;
      v15[4] = &v16;
      __get_OSPrewarmSchedulerClass_block_invoke((uint64_t)v15);
      v10 = (void *)v17[3];
    }
    v11 = objc_retainAutorelease(v10);
    _Block_object_dispose(&v16, 8);
    objc_msgSend(v11, "prewarmSuspend");
  }
  kdebug_trace();
  v12 = entr_act_begin();
  v13 = (void *)MEMORY[0x186DC9484](v12);
  _UIApplicationMainPreparations(argc, (uint64_t)argv, v7, v8);
  objc_autoreleasePoolPop(v13);
  objc_msgSend((id)UIApp, "_run");
  v14 = (_Unwind_Exception *)abort_report_np();
  _Block_object_dispose(&v16, 8);
  _Unwind_Resume(v14);
}

NSString *__cdecl NSStringFromCGRect(CGRect rect)
{
  return (NSString *)(id)CFStringCreateWithFormat(0, 0, CFSTR("{{%.*g, %.*g}, {%.*g, %.*g}}"), 17, *(_QWORD *)&rect.origin.x, 17, *(_QWORD *)&rect.origin.y, 17, *(_QWORD *)&rect.size.width, 17, *(_QWORD *)&rect.size.height);
}

void sub_1854BDE3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
  _Block_object_dispose(&a47, 8);
  _Unwind_Resume(a1);
}

void sub_1854C049C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL _UIApplicationWaitForBackgroundAssertionsToFlush()
{
  NSObject *v0;
  uint64_t v1;
  _QWORD block[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  void (*v8)(uint64_t);
  id v9;

  v4 = 0;
  v5 = &v4;
  v6 = 0x3032000000;
  v7 = __Block_byref_object_copy__98;
  v8 = __Block_byref_object_dispose__98;
  v9 = 0;
  +[_UIBackgroundTaskInfo backgroundTaskAssertionQueue](_UIBackgroundTaskInfo, "backgroundTaskAssertionQueue");
  v0 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = ___UIApplicationWaitForBackgroundAssertionsToFlush_block_invoke;
  block[3] = &unk_1E16B14C0;
  block[4] = &v4;
  dispatch_sync(v0, block);

  v1 = v5[5];
  if (v1)
    objc_msgSend((id)v5[5], "acquire");
  _Block_object_dispose(&v4, 8);

  return v1 != 0;
}

void sub_1854C0580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _getRestorationRetryCountAndUpdateIfNecessary(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  char v9;

  v1 = a1;
  v2 = 1;
  v9 = 1;
  _getRestorationInProgressDictionary(v1, 1, (BOOL *)&v9);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "objectForKey:", CFSTR("kRestorationTriesLeft"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "integerValue");
    v2 = v6 - 1;

    if (v9)
    {
      if (v6 >= 2)
      {
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", v2);
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "setObject:forKey:", v7, CFSTR("kRestorationTriesLeft"));

        if ((_updateRestorationInProgressFile(v1, v4) & 1) == 0)
        {
          NSLog(CFSTR("Warning: Unable to update the state restoration marker file, skipping state restoration. "));
          v2 = 0;
        }
      }
    }
  }

  return v2;
}

void sub_1854C1BD8(void *a1, int a2)
{
  id v4;

  objc_end_catch();
  if (a2 == 1)
  {
    v4 = objc_begin_catch(a1);
    NSLog(CFSTR("Exception occurred restoring state %@"), v4);
    byte_1EDDC801B = 0;
    objc_msgSend(v4, "raise");

    objc_end_catch();
    JUMPOUT(0x1854C1ADCLL);
  }
  JUMPOUT(0x1854C1D38);
}

void sub_1854C1BF0(_Unwind_Exception *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v36;
  uint64_t v37;
  id v38;
  unint64_t v39;
  NSObject *v40;

  if (a2 == 1)
  {
    v38 = objc_begin_catch(exc_buf);
    v39 = qword_1EDDC83C0;
    if (!qword_1EDDC83C0)
    {
      v39 = __UILogCategoryGetNode("ApplicationStateRestoration", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
      atomic_store(v39, (unint64_t *)&qword_1EDDC83C0);
    }
    v40 = *(NSObject **)(v39 + 8);
    if (os_log_type_enabled(v40, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)(v37 - 240) = 138543362;
      *(_QWORD *)(v36 + 4) = v38;
      _os_log_impl(&dword_185066000, v40, OS_LOG_TYPE_ERROR, "Exception occurred reading archived restorable state: %{public}@", (uint8_t *)(v37 - 240), 0xCu);
    }

    objc_end_catch();
    JUMPOUT(0x1854C1AF0);
  }
  _Unwind_Resume(exc_buf);
}

void sub_1854C1D30()
{
  objc_end_catch();
  JUMPOUT(0x1854C1D38);
}

void ____isOldFaceBook_block_invoke()
{
  void *v0;
  id v1;

  if ((dyld_program_sdk_at_least() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
    v1 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "bundleIdentifier");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    byte_1ECD78E12 = objc_msgSend(CFSTR("com.facebook.Facebook"), "isEqualToString:", v0);

  }
}

void sub_1854C51F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  uint64_t v11;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v11 - 144));
  _Unwind_Resume(a1);
}

void sub_1854C6680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  uint64_t v35;

  _Block_object_dispose(&a35, 8);
  _Block_object_dispose((const void *)(v35 - 176), 8);
  _Unwind_Resume(a1);
}

__CFString *stringForActivationStyle(unint64_t a1)
{
  unint64_t v3;
  NSObject *v4;
  NSObject *v5;
  uint8_t buf[4];
  unint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  if (a1 < 3)
    return off_1E16C4FE8[a1];
  if (os_variant_has_internal_diagnostics())
  {
    __UIFaultDebugAssertLog();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 134217984;
      v7 = a1;
      _os_log_fault_impl(&dword_185066000, v5, OS_LOG_TYPE_FAULT, "Unknown feedback generator activation style: %ld", buf, 0xCu);
    }

  }
  else
  {
    v3 = stringForActivationStyle___s_category;
    if (!stringForActivationStyle___s_category)
    {
      v3 = __UILogCategoryGetNode("Assert", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
      atomic_store(v3, (unint64_t *)&stringForActivationStyle___s_category);
    }
    v4 = *(NSObject **)(v3 + 8);
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 134217984;
      v7 = a1;
      _os_log_impl(&dword_185066000, v4, OS_LOG_TYPE_ERROR, "Unknown feedback generator activation style: %ld", buf, 0xCu);
    }
  }
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(unknown style: %ld)"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1854C7094(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t _engineClassSupportsAllIndividualFeedbacks(void *a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  int v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v3 = a2;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v13;
    while (2)
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v13 != v6)
          objc_enumerationMutation(v3);
        if (objc_msgSend(a1, "_supportsPlayingIndividualFeedback:", *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * i), (_QWORD)v12))
        {
          objc_msgSend(a1, "sharedEngine");
          v8 = (void *)objc_claimAutoreleasedReturnValue();
          v9 = objc_msgSend(v8, "isEnabled");

          if (v9)
            continue;
        }
        v10 = 0;
        goto LABEL_13;
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      v10 = 1;
      if (v5)
        continue;
      break;
    }
  }
  else
  {
    v10 = 1;
  }
LABEL_13:

  return v10;
}

id _coreHapticsEventTypeForEffectiveEventType(uint64_t a1, int a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v8;
  NSObject *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  if (a1 <= 20308)
  {
    if (a1 <= 15712)
    {
      if ((unint64_t)(a1 - 8021) >= 3 && (unint64_t)(a1 - 11093) >= 3)
      {
        v3 = -14165;
LABEL_10:
        if ((unint64_t)(a1 + v3) >= 3)
          goto LABEL_39;
      }
LABEL_30:
      getCHHapticEventTypeHapticTransient();
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      return v4;
    }
    if (a1 > 16480)
    {
      if ((unint64_t)(a1 - 17237) < 3)
        goto LABEL_30;
      if (a1 == 16481)
        goto LABEL_37;
      v5 = 16737;
    }
    else
    {
      if (a1 == 15713 || a1 == 15969)
        goto LABEL_37;
      v5 = 16225;
    }
    if (a1 != v5)
      goto LABEL_39;
LABEL_37:
    getCHHapticEventTypeHapticContinuous();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    return v4;
  }
  if (a1 > 29524)
  {
    if (a1 <= 32554)
    {
      if ((unint64_t)(a1 - 29525) < 3)
        goto LABEL_30;
      if (a1 == 32512)
        goto LABEL_28;
      if (a1 == 32513)
      {
        getCHHapticEventTypeAudioContinuous();
        v4 = (void *)objc_claimAutoreleasedReturnValue();
        return v4;
      }
      goto LABEL_39;
    }
    if (a1 <= 32556)
    {
      if (a1 == 32555)
        getCHHapticEventTypeAudioClick();
      else
        getCHHapticEventTypeWheelsOfTime();
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      return v4;
    }
    if (a1 == 32639)
      goto LABEL_28;
    if (a1 != 32610)
    {
      v6 = 32557;
      goto LABEL_27;
    }
    goto LABEL_37;
  }
  if (a1 <= 26452)
  {
    if ((unint64_t)(a1 - 20309) >= 3)
    {
      v3 = -23381;
      goto LABEL_10;
    }
    goto LABEL_30;
  }
  if ((unint64_t)(a1 - 26453) < 3)
    goto LABEL_30;
  v6 = 29485;
LABEL_27:
  if (a1 == v6)
  {
LABEL_28:
    getCHHapticEventTypeAudioCustom();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    return v4;
  }
LABEL_39:
  v4 = 0;
  if (!a2 || _UIFeedbackLoggingDisabled)
    return v4;
  v8 = _coreHapticsEventTypeForEffectiveEventType___s_category;
  if (!_coreHapticsEventTypeForEffectiveEventType___s_category)
  {
    v8 = __UILogCategoryGetNode("Feedback", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
    atomic_store(v8, (unint64_t *)&_coreHapticsEventTypeForEffectiveEventType___s_category);
  }
  v9 = *(NSObject **)(v8 + 8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
  {
    v10 = 134217984;
    v11 = a1;
    _os_log_impl(&dword_185066000, v9, OS_LOG_TYPE_ERROR, "Cannot convert UIFeedbackHapticEventType (%ld) to CHHapticEventType", (uint8_t *)&v10, 0xCu);
  }
  return 0;
}

void getCHHapticEventTypeHapticTransient()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getCHHapticEventTypeHapticTransientSymbolLoc_ptr;
  v8 = getCHHapticEventTypeHapticTransientSymbolLoc_ptr;
  if (!getCHHapticEventTypeHapticTransientSymbolLoc_ptr)
  {
    v1 = CoreHapticsLibrary_1();
    v0 = (id *)dlsym(v1, "CHHapticEventTypeHapticTransient");
    v6[3] = (uint64_t)v0;
    getCHHapticEventTypeHapticTransientSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticEventType getCHHapticEventTypeHapticTransient(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 40, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1854C8064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getCHHapticEventParameterIDHapticIntensity()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getCHHapticEventParameterIDHapticIntensitySymbolLoc_ptr;
  v8 = getCHHapticEventParameterIDHapticIntensitySymbolLoc_ptr;
  if (!getCHHapticEventParameterIDHapticIntensitySymbolLoc_ptr)
  {
    v1 = CoreHapticsLibrary_1();
    v0 = (id *)dlsym(v1, "CHHapticEventParameterIDHapticIntensity");
    v6[3] = (uint64_t)v0;
    getCHHapticEventParameterIDHapticIntensitySymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticEventParameterID getCHHapticEventParameterIDHapticIntensity(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 49, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1854C8D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getCHHapticEventParameterIDHapticSharpness()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getCHHapticEventParameterIDHapticSharpnessSymbolLoc_ptr;
  v8 = getCHHapticEventParameterIDHapticSharpnessSymbolLoc_ptr;
  if (!getCHHapticEventParameterIDHapticSharpnessSymbolLoc_ptr)
  {
    v1 = CoreHapticsLibrary_1();
    v0 = (id *)dlsym(v1, "CHHapticEventParameterIDHapticSharpness");
    v6[3] = (uint64_t)v0;
    getCHHapticEventParameterIDHapticSharpnessSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticEventParameterID getCHHapticEventParameterIDHapticSharpness(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 50, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1854C8E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getCHHapticEventParameterIDReleaseTime()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getCHHapticEventParameterIDReleaseTimeSymbolLoc_ptr;
  v8 = getCHHapticEventParameterIDReleaseTimeSymbolLoc_ptr;
  if (!getCHHapticEventParameterIDReleaseTimeSymbolLoc_ptr)
  {
    v1 = CoreHapticsLibrary_1();
    v0 = (id *)dlsym(v1, "CHHapticEventParameterIDReleaseTime");
    v6[3] = (uint64_t)v0;
    getCHHapticEventParameterIDReleaseTimeSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticEventParameterID getCHHapticEventParameterIDReleaseTime(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 54, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1854C9A0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getCHHapticEventParameterIDDecayTime()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getCHHapticEventParameterIDDecayTimeSymbolLoc_ptr;
  v8 = getCHHapticEventParameterIDDecayTimeSymbolLoc_ptr;
  if (!getCHHapticEventParameterIDDecayTimeSymbolLoc_ptr)
  {
    v1 = CoreHapticsLibrary_1();
    v0 = (id *)dlsym(v1, "CHHapticEventParameterIDDecayTime");
    v6[3] = (uint64_t)v0;
    getCHHapticEventParameterIDDecayTimeSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticEventParameterID getCHHapticEventParameterIDDecayTime(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 53, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1854C9B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getCHHapticEventParameterIDAttackTime()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getCHHapticEventParameterIDAttackTimeSymbolLoc_ptr;
  v8 = getCHHapticEventParameterIDAttackTimeSymbolLoc_ptr;
  if (!getCHHapticEventParameterIDAttackTimeSymbolLoc_ptr)
  {
    v1 = CoreHapticsLibrary_1();
    v0 = (id *)dlsym(v1, "CHHapticEventParameterIDAttackTime");
    v6[3] = (uint64_t)v0;
    getCHHapticEventParameterIDAttackTimeSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticEventParameterID getCHHapticEventParameterIDAttackTime(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 52, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1854C9BFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getCHHapticEventParameterIDAudioVolume()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getCHHapticEventParameterIDAudioVolumeSymbolLoc_ptr;
  v8 = getCHHapticEventParameterIDAudioVolumeSymbolLoc_ptr;
  if (!getCHHapticEventParameterIDAudioVolumeSymbolLoc_ptr)
  {
    v1 = CoreHapticsLibrary_1();
    v0 = (id *)dlsym(v1, "CHHapticEventParameterIDAudioVolume");
    v6[3] = (uint64_t)v0;
    getCHHapticEventParameterIDAudioVolumeSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticEventParameterID getCHHapticEventParameterIDAudioVolume(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 57, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1854C9CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getCHHapticEventParameterIDAudioPitch()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getCHHapticEventParameterIDAudioPitchSymbolLoc_ptr;
  v8 = getCHHapticEventParameterIDAudioPitchSymbolLoc_ptr;
  if (!getCHHapticEventParameterIDAudioPitchSymbolLoc_ptr)
  {
    v1 = CoreHapticsLibrary_1();
    v0 = (id *)dlsym(v1, "CHHapticEventParameterIDAudioPitch");
    v6[3] = (uint64_t)v0;
    getCHHapticEventParameterIDAudioPitchSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticEventParameterID getCHHapticEventParameterIDAudioPitch(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 58, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_1854C9DEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

UIColor __swiftcall UIListContentConfiguration.ImageProperties.resolvedTintColor(for:)(UIColor a1)
{
  uint64_t v1;
  objc_class *v2;
  NSString *v3;
  NSString *v4;
  UIColor result;

  v2 = (objc_class *)objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_resolvedTintColorForTintColor_, a1.super.isa);
  result._cachedStyleString = v4;
  result._systemColorName = v3;
  result.super.isa = v2;
  return result;
}

id _UIKeyboardInputSessionChangeLog()
{
  if (_UIKeyboardInputSessionChangeLog_onceToken != -1)
    dispatch_once(&_UIKeyboardInputSessionChangeLog_onceToken, &__block_literal_global_12_3);
  return (id)_UIKeyboardInputSessionChangeLog_log;
}

__CFString *_delegateShortDescr(void *a1)
{
  void *v1;
  id v2;
  __CFString *v3;

  if (a1)
  {
    v1 = (void *)MEMORY[0x1E0CB3940];
    v2 = a1;
    objc_msgSend(v1, "stringWithFormat:", CFSTR("<%@: %p>"), objc_opt_class(), v2);
    v3 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v3 = CFSTR("(nil)");
  }
  return v3;
}

double _UIKBRT_ResetSystemUptimeOnResume()
{
  double v0;
  double result;
  id v2;

  objc_msgSend(MEMORY[0x1E0CB3898], "processInfo");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "systemUptime");
  *(double *)&sSystemUptimeFromAbsoluteTimeDiff = v0 - CFAbsoluteTimeGetCurrent();

  return result;
}

id _UIResponderTargetForActionWithTestBlock(void *a1, const char *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  uint64_t (**v9)(id, id, const char *, id);
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  int v15;
  NSObject *v16;
  id v17;
  _BOOL4 v18;
  uint64_t v19;
  void *v20;
  NSObject *v21;
  NSObject *v22;
  id v23;
  id v24;
  void *v25;
  NSObject *v26;
  id v27;
  NSObject *v28;
  id v29;
  NSObject *v30;
  id v31;
  void *v32;
  void *v33;
  NSObject *v34;
  id v35;
  NSObject *v36;
  id v37;
  NSObject *v38;
  id v39;
  NSObject *v40;
  id v41;
  id v42;
  void *v43;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  id v52;
  void *v53;
  void *v54;
  id v55;
  void *v56;
  id v57;
  void *v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  void *v63;
  id v64;
  void *context;
  uint8_t buf[4];
  id v67;
  __int16 v68;
  id v69;
  __int16 v70;
  void *v71;
  uint64_t v72;

  v72 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a3;
  v9 = a4;
  if (!v7)
  {
    v11 = 0;
    goto LABEL_61;
  }
  if (os_log_type_enabled(MEMORY[0x1E0C81030], OS_LOG_TYPE_DEBUG))
  {
    _simpleObjectDescription(v7);
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    _selectorDescription(a2);
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412546;
    v67 = v45;
    v68 = 2112;
    v69 = v46;
    _os_log_debug_impl(&dword_185066000, MEMORY[0x1E0C81030], OS_LOG_TYPE_DEBUG, "Begin traversal into %@ for %@", buf, 0x16u);

  }
  if (qword_1ECD7D378 != -1)
    dispatch_once(&qword_1ECD7D378, &__block_literal_global_23_0);
  context = (void *)MEMORY[0x186DC9484]();
  if (objc_msgSend((id)qword_1ECD7D368, "containsObject:", v7))
  {
    if (os_log_type_enabled(MEMORY[0x1E0C81030], OS_LOG_TYPE_DEBUG))
    {
      _simpleObjectDescription(v7);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v67 = v10;
      _os_log_debug_impl(&dword_185066000, MEMORY[0x1E0C81030], OS_LOG_TYPE_DEBUG, "We have already seen this object %@ so return nil.", buf, 0xCu);

    }
  }
  else
  {
    objc_msgSend((id)qword_1ECD7D368, "addObject:", v7);
  }
  v12 = qword_1ECD7D380++;
  if (os_log_type_enabled(MEMORY[0x1E0C81030], OS_LOG_TYPE_INFO)
    && !v12
    && os_log_type_enabled(MEMORY[0x1E0C81030], OS_LOG_TYPE_INFO))
  {
    _selectorDescription(a2);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    _simpleObjectDescription(v7);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412546;
    v67 = v13;
    v68 = 2112;
    v69 = v14;
    _os_log_impl(&dword_185066000, MEMORY[0x1E0C81030], OS_LOG_TYPE_INFO, "Begin search for target for action %@ starting from target %@", buf, 0x16u);

  }
  v15 = v9[2](v9, v7, a2, v8);
  v16 = MEMORY[0x1E0C81030];
  v17 = MEMORY[0x1E0C81030];
  v18 = os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG);
  if (v15)
  {
    if (v18)
    {
      _simpleObjectDescription(v7);
      v50 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v67 = v50;
      _os_log_debug_impl(&dword_185066000, MEMORY[0x1E0C81030], OS_LOG_TYPE_DEBUG, "%@ passes the test. Target found.", buf, 0xCu);

    }
    v11 = v7;
    goto LABEL_54;
  }
  if (v18)
  {
    _simpleObjectDescription(v7);
    v51 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412290;
    v67 = v51;
    _os_log_debug_impl(&dword_185066000, MEMORY[0x1E0C81030], OS_LOG_TYPE_DEBUG, "%@ failed the test. Finding the next target...", buf, 0xCu);

  }
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v7, "_nextResponderUsingTraversalStrategy:", qword_1ECD7D370);
    v19 = objc_claimAutoreleasedReturnValue();
LABEL_25:
    v20 = (void *)v19;
    goto LABEL_27;
  }
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v7, "nextResponder");
    v19 = objc_claimAutoreleasedReturnValue();
    goto LABEL_25;
  }
  v20 = 0;
LABEL_27:
  v21 = v16;
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEBUG))
  {
    _selectorDescription(a2);
    v52 = (id)objc_claimAutoreleasedReturnValue();
    _simpleObjectDescription(v20);
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412546;
    v67 = v52;
    v68 = 2112;
    v69 = v53;
    _os_log_debug_impl(&dword_185066000, MEMORY[0x1E0C81030], OS_LOG_TYPE_DEBUG, "...next target for %@ is %@", buf, 0x16u);

  }
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    if (!objc_msgSend((id)_MergedGlobals_996, "containsObject:", v20))
    {
      objc_msgSend((id)_MergedGlobals_996, "addObject:", v20);
      v30 = MEMORY[0x1E0C81030];
      v31 = MEMORY[0x1E0C81030];
      if (os_log_type_enabled(v30, OS_LOG_TYPE_DEBUG))
      {
        _simpleObjectDescription(v20);
        v57 = (id)objc_claimAutoreleasedReturnValue();
        _selectorDescription(a2);
        v58 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v67 = v57;
        v68 = 2112;
        v69 = v58;
        _os_log_debug_impl(&dword_185066000, MEMORY[0x1E0C81030], OS_LOG_TYPE_DEBUG, "Calling targetForAction:withSender: on %@ for %@", buf, 0x16u);

      }
      v32 = (void *)MEMORY[0x186DC9484]();
      objc_msgSend(v20, "targetForAction:withSender:", a2, v8);
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      v34 = MEMORY[0x1E0C81030];
      v35 = MEMORY[0x1E0C81030];
      if (os_log_type_enabled(v34, OS_LOG_TYPE_DEBUG))
      {
        _simpleObjectDescription(v20);
        v64 = (id)objc_claimAutoreleasedReturnValue();
        _simpleObjectDescription(v33);
        v59 = (id)objc_claimAutoreleasedReturnValue();
        _selectorDescription(a2);
        v60 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412802;
        v67 = v64;
        v68 = 2112;
        v69 = v59;
        v70 = 2112;
        v71 = v60;
        _os_log_debug_impl(&dword_185066000, MEMORY[0x1E0C81030], OS_LOG_TYPE_DEBUG, "The last call to targetForAction:withSender: on %@ returned %@ for %@", buf, 0x20u);

      }
      if (v33 && v9[2](v9, v33, a2, v8))
      {
        v11 = v33;
        v36 = MEMORY[0x1E0C81030];
        v37 = MEMORY[0x1E0C81030];
        if (os_log_type_enabled(v36, OS_LOG_TYPE_DEBUG))
        {
          _simpleObjectDescription(v11);
          v63 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412290;
          v67 = v63;
          _os_log_debug_impl(&dword_185066000, MEMORY[0x1E0C81030], OS_LOG_TYPE_DEBUG, "%@ passes the test. Target found.", buf, 0xCu);

        }
      }
      else
      {
        v38 = MEMORY[0x1E0C81030];
        v39 = MEMORY[0x1E0C81030];
        if (os_log_type_enabled(v38, OS_LOG_TYPE_DEBUG))
        {
          _simpleObjectDescription(v33);
          v61 = (id)objc_claimAutoreleasedReturnValue();
          _simpleObjectDescription(v20);
          v62 = (void *)objc_claimAutoreleasedReturnValue();
          *(_DWORD *)buf = 138412546;
          v67 = v61;
          v68 = 2112;
          v69 = v62;
          _os_log_debug_impl(&dword_185066000, MEMORY[0x1E0C81030], OS_LOG_TYPE_DEBUG, "%@ failed the test. Traversing into %@.", buf, 0x16u);

        }
        _UIResponderTargetForActionWithTestBlock(v20, a2, v8, v9);
        v11 = (id)objc_claimAutoreleasedReturnValue();
      }

      objc_autoreleasePoolPop(v32);
      goto LABEL_53;
    }
    v22 = MEMORY[0x1E0C81030];
    v23 = MEMORY[0x1E0C81030];
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG))
    {
      _simpleObjectDescription(v20);
      v24 = (id)objc_claimAutoreleasedReturnValue();
      _selectorDescription(a2);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v67 = v24;
      v68 = 2112;
      v69 = v25;
      _os_log_debug_impl(&dword_185066000, MEMORY[0x1E0C81030], OS_LOG_TYPE_DEBUG, "Already called targetForAction:withSender: on %@ for %@ so we will not call it again.", buf, 0x16u);

    }
  }
  else
  {
    v26 = MEMORY[0x1E0C81030];
    v27 = MEMORY[0x1E0C81030];
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEBUG))
    {
      _simpleObjectDescription(v20);
      v54 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v67 = v54;
      _os_log_debug_impl(&dword_185066000, MEMORY[0x1E0C81030], OS_LOG_TYPE_DEBUG, "%@ does not respond to targetForAction:withSender:", buf, 0xCu);

    }
  }

  if (v20)
  {
    v28 = MEMORY[0x1E0C81030];
    v29 = MEMORY[0x1E0C81030];
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEBUG))
    {
      _simpleObjectDescription(v20);
      v55 = (id)objc_claimAutoreleasedReturnValue();
      _selectorDescription(a2);
      v56 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v67 = v55;
      v68 = 2112;
      v69 = v56;
      _os_log_debug_impl(&dword_185066000, MEMORY[0x1E0C81030], OS_LOG_TYPE_DEBUG, "Traversing into %@ for %@", buf, 0x16u);

    }
    _UIResponderTargetForActionWithTestBlock(v20, a2, v8, v9);
    v11 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v11 = 0;
  }
LABEL_53:

LABEL_54:
  if (!--qword_1ECD7D380)
  {
    v40 = MEMORY[0x1E0C81030];
    v41 = MEMORY[0x1E0C81030];
    if (os_log_type_enabled(v40, OS_LOG_TYPE_INFO))
    {
      _simpleObjectDescription(v11);
      v42 = (id)objc_claimAutoreleasedReturnValue();
      _selectorDescription(a2);
      v43 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v67 = v42;
      v68 = 2112;
      v69 = v43;
      _os_log_impl(&dword_185066000, MEMORY[0x1E0C81030], OS_LOG_TYPE_INFO, "Finished traversing all targets. Found target: %@ for %@", buf, 0x16u);

    }
    objc_msgSend((id)_MergedGlobals_996, "removeAllObjects");
    objc_msgSend((id)qword_1ECD7D368, "removeAllObjects");
  }
  if (os_log_type_enabled(MEMORY[0x1E0C81030], OS_LOG_TYPE_DEBUG))
  {
    _simpleObjectDescription(v7);
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    _simpleObjectDescription(v11);
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    _selectorDescription(a2);
    v49 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412802;
    v67 = v47;
    v68 = 2112;
    v69 = v48;
    v70 = 2112;
    v71 = v49;
    _os_log_debug_impl(&dword_185066000, MEMORY[0x1E0C81030], OS_LOG_TYPE_DEBUG, "End traversal for %@ - returning %@ for %@", buf, 0x20u);

  }
  objc_autoreleasePoolPop(context);
LABEL_61:

  return v11;
}

void sub_1854CDCAC()
{
  __break(1u);
}

void sub_1854CDD28(_Unwind_Exception *a1, int a2)
{
  if (a2)
  {
    objc_end_catch();
    JUMPOUT(0x1854CDD00);
  }
  _Unwind_Resume(a1);
}

void sub_1854CDD38(_Unwind_Exception *a1, int a2)
{
  if (!a2)
    _Unwind_Resume(a1);
  JUMPOUT(0x1854CDCF8);
}

void sub_1854CDD54(uint64_t a1, int a2)
{
  if (a2)
    objc_terminate();
  JUMPOUT(0x1854CDD60);
}

void sub_1854CE68C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _removePinnedItemCollectionForName(void *a1)
{
  id v1;
  NSObject *v2;
  id v3;
  _QWORD block[4];
  id v5;

  v1 = a1;
  _pasteboardCacheQueue();
  v2 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = ___removePinnedItemCollectionForName_block_invoke;
  block[3] = &unk_1E16B1B28;
  v5 = v1;
  v3 = v1;
  dispatch_sync(v2, block);

}

void sub_1854CE910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  id *v16;
  id *v17;
  uint64_t v18;

  objc_destroyWeak(v17);
  _Block_object_dispose(&a16, 8);
  objc_destroyWeak(v16);
  objc_destroyWeak((id *)(v18 - 40));
  _Unwind_Resume(a1);
}

void sub_1854CEDA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1854D192C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

const __CFString *UIApplicationSceneStringForClassicMode(uint64_t a1)
{
  const __CFString *result;

  switch(a1)
  {
    case 0:
      result = CFSTR("none");
      break;
    case 1:
      result = CFSTR("phone");
      break;
    case 2:
      result = CFSTR("4\" phone");
      break;
    case 3:
      result = CFSTR("4.7\" phone");
      break;
    case 4:
      result = CFSTR("5.5\" phone");
      break;
    case 5:
      result = CFSTR("5.8\" rounded phone");
      break;
    case 6:
      result = CFSTR("6.5\" rounded phone");
      break;
    case 7:
      result = CFSTR("pad");
      break;
    case 8:
      result = CFSTR("10.5\" pad");
      break;
    case 9:
      result = CFSTR("12.9\" pad");
      break;
    case 10:
      result = CFSTR("11\" rounded pad");
      break;
    default:
      if (a1 == 100)
        result = CFSTR("originalTV");
      else
        result = 0;
      break;
  }
  return result;
}

uint64_t _UIScrollAccessorySemanticEdge(uint64_t a1, void *a2)
{
  id v3;
  void *v4;

  v3 = a2;
  v4 = v3;
  if (a1 == 5 || a1 == 3)
    a1 = (a1 == 5) ^ objc_msgSend(v3, "_shouldReverseLayoutDirectionConsideringFlippedHorizontalAxis");

  return a1;
}

uint64_t _searchBarShouldSeparateLayouts()
{
  uint64_t result;

  result = UISearchBarUsesModernAppearance();
  if ((_DWORD)result)
  {
    if (qword_1ECD7B490 != -1)
      dispatch_once(&qword_1ECD7B490, &__block_literal_global_1098);
    if (byte_1ECD7B480)
    {
      return 0;
    }
    else
    {
      LODWORD(result) = _UIInternalPreferenceUsesDefault_0(&_UIInternalPreference_UISearchBarSeparateLayouts, (uint64_t)CFSTR("UISearchBarSeparateLayouts"));
      if (byte_1ECD75EA4)
        return 1;
      else
        return result;
    }
  }
  return result;
}

void sub_1854D6CFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t UIKeyboardPredictionEnabledForCurrentInputMode()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;

  UIKeyboardGetCurrentInputMode();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  TIInputModeGetNormalizedIdentifier();
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  TIGetInputModeProperties();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *MEMORY[0x1E0DBE0B8]);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "BOOLValue");

  return v4;
}

void __sendSystemGestureLatentClientUpdate(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  void *v20;
  unint64_t v21;
  NSObject *v22;
  NSObject *v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t i;
  unint64_t v32;
  NSObject *v33;
  NSObject *v34;
  void *v35;
  id v36;
  uint64_t v37;
  const __CFString *v38;
  const __CFString *v39;
  __int128 v40;
  void *v41;
  void *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint8_t buf[4];
  id v52;
  __int16 v53;
  _QWORD *v54;
  __int16 v55;
  uint64_t v56;
  __int16 v57;
  const __CFString *v58;
  __int16 v59;
  const __CFString *v60;
  _BYTE v61[128];
  _BYTE v62[128];
  uint64_t v63;

  v63 = *MEMORY[0x1E0C80C00];
  v8 = (void *)MEMORY[0x1E0C99E20];
  objc_msgSend(a1, "_windowsAwaitingLatentSystemGestureNotificationDeliveredToEventWindow:", a2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setWithSet:", v9);
  v42 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = a2;
  v49 = 0u;
  v50 = 0u;
  v47 = 0u;
  v48 = 0u;
  objc_msgSend(a1, "allTouches");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v47, v62, 16);
  v41 = a2;
  if (v12)
  {
    v14 = v12;
    v15 = *(_QWORD *)v48;
    *(_QWORD *)&v13 = 138412546;
    v40 = v13;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v48 != v15)
          objc_enumerationMutation(v11);
        v17 = *(_QWORD **)(*((_QWORD *)&v47 + 1) + 8 * v16);
        if (v17)
          v18 = (void *)v17[45];
        else
          v18 = 0;
        v19 = v18;

        if (v19 == v10)
        {
          objc_msgSend(v17, "window");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          if (v20)
          {
            objc_msgSend(v42, "addObject:", v20);
          }
          else
          {
            v21 = qword_1ECD800B8;
            if (!qword_1ECD800B8)
            {
              v21 = __UILogCategoryGetNode("SystemGestureUpdate", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
              atomic_store(v21, (unint64_t *)&qword_1ECD800B8);
            }
            v22 = *(NSObject **)(v21 + 8);
            if (os_log_type_enabled(v22, OS_LOG_TYPE_ERROR))
            {
              v23 = v22;
              if (v17)
                v24 = (void *)v17[45];
              else
                v24 = 0;
              v25 = v24;
              *(_DWORD *)buf = v40;
              v52 = v25;
              v53 = 2112;
              v54 = v17;
              _os_log_impl(&dword_185066000, v23, OS_LOG_TYPE_ERROR, "Unexpected nil window in latent system gesture client update: windowServerHitTestWindow: %@, touch: %@", buf, 0x16u);

              v10 = v41;
            }
          }

        }
        ++v16;
      }
      while (v14 != v16);
      v26 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v47, v62, 16);
      v14 = v26;
    }
    while (v26);
  }

  v45 = 0u;
  v46 = 0u;
  v43 = 0u;
  v44 = 0u;
  v27 = v42;
  v28 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v43, v61, 16);
  if (v28)
  {
    v29 = v28;
    v30 = *(_QWORD *)v44;
    do
    {
      for (i = 0; i != v29; ++i)
      {
        if (*(_QWORD *)v44 != v30)
          objc_enumerationMutation(v27);
        objc_msgSend(*(id *)(*((_QWORD *)&v43 + 1) + 8 * i), "_setSystemGestureRecognitionIsPossible:andTouchesAreCancelled:", a3, a4, v40);
      }
      v29 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v43, v61, 16);
    }
    while (v29);
  }

  v32 = qword_1ECD800C0;
  if (!qword_1ECD800C0)
  {
    v32 = __UILogCategoryGetNode("SystemGestureUpdate", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
    atomic_store(v32, (unint64_t *)&qword_1ECD800C0);
  }
  if ((*(_BYTE *)v32 & 1) != 0)
  {
    v33 = *(NSObject **)(v32 + 8);
    if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
    {
      v34 = v33;
      v35 = (void *)objc_opt_class();
      v36 = v35;
      v37 = objc_msgSend(v27, "count");
      v38 = CFSTR("NO");
      *(_DWORD *)buf = 138413314;
      v52 = v35;
      v53 = 2048;
      if ((_DWORD)a3)
        v39 = CFSTR("YES");
      else
        v39 = CFSTR("NO");
      v54 = v41;
      if ((_DWORD)a4)
        v38 = CFSTR("YES");
      v55 = 2048;
      v56 = v37;
      v57 = 2112;
      v58 = v39;
      v59 = 2112;
      v60 = v38;
      _os_log_impl(&dword_185066000, v34, OS_LOG_TYPE_ERROR, "SystemGestureLatentClientUpdate received: eventWindow: <%@: %p>; windowsNeedingSystemGestureUpdate.count: %lu; s"
        "ystemGesturePossible: %@; touchesCancelled: %@",
        buf,
        0x34u);

    }
  }
  kdebug_trace();

}

uint64_t _usesiPadStyle()
{
  void *v0;
  uint64_t v1;

  +[UIDevice currentDevice](UIDevice, "currentDevice");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  if ((v1 & 0xFFFFFFFFFFFFFFFBLL) == 1)
    return +[UIKeyboardImpl isFloating](UIKeyboardImpl, "isFloating") ^ 1;
  else
    return 0;
}

void __getTUIKeyboardBackendControllerClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  TextInputUILibrary_0();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("TUIKeyboardBackendController");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getTUIKeyboardBackendControllerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUIKeyboardBackendControllerClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIKeyboardInputManagerClient.h"), 24, CFSTR("Unable to find class %s"), "TUIKeyboardBackendController");

    __break(1u);
  }
}

void TextInputUILibrary()
{
  void *v0;
  void *v1;
  void *v2;

  if (!TextInputUILibraryCore_frameworkLibrary)
    TextInputUILibraryCore_frameworkLibrary = _sl_dlopen();
  if (!TextInputUILibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *TextInputUILibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("UIKeyboardEmojiPopoverController.m"), 31, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

void TextInputUILibrary_0()
{
  void *v0;
  void *v1;
  void *v2;

  if (!TextInputUILibraryCore_frameworkLibrary_0)
    TextInputUILibraryCore_frameworkLibrary_0 = _sl_dlopen();
  if (!TextInputUILibraryCore_frameworkLibrary_0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *TextInputUILibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("UIKeyboardInputManagerClient.h"), 22, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

void TextInputUILibrary_1()
{
  void *v0;
  void *v1;
  void *v2;

  if (!TextInputUILibraryCore_frameworkLibrary_1)
    TextInputUILibraryCore_frameworkLibrary_1 = _sl_dlopen();
  if (!TextInputUILibraryCore_frameworkLibrary_1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *TextInputUILibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("UISystemInputAssistantViewController.m"), 97, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

void *TextInputUILibrary_2()
{
  void *v0;
  void *v2;
  void *v3;

  if (!TextInputUILibraryCore_frameworkLibrary_2)
    TextInputUILibraryCore_frameworkLibrary_2 = _sl_dlopen();
  v0 = (void *)TextInputUILibraryCore_frameworkLibrary_2;
  if (!TextInputUILibraryCore_frameworkLibrary_2)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *TextInputUILibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("UIKeyboardCandidateController.m"), 19, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void TextInputUILibrary_3()
{
  void *v0;
  void *v1;
  void *v2;

  if (!TextInputUILibraryCore_frameworkLibrary_3)
    TextInputUILibraryCore_frameworkLibrary_3 = _sl_dlopen();
  if (!TextInputUILibraryCore_frameworkLibrary_3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *TextInputUILibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("UIKeyboardLayoutStar.m"), 177, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

void sub_1854DC984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1854DE1CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _UIBuiltinTraitStoragePerformActionWithValueForTraitNamed(uint64_t a1, __CFString *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  double v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;

  if (CFSTR("_UITraitNameUserInterfaceIdiom") == a2)
  {
    if (*(_QWORD *)a1 == -1)
      v6 = 0;
    else
      v6 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v6);
    if ((void *)v6 != v9)
    {
      if (v9)
        v10 = objc_msgSend(v9, "integerValue");
      else
        v10 = -1;
      *(_QWORD *)a1 = v10;
    }
  }
  else if (CFSTR("_UITraitNameDisplayScale") == a2)
  {
    if (*(double *)(a1 + 8) == 0.0)
      v7 = 0;
    else
      v7 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:");
    v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v7);
    if ((void *)v7 != v12)
    {
      if (v12)
        objc_msgSend(v12, "doubleValue");
      else
        v13 = 0;
      *(_QWORD *)(a1 + 8) = v13;
    }
  }
  else if (CFSTR("_UITraitNameDisplayGamut") == a2)
  {
    if (*(_QWORD *)(a1 + 16) == -1)
      v8 = 0;
    else
      v8 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v8);
    if ((void *)v8 != v15)
    {
      if (v15)
        v16 = objc_msgSend(v15, "integerValue");
      else
        v16 = -1;
      *(_QWORD *)(a1 + 16) = v16;
    }
  }
  else if (CFSTR("_UITraitNameHorizontalSizeClass") == a2)
  {
    if (*(_QWORD *)(a1 + 56))
      v11 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    else
      v11 = 0;
    v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v11);
    if ((void *)v11 != v18)
    {
      if (v18)
        v18 = (void *)objc_msgSend(v18, "integerValue");
      *(_QWORD *)(a1 + 56) = v18;
    }
  }
  else if (CFSTR("_UITraitNameVerticalSizeClass") == a2)
  {
    if (*(_QWORD *)(a1 + 64))
      v14 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    else
      v14 = 0;
    v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v14);
    if ((void *)v14 != v20)
    {
      if (v20)
        v20 = (void *)objc_msgSend(v20, "integerValue");
      *(_QWORD *)(a1 + 64) = v20;
    }
  }
  else if (CFSTR("_UITraitNameTouchLevel") == a2)
  {
    if (*(_QWORD *)(a1 + 24) == -1)
      v17 = 0;
    else
      v17 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v17);
    if ((void *)v17 != v22)
    {
      if (v22)
        v23 = objc_msgSend(v22, "integerValue");
      else
        v23 = -1;
      *(_QWORD *)(a1 + 24) = v23;
    }
  }
  else if (CFSTR("_UITraitNameInteractionModel") == a2)
  {
    if (*(_QWORD *)(a1 + 32))
      v19 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:");
    else
      v19 = 0;
    v25 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v19);
    if ((void *)v19 != v25)
    {
      if (v25)
        v25 = (void *)objc_msgSend(v25, "unsignedIntegerValue");
      *(_QWORD *)(a1 + 32) = v25;
    }
  }
  else if (CFSTR("_UITraitNamePrimaryInteractionModel") == a2)
  {
    if (*(_QWORD *)(a1 + 40))
      v21 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:");
    else
      v21 = 0;
    v27 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v21);
    if ((void *)v21 != v27)
    {
      if (v27)
        v27 = (void *)objc_msgSend(v27, "unsignedIntegerValue");
      *(_QWORD *)(a1 + 40) = v27;
    }
  }
  else if (CFSTR("_UITraitNameArtworkSubtype") == a2)
  {
    if (*(_QWORD *)(a1 + 48))
      v24 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    else
      v24 = 0;
    v29 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v24);
    if ((void *)v24 != v29)
    {
      if (v29)
        v29 = (void *)objc_msgSend(v29, "integerValue");
      *(_QWORD *)(a1 + 48) = v29;
    }
  }
  else if (CFSTR("_UITraitNameUserInterfaceStyle") == a2)
  {
    if (*(_QWORD *)(a1 + 72))
      v26 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    else
      v26 = 0;
    v31 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v26);
    if ((void *)v26 != v31)
    {
      if (v31)
        v31 = (void *)objc_msgSend(v31, "integerValue");
      *(_QWORD *)(a1 + 72) = v31;
    }
  }
  else if (CFSTR("_UITraitNameUserInterfaceLayoutDirection") == a2)
  {
    if (*(_QWORD *)(a1 + 80) == -1)
      v28 = 0;
    else
      v28 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    v33 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v28);
    if ((void *)v28 != v33)
    {
      if (v33)
        v34 = objc_msgSend(v33, "integerValue");
      else
        v34 = -1;
      *(_QWORD *)(a1 + 80) = v34;
    }
  }
  else if (CFSTR("_UITraitNameForceTouchCapability") == a2)
  {
    if (*(_QWORD *)(a1 + 88))
      v30 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    else
      v30 = 0;
    v36 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v30);
    if ((void *)v30 != v36)
    {
      if (v36)
        v36 = (void *)objc_msgSend(v36, "integerValue");
      *(_QWORD *)(a1 + 88) = v36;
    }
  }
  else if (CFSTR("_UITraitNamePreferredContentSizeCategory") == a2)
  {
    if (*(_QWORD *)(a1 + 96))
      v32 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    else
      v32 = 0;
    v38 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v32);
    if ((void *)v32 != v38)
    {
      if (v38)
        v38 = (void *)objc_msgSend(v38, "integerValue");
      *(_QWORD *)(a1 + 96) = v38;
    }
  }
  else if (CFSTR("_UITraitNameDisplayCornerRadius") == a2)
  {
    if (*(double *)(a1 + 104) == -1.0)
      v35 = 0;
    else
      v35 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:");
    v40 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v35);
    if ((void *)v35 != v40)
    {
      if (v40)
        objc_msgSend(v40, "doubleValue");
      else
        v41 = -1.0;
      *(double *)(a1 + 104) = v41;
    }
  }
  else if (CFSTR("_UITraitNameLegibilityWeight") == a2)
  {
    if (*(_QWORD *)(a1 + 112) == -1)
      v37 = 0;
    else
      v37 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    v43 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v37);
    if ((void *)v37 != v43)
    {
      if (v43)
        v44 = objc_msgSend(v43, "integerValue");
      else
        v44 = -1;
      *(_QWORD *)(a1 + 112) = v44;
    }
  }
  else if (CFSTR("_UITraitNameSemanticContext") == a2)
  {
    if (*(_QWORD *)(a1 + 120))
      v39 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    else
      v39 = 0;
    v46 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v39);
    if ((void *)v39 != v46)
    {
      if (v46)
        v46 = (void *)objc_msgSend(v46, "integerValue");
      *(_QWORD *)(a1 + 120) = v46;
    }
  }
  else if (CFSTR("_UITraitNamePresentationSemanticContext") == a2)
  {
    if (*(_QWORD *)(a1 + 128))
      v42 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    else
      v42 = 0;
    v48 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v42);
    if ((void *)v42 != v48)
    {
      if (v48)
        v48 = (void *)objc_msgSend(v48, "integerValue");
      *(_QWORD *)(a1 + 128) = v48;
    }
  }
  else if (CFSTR("_UITraitNameSplitViewControllerContext") == a2)
  {
    if (*(_QWORD *)(a1 + 136) == -1)
      v45 = 0;
    else
      v45 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    v50 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v45);
    if ((void *)v45 != v50)
    {
      if (v50)
        v51 = objc_msgSend(v50, "integerValue");
      else
        v51 = -1;
      *(_QWORD *)(a1 + 136) = v51;
    }
  }
  else if (CFSTR("_UITraitNameAccessibilityContrast") == a2)
  {
    if (*(_QWORD *)(a1 + 144) == -1)
      v47 = 0;
    else
      v47 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    v53 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v47);
    if ((void *)v47 != v53)
    {
      if (v53)
        v54 = objc_msgSend(v53, "integerValue");
      else
        v54 = -1;
      *(_QWORD *)(a1 + 144) = v54;
    }
  }
  else if (CFSTR("_UITraitNameUserInterfaceLevel") == a2)
  {
    if (*(_QWORD *)(a1 + 152) == -1)
      v49 = 0;
    else
      v49 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    v56 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v49);
    if ((void *)v49 != v56)
    {
      if (v56)
        v57 = objc_msgSend(v56, "integerValue");
      else
        v57 = -1;
      *(_QWORD *)(a1 + 152) = v57;
    }
  }
  else if (CFSTR("_UITraitNameVibrancy") == a2)
  {
    if (*(_QWORD *)(a1 + 160) == -1)
      v52 = 0;
    else
      v52 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    v59 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v52);
    if ((void *)v52 != v59)
    {
      if (v59)
        v60 = objc_msgSend(v59, "integerValue");
      else
        v60 = -1;
      *(_QWORD *)(a1 + 160) = v60;
    }
  }
  else if (CFSTR("_UITraitNameUserInterfaceRenderingMode") == a2)
  {
    if (*(_QWORD *)(a1 + 168))
      v55 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    else
      v55 = 0;
    v62 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v55);
    if ((void *)v55 != v62)
    {
      if (v62)
        v62 = (void *)objc_msgSend(v62, "integerValue");
      *(_QWORD *)(a1 + 168) = v62;
    }
  }
  else if (CFSTR("_UITraitNameActiveAppearance") == a2)
  {
    if (*(_QWORD *)(a1 + 176) == -1)
      v58 = 0;
    else
      v58 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    v64 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v58);
    if ((void *)v58 != v64)
    {
      if (v64)
        v65 = objc_msgSend(v64, "integerValue");
      else
        v65 = -1;
      *(_QWORD *)(a1 + 176) = v65;
    }
  }
  else if (CFSTR("_UITraitNameFocusSystemState") == a2)
  {
    if (*(_QWORD *)(a1 + 184) == -1)
      v61 = 0;
    else
      v61 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    v67 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v61);
    if ((void *)v61 != v67)
    {
      if (v67)
        v68 = objc_msgSend(v67, "integerValue");
      else
        v68 = -1;
      *(_QWORD *)(a1 + 184) = v68;
    }
  }
  else if (CFSTR("_UITraitNameSelectionIsKey") == a2)
  {
    if (*(_QWORD *)(a1 + 192) == -1)
      v63 = 0;
    else
      v63 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    v70 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v63);
    if ((void *)v63 != v70)
    {
      if (v70)
        v71 = objc_msgSend(v70, "integerValue");
      else
        v71 = -1;
      *(_QWORD *)(a1 + 192) = v71;
    }
  }
  else if (CFSTR("_UITraitNameBacklightLuminance") == a2)
  {
    if (*(_QWORD *)(a1 + 200) == -1)
      v66 = 0;
    else
      v66 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    v72 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v66);
    if ((void *)v66 != v72)
    {
      if (v72)
        v73 = objc_msgSend(v72, "integerValue");
      else
        v73 = -1;
      *(_QWORD *)(a1 + 200) = v73;
    }
  }
  else
  {
    if (CFSTR("_UITraitNameToolbarItemPresentationSize") != a2)
      return 0;
    if (*(_QWORD *)(a1 + 208) == -1)
      v69 = 0;
    else
      v69 = objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:");
    v74 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a3, v69);
    if ((void *)v69 != v74)
    {
      if (v74)
        v75 = objc_msgSend(v74, "integerValue");
      else
        v75 = -1;
      *(_QWORD *)(a1 + 208) = v75;
    }
  }
  return 1;
}

id _AllBackdropViews()
{
  if (qword_1ECD7B6B0 != -1)
    dispatch_once(&qword_1ECD7B6B0, &__block_literal_global_642);
  return (id)qword_1ECD7B6B8;
}

void sub_1854E3C8C(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x478], 8);
  _Unwind_Resume(a1);
}

void layoutClippingView(void *a1, void *a2, int a3)
{
  id v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  double v16;
  CGFloat v17;
  double v18;
  double v19;
  double v20;
  CGFloat v21;
  double v22;
  double v23;
  uint64_t v24;
  double v28;
  CGFloat v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double MaxX;
  double v35;
  double v36;
  double v37;
  double v38;
  CGFloat v39;
  double v40;
  id v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;

  v5 = a1;
  if (v5)
  {
    v41 = v5;
    objc_msgSend(a2, "_configuredFloatableView");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "bounds");
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v14 = v13;
    objc_msgSend(v41, "superview");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "bounds");
    v17 = v16;
    v19 = v18;
    v21 = v20;
    v23 = v22;
    objc_msgSend(v15, "convertRect:fromView:", v6, v8, v10, v12, v14);
    if (a3)
    {
      v28 = CGRectGetMaxX(*(CGRect *)&v24) + 5.0;
      objc_msgSend(v6, "frame");
      v29 = CGRectGetWidth(v42) + 5.0;
      objc_msgSend(v15, "safeAreaInsets");
      v31 = v29 + v30;
      v32 = v28;
    }
    else
    {
      v33 = CGRectGetMinX(*(CGRect *)&v24) + -5.0;
      if (v33 <= 0.0)
        v32 = v33;
      else
        v32 = 0.0;
      v43.origin.x = v17;
      v43.origin.y = v19;
      v43.size.width = v21;
      v43.size.height = v23;
      v28 = CGRectGetMaxX(v43) - v33;
      v44.origin.x = v17;
      v44.origin.y = v19;
      v44.size.width = v21;
      v44.size.height = v23;
      MaxX = CGRectGetMaxX(v44);
      objc_msgSend(v6, "frame");
      v35 = MaxX - CGRectGetWidth(v45) + -5.0;
      objc_msgSend(v15, "safeAreaInsets");
      v31 = v35 - v36;
    }
    v46.origin.x = v32;
    v46.origin.y = v19;
    v46.size.width = v21;
    v46.size.height = v23;
    v37 = CGRectGetWidth(v46) - v28;
    if (v37 >= 0.0)
      v38 = v37;
    else
      v38 = 0.0;
    objc_msgSend(v41, "setFrame:", v32, v19, v38, v23);
    v47.origin.x = v17;
    v47.origin.y = v19;
    v47.size.width = v21;
    v47.size.height = v23;
    v39 = CGRectGetWidth(v47) - v31;
    v40 = v38 / v39;
    if (v39 <= 0.0)
      v40 = 1.0;
    objc_msgSend(v41, "setAlpha:", fmax(fmin(v40, 1.0), 0.0));
    objc_msgSend(v15, "layoutIfNeeded");

    v5 = v41;
  }

}

void __layoutSideBySideViewsColumnStyle_block_invoke(uint64_t a1, void *a2, void *a3, void *a4, double a5, double a6, double a7)
{
  id v13;
  id v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  double v23;
  double v24;
  double v25;
  id v26;

  v26 = a2;
  v13 = a3;
  v14 = a4;
  if (v26)
  {
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v16 = *(double *)(v15 + 24);
    if (a7 != 0.0 || *(_BYTE *)(a1 + 64))
    {
      v17 = *(double *)(a1 + 56);
      if (a7 == 0.0 && *(_BYTE *)(a1 + 64))
        *(double *)(v15 + 24) = v16 + a5;
    }
    else
    {
      *(double *)(v15 + 24) = v16 - a5;
      v16 = *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24);
      v17 = *(double *)(a1 + 56);
    }
    if (objc_msgSend(*(id *)(a1 + 32), "containsObject:", v26))
    {
      objc_msgSend(*(id *)(a1 + 40), "_keyboardAdjustment");
      v17 = v17 - v18;
    }
    v19 = v26;
    v20 = v13;
    v21 = v14;
    v22 = v21;
    if (v20)
    {
      if (a6 >= 0.0)
      {
        v23 = a5 + a6;
        v24 = *MEMORY[0x1E0C9D538];
        v25 = *(double *)(MEMORY[0x1E0C9D538] + 8);
      }
      else
      {
        v23 = a5 - a6;
        v16 = v16 + a6;
        v24 = -a6;
        v25 = 0.0;
      }
      objc_msgSend(v20, "setFrame:", v16, 0.0, v23, v17);
      v16 = v24;
      if (v22)
        goto LABEL_17;
    }
    else
    {
      v25 = 0.0;
      if (v21)
      {
LABEL_17:
        objc_msgSend(v22, "_updateControlledViewsToFrame:", v16, v25, a5, v17);
        goto LABEL_18;
      }
    }
    objc_msgSend(v19, "setFrame:", v16, v25, a5, v17);
LABEL_18:

  }
}

uint64_t ___isAdditivelyAnimatableKeyForLayer_block_invoke()
{
  id v0;
  void *v1;
  uint64_t result;

  v0 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v1 = (void *)qword_1EDDCA828;
  qword_1EDDCA828 = (uint64_t)v0;

  objc_msgSend((id)qword_1EDDCA828, "addObject:", CFSTR("bounds"));
  objc_msgSend((id)qword_1EDDCA828, "addObject:", CFSTR("position"));
  objc_msgSend((id)qword_1EDDCA828, "addObject:", CFSTR("contentsRect"));
  objc_msgSend((id)qword_1EDDCA828, "addObject:", CFSTR("contentsCenter"));
  result = dyld_program_sdk_at_least();
  if ((_DWORD)result)
    return objc_msgSend((id)qword_1EDDCA828, "addObject:", CFSTR("cornerRadius"));
  return result;
}

void sub_1854E651C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void std::__hash_table<std::__hash_value_type<long,UICollectionViewLayoutAttributes * {__strong}>,std::__unordered_map_hasher<long,std::__hash_value_type<long,UICollectionViewLayoutAttributes * {__strong}>,std::hash<long>,std::equal_to<long>,true>,std::__unordered_map_equal<long,std::__hash_value_type<long,UICollectionViewLayoutAttributes * {__strong}>,std::equal_to<long>,std::hash<long>,true>,std::allocator<std::__hash_value_type<long,UICollectionViewLayoutAttributes * {__strong}>>>::__erase_unique<long>(_QWORD *a1, unint64_t a2)
{
  uint64_t *v3;
  uint64_t *v4;
  int8x8_t v5;
  uint64_t v6;
  unint64_t v7;
  uint8x8_t v8;
  uint64_t *v9;
  uint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = std::__hash_table<std::__hash_value_type<long,UICollectionViewLayoutAttributes * {__strong}>,std::__unordered_map_hasher<long,std::__hash_value_type<long,UICollectionViewLayoutAttributes * {__strong}>,std::hash<long>,std::equal_to<long>,true>,std::__unordered_map_equal<long,std::__hash_value_type<long,UICollectionViewLayoutAttributes * {__strong}>,std::equal_to<long>,std::hash<long>,true>,std::allocator<std::__hash_value_type<long,UICollectionViewLayoutAttributes * {__strong}>>>::find<long>(a1, a2);
  if (v3)
  {
    v4 = v3;
    v5 = (int8x8_t)a1[1];
    v6 = *v3;
    v7 = v3[1];
    v8 = (uint8x8_t)vcnt_s8(v5);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      if (v7 >= *(_QWORD *)&v5)
        v7 %= *(_QWORD *)&v5;
    }
    else
    {
      v7 &= *(_QWORD *)&v5 - 1;
    }
    v9 = *(uint64_t **)(*a1 + 8 * v7);
    do
    {
      v10 = v9;
      v9 = (uint64_t *)*v9;
    }
    while (v9 != v3);
    if (v10 == a1 + 2)
      goto LABEL_20;
    v11 = v10[1];
    if (v8.u32[0] > 1uLL)
    {
      if (v11 >= *(_QWORD *)&v5)
        v11 %= *(_QWORD *)&v5;
    }
    else
    {
      v11 &= *(_QWORD *)&v5 - 1;
    }
    if (v11 != v7)
    {
LABEL_20:
      if (v6)
      {
        v12 = *(_QWORD *)(v6 + 8);
        if (v8.u32[0] > 1uLL)
        {
          v13 = *(_QWORD *)(v6 + 8);
          if (v12 >= *(_QWORD *)&v5)
            v13 = v12 % *(_QWORD *)&v5;
        }
        else
        {
          v13 = v12 & (*(_QWORD *)&v5 - 1);
        }
        if (v13 == v7)
          goto LABEL_24;
      }
      *(_QWORD *)(*a1 + 8 * v7) = 0;
      v6 = *v3;
    }
    if (!v6)
    {
LABEL_30:
      *v10 = v6;
      *v3 = 0;
      --a1[3];

      operator delete(v4);
      return;
    }
    v12 = *(_QWORD *)(v6 + 8);
LABEL_24:
    if (v8.u32[0] > 1uLL)
    {
      if (v12 >= *(_QWORD *)&v5)
        v12 %= *(_QWORD *)&v5;
    }
    else
    {
      v12 &= *(_QWORD *)&v5 - 1;
    }
    if (v12 != v7)
    {
      *(_QWORD *)(*a1 + 8 * v12) = v10;
      v6 = *v3;
    }
    goto LABEL_30;
  }
}

void sub_1854E73C0(_Unwind_Exception *a1)
{
  void *v1;
  void *v3;

  v3 = (void *)STACK[0x200];
  if (STACK[0x200])
  {
    STACK[0x208] = (unint64_t)v3;
    operator delete(v3);
  }

  _Unwind_Resume(a1);
}

void sub_1854E7E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *__p;

  if (__p)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_1854E8160(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

CFStringRef StringFromCGRect(double a1, double a2, double a3, double a4)
{
  return (id)CFStringCreateWithFormat(0, 0, CFSTR("{{%.*g, %.*g}, {%.*g, %.*g}}"), 17, *(_QWORD *)&a1, 17, *(_QWORD *)&a2, 17, *(_QWORD *)&a3, 17, *(_QWORD *)&a4);
}

id _UIKeyboardLog()
{
  if (_UIKeyboardLog_onceToken != -1)
    dispatch_once(&_UIKeyboardLog_onceToken, &__block_literal_global_8_1);
  return (id)_UIKeyboardLog_log;
}

void sub_1854EBD68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1854EC5EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL _UIViewLayerAnimationCanBeConsideredFinished(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _BOOL8 v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;

  v3 = a2;
  objc_msgSend(a1, "layer");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "animationForKey:", v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v5, "keyPath");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "valueForKeyPath:", v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (v7)
    {
      objc_msgSend(v5, "fromValue");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "presentationLayer");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "valueForKeyPath:", v6);
      v10 = (void *)objc_claimAutoreleasedReturnValue();

      v11 = 0;
      if (v8 && v10)
      {
        objc_opt_class();
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          if (objc_msgSend(v5, "isAdditive"))
          {
            objc_msgSend(v8, "CA_addValue:multipliedBy:", v8, 0xFFFFFFFFLL);
            v12 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v8, "CA_distanceToValue:", v12);
            v14 = fabs(v13);

          }
          else
          {
            objc_msgSend(v7, "CA_distanceToValue:", v8);
            v14 = fabs(v15);
          }
          if (v14 == 0.0)
          {
            v11 = 1;
          }
          else
          {
            objc_msgSend(v7, "CA_distanceToValue:", v10);
            v11 = fabs(v16) / v14 < 0.05;
          }
        }
        else
        {
          v11 = 0;
        }
      }

    }
    else
    {
      v11 = 0;
    }

  }
  else
  {
    v11 = 0;
  }

  return v11;
}

void sub_1854EDF1C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1854EE1F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCXCallObserverClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD79780)
    qword_1ECD79780 = _sl_dlopen();
  if (!qword_1ECD79780)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CallKitLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("UIDictationController.m"), 237, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("CXCallObserver");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCXCallObserverClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UIDictationController.m"), 238, CFSTR("Unable to find class %s"), "CXCallObserver");

LABEL_8:
    __break(1u);
  }
  qword_1ECD79778 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void ___removePinnedItemCollectionForName_block_invoke(uint64_t a1)
{
  _pasteboardCacheQueue_removePinnedItemCollectionForName(*(void **)(a1 + 32));
}

BOOL UIApplicationSceneDeactivationReasonMaskContainsReason(unint64_t a1, char a2)
{
  return ((1 << a2) & a1) != 0;
}

id _UIKeyboardExtendedLog()
{
  if (_UIKeyboardExtendedLog_onceToken != -1)
    dispatch_once(&_UIKeyboardExtendedLog_onceToken, &__block_literal_global_4_4);
  return (id)_UIKeyboardExtendedLog_log;
}

void sub_1854F00CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1854F1A2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getAFUIPanelClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)qword_1ECD78460;
  v7 = qword_1ECD78460;
  if (!qword_1ECD78460)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getAFUIPanelClass_block_invoke;
    v3[3] = &unk_1E16B14C0;
    v3[4] = &v4;
    __getAFUIPanelClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1854F21E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1854F46F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  id *v32;

  _Block_object_dispose(&a32, 8);
  objc_destroyWeak(v32);
  _Unwind_Resume(a1);
}

void sub_1854F5064(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1854F6390(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id a18)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void _UITableViewControllerCommonInit(void *a1)
{
  _QWORD *v1;
  int v2;
  _UIFilteredDataSource *v3;
  void *v4;
  _QWORD *v5;

  v5 = a1;
  objc_msgSend(v5, "setClearsSelectionOnViewWillAppear:", 1);
  v1 = v5;
  if (!v5[125])
  {
    v2 = dyld_program_sdk_at_least();
    v1 = v5;
    if (v2)
    {
      v3 = objc_alloc_init(_UIFilteredDataSource);
      v4 = (void *)v5[125];
      v5[125] = v3;

      v1 = v5;
    }
  }
  v1[126] = 0;

}

void SetCachedPatternColor(void *a1, const void *a2)
{
  _DWORD *v3;
  uint64_t v4;
  _DWORD *key;

  v3 = a1;
  v4 = qword_1ECD798A8;
  key = v3;
  if (a2 && !qword_1ECD798A8)
  {
    os_unfair_lock_lock(&stru_1ECD7986C);
    if (!qword_1ECD798A8)
      qword_1ECD798A8 = (uint64_t)CFDictionaryCreateMutable(0, 0, 0, MEMORY[0x1E0C9B3A0]);
    os_unfair_lock_unlock(&stru_1ECD7986C);
    v4 = qword_1ECD798A8;
    v3 = key;
  }
  if (v4)
  {
    os_unfair_lock_lock(&stru_1ECD7986C);
    if (a2)
      CFDictionarySetValue((CFMutableDictionaryRef)qword_1ECD798A8, key, a2);
    else
      CFDictionaryRemoveValue((CFMutableDictionaryRef)qword_1ECD798A8, key);
    os_unfair_lock_unlock(&stru_1ECD7986C);
    v3 = key;
    key[26] = key[26] & 0xFFFFFF7F | ((a2 != 0) << 7);
  }

}

CGColorRef createPatternColorFromImage(void *a1)
{
  id v1;
  double v2;
  id v3;
  uint64_t v4;
  CGPattern *v5;
  CGColorSpace *Pattern;
  CGColorRef v7;
  CGAffineTransform v9;

  v1 = a1;
  objc_msgSend(v1, "scale");
  memset(&v9, 0, sizeof(v9));
  CGAffineTransformMakeScale(&v9, 1.0 / v2, -1.0 / v2);
  v3 = objc_retainAutorelease(v1);
  objc_msgSend(v3, "CGImage");

  v4 = CGPatternCreateWithImage2();
  if (!v4)
    return 0;
  v5 = (CGPattern *)v4;
  Pattern = CGColorSpaceCreatePattern(0);
  v7 = CGColorCreateWithPattern(Pattern, v5, &createPatternColorFromImage_alpha);
  CGColorSpaceRelease(Pattern);
  CGPatternRelease(v5);
  return v7;
}

void _collectTransitions(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void (**v7)(id, id, _UIViewKeyValueAnimationFactoryTransition *);
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  _UIViewKeyValueAnimationFactoryTransition *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v17 = 0u;
    v18 = 0u;
    v15 = 0u;
    v16 = 0u;
    objc_msgSend(v5, "animations", 0);
    v8 = (id)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v16;
      do
      {
        for (i = 0; i != v10; ++i)
        {
          if (*(_QWORD *)v16 != v11)
            objc_enumerationMutation(v8);
          _collectTransitions(*(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * i), v6, v7);
        }
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
      }
      while (v10);
    }
LABEL_15:

    goto LABEL_16;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v8 = v5;
    if (objc_msgSend(v8, "isAdditive"))
    {
      objc_msgSend(v8, "keyPath");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "objectForKeyedSubscript:", v13);
      v14 = (_UIViewKeyValueAnimationFactoryTransition *)objc_claimAutoreleasedReturnValue();
      if (!v14)
      {
        v14 = objc_alloc_init(_UIViewKeyValueAnimationFactoryTransition);
        objc_msgSend(v6, "setObject:forKeyedSubscript:", v14, v13);
      }
      v7[2](v7, v8, v14);

    }
    goto LABEL_15;
  }
LABEL_16:

}

void sub_1854F85D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id a27)
{
  __destructor_8_s8_s16_s24_s80(&a27);
  _Unwind_Resume(a1);
}

void sub_1854F8694(_Unwind_Exception *a1)
{
  id *v1;

  __destructor_8_s8_s16_s24_s80(v1);
  _Unwind_Resume(a1);
}

void ___configureDefaultStatisticHandling_block_invoke()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (**v3)(void *, const __CFString *, id (*)());
  void (**v4)(void *, const __CFString *, id (*)());
  void (**v5)(void *, const __CFString *, id (*)());
  _QWORD v6[4];
  id v7;
  _QWORD v8[4];
  id v9;
  _QWORD aBlock[4];
  id v11;

  objc_msgSend(MEMORY[0x1E0CB3748], "strongToStrongObjectsMapTable");
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)_configureDefaultStatisticHandling_statisticInfo;
  _configureDefaultStatisticHandling_statisticInfo = v0;

  v2 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = ___configureDefaultStatisticHandling_block_invoke_17;
  aBlock[3] = &unk_1E16E8048;
  v11 = &__block_literal_global_14_8;
  v3 = (void (**)(void *, const __CFString *, id (*)()))_Block_copy(aBlock);
  v8[0] = v2;
  v8[1] = 3221225472;
  v8[2] = ___configureDefaultStatisticHandling_block_invoke_2_19;
  v8[3] = &unk_1E16E8048;
  v9 = &__block_literal_global_14_8;
  v4 = (void (**)(void *, const __CFString *, id (*)()))_Block_copy(v8);
  v6[0] = v2;
  v6[1] = 3221225472;
  v6[2] = ___configureDefaultStatisticHandling_block_invoke_3;
  v6[3] = &unk_1E16E8048;
  v7 = &__block_literal_global_14_8;
  v5 = (void (**)(void *, const __CFString *, id (*)()))_Block_copy(v6);
  v3[2](v3, CFSTR("UIButton"), _buttonTapStatisticWithSuffix_UIButton);
  v3[2](v3, CFSTR("_UIButtonBarButton"), _buttonTapStatisticWithSuffix_SubclassName);
  v3[2](v3, CFSTR("UITabBarButton"), _buttonTapStatisticWithSuffix_SubclassName);
  v3[2](v3, CFSTR("UIToolbarButton"), _buttonTapStatisticWithSuffix_SubclassName);
  v3[2](v3, CFSTR("UITableViewCellDetailDisclosureView"), _buttonTapStatisticWithSuffix_SubclassName);
  v3[2](v3, CFSTR("UITableViewCellEditControl"), _buttonTapStatisticWithSuffix_SubclassName);
  v3[2](v3, CFSTR("UITableViewCellReorderControl"), _controlTapStatisticWithSuffix_SubclassName);
  v3[2](v3, CFSTR("UITableViewCellReorderControl"), _controlTapStatisticWithSuffix_SubclassName);
  v3[2](v3, CFSTR("_UIActionSlider"), _controlTapStatisticWithSuffix_SubclassName);
  v4[2](v4, CFSTR("UIStepper"), _controlValueChangeStatisticWithSuffix_SubclassName);
  v4[2](v4, CFSTR("UIPageControl"), _controlValueChangeStatisticWithSuffix_SubclassName);
  v4[2](v4, CFSTR("UITableViewIndex"), _controlValueChangeStatisticWithSuffix_SubclassName);
  v4[2](v4, CFSTR("UIPickerView"), _controlValueChangeStatisticWithSuffix_SubclassName);
  v4[2](v4, CFSTR("UISwitch"), _controlValueChangeStatisticWithSuffix_SubclassName);
  v4[2](v4, CFSTR("UISegmentedControl"), _controlValueChangeStatisticWithSuffix_SubclassName);
  v5[2](v5, CFSTR("UISlider"), _sliderInteractionDurationStatisticWithSuffix_SubclassName);
  v5[2](v5, CFSTR("UIMovieScrubber"), _sliderInteractionDurationStatisticWithSuffix_SubclassName);

}

void ___configureDefaultStatisticHandling_block_invoke_2(uint64_t a1, void *a2, const char *a3, void (*a4)(void))
{
  NSString *v6;
  objc_class *v7;
  objc_class *v8;
  objc_method *InstanceMethod;
  const char *TypeEncoding;
  unint64_t v11;
  NSObject *v12;
  NSObject *v13;
  int v14;
  NSString *v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v6 = a2;
  v7 = NSClassFromString(v6);
  if (v7)
  {
    v8 = v7;
    InstanceMethod = class_getInstanceMethod(v7, a3);
    TypeEncoding = method_getTypeEncoding(InstanceMethod);
    class_addMethod(v8, a3, a4, TypeEncoding);
  }
  else if (os_variant_has_internal_diagnostics())
  {
    __UIFaultDebugAssertLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_FAULT))
    {
      v14 = 138412290;
      v15 = v6;
      _os_log_fault_impl(&dword_185066000, v13, OS_LOG_TYPE_FAULT, "unable to lookup class named '%@' to use for statistics", (uint8_t *)&v14, 0xCu);
    }

  }
  else
  {
    v11 = _block_invoke___s_category_11;
    if (!_block_invoke___s_category_11)
    {
      v11 = __UILogCategoryGetNode("Assert", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
      atomic_store(v11, (unint64_t *)&_block_invoke___s_category_11);
    }
    v12 = *(NSObject **)(v11 + 8);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      v14 = 138412290;
      v15 = v6;
      _os_log_impl(&dword_185066000, v12, OS_LOG_TYPE_ERROR, "unable to lookup class named '%@' to use for statistics", (uint8_t *)&v14, 0xCu);
    }
  }

}

uint64_t ___configureDefaultStatisticHandling_block_invoke_3(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t ___serverConnection_block_invoke_5()
{
  uint64_t result;

  result = objc_msgSend(MEMORY[0x1E0D6C0F0], "beginListeningToPasteboardChangeNotifications");
  _notificationStateQueue_notificationState = result;
  return result;
}

uint64_t _UIVisualEffectSubviewShouldAnimateKeyInternal(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t i;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  if ((objc_msgSend(v4, "hasPrefix:", CFSTR("filters.")) & 1) != 0)
  {
    v5 = 1;
  }
  else
  {
    v12 = 0u;
    v13 = 0u;
    v10 = 0u;
    v11 = 0u;
    v6 = v3;
    v5 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    if (v5)
    {
      v7 = *(_QWORD *)v11;
      while (2)
      {
        for (i = 0; i != v5; ++i)
        {
          if (*(_QWORD *)v11 != v7)
            objc_enumerationMutation(v6);
          if ((objc_msgSend(*(id *)(*((_QWORD *)&v10 + 1) + 8 * i), "shouldAnimateProperty:", v4, (_QWORD)v10) & 1) != 0)
          {
            v5 = 1;
            goto LABEL_13;
          }
        }
        v5 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
        if (v5)
          continue;
        break;
      }
    }
LABEL_13:

  }
  return v5;
}

void UIKeyboardSetCurrentInputMode(void *a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = a1;
  +[UIKeyboardInputModeController sharedInputModeController](UIKeyboardInputModeController, "sharedInputModeController");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "inputModeWithIdentifier:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "updateCurrentInputMode:", v2);
}

double _UIViewBaselineToBaselineSpacing(void *a1, void *a2)
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;

  objc_msgSend(a2, "lineHeight");
  v5 = v4;
  objc_msgSend(a2, "leading");
  v7 = v5 + v6;
  objc_msgSend(a1, "lineHeight");
  v9 = v8;
  objc_msgSend(a1, "leading");
  if (vabdd_f64(v9 + v10, v7) > 2.22044605e-16)
  {
    objc_msgSend(a2, "lineHeight");
    v12 = v11;
    objc_msgSend(a2, "descender");
    v14 = v12 + v13;
    objc_msgSend(a1, "descender");
    return v14 - v15;
  }
  return v7;
}

void sub_1854FDF18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getTUISystemInputAssistantLayoutStandardClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  TextInputUILibrary_1();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("TUISystemInputAssistantLayoutStandard");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getTUISystemInputAssistantLayoutStandardClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUISystemInputAssistantLayoutStandardClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UISystemInputAssistantViewController.m"), 99, CFSTR("Unable to find class %s"), "TUISystemInputAssistantLayoutStandard");

    __break(1u);
  }
}

uint64_t UIKeyboardUIPreferStringOverImageForInputMode(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  int v4;
  uint64_t v5;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;

  v1 = a1;
  TIInputModeGetRegion();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  TIInputModeGetBaseLanguage();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isEqualToString:", CFSTR("en"));

  if (!v4
    || (objc_msgSend(v2, "isEqualToString:", CFSTR("GB")) & 1) != 0
    || (objc_msgSend(v2, "isEqualToString:", CFSTR("JP")) & 1) != 0)
  {
    v5 = 0;
  }
  else
  {
    +[UIKeyboardImpl keyboardScreen](UIKeyboardImpl, "keyboardScreen");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    +[UIKeyboard activeKeyboard](UIKeyboard, "activeKeyboard");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    +[UIKBScreenTraits traitsWithScreen:orientation:](UIKBScreenTraits, "traitsWithScreen:orientation:", v7, objc_msgSend(v8, "interfaceOrientation"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    v10 = UIKeyboardComputeKeyboardIdiomFromScreenTraits(v9, objc_msgSend(v9, "idiom"), 0);
    KBStarLayoutString(v1);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = v11;
    if (v10 == 23)
    {
      if ((objc_msgSend(v11, "isEqualToString:", CFSTR("AZERTY")) & 1) != 0
        || (objc_msgSend(v12, "isEqualToString:", CFSTR("QWERTZ")) & 1) != 0)
      {
        v5 = 0;
      }
      else
      {
        v5 = objc_msgSend(v12, "isEqualToString:", CFSTR("QWERTY-ISO")) ^ 1;
      }
    }
    else
    {
      v5 = 1;
    }

  }
  return v5;
}

double UIEdgeInsetsRotate(double a1, double a2, double a3, double a4, double a5)
{
  if (fabs(a5 + -1.57079633) >= 0.00000011920929)
  {
    if (fabs(a5 + -3.14159265) >= 0.00000011920929)
    {
      if (fabs(a5 + 1.57079633) >= 0.00000011920929)
        return a1;
      else
        return a4;
    }
    else
    {
      return a3;
    }
  }
  return a2;
}

void ___searchBarShouldSeparateLayouts_block_invoke()
{
  char v0;
  id v1;

  if ((dyld_program_sdk_at_least() & 1) == 0)
  {
    _UIMainBundleIdentifier();
    v1 = (id)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v1, "isEqualToString:", CFSTR("com.gasbuddymobile.gasbuddy")) & 1) != 0)
      v0 = 1;
    else
      v0 = objc_msgSend(v1, "isEqualToString:", CFSTR("com.forever21.Forever21"));
    byte_1ECD7B480 = v0;

  }
}

BOOL _UIAccessibilityFullKeyboardAccessEnabled()
{
  return _AXSFullKeyboardAccessEnabled() != 0;
}

uint64_t __displayLinksWillFire_block_invoke(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 32);
  *(_DWORD *)(v1 + 448) = 2;
  return _UIUpdateInputSetInputChanged(*(_DWORD **)(v1 + 496), v1 + 448);
}

id ___telemetryReportOffsetChange_block_invoke_2(uint64_t a1)
{
  return _telemetryOffsetChangeEvent(*(void **)(a1 + 32), *(void **)(a1 + 40), 0, *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
}

id UIKeyboardInputModeGetDecimalSeparator(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  void *v9;

  v1 = (void *)MEMORY[0x1E0C99DC8];
  v2 = a1;
  objc_msgSend(v1, "currentLocale");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  UIKeyboardInputModeGetNumericLocale(v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "numberingSystem");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "numberingSystem");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v5, "isEqualToString:", v6);

  if (v7)
    v8 = v3;
  else
    v8 = v4;
  objc_msgSend(v8, "objectForKey:", *MEMORY[0x1E0C997C8]);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

id UIKeyboardInputModeGetNumericLocale(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;

  v1 = a1;
  objc_msgSend(MEMORY[0x1E0C99DC8], "preferredLocale");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99DC8], "currentLocale");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (UIKeyboardInputModeLanguageMatchesLocaleLanguage((uint64_t)v1, v2))
  {
    v4 = v2;
LABEL_5:
    v5 = v4;
    goto LABEL_9;
  }
  if (UIKeyboardInputModeLanguageMatchesLocaleLanguage((uint64_t)v1, v3))
  {
    v4 = v3;
    goto LABEL_5;
  }
  v6 = (void *)MEMORY[0x1E0C99DC8];
  TIInputModeGetLanguageWithRegion();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "componentsFromLocaleIdentifier:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (void *)objc_msgSend(v8, "mutableCopy");

  UIKeyboardLocalizedString(CFSTR("UI-DefaultLocaleNumericID"), v1, 0, 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v10, "length"))
    objc_msgSend(v9, "setObject:forKey:", v10, CFSTR("numbers"));
  v11 = (void *)MEMORY[0x1E0C99DC8];
  objc_msgSend(MEMORY[0x1E0C99DC8], "localeIdentifierFromComponents:", v9);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "localeWithLocaleIdentifier:", v12);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_9:
  v13 = v5;

  return v13;
}

uint64_t UIKeyboardInputModeLanguageMatchesLocaleLanguage(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = a2;
  TIInputModeGetLanguageWithRegion();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  UIKeyboardGetComponentsFromLanguageIdentifier(v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v2, "localeIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  UIKeyboardGetComponentsFromLanguageIdentifier(v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = *MEMORY[0x1E0C997E8];
  objc_msgSend(v4, "objectForKey:", *MEMORY[0x1E0C997E8]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectForKey:", v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v8, "isEqualToString:", v9);

  if (v10)
  {
    v11 = *MEMORY[0x1E0C99820];
    objc_msgSend(v4, "objectForKey:", *MEMORY[0x1E0C99820]);
    v12 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "objectForKey:", v11);
    v13 = objc_claimAutoreleasedReturnValue();
    if (v12 | v13)
      v14 = objc_msgSend((id)v12, "isEqualToString:", v13);
    else
      v14 = 1;

  }
  else
  {
    v14 = 0;
  }

  return v14;
}

id UIKeyboardGetComponentsFromLanguageIdentifier(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _BYTE v6[157];
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v1 = objc_retainAutorelease(a1);
  objc_msgSend(v1, "UTF8String");
  uloc_addLikelySubtags();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v6);
  v2 = objc_claimAutoreleasedReturnValue();

  v3 = (void *)v2;
  objc_msgSend(MEMORY[0x1E0C99DC8], "componentsFromLocaleIdentifier:", v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

uint64_t UIKeyboardHas10KeyChineseKeyboard()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  void *v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v0 = (id)UIKeyboardActiveInputModes;
  v1 = objc_msgSend(v0, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v1)
  {
    v2 = v1;
    v3 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v9 != v3)
          objc_enumerationMutation(v0);
        KBStarLayoutString(*(void **)(*((_QWORD *)&v8 + 1) + 8 * i));
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        if ((objc_msgSend(v5, "hasPrefix:", CFSTR("Pinyin10-"), (_QWORD)v8) & 1) != 0
          || (objc_msgSend(v5, "hasPrefix:", CFSTR("Wubihua-")) & 1) != 0)
        {

          v6 = 1;
          goto LABEL_13;
        }

      }
      v2 = objc_msgSend(v0, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      v6 = 0;
      if (v2)
        continue;
      break;
    }
  }
  else
  {
    v6 = 0;
  }
LABEL_13:

  return v6;
}

uint64_t _UITextInputTraitsAllowedInputModeExcludeLastAndCurrentInputModes(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  unsigned int v9;

  v3 = a1;
  v4 = a2;
  +[UIKeyboardInputModeController sharedInputModeController](UIKeyboardInputModeController, "sharedInputModeController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "lastUsedInputMode");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v3, "isEqual:", v6) & 1) != 0)
  {
    v7 = 0;
  }
  else
  {
    objc_msgSend(v5, "currentInputMode");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v3, "isEqual:", v8) & 1) != 0 || !objc_msgSend(v3, "isAllowedForTraits:", v4))
    {
      v7 = 0;
    }
    else
    {
      v9 = objc_msgSend(v4, "keyboardType");
      v7 = 1;
      if (v9 <= 0xB && ((1 << v9) & 0x930) != 0 || v9 == 127)
        v7 = _AllowedNumberPadInputMode(v3);
    }

  }
  return v7;
}

uint64_t observerCallback()
{
  return objc_msgSend((id)qword_1ECD783D8, "handleObserverCallback");
}

void ___setPinnedItemCollectionForName_block_invoke(uint64_t a1)
{
  _pasteboardCacheQueue_setPinnedItemCollectionForName(*(void **)(a1 + 32), *(void **)(a1 + 40));
}

void sub_18550B220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getAFAnalyticsClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  AssistantServicesLibrary_0();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("AFAnalytics");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7EE20 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAFAnalyticsClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIDictationConnection.m"), 54, CFSTR("Unable to find class %s"), "AFAnalytics");

    __break(1u);
  }
}

void __getAFAnalyticsClass_block_invoke_0(uint64_t a1)
{
  void *v2;
  void *v3;

  AssistantServicesLibrary_1();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("AFAnalytics");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getAFAnalyticsClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAFAnalyticsClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIDictationController.m"), 229, CFSTR("Unable to find class %s"), "AFAnalytics");

    __break(1u);
  }
}

void sub_18550B5C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getAFPreferencesClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  AssistantServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("AFPreferences");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getAFPreferencesClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAFPreferencesClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIKeyboardInputModeController.m"), 117, CFSTR("Unable to find class %s"), "AFPreferences");

    __break(1u);
  }
}

void __getAFPreferencesClass_block_invoke_0(uint64_t a1)
{
  void *v2;
  void *v3;

  AssistantServicesLibrary_0();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("AFPreferences");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7EE28 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAFPreferencesClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIDictationConnection.m"), 60, CFSTR("Unable to find class %s"), "AFPreferences");

    __break(1u);
  }
}

void __getAFPreferencesClass_block_invoke_1(uint64_t a1)
{
  void *v2;
  void *v3;

  AssistantServicesLibrary_1();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("AFPreferences");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getAFPreferencesClass_softClass_0 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAFPreferencesClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIDictationController.m"), 230, CFSTR("Unable to find class %s"), "AFPreferences");

    __break(1u);
  }
}

void *AssistantServicesLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!AssistantServicesLibraryCore_frameworkLibrary)
    AssistantServicesLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)AssistantServicesLibraryCore_frameworkLibrary;
  if (!AssistantServicesLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AssistantServicesLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("UIKeyboardInputModeController.m"), 116, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void *AssistantServicesLibrary_0()
{
  void *v0;
  void *v2;
  void *v3;

  if (!AssistantServicesLibraryCore_frameworkLibrary_0)
    AssistantServicesLibraryCore_frameworkLibrary_0 = _sl_dlopen();
  v0 = (void *)AssistantServicesLibraryCore_frameworkLibrary_0;
  if (!AssistantServicesLibraryCore_frameworkLibrary_0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AssistantServicesLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("UIDictationConnection.m"), 53, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void *AssistantServicesLibrary_1()
{
  void *v0;
  void *v2;
  void *v3;

  if (!AssistantServicesLibraryCore_frameworkLibrary_1)
    AssistantServicesLibraryCore_frameworkLibrary_1 = _sl_dlopen();
  v0 = (void *)AssistantServicesLibraryCore_frameworkLibrary_1;
  if (!AssistantServicesLibraryCore_frameworkLibrary_1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AssistantServicesLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("UIDictationController.m"), 227, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void AssistantServicesLibrary_2()
{
  void *v0;
  void *v1;
  void *v2;

  if (!AssistantServicesLibraryCore_frameworkLibrary_2)
    AssistantServicesLibraryCore_frameworkLibrary_2 = _sl_dlopen();
  if (!AssistantServicesLibraryCore_frameworkLibrary_2)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AssistantServicesLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("UIDictationUtilities.m"), 54, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

void sub_18550BDB0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void _UpdateBatteryStatus(io_registry_entry_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  _BOOL4 v6;
  const char *v7;
  uint8_t *v8;
  __int16 v9;
  __int16 v10;

  v2 = (void *)MEMORY[0x186DC9484]();
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  _addBatteryPropertyForKey(a1, v3, CFSTR("CurrentCapacity"));
  _addBatteryPropertyForKey(a1, v3, CFSTR("MaxCapacity"));
  _addBatteryPropertyForKey(a1, v3, CFSTR("AtCriticalLevel"));
  _addBatteryPropertyForKey(a1, v3, CFSTR("Voltage"));
  _addBatteryPropertyForKey(a1, v3, CFSTR("FullyCharged"));
  _addBatteryPropertyForKey(a1, v3, CFSTR("IsCharging"));
  _addBatteryPropertyForKey(a1, v3, CFSTR("ExternalConnected"));
  _addBatteryPropertyForKey(a1, v3, CFSTR("ExternalChargeCapable"));
  _addBatteryPropertyForKey(a1, v3, CFSTR("AdapterInfo"));
  _addBatteryPropertyForKey(a1, v3, CFSTR("CapacityEstimated"));
  _addBatteryPropertyForKey(a1, v3, CFSTR("AdapterDetails"));
  v4 = objc_msgSend(v3, "count");
  _batteryLog();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_INFO);
  if (v4)
  {
    if (v6)
    {
      v10 = 0;
      v7 = "Updating battery status with populated properties";
      v8 = (uint8_t *)&v10;
LABEL_6:
      _os_log_impl(&dword_185066000, v5, OS_LOG_TYPE_INFO, v7, v8, 2u);
    }
  }
  else if (v6)
  {
    v9 = 0;
    v7 = "Updating battery status properties, will be UIDeviceBatteryStateUnknown";
    v8 = (uint8_t *)&v9;
    goto LABEL_6;
  }

  _updateBatteryStatusBasedOnProperties(v3);
  objc_autoreleasePoolPop(v2);
}

void _addBatteryPropertyForKey(io_registry_entry_t a1, void *a2, const __CFString *a3)
{
  CFTypeRef CFProperty;
  void *v6;
  id v7;

  v7 = a2;
  CFProperty = IORegistryEntryCreateCFProperty(a1, a3, (CFAllocatorRef)*MEMORY[0x1E0C9AE00], 0);
  if (CFProperty)
  {
    v6 = (void *)CFProperty;
    objc_msgSend(v7, "setObject:forKey:", CFProperty, a3);

  }
}

void _3rdParty_batteryInformationChanged()
{
  NSObject *v0;
  _BOOL4 v1;
  const __CFArray *v2;
  CFArrayRef v3;
  CFArrayRef v4;
  const void *ValueAtIndex;
  NSObject *v6;
  NSObject *v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  NSObject *v14;
  const __CFArray *theArray;
  uint8_t buf[4];
  NSObject *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  _batteryLog();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_185066000, v0, OS_LOG_TYPE_INFO, "Battery information has changed.", buf, 2u);
  }

  if (qword_1ECD7E450 != -1)
    dispatch_once(&qword_1ECD7E450, &__block_literal_global_393);
  theArray = 0;
  if (byte_1ECD7E311)
  {
    v1 = IOPSCopyPowerSourcesByTypePrecise() == 0;
    v2 = 0;
    if (!v1)
      goto LABEL_24;
  }
  else
  {
    v2 = (const __CFArray *)IOPSCopyPowerSourcesByType();
    theArray = v2;
  }
  if (!v2)
  {
LABEL_24:
    _batteryLog();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_error_impl(&dword_185066000, v13, OS_LOG_TYPE_ERROR, "Could not copy battery information.", buf, 2u);
    }

    return;
  }
  v3 = IOPSCopyPowerSourcesList(v2);
  if (v3)
  {
    v4 = v3;
    if (CFArrayGetCount(theArray) < 1)
    {
      _batteryLog();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_error_impl(&dword_185066000, v6, OS_LOG_TYPE_ERROR, "No internal battery found", buf, 2u);
      }
    }
    else
    {
      ValueAtIndex = CFArrayGetValueAtIndex(theArray, 0);
      IOPSGetPowerSourceDescription(theArray, ValueAtIndex);
      v6 = objc_claimAutoreleasedReturnValue();
      _batteryLog();
      v7 = objc_claimAutoreleasedReturnValue();
      v8 = v7;
      if (v6)
      {
        if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
        {
          *(_DWORD *)buf = 138543362;
          v17 = v6;
          _os_log_debug_impl(&dword_185066000, v8, OS_LOG_TYPE_DEBUG, "Retrieved battery info: %{public}@", buf, 0xCu);
        }

        objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
        v8 = objc_claimAutoreleasedReturnValue();
        -[NSObject objectForKeyedSubscript:](v6, "objectForKeyedSubscript:", CFSTR("Current Capacity"));
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        if (v9)
          -[NSObject setObject:forKeyedSubscript:](v8, "setObject:forKeyedSubscript:", v9, CFSTR("CurrentCapacity"));
        -[NSObject objectForKeyedSubscript:](v6, "objectForKeyedSubscript:", CFSTR("Max Capacity"));
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        if (v10)
          -[NSObject setObject:forKeyedSubscript:](v8, "setObject:forKeyedSubscript:", v10, CFSTR("MaxCapacity"));
        -[NSObject objectForKeyedSubscript:](v6, "objectForKeyedSubscript:", CFSTR("Raw External Connected"));
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        if (v11)
          -[NSObject setObject:forKeyedSubscript:](v8, "setObject:forKeyedSubscript:", v11, CFSTR("ExternalConnected"));
        -[NSObject objectForKeyedSubscript:](v6, "objectForKeyedSubscript:", CFSTR("Is Charged"));
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        if (v12)
          -[NSObject setObject:forKeyedSubscript:](v8, "setObject:forKeyedSubscript:", v12, CFSTR("FullyCharged"));
        _updateBatteryStatusBasedOnProperties(v8);

      }
      else if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_error_impl(&dword_185066000, v8, OS_LOG_TYPE_ERROR, "Could not retrieve information about internal battery.", buf, 2u);
      }

    }
    CFRelease(v4);
  }
  else
  {
    _batteryLog();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_error_impl(&dword_185066000, v14, OS_LOG_TYPE_ERROR, "Could not retrieve the list of internal batteries.", buf, 2u);
    }

  }
  CFRelease(theArray);
}

id _batteryLog()
{
  if (qword_1ECD7E440 != -1)
    dispatch_once(&qword_1ECD7E440, &__block_literal_global_363);
  return (id)qword_1ECD7E438;
}

void _updateBatteryStatusBasedOnProperties(void *a1)
{
  id v1;
  void *v2;
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;
  int v7;
  double v8;
  int v9;
  void *v10;
  int v11;
  void *v12;
  int v13;
  uint64_t v14;
  void *v15;
  int v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  +[UIDevice currentDevice](UIDevice, "currentDevice");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v1, "count"))
  {
    _batteryLog();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEBUG))
    {
      v16 = 138543362;
      v17 = v1;
      _os_log_debug_impl(&dword_185066000, v3, OS_LOG_TYPE_DEBUG, "Updating battery data based on properties: %{public}@", (uint8_t *)&v16, 0xCu);
    }

    objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("CurrentCapacity"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "intValue");

    objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("MaxCapacity"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "intValue");

    if (v7)
      v9 = v7;
    else
      v9 = 100;
    *(float *)&v8 = (float)v5 / (float)v9;
    objc_msgSend(v2, "_setBatteryLevel:", v8);
    objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("ExternalConnected"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "BOOLValue");

    if (v11)
    {
      objc_msgSend(v1, "objectForKeyedSubscript:", CFSTR("FullyCharged"));
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_msgSend(v12, "BOOLValue");

      if (v13)
        v14 = 3;
      else
        v14 = 2;
      v15 = v2;
    }
    else
    {
      v15 = v2;
      v14 = 1;
    }
  }
  else
  {
    v15 = v2;
    v14 = 0;
  }
  objc_msgSend(v15, "_setBatteryState:", v14);
  objc_msgSend((id)UIApp, "batteryStatusDidChange:", v1);

}

BOOL UIAccessibilityIsClosedCaptioningEnabled(void)
{
  return _AXSClosedCaptionsEnabled() != 0;
}

id _constraintGroupNamesForAlignmentOptions(__int16 a1, uint64_t a2)
{
  char v4;
  void *v5;
  void (**v6)(_QWORD, _QWORD);
  const __CFString *v7;
  id v8;
  _QWORD aBlock[5];
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  void (*v15)(uint64_t);
  id v16;

  v11 = 0;
  v12 = &v11;
  v4 = ~(_BYTE)a1;
  v13 = 0x3032000000;
  v14 = __Block_byref_object_copy__229;
  v15 = __Block_byref_object_dispose__229;
  v16 = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = ___constraintGroupNamesForAlignmentOptions_block_invoke;
  aBlock[3] = &unk_1E16E95B0;
  aBlock[4] = &v11;
  v5 = _Block_copy(aBlock);
  v6 = (void (**)(_QWORD, _QWORD))v5;
  if ((v4 & 0x18) != 0 && (a1 & 0x60) != 0x60)
    (*((void (**)(void *, const __CFString *))v5 + 2))(v5, CFSTR("Ambiguity Suppression"));
  if (a2)
  {
    if ((a1 & 0x20) != 0)
      ((void (**)(_QWORD, const __CFString *))v6)[2](v6, CFSTR("Leading"));
    if ((a1 & 0x40) != 0)
      ((void (**)(_QWORD, const __CFString *))v6)[2](v6, CFSTR("Trailing"));
    if ((a1 & 0x200) != 0)
    {
      v7 = CFSTR("CenterX");
LABEL_17:
      ((void (**)(_QWORD, const __CFString *))v6)[2](v6, v7);
    }
  }
  else
  {
    if ((a1 & 0x1008) != 0)
      ((void (**)(_QWORD, const __CFString *))v6)[2](v6, CFSTR("Top"));
    if ((a1 & 0x810) != 0)
      ((void (**)(_QWORD, const __CFString *))v6)[2](v6, CFSTR("Bottom"));
    if ((a1 & 0x400) != 0)
    {
      v7 = CFSTR("CenterY");
      goto LABEL_17;
    }
  }
  v8 = (id)v12[5];

  _Block_object_dispose(&v11, 8);
  return v8;
}

void sub_185510F30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ___constraintGroupNamesForAlignmentOptions_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v3 = a2;
  v4 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  v8 = v3;
  if (!v4)
  {
    objc_msgSend(MEMORY[0x1E0C99E20], "set");
    v5 = objc_claimAutoreleasedReturnValue();
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
    v7 = *(void **)(v6 + 40);
    *(_QWORD *)(v6 + 40) = v5;

    v3 = v8;
    v4 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  }
  objc_msgSend(v4, "addObject:", v3);

}

void sub_18551109C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void ___batteryLog_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.UIKit", "UIDevice.battery");
  v1 = (void *)qword_1ECD7E438;
  qword_1ECD7E438 = (uint64_t)v0;

}

void sub_185513328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  __destructor_8_sb0_sb8_sb16_sb24_sb32_sb40((id *)va);
  _Unwind_Resume(a1);
}

id __copy_constructor_8_8_s0_s8_s16_s24_s32_s40(_QWORD *a1, id *a2)
{
  id result;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  result = a2[5];
  a1[5] = result;
  return result;
}

void _UIAnalyzeMenu(uint64_t a1, void *a2)
{
  id v3;
  id v4[6];

  v3 = a2;
  v4[0] = objc_alloc_init(MEMORY[0x1E0C99E20]);
  v4[1] = objc_alloc_init(MEMORY[0x1E0C99E08]);
  v4[2] = objc_alloc_init(MEMORY[0x1E0C99E08]);
  v4[3] = objc_alloc_init(_UICommandIdentifierDictionary);
  v4[4] = objc_alloc_init(MEMORY[0x1E0C99E08]);
  v4[5] = objc_alloc_init(_UICommandIdentifierDictionary);
  if (_UIRecursivelyAnalyzeMenu(v3, (uint64_t)v4))
  {
    __copy_constructor_8_8_s0_s8_s16_s24_s32_s40((_QWORD *)a1, v4);
  }
  else
  {
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  __destructor_8_sb0_sb8_sb16_sb24_sb32_sb40(v4);

}

void sub_185513464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
  __destructor_8_sb0_sb8_sb16_sb24_sb32_sb40(&a9);
  _Unwind_Resume(a1);
}

void sub_185514954(_Unwind_Exception *a1)
{
  id *v1;

  __destructor_8_sb0_sb8_sb16_sb24_sb32_sb40(v1);
  _Unwind_Resume(a1);
}

double _UISheetPageSize(void *a1)
{
  return _UISheetSize(a1, 0, *MEMORY[0x1E0C9D820], *(double *)(MEMORY[0x1E0C9D820] + 8));
}

void _supplementaryColumnWidthSupportCheck(void *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  id *v4;

  v4 = a1;
  if (objc_msgSend(v4[121], "style") != 2)
  {
    v1 = (void *)MEMORY[0x1E0C99DA0];
    v2 = *MEMORY[0x1E0C99778];
    _UISplitViewControllerStyleDescription(objc_msgSend(v4[121], "style"));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "raise:format:", v2, CFSTR("UISplitViewController supplementaryColumnWidth properties unsupported for style = %@"), v3);

  }
}

void sub_185517EDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1855181EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void _pasteboardCacheQueue_setPinnedItemCollectionForName(void *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v3 = a2;
  v5 = a1;
  _pasteboardCacheQueue_PasteboardNameToPinnedItemCollectionMap();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setObject:forKeyedSubscript:", v3, v5);

  _pasteboardCacheQueue_incrementCountOffsetForName(v5);
}

void _pasteboardCacheQueue_removePinnedItemCollectionForName(void *a1)
{
  void *v1;
  id v2;

  v2 = a1;
  _pasteboardCacheQueue_PasteboardNameToPinnedItemCollectionMap();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "removeObjectForKey:", v2);

  _pasteboardCacheQueue_incrementCountOffsetForName(v2);
}

void _pasteboardCacheQueue_incrementCountOffsetForName(void *a1)
{
  id v1;
  void *v2;
  id v3;

  v1 = a1;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", _pasteboardCacheQueue_countOffsetForName(v1) + 1);
  v3 = (id)objc_claimAutoreleasedReturnValue();
  _pasteboardCacheQueue_PasteboardNameToCountOffsetMap();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKeyedSubscript:", v3, v1);

}

id _pasteboardCacheQueue_PasteboardNameToCountOffsetMap()
{
  if (qword_1ECD7B248 != -1)
    dispatch_once(&qword_1ECD7B248, &__block_literal_global_294);
  return (id)qword_1ECD7B240;
}

uint64_t _pasteboardCacheQueue_countOffsetForName(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = a1;
  _pasteboardCacheQueue_PasteboardNameToCountOffsetMap();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKeyedSubscript:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
    v4 = objc_msgSend(v3, "integerValue");
  else
    v4 = 0;

  return v4;
}

void sub_185518B0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void ___frameKeyPathTranslationForKeyPath_block_invoke()
{
  void *v0;

  v0 = (void *)qword_1ECD82608;
  qword_1ECD82608 = (uint64_t)&unk_1E1A9B720;

}

void Draw3PartSlice(CGContext *a1, CGImage *a2, uint64_t a3, int a4, double a5, double a6, double a7, double a8, CGFloat a9, CGFloat a10, CGFloat a11, CGFloat a12, double a13, CGFloat a14, double a15, CGFloat a16)
{
  CGFloat v27;
  double v28;
  CGFloat v29;
  CGFloat v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  CGRect v40;
  CGRect v41;
  CGRect slice;
  CGRect remainder;
  CGRect v44;

  v44.origin.x = a9;
  remainder.origin.x = a9;
  remainder.origin.y = a10;
  remainder.size.width = a11;
  remainder.size.height = a12;
  memset(&slice, 0, sizeof(slice));
  memset(&v41, 0, sizeof(v41));
  memset(&v40, 0, sizeof(v40));
  v44.origin.y = a10;
  v44.size.width = a11;
  v44.size.height = a12;
  CGRectDivide(v44, &slice, &remainder, a14, CGRectMinXEdge);
  CGRectDivide(remainder, &v40, &v41, a16, CGRectMaxXEdge);
  v27 = a6 * (double)a3;
  v28 = a7 * (double)a3;
  v29 = a8 * (double)a3;
  v30 = a16 * (double)a3;
  DrawImageRegion(a1, a2, a4, (double)a3, 0.0, v27, a14 * (double)a3, v29, v31, v32, v33, slice.origin.x, slice.origin.y, slice.size.width, slice.size.height);
  DrawImageRegion(a1, a2, a4, (double)a3, a14 * (double)a3, v27, v28 - a14 * (double)a3 - v30, v29, v34, v35, v36, v41.origin.x, v41.origin.y, v41.size.width, v41.size.height);
  DrawImageRegion(a1, a2, a4, (double)a3, v28 - v30, v27, v30, v29, v37, v38, v39, v40.origin.x, v40.origin.y, v40.size.width, v40.size.height);
}

void DrawImageRegion(CGContext *a1, CGImage *a2, int a3, double a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, double a9, double a10, double a11, CGFloat a12, double a13, double a14, double a15)
{
  BOOL v24;
  CGImage *v25;
  CGImage *v26;
  CGImage *v27;
  CGImage *v28;
  CGAffineTransform v30;
  CGAffineTransform v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;

  v32.origin.x = a12;
  v32.origin.y = a13;
  v32.size.width = a14;
  v32.size.height = a15;
  if (!CGRectIsEmpty(v32))
  {
    v33.origin.x = a5;
    v33.origin.y = a6;
    v33.size.width = a7;
    v33.size.height = a8;
    if (!CGRectIsEmpty(v33))
    {
      if (!a3
        || ((CGContextGetCTM(&v30, a1), CGAffineTransformInvert(&v31, &v30), a7 * v31.a + a8 * v31.c == a14)
          ? (v24 = a7 * v31.b + a8 * v31.d == a15)
          : (v24 = 0),
            v24))
      {
        v37.origin.x = a5;
        v37.origin.y = a6;
        v37.size.width = a7;
        v37.size.height = a8;
        v27 = CGImageCreateWithImageInRect(a2, v37);
        if (v27)
        {
          v28 = v27;
          v38.origin.x = a12;
          v38.origin.y = a13;
          v38.size.width = a14;
          v38.size.height = a15;
          CGContextDrawImage(a1, v38, v27);
          CGImageRelease(v28);
        }
      }
      else
      {
        CGContextSaveGState(a1);
        v34.origin.x = a12;
        v34.origin.y = a13;
        v34.size.width = a14;
        v34.size.height = a15;
        CGContextClipToRect(a1, v34);
        v35.origin.x = a5;
        v35.origin.y = a6;
        v35.size.width = a7;
        v35.size.height = a8;
        v25 = CGImageCreateWithImageInRect(a2, v35);
        if (v25)
        {
          v26 = v25;
          v36.origin.y = a13 + a15;
          v36.size.width = a7 / a4;
          v36.size.height = a8 / a4;
          v36.origin.x = a12;
          CGContextDrawTiledImage(a1, v36, v25);
          CGImageRelease(v26);
        }
        CGContextRestoreGState(a1);
      }
    }
  }
}

void sub_18551CC54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18551DB18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

CGImageDestination *_UIImageDataRepresentation(void *a1, void *a2, void *a3)
{
  __CFString *v5;
  void (**v6)(id, void *);
  id v7;
  uint64_t v8;
  CGImage *v9;
  __CFData *v10;
  __CFData *v11;
  CGImageDestination *v12;
  void *v13;
  void *v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  double v18;
  double v19;
  void *v20;
  void *v21;

  v5 = a2;
  v6 = a3;
  objc_msgSend(a1, "_rasterizedImage");
  v7 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v8 = objc_msgSend(v7, "CGImage");
  if (v8)
  {
    v9 = (CGImage *)v8;
    v10 = (__CFData *)objc_opt_new();
    v11 = v10;
    if (v10)
    {
      v12 = CGImageDestinationCreateWithData(v10, v5, 1uLL, 0);
      if (v12)
      {
        v13 = (void *)objc_opt_new();
        v14 = (void *)MEMORY[0x1E0CB37E8];
        v15 = objc_msgSend(v7, "imageOrientation");
        if (v15 >= 8)
          v16 = 0;
        else
          v16 = (0x75426831u >> (4 * v15)) & 0xF;
        objc_msgSend(v14, "numberWithUnsignedInteger:", v16);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "setObject:forKeyedSubscript:", v17, *MEMORY[0x1E0CBCFF0]);

        objc_msgSend(v7, "scale");
        v19 = fmax(fmin(v18 * 72.0, 7200.0), 7.2);
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v19);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "setObject:forKeyedSubscript:", v20, *MEMORY[0x1E0CBCA00]);

        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v19);
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "setObject:forKeyedSubscript:", v21, *MEMORY[0x1E0CBC9F8]);

        if (v6)
          v6[2](v6, v13);
        CGImageDestinationAddImage(v12, v9, (CFDictionaryRef)v13);
        if (!CGImageDestinationFinalize(v12))
        {

          v11 = 0;
        }
        CFRelease(v12);
        v11 = v11;

        v12 = v11;
      }
    }
    else
    {
      v12 = 0;
    }

  }
  else
  {
    v12 = 0;
  }

  return v12;
}

unint64_t _UICATransform3DHasFiniteMembers(float64x2_t *a1)
{
  float64x2_t v1;
  float64x2_t v2;
  float64x2_t v3;
  int8x8_t v4;
  int8x8_t v5;
  int8x8_t v6;
  int64x2_t v7;
  int64x2_t v8;
  float64x2_t v10;
  float64x2_t v11;
  int8x8_t v12;
  int8x8_t v13;
  int8x8_t v14;
  int8x8_t v15;
  int64x2_t v16;
  int64x2_t v17;

  v1 = a1[1];
  v2 = a1[2];
  v3 = (float64x2_t)vdupq_n_s64(0x7FF0000000000000uLL);
  *(int8x8_t *)&v1.f64[0] = vmovn_s16((int16x8_t)vbicq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vorrq_s8((int8x16_t)vcltzq_f64(*a1), (int8x16_t)vcgezq_f64(*a1)), (int32x4_t)vorrq_s8((int8x16_t)vcltzq_f64(v1), (int8x16_t)vcgezq_f64(v1))), (int16x8_t)vuzp1q_s32((int32x4_t)vorrq_s8((int8x16_t)vcltzq_f64(v2), (int8x16_t)vcgezq_f64(v2)), (int32x4_t)vorrq_s8((int8x16_t)vcltzq_f64(a1[3]), (int8x16_t)vcgezq_f64(a1[3])))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(vabsq_f64(*a1), v3), (int32x4_t)vceqq_f64(vabsq_f64(v1), v3)),
                                                                (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(vabsq_f64(v2), v3), (int32x4_t)vceqq_f64(vabsq_f64(a1[3]), v3)))));
  LODWORD(v2.f64[0]) = BYTE4(v1.f64[0]);
  HIDWORD(v2.f64[0]) = BYTE5(v1.f64[0]);
  v4.i32[0] = LOBYTE(v1.f64[0]);
  v4.i32[1] = BYTE1(v1.f64[0]);
  v5.i32[0] = BYTE6(v1.f64[0]);
  v5.i32[1] = HIBYTE(v1.f64[0]);
  v6.i32[0] = BYTE2(v1.f64[0]);
  v6.i32[1] = BYTE3(v1.f64[0]);
  *(int8x8_t *)&v1.f64[0] = vand_s8(vand_s8(v4, *(int8x8_t *)&v2.f64[0]), vand_s8(v6, v5));
  v7.i64[0] = LODWORD(v1.f64[0]);
  v7.i64[1] = HIDWORD(v1.f64[0]);
  v8 = vcltzq_s64(vshlq_n_s64(v7, 0x3FuLL));
  if ((vandq_s8((int8x16_t)v8, (int8x16_t)vdupq_laneq_s64(v8, 1)).u64[0] & 0x8000000000000000) == 0)
    return 0;
  v10 = a1[4];
  v11 = a1[5];
  v12 = vmovn_s16((int16x8_t)vbicq_s8((int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vorrq_s8((int8x16_t)vcltzq_f64(v10), (int8x16_t)vcgezq_f64(v10)), (int32x4_t)vorrq_s8((int8x16_t)vcltzq_f64(v11), (int8x16_t)vcgezq_f64(v11))), (int16x8_t)vuzp1q_s32((int32x4_t)vorrq_s8((int8x16_t)vcltzq_f64(a1[6]), (int8x16_t)vcgezq_f64(a1[6])), (int32x4_t)vorrq_s8((int8x16_t)vcltzq_f64(a1[7]), (int8x16_t)vcgezq_f64(a1[7])))), (int8x16_t)vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(vabsq_f64(v10), v3), (int32x4_t)vceqq_f64(vabsq_f64(v11), v3)),
                                            (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(vabsq_f64(a1[6]), v3), (int32x4_t)vceqq_f64(vabsq_f64(a1[7]), v3)))));
  LODWORD(v10.f64[0]) = v12.u8[4];
  HIDWORD(v10.f64[0]) = v12.u8[5];
  LODWORD(v11.f64[0]) = v12.u8[0];
  HIDWORD(v11.f64[0]) = v12.u8[1];
  v13.i32[0] = v12.u8[6];
  v13.i32[1] = v12.u8[7];
  v14.i32[0] = v12.u8[2];
  v14.i32[1] = v12.u8[3];
  v15 = vand_s8(vand_s8(*(int8x8_t *)&v11.f64[0], *(int8x8_t *)&v10.f64[0]), vand_s8(v14, v13));
  v16.i64[0] = v15.u32[0];
  v16.i64[1] = v15.u32[1];
  v17 = vcltzq_s64(vshlq_n_s64(v16, 0x3FuLL));
  return vandq_s8((int8x16_t)v17, (int8x16_t)vdupq_laneq_s64(v17, 1)).u64[0] >> 63;
}

void _UIVisualEffectViewRemoveDependent(void *a1, id *a2)
{
  id *v3;
  _QWORD *v4;
  void *v5;
  id *v6;

  v3 = a2 + 62;
  v6 = a2;
  v4 = a1;
  objc_storeWeak(v3, 0);
  v5 = (void *)v4[55];

  objc_msgSend(v5, "removeObject:", v6);
}

double UIDistanceBetweenPoints(double a1, double a2, double a3, double a4)
{
  return sqrt((a3 - a1) * (a3 - a1) + (a4 - a2) * (a4 - a2));
}

uint64_t _UIViewServiceConnectionNotificationName(void *a1, const char *a2)
{
  return objc_msgSend(a1, "stringByAppendingFormat:", CFSTR("-com.apple.uikit.viewService.connectionRequest"));
}

void ___pasteboardCacheQueue_block_invoke()
{
  dispatch_queue_t v0;
  void *v1;

  v0 = dispatch_queue_create("com.apple.UIKit.pasteboard.cache-queue", 0);
  v1 = (void *)qword_1ECD7B200;
  qword_1ECD7B200 = (uint64_t)v0;

}

void ___notificationStateQueue_block_invoke()
{
  dispatch_queue_t v0;
  void *v1;

  v0 = dispatch_queue_create("com.apple.UIKit.pasteboardNotificationStateQueue", 0);
  v1 = (void *)qword_1ECD7B220;
  qword_1ECD7B220 = (uint64_t)v0;

}

BOOL UIAccessibilityIsSpeakSelectionEnabled(void)
{
  return _AXSQuickSpeakEnabled() != 0;
}

BOOL UIAccessibilityIsSpeakScreenEnabled(void)
{
  return _AXSSpeakThisEnabled() != 0;
}

BOOL UIAccessibilityIsMonoAudioEnabled(void)
{
  return _AXSMonoAudioEnabled() != 0;
}

double _UITabBarAdjustBadgePositionForStyleAndScene(uint64_t a1, void *a2, double a3)
{
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  double v9;
  void *v10;
  double v11;
  double v12;
  void *v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  BOOL v19;
  double v20;

  v5 = a2;
  v6 = v5;
  switch(a1)
  {
    case 0:
      v9 = 5.0;
      goto LABEL_7;
    case 1:
    case 2:
      objc_msgSend(v5, "traitCollection");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = objc_msgSend(v7, "userInterfaceIdiom");

      if (v8)
      {
        a3 = a3 + 5.0;
      }
      else
      {
        objc_msgSend(v6, "screen");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "fixedCoordinateSpace");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "bounds");
        v16 = v15;
        v18 = v17;

        v19 = v18 == 568.0 && v16 == 320.0;
        v20 = 5.0;
        if (v19)
          v20 = 4.0;
        a3 = a3 + v20;
      }
      break;
    case 3:
      objc_msgSend(v5, "screen");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "scale");
      v12 = v11;

      v9 = 5.0;
      if (v12 > 1.0)
        v9 = 1.0 / v12 + 4.0;
LABEL_7:
      a3 = a3 + v9;
      break;
    case 4:
      a3 = a3 + 14.0;
      break;
    default:
      break;
  }

  return a3;
}

void ___customTextViewSubclassRequiresTextKit1_block_invoke()
{
  void *v0;

  v0 = (void *)qword_1ECD793A0;
  qword_1ECD793A0 = (uint64_t)&unk_1E1A9B568;

}

void ___shouldOverretainBackgroundColor_block_invoke()
{
  char v0;
  id v1;

  v0 = dyld_program_sdk_at_least();
  byte_1ECD7A415 = v0 ^ 1;
  if ((v0 & 1) == 0)
  {
    _UIMainBundleIdentifier();
    v1 = (id)objc_claimAutoreleasedReturnValue();
    byte_1ECD7A415 = objc_msgSend(v1, "isEqualToString:", CFSTR("com.yunatechnology.awesomecalendar"));

  }
}

id _UIKBInlineTextCompletionLog()
{
  if (_UIKBInlineTextCompletionLog_onceToken != -1)
    dispatch_once(&_UIKBInlineTextCompletionLog_onceToken, &__block_literal_global_14_1);
  return (id)_UIKBInlineTextCompletionLog_log;
}

void _incrementRestorationMarkerCount(void *a1, void *a2, char a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  char v11;
  void *v12;
  BOOL v13;

  v5 = a1;
  v6 = a2;
  v13 = 0;
  v7 = v5;
  objc_sync_enter(v7);
  if (qword_1EDDC8398 > 0 || objc_msgSend(v7, "_isNormalRestorationInProgress"))
  {
    if ((a3 & 1) != 0 || (objc_msgSend(v7, "_isRestorationExtended") & 1) != 0)
    {
      v8 = 0;
    }
    else
    {
      _getRestorationInProgressDictionary(v6, 0, &v13);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = v9;
      if (v9)
      {
        objc_msgSend(v9, "objectForKey:", CFSTR("kRestorationExtended"));
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v11 = objc_msgSend(v10, "BOOLValue");

        if ((v11 & 1) == 0)
        {
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", 1);
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v8, "setObject:forKey:", v12, CFSTR("kRestorationExtended"));

          _updateRestorationInProgressFile(v6, v8);
        }
      }
      objc_msgSend(v7, "_setRestorationExtended:", 1);
    }
    ++qword_1EDDC8398;
    objc_sync_exit(v7);

  }
  else
  {
    objc_sync_exit(v7);

    NSLog(CFSTR("Warning: extendStateRestoration called outside of state restoration!"));
  }

}

void sub_185525DB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

UIAccessibilityHearingDeviceEar UIAccessibilityHearingDevicePairedEar(void)
{
  UIAccessibilityHearingDeviceEar result;

  result = _AXSHearingDevicePairedEars();
  if ((result & 0xFFFFFFFFFFFFFFFBLL) != 2 && result != 4)
    return 0;
  return result;
}

id _UILocalizedStringInSystemLanguage(void *a1, void *a2)
{
  uint64_t v3;
  id v4;
  id v5;
  void *v6;

  v3 = qword_1EDDC8390;
  v4 = a2;
  v5 = a1;
  if (v3 != -1)
    dispatch_once(&qword_1EDDC8390, &__block_literal_global_2777);
  objc_msgSend((id)qword_1EDDC8388, "localizedStringForKey:value:table:", v5, v4, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

void _UITextCanvasDrawWithFadedEdgesInContext(CGContext *a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  _BOOL4 v19;
  _BOOL4 v20;
  double MinX;
  double MaxX;
  CGFloat rect;
  void (**v24)(void);
  CGPoint v25;
  CGPoint v26;
  CGPoint v27;
  CGPoint v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;

  v24 = a2;
  v29.origin.x = a7;
  v29.origin.y = a8;
  v29.size.width = a9;
  v29.size.height = a10;
  if (CGRectIsNull(v29))
  {
    v19 = 0;
    v20 = 0;
  }
  else
  {
    v30.origin.x = a3;
    v30.origin.y = a4;
    v30.size.width = a5;
    v30.size.height = a6;
    rect = a6;
    MinX = CGRectGetMinX(v30);
    v31.origin.x = a7;
    v31.origin.y = a8;
    v31.size.width = a9;
    v31.size.height = a10;
    v19 = MinX < CGRectGetMinX(v31);
    v32.origin.x = a3;
    v32.origin.y = a4;
    v32.size.width = a5;
    v32.size.height = rect;
    MaxX = CGRectGetMaxX(v32);
    v33.origin.x = a7;
    v33.origin.y = a8;
    v33.size.width = a9;
    v33.size.height = a10;
    v20 = MaxX >= CGRectGetMaxX(v33);
    if (v19)
      goto LABEL_6;
  }
  if (!v20)
  {
    v24[2]();
    goto LABEL_13;
  }
LABEL_6:
  CGContextBeginTransparencyLayer(a1, 0);
  v24[2]();
  CGContextSetBlendMode(a1, kCGBlendModeDestinationOut);
  if (_UITextCanvasDrawWithFadedEdgesInContext_onceToken != -1)
    dispatch_once(&_UITextCanvasDrawWithFadedEdgesInContext_onceToken, &__block_literal_global_355);
  if (v19)
  {
    v34.origin.x = a7;
    v34.origin.y = a8;
    v34.size.width = a9;
    v34.size.height = a10;
    v25.x = CGRectGetMinX(v34);
    v27.x = v25.x + 50.0;
    v25.y = a8;
    v27.y = a8;
    CGContextDrawLinearGradient(a1, (CGGradientRef)_UITextCanvasDrawWithFadedEdgesInContext_leftFadeGradient, v25, v27, 0);
  }
  if (v20)
  {
    v35.origin.x = a7;
    v35.origin.y = a8;
    v35.size.width = a9;
    v35.size.height = a10;
    v26.x = CGRectGetMaxX(v35);
    v28.x = v26.x + -50.0;
    v26.y = a8;
    v28.y = a8;
    CGContextDrawLinearGradient(a1, (CGGradientRef)_UITextCanvasDrawWithFadedEdgesInContext_leftFadeGradient, v26, v28, 0);
  }
  CGContextEndTransparencyLayer(a1);
LABEL_13:

}

id getCHHapticPatternClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getCHHapticPatternClass_softClass;
  v7 = getCHHapticPatternClass_softClass;
  if (!getCHHapticPatternClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getCHHapticPatternClass_block_invoke_1;
    v3[3] = &unk_1E16B14C0;
    v3[4] = &v4;
    __getCHHapticPatternClass_block_invoke_1((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18552D2D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getCHHapticEventTypeHapticContinuous()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getCHHapticEventTypeHapticContinuousSymbolLoc_ptr;
  v8 = getCHHapticEventTypeHapticContinuousSymbolLoc_ptr;
  if (!getCHHapticEventTypeHapticContinuousSymbolLoc_ptr)
  {
    v1 = CoreHapticsLibrary_1();
    v0 = (id *)dlsym(v1, "CHHapticEventTypeHapticContinuous");
    v6[3] = (uint64_t)v0;
    getCHHapticEventTypeHapticContinuousSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticEventType getCHHapticEventTypeHapticContinuous(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 41, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_18552D91C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getCHHapticEventTypeAudioCustom()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getCHHapticEventTypeAudioCustomSymbolLoc_ptr;
  v8 = getCHHapticEventTypeAudioCustomSymbolLoc_ptr;
  if (!getCHHapticEventTypeAudioCustomSymbolLoc_ptr)
  {
    v1 = CoreHapticsLibrary_1();
    v0 = (id *)dlsym(v1, "CHHapticEventTypeAudioCustom");
    v6[3] = (uint64_t)v0;
    getCHHapticEventTypeAudioCustomSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticEventType getCHHapticEventTypeAudioCustom(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 43, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_18552DA14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getCHHapticEventParameterClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getCHHapticEventParameterClass_softClass;
  v7 = getCHHapticEventParameterClass_softClass;
  if (!getCHHapticEventParameterClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getCHHapticEventParameterClass_block_invoke;
    v3[3] = &unk_1E16B14C0;
    v3[4] = &v4;
    __getCHHapticEventParameterClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18552DACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getCHHapticEventClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getCHHapticEventClass_softClass;
  v7 = getCHHapticEventClass_softClass;
  if (!getCHHapticEventClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getCHHapticEventClass_block_invoke;
    v3[3] = &unk_1E16B14C0;
    v3[4] = &v4;
    __getCHHapticEventClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18552DB84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18552E36C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void *CoreHapticsLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!CoreHapticsLibraryCore_frameworkLibrary)
    CoreHapticsLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)CoreHapticsLibraryCore_frameworkLibrary;
  if (!CoreHapticsLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreHapticsLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 18, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void *CoreHapticsLibrary_0()
{
  void *v0;
  void *v2;
  void *v3;

  if (!CoreHapticsLibraryCore_frameworkLibrary_0)
    CoreHapticsLibraryCore_frameworkLibrary_0 = _sl_dlopen();
  v0 = (void *)CoreHapticsLibraryCore_frameworkLibrary_0;
  if (!CoreHapticsLibraryCore_frameworkLibrary_0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreHapticsLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 18, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void *CoreHapticsLibrary_1()
{
  void *v0;
  void *v2;
  void *v3;

  if (!CoreHapticsLibraryCore_frameworkLibrary_1)
    CoreHapticsLibraryCore_frameworkLibrary_1 = _sl_dlopen();
  v0 = (void *)CoreHapticsLibraryCore_frameworkLibrary_1;
  if (!CoreHapticsLibraryCore_frameworkLibrary_1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreHapticsLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 18, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void getCHHapticEngineOptionKeyLocality()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getCHHapticEngineOptionKeyLocalitySymbolLoc_ptr;
  v8 = getCHHapticEngineOptionKeyLocalitySymbolLoc_ptr;
  if (!getCHHapticEngineOptionKeyLocalitySymbolLoc_ptr)
  {
    v1 = CoreHapticsLibrary_1();
    v0 = (id *)dlsym(v1, "CHHapticEngineOptionKeyLocality");
    v6[3] = (uint64_t)v0;
    getCHHapticEngineOptionKeyLocalitySymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticEngineOptionKey getCHHapticEngineOptionKeyLocality(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 28, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_18552E7A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getCHHapticEngineClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getCHHapticEngineClass_softClass;
  v7 = getCHHapticEngineClass_softClass;
  if (!getCHHapticEngineClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getCHHapticEngineClass_block_invoke_0;
    v3[3] = &unk_1E16B14C0;
    v3[4] = &v4;
    __getCHHapticEngineClass_block_invoke_0((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18552E860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18552E960(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getCHHapticEngineClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  CoreHapticsLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("CHHapticEngine");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7D638 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCHHapticEngineClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 20, CFSTR("Unable to find class %s"), "CHHapticEngine");

    __break(1u);
  }
}

void __getCHHapticEngineClass_block_invoke_0(uint64_t a1)
{
  void *v2;
  void *v3;

  CoreHapticsLibrary_1();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("CHHapticEngine");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCHHapticEngineClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCHHapticEngineClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 20, CFSTR("Unable to find class %s"), "CHHapticEngine");

    __break(1u);
  }
}

Class __getCHHapticEngineClass_block_invoke_1(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7B8E0)
    qword_1ECD7B8E0 = _sl_dlopen();
  if (!qword_1ECD7B8E0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreHapticsLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 18, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("CHHapticEngine");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCHHapticEngineClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 20, CFSTR("Unable to find class %s"), "CHHapticEngine");

LABEL_8:
    __break(1u);
  }
  qword_1ECD7B8D8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void __getCHHapticPatternClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  CoreHapticsLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("CHHapticPattern");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7D620 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCHHapticPatternClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 21, CFSTR("Unable to find class %s"), "CHHapticPattern");

    __break(1u);
  }
}

Class __getCHHapticPatternClass_block_invoke_0(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7B140)
    qword_1ECD7B140 = _sl_dlopen();
  if (!qword_1ECD7B140)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreHapticsLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 18, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("CHHapticPattern");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCHHapticPatternClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 21, CFSTR("Unable to find class %s"), "CHHapticPattern");

LABEL_8:
    __break(1u);
  }
  qword_1ECD7B138 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void __getCHHapticPatternClass_block_invoke_1(uint64_t a1)
{
  void *v2;
  void *v3;

  CoreHapticsLibrary_1();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("CHHapticPattern");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCHHapticPatternClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCHHapticPatternClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 21, CFSTR("Unable to find class %s"), "CHHapticPattern");

    __break(1u);
  }
}

void __getCHHapticEventParameterClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  CoreHapticsLibrary_1();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("CHHapticEventParameter");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCHHapticEventParameterClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCHHapticEventParameterClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 24, CFSTR("Unable to find class %s"), "CHHapticEventParameter");

    __break(1u);
  }
}

void __getCHHapticEventClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  CoreHapticsLibrary_1();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("CHHapticEvent");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getCHHapticEventClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCHHapticEventClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 22, CFSTR("Unable to find class %s"), "CHHapticEvent");

    __break(1u);
  }
}

void __purgeReusePools()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  _QWORD *v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD block[5];
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  void (*v17)(uint64_t);
  id v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v13 = 0;
  v14 = &v13;
  v15 = 0x3032000000;
  v16 = __Block_byref_object_copy__107;
  v17 = __Block_byref_object_dispose__107;
  v18 = 0;
  if (qword_1ECD7A678 != -1)
    dispatch_once(&qword_1ECD7A678, &__block_literal_global_31_2);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = ____purgeReusePools_block_invoke;
  block[3] = &unk_1E16B14C0;
  block[4] = &v13;
  dispatch_sync((dispatch_queue_t)qword_1ECD7A670, block);
  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  v0 = (id)v14[5];
  v1 = objc_msgSend(v0, "countByEnumeratingWithState:objects:count:", &v8, v19, 16);
  if (v1)
  {
    v2 = *(_QWORD *)v9;
    do
    {
      for (i = 0; i != v1; ++i)
      {
        if (*(_QWORD *)v9 != v2)
          objc_enumerationMutation(v0);
        v4 = *(_QWORD **)(*((_QWORD *)&v8 + 1) + 8 * i);
        v5 = v4[2];
        if ((v5 & 1) != 0)
        {
          v6 = atomic_load(byte_1ECD75E09);
          if ((v5 & 2) == 0 || (v6 & 1) == 0)
          {
            if ((v6 & 1) != 0)
              continue;
LABEL_16:
            objc_msgSend(v4, "drainPool", (_QWORD)v8);
            continue;
          }
        }
        else if ((v5 & 2) == 0)
        {
          continue;
        }
        v7 = atomic_load((unsigned __int8 *)&_MergedGlobals_897);
        if ((v7 & 1) == 0)
          goto LABEL_16;
      }
      v1 = objc_msgSend(v0, "countByEnumeratingWithState:objects:count:", &v8, v19, 16);
    }
    while (v1);
  }

  _Block_object_dispose(&v13, 8);
}

void sub_18552F76C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _HandleMotionManagerNotification(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[8];

  if (!a1)
  {
    v6[6] = v3;
    v6[7] = v4;
    v5 = *a2;
    if (*a2 != 2)
      v5 = *a2 == 1;
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = ___HandleMotionManagerNotification_block_invoke;
    v6[3] = &__block_descriptor_48_e5_v8__0l;
    v6[4] = a3;
    v6[5] = v5;
    dispatch_async(MEMORY[0x1E0C80D38], v6);
  }
}

void sub_185530A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *AudioToolboxLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!AudioToolboxLibraryCore_frameworkLibrary)
    AudioToolboxLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)AudioToolboxLibraryCore_frameworkLibrary;
  if (!AudioToolboxLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AudioToolboxLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("_UIFeedbackSystemSoundEngine.m"), 23, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void *AudioToolboxLibrary_0()
{
  void *v0;
  void *v2;
  void *v3;

  if (!AudioToolboxLibraryCore_frameworkLibrary_0)
    AudioToolboxLibraryCore_frameworkLibrary_0 = _sl_dlopen();
  v0 = (void *)AudioToolboxLibraryCore_frameworkLibrary_0;
  if (!AudioToolboxLibraryCore_frameworkLibrary_0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AudioToolboxLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("_UIFocusSoundGenerator.m"), 29, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void *AudioToolboxLibrary_1()
{
  void *v0;
  void *v2;
  void *v3;

  if (!AudioToolboxLibraryCore_frameworkLibrary_1)
    AudioToolboxLibraryCore_frameworkLibrary_1 = _sl_dlopen();
  v0 = (void *)AudioToolboxLibraryCore_frameworkLibrary_1;
  if (!AudioToolboxLibraryCore_frameworkLibrary_1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AudioToolboxLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("UIDevice.m"), 91, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

id _UIFromValueForAnimation(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v23;

  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = a4;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v7, "values");
    v11 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "objectAtIndex:", 0);
    v12 = (id)objc_claimAutoreleasedReturnValue();
LABEL_17:

    goto LABEL_18;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v11 = v7;
    objc_msgSend(v11, "keyPath");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    +[UIViewPropertyAnimator _originalFromValueForKey:inLayer:forAnimatorWithTrackingIdentifier:](UIViewPropertyAnimator, "_originalFromValueForKey:inLayer:forAnimatorWithTrackingIdentifier:", v13, v9, v10);
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (v14)
    {
      v12 = v14;
LABEL_16:

      goto LABEL_17;
    }
    if (objc_msgSend(v11, "isAdditive"))
    {
      +[UIViewAnimationState originalAnimationForKeyPath:inLayer:](UIViewAnimationState, "originalAnimationForKeyPath:inLayer:", v8, v9);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = v15;
      if (!v15)
      {
        objc_msgSend(v11, "keyPath");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "valueForKeyPath:", v23);
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "fromValue");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v19, "CA_addValue:multipliedBy:", v20, 1);
        v12 = (id)objc_claimAutoreleasedReturnValue();

        goto LABEL_15;
      }
      objc_msgSend(v15, "fromValue");
      v17 = (id)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      objc_msgSend(v11, "fromValue");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = v18;
      if (!v18)
      {
        objc_msgSend(v11, "keyPath");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "valueForKeyPath:", v21);
        v12 = (id)objc_claimAutoreleasedReturnValue();

        goto LABEL_15;
      }
      v17 = v18;
    }
    v12 = v17;
LABEL_15:

    goto LABEL_16;
  }
  v12 = 0;
LABEL_18:

  return v12;
}

id _UIToValueForAnimation(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v5, "values");
    v8 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "lastObject");
    v9 = objc_claimAutoreleasedReturnValue();
    goto LABEL_3;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v8 = v5;
    if ((objc_msgSend(v8, "isAdditive") & 1) != 0
      || (objc_msgSend(v8, "toValue"), v11 = (void *)objc_claimAutoreleasedReturnValue(), v11, !v11))
    {
      objc_getAssociatedObject(v7, &unk_1EDDCA601);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "objectForKey:", v6);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = v13;
      if (v13)
      {
        objc_msgSend(v13, "toValue");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        objc_msgSend(v8, "keyPath");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "valueForKeyPath:", v15);
        v10 = (void *)objc_claimAutoreleasedReturnValue();

      }
      goto LABEL_13;
    }
    objc_msgSend(v8, "toValue");
    v9 = objc_claimAutoreleasedReturnValue();
LABEL_3:
    v10 = (void *)v9;
LABEL_13:

    goto LABEL_14;
  }
  v10 = 0;
LABEL_14:

  return v10;
}

void _BatteryStatusChanged(uint64_t a1, io_registry_entry_t a2, int a3)
{
  if (a3 == -536723200)
  {
    kdebug_trace();
    _UpdateBatteryStatus(a2);
  }
}

void sub_185533490(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_18553356C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void ___smoothDecelerationAnimation_block_invoke()
{
  uint64_t v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  void *v6;
  double v7;
  double v8;
  double v9;

  v0 = objc_opt_new();
  v1 = (void *)qword_1EDDB0C48;
  qword_1EDDB0C48 = v0;

  v8 = 0.0;
  v9 = 0.0;
  v7 = 0.0;
  +[UISpringTimingParameters _convertDampingRatio:response:toMass:stiffness:damping:](UISpringTimingParameters, "_convertDampingRatio:response:toMass:stiffness:damping:", &v9, &v8, &v7, 1.0, 0.6);
  objc_msgSend((id)qword_1EDDB0C48, "setMass:", v9);
  objc_msgSend((id)qword_1EDDB0C48, "setStiffness:", v8);
  objc_msgSend((id)qword_1EDDB0C48, "setDamping:", v7);
  objc_msgSend((id)qword_1EDDB0C48, "durationForEpsilon:", 1.17549435e-38);
  objc_msgSend((id)qword_1EDDB0C48, "setDuration:");
  LODWORD(v2) = 1045220557;
  LODWORD(v3) = 0;
  LODWORD(v4) = 1.0;
  LODWORD(v5) = 1.0;
  objc_msgSend(MEMORY[0x1E0CD27D0], "functionWithControlPoints::::", v3, v2, v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend((id)qword_1EDDB0C48, "setTimingFunction:", v6);

}

void _UIBoundingPathLargestInscribedRectWithAspectRatioAndCenter(double a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  void *v12;
  void *v13;
  CGPoint v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;

  v15.origin.x = a2;
  v15.origin.y = a3;
  v15.size.width = a4;
  v15.size.height = a5;
  v14.x = a6;
  v14.y = a7;
  if (CGRectContainsPoint(v15, v14))
  {
    if (a1 <= 0.0)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CGRect _UIBoundingPathLargestInscribedRectWithAspectRatioAndCenter(const CGFloat, const CGRect, const CGPoint)");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "handleFailureInFunction:file:lineNumber:description:", v13, CFSTR("_UIBoundingPath.m"), 279, CFSTR("Invalid aspect ratio."));

    }
    v16.origin.x = a2;
    v16.origin.y = a3;
    v16.size.width = a4;
    v16.size.height = a5;
    CGRectGetMinX(v16);
    v17.origin.x = a2;
    v17.origin.y = a3;
    v17.size.width = a4;
    v17.size.height = a5;
    CGRectGetMaxX(v17);
    v18.origin.x = a2;
    v18.origin.y = a3;
    v18.size.width = a4;
    v18.size.height = a5;
    CGRectGetMinY(v18);
    v19.origin.x = a2;
    v19.origin.y = a3;
    v19.size.width = a4;
    v19.size.height = a5;
    CGRectGetMaxY(v19);
  }
}

void _UIAspectRatioConvertedFromOrientationToPortrait(double a1)
{
  void *v1;
  void *v2;

  if (a1 == 0.0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CGFloat _UIAspectRatioConvertedFromOrientationToPortrait(CGFloat, UIInterfaceOrientation)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("_UIBoundingPath.m"), 82, CFSTR("Cannot convert an aspect ratio of zero."));

  }
}

void sub_1855347A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 224), 8);
  _Unwind_Resume(a1);
}

void sub_1855358A0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

id getTUIGlowEffectClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)qword_1ECD80828;
  v7 = qword_1ECD80828;
  if (!qword_1ECD80828)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getTUIGlowEffectClass_block_invoke;
    v3[3] = &unk_1E16B14C0;
    v3[4] = &v4;
    __getTUIGlowEffectClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_185537870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getTUIGlowEffectClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD80830)
    qword_1ECD80830 = _sl_dlopen();
  if (!qword_1ECD80830)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *TextInputUILibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("UIDictationGlowEffect.m"), 11, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("TUIGlowEffect");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUIGlowEffectClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UIDictationGlowEffect.m"), 12, CFSTR("Unable to find class %s"), "TUIGlowEffect");

LABEL_8:
    __break(1u);
  }
  qword_1ECD80828 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_185538720(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _UIApplicationIsPasswordManagerExtension()
{
  if (qword_1EDDC8120 != -1)
    dispatch_once(&qword_1EDDC8120, &__block_literal_global_923_1);
  return byte_1EDDC8002;
}

double transitionGapGivenTabController(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  double v4;
  double v5;

  v1 = a1;
  objc_msgSend(v1, "selectedViewController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v1, "selectedViewController");
    v3 = (void *)objc_claimAutoreleasedReturnValue();

    v4 = 0.0;
    if (v3 && objc_msgSend(v3, "_builtinTransitionStyle") == 1)
    {
      objc_msgSend(v3, "_builtinTransitionGap");
      v4 = v5;
    }
  }
  else
  {

    v3 = 0;
    v4 = 0.0;
  }

  return v4;
}

BOOL _UIGetUseTwoFingerPhone()
{
  int v0;
  _BOOL4 v1;
  int v3;

  if (_UIInternalPreferencesRevisionOnce != -1)
    dispatch_once(&_UIInternalPreferencesRevisionOnce, &__block_literal_global_4_20);
  v0 = _UIInternalPreferencesRevisionVar;
  if (_UIInternalPreferencesRevisionVar < 1
    || (v3 = _UIInternalPreference_UseTwoFingerPhone,
        _UIInternalPreferencesRevisionVar == _UIInternalPreference_UseTwoFingerPhone))
  {
    v1 = 0;
  }
  else
  {
    do
    {
      v1 = v0 < v3;
      if (v0 < v3)
        break;
      _UIInternalPreferenceSync(v0, &_UIInternalPreference_UseTwoFingerPhone, (uint64_t)CFSTR("UseTwoFingerPhone"), (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
      v3 = _UIInternalPreference_UseTwoFingerPhone;
    }
    while (v0 != _UIInternalPreference_UseTwoFingerPhone);
  }
  return byte_1ECD75EE4 && v1;
}

void sub_18553F4E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

id getAppleSpellClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)qword_1ECD7B388;
  v7 = qword_1ECD7B388;
  if (!qword_1ECD7B388)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getAppleSpellClass_block_invoke;
    v3[3] = &unk_1E16B14C0;
    v3[4] = &v4;
    __getAppleSpellClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18553FD54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getAppleSpellClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7B390)
    qword_1ECD7B390 = _sl_dlopen();
  if (!qword_1ECD7B390)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ProofReaderLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("UITextChecker.m"), 64, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("AppleSpell");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAppleSpellClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UITextChecker.m"), 66, CFSTR("Unable to find class %s"), "AppleSpell");

LABEL_8:
    __break(1u);
  }
  qword_1ECD7B388 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id _viewFromCoordinateSpace(void *a1)
{
  id v1;
  unint64_t v2;
  NSObject *v3;
  id v4;
  NSObject *v6;
  NSObject *v7;
  void *v8;
  unint64_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint8_t buf[4];
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (os_variant_has_internal_diagnostics())
  {
    __UIFaultDebugAssertLog();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_fault_impl(&dword_185066000, v6, OS_LOG_TYPE_FAULT, "Use of coordinate space SPI methods on UIFeedbackGenerator have been deprecated. Update to view-based UIFeedbackGenerator methods.", buf, 2u);
    }

  }
  else
  {
    v2 = qword_1ECD7D898;
    if (!qword_1ECD7D898)
    {
      v2 = __UILogCategoryGetNode("Assert", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
      atomic_store(v2, (unint64_t *)&qword_1ECD7D898);
    }
    v3 = *(NSObject **)(v2 + 8);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_185066000, v3, OS_LOG_TYPE_ERROR, "Use of coordinate space SPI methods on UIFeedbackGenerator have been deprecated. Update to view-based UIFeedbackGenerator methods.", buf, 2u);
    }
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    _UIIsPrivateMainBundle();
    if (dyld_program_sdk_at_least())
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v7 = objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "UIView * _Nullable _viewFromCoordinateSpace(__strong id<UICoordinateSpace> _Nullable)");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      -[NSObject handleFailureInFunction:file:lineNumber:description:](v7, "handleFailureInFunction:file:lineNumber:description:", v8, CFSTR("UIFeedbackGenerator.m"), 973, CFSTR("Using a non-UIView coordinate space %@ is not supported on all platforms and can cause feedbacks to become no-ops. Update to view-based UIFeedbackGenerator methods."), objc_opt_class());

    }
    else if (os_variant_has_internal_diagnostics())
    {
      __UIFaultDebugAssertLog();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_FAULT))
      {
        v12 = objc_opt_class();
        *(_DWORD *)buf = 138412290;
        v14 = v12;
        _os_log_fault_impl(&dword_185066000, v7, OS_LOG_TYPE_FAULT, "Using a non-UIView coordinate space %@ is not supported on all platforms and can cause feedbacks to become no-ops. Update to view-based UIFeedbackGenerator methods.  This will become an assert in a future version.", buf, 0xCu);
      }
    }
    else
    {
      v9 = qword_1ECD7D8A0;
      if (!qword_1ECD7D8A0)
      {
        v9 = __UILogCategoryGetNode("Assert", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
        atomic_store(v9, (unint64_t *)&qword_1ECD7D8A0);
      }
      v10 = *(NSObject **)(v9 + 8);
      if (!os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        goto LABEL_7;
      v7 = v10;
      v11 = objc_opt_class();
      *(_DWORD *)buf = 138412290;
      v14 = v11;
      _os_log_impl(&dword_185066000, v7, OS_LOG_TYPE_ERROR, "Using a non-UIView coordinate space %@ is not supported on all platforms and can cause feedbacks to become no-ops. Update to view-based UIFeedbackGenerator methods.  This will become an assert in a future version.", buf, 0xCu);
    }

  }
LABEL_7:
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v4 = v1;
  else
    v4 = 0;

  return v4;
}

id _colorsByThemeKeysystemGray3Color()
{
  void *v0;
  UICachedDeviceRGBColor *v1;
  void *v2;
  UICachedDeviceRGBColor *v3;
  void *v4;
  UICachedDeviceRGBColor *v5;
  void *v6;
  UICachedDeviceRGBColor *v7;
  void *v8;
  _QWORD v10[4];
  _QWORD v11[5];

  v11[4] = *MEMORY[0x1E0C80C00];
  _UIThemeKeyFromTraitValues(-1, 0, 0, 0, 0, 0);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v10[0] = v0;
  v1 = -[UIDeviceRGBColor initWithRed:green:blue:alpha:]([UICachedDeviceRGBColor alloc], "initWithRed:green:blue:alpha:", 0.780392157, 0.780392157, 0.8, 1.0);
  v11[0] = v1;
  _UIThemeKeyFromTraitValues(-1, 0, 1, 0, 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v10[1] = v2;
  v3 = -[UIDeviceRGBColor initWithRed:green:blue:alpha:]([UICachedDeviceRGBColor alloc], "initWithRed:green:blue:alpha:", 0.682352941, 0.682352941, 0.698039216, 1.0);
  v11[1] = v3;
  _UIThemeKeyFromTraitValues(-1, 2, 0, 0, 0, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v10[2] = v4;
  v5 = -[UIDeviceRGBColor initWithRed:green:blue:alpha:]([UICachedDeviceRGBColor alloc], "initWithRed:green:blue:alpha:", 0.282352941, 0.282352941, 0.290196078, 1.0);
  v11[2] = v5;
  _UIThemeKeyFromTraitValues(-1, 2, 1, 0, 0, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v10[3] = v6;
  v7 = -[UIDeviceRGBColor initWithRed:green:blue:alpha:]([UICachedDeviceRGBColor alloc], "initWithRed:green:blue:alpha:", 0.329411765, 0.329411765, 0.337254902, 1.0);
  v11[3] = v7;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v11, v10, 4);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

void _UIMenuStateObserverableLeafStateDidChange(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(v1, "_getStateObservers");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
  {
    v10 = 0u;
    v11 = 0u;
    v8 = 0u;
    v9 = 0u;
    v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)v9;
      do
      {
        v7 = 0;
        do
        {
          if (*(_QWORD *)v9 != v6)
            objc_enumerationMutation(v3);
          objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v7++), "_elementStateDidChange:", v1);
        }
        while (v5 != v7);
        v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      }
      while (v5);
    }
  }

}

void ____purgeReusePools_block_invoke(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  if (qword_1ECD7A688 != -1)
    dispatch_once(&qword_1ECD7A688, &__block_literal_global_33_0);
  v5 = (id)qword_1ECD7A680;
  objc_msgSend(v5, "allObjects");
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

uint64_t _UIBundleIDIsAccountBased(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;

  v1 = (void *)MEMORY[0x1E0D47230];
  v2 = a1;
  objc_msgSend(v1, "sharedConnection");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isBundleIDAccountBasedForDragDrop:", v2);

  return v4;
}

uint64_t _UIResponderRequiresTextInput(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;

  v1 = a1;
  if (v1)
  {
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v2 = objc_msgSend(v1, "_requiresKeyboardWhenFirstResponder");
    else
      v2 = objc_msgSend(v1, "conformsToProtocol:", &unk_1EDE22B80);
    v3 = v2;
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

uint64_t _UICollectionViewCellContextMenuSuppressesSelectionState()
{
  int v0;
  _BOOL4 v1;
  int v3;

  if (_UIInternalPreferencesRevisionOnce != -1)
    dispatch_once(&_UIInternalPreferencesRevisionOnce, &__block_literal_global_4_20);
  v0 = _UIInternalPreferencesRevisionVar;
  if (_UIInternalPreferencesRevisionVar < 1
    || (v3 = _UIInternalPreference_CollectionViewCellContextMenuSuppressesSelectionState,
        _UIInternalPreferencesRevisionVar == _UIInternalPreference_CollectionViewCellContextMenuSuppressesSelectionState))
  {
    v1 = 1;
  }
  else
  {
    do
    {
      v1 = v0 >= v3;
      if (v0 < v3)
        break;
      _UIInternalPreferenceSync(v0, &_UIInternalPreference_CollectionViewCellContextMenuSuppressesSelectionState, (uint64_t)CFSTR("CollectionViewCellContextMenuSuppressesSelectionState"), (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
      v3 = _UIInternalPreference_CollectionViewCellContextMenuSuppressesSelectionState;
    }
    while (v0 != _UIInternalPreference_CollectionViewCellContextMenuSuppressesSelectionState);
  }
  return byte_1ECD75F24 || v1;
}

void sub_185548EA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _getTemporaryLocalGeneralPasteboard(_QWORD *a1)
{
  void *v2;
  void *v3;
  id v4;
  id v6;

  _serverConnection();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = 0;
  objc_msgSend(v2, "localGeneralPasteboardWithAuthenticationBlock:dataOwnerBlock:error:", 0, &__block_literal_global_300, &v6);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v6;

  if (a1)
    *a1 = objc_retainAutorelease(v4);

  return v3;
}

id _UIEventDeferringRecreationReasonsForRecreatedRecordOfRecord(_QWORD *a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;

  -[_UIEventDeferringRecord recreationReasons](a1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "count");

  -[_UIEventDeferringRecord recreationReasons](a1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (v5)
  {
    v8 = (void *)objc_msgSend(v6, "mutableCopy");

    objc_msgSend(v8, "removeObject:", CFSTR("_UIEventDeferringRecreationReasonNoLongerTopRemoteRecord"));
    objc_msgSend(v8, "removeObject:", CFSTR("_UIEventDeferringRecreationReasonBehaviorDelegateSuppressed"));
    if (a2)
      objc_msgSend(v8, "removeObject:", a2);
  }
  else
  {
    v8 = v6;
  }
  return v8;
}

void sub_18554AE50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getTUIPredictionViewClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7AB90)
    qword_1ECD7AB90 = _sl_dlopen();
  if (!qword_1ECD7AB90)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *TextInputUILibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("UIKBMultilingualKeyboardIntroductionView.m"), 40, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("TUIPredictionView");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUIPredictionViewClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UIKBMultilingualKeyboardIntroductionView.m"), 41, CFSTR("Unable to find class %s"), "TUIPredictionView");

LABEL_8:
    __break(1u);
  }
  _MergedGlobals_5_10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getTUIPredictionViewClass_block_invoke_0(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7AE10)
    qword_1ECD7AE10 = _sl_dlopen();
  if (!qword_1ECD7AE10)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *TextInputUILibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("UIPredictionViewController.m"), 50, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("TUIPredictionView");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUIPredictionViewClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UIPredictionViewController.m"), 51, CFSTR("Unable to find class %s"), "TUIPredictionView");

LABEL_8:
    __break(1u);
  }
  _MergedGlobals_9_12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id UIKeyboardGetNumbersStringForActiveInputMode()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  if (_ShouldLocalizeNumbersForPreferredLocale())
  {
    UIKeyboardGetNumberFormatterForPreferredLocale();
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "stringFromNumber:", &unk_1E1A98130);
    v1 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@"), v1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@-%@"), CFSTR("UI-Numbers"), v1);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    UIKeyboardGetCurrentInputMode();
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    UIKeyboardLocalizedString(v3, v4, 0, v2);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    UIKeyboardGetCurrentInputMode();
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    UIKeyboardLocalizedString(CFSTR("UI-Numbers"), v1, 0, CFSTR("123"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v5;
}

uint64_t _ShouldLocalizeNumbersForPreferredLocale()
{
  void *v0;
  void *v1;
  uint64_t v2;

  UIKeyboardGetCurrentInputMode();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99DC8], "preferredLocale");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = UIKeyboardInputModeLanguageMatchesLocaleLanguage((uint64_t)v0, v1);

  return v2;
}

id UIKeyboardGetNumberFormatterForPreferredLocale()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;

  objc_msgSend(MEMORY[0x1E0C99DC8], "preferredLocale");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = v0;
  if (qword_1ECD7EAC0)
  {
    v2 = qword_1ECD7EAB8;
    objc_msgSend(v0, "localeIdentifier");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    LOBYTE(v2) = objc_msgSend((id)v2, "isEqualToString:", v3);

    if ((v2 & 1) == 0)
    {
      objc_msgSend((id)qword_1ECD7EAC0, "setLocale:", v1);
      objc_msgSend(v1, "localeIdentifier");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = objc_msgSend(v4, "copy");
      v6 = (void *)qword_1ECD7EAB8;
      qword_1ECD7EAB8 = v5;

    }
  }
  else
  {
    v7 = objc_opt_new();
    v8 = (void *)qword_1ECD7EAC0;
    qword_1ECD7EAC0 = v7;

    objc_msgSend((id)qword_1ECD7EAC0, "setLocale:", v1);
    objc_msgSend(v1, "localeIdentifier");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "copy");
    v11 = (void *)qword_1ECD7EAB8;
    qword_1ECD7EAB8 = v10;

    objc_msgSend((id)qword_1ECD7EAC0, "setNumberStyle:", 0);
  }
  v12 = (id)qword_1ECD7EAC0;

  return v12;
}

uint64_t _UIApplicationIsAccountBased()
{
  if (qword_1ECD81F50 != -1)
    dispatch_once(&qword_1ECD81F50, &__block_literal_global_604);
  return _MergedGlobals_1287;
}

void sub_18554C484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;
  id *v22;

  objc_destroyWeak(v21);
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18554C5EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

Class __getCMMotionManagerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7E300)
    qword_1ECD7E300 = _sl_dlopen();
  if (!qword_1ECD7E300)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreMotionLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("UIAccelerometer.m"), 26, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("CMMotionManager");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCMMotionManagerClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UIAccelerometer.m"), 27, CFSTR("Unable to find class %s"), "CMMotionManager");

LABEL_8:
    __break(1u);
  }
  _MergedGlobals_1091 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getCMMotionManagerClass_block_invoke_0(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7AD80)
    qword_1ECD7AD80 = _sl_dlopen();
  if (!qword_1ECD7AD80)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreMotionLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("UIMotionEffectCoreMotionEventProvider.m"), 29, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("CMMotionManager");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCMMotionManagerClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UIMotionEffectCoreMotionEventProvider.m"), 30, CFSTR("Unable to find class %s"), "CMMotionManager");

LABEL_8:
    __break(1u);
  }
  _MergedGlobals_9_4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

double _UIGetUIMotionEffectMotionUpdateFrequency()
{
  void *v0;
  uint64_t v1;
  double result;

  if (!_UIInternalPreferenceUsesDefault_1((int *)&_UIInternalPreference_UIMotionEffectMotionUpdateFrequency, (uint64_t)CFSTR("UIMotionEffectMotionUpdateFrequency")))return *(double *)&qword_1EDDA81D8;
  +[UIDevice currentDevice](UIDevice, "currentDevice");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  result = 60.0;
  if ((v1 & 0xFFFFFFFFFFFFFFFBLL) == 1)
    return 90.0;
  return result;
}

uint64_t UIKeyboardDeviceSupportsSplit()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  BOOL v4;
  double v5;
  double v6;
  uint64_t v7;
  void *v8;
  void *v9;
  double v10;
  double v11;

  +[UIKeyboardImpl keyboardScreen](UIKeyboardImpl, "keyboardScreen");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  +[UIKeyboard activeKeyboard](UIKeyboard, "activeKeyboard");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  +[UIKBScreenTraits fullScreenTraitsWithScreen:orientation:](UIKBScreenTraits, "fullScreenTraitsWithScreen:orientation:", v0, objc_msgSend(v1, "interfaceOrientation"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  v3 = UIKeyboardComputeKeyboardIdiomFromScreenTraits(v2, objc_msgSend(v2, "idiom"), 0);
  v4 = (unint64_t)(v3 - 23) < 4 || v3 == 1;
  if (!v4 || (unint64_t)(v3 - 23) < 2)
    goto LABEL_14;
  if (+[UIDevice _hasHomeButton](UIDevice, "_hasHomeButton"))
  {
    if (!objc_msgSend(v2, "isKeyboardMinorEdgeWidth") || (objc_msgSend(v2, "keyboardWidth"), v5 <= 834.0))
    {
      if ((objc_msgSend(v2, "isKeyboardMinorEdgeWidth") & 1) != 0)
        goto LABEL_12;
      objc_msgSend(v2, "keyboardWidth");
      if (v6 <= 1112.0)
        goto LABEL_12;
    }
LABEL_14:
    v7 = 0;
    goto LABEL_15;
  }
  +[UIKeyboardPreferencesController sharedPreferencesController](UIKeyboardPreferencesController, "sharedPreferencesController");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "preferencesActions");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "rivenSizeFactor:", 1.0);
  v11 = v10;

  if (v11 == 1.0)
    goto LABEL_14;
LABEL_12:
  v7 = 1;
LABEL_15:

  return v7;
}

_UIViewControllerPreviewingContext *_UIPreviewingContextForViewController(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  char v7;
  _UIViewControllerPreviewingContext *v8;
  _UIViewControllerPreviewingContext *v9;

  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v4
    && (objc_msgSend(v4, "_screen"),
        v6 = (void *)objc_claimAutoreleasedReturnValue(),
        v7 = objc_msgSend(v6, "_isForceTouchCapable"),
        v6,
        (v7 & 1) != 0))
  {
    v8 = -[_UIViewControllerPreviewingContext initWithSourceView:viewController:]([_UIViewControllerPreviewingContext alloc], "initWithSourceView:viewController:", v5, v3);
  }
  else
  {
    v8 = -[_UIInertPreviewingContext initWithSourceView:]([_UIInertPreviewingContext alloc], "initWithSourceView:", v5);
  }
  v9 = v8;

  return v9;
}

void sub_18554EB30(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_18554F278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v11;
  void *v12;

  _Unwind_Resume(a1);
}

void sub_18554F4EC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void std::vector<_UIOutlineNode>::insert(char **a1, char *a2, unint64_t a3)
{
  unint64_t v3;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  __int128 v14;
  unint64_t v15;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  char *v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  __int128 v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  __int128 v34;
  char *v35;
  int64_t v36;
  char *v37;

  v3 = a3;
  v6 = *a1;
  v5 = a1[1];
  v7 = a2 - *a1;
  v8 = v7 / 24;
  v9 = &(*a1)[24 * (v7 / 24)];
  v10 = (unint64_t)a1[2];
  if ((unint64_t)v5 >= v10)
  {
    v15 = 0xAAAAAAAAAAAAAAABLL * ((v5 - v6) >> 3) + 1;
    if (v15 > 0xAAAAAAAAAAAAAAALL)
      abort();
    v17 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v10 - (_QWORD)v6) >> 3);
    if (2 * v17 > v15)
      v15 = 2 * v17;
    if (v17 >= 0x555555555555555)
      v18 = 0xAAAAAAAAAAAAAAALL;
    else
      v18 = v15;
    if (v18)
    {
      v20 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<_UIOutlineNode>>(v18);
    }
    else
    {
      v20 = 0;
      v19 = 0;
    }
    v23 = &v20[24 * v8];
    v24 = &v20[24 * v19];
    if (v8 == v19)
    {
      if (v7 < 1)
      {
        if (v6 == a2)
          v26 = 1;
        else
          v26 = 2 * v8;
        v27 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<_UIOutlineNode>>(v26);
        v23 = &v27[24 * (v26 >> 2)];
        v24 = &v27[24 * v28];
        if (v20)
          operator delete(v20);
      }
      else
      {
        v25 = v8 + 2;
        if (v8 >= -1)
          v25 = v8 + 1;
        v23 -= 24 * (v25 >> 1);
      }
    }
    v29 = *(_OWORD *)v3;
    *((_QWORD *)v23 + 2) = *(_QWORD *)(v3 + 16);
    *(_OWORD *)v23 = v29;
    v30 = *a1;
    v31 = v23;
    if (*a1 != v9)
    {
      v32 = v9;
      v33 = v23;
      do
      {
        v34 = *(_OWORD *)(v32 - 24);
        v31 = v33 - 24;
        *((_QWORD *)v33 - 1) = *((_QWORD *)v32 - 1);
        *(_OWORD *)(v33 - 24) = v34;
        v32 -= 24;
        v33 -= 24;
      }
      while (v32 != v30);
    }
    v35 = a1[1];
    v36 = v35 - v9;
    if (v35 != v9)
      memmove(v23 + 24, v9, v35 - v9);
    v37 = *a1;
    *a1 = v31;
    a1[1] = &v23[v36 + 24];
    a1[2] = v24;
    if (v37)
      operator delete(v37);
  }
  else if (v9 == v5)
  {
    v22 = *(_OWORD *)a3;
    *((_QWORD *)v9 + 2) = *(_QWORD *)(a3 + 16);
    *(_OWORD *)v9 = v22;
    a1[1] = v9 + 24;
  }
  else
  {
    v11 = v9 + 24;
    v12 = v5 - 24;
    v13 = a1[1];
    while (v12 < v5)
    {
      v14 = *(_OWORD *)v12;
      *((_QWORD *)v13 + 2) = *((_QWORD *)v12 + 2);
      *(_OWORD *)v13 = v14;
      v13 += 24;
      v12 += 24;
    }
    a1[1] = v13;
    if (v5 != v11)
      memmove(v9 + 24, v9, v5 - v11);
    if ((unint64_t)v9 <= v3)
      v3 += 24 * ((unint64_t)a1[1] > v3);
    v21 = *(_OWORD *)v3;
    *((_QWORD *)v9 + 2) = *(_QWORD *)(v3 + 16);
    *(_OWORD *)v9 = v21;
  }
}

void sub_18554F790(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

void sub_18554F8AC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18554FA74(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18554FC20(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18554FDCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  void *v16;
  void *v17;

  _Unwind_Resume(a1);
}

void sub_185550FF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *location, id *a14)
{
  id *v14;
  uint64_t v15;

  objc_destroyWeak(v14);
  objc_destroyWeak(location);
  objc_destroyWeak(a14);
  objc_destroyWeak((id *)(v15 - 112));
  _Unwind_Resume(a1);
}

void sub_185553064(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1855548F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

Class __getLNAppConnectionListenerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1EDDC8480)
    qword_1EDDC8480 = _sl_dlopen();
  if (!qword_1EDDC8480)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AppIntentsLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("UIApplication.m"), 589, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("LNAppConnectionListener");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getLNAppConnectionListenerClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UIApplication.m"), 590, CFSTR("Unable to find class %s"), "LNAppConnectionListener");

LABEL_8:
    __break(1u);
  }
  qword_1EDDC8478 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_185554EB0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

Class __getAFUITargetDetectionControllerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7F2B0)
    qword_1ECD7F2B0 = _sl_dlopen();
  if (!qword_1ECD7F2B0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AutoFillUILibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("UIKBAutofillController.m"), 51, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("AFUITargetDetectionController");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAFUITargetDetectionControllerClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UIKBAutofillController.m"), 52, CFSTR("Unable to find class %s"), "AFUITargetDetectionController");

LABEL_8:
    __break(1u);
  }
  qword_1ECD7F2A8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1855582CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185558C4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 80), 8);
  _Unwind_Resume(a1);
}

id _UIFallbackSheetMetrics()
{
  void *v0;
  void *v1;

  +[_UIPresentationControllerDefaultVisualStyleProvider sharedInstance](_UIPresentationControllerDefaultVisualStyleProvider, "sharedInstance");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "defaultSheetMetrics");
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

void sub_1855595D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _UIRTreeContainerNode<_UICollectionViewRTreeElement>::removeElementsIntersecting(int64x2_t *a1, float64x2_t *a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  const void *v9;
  int64x2_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  float64x2_t v27;
  float64x2_t v28;
  float64x2_t v29;
  _OWORD v30[2];

  v28 = a2[1];
  v29 = *a2;
  a1[8].i64[0] = 0;
  a1[8].i64[1] = 0;
  a1[7] = vdupq_n_s64(0x7FF8000000000000uLL);
  v3 = a1[6].i64[0] - a1[5].i64[1];
  if ((uint64_t)v3 >= 1)
  {
    v27 = vaddq_f64(v29, v28);
    v4 = (v3 >> 5) + 1;
    v5 = 40 * (v3 >> 5);
    v6 = 32 * (v3 >> 5);
    v7 = -32 * (v3 >> 5);
    do
    {
      v8 = a1[5].i64[1];
      v9 = (const void *)(v8 + v6);
      v10 = (int64x2_t)vorrq_s8(vandq_s8((int8x16_t)vcgeq_f64(v29, vaddq_f64(*(float64x2_t *)(v8 + v6 - 32), *(float64x2_t *)(v8 + v6 - 16))), (int8x16_t)vcgtq_f64(v29, *(float64x2_t *)(v8 + v6 - 32))), vandq_s8((int8x16_t)vcgtq_f64(*(float64x2_t *)(v8 + v6 - 32), v29), (int8x16_t)vcgeq_f64(*(float64x2_t *)(v8 + v6 - 32), v27)));
      if ((vorrq_s8((int8x16_t)vdupq_laneq_s64(v10, 1), (int8x16_t)v10).u64[0] & 0x8000000000000000) == 0)
      {
        v11 = (const void *)a1[6].i64[0];
        v12 = (uint64_t)v11 + v7 - v8;
        if (v9 != v11)
          memmove((void *)(v8 + v6 - 32), v9, (size_t)v11 + v7 - v8);
        a1[6].i64[0] = v8 + v6 + (v12 & 0xFFFFFFFFFFFFFFE0) - 32;
        v13 = std::__unwrap_and_dispatch[abi:nn180100]<std::__overload<std::__move_loop<std::_ClassicAlgPolicy>,std::__move_trivial>,_UICollectionViewRTreeElement *,_UICollectionViewRTreeElement *,_UICollectionViewRTreeElement *,0>(a1[4].i64[0] + v5, a1[4].i64[1], a1[4].i64[0] + v5 - 40);
        std::vector<_UICollectionViewRTreeElement>::__base_destruct_at_end[abi:nn180100]((uint64_t)a1[4].i64, v13);
      }
      --v4;
      v5 -= 40;
      v6 -= 32;
      v7 += 32;
    }
    while (v4 > 1);
  }
  v14 = a1[3].i64[0] - a1[2].i64[1];
  if (v14 >= 1)
  {
    v15 = (unint64_t)v14 >> 4;
    v16 = 16 * ((unint64_t)v14 >> 4) - 16;
    do
    {
      v17 = v15 - 1;
      v18 = *(_QWORD **)(a1[2].i64[1] + 16 * (v15 - 1));
      v30[0] = v29;
      v30[1] = v28;
      _UIRTreeContainerNode<_UICollectionViewRTreeElement>::removeElementsIntersecting(v18, v30);
      if (v18[9] == v18[8] && v18[6] == v18[5])
      {
        v19 = a1[2].i64[1];
        v20 = a1[3].i64[0];
        v21 = v19 + 16 * v17;
        v22 = v19 + 16 * v15;
        if (v22 != v20)
        {
          v23 = v19 + 16 * v17;
          v21 = v19 + v16;
          do
          {
            v24 = v23 + 16;
            v21 += 16;
            v25 = std::shared_ptr<_UIRTreeContainerNode<unsigned long>>::operator=[abi:nn180100](v23, (__int128 *)(v23 + 16))+ 32;
            v23 = v24;
          }
          while (v25 != v20);
          v22 = a1[3].i64[0];
        }
        while (v22 != v21)
          v22 = std::shared_ptr<_UIRTreeContainerNode<unsigned long>>::~shared_ptr[abi:nn180100](v22 - 16);
        a1[3].i64[0] = v21;
      }
      v16 -= 16;
    }
    while (v15-- > 1);
  }
}

void sub_185559E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getSBSKeyboardFocusServiceClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7DB70)
    qword_1ECD7DB70 = _sl_dlopen();
  if (!qword_1ECD7DB70)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *SpringBoardServicesLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("BKSHIDEventDeferringEnvironment+UIKitAdditions.m"), 12, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("SBSKeyboardFocusService");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getSBSKeyboardFocusServiceClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("BKSHIDEventDeferringEnvironment+UIKitAdditions.m"), 14, CFSTR("Unable to find class %s"), "SBSKeyboardFocusService");

LABEL_8:
    __break(1u);
  }
  qword_1ECD7DB68 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getSBSKeyboardFocusServiceClass_block_invoke_0(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7E2F0)
    qword_1ECD7E2F0 = _sl_dlopen();
  if (!qword_1ECD7E2F0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *SpringBoardServicesLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIKeyShortcutHUDServer.m"), 45, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("SBSKeyboardFocusService");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getSBSKeyboardFocusServiceClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UIKeyShortcutHUDServer.m"), 47, CFSTR("Unable to find class %s"), "SBSKeyboardFocusService");

LABEL_8:
    __break(1u);
  }
  qword_1ECD7E2E8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getSBSKeyboardFocusServiceClass_block_invoke_1(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD82278)
    qword_1ECD82278 = _sl_dlopen();
  if (!qword_1ECD82278)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *SpringBoardServicesLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIONavigationBarTitleRenamerConnectionAction.m"), 34, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("SBSKeyboardFocusService");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getSBSKeyboardFocusServiceClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UIONavigationBarTitleRenamerConnectionAction.m"), 36, CFSTR("Unable to find class %s"), "SBSKeyboardFocusService");

LABEL_8:
    __break(1u);
  }
  _MergedGlobals_1303 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

double _UIApplicationBackgroundTimeRemaining()
{
  NSObject *v0;
  double v1;
  _QWORD block[5];
  uint64_t v4;
  double *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = (double *)&v4;
  v6 = 0x2020000000;
  v7 = 0;
  +[_UIBackgroundTaskInfo backgroundTaskAssertionQueue](_UIBackgroundTaskInfo, "backgroundTaskAssertionQueue");
  v0 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = ___UIApplicationBackgroundTimeRemaining_block_invoke;
  block[3] = &unk_1E16B14C0;
  block[4] = &v4;
  dispatch_sync(v0, block);

  if (v5[3] == INFINITY)
    v1 = 1.79769313e308;
  else
    v1 = v5[3];
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_18555A610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18555B8D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18555FF2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  id *v27;

  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _telemetryOffsetChangeEvent(void *a1, void *a2, int a3, double a4, double a5, double a6)
{
  id v11;
  id v12;
  const __CFString *v13;
  double v14;
  double v15;
  double v16;
  unint64_t v17;
  NSObject *v18;
  os_signpost_id_t v19;
  os_signpost_id_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  _QWORD v26[5];
  _QWORD v27[5];
  uint8_t buf[4];
  id v29;
  __int16 v30;
  id v31;
  __int16 v32;
  const __CFString *v33;
  __int16 v34;
  double v35;
  __int16 v36;
  double v37;
  __int16 v38;
  double v39;
  __int16 v40;
  double v41;
  __int16 v42;
  double v43;
  __int16 v44;
  double v45;
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v11 = a1;
  v12 = a2;
  if ((objc_msgSend(v11, "isTracking") & 1) != 0)
  {
    v13 = CFSTR("Dragging");
  }
  else if ((objc_msgSend(v11, "isDecelerating") & 1) != 0)
  {
    v13 = CFSTR("Deceleration");
  }
  else if (objc_msgSend(v11, "isScrollAnimating"))
  {
    v13 = CFSTR("Animation");
  }
  else
  {
    v13 = CFSTR("Direct");
  }
  v14 = 0.5;
  if (a4 <= 0.5)
    v14 = a4;
  if (a4 >= 0.004)
    v15 = v14;
  else
    v15 = 0.004;
  v16 = sqrt(a5 * a5 + a6 * a6) / v15;
  if (a3)
  {
    v17 = _telemetryOffsetChangeEvent___s_category;
    if (!_telemetryOffsetChangeEvent___s_category)
    {
      v17 = __UILogCategoryGetNode("ScrollView", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
      atomic_store(v17, &_telemetryOffsetChangeEvent___s_category);
    }
    v18 = *(id *)(v17 + 8);
    v19 = os_signpost_id_make_with_pointer(*(os_log_t *)(v17 + 8), v11);
    if (v19 - 1 <= 0xFFFFFFFFFFFFFFFDLL)
    {
      v20 = v19;
      if (os_signpost_enabled(v18))
      {
        *(_DWORD *)buf = 138545410;
        v29 = v12;
        v30 = 2048;
        v31 = v11;
        v32 = 2114;
        v33 = v13;
        v34 = 2048;
        v35 = a5;
        v36 = 2048;
        v37 = a6;
        v38 = 2048;
        v39 = v15;
        v40 = 2048;
        v41 = a5 / v15;
        v42 = 2048;
        v43 = a6 / v15;
        v44 = 2048;
        v45 = v16;
        _os_signpost_emit_with_name_impl(&dword_185066000, v18, OS_SIGNPOST_EVENT, v20, "OffsetChange", "bundleId=%{public}@, view=%p, reason=%{public}@, dx=%.03f, dy=%.03f, dt=%.03f, vx=%.03f, vy=%.03f, vs=%.03f", buf, 0x5Cu);
      }
    }

  }
  v27[0] = v12;
  v27[1] = v13;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", a5 / v15, CFSTR("BundleId"), CFSTR("Reason"), CFSTR("Vx"));
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v27[2] = v21;
  v26[3] = CFSTR("Vy");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", a6 / v15);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v27[3] = v22;
  v26[4] = CFSTR("Vs");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v16);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v27[4] = v23;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v27, v26, 5);
  v24 = (void *)objc_claimAutoreleasedReturnValue();

  return v24;
}

id _UIRenderViewImageAfterCommit(void *a1, void *a2, int a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  unint64_t v12;
  NSObject *v13;
  id v14;
  void *v15;
  unint64_t v16;
  NSObject *v17;
  NSObject *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  _BOOL4 v23;
  unint64_t v24;
  NSObject *v25;
  uint64_t v26;
  unint64_t v27;
  NSObject *v28;
  NSObject *v29;
  _QWORD aBlock[6];
  id v32;
  _BYTE *v33;
  id v34;
  uint8_t v35[4];
  id v36;
  __int16 v37;
  uint64_t v38;
  _BYTE buf[24];
  uint64_t (*v40)(uint64_t, uint64_t);
  void (*v41)(uint64_t);
  id v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  if (v5)
  {
    objc_msgSend(v5, "layer");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = v7;
    if ((a3 & 1) != 0)
    {
      objc_msgSend(v7, "context");
      v9 = (void *)objc_claimAutoreleasedReturnValue();

      v10 = &__block_literal_global_70_1;
      if (v9)
      {
        v11 = 0;
      }
      else
      {
        v34 = &__block_literal_global_70_1;
        _moveViewToTemporaryWindow(v5, &v34);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = v34;
      }
      goto LABEL_18;
    }
    if ((objc_msgSend(v7, "hasBeenCommitted") & 1) != 0)
    {
      objc_msgSend(v8, "context");
      v15 = (void *)objc_claimAutoreleasedReturnValue();

      if (v15)
      {
        v11 = 0;
        v10 = &__block_literal_global_70_1;
LABEL_18:
        *(_QWORD *)buf = 0;
        *(_QWORD *)&buf[8] = buf;
        *(_QWORD *)&buf[16] = 0x3032000000;
        v40 = __Block_byref_object_copy__167;
        v41 = __Block_byref_object_dispose__167;
        v42 = 0;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 3221225472;
        aBlock[2] = ___UIRenderViewImageAfterCommit_block_invoke_71;
        aBlock[3] = &unk_1E16DEDF0;
        aBlock[4] = v5;
        aBlock[5] = v6;
        v33 = buf;
        v19 = v10;
        v32 = v19;
        v20 = _Block_copy(aBlock);
        v21 = v20;
        if (a3)
        {
          if (!v11)
            goto LABEL_25;
          if (qword_1ECD7F9F0 != -1)
            dispatch_once(&qword_1ECD7F9F0, &__block_literal_global_126);
          if (_MergedGlobals_1195)
          {
            objc_msgSend(v8, "context");
            v22 = (void *)objc_claimAutoreleasedReturnValue();
            v23 = v22 == 0;
          }
          else
          {
LABEL_25:
            v22 = 0;
            v23 = 1;
          }
          if ((_performAfterContextCommitUnderCoverAllowDefer(v22, v23, 0, v21) & 1) == 0)
          {
            v24 = qword_1ECD7F960;
            if (!qword_1ECD7F960)
            {
              v24 = __UILogCategoryGetNode("Snapshotting", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
              atomic_store(v24, (unint64_t *)&qword_1ECD7F960);
            }
            v25 = *(id *)(v24 + 8);
            if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
            {
              v26 = objc_opt_class();
              *(_DWORD *)v35 = 134218242;
              v36 = v5;
              v37 = 2112;
              v38 = v26;
              _os_log_impl(&dword_185066000, v25, OS_LOG_TYPE_ERROR, "View (%p, %@) drawing with afterScreenUpdates:YES inside CoreAnimation commit is not supported.", v35, 0x16u);
            }

          }
        }
        else
        {
          (*((void (**)(void *))v20 + 2))(v20);
        }
        v14 = *(id *)(*(_QWORD *)&buf[8] + 40);

        _Block_object_dispose(buf, 8);
        goto LABEL_39;
      }
      v27 = qword_1ECD7F958;
      if (!qword_1ECD7F958)
      {
        v27 = __UILogCategoryGetNode("Snapshotting", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
        atomic_store(v27, (unint64_t *)&qword_1ECD7F958);
      }
      v28 = *(NSObject **)(v27 + 8);
      if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
      {
        v29 = v28;
        *(_DWORD *)buf = 134218242;
        *(_QWORD *)&buf[4] = v5;
        *(_WORD *)&buf[12] = 2112;
        *(_QWORD *)&buf[14] = objc_opt_class();
        _os_log_impl(&dword_185066000, v29, OS_LOG_TYPE_ERROR, "Rendering a view (%p, %@) that is not in a visible window requires afterScreenUpdates:YES.", buf, 0x16u);

      }
    }
    else
    {
      v16 = qword_1ECD7F950;
      if (!qword_1ECD7F950)
      {
        v16 = __UILogCategoryGetNode("Snapshotting", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
        atomic_store(v16, (unint64_t *)&qword_1ECD7F950);
      }
      v17 = *(NSObject **)(v16 + 8);
      if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      {
        v18 = v17;
        *(_DWORD *)buf = 134218242;
        *(_QWORD *)&buf[4] = v5;
        *(_WORD *)&buf[12] = 2112;
        *(_QWORD *)&buf[14] = objc_opt_class();
        _os_log_impl(&dword_185066000, v18, OS_LOG_TYPE_ERROR, "Rendering a view (%p, %@) that has not been rendered at least once requires afterScreenUpdates:YES.", buf, 0x16u);

      }
    }
    v14 = 0;
LABEL_39:

    goto LABEL_40;
  }
  v12 = qword_1ECD7F948;
  if (!qword_1ECD7F948)
  {
    v12 = __UILogCategoryGetNode("Snapshotting", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
    atomic_store(v12, (unint64_t *)&qword_1ECD7F948);
  }
  v13 = *(NSObject **)(v12 + 8);
  if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_185066000, v13, OS_LOG_TYPE_ERROR, "View rendering requires non-nil view.", buf, 2u);
  }
  v14 = 0;
LABEL_40:

  return v14;
}

void sub_185562A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__IOSurface *_UIRenderView(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  __CFString *v27;
  __CFString *v28;
  __int128 v29;
  __int128 v30;
  unint64_t v31;
  NSObject *v32;
  NSObject *v33;
  __IOSurface *v34;
  unint64_t v35;
  NSObject *v36;
  NSObject *v37;
  uint64_t v38;
  id v39;
  void *v40;
  const char *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  void *v45;
  double v46;
  double v47;
  double v48;
  double v49;
  void *v50;
  void *v51;
  double v52;
  double v53;
  double v54;
  double v55;
  void *v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  void *v62;
  uint64_t (**v63)(_QWORD, void *, double, double);
  double v64;
  double v65;
  void *v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  void *v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  void *v77;
  __IOSurface *v78;
  void *v79;
  CFTypeID v80;
  double v81;
  double v82;
  uint64_t i;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  void *v104;
  __CFString *v105;
  unint64_t v106;
  NSObject *v107;
  NSObject *v108;
  __CFString *v109;
  unint64_t v110;
  NSObject *v111;
  NSObject *v112;
  uint64_t v113;
  void *v115;
  void *v116;
  id v117;
  void *v118;
  void *v119;
  double v120;
  void *v121;
  CGFloat v122;
  void *v123;
  CGFloat v124;
  void *v125;
  __CFString *v126;
  void *v127;
  void *v128;
  void *v129;
  void *v130;
  void *v131;
  CATransform3D v132;
  CATransform3D v133;
  _QWORD v134[2];
  CGAffineTransform v135;
  CATransform3D b;
  CATransform3D a;
  CATransform3D v138;
  CGAffineTransform m;
  CATransform3D v140;
  _QWORD v141[8];
  _QWORD v142[8];
  CATransform3D buf;
  CATransform3D v144;
  CATransform3D v145;
  CATransform3D v146;
  CATransform3D v147;
  _QWORD v148[4];
  _QWORD v149[7];
  CGRect v150;

  v149[4] = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_msgSend(v5, "layer");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v8, "hasBeenCommitted") & 1) != 0)
  {
    objc_msgSend(v5, "_screen");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "context");
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v10 || !v9)
    {
      v35 = qword_1ECD7F9B0;
      if (!qword_1ECD7F9B0)
      {
        v35 = __UILogCategoryGetNode("Snapshotting", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
        atomic_store(v35, (unint64_t *)&qword_1ECD7F9B0);
      }
      v36 = *(NSObject **)(v35 + 8);
      if (os_log_type_enabled(v36, OS_LOG_TYPE_ERROR))
      {
        v37 = v36;
        v38 = objc_opt_class();
        objc_msgSend(v8, "context");
        v39 = v7;
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        v41 = "has";
        LODWORD(buf.m11) = 134218498;
        *(_QWORD *)((char *)&buf.m11 + 4) = v5;
        if (!v40)
          v41 = "no";
        WORD2(buf.m12) = 2112;
        *(_QWORD *)((char *)&buf.m12 + 6) = v38;
        HIWORD(buf.m13) = 2080;
        *(_QWORD *)&buf.m14 = v41;
        _os_log_impl(&dword_185066000, v37, OS_LOG_TYPE_ERROR, "Rendering a view (%p, %@) that is not in a visible window is not supported (%s context).", (uint8_t *)&buf, 0x20u);

        v7 = v39;
      }
      v34 = 0;
      goto LABEL_80;
    }
    objc_msgSend(v8, "bounds");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;
    objc_msgSend(v8, "frame");
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v26 = v25;
    objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("src-transform"));
    v27 = (__CFString *)objc_claimAutoreleasedReturnValue();
    v28 = v27;
    memset(&v140, 0, sizeof(v140));
    if (v27)
    {
      if (v27 == CFSTR("src-bounds-transform"))
      {
        CATransform3DMakeTranslation(&v140, -v12, -v14, 0.0);
        goto LABEL_24;
      }
      if (v27 == CFSTR("src-frame-transform"))
      {
        CALayerFrameAffineTransform();
        CATransform3DMakeAffineTransform(&buf, &m);
        CATransform3DMakeTranslation(&v144, -v20, -v22, 0.0);
        a = buf;
        b = v144;
        CATransform3DConcat(&v138, &a, &b);
        *(_OWORD *)&v140.m31 = *(_OWORD *)&v138.m31;
        *(_OWORD *)&v140.m33 = *(_OWORD *)&v138.m33;
        *(_OWORD *)&v140.m41 = *(_OWORD *)&v138.m41;
        *(_OWORD *)&v140.m43 = *(_OWORD *)&v138.m43;
        *(_OWORD *)&v140.m11 = *(_OWORD *)&v138.m11;
        *(_OWORD *)&v140.m13 = *(_OWORD *)&v138.m13;
        v29 = *(_OWORD *)&v138.m21;
        v30 = *(_OWORD *)&v138.m23;
      }
      else
      {
        -[__CFString CATransform3DValue](v27, "CATransform3DValue");
        *(_OWORD *)&v140.m31 = *(_OWORD *)&buf.m31;
        *(_OWORD *)&v140.m33 = *(_OWORD *)&buf.m33;
        *(_OWORD *)&v140.m41 = *(_OWORD *)&buf.m41;
        *(_OWORD *)&v140.m43 = *(_OWORD *)&buf.m43;
        *(_OWORD *)&v140.m11 = *(_OWORD *)&buf.m11;
        *(_OWORD *)&v140.m13 = *(_OWORD *)&buf.m13;
        v29 = *(_OWORD *)&buf.m21;
        v30 = *(_OWORD *)&buf.m23;
      }
    }
    else
    {
      v42 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 80);
      *(_OWORD *)&v140.m31 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 64);
      *(_OWORD *)&v140.m33 = v42;
      v43 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 112);
      *(_OWORD *)&v140.m41 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 96);
      *(_OWORD *)&v140.m43 = v43;
      v44 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 16);
      *(_OWORD *)&v140.m11 = *MEMORY[0x1E0CD2610];
      *(_OWORD *)&v140.m13 = v44;
      v29 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 32);
      v30 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 48);
    }
    *(_OWORD *)&v140.m21 = v29;
    *(_OWORD *)&v140.m23 = v30;
LABEL_24:
    objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("src-rect"));
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    v131 = v45;
    if (v45)
    {
      objc_msgSend(v45, "CGRectValue");
LABEL_26:
      v120 = v46;
      v14 = v47;
      v16 = v48;
      v18 = v49;
      goto LABEL_27;
    }
    if (v28)
    {
      if (v28 == CFSTR("src-bounds-transform"))
      {
        v14 = *(double *)(MEMORY[0x1E0C9D538] + 8);
        v120 = *MEMORY[0x1E0C9D538];
      }
      else
      {
        if (v28 != CFSTR("src-frame-transform"))
        {
          buf = v140;
          CATransform3DGetAffineTransform(&v135, &buf);
          v150.origin.x = v12;
          v150.origin.y = v14;
          v150.size.width = v16;
          v150.size.height = v18;
          *(CGRect *)&v46 = CGRectApplyAffineTransform(v150, &v135);
          goto LABEL_26;
        }
        v14 = *(double *)(MEMORY[0x1E0C9D538] + 8);
        v120 = *MEMORY[0x1E0C9D538];
        v16 = v24;
        v18 = v26;
      }
    }
    else
    {
      v120 = v12;
    }
LABEL_27:
    objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("dst-size"));
    v50 = (void *)objc_claimAutoreleasedReturnValue();
    v51 = v50;
    v52 = v16;
    v53 = v18;
    if (v50)
    {
      objc_msgSend(v50, "CGSizeValue");
      v52 = v54;
      v53 = v55;
    }
    objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("dst-rect"));
    v56 = (void *)objc_claimAutoreleasedReturnValue();
    v129 = v56;
    if (v56)
    {
      objc_msgSend(v56, "CGRectValue");
      v122 = v58;
      v124 = v57;
      v52 = v59;
      v53 = v60;
    }
    else
    {
      v122 = *(double *)(MEMORY[0x1E0C9D538] + 8);
      v124 = *MEMORY[0x1E0C9D538];
    }
    v61 = v14;
    objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("dst-scale"));
    v62 = (void *)objc_claimAutoreleasedReturnValue();
    v128 = v62;
    v63 = (uint64_t (**)(_QWORD, void *, double, double))v7;
    if (v62)
      objc_msgSend(v62, "doubleValue");
    else
      objc_msgSend(v9, "scale");
    v65 = v64;
    v130 = v51;
    v126 = v28;
    objc_msgSend(v6, "objectForKeyedSubscript:", CFSTR("dst-gamut"));
    v66 = (void *)objc_claimAutoreleasedReturnValue();
    v127 = v66;
    if (!v66 || (v67 = v66, objc_msgSend(v66, "integerValue") == -1))
    {
      v68 = v9;
      v69 = _UIRenderingDefaultGamut(v9);
    }
    else
    {
      v68 = v9;
      v69 = objc_msgSend(v67, "integerValue");
    }
    v70 = v69;
    v148[0] = CFSTR("dst-size");
    *(double *)v134 = v52;
    *(double *)&v134[1] = v53;
    objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithBytes:objCType:", v134, "{CGSize=dd}");
    v71 = (void *)objc_claimAutoreleasedReturnValue();
    v149[0] = v71;
    v148[1] = CFSTR("dst-scale");
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v65);
    v72 = (void *)objc_claimAutoreleasedReturnValue();
    v149[1] = v72;
    v148[2] = CFSTR("dst-gamut");
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", v70);
    v73 = (void *)objc_claimAutoreleasedReturnValue();
    v149[2] = v73;
    v148[3] = CFSTR("dst-opaque");
    objc_msgSend(v6, "objectForKeyedSubscript:");
    v74 = objc_claimAutoreleasedReturnValue();
    v75 = (void *)v74;
    v76 = MEMORY[0x1E0C9AAA0];
    if (v74)
      v76 = v74;
    v149[3] = v76;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v149, v148, 4);
    v77 = (void *)objc_claimAutoreleasedReturnValue();

    v7 = v63;
    if (v63)
      v78 = (__IOSurface *)v63[2](v63, v77, v52 * v65, v53 * v65);
    else
      v78 = _UIRenderingBufferCreate(v77, v52 * v65, v53 * v65);
    v34 = v78;
    v79 = v77;
    if (v78)
    {
      v80 = CFGetTypeID(v78);
      if (IOSurfaceGetTypeID() == v80)
      {
        v81 = 1.0;
        v82 = 1.0;
        if (v52 != v16)
        {
          v82 = 0.0;
          if (v16 != 0.0)
            v82 = v52 / v16;
        }
        if (v53 != v18)
        {
          v81 = 0.0;
          if (v18 != 0.0)
            v81 = v53 / v18;
        }
        v115 = v77;
        v117 = v7;
        memset(&v138, 0, sizeof(v138));
        buf = v140;
        CATransform3DMakeTranslation(&v144, -v120, -v61, 0.0);
        CATransform3DMakeScale(&v145, v82, v81, 1.0);
        CATransform3DMakeTranslation(&v146, v124, v122, 0.0);
        CATransform3DMakeScale(&v147, v65, v65, 1.0);
        b = buf;
        v133 = v144;
        CATransform3DConcat(&a, &b, &v133);
        for (i = 256; i != 640; i += 128)
        {
          v133 = a;
          v84 = *(_OWORD *)((char *)&buf.m33 + i);
          *(_OWORD *)&v132.m31 = *(_OWORD *)((char *)&buf.m31 + i);
          *(_OWORD *)&v132.m33 = v84;
          v85 = *(_OWORD *)((char *)&buf.m43 + i);
          *(_OWORD *)&v132.m41 = *(_OWORD *)((char *)&buf.m41 + i);
          *(_OWORD *)&v132.m43 = v85;
          v86 = *(_OWORD *)((char *)&buf.m13 + i);
          *(_OWORD *)&v132.m11 = *(_OWORD *)((char *)&buf.m11 + i);
          *(_OWORD *)&v132.m13 = v86;
          v87 = *(_OWORD *)((char *)&buf.m23 + i);
          *(_OWORD *)&v132.m21 = *(_OWORD *)((char *)&buf.m21 + i);
          *(_OWORD *)&v132.m23 = v87;
          CATransform3DConcat(&b, &v133, &v132);
          a = b;
        }
        v138 = a;
        v88 = *MEMORY[0x1E0CD30F0];
        v142[0] = *MEMORY[0x1E0CD3110];
        v89 = *MEMORY[0x1E0CD30B0];
        v141[0] = v88;
        v141[1] = v89;
        objc_msgSend(v68, "_name");
        v125 = (void *)objc_claimAutoreleasedReturnValue();
        v142[1] = v125;
        v141[2] = *MEMORY[0x1E0CD3098];
        v90 = (void *)MEMORY[0x1E0CB37E8];
        objc_msgSend(v8, "context");
        v123 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v90, "numberWithUnsignedInt:", objc_msgSend(v123, "contextId"));
        v121 = (void *)objc_claimAutoreleasedReturnValue();
        v142[2] = v121;
        v141[3] = *MEMORY[0x1E0CD30E8];
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLongLong:", v8);
        v91 = (void *)objc_claimAutoreleasedReturnValue();
        v92 = *MEMORY[0x1E0CD30A8];
        v142[3] = v91;
        v142[4] = v34;
        v93 = *MEMORY[0x1E0CD3140];
        v141[4] = v92;
        v141[5] = v93;
        buf = v138;
        objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCATransform3D:", &buf);
        v94 = (void *)objc_claimAutoreleasedReturnValue();
        v142[5] = v94;
        v141[6] = *MEMORY[0x1E0CD3130];
        objc_msgSend(v6, "objectForKeyedSubscript:");
        v95 = objc_claimAutoreleasedReturnValue();
        v96 = (void *)v95;
        v97 = MEMORY[0x1E0C9AAB0];
        if (v95)
          v98 = v95;
        else
          v98 = MEMORY[0x1E0C9AAB0];
        v142[6] = v98;
        v141[7] = *MEMORY[0x1E0CD30E0];
        objc_msgSend(v6, "objectForKeyedSubscript:", v115, v117);
        v99 = objc_claimAutoreleasedReturnValue();
        v100 = (void *)v99;
        if (v99)
          v101 = v99;
        else
          v101 = v97;
        v142[7] = v101;
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v142, v141, 8);
        v102 = (void *)objc_claimAutoreleasedReturnValue();
        v119 = v68;
        -[UIScreen _appendSnapshotDisplaySystemIdentifierToOptionsIfNeeded:](v68, v102);
        v103 = objc_claimAutoreleasedReturnValue();

        v104 = (void *)v103;
        if ((CARenderServerSnapshot() & 1) != 0)
        {
          v7 = v118;
          v9 = v119;
          v105 = v126;
          v79 = v116;
        }
        else
        {
          v110 = qword_1ECD7F9C0;
          v79 = v116;
          v7 = v118;
          v105 = v126;
          if (!qword_1ECD7F9C0)
          {
            v110 = __UILogCategoryGetNode("Snapshotting", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
            atomic_store(v110, (unint64_t *)&qword_1ECD7F9C0);
          }
          v111 = *(NSObject **)(v110 + 8);
          v9 = v119;
          if (os_log_type_enabled(v111, OS_LOG_TYPE_FAULT))
          {
            v112 = v111;
            v113 = objc_opt_class();
            LODWORD(buf.m11) = 134218242;
            *(_QWORD *)((char *)&buf.m11 + 4) = v5;
            WORD2(buf.m12) = 2112;
            *(_QWORD *)((char *)&buf.m12 + 6) = v113;
            _os_log_impl(&dword_185066000, v112, OS_LOG_TYPE_FAULT, "Render server returned error for view (%p, %@).", (uint8_t *)&buf, 0x16u);

          }
          CFRelease(v34);
          v34 = 0;
        }

        goto LABEL_79;
      }
      v106 = qword_1ECD7F9B8;
      if (!qword_1ECD7F9B8)
      {
        v106 = __UILogCategoryGetNode("Snapshotting", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
        atomic_store(v106, (unint64_t *)&qword_1ECD7F9B8);
      }
      v107 = *(NSObject **)(v106 + 8);
      v9 = v68;
      if (os_log_type_enabled(v107, OS_LOG_TYPE_ERROR))
      {
        v108 = v107;
        v109 = (__CFString *)CFCopyTypeIDDescription(v80);
        LODWORD(buf.m11) = 138412290;
        *(_QWORD *)((char *)&buf.m11 + 4) = v109;
        _os_log_impl(&dword_185066000, v108, OS_LOG_TYPE_ERROR, "Rendering into destination of type %@ not supported.", (uint8_t *)&buf, 0xCu);

      }
      CFRelease(v34);
      v34 = 0;
    }
    else
    {
      v9 = v68;
    }
    v105 = v126;
LABEL_79:

LABEL_80:
    goto LABEL_81;
  }
  v31 = qword_1ECD7F9A8;
  if (!qword_1ECD7F9A8)
  {
    v31 = __UILogCategoryGetNode("Snapshotting", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
    atomic_store(v31, (unint64_t *)&qword_1ECD7F9A8);
  }
  v32 = *(NSObject **)(v31 + 8);
  if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
  {
    v33 = v32;
    LODWORD(buf.m11) = 134218242;
    *(_QWORD *)((char *)&buf.m11 + 4) = v5;
    WORD2(buf.m12) = 2112;
    *(_QWORD *)((char *)&buf.m12 + 6) = objc_opt_class();
    _os_log_impl(&dword_185066000, v33, OS_LOG_TYPE_ERROR, "Rendering a view (%p, %@) that has not been committed to render server is not supported.", (uint8_t *)&buf, 0x16u);

  }
  v34 = 0;
LABEL_81:

  return v34;
}

__IOSurface *_UIRenderingBufferCreate(void *a1, double a2, double a3)
{
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  const __CFDictionary *v11;
  __IOSurface *v12;
  void *v13;
  void *v14;
  float v16;
  unint64_t v17;
  float v18;
  unint64_t v19;
  uint64_t AlignedBytesPerRow;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  float v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  _QWORD v56[3];

  v56[2] = *MEMORY[0x1E0C80C00];
  v5 = a1;
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("dst-gamut"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (!v6 || objc_msgSend(v6, "intValue") == -1)
    v8 = _UIRenderingDefaultGamut(0);
  else
    v8 = (int)objc_msgSend(v7, "intValue");
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("dst-opaque"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v9;
  if (v9)
    LODWORD(v9) = objc_msgSend(v9, "BOOLValue");
  if (v8 == 1)
  {
    v16 = a2;
    if ((_DWORD)v9)
    {
      v17 = llroundf(v16);
      v18 = a3;
      v19 = llroundf(v18);
      AlignedBytesPerRow = CGBitmapGetAlignedBytesPerRow();
      v21 = (AlignedBytesPerRow * v19);
      v44 = *MEMORY[0x1E0CBC1E0];
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v17);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v50 = v22;
      v45 = *MEMORY[0x1E0CBC008];
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v19);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v51 = v23;
      v52 = &unk_1E1A99E58;
      v24 = *MEMORY[0x1E0CBBF00];
      v46 = *MEMORY[0x1E0CBC070];
      v47 = v24;
      v53 = &unk_1E1A99E70;
      v48 = *MEMORY[0x1E0CBBF08];
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLong:", AlignedBytesPerRow);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v54 = v25;
      v49 = *MEMORY[0x1E0CBBEE0];
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v21);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v55 = v26;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v50, &v44, 6);
      v11 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v27 = llroundf(v16);
      v28 = a3;
      v29 = llroundf(v28);
      v30 = *MEMORY[0x1E0CBBF08];
      v31 = MEMORY[0x186DC7C84](*MEMORY[0x1E0CBBF08], 4 * v27);
      v32 = v31 * v29;
      _makeIOSurfacePlaneProperties(v27, v29, v31, 0, v31 * v29);
      v43 = (void *)objc_claimAutoreleasedReturnValue();
      v33 = MEMORY[0x186DC7C84](v30, v27);
      v34 = v33 * v29;
      _makeIOSurfacePlaneProperties(v27, v29, v33, v32, v33 * v29);
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      v36 = v34 + v32;
      v44 = *MEMORY[0x1E0CBC1E0];
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLong:", v27);
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      v50 = v37;
      v45 = *MEMORY[0x1E0CBC008];
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLong:", v29);
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      v39 = *MEMORY[0x1E0CBC070];
      v51 = v38;
      v52 = &unk_1E1A99E88;
      v40 = *MEMORY[0x1E0CBC158];
      v46 = v39;
      v47 = v40;
      v56[0] = v43;
      v56[1] = v35;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v56, 2);
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      v53 = v41;
      v48 = *MEMORY[0x1E0CBBEE0];
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLong:", v36);
      v42 = (void *)objc_claimAutoreleasedReturnValue();
      v54 = v42;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v50, &v44, 5);
      v11 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue();

    }
  }
  else
  {
    _makeIOSurfacePropertiesBGRA(a2, a3);
    v11 = (const __CFDictionary *)objc_claimAutoreleasedReturnValue();
  }
  v12 = IOSurfaceCreate(v11);
  objc_msgSend(v5, "objectForKeyedSubscript:", CFSTR("dst-scale"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v13;
  if (v12 && v13)
    IOSurfaceSetValue(v12, CFSTR("scale"), v13);

  return v12;
}

id _makeIOSurfacePropertiesBGRA(double a1, double a2)
{
  float v2;
  unint64_t v3;
  float v4;
  unint64_t v5;
  uint64_t AlignedBytesPerRow;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  _QWORD v15[6];
  _QWORD v16[7];

  v16[6] = *MEMORY[0x1E0C80C00];
  v2 = a1;
  v3 = llroundf(v2);
  v4 = a2;
  v5 = llroundf(v4);
  AlignedBytesPerRow = CGBitmapGetAlignedBytesPerRow();
  v7 = (AlignedBytesPerRow * v5);
  v15[0] = *MEMORY[0x1E0CBC1E0];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLong:", v3);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v16[0] = v8;
  v15[1] = *MEMORY[0x1E0CBC008];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLong:", v5);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v16[1] = v9;
  v16[2] = &unk_1E1A99E28;
  v10 = *MEMORY[0x1E0CBBF00];
  v15[2] = *MEMORY[0x1E0CBC070];
  v15[3] = v10;
  v16[3] = &unk_1E1A99E40;
  v15[4] = *MEMORY[0x1E0CBBF08];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLong:", AlignedBytesPerRow);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v16[4] = v11;
  v15[5] = *MEMORY[0x1E0CBBEE0];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v7);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v16[5] = v12;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v16, v15, 6);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  return v13;
}

void ClearSpecialViews(void *a1, CFMutableDictionaryRef *a2)
{
  id v3;
  CFIndex Count;
  id v5;

  v3 = a1;
  if (*a2)
  {
    v5 = v3;
    CFDictionaryRemoveValue(*a2, v3);
    Count = CFDictionaryGetCount(*a2);
    v3 = v5;
    if (!Count)
    {
      CFRelease(*a2);
      v3 = v5;
      *a2 = 0;
    }
  }

}

_UIReplicantView *_UISnapshotViewRectAfterCommit(void *a1, int a2, double a3, double a4, double a5, double a6)
{
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  unint64_t v18;
  NSObject *v19;
  _UIReplicantView *v20;
  void *v21;
  unint64_t v22;
  NSObject *v23;
  NSObject *v24;
  _UIReplicantView *v25;
  id v26;
  void *v27;
  double v28;
  _UIReplicantView *v29;
  uint64_t v30;
  _UIReplicantView *v31;
  void *v32;
  _UIReplicantView *v33;
  _UIReplicantView *v34;
  id v35;
  void *v36;
  void *v37;
  void *v38;
  _BOOL4 v39;
  void *v40;
  unint64_t v41;
  NSObject *v42;
  NSObject *v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  void *v48;
  id v49;
  id v50;
  id v51;
  _OWORD v52[8];
  double v53[5];
  _BYTE buf[24];
  void *v55;
  id v56;
  _UIReplicantView *v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;

  v66 = *MEMORY[0x1E0C80C00];
  v11 = a1;
  v12 = v11;
  if (v11)
  {
    objc_msgSend(v11, "layer");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = v13;
    if ((a2 & 1) != 0)
    {
      objc_msgSend(v13, "context");
      v15 = (void *)objc_claimAutoreleasedReturnValue();

      v16 = &__block_literal_global_77_2;
      if (v15)
      {
        v17 = 0;
      }
      else
      {
        v51 = &__block_literal_global_77_2;
        _moveViewToTemporaryWindow(v12, &v51);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = v51;

      }
      goto LABEL_20;
    }
    if ((objc_msgSend(v13, "hasBeenCommitted") & 1) != 0)
    {
      objc_msgSend(v14, "context");
      v21 = (void *)objc_claimAutoreleasedReturnValue();

      if (v21)
      {
        v17 = 0;
        v16 = &__block_literal_global_77_2;
LABEL_20:
        v26 = v12;
        objc_msgSend(v26, "_screen");
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v27, "_scale");
        v53[4] = v28;

        v53[0] = a3;
        v53[1] = a4;
        v53[2] = a5;
        v53[3] = a6;
        _UIRenderingSurfaceTransform(v53, v52);
        v29 = -[_UIReplicantView initWithSurface:]([_UIReplicantView alloc], "initWithSurface:", v53);
        v30 = MEMORY[0x1E0C809B0];
        *(_QWORD *)buf = MEMORY[0x1E0C809B0];
        *(_QWORD *)&buf[8] = 3221225472;
        *(_QWORD *)&buf[16] = ___UISnapshotViewRectBlock_block_invoke;
        v55 = &unk_1E16DEE80;
        v56 = v26;
        v31 = v29;
        v57 = v31;
        v62 = v52[4];
        v63 = v52[5];
        v64 = v52[6];
        v65 = v52[7];
        v58 = v52[0];
        v59 = v52[1];
        v60 = v52[2];
        v61 = v52[3];
        v32 = _Block_copy(buf);
        v33 = v57;
        v34 = v31;

        v45 = v30;
        v46 = 3221225472;
        v47 = ___UISnapshotViewRectAfterCommit_block_invoke_2;
        v48 = &unk_1E16B6740;
        v49 = v32;
        v35 = v16;
        v50 = v35;
        v36 = _Block_copy(&v45);
        v37 = v36;
        if (a2)
        {
          if (!v17)
            goto LABEL_27;
          if (qword_1ECD7F9F0 != -1)
            dispatch_once(&qword_1ECD7F9F0, &__block_literal_global_126);
          if (_MergedGlobals_1195)
          {
            objc_msgSend(v14, "context", v45, v46, v47, v48, v49);
            v38 = (void *)objc_claimAutoreleasedReturnValue();
            v39 = v38 == 0;
          }
          else
          {
LABEL_27:
            v38 = 0;
            v39 = 1;
          }
          _performAfterContextCommitUnderCoverAllowDefer(v38, v39, 1, v37);

        }
        else
        {
          (*((void (**)(void *))v36 + 2))(v36);
        }
        v40 = v50;
        v20 = v34;

        goto LABEL_38;
      }
      v41 = qword_1ECD7F978;
      if (!qword_1ECD7F978)
      {
        v41 = __UILogCategoryGetNode("Snapshotting", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
        atomic_store(v41, (unint64_t *)&qword_1ECD7F978);
      }
      v42 = *(NSObject **)(v41 + 8);
      if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
      {
        v43 = v42;
        *(_DWORD *)buf = 134218242;
        *(_QWORD *)&buf[4] = v12;
        *(_WORD *)&buf[12] = 2112;
        *(_QWORD *)&buf[14] = objc_opt_class();
        _os_log_impl(&dword_185066000, v43, OS_LOG_TYPE_ERROR, "Snapshotting a view (%p, %@) that is not in a visible window requires afterScreenUpdates:YES.", buf, 0x16u);

      }
      if ((dyld_program_sdk_at_least() & 1) != 0)
        goto LABEL_35;
      v25 = -[_UIReplicantView initWithFrame:]([_UIReplicantView alloc], "initWithFrame:", a3, a4, a5, a6);
    }
    else
    {
      v22 = qword_1ECD7F970;
      if (!qword_1ECD7F970)
      {
        v22 = __UILogCategoryGetNode("Snapshotting", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
        atomic_store(v22, (unint64_t *)&qword_1ECD7F970);
      }
      v23 = *(NSObject **)(v22 + 8);
      if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
      {
        v24 = v23;
        *(_DWORD *)buf = 134218242;
        *(_QWORD *)&buf[4] = v12;
        *(_WORD *)&buf[12] = 2112;
        *(_QWORD *)&buf[14] = objc_opt_class();
        _os_log_impl(&dword_185066000, v24, OS_LOG_TYPE_ERROR, "Snapshotting a view (%p, %@) that has not been rendered at least once requires afterScreenUpdates:YES.", buf, 0x16u);

      }
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {
LABEL_35:
        v20 = 0;
LABEL_38:

        goto LABEL_39;
      }
      v25 = -[_UIReplicantView initAsCopyOf:]([_UIReplicantView alloc], "initAsCopyOf:", v12);
    }
    v20 = v25;
    goto LABEL_38;
  }
  v18 = qword_1ECD7F968;
  if (!qword_1ECD7F968)
  {
    v18 = __UILogCategoryGetNode("Snapshotting", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
    atomic_store(v18, (unint64_t *)&qword_1ECD7F968);
  }
  v19 = *(NSObject **)(v18 + 8);
  if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_185066000, v19, OS_LOG_TYPE_ERROR, "View snapshot requires non-nil view.", buf, 2u);
  }
  v20 = 0;
LABEL_39:

  return v20;
}

void sub_1855681C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t stateMachineSpec_block_invoke_4_0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  id v6;
  void *v7;
  int v8;
  int v9;
  id *v10;
  id *v11;
  id v12;
  void *v13;
  _BOOL4 v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id WeakRetained;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  _UIEventDeferringRecord *v30;
  id v31;
  id v32;
  unint64_t v33;
  void *v34;
  int v35;
  id v36;
  _QWORD *v37;
  int v38;
  void *v39;
  void *v40;
  NSObject *v41;
  uint64_t v42;
  id v43;
  _BOOL4 v44;
  uint64_t v45;
  id v46;
  void *v47;
  _BOOL4 v48;
  uint64_t v49;
  id v50;
  void *v51;
  void *v52;
  id v53;
  uint64_t v54;
  id v55;
  void *v56;
  id *v57;
  id **v58;
  id **v59;
  id *v60;
  void *v61;
  _UIEventDeferringRecord *v62;
  uint64_t v63;
  id v64;
  _QWORD *v65;
  _QWORD *v66;
  void *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  int v72;
  BOOL v74;
  _QWORD *v75;
  _QWORD *v76;
  NSObject *v77;
  void *v78;
  void *v79;
  unint64_t v80;
  NSObject *v81;
  id v82;
  id v83;
  uint64_t v84;
  __CFString *v85;
  uint64_t v86;
  _BYTE *v87;
  void *v89;
  void *v90;
  unint64_t v91;
  NSObject *v92;
  id *v93;
  NSObject *v94;
  id *v95;
  NSObject *v96;
  id *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  id *v105;
  id v106;
  int v107;
  uint64_t v109;
  id v110;
  __CFString *v111;
  uint64_t v112;
  _QWORD v113[4];
  id v114;
  id v115;
  id v116;
  _QWORD v117[4];
  id v118;
  id v119;
  _QWORD block[4];
  id v121;
  id v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t (*v127)(uint64_t, uint64_t);
  void (*v128)(uint64_t);
  id v129;
  uint8_t buf[4];
  id *v131;
  __int16 v132;
  uint64_t v133;
  __int16 v134;
  uint64_t v135;
  __int16 v136;
  _BYTE v137[14];
  __int16 v138;
  int v139;
  __int16 v140;
  _QWORD *v141;
  uint64_t v142;

  v142 = *MEMORY[0x1E0C80C00];
  v6 = (id)a2[2];
  v109 = a4;
  v111 = _NSStringFromUIDeferringAction[a4];
  if (*((_BYTE *)a2 + 48))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v89 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "stateMachineSpec_block_invoke_4");
    v90 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v89, "handleFailureInFunction:file:lineNumber:description:", v90, CFSTR("_UIEventDeferringManager.m"), 1335, CFSTR("[%p] [%@] %@: Invalid state. Unexpected value of ownerInitiatedRemoval: %d"), *a2, v6, v111, *((unsigned __int8 *)a2 + 48));

  }
  -[_UIEventDeferringManager _localRecordForEnvironment:]((id *)*a2, (uint64_t)v6);
  v112 = objc_claimAutoreleasedReturnValue();
  -[_UIEventDeferringManager internalBehavior]((id *)*a2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "wantsLocalIdealRules");

  v9 = 0;
  v10 = 0;
  if (v8 && v112)
  {
    v11 = (id *)*a2;
    v12 = *(id *)(v112 + 16);
    v13 = v12;
    if (v12)
      v14 = *((_BYTE *)v12 + 8) != 0;
    else
      v14 = 0;
    v15 = *(id *)(v112 + 16);
    v16 = v15;
    if (v15)
      v17 = (void *)*((_QWORD *)v15 + 4);
    else
      v17 = 0;
    v18 = v17;
    WeakRetained = objc_loadWeakRetained((id *)(v112 + 32));
    -[_UIEventDeferringManager _descriptorForCompatibility:environment:deferringToken:](v11, v14, v18, (uint64_t)WeakRetained);
    v20 = (void *)objc_claimAutoreleasedReturnValue();

    -[_UIEventDeferringManager _predicateForDescriptor:](*a2, (uint64_t)v20);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    -[_UIEventDeferringManager _targetForDescriptor:](*a2, (uint64_t)v20);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0D00CC8], "sharedInstance");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v24 = objc_loadWeakRetained((id *)(v112 + 32));
    v25 = v24;
    if (v24)
      v26 = (void *)*((_QWORD *)v24 + 9);
    else
      v26 = 0;
    v27 = v26;
    objc_msgSend(v23, "deferEventsMatchingPredicate:toTarget:withReason:", v21, v22, v27);
    v28 = (void *)objc_claimAutoreleasedReturnValue();

    _UIEventDeferringRecreationReasonsForRecreatedRecordOfRecord((_QWORD *)v112, a2[4]);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    v30 = [_UIEventDeferringRecord alloc];
    v31 = objc_loadWeakRetained((id *)(v112 + 32));
    v10 = (id *)-[_UIEventDeferringRecord _initWithDescriptor:invalidationToken:deferringToken:recordingManagerPointer:recreationReasons:](v30, v20, v28, v31, *a2, v29);

    v32 = *(id *)(v112 + 24);
    objc_msgSend(v32, "invalidate");

    -[_UIEventDeferringManager _removeLocalRecordForEnvironment:](*a2, (uint64_t)v6);
    v33 = qword_1ECD7CF98;
    if (!qword_1ECD7CF98)
    {
      v33 = __UILogCategoryGetNode("EventDeferring", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
      atomic_store(v33, (unint64_t *)&qword_1ECD7CF98);
    }
    if ((*(_BYTE *)v33 & 1) != 0)
    {
      v94 = *(NSObject **)(v33 + 8);
      if (os_log_type_enabled(v94, OS_LOG_TYPE_ERROR))
      {
        v95 = (id *)*a2;
        *(_DWORD *)buf = 134349826;
        v131 = v95;
        v132 = 2114;
        v133 = (uint64_t)v6;
        v134 = 2114;
        v135 = (uint64_t)v111;
        v136 = 2114;
        *(_QWORD *)v137 = v10;
        _os_log_impl(&dword_185066000, v94, OS_LOG_TYPE_ERROR, "[%{public}p] [%{public}@] %{public}@: Recreated local record: %{public}@", buf, 0x2Au);
      }
    }
    -[_UIEventDeferringManager _setLocalRecord:forEnvironment:](*a2, (uint64_t)v10, (uint64_t)v6);

    v9 = 1;
  }
  v107 = v9;
  v124 = 0;
  v125 = &v124;
  v126 = 0x3032000000;
  v127 = __Block_byref_object_copy__34;
  v128 = __Block_byref_object_dispose__34;
  v129 = 0;
  -[_UIEventDeferringManager internalBehavior]((id *)*a2);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v35 = objc_msgSend(v34, "wantsLocalCompatibilityRules");

  if (!v35)
  {
    v37 = 0;
    v38 = 0;
    goto LABEL_65;
  }
  if (*((_BYTE *)a2 + 50))
  {
    v36 = (id)a2[7];
  }
  else
  {
    -[_UIEventDeferringManager _displayHardwareIndentifierAccountingForNotFinalizedChange:]((unsigned __int8 *)*a2, 1);
    v36 = (id)objc_claimAutoreleasedReturnValue();
  }
  v39 = v36;
  if (v36)
    objc_msgSend(MEMORY[0x1E0D00CF8], "displayWithHardwareIdentifier:", v36);
  else
    objc_msgSend(MEMORY[0x1E0D00CF8], "builtinDisplay");
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  _eventDeferringCompatibilityQueue();
  v41 = objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = stateMachineSpec_block_invoke_5_0;
  block[3] = &unk_1E16B9698;
  v123 = &v124;
  v110 = v40;
  v121 = v110;
  v122 = v6;
  dispatch_sync(v41, block);

  v42 = v125[5];
  if (v42)
  {
    v43 = objc_loadWeakRetained((id *)(v42 + 32));
    v44 = v43 == (id)a2[1];

    if (v44)
    {
      v105 = (id *)*a2;
      v45 = v125[5];
      if (v45)
      {
        v46 = *(id *)(v45 + 16);
        v47 = v46;
        if (v46)
        {
          v48 = *((_BYTE *)v46 + 8) != 0;
          goto LABEL_29;
        }
      }
      else
      {
        v47 = 0;
      }
      v48 = 0;
LABEL_29:
      v49 = v125[5];
      if (v49)
      {
        v50 = *(id *)(v49 + 16);
        v51 = v50;
        if (v50)
        {
          v52 = (void *)*((_QWORD *)v50 + 4);
          goto LABEL_32;
        }
      }
      else
      {
        v51 = 0;
      }
      v52 = 0;
LABEL_32:
      v53 = v52;
      v54 = v125[5];
      if (v54)
        v55 = objc_loadWeakRetained((id *)(v54 + 32));
      else
        v55 = 0;
      -[_UIEventDeferringManager _descriptorForCompatibility:environment:deferringToken:](v105, v48, v53, (uint64_t)v55);
      v106 = (id)objc_claimAutoreleasedReturnValue();

      -[_UIEventDeferringManager _predicateForDescriptor:](*a2, (uint64_t)v106);
      v103 = (void *)objc_claimAutoreleasedReturnValue();
      -[_UIEventDeferringManager _targetForDescriptor:](*a2, (uint64_t)v106);
      v104 = (void *)objc_claimAutoreleasedReturnValue();
      v56 = (void *)MEMORY[0x1E0CB3940];
      v57 = (id *)v125[5];
      if (v57)
      {
        v58 = (id **)objc_loadWeakRetained(v57 + 4);
        v59 = v58;
        if (v58)
          v57 = v58[9];
        else
          v57 = 0;
      }
      else
      {
        v59 = 0;
      }
      v60 = v57;
      objc_msgSend(v56, "stringWithFormat:", CFSTR("Compatibility: %@"), v60);
      v102 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(MEMORY[0x1E0D00CC8], "sharedInstance");
      v61 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v61, "deferEventsMatchingPredicate:toTarget:withReason:", v103, v104, v102);
      v101 = (void *)objc_claimAutoreleasedReturnValue();

      _UIEventDeferringRecreationReasonsForRecreatedRecordOfRecord((_QWORD *)v125[5], a2[4]);
      v100 = (void *)objc_claimAutoreleasedReturnValue();
      v62 = [_UIEventDeferringRecord alloc];
      v63 = v125[5];
      if (v63)
        v64 = objc_loadWeakRetained((id *)(v63 + 32));
      else
        v64 = 0;
      v65 = -[_UIEventDeferringRecord _initWithDescriptor:invalidationToken:deferringToken:recordingManagerPointer:recreationReasons:](v62, v106, v101, v64, *a2, v100);

      if (!v10)
      {
LABEL_55:
        v75 = (_QWORD *)v125[5];
        if (v75)
          v75 = (_QWORD *)v75[3];
        v76 = v75;
        objc_msgSend(v76, "invalidate");

        _eventDeferringCompatibilityQueue();
        v77 = objc_claimAutoreleasedReturnValue();
        v117[0] = MEMORY[0x1E0C809B0];
        v117[1] = 3221225472;
        v117[2] = stateMachineSpec_block_invoke_6_0;
        v117[3] = &unk_1E16B1B50;
        v118 = v110;
        v119 = v6;
        dispatch_sync(v77, v117);

        -[_UIEventDeferringManager _displayHardwareIndentifierAccountingForNotFinalizedChange:]((unsigned __int8 *)*a2, *((_BYTE *)a2 + 50) == 0);
        v78 = (void *)objc_claimAutoreleasedReturnValue();
        if (v78)
          objc_msgSend(MEMORY[0x1E0D00CF8], "displayWithHardwareIdentifier:", v78);
        else
          objc_msgSend(MEMORY[0x1E0D00CF8], "builtinDisplay");
        v79 = (void *)objc_claimAutoreleasedReturnValue();
        v80 = qword_1ECD7CFA0;
        if (!qword_1ECD7CFA0)
        {
          v80 = __UILogCategoryGetNode("EventDeferring", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
          atomic_store(v80, (unint64_t *)&qword_1ECD7CFA0);
        }
        if ((*(_BYTE *)v80 & 1) != 0)
        {
          v96 = *(NSObject **)(v80 + 8);
          if (os_log_type_enabled(v96, OS_LOG_TYPE_ERROR))
          {
            v97 = (id *)*a2;
            *(_DWORD *)buf = 134349826;
            v131 = v97;
            v132 = 2114;
            v133 = (uint64_t)v6;
            v134 = 2114;
            v135 = (uint64_t)v111;
            v136 = 2114;
            *(_QWORD *)v137 = v65;
            _os_log_impl(&dword_185066000, v96, OS_LOG_TYPE_ERROR, "[%{public}p] [%{public}@] %{public}@: Recreated local compatibility record: %{public}@", buf, 0x2Au);
          }
        }
        _eventDeferringCompatibilityQueue();
        v81 = objc_claimAutoreleasedReturnValue();
        v113[0] = MEMORY[0x1E0C809B0];
        v113[1] = 3221225472;
        v113[2] = stateMachineSpec_block_invoke_7;
        v113[3] = &unk_1E16B47A8;
        v114 = v79;
        v115 = v6;
        v37 = v65;
        v116 = v37;
        v82 = v79;
        dispatch_sync(v81, v113);

        v38 = 1;
        goto LABEL_64;
      }
      v66 = v10[2];
      if (v65)
        v67 = (void *)v65[2];
      else
        v67 = 0;
      v68 = v67;
      if (v66)
      {
        v69 = v66[9];
        if (v68)
          goto LABEL_44;
      }
      else
      {
        v69 = 0;
        if (v68)
        {
LABEL_44:
          v70 = v68[9];
          if (v66)
            goto LABEL_45;
          goto LABEL_92;
        }
      }
      v70 = 0;
      if (v66)
      {
LABEL_45:
        v71 = *((_DWORD *)v66 + 5);
        if (v68)
        {
LABEL_46:
          v72 = *((_DWORD *)v68 + 5);
          goto LABEL_47;
        }
LABEL_93:
        v72 = 0;
LABEL_47:
        v74 = v69 == v70 && v71 == v72;

        if (!v74)
        {
          objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
          v98 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "stateMachineSpec_block_invoke_4");
          v99 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v98, "handleFailureInFunction:file:lineNumber:description:", v99, CFSTR("_UIEventDeferringManager.m"), 1420, CFSTR("[%p] [%@] %@: Invalid state. Local record target windows do not match"), *a2, v6, v111);

        }
        goto LABEL_55;
      }
LABEL_92:
      v71 = 0;
      if (v68)
        goto LABEL_46;
      goto LABEL_93;
    }
  }
  v38 = 0;
  v37 = 0;
LABEL_64:

LABEL_65:
  objc_msgSend(v6, "description");
  v83 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v84 = objc_msgSend(v83, "UTF8String");

  v85 = objc_retainAutorelease(v111);
  v86 = -[__CFString UTF8String](v85, "UTF8String");
  if (os_variant_has_internal_diagnostics())
  {
    v91 = qword_1ECD7CFA8;
    if (!qword_1ECD7CFA8)
    {
      v91 = __UILogCategoryGetNode("EventDeferring", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
      atomic_store(v91, (unint64_t *)&qword_1ECD7CFA8);
    }
    v92 = *(NSObject **)(v91 + 8);
    if (os_log_type_enabled(v92, OS_LOG_TYPE_DEFAULT))
    {
      v93 = (id *)*a2;
      *(_DWORD *)buf = 134350594;
      v131 = v93;
      v132 = 2082;
      v133 = v84;
      v134 = 2082;
      v135 = v86;
      v136 = 1026;
      *(_DWORD *)v137 = v107;
      *(_WORD *)&v137[4] = 2050;
      *(_QWORD *)&v137[6] = v10;
      v138 = 1026;
      v139 = v38;
      v140 = 2050;
      v141 = v37;
      _os_log_impl(&dword_185066000, v92, OS_LOG_TYPE_DEFAULT, "[%{public}p] [%{public}s] %{public}s: Removed local record: %{public}d; recreated local record: %{public}p; remo"
        "ved compatibility record: %{public}d; recreated compatibility record: %{public}p",
        buf,
        0x40u);
    }
  }
  v87 = (_BYTE *)qword_1ECD7CFB0;
  if (!qword_1ECD7CFB0)
  {
    v87 = (_BYTE *)(__UILogCategoryGetNode("EventDeferring", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16);
    atomic_store((unint64_t)v87, (unint64_t *)&qword_1ECD7CFB0);
  }
  if ((*v87 & 1) != 0)
    _emitDebugLogForTransition(a3, v109, &stru_1E16EDF20, (uint64_t)a2);
  _Block_object_dispose(&v124, 8);

  return 9;
}

void sub_18556A8E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 240), 8);
  _Unwind_Resume(a1);
}

void stateMachineSpec_block_invoke_4_1(uint64_t a1, void *a2)
{
  uint64_t *v2;

  v2 = a2;
  if (objc_msgSend(v2, "reachedClickDownThreshold"))
    handleEvent(stateMachineSpec_0, v2[1], 2, (uint64_t)v2, v2 + 1);

}

void stateMachineSpec_block_invoke_4_2(uint64_t a1, id *a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;

  if (a4 == 1)
  {
    v4 = *a2;
    -[_UIPreviewInteractionClickImpl _toBeRemoved_CreateHighlighterIfPossible](v4);
    -[_UIPreviewInteractionClickImpl _toBeRemoved_CallHighlighterCompletion](v4);

  }
}

uint64_t stateMachineSpec_block_invoke_4_3(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "_handleDidMove");
}

void stateMachineSpec_block_invoke_4_4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id *v9;
  void *v11;
  uint64_t v12;
  void *v13;
  BOOL v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  double v19;
  double v20;
  void *v21;
  double v22;
  double v23;
  _BOOL4 v24;
  void *v25;
  int v26;
  void *v27;
  double v28;
  double v29;
  void *v30;
  double v31;
  double v32;
  int v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  void (**v40)(_QWORD);
  void (**v41)(_QWORD);
  void *v42;
  double v43;
  void *v44;
  void *v45;
  double v46;
  double v47;
  void *v48;
  _QWORD aBlock[4];
  id v50;
  id *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  if (a4 != 1)
    return;
  v53 = v7;
  v54 = v6;
  v55 = v4;
  v56 = v5;
  v9 = *(id **)a2;
  if (!*(_QWORD *)a2)
    return;
  objc_msgSend(*(id *)a2, "_clickDragDriver");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "_clickDriverTouch");
  v12 = objc_claimAutoreleasedReturnValue();
  v13 = (void *)v12;
  if (v11)
    v14 = v12 == 0;
  else
    v14 = 1;
  if (v14)
  {
LABEL_24:
    if (objc_msgSend(v11, "isPreparingToDrag"))
      objc_msgSend(v11, "cancel");
    if (a3 > 3)
      goto LABEL_28;
    goto LABEL_27;
  }
  if (a3 == 3)
  {
    objc_msgSend(v9, "activeDriver");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v26 = objc_msgSend(v25, "hasExceededAllowableMovement");

    goto LABEL_17;
  }
  if (a3 != 2)
    goto LABEL_24;
  objc_msgSend(v9, "activeDriver");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) == 0)
  {

    goto LABEL_15;
  }
  objc_msgSend(v9, "activeDriver");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "behavior");

  if (v17 != 2)
  {
LABEL_15:
    objc_msgSend(v9, "associatedDragInteraction");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "_liftDelay");
    v29 = v28;

    if (v29 == _UIDragInteractionDefaultLiftDelay())
      goto LABEL_24;
    objc_msgSend(v9, "activeDriver");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "touchDuration");
    v32 = v31;

    v26 = v32 > v29;
LABEL_17:
    v33 = 1;
    if (!v26)
      goto LABEL_24;
    goto LABEL_18;
  }
  objc_msgSend(v9, "associatedDragInteraction");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "_pointerLiftDelay");
  v20 = v19;

  if (v20 == _UIDragInteractionDefaultPointerLiftDelay())
  {
    v24 = 1;
  }
  else
  {
    objc_msgSend(v9, "activeDriver");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "touchDuration");
    v23 = v22;

    v24 = v23 > v20;
  }
  objc_msgSend(v9, "associatedDragInteraction");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v33 = objc_msgSend(v34, "_allowsPointerDragBeforeLiftDelay") ^ 1;

  if (!v24)
    goto LABEL_24;
LABEL_18:
  if ((!v33 || objc_msgSend(v11, "isLifted"))
    && objc_msgSend(v9, "beginDragIfPossibleWithTouch:", v13))
  {
    *(_QWORD *)(a2 + 16) = 2;
  }
LABEL_27:
  objc_msgSend(v9, "exclusionRelationshipGestureRecognizer");
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v35, "_fail");

  objc_msgSend(v9, "failureRelationshipGestureRecognizer");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v36, "_fail");

  objc_msgSend(v9[7], "_fail");
LABEL_28:
  if (*(_QWORD *)(a2 + 16) == 2)
  {
    objc_msgSend(v9, "associatedDragInteraction");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setLatentAssociatedDragInteraction:", v37);

  }
  else
  {
    objc_msgSend(v9, "_endInteractionEffectIfNeeded");
  }
  objc_msgSend(v9, "setAssociatedDragInteraction:", 0);
  objc_msgSend(v9, "presentationAssistant");
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setPresentationAssistant:", 0);
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __83___UIClickPresentationInteraction__handleDidTransitionToPossibleFromState_context___block_invoke;
  aBlock[3] = &unk_1E16B1C28;
  v52 = a2;
  v39 = v38;
  v50 = v39;
  v51 = v9;
  v40 = (void (**)(_QWORD))_Block_copy(aBlock);
  v41 = (void (**)(_QWORD))_Block_copy(*(const void **)(a2 + 40));
  if (v39)
  {
    objc_msgSend(v39, "dismissWithReason:alongsideActions:completion:", *(_QWORD *)(a2 + 16), v40, v41);
  }
  else
  {
    if (v40)
      v40[2](v40);
    if (v41)
      v41[2](v41);
  }
  objc_msgSend(v9, "_cancelAllDrivers");
  objc_msgSend(v9, "activeDriver");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v43 = _UIClickPresentationAllowableMovementForDriver(v42, 0);
  objc_msgSend(v9, "activeDriver");
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v44, "setAllowableMovement:", v43);

  objc_msgSend(v9, "setActiveDriver:", 0);
  _UIClickPresentationStatisticsReportEvent();
  +[UIEventSessionActionAnalytics sharedInstance](UIEventSessionActionAnalytics, "sharedInstance");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "initialLocation");
  objc_msgSend(v45, "didShowContextualMenuFromLocation:withSource:", +[_UIEventSessionAction getUIEventSourceForUITouchType:](_UIEventSessionAction, "getUIEventSourceForUITouchType:", objc_msgSend(v13, "type")), v46, v47);

  v9[5] = 0;
  objc_msgSend(v9, "setInitialLocation:", 1.79769313e308, 1.79769313e308, 1.79769313e308);
  *((_BYTE *)v9 + 51) = 0;
  if (*((_BYTE *)v9 + 48))
  {
    objc_msgSend(v9, "feedbackGenerator");
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v48, "userInteractionEnded");

    *((_BYTE *)v9 + 48) = 0;
  }
  *((_BYTE *)v9 + 49) = 0;

}

uint64_t stateMachineSpec_block_invoke_4_5(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "_didTransitionToDismissingFromState:");
}

uint64_t stateMachineSpec_block_invoke_4_6(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "didTransitionToInflightState");
}

uint64_t stateMachineSpec_block_invoke_4_7(uint64_t a1, void *a2)
{
  id v2;
  void *v3;

  v2 = a2;
  objc_msgSend(v2, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "clickDriver:didPerformEvent:", v2, 2);

  return 2;
}

void stateMachineSpec_block_invoke_4_8(uint64_t a1, void *a2)
{
  uint64_t *v2;

  v2 = a2;
  if (objc_msgSend(v2, "clicksUpAutomaticallyAfterTimeout"))
    handleEvent(stateMachineSpec_8, v2[1], 2, (uint64_t)v2, v2 + 1);

}

void _releaseIOService(__IOSurface *a1)
{
  IOSurfaceUnlock(a1, 1u, 0);
  IOSurfaceDecrementUseCount(a1);
  CFRelease(a1);
}

void *__getFigOutputMonitorIsScreenProbablyBeingRecordedSymbolLoc_block_invoke(_QWORD *a1)
{
  void *v2;
  void *result;
  void *v4;

  if (!qword_1ECD79A38)
    qword_1ECD79A38 = _sl_dlopen();
  v2 = (void *)qword_1ECD79A38;
  if (!qword_1ECD79A38)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *MediaToolboxLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("UIScreen.m"), 133, CFSTR("%s"), 0);

    __break(1u);
    free(v4);
  }
  result = dlsym(v2, "FigOutputMonitorIsScreenProbablyBeingRecorded");
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = result;
  off_1ECD79A30 = *(_UNKNOWN **)(*(_QWORD *)(a1[4] + 8) + 24);
  return result;
}

void __getAVQueuePlayerClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  AVFoundationLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("AVQueuePlayer");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7A488 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAVQueuePlayerClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIContinuousPathIntroductionView.m"), 25, CFSTR("Unable to find class %s"), "AVQueuePlayer");

    __break(1u);
  }
}

void __getAVPlayerLooperClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  AVFoundationLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("AVPlayerLooper");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7A490 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAVPlayerLooperClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIContinuousPathIntroductionView.m"), 23, CFSTR("Unable to find class %s"), "AVPlayerLooper");

    __break(1u);
  }
}

void __getAVPlayerLayerClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  AVFoundationLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("AVPlayerLayer");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7A4A8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAVPlayerLayerClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIContinuousPathIntroductionView.m"), 22, CFSTR("Unable to find class %s"), "AVPlayerLayer");

    __break(1u);
  }
}

void __getAVPlayerItemClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  AVFoundationLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("AVPlayerItem");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7A480 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAVPlayerItemClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIContinuousPathIntroductionView.m"), 24, CFSTR("Unable to find class %s"), "AVPlayerItem");

    __break(1u);
  }
}

void __getAVAudioSessionClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  AVFoundationLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("AVAudioSession");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7A498 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAVAudioSessionClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIContinuousPathIntroductionView.m"), 27, CFSTR("Unable to find class %s"), "AVAudioSession");

    __break(1u);
  }
}

void __getAVAssetClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  AVFoundationLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("AVAsset");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    _MergedGlobals_3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAVAssetClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIContinuousPathIntroductionView.m"), 26, CFSTR("Unable to find class %s"), "AVAsset");

    __break(1u);
  }
}

void ___restoreState_block_invoke()
{
  unint64_t v0;
  NSObject *v1;
  uint8_t v2[16];

  v0 = _ignoreSnapshotOnNextLaunch_block_invoke_12___s_category;
  if (!_ignoreSnapshotOnNextLaunch_block_invoke_12___s_category)
  {
    v0 = __UILogCategoryGetNode("ApplicationStateRestoration", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
    atomic_store(v0, (unint64_t *)&_ignoreSnapshotOnNextLaunch_block_invoke_12___s_category);
  }
  v1 = *(NSObject **)(v0 + 8);
  if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
  {
    *(_WORD *)v2 = 0;
    _os_log_impl(&dword_185066000, v1, OS_LOG_TYPE_ERROR, "Warning: The UIApplicationDelegate method application:shouldRestoreApplicationState: is deprecated. Please replace the use of application:shouldRestoreApplicationState: with application:shouldRestoreSecureApplicationState:", v2, 2u);
  }
}

void ___isSystemGestureForDelegate_block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;

  objc_msgSend(MEMORY[0x1E0CB34D0], "bundleForClass:", objc_opt_class());
  v3 = (id)objc_claimAutoreleasedReturnValue();
  _UIKitBundle();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "bundlePath");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "bundlePath");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  _MergedGlobals_15_0 = objc_msgSend(v1, "isEqualToString:", v2) ^ 1;

}

void __UIContextBinderDisposeContextForBindable(void *a1, void *a2, char a3)
{
  id *v5;
  id v6;
  void *v7;
  unint64_t v8;
  NSObject *v9;
  NSObject *v10;
  int v11;
  uint8_t buf[4];
  void *v13;
  __int16 v14;
  int v15;
  __int16 v16;
  id v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  objc_msgSend(v6, "_boundContext");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
    objc_msgSend(v6, "_bindingDescription");
  if (v7 && (a3 & 1) != 0)
  {
    if (os_variant_has_internal_diagnostics())
    {
      v8 = __UIContextBinderDisposeContextForBindable___s_category;
      if (!__UIContextBinderDisposeContextForBindable___s_category)
      {
        v8 = __UILogCategoryGetNode("ContextCreation", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
        atomic_store(v8, (unint64_t *)&__UIContextBinderDisposeContextForBindable___s_category);
      }
      v9 = *(NSObject **)(v8 + 8);
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        v10 = v9;
        v11 = objc_msgSend(v7, "contextId");
        *(_DWORD *)buf = 138412802;
        v13 = v7;
        v14 = 1024;
        v15 = v11;
        v16 = 2112;
        v17 = v6;
        _os_log_impl(&dword_185066000, v10, OS_LOG_TYPE_DEFAULT, "Disposing CAContext: %@; contextId: 0x%X; bindable: %@",
          buf,
          0x1Cu);

      }
    }
    objc_msgSend(v7, "setLayer:", 0);
    objc_msgSend(v7, "invalidate");
    objc_msgSend(v6, "_setBoundContext:", 0);
    objc_msgSend(v5[4], "removeObject:", v7);
  }

}

void sub_18556C47C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18556C62C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18556C7EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18556C9AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18556CB5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18556CEB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18556D070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18556D228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18556D480(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18556D654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18556D828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18556D9FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18556DBD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18556DDA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18556DFEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18556E150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18556E550(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  uint64_t v13;
  va_list va;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_18556EC4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_18556F10C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_18556F728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

_QWORD *std::__hash_table<void *,std::hash<void *>,std::equal_to<void *>,std::allocator<void *>>::clear(_QWORD *result)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t i;

  if (result[3])
  {
    v1 = result;
    result = (_QWORD *)result[2];
    if (result)
    {
      do
      {
        v2 = (_QWORD *)*result;
        operator delete(result);
        result = v2;
      }
      while (v2);
    }
    v1[2] = 0;
    v3 = v1[1];
    if (v3)
    {
      for (i = 0; i != v3; ++i)
        *(_QWORD *)(*v1 + 8 * i) = 0;
    }
    v1[3] = 0;
  }
  return result;
}

void _UIUpdateCompletionObservationAddObserver(uint64_t *a1, unint64_t a2, int a3)
{
  unint64_t v3;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8x8_t v11;
  _QWORD *v12;
  _QWORD *i;
  unint64_t v14;
  _QWORD *v15;
  float v16;
  float v17;
  _BOOL8 v18;
  unint64_t v19;
  unint64_t v20;
  int8x8_t prime;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  uint8x8_t v27;
  unint64_t v28;
  uint8x8_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  unint64_t v35;
  _QWORD *v36;
  void *v37;
  void *v38;

  if (a3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void _UIUpdateCompletionObservationAddObserver(_UIUpdateCompletionObservation *const _Nonnull, const id<_UIUpdateCompletionObserving>  _Nonnull const __strong, const BOOL)");
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v37, "handleFailureInFunction:file:lineNumber:description:", v38, CFSTR("_UIUpdateSequence.mm"), 177, CFSTR("Persistant observers are not implemented."));

  }
  v6 = *a1;
  if (!*a1)
  {
    v6 = operator new();
    *(_OWORD *)v6 = 0u;
    *(_OWORD *)(v6 + 16) = 0u;
    *(_DWORD *)(v6 + 32) = 1065353216;
    *a1 = v6;
  }
  v7 = 0x9DDFEA08EB382D69 * (((8 * a2) + 8) ^ HIDWORD(a2));
  v8 = 0x9DDFEA08EB382D69 * (HIDWORD(a2) ^ (v7 >> 47) ^ v7);
  v9 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
  v10 = *(_QWORD *)(v6 + 8);
  if (v10)
  {
    v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      v3 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
      if (v9 >= v10)
        v3 = v9 % v10;
    }
    else
    {
      v3 = (v10 - 1) & v9;
    }
    v12 = *(_QWORD **)(*(_QWORD *)v6 + 8 * v3);
    if (v12)
    {
      for (i = (_QWORD *)*v12; i; i = (_QWORD *)*i)
      {
        v14 = i[1];
        if (v14 == v9)
        {
          if (i[2] == a2)
            return;
        }
        else
        {
          if (v11.u32[0] > 1uLL)
          {
            if (v14 >= v10)
              v14 %= v10;
          }
          else
          {
            v14 &= v10 - 1;
          }
          if (v14 != v3)
            break;
        }
      }
    }
  }
  v15 = operator new(0x18uLL);
  *v15 = 0;
  v15[1] = v9;
  v15[2] = a2;
  v16 = (float)(unint64_t)(*(_QWORD *)(v6 + 24) + 1);
  v17 = *(float *)(v6 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    v18 = 1;
    if (v10 >= 3)
      v18 = (v10 & (v10 - 1)) != 0;
    v19 = v18 | (2 * v10);
    v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20)
      prime = (int8x8_t)v20;
    else
      prime = (int8x8_t)v19;
    if (*(_QWORD *)&prime == 1)
    {
      prime = (int8x8_t)2;
    }
    else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
    {
      prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
      v10 = *(_QWORD *)(v6 + 8);
    }
    if (*(_QWORD *)&prime > v10)
      goto LABEL_34;
    if (*(_QWORD *)&prime < v10)
    {
      v28 = vcvtps_u32_f32((float)*(unint64_t *)(v6 + 24) / *(float *)(v6 + 32));
      if (v10 < 3 || (v29 = (uint8x8_t)vcnt_s8((int8x8_t)v10), v29.i16[0] = vaddlv_u8(v29), v29.u32[0] > 1uLL))
      {
        v28 = std::__next_prime(v28);
      }
      else
      {
        v30 = 1 << -(char)__clz(v28 - 1);
        if (v28 >= 2)
          v28 = v30;
      }
      if (*(_QWORD *)&prime <= v28)
        prime = (int8x8_t)v28;
      if (*(_QWORD *)&prime >= v10)
      {
        v10 = *(_QWORD *)(v6 + 8);
      }
      else
      {
        if (prime)
        {
LABEL_34:
          if (*(_QWORD *)&prime >> 61)
            std::__throw_bad_array_new_length[abi:nn180100]();
          v22 = operator new(8 * *(_QWORD *)&prime);
          v23 = *(_QWORD **)v6;
          *(_QWORD *)v6 = v22;
          if (v23)
            operator delete(v23);
          v24 = 0;
          *(int8x8_t *)(v6 + 8) = prime;
          do
            *(_QWORD *)(*(_QWORD *)v6 + 8 * v24++) = 0;
          while (*(_QWORD *)&prime != v24);
          v25 = *(_QWORD **)(v6 + 16);
          if (v25)
          {
            v26 = v25[1];
            v27 = (uint8x8_t)vcnt_s8(prime);
            v27.i16[0] = vaddlv_u8(v27);
            if (v27.u32[0] > 1uLL)
            {
              if (v26 >= *(_QWORD *)&prime)
                v26 %= *(_QWORD *)&prime;
            }
            else
            {
              v26 &= *(_QWORD *)&prime - 1;
            }
            *(_QWORD *)(*(_QWORD *)v6 + 8 * v26) = v6 + 16;
            v31 = (_QWORD *)*v25;
            if (*v25)
            {
              do
              {
                v32 = v31[1];
                if (v27.u32[0] > 1uLL)
                {
                  if (v32 >= *(_QWORD *)&prime)
                    v32 %= *(_QWORD *)&prime;
                }
                else
                {
                  v32 &= *(_QWORD *)&prime - 1;
                }
                if (v32 != v26)
                {
                  if (!*(_QWORD *)(*(_QWORD *)v6 + 8 * v32))
                  {
                    *(_QWORD *)(*(_QWORD *)v6 + 8 * v32) = v25;
                    goto LABEL_59;
                  }
                  *v25 = *v31;
                  *v31 = **(_QWORD **)(*(_QWORD *)v6 + 8 * v32);
                  **(_QWORD **)(*(_QWORD *)v6 + 8 * v32) = v31;
                  v31 = v25;
                }
                v32 = v26;
LABEL_59:
                v25 = v31;
                v31 = (_QWORD *)*v31;
                v26 = v32;
              }
              while (v31);
            }
          }
          v10 = (unint64_t)prime;
          goto LABEL_63;
        }
        v36 = *(_QWORD **)v6;
        *(_QWORD *)v6 = 0;
        if (v36)
          operator delete(v36);
        v10 = 0;
        *(_QWORD *)(v6 + 8) = 0;
      }
    }
LABEL_63:
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10)
        v3 = v9 % v10;
      else
        v3 = v9;
    }
    else
    {
      v3 = (v10 - 1) & v9;
    }
  }
  v33 = *(_QWORD **)v6;
  v34 = *(_QWORD **)(*(_QWORD *)v6 + 8 * v3);
  if (v34)
  {
    *v15 = *v34;
LABEL_76:
    *v34 = v15;
    goto LABEL_77;
  }
  *v15 = *(_QWORD *)(v6 + 16);
  *(_QWORD *)(v6 + 16) = v15;
  v33[v3] = v6 + 16;
  if (*v15)
  {
    v35 = *(_QWORD *)(*v15 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v35 >= v10)
        v35 %= v10;
    }
    else
    {
      v35 &= v10 - 1;
    }
    v34 = (_QWORD *)(*(_QWORD *)v6 + 8 * v35);
    goto LABEL_76;
  }
LABEL_77:
  ++*(_QWORD *)(v6 + 24);
}

void sub_18557015C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

uint64_t _UIUndoGestureRecognizerCommonInit(void *a1)
{
  id *v1;
  _UIGestureRecognizerTransformAnalyzer *v2;
  id v3;
  id v4;

  v1 = a1;
  v2 = objc_alloc_init(_UIGestureRecognizerTransformAnalyzer);
  v3 = v1[60];
  v1[60] = v2;

  objc_msgSend(v1[60], "setRotationWeight:", 0.33);
  objc_msgSend(v1[60], "setTranslationWeight:", 0.33);
  v4 = v1[60];

  return objc_msgSend(v4, "setPinchingWeight:", 0.33);
}

__CFString *_UISplitViewControllerStyleDescription(unint64_t a1)
{
  if (a1 < 3)
    return off_1E16C1CB0[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%lu (not defined as an enum value)"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

id _UIResponderTargetForAction(void *a1, const char *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;

  v5 = a3;
  v6 = a1;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v6, "targetForAction:withSender:", a2, v5);
  else
    _UIResponderTargetForActionWithTestBlock(v6, a2, v5, &__block_literal_global_31);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

double _UIRenderingBufferGetScale(__IOSurface *a1)
{
  void *v1;
  void *v2;
  double v3;
  double v4;

  v1 = (void *)IOSurfaceCopyValue(a1, CFSTR("scale"));
  v2 = v1;
  if (v1)
  {
    objc_msgSend(v1, "doubleValue");
    v4 = v3;
  }
  else
  {
    v4 = 0.0;
  }

  return v4;
}

uint64_t _UIRenderingBufferCreateCGImage(__IOSurface *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  OSType PixelFormat;
  void *v14;
  void *v15;
  uint64_t v16;
  void *BaseAddress;
  size_t BytesPerRow;
  size_t v20;
  size_t AllocSize;
  CGDataProviderRef v22;
  CGDataProvider *v23;
  size_t v24;
  CFTypeRef v25;
  const void *v26;
  CGColorSpace *DeviceRGB;
  size_t v28;
  CGBitmapInfo v29;
  size_t width;
  size_t height;
  uint64_t v32;
  _OWORD v33[3];
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  int v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("dst-opaque"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
    v6 = objc_msgSend(v4, "BOOLValue");
  else
    v6 = 0;
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("dst-gamut"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v7)
    v9 = objc_msgSend(v7, "integerValue");
  else
    v9 = -1;
  objc_msgSend(v3, "objectForKeyedSubscript:", CFSTR("dst-component-type"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if (v10)
    v12 = objc_msgSend(v10, "integerValue");
  else
    v12 = 2 * (v9 == 1);
  PixelFormat = IOSurfaceGetPixelFormat(a1);
  if (PixelFormat == 1380411457 || PixelFormat == 1999843442 || PixelFormat == 1647534392)
  {
    if ((_DWORD)v12)
    {
      v32 = *MEMORY[0x1E0CBC750];
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", v12);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      *(_QWORD *)&v33[0] = v14;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v33, &v32, 1);
      v15 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v15 = 0;
    }
    v16 = CGImageCreateFromIOSurface();

    goto LABEL_17;
  }
  v16 = 0;
  if (IOSurfaceLock(a1, 1u, 0))
    goto LABEL_17;
  CFRetain(a1);
  IOSurfaceIncrementUseCount(a1);
  BaseAddress = IOSurfaceGetBaseAddress(a1);
  BytesPerRow = IOSurfaceGetBytesPerRow(a1);
  v20 = IOSurfaceGetWidth(a1);
  height = IOSurfaceGetHeight(a1);
  AllocSize = IOSurfaceGetAllocSize(a1);
  v22 = CGDataProviderCreateWithData(a1, BaseAddress, AllocSize, (CGDataProviderReleaseDataCallback)_releaseIOService);
  if (!v22)
  {
    IOSurfaceUnlock(a1, 1u, 0);
    IOSurfaceDecrementUseCount(a1);
    CFRelease(a1);
    v16 = 0;
    goto LABEL_17;
  }
  v23 = v22;
  width = v20;
  v24 = BytesPerRow;
  v25 = IOSurfaceCopyValue(a1, (CFStringRef)*MEMORY[0x1E0CBBF90]);
  if (v25)
  {
    v26 = v25;
    DeviceRGB = CGColorSpaceCreateWithPropertyList(v25);
    CFRelease(v26);
  }
  else
  {
    v38 = 0;
    v36 = 0u;
    v37 = 0u;
    v34 = 0u;
    v35 = 0u;
    memset(v33, 0, sizeof(v33));
    v32 = 116;
    DeviceRGB = 0;
    if (!IOSurfaceGetBulkAttachments())
    {
      v28 = width;
      if (BYTE11(v34) == 12)
        DeviceRGB = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E0C9D908]);
      goto LABEL_27;
    }
  }
  BytesPerRow = v24;
  v28 = width;
LABEL_27:
  if (!DeviceRGB)
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
  if (v6)
    v29 = 8198;
  else
    v29 = 8194;
  v16 = (uint64_t)CGImageCreate(v28, height, 8uLL, 0x20uLL, BytesPerRow, DeviceRGB, v29, v23, 0, 1, kCGRenderingIntentDefault);
  CGImageSetProperty();
  CGColorSpaceRelease(DeviceRGB);
  CGDataProviderRelease(v23);
LABEL_17:

  return v16;
}

id _UIPreferredSystemLanguageForBundle(void *a1)
{
  id v1;
  uint64_t v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  _QWORD block[4];
  id v9;

  v1 = a1;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = ___UIPreferredSystemLanguageForBundle_block_invoke;
  block[3] = &unk_1E16B1B28;
  v9 = v1;
  v2 = _UIPreferredSystemLanguageForBundle_onceToken;
  v3 = v1;
  v4 = v3;
  if (v2 == -1)
  {
    v5 = v3;
  }
  else
  {
    dispatch_once(&_UIPreferredSystemLanguageForBundle_onceToken, block);
    v5 = v9;
  }
  v6 = (id)_UIPreferredSystemLanguageForBundle_primaryLanguage;

  return v6;
}

const __CFString *_UIEventDeferringShorterRecreationReasonStringForReason(void *a1)
{
  if ((objc_msgSend(a1, "isEqualToString:", CFSTR("_UIEventDeferringRecreationReasonDetachedContext")) & 1) != 0)
    return CFSTR("detachedContext");
  if ((objc_msgSend(a1, "isEqualToString:", CFSTR("_UIEventDeferringRecreationReasonChangingScreenIdentifier")) & 1) != 0)
    return CFSTR("changingScreenIdentifier");
  if ((objc_msgSend(a1, "isEqualToString:", CFSTR("_UIEventDeferringRecreationReasonNoLongerTopRemoteRecord")) & 1) != 0)
    return CFSTR("noLongerTopRemoteRecord");
  if ((objc_msgSend(a1, "isEqualToString:", CFSTR("_UIEventDeferringRecreationReasonBehaviorDelegateSuppressed")) & 1) != 0)
    return CFSTR("behaviorDelegateSuppressed");
  if (objc_msgSend(a1, "isEqualToString:", CFSTR("_UIEventDeferringRecreationReasonTopRemoteElementNotVisible")))return CFSTR("topRemoteElementNotVisible");
  return &stru_1E16EDF20;
}

double _UIBaselineLayoutBoundsConsultingContentSizeConstraints(void *a1)
{
  double v2;
  double v3;
  void *v4;
  double v5;

  if (objc_msgSend(a1, "_wantsAutolayout"))
  {
    objc_msgSend(a1, "_nsis_bounds");
    v3 = v2;
    v4 = (void *)-[UIView _currentContentSizeHeightConstraint]((uint64_t)a1);
    if (v4)
      objc_msgSend(v4, "constant");
  }
  else if (a1)
  {
    objc_msgSend(a1, "bounds");
    return v5;
  }
  else
  {
    return *MEMORY[0x1E0C9D648];
  }
  return v3;
}

const __CFString *_UIAxisDescription(unint64_t a1)
{
  if (a1 > 3)
    return CFSTR("<unknown>");
  else
    return off_1E16B8E00[a1];
}

void _ETPCollectionSubmitEvent(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getETPCollectionSubmitEventSymbolLoc_ptr;
  v9 = getETPCollectionSubmitEventSymbolLoc_ptr;
  if (!getETPCollectionSubmitEventSymbolLoc_ptr)
  {
    v3 = EventTimingProfileServiceInterfaceLibrary();
    v2 = dlsym(v3, "ETPCollectionSubmitEvent");
    v7[3] = (uint64_t)v2;
    getETPCollectionSubmitEventSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    ((void (*)(uint64_t))v2)(a1);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void _ETPCollectionSubmitEvent(IOHIDEventRef)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UIEventProfileCollection.m"), 29, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185570A08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id UIImageGetUnreadIndicator()
{
  return _UIImageWithName(CFSTR("UIImageNameStandaloneIndicatorDot.png"));
}

id DataDetectorsUIGetClass(void *a1)
{
  NSString *v1;
  void *v2;
  char *v3;
  void *v4;

  v1 = a1;
  if ((sDataDetectorsUIFrameworkLoaded & 1) == 0)
  {
    v2 = dlopen("/System/Library/PrivateFrameworks/DataDetectorsUI.framework/DataDetectorsUI", 4);
    sDataDetectorsUIFrameworkLoaded = 1;
    if (!v2)
    {
      v3 = dlerror();
      NSLog(CFSTR("Failed to load DataDetectorsUI.framework (%s)"), v3);
    }
  }
  NSClassFromString(v1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void *AVFoundationLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!AVFoundationLibraryCore_frameworkLibrary)
    AVFoundationLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)AVFoundationLibraryCore_frameworkLibrary;
  if (!AVFoundationLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AVFoundationLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("UIContinuousPathIntroductionView.m"), 21, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void __swiftcall UIButton.init(type:primaryAction:)(UIButton *__return_ptr retstr, UIButtonType type, UIAction_optional *primaryAction)
{
  id v4;

  v4 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_buttonWithType_primaryAction_, type, primaryAction);

}

id UIButton.init(configuration:primaryAction:)(uint64_t *a1, void *a2)
{
  uint64_t v3;
  void *ObjCClassFromMetadata;
  id v5;
  id v6;

  v3 = *a1;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v5 = *(id *)(v3 + 16);
  swift_release();
  v6 = objc_msgSend(ObjCClassFromMetadata, sel_buttonWithConfiguration_primaryAction_, v5, a2);

  return v6;
}

Swift::Void __swiftcall UIButton.Configuration.setDefaultContentInsets()()
{
  uint64_t *v0;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2 = *v0;
  if (isUniquelyReferenced_nonNull_native)
  {
    v3 = *(void **)(v2 + 16);
  }
  else
  {
    objc_msgSend(*(id *)(v2 + 16), sel_copy);
    sub_186507B1C();
    swift_unknownObjectRelease();
    sub_1851F9080(0, (unint64_t *)&unk_1EDD827B8);
    swift_dynamicCast();
    v3 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74BB8);
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v5;
    swift_release();
    *v0 = v4;
  }
  objc_msgSend(v3, sel_setDefaultContentInsets);
}

void sub_185570D58(uint64_t *a1, uint64_t a2, SEL *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v12[6];

  v5 = *a1;
  v6 = a1[1];
  v7 = (void *)sub_1855D7CCC();
  v8 = v7;
  if (v5)
  {
    v12[4] = v5;
    v12[5] = v6;
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 1107296256;
    v12[2] = sub_1852E82F4;
    v12[3] = a2;
    v9 = _Block_copy(v12);
    v10 = v8;
    swift_release();
  }
  else
  {
    v11 = v7;
    v9 = 0;
  }
  objc_msgSend(v8, *a3, v9);
  _Block_release(v9);

}

void UIButton.Configuration.imageColorTransformer.setter(uint64_t *a1)
{
  sub_185570D58(a1, (uint64_t)&block_descriptor_9, (SEL *)&selRef_setImageColorTransformer_);
}

id UIButton.Configuration.imagePadding.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_imagePadding);
}

uint64_t static UIButton.Configuration.borderless()@<X0>(uint64_t *a1@<X8>)
{
  return sub_1854AF788((SEL *)&selRef_borderlessButtonConfiguration, a1);
}

id UIButton.Configuration.preferredSymbolConfigurationForImage.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_preferredSymbolConfigurationForImage);
}

void type metadata accessor for UITraitEnvironmentLayoutDirection(uint64_t a1)
{
  sub_185249668(a1, &qword_1ECD75788);
}

uint64_t sub_185570E7C()
{
  return sub_1852478E0(&qword_1EDD81F80, (uint64_t (*)(uint64_t))type metadata accessor for UIConfigurationStateCustomKey, (uint64_t)&unk_186666E48);
}

id sub_185570EA8(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  double v10;
  double v11;
  int v13;
  _QWORD aBlock[6];

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(unsigned __int8 *)(a1 + 32);
  v5 = *(double *)(a1 + 40);
  v13 = *(unsigned __int8 *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(unsigned __int8 *)(a1 + 64);
  objc_msgSend(v1, sel_setDisplayedState_, *(_QWORD *)(a1 + 8));
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v2;
  *(_QWORD *)(v8 + 24) = v3;
  aBlock[4] = sub_18534D7BC;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18534D62C;
  aBlock[3] = &block_descriptor_24_0;
  v9 = _Block_copy(aBlock);
  sub_18525B5E8();
  swift_release();
  objc_msgSend(v1, sel_setPosition_, v9);
  _Block_release(v9);
  objc_msgSend(v1, sel_setTintColor_, v6);
  objc_msgSend(v1, sel_setMaintainsFixedSize_, v7);
  objc_msgSend(v1, sel_setHidden_, v4);
  v10 = v5;
  v11 = -1.79769313e308;
  if (v5 == 0.0)
    v11 = 0.0;
  if (v13)
    v10 = v11;
  return objc_msgSend(v1, sel_setReservedLayoutWidth_, v10);
}

void type metadata accessor for UIAccessibilityContrast(uint64_t a1)
{
  sub_185249668(a1, (unint64_t *)&unk_1ECD75750);
}

uint64_t sub_18557103C()
{
  return sub_1852478E0(qword_1EDD81558, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_1866672B8);
}

uint64_t sub_185571068()
{
  return sub_1852478E0(&qword_1EDD82C60, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_186665940);
}

void type metadata accessor for UIUserInterfaceStyle(uint64_t a1)
{
  sub_185249668(a1, (unint64_t *)&unk_1ECD75720);
}

void type metadata accessor for UIUserInterfaceLevel(uint64_t a1)
{
  sub_185249668(a1, &qword_1ECD756B8);
}

uint64_t sub_1855710BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id *v5;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[4];
  _BYTE v13[32];
  uint64_t v14[4];

  swift_getAssociatedTypeWitness();
  v14[3] = swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_0(v14);
  swift_getAssociatedTypeWitness();
  sub_186507618();
  sub_1850F69D4((uint64_t)v14, (uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  swift_dynamicCast();
  sub_1850F26F8((uint64_t)v13, (uint64_t)v12, &qword_1ECD75B20);
  v9 = v12[3];
  sub_18519F088((uint64_t)v12, &qword_1ECD75B20);
  if (v9)
    v10 = sub_186507FB4();
  else
    v10 = 0;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
  objc_msgSend(*v5, sel__setObject_forTraitToken_, v10, sub_185249B74(a3, a4, a5, (uint64_t)&unk_1E16A2528, (uint64_t (*)(uint64_t))sub_18559C50C));
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_185571264(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  id *v6;

  objc_msgSend(*v6, sel__setCGFloatValue_forTraitToken_, sub_185247F14(a3, a4, a5, a6), a1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1855712C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_18517D3B4(a1, a2, a3, a4, a5, a6, a7, (void (*)(void))sub_1855710BC);
}

uint64_t sub_1855712D4(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  return sub_185571264(a4, a1, a2, a3, (uint64_t)&unk_1E16A2730, (uint64_t (*)(uint64_t))sub_18559C634);
}

Swift::Void __swiftcall UIViewController.setContentScrollView(_:)(UIScrollView_optional *a1)
{
  void *v1;

  objc_msgSend(v1, sel_setContentScrollView_forEdge_, a1, 15);
}

uint64_t sub_18557131C()
{
  return sub_1852478E0(&qword_1EDD82890, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_186667118);
}

uint64_t sub_185571348()
{
  return MEMORY[0x1E0DEB1C8];
}

uint64_t sub_185571354()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for UICollectionView.SupplementaryRegistration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UICollectionView.SupplementaryRegistration);
}

uint64_t sub_185571368()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for UICollectionView.CellRegistration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UICollectionView.CellRegistration);
}

uint64_t UICollectionView.CellRegistration.init(handler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  _QWORD *v10;
  uint64_t ObjCClassFromMetadata;
  void *v12;
  void *v13;
  id v14;
  uint64_t result;
  _QWORD v16[6];

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a1;
  v10[5] = a2;
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v16[4] = sub_185678EE0;
  v16[5] = v10;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_18567882C;
  v16[3] = &block_descriptor_27;
  v12 = _Block_copy(v16);
  v13 = (void *)objc_opt_self();
  swift_retain();
  v14 = objc_msgSend(v13, sel_registrationWithCellClass_configurationHandler_, ObjCClassFromMetadata, v12);
  _Block_release(v12);
  swift_release();
  result = swift_release();
  *a5 = v14;
  return result;
}

void __swiftcall UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonItem *__return_ptr retstr, UIBarButtonSystemItem systemItem, UIAction_optional *primaryAction, UIMenu_optional *menu)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithBarButtonSystemItem_primaryAction_menu_, systemItem, primaryAction, menu);

}

void type metadata accessor for UIDisplayGamut(uint64_t a1)
{
  sub_185249668(a1, &qword_1ECD75708);
}

uint64_t type metadata accessor for WeakBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WeakBox);
}

double static UIShape.circle.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 3;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_BYTE *)(a1 + 56) = 6;
  return result;
}

id UIShape.inset(by:)@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v5 = *(void **)v2;
  v6 = *(_QWORD *)(v2 + 8);
  v7 = *(_QWORD *)(v2 + 16);
  v8 = *(_QWORD *)(v2 + 24);
  v9 = *(_QWORD *)(v2 + 32);
  v10 = *(_QWORD *)(v2 + 40);
  v11 = *(_QWORD *)(v2 + 48);
  v12 = *(_BYTE *)(v2 + 56);
  v13 = swift_allocObject();
  *(double *)(v13 + 16) = a2;
  *(double *)(v13 + 24) = a2;
  *(double *)(v13 + 32) = a2;
  *(double *)(v13 + 40) = a2;
  *(_QWORD *)(v13 + 48) = v5;
  *(_QWORD *)(v13 + 56) = v6;
  *(_QWORD *)(v13 + 64) = v7;
  *(_QWORD *)(v13 + 72) = v8;
  *(_QWORD *)(v13 + 80) = v9;
  *(_QWORD *)(v13 + 88) = v10;
  *(_QWORD *)(v13 + 96) = v11;
  *(_BYTE *)(v13 + 104) = v12;
  *(_QWORD *)a1 = v13;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_BYTE *)(a1 + 56) = 4;
  return sub_185228314(v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_1855715F8(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD7D380, &qword_1EDD7D450);
}

uint64_t sub_185571618()
{
  return 0;
}

void sub_185571620(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t sub_185571630(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD7D448, &qword_1EDD7D430);
}

uint64_t sub_185571650()
{
  return 1;
}

void sub_185571658(uint64_t a1)
{
  sub_1853446E0(a1, (SEL *)&selRef_name, &qword_1EDD7D450, algn_1EDD7D458);
}

void sub_185571670(uint64_t a1)
{
  sub_1853446E0(a1, (SEL *)&selRef_identifier, &qword_1EDD7D430, qword_1EDD7D438);
}

id sub_185571688(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v14;
  uint64_t aBlock;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  uint64_t v22;
  _QWORD v23[4];

  if (qword_1ECD75698 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  if (qword_1ECD75650 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  if (qword_1ECD75678 != -1)
    swift_once();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD75628);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_1ECD75660);
  v18 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75348);
  aBlock = _s5UIKit26UITraitTypesettingLanguageV15_customRawValue3forSSSg10Foundation6LocaleV0D0VSg_tFZ_0(v5);
  v16 = v6;
  sub_1850F69D4((uint64_t)&aBlock, (uint64_t)v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  swift_dynamicCast();
  sub_1850F26F8((uint64_t)v23, (uint64_t)v21, &qword_1ECD75B20);
  v7 = v22;
  sub_18519F088((uint64_t)v21, &qword_1ECD75B20);
  if (v7)
  {
    v23[0] = aBlock;
    v23[1] = v16;
    swift_bridgeObjectRetain();
    v8 = sub_186508050();
  }
  else
  {
    v8 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
  v9 = sub_18519EB9C();
  if (v9)
  {
    v19 = v9;
    v20 = v10;
    aBlock = MEMORY[0x1E0C809B0];
    v16 = 1107296256;
    v17 = sub_1855878D4;
    v18 = &block_descriptor_108;
    v11 = _Block_copy(&aBlock);
    swift_release();
  }
  else
  {
    v11 = 0;
  }
  LOBYTE(v14) = 0;
  v12 = objc_msgSend((id)objc_opt_self(), sel__defineObjectTraitWithName_identifier_defaultValue_equalityHandler_affectsColorAppearance_defaultValueRepresentsUnspecified_isPrivate_placeholderToken_, v2, v3, v8, v11, 0, 1, v14, a1);
  _Block_release(v11);

  swift_unknownObjectRelease();
  return v12;
}

id sub_185571908(uint64_t a1)
{
  uint64_t *v1;

  return sub_18534474C(a1, v1[4], v1[2], v1[3]);
}

void UICollectionLayoutListConfiguration._willBeginSwipingHandler.setter(uint64_t a1, uint64_t a2)
{
  sub_185714454(a1, a2, (uint64_t)&block_descriptor_53_0, (SEL *)&selRef__setWillBeginSwipingHandler_);
}

void UICollectionLayoutListConfiguration._didEndSwipingHandler.setter(uint64_t a1, uint64_t a2)
{
  sub_185714454(a1, a2, (uint64_t)&block_descriptor_70, (SEL *)&selRef__setDidEndSwipingHandler_);
}

uint64_t type metadata accessor for NSDiffableDataSourceSectionSnapshot(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NSDiffableDataSourceSectionSnapshot);
}

uint64_t NSDiffableDataSourceSectionSnapshot.init()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t result;

  type metadata accessor for NSDiffableDataSourceSectionSnapshot.ImplWrapper(0, a1, a2, a3);
  result = sub_1855719D0();
  *a4 = result;
  return result;
}

uint64_t sub_185571980()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for NSDiffableDataSourceSectionSnapshot.ImplWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for NSDiffableDataSourceSectionSnapshot.ImplWrapper);
}

uint64_t sub_1855719D0()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = objc_msgSend(objc_allocWithZone((Class)NSDiffableDataSourceSectionSnapshot), sel_init);
  return v0;
}

uint64_t UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)(uint64_t a1, uint64_t a2, char a3, void *a4, uint64_t a5)
{
  uint64_t v5;
  void *v9;
  id v10;
  uint64_t v11;
  _QWORD v13[6];

  v9 = *(void **)(v5 + qword_1EDD8B090[0]);
  v10 = *(id *)(*(_QWORD *)a1 + 16);
  v11 = sub_186507FB4();
  if (a4)
  {
    v13[4] = a4;
    v13[5] = a5;
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 1107296256;
    v13[2] = sub_18530A69C;
    v13[3] = &block_descriptor_45;
    a4 = _Block_copy(v13);
    swift_retain();
    swift_release();
  }
  objc_msgSend(v9, sel_applySnapshot_toSection_animatingDifferences_completion_, v10, v11, a3 & 1, a4);
  _Block_release(a4);

  return swift_unknownObjectRelease();
}

uint64_t UICollectionViewDiffableDataSource.sectionSnapshotHandlers.setter(_QWORD *a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = (void *)*a1;
  v3 = a1[1];
  v4 = a1[3];
  v5 = a1[5];
  v6 = a1[7];
  v8 = a1[9];
  objc_msgSend(*(id *)(v1 + qword_1EDD8B090[0]), sel_setSectionSnapshotHandlers_, *a1);

  sub_18518D718(v3);
  sub_18518D718(v4);
  sub_18518D718(v5);
  sub_18518D718(v6);
  return sub_18518D718(v8);
}

void sub_185571BF0(void ***a1, char a2)
{
  void **v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[11];

  v2 = *a1;
  v3 = **a1;
  v4 = (uint64_t)(*a1)[1];
  v5 = (*a1)[2];
  v6 = (uint64_t)(*a1)[3];
  v8 = (*a1)[4];
  v7 = (uint64_t)(*a1)[5];
  v10 = (*a1)[6];
  v9 = (uint64_t)(*a1)[7];
  v12 = (*a1)[8];
  v11 = (*a1)[9];
  v13 = (*a1)[10];
  v21[0] = v3;
  v21[1] = v4;
  v21[2] = v5;
  v21[3] = v6;
  v21[4] = v8;
  v21[5] = v7;
  v21[6] = v10;
  v21[7] = v9;
  v21[8] = v12;
  v21[9] = v11;
  v21[10] = v13;
  if ((a2 & 1) != 0)
  {
    v14 = (uint64_t)v11;
    v15 = v3;
    sub_18518D708(v4);
    sub_18518D708(v6);
    sub_18518D708(v7);
    sub_18518D708(v9);
    sub_18518D708(v14);
    UICollectionViewDiffableDataSource.sectionSnapshotHandlers.setter(v21);
    v16 = (uint64_t)v2[1];
    v17 = (uint64_t)v2[3];
    v18 = (uint64_t)v2[5];
    v19 = (uint64_t)v2[7];
    v20 = (uint64_t)v2[9];

    sub_18518D718(v16);
    sub_18518D718(v17);
    sub_18518D718(v18);
    sub_18518D718(v19);
    sub_18518D718(v20);
  }
  else
  {
    UICollectionViewDiffableDataSource.sectionSnapshotHandlers.setter(v21);
  }
  free(v2);
}

void (*UICollectionViewDiffableDataSource.sectionSnapshotHandlers.modify(_QWORD *a1))(void ***a1, char a2)
{
  uint64_t v1;
  char *v3;

  v3 = (char *)malloc(0x60uLL);
  *a1 = v3;
  *((_QWORD *)v3 + 11) = v1;
  *(_QWORD *)v3 = objc_msgSend(*(id *)(v1 + qword_1EDD8B090[0]), sel_sectionSnapshotHandlers);
  *(_OWORD *)(v3 + 8) = 0u;
  *(_OWORD *)(v3 + 24) = 0u;
  *(_OWORD *)(v3 + 40) = 0u;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  return sub_185571BF0;
}

uint64_t sub_185571DC4()
{
  return swift_allocateGenericValueMetadata();
}

void type metadata accessor for UICollectionViewDiffableDataSource.SectionSnapshotHandlers()
{
  JUMPOUT(0x186DC9E8CLL);
}

id UICollectionViewDiffableDataSource.SectionSnapshotHandlers.shouldCollapseItem.setter(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  id v8;
  uint64_t v9;
  __int128 v10;
  void *v11;
  _QWORD v13[6];

  v7 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)(v3 + 40) = a1;
  *(_QWORD *)(v3 + 48) = a2;
  sub_18518D708(a1);
  sub_18518D718(v7);
  if (!a1)
    return objc_msgSend(*(id *)v3, sel_setShouldCollapseItemHandler_, 0);
  v8 = *(id *)v3;
  v9 = swift_allocObject();
  v10 = a3[2];
  *(_OWORD *)(v9 + 16) = a3[1];
  *(_OWORD *)(v9 + 32) = v10;
  *(_OWORD *)(v9 + 48) = a3[3];
  *(_QWORD *)(v9 + 64) = a1;
  *(_QWORD *)(v9 + 72) = a2;
  v13[4] = sub_1856943A8;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_185693380;
  v13[3] = &block_descriptor_12_5;
  v11 = _Block_copy(v13);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_setShouldCollapseItemHandler_, v11);
  _Block_release(v11);
  return (id)sub_18518D718(a1);
}

id UICollectionViewDiffableDataSource.SectionSnapshotHandlers.willCollapseItem.setter(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  id v8;
  uint64_t v9;
  __int128 v10;
  void *v11;
  _QWORD v13[6];

  v7 = *(_QWORD *)(v3 + 56);
  *(_QWORD *)(v3 + 56) = a1;
  *(_QWORD *)(v3 + 64) = a2;
  sub_18518D708(a1);
  sub_18518D718(v7);
  if (!a1)
    return objc_msgSend(*(id *)v3, sel_setWillCollapseItemHandler_, 0);
  v8 = *(id *)v3;
  v9 = swift_allocObject();
  v10 = a3[2];
  *(_OWORD *)(v9 + 16) = a3[1];
  *(_OWORD *)(v9 + 32) = v10;
  *(_OWORD *)(v9 + 48) = a3[3];
  *(_QWORD *)(v9 + 64) = a1;
  *(_QWORD *)(v9 + 72) = a2;
  v13[4] = sub_1856943B4;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_185693630;
  v13[3] = &block_descriptor_18_1;
  v11 = _Block_copy(v13);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_setWillCollapseItemHandler_, v11);
  _Block_release(v11);
  return (id)sub_18518D718(a1);
}

id UICollectionViewDiffableDataSource.SectionSnapshotHandlers.shouldExpandItem.setter(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  id v8;
  uint64_t v9;
  __int128 v10;
  void *v11;
  _QWORD v13[6];

  v7 = *(_QWORD *)(v3 + 8);
  *(_QWORD *)(v3 + 8) = a1;
  *(_QWORD *)(v3 + 16) = a2;
  sub_18518D708(a1);
  sub_18518D718(v7);
  if (!a1)
    return objc_msgSend(*(id *)v3, sel_setShouldExpandItemHandler_, 0);
  v8 = *(id *)v3;
  v9 = swift_allocObject();
  v10 = a3[2];
  *(_OWORD *)(v9 + 16) = a3[1];
  *(_OWORD *)(v9 + 32) = v10;
  *(_OWORD *)(v9 + 48) = a3[3];
  *(_QWORD *)(v9 + 64) = a1;
  *(_QWORD *)(v9 + 72) = a2;
  v13[4] = sub_1856943A8;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_185693380;
  v13[3] = &block_descriptor_32;
  v11 = _Block_copy(v13);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_setShouldExpandItemHandler_, v11);
  _Block_release(v11);
  return (id)sub_18518D718(a1);
}

id UICollectionViewDiffableDataSource.SectionSnapshotHandlers.willExpandItem.setter(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  id v8;
  uint64_t v9;
  __int128 v10;
  void *v11;
  _QWORD v13[6];

  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)(v3 + 24) = a1;
  *(_QWORD *)(v3 + 32) = a2;
  sub_18518D708(a1);
  sub_18518D718(v7);
  if (!a1)
    return objc_msgSend(*(id *)v3, sel_setWillExpandItemHandler_, 0);
  v8 = *(id *)v3;
  v9 = swift_allocObject();
  v10 = a3[2];
  *(_OWORD *)(v9 + 16) = a3[1];
  *(_OWORD *)(v9 + 32) = v10;
  *(_OWORD *)(v9 + 48) = a3[3];
  *(_QWORD *)(v9 + 64) = a1;
  *(_QWORD *)(v9 + 72) = a2;
  v13[4] = sub_1856943B4;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_185693630;
  v13[3] = &block_descriptor_6_5;
  v11 = _Block_copy(v13);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_setWillExpandItemHandler_, v11);
  _Block_release(v11);
  return (id)sub_18518D718(a1);
}

uint64_t UICollectionViewDiffableDataSource.reorderingHandlers.setter(_QWORD *a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (void *)*a1;
  v3 = a1[1];
  v4 = a1[3];
  v5 = a1[5];
  objc_msgSend(*(id *)(v1 + qword_1EDD8B090[0]), sel_setReorderingHandlers_, *a1);

  sub_18518D718(v3);
  sub_18518D718(v4);
  return sub_18518D718(v5);
}

void sub_18557230C(void ***a1, char a2)
{
  void **v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];

  v2 = *a1;
  v3 = **a1;
  v4 = (uint64_t)(*a1)[1];
  v6 = (*a1)[2];
  v5 = (uint64_t)(*a1)[3];
  v8 = (*a1)[4];
  v7 = (uint64_t)(*a1)[5];
  v9 = (*a1)[6];
  v14[0] = v3;
  v14[1] = v4;
  v14[2] = v6;
  v14[3] = v5;
  v14[4] = v8;
  v14[5] = v7;
  v14[6] = v9;
  if ((a2 & 1) != 0)
  {
    v10 = v3;
    sub_18518D708(v4);
    sub_18518D708(v5);
    sub_18518D708(v7);
    UICollectionViewDiffableDataSource.reorderingHandlers.setter(v14);
    v11 = (uint64_t)v2[1];
    v12 = (uint64_t)v2[3];
    v13 = (uint64_t)v2[5];

    sub_18518D718(v11);
    sub_18518D718(v12);
    sub_18518D718(v13);
  }
  else
  {
    UICollectionViewDiffableDataSource.reorderingHandlers.setter(v14);
  }
  free(v2);
}

void (*UICollectionViewDiffableDataSource.reorderingHandlers.modify(_QWORD *a1))(void ***a1, char a2)
{
  uint64_t v1;
  char *v3;

  v3 = (char *)malloc(0x40uLL);
  *a1 = v3;
  *((_QWORD *)v3 + 7) = v1;
  *(_QWORD *)v3 = objc_msgSend(*(id *)(v1 + qword_1EDD8B090[0]), sel_reorderingHandlers);
  *(_OWORD *)(v3 + 8) = 0u;
  *(_OWORD *)(v3 + 24) = 0u;
  *(_OWORD *)(v3 + 40) = 0u;
  return sub_18557230C;
}

uint64_t sub_185572470()
{
  return swift_allocateGenericValueMetadata();
}

void type metadata accessor for UICollectionViewDiffableDataSource.ReorderingHandlers()
{
  JUMPOUT(0x186DC9E8CLL);
}

id UICollectionViewDiffableDataSource.ReorderingHandlers.canReorderItem.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  id v8;
  uint64_t v9;
  __int128 v10;
  void *v11;
  _QWORD v13[6];

  v7 = *(_QWORD *)(v3 + 8);
  *(_QWORD *)(v3 + 8) = a1;
  *(_QWORD *)(v3 + 16) = a2;
  sub_18518D708(a1);
  sub_18518D718(v7);
  if (!a1)
    return objc_msgSend(*(id *)v3, sel_setCanReorderItemHandler_, 0);
  v8 = *(id *)v3;
  v9 = swift_allocObject();
  v10 = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v9 + 32) = v10;
  *(_QWORD *)(v9 + 48) = a1;
  *(_QWORD *)(v9 + 56) = a2;
  v13[4] = sub_1856D8DA0;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_185693380;
  v13[3] = &block_descriptor_46;
  v11 = _Block_copy(v13);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_setCanReorderItemHandler_, v11);
  _Block_release(v11);
  return (id)sub_18518D718(a1);
}

id UICollectionViewDiffableDataSource.ReorderingHandlers.willReorder.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  id v8;
  uint64_t v9;
  __int128 v10;
  void *v11;
  _QWORD v13[6];

  v7 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)(v3 + 24) = a1;
  *(_QWORD *)(v3 + 32) = a2;
  sub_18518D708(a1);
  sub_18518D718(v7);
  if (!a1)
    return objc_msgSend(*(id *)v3, sel_setWillReorderHandler_, 0);
  v8 = *(id *)v3;
  v9 = swift_allocObject();
  v10 = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v9 + 32) = v10;
  *(_QWORD *)(v9 + 48) = a1;
  *(_QWORD *)(v9 + 56) = a2;
  v13[4] = sub_1856D8DB0;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1855B2B2C;
  v13[3] = &block_descriptor_6_6;
  v11 = _Block_copy(v13);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_setWillReorderHandler_, v11);
  _Block_release(v11);
  return (id)sub_18518D718(a1);
}

id UICollectionViewDiffableDataSource.ReorderingHandlers.didReorder.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  id v8;
  uint64_t v9;
  __int128 v10;
  void *v11;
  _QWORD v13[6];

  v7 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)(v3 + 40) = a1;
  *(_QWORD *)(v3 + 48) = a2;
  sub_18518D708(a1);
  sub_18518D718(v7);
  if (!a1)
    return objc_msgSend(*(id *)v3, sel_setDidReorderHandler_, 0);
  v8 = *(id *)v3;
  v9 = swift_allocObject();
  v10 = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v9 + 32) = v10;
  *(_QWORD *)(v9 + 48) = a1;
  *(_QWORD *)(v9 + 56) = a2;
  v13[4] = sub_1856D8DB0;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1855B2B2C;
  v13[3] = &block_descriptor_12_6;
  v11 = _Block_copy(v13);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_setDidReorderHandler_, v11);
  _Block_release(v11);
  return (id)sub_18518D718(a1);
}

void sub_1855727F0()
{
  type metadata accessor for NSDiffableDataSourceSnapshot();
}

void sub_185572848(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  _QWORD v31[14];

  v27 = *(void **)(v26 + 16);
  if (v24)
  {
    v31[4] = v24;
    v31[5] = v23;
    v31[0] = MEMORY[0x1E0C809B0];
    v31[1] = 1107296256;
    v31[2] = sub_18530A69C;
    v31[3] = v25;
    v28 = _Block_copy(v31);
    v29 = v27;
    sub_18518D708(v24);
    swift_release();
  }
  else
  {
    v30 = v27;
    v28 = 0;
  }
  objc_msgSend(v22, sel_reloadFromSnapshot_completion_, v27, v28);
  _Block_release(v28);

}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.applySnapshotUsingReloadData(_:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

void sub_185572904()
{
  sub_1855727F0();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

void UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  id (*v11)(uint64_t, void *, uint64_t, uint64_t);
  void *v12;
  id v13;
  void *v14;
  _QWORD *v15;
  id v16;
  uint64_t aBlock;
  uint64_t v18;
  id (*v19)(uint64_t, void *, uint64_t, uint64_t);
  void *v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  _QWORD *v22;

  v7 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v3);
  v8 = (_QWORD *)swift_allocObject();
  v9 = v7[10];
  v8[2] = v9;
  v10 = v7[11];
  v8[3] = v10;
  v11 = (id (*)(uint64_t, void *, uint64_t, uint64_t))v7[12];
  v8[4] = v11;
  v12 = (void *)v7[13];
  v8[5] = v12;
  v8[6] = a2;
  v8[7] = a3;
  v13 = objc_allocWithZone((Class)__UIDiffableDataSource);
  v21 = sub_1852CD284;
  v22 = v8;
  aBlock = MEMORY[0x1E0C809B0];
  v18 = 1107296256;
  v19 = sub_1852CD19C;
  v20 = &block_descriptor_28_2;
  v14 = _Block_copy(&aBlock);
  v15 = v3;
  swift_retain();
  swift_retain();
  v16 = objc_msgSend(v13, sel_initWithCollectionView_cellProvider_, a1, v14);
  _Block_release(v14);
  swift_release();
  *(_QWORD *)((char *)v15 + qword_1EDD8B090[0]) = v16;

  aBlock = v9;
  v18 = v10;
  v19 = v11;
  v20 = v12;
  type metadata accessor for UICollectionViewDiffableDataSource();
}

id sub_185572A6C(objc_class *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  void *v28;
  void *v29;
  id v30;
  objc_super v32;

  v32.receiver = v28;
  v32.super_class = a1;
  v30 = -[objc_class init](&v32, sel_init);
  objc_msgSend(v29, sel_setDataSource_, v30);
  swift_release();

  swift_release();
  return v30;
}

void UICollectionViewDiffableDataSource.__allocating_init(collectionView:cellProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)(a1, a2, a3);
}

ValueMetadata *type metadata accessor for UIControlPointerHoverStyleDriver()
{
  return &type metadata for UIControlPointerHoverStyleDriver;
}

uint64_t UIConfigurationColorTransformer.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

ValueMetadata *type metadata accessor for UIConfigurationColorTransformer()
{
  return &type metadata for UIConfigurationColorTransformer;
}

void type metadata accessor for UITableViewDiffableDataSource()
{
  JUMPOUT(0x186DC9E8CLL);
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.indexPath(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t sub_185572B78@<X0>(uint64_t a1@<X8>)
{
  return sub_1852C76E8(qword_1EDD8B0A8, a1);
}

uint64_t sub_185572B84(void *a1, uint64_t a2, uint64_t a3)
{
  id v4;

  v4 = a1;
  LOBYTE(a3) = sub_185572BBC(a3);

  return a3 & 1;
}

BOOL sub_185572BBC(uint64_t a1)
{
  return sub_18535A0E4(a1, (void (*)(_QWORD, _OWORD *))type metadata accessor for UITableViewDiffableDataSource);
}

void UITableViewDiffableDataSource.init(tableView:cellProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  id (*v11)(uint64_t, void *, uint64_t, uint64_t);
  void *v12;
  id v13;
  void *v14;
  _QWORD *v15;
  id v16;
  uint64_t aBlock;
  uint64_t v18;
  id (*v19)(uint64_t, void *, uint64_t, uint64_t);
  void *v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  _QWORD *v22;

  v7 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v3);
  v8 = (_QWORD *)swift_allocObject();
  v9 = v7[10];
  v8[2] = v9;
  v10 = v7[11];
  v8[3] = v10;
  v11 = (id (*)(uint64_t, void *, uint64_t, uint64_t))v7[12];
  v8[4] = v11;
  v12 = (void *)v7[13];
  v8[5] = v12;
  v8[6] = a2;
  v8[7] = a3;
  v13 = objc_allocWithZone((Class)__UIDiffableDataSource);
  v21 = sub_1852CD284;
  v22 = v8;
  aBlock = MEMORY[0x1E0C809B0];
  v18 = 1107296256;
  v19 = sub_1852CD19C;
  v20 = &block_descriptor_40_4;
  v14 = _Block_copy(&aBlock);
  v15 = v3;
  swift_retain();
  swift_retain();
  v16 = objc_msgSend(v13, sel_initWithTableView_cellProvider_, a1, v14);
  _Block_release(v14);
  swift_release();
  *(_QWORD *)((char *)v15 + qword_1EDD8B0A8[0]) = v16;

  aBlock = v9;
  v18 = v10;
  v19 = v11;
  v20 = v12;
  type metadata accessor for UITableViewDiffableDataSource();
}

id sub_185572D00(objc_class *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  void *v28;
  void *v29;
  id v30;
  objc_super v32;

  v32.receiver = v28;
  v32.super_class = a1;
  v30 = -[objc_class init](&v32, sel_init);
  objc_msgSend(v29, sel_setDataSource_, v30);
  swift_release();

  swift_release();
  return v30;
}

ValueMetadata *type metadata accessor for UITraitAccessibilityContrast()
{
  return &type metadata for UITraitAccessibilityContrast;
}

uint64_t NSDiffableDataSourceSnapshot.sectionIdentifier(containingItem:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  id v5;
  id v6;
  uint64_t v7;
  int v8;
  __int128 v10;
  _OWORD v11[2];

  v5 = *(id *)(*(_QWORD *)v2 + 16);
  v6 = objc_msgSend(v5, sel_sectionIdentifierForSectionContainingItemIdentifier_, sub_186507FB4());

  swift_unknownObjectRelease();
  if (v6)
  {
    sub_186507B1C();
    swift_unknownObjectRelease();
    sub_1850F6908(&v10, v11);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a2, v8 ^ 1u, 1, v7);
}

uint64_t sub_185572E84(uint64_t a1, SEL *a2)
{
  uint64_t v2;
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v2 + 16), *a2);
  sub_186507654();

  v4 = sub_186507D68();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t NSDiffableDataSourceSnapshot.itemIdentifiers.getter(uint64_t a1)
{
  return sub_185572E84(a1, (SEL *)&selRef_itemIdentifiers);
}

void sub_185572F0C(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAC8, (SEL *)&selRef_name, &qword_1ECD75680, qword_1ECD75688);
}

uint64_t _s5UIKit26UITraitTypesettingLanguageV15_customRawValue3forSSSg10Foundation6LocaleV0D0VSg_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD75628);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75620);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18519F0C4(a1, (uint64_t)v4, (uint64_t *)&unk_1ECD75628);
  v8 = sub_186506BF8();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) == 1)
  {
    v10 = (uint64_t *)&unk_1ECD75628;
    v11 = (uint64_t)v4;
  }
  else
  {
    sub_186506BEC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v4, v8);
    v12 = sub_186506BD4();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12) != 1)
    {
      v14 = sub_186506BC8();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v7, v12);
      return v14;
    }
    v10 = &qword_1ECD75620;
    v11 = (uint64_t)v7;
  }
  sub_18519F088(v11, v10);
  return 0;
}

uint64_t sub_1855730A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD75628);
  __swift_allocate_value_buffer(v0, qword_1ECD75660);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ECD75660);
  v2 = sub_186506BF8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

void sub_18557310C(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAC8, (SEL *)&selRef_identifier, &qword_1ECD75638, qword_1ECD75640);
}

ValueMetadata *type metadata accessor for UITraitHorizontalSizeClass()
{
  return &type metadata for UITraitHorizontalSizeClass;
}

id UIListContentConfiguration.textToSecondaryTextVerticalPadding.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_textToSecondaryTextVerticalPadding);
}

uint64_t static UIListContentConfiguration.extraProminentInsetGroupedHeader()@<X0>(uint64_t *a1@<X8>)
{
  return sub_185398CE0((SEL *)&selRef_extraProminentInsetGroupedHeaderConfiguration, a1);
}

uint64_t static UIListContentConfiguration.subtitleCell()@<X0>(uint64_t *a1@<X8>)
{
  return sub_185398CE0((SEL *)&selRef_subtitleCellConfiguration, a1);
}

id UIBackgroundConfiguration.backgroundColor.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_backgroundColor);
}

id sub_185573190(uint64_t a1)
{
  uint64_t *v1;

  return sub_185344974(a1, v1[4], v1[2], v1[3]);
}

uint64_t static UITraitDefinition.name.getter()
{
  swift_getMetatypeMetadata();
  return sub_18650751C();
}

BOOL static UITraitDefinition._defaultValueRepresentsUnspecified.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t, uint64_t);
  _BOOL8 v5;
  _QWORD v7[4];
  _BYTE v8[32];
  uint64_t v9[4];

  v4 = *(void (**)(uint64_t, uint64_t))(a2 + 16);
  v9[3] = swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_0(v9);
  v4(a1, a2);
  sub_1850F69D4((uint64_t)v9, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  swift_dynamicCast();
  sub_1850F26F8((uint64_t)v8, (uint64_t)v7, &qword_1ECD75B20);
  v5 = v7[3] == 0;
  sub_18519F088((uint64_t)v7, &qword_1ECD75B20);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v9);
  return v5;
}

uint64_t UITraitOverrides.remove(_:)(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = (void *)sub_185247F8C();
  swift_unknownObjectRetain();
  objc_msgSend(v4, sel__removeTraitToken_, sub_185249BF0(a1, 0, 0, a1, a2));
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t UIMutableTraits.preferredContentSizeCategory.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 304);
  v6 = sub_1852478E0((unint64_t *)&unk_1ECD75730, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_186667890);
  return v5(&v8, &type metadata for UITraitPreferredContentSizeCategory, &type metadata for UITraitPreferredContentSizeCategory, &protocol witness table for UITraitPreferredContentSizeCategory, v6, a2, a3);
}

uint64_t UIMutableTraits.accessibilityContrast.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1852478E0((unint64_t *)&unk_1ECD75740, (uint64_t (*)(uint64_t))type metadata accessor for UIAccessibilityContrast, (uint64_t)&unk_186667818);
  return v5(&v8, &type metadata for UITraitAccessibilityContrast, &type metadata for UITraitAccessibilityContrast, &protocol witness table for UITraitAccessibilityContrast, v6, a2, a3);
}

uint64_t UIMutableTraits.horizontalSizeClass.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1852478E0((unint64_t *)&unk_1ECD75760, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceSizeClass, (uint64_t)&unk_186667908);
  return v5(&v8, &type metadata for UITraitHorizontalSizeClass, &type metadata for UITraitHorizontalSizeClass, &protocol witness table for UITraitHorizontalSizeClass, v6, a2, a3);
}

uint64_t UIMutableTraits.userInterfaceLevel.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1852478E0((unint64_t *)&unk_1ECD756A8, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceLevel, (uint64_t)&unk_1866677DC);
  return v5(&v8, &type metadata for UITraitUserInterfaceLevel, &type metadata for UITraitUserInterfaceLevel, &protocol witness table for UITraitUserInterfaceLevel, v6, a2, a3);
}

uint64_t UIMutableTraits.verticalSizeClass.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1852478E0((unint64_t *)&unk_1ECD75760, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceSizeClass, (uint64_t)&unk_186667908);
  return v5(&v8, &type metadata for UITraitVerticalSizeClass, &type metadata for UITraitVerticalSizeClass, &protocol witness table for UITraitVerticalSizeClass, v6, a2, a3);
}

uint64_t UIMutableTraits.layoutDirection.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1852478E0((unint64_t *)&unk_1ECD75778, (uint64_t (*)(uint64_t))type metadata accessor for UITraitEnvironmentLayoutDirection, (uint64_t)&unk_186667944);
  return v5(&v8, &type metadata for UITraitLayoutDirection, &type metadata for UITraitLayoutDirection, &protocol witness table for UITraitLayoutDirection, v6, a2, a3);
}

uint64_t UIMutableTraits.displayScale.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a2 + 40))(&type metadata for UITraitDisplayScale, &type metadata for UITraitDisplayScale, &protocol witness table for UITraitDisplayScale, a1, a2);
}

uint64_t UIMutableTraits.displayGamut.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1852478E0((unint64_t *)&unk_1ECD756F8, (uint64_t (*)(uint64_t))type metadata accessor for UIDisplayGamut, (uint64_t)&unk_186667854);
  return v5(&v8, &type metadata for UITraitDisplayGamut, &type metadata for UITraitDisplayGamut, &protocol witness table for UITraitDisplayGamut, v6, a2, a3);
}

uint64_t *sub_1855736A0(uint64_t *result, uint64_t a2)
{
  *result = *result & 3 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for UICellAccessory.Placement()
{
  return &type metadata for UICellAccessory.Placement;
}

id sub_1855736C4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UICellAccessoryDisclosureIndicator), sel_init);
  qword_1EDD82560 = (uint64_t)result;
  return result;
}

void destroy for UICellAccessory.CustomViewConfiguration(id *a1)
{

  sub_18525B5F0();
}

ValueMetadata *type metadata accessor for UICellAccessory.CustomViewConfiguration()
{
  return &type metadata for UICellAccessory.CustomViewConfiguration;
}

id sub_185573738()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UICellAccessoryMultiselect), sel_init);
  qword_1EDD81AD8 = (uint64_t)result;
  return result;
}

id sub_185573768()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UICellAccessoryReorder), sel_init);
  qword_1EDD82960 = (uint64_t)result;
  return result;
}

id sub_185573798()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UICellAccessoryDelete), sel_init);
  qword_1EDD825A8 = (uint64_t)result;
  return result;
}

id static UICellAccessory.customView(configuration:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  id v11;
  id v13;
  _QWORD v14[4];
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;

  v3 = *(_QWORD *)(a1 + 8);
  v13 = *(id *)a1;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_BYTE *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_BYTE *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_BYTE *)(a1 + 64);
  v11 = objc_msgSend(objc_allocWithZone((Class)UICellAccessoryCustomView), sel_initWithCustomView_placement_, *(_QWORD *)a1, v3 >> 63);
  v14[0] = v13;
  v14[1] = v3;
  v14[2] = v4;
  v14[3] = v5;
  v15 = v6;
  v16 = v7;
  v17 = v8;
  v18 = v9;
  v19 = v10;
  sub_185570EA8((uint64_t)v14);
  *a2 = v13;
  a2[1] = v11;
  return v13;
}

_DWORD *sub_185573884()
{
  uint64_t v0;
  _DWORD *result;

  type metadata accessor for _UISwiftTraits.UnfairLock();
  v0 = swift_allocObject();
  result = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v0 + 16) = result;
  *result = 0;
  off_1ECD75A08 = (_UNKNOWN *)v0;
  return result;
}

void sub_1855738D0()
{
  off_1ECD759F8 = (_UNKNOWN *)MEMORY[0x1E0DEE9E0];
}

void sub_1855738E4()
{
  off_1ECD759E8 = (_UNKNOWN *)MEMORY[0x1E0DEE9E0];
}

ValueMetadata *type metadata accessor for _UISwiftTraits.HashableTraitToken()
{
  return &type metadata for _UISwiftTraits.HashableTraitToken;
}

unint64_t sub_18557390C()
{
  unint64_t result;

  result = qword_1ECD759D8;
  if (!qword_1ECD759D8)
  {
    result = MEMORY[0x186DC9F28](&unk_18666854C, &type metadata for _UISwiftTraits.HashableTraitToken);
    atomic_store(result, (unint64_t *)&qword_1ECD759D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for _UISwiftTraits.HashableMetatype()
{
  return &type metadata for _UISwiftTraits.HashableMetatype;
}

unint64_t sub_185573964()
{
  unint64_t result;

  result = qword_1ECD759D0;
  if (!qword_1ECD759D0)
  {
    result = MEMORY[0x186DC9F28](&unk_1866685B4, &type metadata for _UISwiftTraits.HashableMetatype);
    atomic_store(result, (unint64_t *)&qword_1ECD759D0);
  }
  return result;
}

uint64_t type metadata accessor for _UISwiftTraits.UnfairLock()
{
  return objc_opt_self();
}

void sub_1855739C8()
{
  os_unfair_lock_t *v0;

  if (qword_1ECD75A10 != -1)
    swift_once();
  v0 = (os_unfair_lock_t *)off_1ECD75A08;
  os_unfair_lock_lock(*((os_unfair_lock_t *)off_1ECD75A08 + 2));
  sub_18524879C();
  os_unfair_lock_unlock(v0[2]);
}

unint64_t sub_185573A34()
{
  unint64_t result;

  result = qword_1EDD81F48;
  if (!qword_1EDD81F48)
  {
    result = MEMORY[0x186DC9F28](MEMORY[0x1E0DEF060], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1EDD81F48);
  }
  return result;
}

uint64_t sub_185573A78()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_186506874();
  if (v1 <= 0x3F)
  {
    result = sub_186506868();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_185573B34()
{
  return sub_1852478E0(qword_1ECD75440, (uint64_t (*)(uint64_t))type metadata accessor for AttributeScopes.UIKitAttributes, (uint64_t)&protocol conformance descriptor for AttributeScopes.UIKitAttributes);
}

uint64_t sub_185573B60()
{
  return sub_1852478E0(&qword_1ECD75438, (uint64_t (*)(uint64_t))type metadata accessor for AttributeScopes.UIKitAttributes, (uint64_t)&protocol conformance descriptor for AttributeScopes.UIKitAttributes);
}

ValueMetadata *type metadata accessor for AttributeScopes.UIKitAttributes.ExpansionAttribute()
{
  return &type metadata for AttributeScopes.UIKitAttributes.ExpansionAttribute;
}

uint64_t sub_185573B9C(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1ECD74BB0, &qword_1ECD74B98);
}

uint64_t sub_185573BBC()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1865074F8();
  qword_1ECD74B98 = result;
  unk_1ECD74BA0 = v1;
  return result;
}

uint64_t sub_185573BEC()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1865074F8();
  qword_1ECD75420 = result;
  *(_QWORD *)algn_1ECD75428 = v1;
  return result;
}

ValueMetadata *type metadata accessor for AttributeScopes.UIKitAttributes.LigatureAttribute()
{
  return &type metadata for AttributeScopes.UIKitAttributes.LigatureAttribute;
}

uint64_t sub_185573C28(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1ECD74B90, &qword_1ECD74B80);
}

uint64_t sub_185573C48()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1865074F8();
  qword_1ECD74B80 = result;
  *(_QWORD *)algn_1ECD74B88 = v1;
  return result;
}

ValueMetadata *type metadata accessor for AttributeScopes.UIKitAttributes.ShadowAttribute()
{
  return &type metadata for AttributeScopes.UIKitAttributes.ShadowAttribute;
}

uint64_t sub_185573C84(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1ECD74B78, &qword_1ECD74B68);
}

uint64_t sub_185573CA4()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1865074F8();
  qword_1ECD74B68 = result;
  unk_1ECD74B70 = v1;
  return result;
}

ValueMetadata *type metadata accessor for AttributeScopes.UIKitAttributes.KernAttribute()
{
  return &type metadata for AttributeScopes.UIKitAttributes.KernAttribute;
}

uint64_t sub_185573CE0(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1ECD75418, &qword_1ECD75408);
}

uint64_t sub_185573D00()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1865074F8();
  qword_1ECD75408 = result;
  unk_1ECD75410 = v1;
  return result;
}

uint64_t sub_185573D2C()
{
  return sub_185219C3C((unint64_t *)&unk_1ECD74A38, (unint64_t *)&qword_1ECD74A30);
}

uint64_t sub_185573D58()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1865074F8();
  qword_1ECD753F0 = result;
  *(_QWORD *)algn_1ECD753F8 = v1;
  return result;
}

uint64_t sub_185573D84()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1865074F8();
  qword_1ECD753D8 = result;
  unk_1ECD753E0 = v1;
  return result;
}

uint64_t sub_185573DB0()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1865074F8();
  qword_1ECD74B50 = result;
  *(_QWORD *)algn_1ECD74B58 = v1;
  return result;
}

uint64_t sub_185573DDC()
{
  return sub_185219C3C(&qword_1ECD74910, (unint64_t *)&qword_1ECD74900);
}

uint64_t sub_185573E08()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1865074F8();
  qword_1ECD753C0 = result;
  *(_QWORD *)algn_1ECD753C8 = v1;
  return result;
}

uint64_t sub_185573E34()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1865074F8();
  qword_1ECD753A8 = result;
  unk_1ECD753B0 = v1;
  return result;
}

uint64_t sub_185573E60()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1865074F8();
  qword_1ECD75388 = result;
  *(_QWORD *)algn_1ECD75390 = v1;
  return result;
}

uint64_t sub_185573E8C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1865074F8();
  qword_1ECD74B30 = result;
  unk_1ECD74B38 = v1;
  return result;
}

uint64_t sub_185573EB8()
{
  return sub_185219C3C((unint64_t *)&unk_1EDD82B40, &qword_1EDD82B38);
}

uint64_t sub_185573EE4()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1865074F8();
  qword_1ECD74B10 = result;
  unk_1ECD74B18 = v1;
  return result;
}

uint64_t sub_185573F10()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1865074F8();
  qword_1ECD75370 = result;
  *(_QWORD *)algn_1ECD75378 = v1;
  return result;
}

ValueMetadata *type metadata accessor for AttributeScopes.UIKitAttributes.TextItemTagAttribute()
{
  return &type metadata for AttributeScopes.UIKitAttributes.TextItemTagAttribute;
}

uint64_t sub_185573F4C(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1ECD74B08, &qword_1ECD74AF8);
}

uint64_t sub_185573F6C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1865074F8();
  qword_1ECD74AF8 = result;
  unk_1ECD74B00 = v1;
  return result;
}

ValueMetadata *type metadata accessor for AttributeScopes.UIKitAttributes.StrokeWidthAttribute()
{
  return &type metadata for AttributeScopes.UIKitAttributes.StrokeWidthAttribute;
}

uint64_t sub_185573FA8(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1ECD74AF0, &qword_1ECD74AE0);
}

uint64_t sub_185573FC8()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1865074F8();
  qword_1ECD74AE0 = result;
  *(_QWORD *)algn_1ECD74AE8 = v1;
  return result;
}

ValueMetadata *type metadata accessor for AttributeScopes.UIKitAttributes.StrokeColorAttribute()
{
  return &type metadata for AttributeScopes.UIKitAttributes.StrokeColorAttribute;
}

uint64_t sub_185574004(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1ECD74AD8, &qword_1ECD74AC0);
}

uint64_t sub_185574024()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1865074F8();
  qword_1ECD74AC0 = result;
  unk_1ECD74AC8 = v1;
  return result;
}

ValueMetadata *type metadata accessor for AttributeScopes.UIKitAttributes.ObliquenessAttribute()
{
  return &type metadata for AttributeScopes.UIKitAttributes.ObliquenessAttribute;
}

uint64_t sub_185574060(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1ECD74AB8, &qword_1ECD74AA8);
}

uint64_t sub_185574080()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1865074F8();
  qword_1ECD74AA8 = result;
  unk_1ECD74AB0 = v1;
  return result;
}

ValueMetadata *type metadata accessor for AttributeScopes.UIKitAttributes.TextEffectAttribute()
{
  return &type metadata for AttributeScopes.UIKitAttributes.TextEffectAttribute;
}

uint64_t sub_1855740BC(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1ECD74AA0, &qword_1ECD74A88);
}

uint64_t sub_1855740DC()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1865074F8();
  qword_1ECD74A88 = result;
  *(_QWORD *)algn_1ECD74A90 = v1;
  return result;
}

ValueMetadata *type metadata accessor for AttributeScopes.UIKitAttributes.AttachmentAttribute()
{
  return &type metadata for AttributeScopes.UIKitAttributes.AttachmentAttribute;
}

uint64_t sub_185574118(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, qword_1ECD74C38, &qword_1ECD74C20);
}

uint64_t sub_185574138()
{
  return sub_185219C3C(&qword_1EDD81FA8, &qword_1EDD81F50);
}

uint64_t sub_185574164()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1865074F8();
  qword_1ECD74C20 = result;
  unk_1ECD74C28 = v1;
  return result;
}

void sub_185574BF8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_185574DE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1855755C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a17, 8);
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_185575AAC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_185575C38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185576EC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a24);
  _Unwind_Resume(a1);
}

void sub_18557B08C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_18557D13C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_18557E024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185584A84(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_185584E30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{

  _Unwind_Resume(a1);
}

void sub_185585850(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_185585FE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1855861B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_18558723C(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x200], 8);
  _Unwind_Resume(a1);
}

uint64_t sub_185587348()
{
  return 0;
}

uint64_t static UITraitDefinition.identifier.getter()
{
  return 0;
}

uint64_t sub_185587360()
{
  return static UITraitDefinition.name.getter();
}

uint64_t sub_185587378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char v9;
  __int128 v11[2];
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v6 + 16))((char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD813C8);
  if (swift_dynamicCast())
  {
    sub_1851E59E0(v11, (uint64_t)v13);
    v7 = v14;
    v8 = __swift_project_boxed_opaque_existential_0Tm(v13, v14);
    v9 = sub_185587470((uint64_t)v8, a2, a3, v7);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
  }
  else
  {
    v12 = 0;
    memset(v11, 0, sizeof(v11));
    sub_18519F088((uint64_t)v11, &qword_1EDD849A0);
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_185587470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a4 - 8);
  result = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) == v7)
  {
    (*(void (**)(char *))(v5 + 16))(v8);
    v10 = sub_1865074C8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a4);
    return v10 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_185587524()
{
  uint64_t result;

  result = sub_1865067FC();
  qword_1EDD83278 = result;
  return result;
}

uint64_t sub_185587540(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_185249BF0(v2, 0, 0, a1, a2);
}

id sub_185587558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  void *v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  void *v13;
  void *v14;
  char v15;
  char v16;
  id v17;
  uint64_t v19;
  uint64_t aBlock[3];
  void *AssociatedTypeWitness;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  _BYTE v25[24];
  uint64_t v26;
  _BYTE v27[32];

  (*(void (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  v6 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  v7 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  v8 = *(void (**)(uint64_t, uint64_t))(a4 + 16);
  AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_0(aBlock);
  v8(a3, a4);
  sub_1850F69D4((uint64_t)aBlock, (uint64_t)v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  swift_dynamicCast();
  sub_1850F26F8((uint64_t)v27, (uint64_t)v25, &qword_1ECD75B20);
  v9 = v26;
  sub_18519F088((uint64_t)v25, &qword_1ECD75B20);
  if (v9)
    v10 = sub_186507FB4();
  else
    v10 = 0;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)aBlock);
  v11 = sub_1855877BC(a3, a4);
  if (v11)
  {
    v23 = v11;
    v24 = v12;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1855878D4;
    AssociatedTypeWitness = &block_descriptor_171;
    v13 = _Block_copy(aBlock);
    swift_release();
  }
  else
  {
    v13 = 0;
  }
  v14 = (void *)objc_opt_self();
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
  LOBYTE(v19) = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 56))(a3, a4) & 1;
  v17 = objc_msgSend(v14, sel__defineObjectTraitWithName_identifier_defaultValue_equalityHandler_affectsColorAppearance_defaultValueRepresentsUnspecified_isPrivate_placeholderToken_, v6, v7, v10, v13, v15 & 1, v16 & 1, v19, a1);
  _Block_release(v13);

  swift_unknownObjectRelease();
  return v17;
}

uint64_t (*sub_1855877BC(uint64_t a1, uint64_t a2))(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  _QWORD *v10;
  _BYTE v13[40];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = &v13[-v7 - 8];
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82FC0);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
    v9 = 0;
  }
  else
  {
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = a1;
    v10[3] = a2;
    v10[4] = v2;
    v9 = sub_18559C6A8;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  return v9;
}

uint64_t sub_1855878D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(__int128 *, __int128 *);
  char v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v5 = *(uint64_t (**)(__int128 *, __int128 *))(a1 + 32);
  if (!a2)
  {
    v10 = 0u;
    v11 = 0u;
    if (a3)
      goto LABEL_3;
LABEL_5:
    v8 = 0u;
    v9 = 0u;
    goto LABEL_6;
  }
  *((_QWORD *)&v11 + 1) = swift_getObjectType();
  *(_QWORD *)&v10 = a2;
  if (!a3)
    goto LABEL_5;
LABEL_3:
  *((_QWORD *)&v9 + 1) = swift_getObjectType();
  *(_QWORD *)&v8 = a3;
LABEL_6:
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v6 = v5(&v10, &v8);
  swift_release();
  sub_18519F088((uint64_t)&v8, &qword_1ECD75B20);
  sub_18519F088((uint64_t)&v10, &qword_1ECD75B20);
  return v6 & 1;
}

id sub_18558799C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  void *v8;
  void *v9;
  double v10;
  char v11;
  char v12;
  id v13;
  double v15;

  v7 = (void *)objc_opt_self();
  (*(void (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  v8 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  v9 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  (*(void (**)(double *__return_ptr, uint64_t, uint64_t))(a4 + 16))(&v15, a3, a4);
  v10 = v15;
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
  v13 = objc_msgSend(v7, sel__defineCGFloatTraitWithName_identifier_defaultValue_affectsColorAppearance_defaultValueRepresentsUnspecified_isPrivate_placeholderToken_, v8, v9, v11 & 1, v12 & 1, (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 56))(a3, a4) & 1, a1, v10);

  return v13;
}

id sub_185587AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  void *v8;
  void *v9;
  double v10;
  char v11;
  char v12;
  id v13;
  double v15;
  char v16;

  v7 = (void *)objc_opt_self();
  (*(void (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  v8 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  v9 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  (*(void (**)(double *__return_ptr, uint64_t, uint64_t))(a4 + 16))(&v15, a3, a4);
  if (v16)
    v10 = 1.79769313e308;
  else
    v10 = v15;
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
  v13 = objc_msgSend(v7, sel__defineCGFloatTraitWithName_identifier_defaultValue_affectsColorAppearance_defaultValueRepresentsUnspecified_isPrivate_placeholderToken_, v8, v9, v11 & 1, v12 & 1, (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 56))(a3, a4) & 1, a1, v10);

  return v13;
}

id sub_185587C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  char v11;
  char v12;
  id v13;
  uint64_t v15;

  v7 = (void *)objc_opt_self();
  (*(void (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  v8 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  v9 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 16))(&v15, a3, a4);
  v10 = v15;
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
  v13 = objc_msgSend(v7, sel__defineNSIntegerTraitWithName_identifier_defaultValue_affectsColorAppearance_defaultValueRepresentsUnspecified_isPrivate_placeholderToken_, v8, v9, v10, v11 & 1, v12 & 1, (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 56))(a3, a4) & 1, a1);

  return v13;
}

id sub_185587D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  void *v8;
  void *v9;
  uint64_t *v10;
  uint64_t v11;
  char v12;
  char v13;
  id v14;
  uint64_t v16;
  char v17;

  v7 = (void *)objc_opt_self();
  (*(void (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  v8 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  v9 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  v10 = &v16;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 16))(&v16, a3, a4);
  if (v17 == 1)
  {
    if (qword_1EDD83270 != -1)
      swift_once();
    v10 = &qword_1EDD83278;
  }
  v11 = *v10;
  v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
  v14 = objc_msgSend(v7, sel__defineNSIntegerTraitWithName_identifier_defaultValue_affectsColorAppearance_defaultValueRepresentsUnspecified_isPrivate_placeholderToken_, v8, v9, v11, v12 & 1, v13 & 1, (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 56))(a3, a4) & 1, a1);

  return v14;
}

id sub_185587EF0(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v14;
  uint64_t aBlock;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];
  uint64_t v22;
  _QWORD v23[4];

  if (qword_1ECD75698 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  if (qword_1ECD75650 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  if (qword_1ECD75678 != -1)
    swift_once();
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD75628);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_1ECD75660);
  v18 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75348);
  aBlock = _s5UIKit26UITraitTypesettingLanguageV15_customRawValue3forSSSg10Foundation6LocaleV0D0VSg_tFZ_0(v5);
  v16 = v6;
  sub_1850F69D4((uint64_t)&aBlock, (uint64_t)v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  swift_dynamicCast();
  sub_1850F26F8((uint64_t)v23, (uint64_t)v21, &qword_1ECD75B20);
  v7 = v22;
  sub_18519F088((uint64_t)v21, &qword_1ECD75B20);
  if (v7)
  {
    v23[0] = aBlock;
    v23[1] = v16;
    swift_bridgeObjectRetain();
    v8 = sub_186508050();
  }
  else
  {
    v8 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
  v9 = sub_18519EB9C();
  if (v9)
  {
    v19 = v9;
    v20 = v10;
    aBlock = MEMORY[0x1E0C809B0];
    v16 = 1107296256;
    v17 = sub_1855878D4;
    v18 = &block_descriptor_105;
    v11 = _Block_copy(&aBlock);
    swift_release();
  }
  else
  {
    v11 = 0;
  }
  LOBYTE(v14) = 0;
  v12 = objc_msgSend((id)objc_opt_self(), sel__defineObjectTraitWithName_identifier_defaultValue_equalityHandler_affectsColorAppearance_defaultValueRepresentsUnspecified_isPrivate_placeholderToken_, v2, v3, v8, v11, 0, 1, v14, a1);
  _Block_release(v11);

  swift_unknownObjectRelease();
  return v12;
}

id sub_185588170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  void *v16;
  void *v17;
  char v18;
  char v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t aBlock[3];
  void *v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  _BYTE v33[24];
  uint64_t v34;
  _BYTE v35[32];

  v28 = a1;
  v6 = *(_QWORD *)(a4 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)&v25 - v9;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(a3, v6);
  v27 = sub_1865074D4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(a3, v6);
  v26 = sub_1865074D4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a3, v6);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(a4 + 24);
  v30 = (void *)swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_0(aBlock);
  v11(v10, a3, a4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  sub_1850F69D4((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  swift_dynamicCast();
  sub_1850F26F8((uint64_t)v35, (uint64_t)v33, &qword_1ECD75B20);
  v12 = v34;
  sub_18519F088((uint64_t)v33, &qword_1ECD75B20);
  if (v12)
    v13 = sub_186507FB4();
  else
    v13 = 0;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)aBlock);
  v14 = sub_185588454(a3, a4);
  if (v14)
  {
    v31 = v14;
    v32 = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1855878D4;
    v30 = &block_descriptor_141;
    v16 = _Block_copy(aBlock);
    swift_release();
  }
  else
  {
    v16 = 0;
  }
  v17 = (void *)objc_opt_self();
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 40))(a3, v6);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 48))(a3, v6);
  LOBYTE(v24) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 56))(a3, v6) & 1;
  v21 = (void *)v26;
  v20 = (void *)v27;
  v22 = objc_msgSend(v17, sel__defineObjectTraitWithName_identifier_defaultValue_equalityHandler_affectsColorAppearance_defaultValueRepresentsUnspecified_isPrivate_placeholderToken_, v27, v26, v13, v16, v18 & 1, v19 & 1, v24, v28);
  _Block_release(v16);

  swift_unknownObjectRelease();
  return v22;
}

uint64_t (*sub_185588454(uint64_t a1, uint64_t a2))(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  _QWORD *v15;
  _BYTE v18[40];

  v5 = *(_QWORD *)(a2 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = &v18[-v8 - 8];
  v10 = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v18[-v12 - 8];
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a1, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(a2 + 24))(v9, a1, a2);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82FC0);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v18);
    v14 = 0;
  }
  else
  {
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = a1;
    v15[3] = a2;
    v15[4] = v2;
    v14 = sub_18559C5B8;
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v14;
}

uint64_t sub_1855885F0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(uint64_t, char *, uint64_t);
  char *v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[32];
  _BYTE v39[24];
  uint64_t v40;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_186507AA4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v34 - v11;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v36 = AssociatedTypeWitness;
  v37 = v13;
  v14 = MEMORY[0x1E0C80A78](v10);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v34 - v17;
  v19 = a1;
  v20 = *(_QWORD *)(a1 + 24);
  sub_18519F0C4(a2, (uint64_t)v39, &qword_1ECD75B20);
  v21 = v20 | v40;
  sub_18519F088((uint64_t)v39, &qword_1ECD75B20);
  if (v21)
  {
    v34 = v16;
    v35 = v9;
    v23 = v18;
    sub_18519F0C4(v19, (uint64_t)v38, &qword_1ECD75B20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
    v24 = v36;
    v25 = swift_dynamicCast();
    v26 = v37;
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
    if ((v25 & 1) != 0)
    {
      v27(v12, 0, 1, v24);
      v28 = (uint64_t)v23;
      v29 = *(void (**)(uint64_t, char *, uint64_t))(v26 + 32);
      v29(v28, v12, v24);
      sub_18519F0C4(a2, (uint64_t)v38, &qword_1ECD75B20);
      v30 = v35;
      if ((swift_dynamicCast() & 1) != 0)
      {
        v27(v30, 0, 1, v24);
        v31 = (uint64_t)v34;
        v29((uint64_t)v34, v30, v24);
        v22 = sub_185587378(v28, v31, v24);
        v32 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
        v32(v31, v24);
        v32(v28, v24);
        return v22 & 1;
      }
      v27(v30, 1, 1, v24);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v28, v24);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v30, v5);
    }
    else
    {
      v27(v12, 1, 1, v24);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
    }
    v22 = 0;
    return v22 & 1;
  }
  v22 = 1;
  return v22 & 1;
}

id sub_18558889C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;
  id v15;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a4;
  v19 = a1;
  v6 = *(_QWORD *)(a4 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)&v17 - v9;
  v18 = (id)objc_opt_self();
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(a3, v6);
  v11 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(a3, v6);
  v12 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a3, v6);
  (*(void (**)(uint64_t *__return_ptr, char *, uint64_t, uint64_t))(v4 + 24))(&v20, v10, a3, v4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  v13 = v20;
  LOBYTE(v4) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 40))(a3, v6);
  LOBYTE(AssociatedTypeWitness) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 48))(a3, v6);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 56))(a3, v6);
  v15 = objc_msgSend(v18, sel__defineNSIntegerTraitWithName_identifier_defaultValue_affectsColorAppearance_defaultValueRepresentsUnspecified_isPrivate_placeholderToken_, v11, v12, v13, v4 & 1, AssociatedTypeWitness & 1, v14 & 1, v19);

  return v15;
}

id sub_185588A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  void *v16;
  void *v17;
  char v18;
  char v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t aBlock[3];
  void *v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  _BYTE v33[24];
  uint64_t v34;
  _BYTE v35[32];

  v28 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v11 = (char *)&v25 - v10;
  (*(void (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  v27 = sub_1865074D4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  v26 = sub_1865074D4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  v30 = (void *)swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_0(aBlock);
  sub_186507618();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
  sub_1850F69D4((uint64_t)aBlock, (uint64_t)v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  swift_dynamicCast();
  sub_1850F26F8((uint64_t)v35, (uint64_t)v33, &qword_1ECD75B20);
  v12 = v34;
  sub_18519F088((uint64_t)v33, &qword_1ECD75B20);
  if (v12)
    v13 = sub_186507FB4();
  else
    v13 = 0;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)aBlock);
  v14 = sub_185588D44(a3, a4, a5);
  if (v14)
  {
    v31 = v14;
    v32 = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1855878D4;
    v30 = &block_descriptor_123;
    v16 = _Block_copy(aBlock);
    swift_release();
  }
  else
  {
    v16 = 0;
  }
  v17 = (void *)objc_opt_self();
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
  LOBYTE(v24) = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 56))(a3, a4) & 1;
  v21 = (void *)v26;
  v20 = (void *)v27;
  v22 = objc_msgSend(v17, sel__defineObjectTraitWithName_identifier_defaultValue_equalityHandler_affectsColorAppearance_defaultValueRepresentsUnspecified_isPrivate_placeholderToken_, v27, v26, v13, v16, v18 & 1, v19 & 1, v24, v28);
  _Block_release(v16);

  swift_unknownObjectRelease();
  return v22;
}

uint64_t (*sub_185588D44(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t (*v16)(uint64_t, uint64_t);
  _QWORD *v17;
  uint64_t v18;
  uint64_t v20;
  _BYTE v21[40];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = &v21[-v9 - 8];
  v11 = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v21[-v13 - 8];
  v15 = *(void (**)(uint64_t, uint64_t))(a2 + 16);
  v20 = v3;
  v15(a1, a2);
  sub_186507618();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82FC0);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v21);
    v16 = 0;
  }
  else
  {
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = a1;
    v17[3] = a2;
    v18 = v20;
    v17[4] = a3;
    v17[5] = v18;
    v16 = sub_18559C528;
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v16;
}

uint64_t sub_185588EE0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  void (*v27)(uint64_t, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[32];
  _BYTE v39[24];
  uint64_t v40;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_186507AA4();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v35 = (char *)&v32 - v11;
  v36 = AssociatedTypeWitness;
  v37 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v32 - v15;
  v17 = a1;
  v18 = *(_QWORD *)(a1 + 24);
  sub_18519F0C4(a2, (uint64_t)v39, &qword_1ECD75B20);
  v19 = v18 | v40;
  sub_18519F088((uint64_t)v39, &qword_1ECD75B20);
  if (v19)
  {
    v32 = v14;
    v33 = a2;
    v21 = (uint64_t)v16;
    v34 = v9;
    sub_18519F0C4(v17, (uint64_t)v38, &qword_1ECD75B20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
    v23 = v35;
    v22 = v36;
    v24 = swift_dynamicCast();
    v25 = v37;
    v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
    if ((v24 & 1) != 0)
    {
      v26(v23, 0, 1, v22);
      v27 = *(void (**)(uint64_t, char *, uint64_t))(v25 + 32);
      v28 = v21;
      v27(v21, v23, v22);
      sub_18519F0C4(v33, (uint64_t)v38, &qword_1ECD75B20);
      v23 = v34;
      if ((swift_dynamicCast() & 1) != 0)
      {
        v26(v23, 0, 1, v22);
        v29 = (uint64_t)v32;
        v27((uint64_t)v32, v23, v22);
        v20 = sub_185587378(v21, v29, v22);
        v30 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
        v30(v29, v22);
        v30(v28, v22);
        return v20 & 1;
      }
      v26(v23, 1, 1, v22);
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v21, v22);
    }
    else
    {
      v26(v23, 1, 1, v22);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v23, v5);
    v20 = 0;
    return v20 & 1;
  }
  v20 = 1;
  return v20 & 1;
}

id sub_1855891BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  double v12;
  char v13;
  char v14;
  id v15;
  uint64_t v17;
  id v18;
  uint64_t v19;
  double v20;

  v19 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = (char *)&v17 - v8;
  v18 = (id)objc_opt_self();
  (*(void (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  v10 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  v11 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  sub_186507618();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  v12 = v20;
  LOBYTE(v9) = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 56))(a3, a4);
  v15 = objc_msgSend(v18, sel__defineCGFloatTraitWithName_identifier_defaultValue_affectsColorAppearance_defaultValueRepresentsUnspecified_isPrivate_placeholderToken_, v10, v11, v9 & 1, v13 & 1, v14 & 1, v19, v12);

  return v15;
}

id sub_185589380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  char v13;
  char v14;
  id v15;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  v19 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = (char *)&v17 - v8;
  v18 = (id)objc_opt_self();
  (*(void (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  v10 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  v11 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  sub_186507618();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  v12 = v20;
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  LOBYTE(AssociatedTypeWitness) = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 56))(a3, a4);
  v15 = objc_msgSend(v18, sel__defineNSIntegerTraitWithName_identifier_defaultValue_affectsColorAppearance_defaultValueRepresentsUnspecified_isPrivate_placeholderToken_, v10, v11, v12, v13 & 1, AssociatedTypeWitness & 1, v14 & 1, v19);

  return v15;
}

uint64_t sub_185589544()
{
  uint64_t v0;

  MEMORY[0x186DCA030](*(_QWORD *)(v0 + 16), -1, -1);
  return swift_deallocClassInstance();
}

uint64_t sub_185589570()
{
  sub_1865080EC();
  sub_1865080F8();
  return sub_186508134();
}

uint64_t sub_1855895B4()
{
  return sub_1865080F8();
}

uint64_t sub_1855895DC()
{
  sub_1865080EC();
  sub_1865080F8();
  return sub_186508134();
}

BOOL sub_18558961C(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_185589630()
{
  void **v0;
  void *v1;

  v1 = *v0;
  sub_1865080EC();
  objc_msgSend(v1, sel_hash);
  sub_1865080F8();
  return sub_186508134();
}

uint64_t sub_185589680()
{
  id *v0;

  objc_msgSend(*v0, sel_hash);
  return sub_1865080F8();
}

uint64_t sub_1855896B4()
{
  void **v0;
  void *v1;

  v1 = *v0;
  sub_1865080EC();
  objc_msgSend(v1, sel_hash);
  sub_1865080F8();
  return sub_186508134();
}

id sub_185589700(id *a1, _QWORD *a2)
{
  return objc_msgSend(*a1, sel_isEqual_, *a2);
}

uint64_t UITraitCollection.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void *v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  int v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  _OWORD v17[2];
  _BYTE v18[32];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_186507AA4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v17 - v10;
  v12 = objc_msgSend(v3, sel__objectForTraitToken_, sub_185247F14(a1, a2, (uint64_t)&unk_1E16A2758, (uint64_t (*)(uint64_t))sub_18559C68C));
  swift_unknownObjectRelease();
  if (v12)
  {
    sub_186507B1C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v17, 0, sizeof(v17));
  }
  sub_1850F26F8((uint64_t)v17, (uint64_t)v18, &qword_1ECD75B20);
  sub_18519F0C4((uint64_t)v18, (uint64_t)v17, &qword_1ECD75B20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  v13 = swift_dynamicCast();
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (v13)
  {
    v15(v11, 0, 1, AssociatedTypeWitness);
    sub_18519F088((uint64_t)v18, &qword_1ECD75B20);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a3, v11, AssociatedTypeWitness);
  }
  else
  {
    v15(v11, 1, 1, AssociatedTypeWitness);
    (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
    sub_18519F088((uint64_t)v18, &qword_1ECD75B20);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  char v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t AssociatedTypeWitness;
  uint64_t v31;
  uint64_t v32;
  _OWORD v33[2];
  _BYTE v34[32];

  v31 = *(_QWORD *)(a2 + 8);
  v32 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = sub_186507AA4();
  v26 = *(_QWORD *)(v6 - 8);
  v27 = v6;
  MEMORY[0x1E0C80A78](v6);
  v29 = (char *)&v25 - v7;
  v8 = swift_getAssociatedTypeWitness();
  v28 = sub_186507AA4();
  v9 = *(_QWORD *)(v28 - 8);
  v10 = MEMORY[0x1E0C80A78](v28);
  v12 = (char *)&v25 - v11;
  v13 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v25 - v14;
  v16 = objc_msgSend(v3, sel__objectForTraitToken_, sub_1852480D0(a1, a2, (uint64_t)&unk_1E16A25F0, (uint64_t (*)(uint64_t))sub_18559C59C));
  swift_unknownObjectRelease();
  if (v16)
  {
    sub_186507B1C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v33, 0, sizeof(v33));
  }
  sub_1850F26F8((uint64_t)v33, (uint64_t)v34, &qword_1ECD75B20);
  sub_18519F0C4((uint64_t)v34, (uint64_t)v33, &qword_1ECD75B20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  v17 = swift_dynamicCast();
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if ((v17 & 1) == 0)
  {
    v18(v12, 1, 1, v8);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v28);
    goto LABEL_8;
  }
  v18(v12, 0, 1, v8);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v12, v8);
  v19 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(a2 + 32))(v15, a1, a2);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v8);
  v20 = AssociatedTypeWitness;
  v21 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, AssociatedTypeWitness);
  v23 = v32;
  if (v22 == 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v27);
LABEL_8:
    (*(void (**)(uint64_t))(v31 + 16))(a1);
    return sub_18519F088((uint64_t)v34, &qword_1ECD75B20);
  }
  sub_18519F088((uint64_t)v34, &qword_1ECD75B20);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(v23, v19, v20);
}

{
  void *v3;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v16 = a3;
  v6 = *(_QWORD *)(a2 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_186507AA4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v16 - v10;
  objc_msgSend(v3, sel__valueForCGFloatTraitToken_, sub_1852480D0(a1, a2, (uint64_t)&unk_1E16A25C8, (uint64_t (*)(uint64_t))sub_185571908));
  v13 = v12;
  swift_unknownObjectRelease();
  v17 = v13;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(a2 + 32))(&v17, a1, a2);
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, AssociatedTypeWitness) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v16, v11, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a1, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

{
  void *v3;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v16 = a3;
  v6 = *(_QWORD *)(a2 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_186507AA4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v16 - v10;
  objc_msgSend(v3, sel__valueForCGFloatTraitToken_, sub_1852480D0(a1, a2, (uint64_t)&unk_1E16A25A0, (uint64_t (*)(uint64_t))sub_185571908));
  v13 = v12;
  swift_unknownObjectRelease();
  v17 = v13;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(a2 + 32))(&v17, a1, a2);
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, AssociatedTypeWitness) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v16, v11, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a1, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

{
  void *v3;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v15;
  id v16;

  v15 = a3;
  v6 = *(_QWORD *)(a2 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_186507AA4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v15 - v10;
  v12 = objc_msgSend(v3, sel__valueForNSIntegerTraitToken_, sub_1852480D0(a1, a2, (uint64_t)&unk_1E16A2578, (uint64_t (*)(uint64_t))sub_18559C560));
  swift_unknownObjectRelease();
  v16 = v12;
  (*(void (**)(id *, uint64_t, uint64_t))(a2 + 32))(&v16, a1, a2);
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, AssociatedTypeWitness) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(v15, v11, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a1, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

double UITraitCollection.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_185589950(a1, a2, a3, (uint64_t)&unk_1E16A2730, (uint64_t (*)(uint64_t))sub_18559C634);
}

{
  return sub_185589950(a1, a2, a3, (uint64_t)&unk_1E16A26E0, (uint64_t (*)(uint64_t))sub_18559C634);
}

uint64_t UITraitCollection.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1855899C8(a1, a2, a3, (uint64_t)&unk_1E16A2708, (uint64_t (*)(uint64_t))sub_18559C650);
}

{
  return sub_1855899C8(a1, a2, a3, (uint64_t)&unk_1E16A26B8, (uint64_t (*)(uint64_t))sub_18559D274);
}

double sub_185589950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  void *v5;
  double v6;
  double v7;

  objc_msgSend(v5, sel__valueForCGFloatTraitToken_, sub_185247F14(a2, a3, a4, a5));
  v7 = v6;
  swift_unknownObjectRelease();
  return v7;
}

uint64_t sub_1855899C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  void *v5;
  double v6;
  double v7;

  objc_msgSend(v5, sel__valueForCGFloatTraitToken_, sub_185247F14(a2, a3, a4, a5));
  v7 = v6;
  swift_unknownObjectRelease();
  if (v7 == 1.79769313e308)
    return 0;
  else
    return *(_QWORD *)&v7;
}

id UITraitCollection.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v4;

  v4 = objc_msgSend(v3, sel__valueForNSIntegerTraitToken_, sub_185247F14(a2, a3, (uint64_t)&unk_1E16A2690, (uint64_t (*)(uint64_t))sub_18559C608));
  swift_unknownObjectRelease();
  return v4;
}

{
  void *v3;
  id v4;

  v4 = objc_msgSend(v3, sel__valueForNSIntegerTraitToken_, sub_185247F14(a2, a3, (uint64_t)&unk_1E16A2668, (uint64_t (*)(uint64_t))sub_18559C5EC));
  swift_unknownObjectRelease();
  if (qword_1EDD83270 != -1)
    swift_once();
  if ((id)qword_1EDD83278 == v4)
    return 0;
  else
    return v4;
}

uint64_t UITraitCollection.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  void *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  int v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD v24[2];
  _BYTE v25[32];

  v23 = a4;
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_186507AA4();
  v21 = *(_QWORD *)(v9 - 8);
  v22 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v20 - v11;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v20 - v14;
  v16 = objc_msgSend(v4, sel__objectForTraitToken_, sub_185249B74(a1, a2, a3, (uint64_t)&unk_1E16A2528, (uint64_t (*)(uint64_t))sub_18559C50C));
  swift_unknownObjectRelease();
  if (v16)
  {
    sub_186507B1C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v24, 0, sizeof(v24));
  }
  sub_1850F26F8((uint64_t)v24, (uint64_t)v25, &qword_1ECD75B20);
  sub_18519F0C4((uint64_t)v25, (uint64_t)v24, &qword_1ECD75B20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  v17 = swift_dynamicCast();
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v17)
  {
    v18(v12, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v12, AssociatedTypeWitness);
    sub_18524A124((uint64_t)v15, a1, a2, v23);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, AssociatedTypeWitness);
  }
  else
  {
    v18(v12, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v22);
    (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  }
  return sub_18519F088((uint64_t)v25, &qword_1ECD75B20);
}

{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  objc_msgSend(v4, sel__valueForCGFloatTraitToken_, sub_185249B74(a1, a2, a3, (uint64_t)&unk_1E16A2500, (uint64_t (*)(uint64_t))sub_18559C4E0));
  v9 = v8;
  swift_unknownObjectRelease();
  v11 = v9;
  return sub_18524A124((uint64_t)&v11, a1, a2, a4);
}

{
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  objc_msgSend(v4, sel__valueForCGFloatTraitToken_, sub_185249B74(a1, a2, a3, (uint64_t)&unk_1E16A24D8, (uint64_t (*)(uint64_t))sub_18559C4E0));
  v9 = v8;
  swift_unknownObjectRelease();
  v11 = v9;
  return sub_18524A124((uint64_t)&v11, a1, a2, a4);
}

{
  void *v4;
  id v8;
  id v10;

  v8 = objc_msgSend(v4, sel__valueForNSIntegerTraitToken_, sub_185249B74(a1, a2, a3, (uint64_t)&unk_1E16A24B0, (uint64_t (*)(uint64_t))sub_18559C4C4));
  swift_unknownObjectRelease();
  v10 = v8;
  return sub_18524A124((uint64_t)&v10, a1, a2, a4);
}

id UITraitCollection.replacing<A>(_:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD v13[4];
  _BYTE v14[32];
  uint64_t v15[4];

  v5 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15[3] = AssociatedTypeWitness;
  __swift_allocate_boxed_opaque_existential_0(v15);
  (*(void (**)(void))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))();
  sub_1850F69D4((uint64_t)v15, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  swift_dynamicCast();
  sub_1850F26F8((uint64_t)v14, (uint64_t)v13, &qword_1ECD75B20);
  v9 = v13[3];
  sub_18519F088((uint64_t)v13, &qword_1ECD75B20);
  if (v9)
    v10 = sub_186507FB4();
  else
    v10 = 0;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
  v11 = objc_msgSend(v5, sel__traitCollectionByReplacingObject_forTraitToken_, v10, sub_185247F14(a3, a4, (uint64_t)&unk_1E16A2758, (uint64_t (*)(uint64_t))sub_18559C68C));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v11;
}

{
  void *v4;
  id v5;

  v5 = objc_msgSend(v4, sel__traitCollectionByReplacingNSIntegerValue_forTraitToken_, a2, sub_185247F14(a3, a4, (uint64_t)&unk_1E16A2690, (uint64_t (*)(uint64_t))sub_18559C608));
  swift_unknownObjectRelease();
  return v5;
}

{
  void *v4;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD v13[4];
  _BYTE v14[32];
  uint64_t v15[4];

  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 24);
  v15[3] = swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_0(v15);
  v8(a2, a3, a4);
  sub_1850F69D4((uint64_t)v15, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  swift_dynamicCast();
  sub_1850F26F8((uint64_t)v14, (uint64_t)v13, &qword_1ECD75B20);
  v9 = v13[3];
  sub_18519F088((uint64_t)v13, &qword_1ECD75B20);
  if (v9)
    v10 = sub_186507FB4();
  else
    v10 = 0;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
  v11 = objc_msgSend(v4, sel__traitCollectionByReplacingObject_forTraitToken_, v10, sub_1852480D0(a3, a4, (uint64_t)&unk_1E16A25F0, (uint64_t (*)(uint64_t))sub_18559C59C));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v11;
}

{
  void *v4;
  id v7;
  double v9;

  (*(void (**)(double *__return_ptr, uint64_t, uint64_t, uint64_t))(a4 + 24))(&v9, a2, a3, a4);
  v7 = objc_msgSend(v4, sel__traitCollectionByReplacingCGFloatValue_forTraitToken_, sub_1852480D0(a3, a4, (uint64_t)&unk_1E16A25C8, (uint64_t (*)(uint64_t))sub_185571908), v9);
  swift_unknownObjectRelease();
  return v7;
}

{
  void *v4;
  id v7;
  double v9;

  (*(void (**)(double *__return_ptr, uint64_t, uint64_t, uint64_t))(a4 + 24))(&v9, a2, a3, a4);
  v7 = objc_msgSend(v4, sel__traitCollectionByReplacingCGFloatValue_forTraitToken_, sub_1852480D0(a3, a4, (uint64_t)&unk_1E16A25A0, (uint64_t (*)(uint64_t))sub_185571908), v9);
  swift_unknownObjectRelease();
  return v7;
}

{
  void *v4;
  id v7;
  uint64_t v9;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(a4 + 24))(&v9, a2, a3, a4);
  v7 = objc_msgSend(v4, sel__traitCollectionByReplacingNSIntegerValue_forTraitToken_, v9, sub_1852480D0(a3, a4, (uint64_t)&unk_1E16A2578, (uint64_t (*)(uint64_t))sub_18559C560));
  swift_unknownObjectRelease();
  return v7;
}

id UITraitCollection.replacing<A>(_:value:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  return sub_18558A898(a4, a1, a2, a3, (uint64_t)&unk_1E16A2730, (uint64_t (*)(uint64_t))sub_18559C634);
}

{
  return sub_18558A898(a4, a1, a2, a3, (uint64_t)&unk_1E16A26E0, (uint64_t (*)(uint64_t))sub_18559C634);
}

id UITraitCollection.replacing<A>(_:value:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return sub_18558A920(a1, a2, a3, a4, a5, (uint64_t)&unk_1E16A2708, (uint64_t (*)(uint64_t))sub_18559C650);
}

{
  return sub_18558A920(a1, a2, a3, a4, a5, (uint64_t)&unk_1E16A26B8, (uint64_t (*)(uint64_t))sub_18559D274);
}

{
  void *v5;
  void *v6;
  id v10;

  v6 = v5;
  if ((a3 & 1) != 0)
  {
    if (qword_1EDD83270 != -1)
      swift_once();
    a2 = qword_1EDD83278;
  }
  v10 = objc_msgSend(v6, sel__traitCollectionByReplacingNSIntegerValue_forTraitToken_, a2, sub_185247F14(a4, a5, (uint64_t)&unk_1E16A2668, (uint64_t (*)(uint64_t))sub_18559C5EC));
  swift_unknownObjectRelease();
  return v10;
}

id sub_18558A898(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  void *v6;
  id v7;

  v7 = objc_msgSend(v6, sel__traitCollectionByReplacingCGFloatValue_forTraitToken_, sub_185247F14(a3, a4, a5, a6), a1);
  swift_unknownObjectRelease();
  return v7;
}

id sub_18558A920(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  void *v7;
  id v9;

  if ((a3 & 1) != 0)
    *(double *)&a2 = 1.79769313e308;
  v9 = objc_msgSend(v7, sel__traitCollectionByReplacingCGFloatValue_forTraitToken_, sub_185247F14(a4, a5, a6, a7), *(double *)&a2);
  swift_unknownObjectRelease();
  return v9;
}

id UITraitCollection.replacing<A>(_:value:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  id v5;

  v5 = objc_msgSend(v4, sel__traitCollectionByReplacingNSIntegerValue_forTraitToken_, a2 & 1, sub_185247F14(a3, a4, (uint64_t)&unk_1E16A2640, (uint64_t (*)(uint64_t))sub_185573190));
  swift_unknownObjectRelease();
  return v5;
}

id UITraitCollection.replacing<A>(_:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD v13[4];
  _BYTE v14[32];
  uint64_t v15[4];

  swift_getAssociatedTypeWitness();
  v15[3] = swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_0(v15);
  swift_getAssociatedTypeWitness();
  sub_186507618();
  sub_1850F69D4((uint64_t)v15, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  swift_dynamicCast();
  sub_1850F26F8((uint64_t)v14, (uint64_t)v13, &qword_1ECD75B20);
  v9 = v13[3];
  sub_18519F088((uint64_t)v13, &qword_1ECD75B20);
  if (v9)
    v10 = sub_186507FB4();
  else
    v10 = 0;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
  v11 = objc_msgSend(v5, sel__traitCollectionByReplacingObject_forTraitToken_, v10, sub_185249B74(a3, a4, a5, (uint64_t)&unk_1E16A2528, (uint64_t (*)(uint64_t))sub_18559C50C));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v11;
}

{
  void *v5;
  id v9;
  double v11;

  swift_getAssociatedTypeWitness();
  sub_186507618();
  v9 = objc_msgSend(v5, sel__traitCollectionByReplacingCGFloatValue_forTraitToken_, sub_185249B74(a3, a4, a5, (uint64_t)&unk_1E16A2500, (uint64_t (*)(uint64_t))sub_18559C4E0), v11);
  swift_unknownObjectRelease();
  return v9;
}

{
  void *v5;
  id v9;
  double v11;

  swift_getAssociatedTypeWitness();
  sub_186507618();
  v9 = objc_msgSend(v5, sel__traitCollectionByReplacingCGFloatValue_forTraitToken_, sub_185249B74(a3, a4, a5, (uint64_t)&unk_1E16A24D8, (uint64_t (*)(uint64_t))sub_18559C4E0), v11);
  swift_unknownObjectRelease();
  return v9;
}

{
  void *v5;
  id v9;
  uint64_t v11;

  swift_getAssociatedTypeWitness();
  sub_186507618();
  v9 = objc_msgSend(v5, sel__traitCollectionByReplacingNSIntegerValue_forTraitToken_, v11, sub_185249B74(a3, a4, a5, (uint64_t)&unk_1E16A24B0, (uint64_t (*)(uint64_t))sub_18559C4C4));
  swift_unknownObjectRelease();
  return v9;
}

id UITraitCollection._removing(_:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  v3 = objc_msgSend(v2, sel__traitCollectionByRemovingTraitToken_, sub_185249BF0(a1, 0, 0, a1, a2));
  swift_unknownObjectRelease();
  return v3;
}

void __swiftcall UITraitCollection.filtering(_:)(UITraitCollection *__return_ptr retstr, Swift::OpaquePointer a2)
{
  void *v2;
  uint64_t v3;
  uint64_t *v5;
  void *v6;

  v3 = *((_QWORD *)a2._rawValue + 2);
  if (v3)
  {
    sub_186507CFC();
    v5 = (uint64_t *)((char *)a2._rawValue + 40);
    do
    {
      sub_185249BF0(*(v5 - 1), 0, 0, *(v5 - 1), *v5);
      sub_186507CD8();
      sub_186507D08();
      sub_186507D14();
      sub_186507CE4();
      v5 += 2;
      --v3;
    }
    while (v3);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74BC0);
  v6 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, sel__traitCollectionByFilteringTraitTokens_, v6);

}

id UITraitCollection.init<A>(_:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *ObjCClassFromMetadata;
  id v12;
  _QWORD v14[4];
  _BYTE v15[32];
  uint64_t v16[4];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16[3] = AssociatedTypeWitness;
  __swift_allocate_boxed_opaque_existential_0(v16);
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(void))(v8 + 16))();
  sub_1850F69D4((uint64_t)v16, (uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  swift_dynamicCast();
  sub_1850F26F8((uint64_t)v15, (uint64_t)v14, &qword_1ECD75B20);
  v9 = v14[3];
  sub_18519F088((uint64_t)v14, &qword_1ECD75B20);
  if (v9)
    v10 = sub_186507FB4();
  else
    v10 = 0;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v16);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v12 = objc_msgSend(ObjCClassFromMetadata, sel__traitCollectionWithObject_forTraitToken_, v10, sub_185247F14(a3, a4, (uint64_t)&unk_1E16A2758, (uint64_t (*)(uint64_t))sub_18559C68C));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, AssociatedTypeWitness);
  return v12;
}

{
  void *ObjCClassFromMetadata;
  id v8;

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v8 = objc_msgSend(ObjCClassFromMetadata, sel__traitCollectionWithNSIntegerValue_forTraitToken_, a2, sub_185247F14(a3, a4, (uint64_t)&unk_1E16A2690, (uint64_t (*)(uint64_t))sub_18559C608));
  swift_unknownObjectRelease();
  return v8;
}

{
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *ObjCClassFromMetadata;
  id v11;
  uint64_t AssociatedTypeWitness;
  _QWORD v14[4];
  _BYTE v15[32];
  uint64_t v16[4];

  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 24);
  v16[3] = swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_0(v16);
  v7(a2, a3, a4);
  sub_1850F69D4((uint64_t)v16, (uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  swift_dynamicCast();
  sub_1850F26F8((uint64_t)v15, (uint64_t)v14, &qword_1ECD75B20);
  v8 = v14[3];
  sub_18519F088((uint64_t)v14, &qword_1ECD75B20);
  if (v8)
    v9 = sub_186507FB4();
  else
    v9 = 0;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v16);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v11 = objc_msgSend(ObjCClassFromMetadata, sel__traitCollectionWithObject_forTraitToken_, v9, sub_1852480D0(a3, a4, (uint64_t)&unk_1E16A25F0, (uint64_t (*)(uint64_t))sub_18559C59C));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a2, AssociatedTypeWitness);
  return v11;
}

{
  double v7;
  void *ObjCClassFromMetadata;
  id v9;
  uint64_t AssociatedTypeWitness;
  double v12;

  (*(void (**)(double *__return_ptr, uint64_t, uint64_t, uint64_t))(a4 + 24))(&v12, a2, a3, a4);
  v7 = v12;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v9 = objc_msgSend(ObjCClassFromMetadata, sel__traitCollectionWithCGFloatValue_forTraitToken_, sub_1852480D0(a3, a4, (uint64_t)&unk_1E16A25C8, (uint64_t (*)(uint64_t))sub_185571908), v7);
  swift_unknownObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a2, AssociatedTypeWitness);
  return v9;
}

{
  double v7;
  void *ObjCClassFromMetadata;
  id v9;
  uint64_t AssociatedTypeWitness;
  double v12;

  (*(void (**)(double *__return_ptr, uint64_t, uint64_t, uint64_t))(a4 + 24))(&v12, a2, a3, a4);
  v7 = v12;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v9 = objc_msgSend(ObjCClassFromMetadata, sel__traitCollectionWithCGFloatValue_forTraitToken_, sub_1852480D0(a3, a4, (uint64_t)&unk_1E16A25A0, (uint64_t (*)(uint64_t))sub_185571908), v7);
  swift_unknownObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a2, AssociatedTypeWitness);
  return v9;
}

{
  uint64_t v7;
  void *ObjCClassFromMetadata;
  id v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(a4 + 24))(&v12, a2, a3, a4);
  v7 = v12;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v9 = objc_msgSend(ObjCClassFromMetadata, sel__traitCollectionWithNSIntegerValue_forTraitToken_, v7, sub_1852480D0(a3, a4, (uint64_t)&unk_1E16A2578, (uint64_t (*)(uint64_t))sub_18559C560));
  swift_unknownObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a2, AssociatedTypeWitness);
  return v9;
}

id UITraitCollection.init<A>(_:value:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  return sub_18558B630(a4, a1, a2, a3, (uint64_t)&unk_1E16A2730, (uint64_t (*)(uint64_t))sub_18559C634);
}

{
  return sub_18558B630(a4, a1, a2, a3, (uint64_t)&unk_1E16A26E0, (uint64_t (*)(uint64_t))sub_18559C634);
}

id UITraitCollection.init<A>(_:value:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return sub_18558B6EC(a1, a2, a3, a4, a5, (uint64_t)&unk_1E16A2708, (uint64_t (*)(uint64_t))sub_18559C650);
}

{
  return sub_18558B6EC(a1, a2, a3, a4, a5, (uint64_t)&unk_1E16A26B8, (uint64_t (*)(uint64_t))sub_18559D274);
}

{
  void *ObjCClassFromMetadata;
  id v9;

  if ((a3 & 1) != 0)
  {
    if (qword_1EDD83270 != -1)
      swift_once();
    a2 = qword_1EDD83278;
  }
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v9 = objc_msgSend(ObjCClassFromMetadata, sel__traitCollectionWithNSIntegerValue_forTraitToken_, a2, sub_185247F14(a4, a5, (uint64_t)&unk_1E16A2668, (uint64_t (*)(uint64_t))sub_18559C5EC));
  swift_unknownObjectRelease();
  return v9;
}

id sub_18558B630(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  void *ObjCClassFromMetadata;
  id v12;

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v12 = objc_msgSend(ObjCClassFromMetadata, sel__traitCollectionWithCGFloatValue_forTraitToken_, sub_185247F14(a3, a4, a5, a6), a1);
  swift_unknownObjectRelease();
  return v12;
}

id sub_18558B6EC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  void *ObjCClassFromMetadata;
  id v13;

  if ((a3 & 1) != 0)
    *(double *)&a2 = 1.79769313e308;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v13 = objc_msgSend(ObjCClassFromMetadata, sel__traitCollectionWithCGFloatValue_forTraitToken_, sub_185247F14(a4, a5, a6, a7), *(double *)&a2);
  swift_unknownObjectRelease();
  return v13;
}

id UITraitCollection.init<A>(_:value:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void *ObjCClassFromMetadata;
  id v8;

  v6 = a2 & 1;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v8 = objc_msgSend(ObjCClassFromMetadata, sel__traitCollectionWithNSIntegerValue_forTraitToken_, v6, sub_185247F14(a3, a4, (uint64_t)&unk_1E16A2640, (uint64_t (*)(uint64_t))sub_185573190));
  swift_unknownObjectRelease();
  return v8;
}

id sub_18558B9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_t *v8;
  id v9;
  void *ObjCClassFromMetadata;
  id v11;
  _BYTE v13[24];
  uint64_t v14;
  _QWORD v15[4];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75348);
  v16 = _s5UIKit26UITraitTypesettingLanguageV15_customRawValue3forSSSg10Foundation6LocaleV0D0VSg_tFZ_0(a2);
  v17 = v4;
  sub_1850F69D4((uint64_t)&v16, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  swift_dynamicCast();
  sub_1850F26F8((uint64_t)v15, (uint64_t)v13, &qword_1ECD75B20);
  v5 = v14;
  sub_18519F088((uint64_t)v13, &qword_1ECD75B20);
  if (v5)
  {
    v15[0] = v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
    v6 = sub_186508050();
  }
  else
  {
    v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v16);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  if (qword_1ECD759C0 != -1)
    swift_once();
  if (qword_1ECD75A10 != -1)
    swift_once();
  v8 = (os_unfair_lock_t *)off_1ECD75A08;
  os_unfair_lock_lock(*((os_unfair_lock_t *)off_1ECD75A08 + 2));
  v9 = sub_1856CAA94(a1, (uint64_t (*)(uint64_t))sub_18559C4AC, v7, a1);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  os_unfair_lock_unlock(v8[2]);
  swift_release();
  v11 = objc_msgSend(ObjCClassFromMetadata, sel__traitCollectionWithObject_forTraitToken_, v6, v9);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_18519F088(a2, (uint64_t *)&unk_1ECD75628);
  return v11;
}

id UITraitCollection.init<A>(_:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  void *ObjCClassFromMetadata;
  id v12;
  uint64_t v13;
  _BYTE v15[24];
  uint64_t v16;
  _BYTE v17[32];
  uint64_t v18[4];

  swift_getAssociatedTypeWitness();
  v18[3] = swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_0(v18);
  swift_getAssociatedTypeWitness();
  sub_186507618();
  sub_1850F69D4((uint64_t)v18, (uint64_t)v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  swift_dynamicCast();
  sub_1850F26F8((uint64_t)v17, (uint64_t)v15, &qword_1ECD75B20);
  v9 = v16;
  sub_18519F088((uint64_t)v15, &qword_1ECD75B20);
  if (v9)
    v10 = sub_186507FB4();
  else
    v10 = 0;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v18);
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v12 = objc_msgSend(ObjCClassFromMetadata, sel__traitCollectionWithObject_forTraitToken_, v10, sub_185249B74(a3, a4, a5, (uint64_t)&unk_1E16A2528, (uint64_t (*)(uint64_t))sub_18559C50C));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v13 = swift_checkMetadataState();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
  return v12;
}

{
  void *ObjCClassFromMetadata;
  id v10;
  uint64_t AssociatedTypeWitness;
  double v13;

  swift_getAssociatedTypeWitness();
  sub_186507618();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v10 = objc_msgSend(ObjCClassFromMetadata, sel__traitCollectionWithCGFloatValue_forTraitToken_, sub_185249B74(a3, a4, a5, (uint64_t)&unk_1E16A2500, (uint64_t (*)(uint64_t))sub_18559C4E0), v13);
  swift_unknownObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a2, AssociatedTypeWitness);
  return v10;
}

{
  void *ObjCClassFromMetadata;
  id v10;
  uint64_t AssociatedTypeWitness;
  double v13;

  swift_getAssociatedTypeWitness();
  sub_186507618();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v10 = objc_msgSend(ObjCClassFromMetadata, sel__traitCollectionWithCGFloatValue_forTraitToken_, sub_185249B74(a3, a4, a5, (uint64_t)&unk_1E16A24D8, (uint64_t (*)(uint64_t))sub_18559C4E0), v13);
  swift_unknownObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a2, AssociatedTypeWitness);
  return v10;
}

{
  void *ObjCClassFromMetadata;
  id v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;

  swift_getAssociatedTypeWitness();
  sub_186507618();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v10 = objc_msgSend(ObjCClassFromMetadata, sel__traitCollectionWithNSIntegerValue_forTraitToken_, v13, sub_185249B74(a3, a4, a5, (uint64_t)&unk_1E16A24B0, (uint64_t (*)(uint64_t))sub_18559C4C4));
  swift_unknownObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a2, AssociatedTypeWitness);
  return v10;
}

uint64_t sub_18558C550@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  int v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  _OWORD v18[2];
  _BYTE v19[32];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_186507AA4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v18 - v11;
  v13 = objc_msgSend(a1, sel__objectForTraitToken_, sub_185247F14(a2, a3, (uint64_t)&unk_1E16A2758, (uint64_t (*)(uint64_t))sub_18559C68C));
  swift_unknownObjectRelease();
  if (v13)
  {
    sub_186507B1C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v18, 0, sizeof(v18));
  }
  sub_1850F26F8((uint64_t)v18, (uint64_t)v19, &qword_1ECD75B20);
  sub_18519F0C4((uint64_t)v19, (uint64_t)v18, &qword_1ECD75B20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  v14 = swift_dynamicCast();
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  if (v14)
  {
    v16(v12, 0, 1, AssociatedTypeWitness);
    sub_18519F088((uint64_t)v19, &qword_1ECD75B20);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a4, v12, AssociatedTypeWitness);
  }
  else
  {
    v16(v12, 1, 1, AssociatedTypeWitness);
    (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
    sub_18519F088((uint64_t)v19, &qword_1ECD75B20);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_18558C740(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  double v6;
  double v7;

  objc_msgSend(a2, sel__valueForCGFloatTraitToken_, sub_185247F14(a3, a4, a5, a6));
  v7 = v6;
  swift_unknownObjectRelease();
  if (v7 == 1.79769313e308)
    return 0;
  else
    return *(_QWORD *)&v7;
}

uint64_t sub_18558C7B8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  id *v7;

  if ((a2 & 1) != 0)
    *(double *)&a1 = 1.79769313e308;
  objc_msgSend(*v7, sel__setCGFloatValue_forTraitToken_, sub_185247F14(a4, a5, a6, a7), *(double *)&a1);
  return swift_unknownObjectRelease();
}

id sub_18558C828(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v4;

  v4 = objc_msgSend(a2, sel__valueForNSIntegerTraitToken_, sub_185247F14(a3, a4, (uint64_t)&unk_1E16A2690, (uint64_t (*)(uint64_t))sub_18559C608));
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_18558C894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id *v4;

  objc_msgSend(*v4, sel__setNSIntegerValue_forTraitToken_, a1, sub_185247F14(a3, a4, (uint64_t)&unk_1E16A2690, (uint64_t (*)(uint64_t))sub_18559C608));
  return swift_unknownObjectRelease();
}

id sub_18558C908(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v4;

  v4 = objc_msgSend(a2, sel__valueForNSIntegerTraitToken_, sub_185247F14(a3, a4, (uint64_t)&unk_1E16A2668, (uint64_t (*)(uint64_t))sub_18559C5EC));
  swift_unknownObjectRelease();
  if (qword_1EDD83270 != -1)
    swift_once();
  if ((id)qword_1EDD83278 == v4)
    return 0;
  else
    return v4;
}

uint64_t sub_18558C9AC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id *v5;

  if ((a2 & 1) != 0)
  {
    if (qword_1EDD83270 != -1)
      swift_once();
    a1 = qword_1EDD83278;
  }
  objc_msgSend(*v5, sel__setNSIntegerValue_forTraitToken_, a1, sub_185247F14(a4, a5, (uint64_t)&unk_1E16A2668, (uint64_t (*)(uint64_t))sub_18559C5EC));
  return swift_unknownObjectRelease();
}

BOOL sub_18558CA5C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v4;

  v4 = objc_msgSend(a2, sel__valueForNSIntegerTraitToken_, sub_185247F14(a3, a4, (uint64_t)&unk_1E16A2640, (uint64_t (*)(uint64_t))sub_185573190));
  swift_unknownObjectRelease();
  return v4 != 0;
}

uint64_t sub_18558CACC(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id *v4;

  objc_msgSend(*v4, sel__setNSIntegerValue_forTraitToken_, a1 & 1, sub_185247F14(a3, a4, (uint64_t)&unk_1E16A2640, (uint64_t (*)(uint64_t))sub_185573190));
  return swift_unknownObjectRelease();
}

uint64_t sub_18558CB40@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  char v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t AssociatedTypeWitness;
  uint64_t v32;
  uint64_t v33;
  _OWORD v34[2];
  _BYTE v35[32];

  v32 = *(_QWORD *)(a3 + 8);
  v33 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = sub_186507AA4();
  v27 = *(_QWORD *)(v7 - 8);
  v28 = v7;
  MEMORY[0x1E0C80A78](v7);
  v30 = (char *)&v26 - v8;
  v9 = swift_getAssociatedTypeWitness();
  v29 = sub_186507AA4();
  v10 = *(_QWORD *)(v29 - 8);
  v11 = MEMORY[0x1E0C80A78](v29);
  v13 = (char *)&v26 - v12;
  v14 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v26 - v15;
  v17 = objc_msgSend(a1, sel__objectForTraitToken_, sub_1852480D0(a2, a3, (uint64_t)&unk_1E16A25F0, (uint64_t (*)(uint64_t))sub_18559C59C));
  swift_unknownObjectRelease();
  if (v17)
  {
    sub_186507B1C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v34, 0, sizeof(v34));
  }
  sub_1850F26F8((uint64_t)v34, (uint64_t)v35, &qword_1ECD75B20);
  sub_18519F0C4((uint64_t)v35, (uint64_t)v34, &qword_1ECD75B20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  v18 = swift_dynamicCast();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if ((v18 & 1) == 0)
  {
    v19(v13, 1, 1, v9);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v29);
    goto LABEL_8;
  }
  v19(v13, 0, 1, v9);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, v9);
  v20 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(a3 + 32))(v16, a2, a3);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v9);
  v21 = AssociatedTypeWitness;
  v22 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, AssociatedTypeWitness);
  v24 = v33;
  if (v23 == 1)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v20, v28);
LABEL_8:
    (*(void (**)(uint64_t))(v32 + 16))(a2);
    return sub_18519F088((uint64_t)v35, &qword_1ECD75B20);
  }
  sub_18519F088((uint64_t)v35, &qword_1ECD75B20);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(v24, v20, v21);
}

uint64_t sub_18558CE34@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v17 = a4;
  v7 = *(_QWORD *)(a3 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_186507AA4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v17 - v11;
  objc_msgSend(a1, sel__valueForCGFloatTraitToken_, sub_1852480D0(a2, a3, (uint64_t)&unk_1E16A25C8, (uint64_t (*)(uint64_t))sub_185571908));
  v14 = v13;
  swift_unknownObjectRelease();
  v18 = v14;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(a3 + 32))(&v18, a2, a3);
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, AssociatedTypeWitness) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(v17, v12, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(a2, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_18558CFA4@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v17 = a4;
  v7 = *(_QWORD *)(a3 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_186507AA4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v17 - v11;
  objc_msgSend(a1, sel__valueForCGFloatTraitToken_, sub_1852480D0(a2, a3, (uint64_t)&unk_1E16A25A0, (uint64_t (*)(uint64_t))sub_185571908));
  v14 = v13;
  swift_unknownObjectRelease();
  v18 = v14;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(a3 + 32))(&v18, a2, a3);
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, AssociatedTypeWitness) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(v17, v12, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(a2, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_18558D114@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v16;
  id v17;

  v16 = a4;
  v7 = *(_QWORD *)(a3 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_186507AA4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v16 - v11;
  v13 = objc_msgSend(a1, sel__valueForNSIntegerTraitToken_, sub_1852480D0(a2, a3, (uint64_t)&unk_1E16A2578, (uint64_t (*)(uint64_t))sub_18559C560));
  swift_unknownObjectRelease();
  v17 = v13;
  (*(void (**)(id *, uint64_t, uint64_t))(a3 + 32))(&v17, a2, a3);
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, AssociatedTypeWitness) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v16, v12, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(a2, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_18558D27C@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  objc_msgSend(a1, sel__valueForCGFloatTraitToken_, sub_185249B74(a2, a3, a4, (uint64_t)&unk_1E16A2500, (uint64_t (*)(uint64_t))sub_18559C4E0));
  v9 = v8;
  swift_unknownObjectRelease();
  v11 = v9;
  return sub_18524A124((uint64_t)&v11, a2, a3, a5);
}

uint64_t sub_18558D334@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  objc_msgSend(a1, sel__valueForCGFloatTraitToken_, sub_185249B74(a2, a3, a4, (uint64_t)&unk_1E16A24D8, (uint64_t (*)(uint64_t))sub_18559C4E0));
  v9 = v8;
  swift_unknownObjectRelease();
  v11 = v9;
  return sub_18524A124((uint64_t)&v11, a2, a3, a5);
}

uint64_t sub_18558D3EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void **v3;

  return sub_18558C550(*v3, a1, a2, a3);
}

uint64_t sub_18558D3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_185590DAC(a1, a2, a3, a4, a5, a6, (void (*)(void))sub_185599DF8);
}

void (*sub_18558D408(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2)
{
  void **v4;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  size_t v12;
  void *v13;

  v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *v9 = a2;
  v9[1] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[4] = AssociatedTypeWitness;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[5] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[6] = malloc(v12);
  v13 = malloc(v12);
  v9[7] = v13;
  sub_18558C550(*v4, a3, a4, (uint64_t)v13);
  return sub_18558D4C8;
}

void sub_18558D4C8(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v2 = *a1;
  v3 = (void *)(*a1)[6];
  v4 = (void *)(*a1)[7];
  v5 = (*a1)[4];
  v6 = (*a1)[5];
  v7 = (*a1)[2];
  v9 = **a1;
  v8 = (*a1)[1];
  if ((a2 & 1) != 0)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[6], v4, v5);
    sub_185599DF8((uint64_t)v3, v9, v8, v7);
    v10 = *(void (**)(void *, uint64_t))(v6 + 8);
    v10(v3, v5);
  }
  else
  {
    sub_185599DF8((*a1)[7], v9, v8, v7);
    v10 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v10(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

void (*sub_18558D58C(double **a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t *a1, uint64_t a2)
{
  void **v4;
  double *v9;

  v9 = (double *)malloc(0x28uLL);
  *a1 = v9;
  *((_QWORD *)v9 + 3) = a4;
  *((_QWORD *)v9 + 4) = v4;
  *((_QWORD *)v9 + 1) = a2;
  *((_QWORD *)v9 + 2) = a3;
  *v9 = sub_185247EB0(a2, *v4, a3, a4, (uint64_t)&unk_1E16A2730, (uint64_t (*)(uint64_t))sub_18559C634);
  return sub_18558D610;
}

void sub_18558D610(uint64_t *a1, uint64_t a2)
{
  sub_18558D80C(a1, a2, (uint64_t)&unk_1E16A2730, (uint64_t (*)(uint64_t))sub_18559C634);
}

uint64_t sub_18558D624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;

  return sub_18558C740(a1, *v3, a2, a3, (uint64_t)&unk_1E16A2708, (uint64_t (*)(uint64_t))sub_18559C650);
}

uint64_t sub_18558D658(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18558C7B8(a1, a2 & 1, a3, a4, a5, (uint64_t)&unk_1E16A2708, (uint64_t (*)(uint64_t))sub_18559C650);
}

void (*sub_18558D680(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, uint64_t a2)
{
  void **v4;
  _QWORD *v9;
  char v10;

  v9 = malloc(0x30uLL);
  *a1 = v9;
  v9[4] = a4;
  v9[5] = v4;
  v9[2] = a2;
  v9[3] = a3;
  *v9 = sub_18558C740(a2, *v4, a3, a4, (uint64_t)&unk_1E16A2708, (uint64_t (*)(uint64_t))sub_18559C650);
  *((_BYTE *)v9 + 8) = v10 & 1;
  return sub_18558D70C;
}

void sub_18558D70C(uint64_t **a1, uint64_t a2)
{
  sub_18558D940(a1, a2, (uint64_t)&unk_1E16A2708, (uint64_t (*)(uint64_t))sub_18559C650);
}

double sub_18558D720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;

  return sub_185247EB0(a1, *v3, a2, a3, (uint64_t)&unk_1E16A26E0, (uint64_t (*)(uint64_t))sub_18559C634);
}

uint64_t sub_18558D750(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  return sub_185571264(a4, a1, a2, a3, (uint64_t)&unk_1E16A26E0, (uint64_t (*)(uint64_t))sub_18559C634);
}

void (*sub_18558D774(double **a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t *a1, uint64_t a2)
{
  void **v4;
  double *v9;

  v9 = (double *)malloc(0x28uLL);
  *a1 = v9;
  *((_QWORD *)v9 + 3) = a4;
  *((_QWORD *)v9 + 4) = v4;
  *((_QWORD *)v9 + 1) = a2;
  *((_QWORD *)v9 + 2) = a3;
  *v9 = sub_185247EB0(a2, *v4, a3, a4, (uint64_t)&unk_1E16A26E0, (uint64_t (*)(uint64_t))sub_18559C634);
  return sub_18558D7F8;
}

void sub_18558D7F8(uint64_t *a1, uint64_t a2)
{
  sub_18558D80C(a1, a2, (uint64_t)&unk_1E16A26E0, (uint64_t (*)(uint64_t))sub_18559C634);
}

void sub_18558D80C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;

  v4 = *a1;
  sub_185571264(*(double *)v4, *(_QWORD *)(*a1 + 8), *(_QWORD *)(v4 + 16), *(_QWORD *)(*a1 + 24), a3, a4);
  free((void *)v4);
}

uint64_t sub_18558D844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;

  return sub_18558C740(a1, *v3, a2, a3, (uint64_t)&unk_1E16A26B8, (uint64_t (*)(uint64_t))sub_18559D274);
}

uint64_t sub_18558D878(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18558C7B8(a1, a2 & 1, a3, a4, a5, (uint64_t)&unk_1E16A26B8, (uint64_t (*)(uint64_t))sub_18559D274);
}

void (*sub_18558D8A0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, uint64_t a2)
{
  void **v4;
  _QWORD *v9;
  char v10;

  v9 = malloc(0x30uLL);
  *a1 = v9;
  v9[4] = a4;
  v9[5] = v4;
  v9[2] = a2;
  v9[3] = a3;
  *v9 = sub_18558C740(a2, *v4, a3, a4, (uint64_t)&unk_1E16A26B8, (uint64_t (*)(uint64_t))sub_18559D274);
  *((_BYTE *)v9 + 8) = v10 & 1;
  return sub_18558D92C;
}

void sub_18558D92C(uint64_t **a1, uint64_t a2)
{
  sub_18558D940(a1, a2, (uint64_t)&unk_1E16A26B8, (uint64_t (*)(uint64_t))sub_18559D274);
}

void sub_18558D940(uint64_t **a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t *v4;

  v4 = *a1;
  sub_18558C7B8(**a1, *((_BYTE *)*a1 + 8), (*a1)[2], (*a1)[3], (*a1)[4], a3, a4);
  free(v4);
}

id sub_18558D97C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;

  return sub_18558C828(a1, *v3, a2, a3);
}

void (*sub_18558D990(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1)
{
  void **v4;
  _QWORD *v9;

  v9 = malloc(0x28uLL);
  *a1 = v9;
  v9[3] = a4;
  v9[4] = v4;
  v9[1] = a2;
  v9[2] = a3;
  *v9 = sub_18558C828(a2, *v4, a3, a4);
  return sub_18558DA04;
}

void sub_18558DA04(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_18558C894(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

id sub_18558DA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;

  return sub_18558C908(a1, *v3, a2, a3);
}

uint64_t sub_18558DA58(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18558C9AC(a1, a2 & 1, a3, a4, a5);
}

void (*sub_18558DA60(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1)
{
  void **v4;
  _QWORD *v9;
  char v10;

  v9 = malloc(0x30uLL);
  *a1 = v9;
  v9[4] = a4;
  v9[5] = v4;
  v9[2] = a2;
  v9[3] = a3;
  *v9 = sub_18558C908(a2, *v4, a3, a4);
  *((_BYTE *)v9 + 8) = v10 & 1;
  return sub_18558DADC;
}

void sub_18558DADC(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_18558C9AC(**a1, *((_BYTE *)*a1 + 8), (*a1)[2], (*a1)[3], (*a1)[4]);
  free(v1);
}

BOOL sub_18558DB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;

  return sub_18558CA5C(a1, *v3, a2, a3);
}

void (*sub_18558DB24(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1)
{
  void **v4;
  _QWORD *v9;

  v9 = malloc(0x28uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *v9 = a2;
  v9[1] = a3;
  *((_BYTE *)v9 + 32) = sub_18558CA5C(a2, *v4, a3, a4);
  return sub_18558DB9C;
}

void sub_18558DB9C(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_18558CACC(*((_BYTE *)*a1 + 32), **a1, (*a1)[1], (*a1)[2]);
  free(v1);
}

uint64_t sub_18558DBCC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void **v3;

  return sub_18558CB40(*v3, a1, a2, a3);
}

uint64_t sub_18558DBDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_185247B08(a1, a2, a3, a4, a5, a6, (void (*)(void))sub_185599F54);
}

void (*sub_18558DBE8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2)
{
  void **v4;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  size_t v12;
  void *v13;

  v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *v9 = a2;
  v9[1] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[4] = AssociatedTypeWitness;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[5] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[6] = malloc(v12);
  v13 = malloc(v12);
  v9[7] = v13;
  sub_18558CB40(*v4, a3, a4, (uint64_t)v13);
  return sub_18558DCA8;
}

void sub_18558DCA8(uint64_t **a1, char a2)
{
  sub_18558DF6C(a1, a2, (void (*)(void *, uint64_t, uint64_t, uint64_t))sub_185599F54);
}

uint64_t sub_18558DCB4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void **v3;

  return sub_18558CE34(*v3, a1, a2, a3);
}

uint64_t sub_18558DCC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_185247B08(a1, a2, a3, a4, a5, a6, (void (*)(void))sub_18559A0B4);
}

void (*sub_18558DCD0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2)
{
  void **v4;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  size_t v12;
  void *v13;

  v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *v9 = a2;
  v9[1] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[4] = AssociatedTypeWitness;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[5] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[6] = malloc(v12);
  v13 = malloc(v12);
  v9[7] = v13;
  sub_18558CE34(*v4, a3, a4, (uint64_t)v13);
  return sub_18558DD90;
}

void sub_18558DD90(uint64_t **a1, char a2)
{
  sub_18558DF6C(a1, a2, (void (*)(void *, uint64_t, uint64_t, uint64_t))sub_18559A0B4);
}

uint64_t sub_18558DD9C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void **v3;

  return sub_18558CFA4(*v3, a1, a2, a3);
}

uint64_t sub_18558DDAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_185247B08(a1, a2, a3, a4, a5, a6, (void (*)(void))sub_18559A150);
}

void (*sub_18558DDB8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2)
{
  void **v4;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  size_t v12;
  void *v13;

  v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *v9 = a2;
  v9[1] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[4] = AssociatedTypeWitness;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[5] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[6] = malloc(v12);
  v13 = malloc(v12);
  v9[7] = v13;
  sub_18558CFA4(*v4, a3, a4, (uint64_t)v13);
  return sub_18558DE78;
}

void sub_18558DE78(uint64_t **a1, char a2)
{
  sub_18558DF6C(a1, a2, (void (*)(void *, uint64_t, uint64_t, uint64_t))sub_18559A150);
}

uint64_t sub_18558DE84@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void **v3;

  return sub_18558D114(*v3, a1, a2, a3);
}

uint64_t sub_18558DE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_185247B08(a1, a2, a3, a4, a5, a6, (void (*)(void))sub_18559A1EC);
}

void (*sub_18558DEA0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2)
{
  void **v4;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  size_t v12;
  void *v13;

  v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *v9 = a2;
  v9[1] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[4] = AssociatedTypeWitness;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[5] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[6] = malloc(v12);
  v13 = malloc(v12);
  v9[7] = v13;
  sub_18558D114(*v4, a3, a4, (uint64_t)v13);
  return sub_18558DF60;
}

void sub_18558DF60(uint64_t **a1, char a2)
{
  sub_18558DF6C(a1, a2, (void (*)(void *, uint64_t, uint64_t, uint64_t))sub_18559A1EC);
}

void sub_18558DF6C(uint64_t **a1, char a2, void (*a3)(void *, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, uint64_t);

  v4 = *a1;
  v5 = (void *)(*a1)[6];
  v6 = (void *)(*a1)[7];
  v7 = (*a1)[4];
  v8 = (*a1)[5];
  v9 = (*a1)[2];
  v11 = **a1;
  v10 = (*a1)[1];
  if ((a2 & 1) != 0)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v8 + 16))((*a1)[6], v6, v7);
    a3(v5, v11, v10, v9);
    v12 = *(void (**)(void *, uint64_t))(v8 + 8);
    v12(v5, v7);
  }
  else
  {
    a3((void *)(*a1)[7], v11, v10, v9);
    v12 = *(void (**)(void *, uint64_t))(v8 + 8);
  }
  v12(v6, v7);
  free(v6);
  free(v5);
  free(v4);
}

void (*sub_18558E034(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t **a1, char a2)
{
  void **v5;
  _QWORD *v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  size_t v14;
  void *v15;

  v11 = malloc(0x48uLL);
  *a1 = v11;
  v11[3] = a5;
  v11[4] = v5;
  v11[1] = a3;
  v11[2] = a4;
  *v11 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11[5] = AssociatedTypeWitness;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11[6] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v11[7] = malloc(v14);
  v15 = malloc(v14);
  v11[8] = v15;
  sub_18519F184(*v5, a3, a4, a5, (uint64_t)v15);
  return sub_18558E108;
}

void sub_18558E108(uint64_t **a1, char a2)
{
  sub_18558E3F4(a1, a2, (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855710BC);
}

uint64_t sub_18558E114@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  void **v4;

  return sub_18558D27C(*v4, a1, a2, a3, a4);
}

uint64_t sub_18558E128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_18517D3B4(a1, a2, a3, a4, a5, a6, a7, (void (*)(void))sub_18559A288);
}

void (*sub_18558E134(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t **a1, char a2)
{
  void **v5;
  _QWORD *v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  size_t v14;
  void *v15;

  v11 = malloc(0x48uLL);
  *a1 = v11;
  v11[3] = a5;
  v11[4] = v5;
  v11[1] = a3;
  v11[2] = a4;
  *v11 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11[5] = AssociatedTypeWitness;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11[6] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v11[7] = malloc(v14);
  v15 = malloc(v14);
  v11[8] = v15;
  sub_18558D27C(*v5, a3, a4, a5, (uint64_t)v15);
  return sub_18558E208;
}

void sub_18558E208(uint64_t **a1, char a2)
{
  sub_18558E3F4(a1, a2, (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_18559A288);
}

uint64_t sub_18558E214@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  void **v4;

  return sub_18558D334(*v4, a1, a2, a3, a4);
}

uint64_t sub_18558E228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_18517D3B4(a1, a2, a3, a4, a5, a6, a7, (void (*)(void))sub_18559A350);
}

void (*sub_18558E234(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t **a1, char a2)
{
  void **v5;
  _QWORD *v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  size_t v14;
  void *v15;

  v11 = malloc(0x48uLL);
  *a1 = v11;
  v11[3] = a5;
  v11[4] = v5;
  v11[1] = a3;
  v11[2] = a4;
  *v11 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11[5] = AssociatedTypeWitness;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11[6] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v11[7] = malloc(v14);
  v15 = malloc(v14);
  v11[8] = v15;
  sub_18558D334(*v5, a3, a4, a5, (uint64_t)v15);
  return sub_18558E308;
}

void sub_18558E308(uint64_t **a1, char a2)
{
  sub_18558E3F4(a1, a2, (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_18559A350);
}

void (*sub_18558E314(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t **a1, char a2)
{
  void **v5;
  _QWORD *v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  size_t v14;
  void *v15;

  v11 = malloc(0x48uLL);
  *a1 = v11;
  v11[3] = a5;
  v11[4] = v5;
  v11[1] = a3;
  v11[2] = a4;
  *v11 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11[5] = AssociatedTypeWitness;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11[6] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v11[7] = malloc(v14);
  v15 = malloc(v14);
  v11[8] = v15;
  sub_185249AC4(*v5, a3, a4, a5, (uint64_t)v15);
  return sub_18558E3E8;
}

void sub_18558E3E8(uint64_t **a1, char a2)
{
  sub_18558E3F4(a1, a2, (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_18517D414);
}

void sub_18558E3F4(uint64_t **a1, char a2, void (*a3)(void *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(void *, uint64_t);

  v3 = *a1;
  v4 = (void *)(*a1)[7];
  v5 = (void *)(*a1)[8];
  v6 = (*a1)[5];
  v7 = (*a1)[6];
  v8 = (*a1)[3];
  v10 = (*a1)[1];
  v9 = (*a1)[2];
  v11 = **a1;
  if ((a2 & 1) != 0)
  {
    (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v4, v5, v6);
    a3(v4, v11, v10, v9, v8);
    v12 = *(void (**)(void *, uint64_t))(v7 + 8);
    v12(v4, v6);
  }
  else
  {
    a3((void *)(*a1)[8], v11, v10, v9, v8);
    v12 = *(void (**)(void *, uint64_t))(v7 + 8);
  }
  v12(v5, v6);
  free(v5);
  free(v4);
  free(v3);
}

uint64_t sub_18558E4DC()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_description);
  v2 = sub_1865074F8();

  return v2;
}

uint64_t sub_18558E530()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  v1 = sub_186508158();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD83E30);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[1] = *v0;
  v10[0] = MEMORY[0x1E0DEE9D8];
  v8 = sub_18650814C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEDFE8], v1);
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD8AB20);
  sub_18559ACC8();
  return sub_186508164();
}

uint64_t UITraitCollection.init(mutations:)(uint64_t a1, uint64_t a2)
{
  void *ObjCClassFromMetadata;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t result;
  _QWORD v10[6];

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_18559D30C;
  *(_QWORD *)(v6 + 24) = v5;
  v10[4] = sub_185228348;
  v10[5] = v6;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_185281858;
  v10[3] = &block_descriptor;
  v7 = _Block_copy(v10);
  swift_retain();
  swift_release();
  v8 = objc_msgSend(ObjCClassFromMetadata, sel_traitCollectionWithTraits_, v7);
  _Block_release(v7);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v7 & 1) == 0)
    return (uint64_t)v8;
  __break(1u);
  return result;
}

uint64_t UITraitCollection._specifiedTraits.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel__specifiedTraitTokensArray);
  sub_1851F9080(0, (unint64_t *)&qword_1ECD75368);
  v2 = sub_186507654();

  v3 = sub_185248420(v2);
  swift_bridgeObjectRelease();
  return v3;
}

id UITraitCollection._isSpecified(_:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  v3 = objc_msgSend(v2, sel__isTraitTokenSpecified_, sub_185249BF0(a1, 0, 0, a1, a2));
  swift_unknownObjectRelease();
  return v3;
}

uint64_t UITraitCollection.changedTraits(from:)(uint64_t a1)
{
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;

  v2 = objc_msgSend(v1, sel__changedTraitTokensArrayFromTraitCollection_, a1);
  sub_1851F9080(0, (unint64_t *)&qword_1ECD75368);
  v3 = sub_186507654();

  v4 = sub_185248420(v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t static UITraitCollection.systemTraitsAffectingImageLookup.getter()
{
  return sub_185248154((SEL *)&selRef__systemTraitTokensAffectingImageLookup);
}

id UITraitOverrides.contains(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  id v6;

  v5 = *(id *)(*(_QWORD *)v2 + 16);
  v6 = objc_msgSend(v5, sel__containsTraitToken_, sub_185249BF0(a1, 0, 0, a1, a2));

  swift_unknownObjectRelease();
  return v6;
}

uint64_t UITraitOverrides.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  int v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[2];
  _BYTE v20[32];

  v18 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = sub_186507AA4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - v9;
  v11 = *(id *)(*(_QWORD *)v3 + 16);
  v12 = objc_msgSend(v11, sel__objectForTraitToken_, sub_185247F14(a1, a2, (uint64_t)&unk_1E16A2758, (uint64_t (*)(uint64_t))sub_18559C68C));
  swift_unknownObjectRelease();

  if (v12)
  {
    sub_186507B1C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v19, 0, sizeof(v19));
  }
  sub_1850F26F8((uint64_t)v19, (uint64_t)v20, &qword_1ECD75B20);
  sub_18519F0C4((uint64_t)v20, (uint64_t)v19, &qword_1ECD75B20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  v13 = swift_dynamicCast();
  v14 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (v13)
  {
    v15(v10, 0, 1, AssociatedTypeWitness);
    sub_18519F088((uint64_t)v20, &qword_1ECD75B20);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v18, v10, AssociatedTypeWitness);
  }
  else
  {
    v15(v10, 1, 1, AssociatedTypeWitness);
    (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
    sub_18519F088((uint64_t)v20, &qword_1ECD75B20);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  char v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t AssociatedTypeWitness;
  uint64_t v32;
  uint64_t v33;
  _OWORD v34[2];
  _BYTE v35[32];

  v32 = *(_QWORD *)(a2 + 8);
  v33 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = sub_186507AA4();
  v26 = *(_QWORD *)(v6 - 8);
  v27 = v6;
  MEMORY[0x1E0C80A78](v6);
  v30 = (char *)&v26 - v7;
  v8 = swift_getAssociatedTypeWitness();
  v9 = sub_186507AA4();
  v28 = *(_QWORD *)(v9 - 8);
  v29 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v26 - v11;
  v13 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v26 - v14;
  v16 = *(id *)(*(_QWORD *)v3 + 16);
  v17 = objc_msgSend(v16, sel__objectForTraitToken_, sub_1852480D0(a1, a2, (uint64_t)&unk_1E16A25F0, (uint64_t (*)(uint64_t))sub_18559C59C));
  swift_unknownObjectRelease();

  if (v17)
  {
    sub_186507B1C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v34, 0, sizeof(v34));
  }
  sub_1850F26F8((uint64_t)v34, (uint64_t)v35, &qword_1ECD75B20);
  sub_18519F0C4((uint64_t)v35, (uint64_t)v34, &qword_1ECD75B20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  v18 = swift_dynamicCast();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if ((v18 & 1) == 0)
  {
    v19(v12, 1, 1, v8);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v29);
    goto LABEL_8;
  }
  v19(v12, 0, 1, v8);
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v12, v8);
  v20 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(a2 + 32))(v15, a1, a2);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v8);
  v21 = AssociatedTypeWitness;
  v22 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, AssociatedTypeWitness);
  v24 = v33;
  if (v23 == 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v20, v27);
LABEL_8:
    (*(void (**)(uint64_t))(v32 + 16))(a1);
    return sub_18519F088((uint64_t)v35, &qword_1ECD75B20);
  }
  sub_18519F088((uint64_t)v35, &qword_1ECD75B20);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(v24, v20, v21);
}

{
  uint64_t v3;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v17 = a3;
  v6 = *(_QWORD *)(a2 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_186507AA4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v17 - v10;
  v12 = *(id *)(*(_QWORD *)v3 + 16);
  objc_msgSend(v12, sel__valueForCGFloatTraitToken_, sub_1852480D0(a1, a2, (uint64_t)&unk_1E16A25C8, (uint64_t (*)(uint64_t))sub_185571908));
  v14 = v13;

  swift_unknownObjectRelease();
  v18 = v14;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(a2 + 32))(&v18, a1, a2);
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, AssociatedTypeWitness) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(v17, v11, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a1, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

{
  uint64_t v3;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v17 = a3;
  v6 = *(_QWORD *)(a2 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_186507AA4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v17 - v10;
  v12 = *(id *)(*(_QWORD *)v3 + 16);
  objc_msgSend(v12, sel__valueForCGFloatTraitToken_, sub_1852480D0(a1, a2, (uint64_t)&unk_1E16A25A0, (uint64_t (*)(uint64_t))sub_185571908));
  v14 = v13;

  swift_unknownObjectRelease();
  v18 = v14;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(a2 + 32))(&v18, a1, a2);
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, AssociatedTypeWitness) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(v17, v11, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a1, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

{
  uint64_t v3;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;

  v17 = a3;
  v6 = *(_QWORD *)(a2 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v16 = sub_186507AA4();
  v8 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v10 = (char *)&v15 - v9;
  v11 = *(id *)(*(_QWORD *)v3 + 16);
  v12 = objc_msgSend(v11, sel__valueForNSIntegerTraitToken_, sub_1852480D0(a1, a2, (uint64_t)&unk_1E16A2578, (uint64_t (*)(uint64_t))sub_18559C560));

  swift_unknownObjectRelease();
  v18 = v12;
  (*(void (**)(id *, uint64_t, uint64_t))(a2 + 32))(&v18, a1, a2);
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, AssociatedTypeWitness) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(v17, v10, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a1, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v16);
}

uint64_t UITraitOverrides.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;

  sub_18559A418(a1, a2, a3, a4);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

{
  void *v7;

  v7 = (void *)sub_185247F8C();
  swift_unknownObjectRetain();
  objc_msgSend(v7, sel__setNSIntegerValue_forTraitToken_, a1, sub_185247F14(a3, a4, (uint64_t)&unk_1E16A2690, (uint64_t (*)(uint64_t))sub_18559C608));
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

{
  return sub_18559035C(a1, a2, a3, a4, (void (*)(void))sub_18559A584);
}

{
  return sub_18559035C(a1, a2, a3, a4, (void (*)(void))sub_185247B68);
}

{
  return sub_18559035C(a1, a2, a3, a4, (void (*)(void))sub_18559A700);
}

{
  return sub_18559035C(a1, a2, a3, a4, (void (*)(void))sub_18559A7C0);
}

void (*UITraitOverrides.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  size_t v12;
  void *v13;

  v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *v9 = a2;
  v9[1] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[4] = AssociatedTypeWitness;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[5] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[6] = malloc(v12);
  v13 = malloc(v12);
  v9[7] = v13;
  UITraitOverrides.subscript.getter(a3, a4, (uint64_t)v13);
  return sub_18558ECB4;
}

{
  uint64_t v4;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  size_t v12;
  void *v13;

  v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *v9 = a2;
  v9[1] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[4] = AssociatedTypeWitness;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[5] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[6] = malloc(v12);
  v13 = malloc(v12);
  v9[7] = v13;
  UITraitOverrides.subscript.getter(a3, a4, (uint64_t)v13);
  return sub_18558FCF8;
}

{
  uint64_t v4;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  size_t v12;
  void *v13;

  v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *v9 = a2;
  v9[1] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[4] = AssociatedTypeWitness;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[5] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[6] = malloc(v12);
  v13 = malloc(v12);
  v9[7] = v13;
  UITraitOverrides.subscript.getter(a3, a4, (uint64_t)v13);
  return sub_18558FF60;
}

{
  uint64_t v4;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  size_t v12;
  void *v13;

  v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *v9 = a2;
  v9[1] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[4] = AssociatedTypeWitness;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[5] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[6] = malloc(v12);
  v13 = malloc(v12);
  v9[7] = v13;
  UITraitOverrides.subscript.getter(a3, a4, (uint64_t)v13);
  return sub_1855901C8;
}

{
  uint64_t v4;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  size_t v12;
  void *v13;

  v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *v9 = a2;
  v9[1] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[4] = AssociatedTypeWitness;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[5] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[6] = malloc(v12);
  v13 = malloc(v12);
  v9[7] = v13;
  UITraitOverrides.subscript.getter(a3, a4, (uint64_t)v13);
  return sub_185590484;
}

void sub_18558ECB4(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v2 = *a1;
  v3 = (void *)(*a1)[6];
  v4 = (void *)(*a1)[7];
  v5 = (*a1)[4];
  v6 = (*a1)[5];
  v7 = (*a1)[2];
  v9 = **a1;
  v8 = (*a1)[1];
  if ((a2 & 1) != 0)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[6], v4, v5);
    sub_18559A418((uint64_t)v3, v9, v8, v7);
    v10 = *(void (**)(void *, uint64_t))(v6 + 8);
    v10(v3, v5);
  }
  else
  {
    sub_18559A418((*a1)[7], v9, v8, v7);
    v10 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v10(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

double UITraitOverrides.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v6;
  double v7;
  double v8;

  v6 = *(id *)(*(_QWORD *)v3 + 16);
  objc_msgSend(v6, sel__valueForCGFloatTraitToken_, sub_185247F14(a2, a3, (uint64_t)&unk_1E16A2730, (uint64_t (*)(uint64_t))sub_18559C634));
  v8 = v7;

  swift_unknownObjectRelease();
  return v8;
}

{
  uint64_t v3;
  id v6;
  double v7;
  double v8;

  v6 = *(id *)(*(_QWORD *)v3 + 16);
  objc_msgSend(v6, sel__valueForCGFloatTraitToken_, sub_185247F14(a2, a3, (uint64_t)&unk_1E16A26E0, (uint64_t (*)(uint64_t))sub_18559C634));
  v8 = v7;
  swift_unknownObjectRelease();

  return v8;
}

uint64_t UITraitOverrides.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  return sub_18558F020(a4, a1, a2, a3, (uint64_t)&unk_1E16A2730, (uint64_t (*)(uint64_t))sub_18559C634);
}

{
  return sub_18558F020(a4, a1, a2, a3, (uint64_t)&unk_1E16A26E0, (uint64_t (*)(uint64_t))sub_18559C634);
}

void (*UITraitOverrides.subscript.modify(double **a1, uint64_t a2, uint64_t a3, uint64_t a4))(double **a1, uint64_t a2)
{
  uint64_t v4;
  double *v9;

  v9 = (double *)malloc(0x28uLL);
  *a1 = v9;
  *((_QWORD *)v9 + 3) = a4;
  *((_QWORD *)v9 + 4) = v4;
  *((_QWORD *)v9 + 1) = a2;
  *((_QWORD *)v9 + 2) = a3;
  *v9 = UITraitOverrides.subscript.getter(a2, a3, a4);
  return sub_18558EEA8;
}

{
  uint64_t v4;
  double *v9;

  v9 = (double *)malloc(0x28uLL);
  *a1 = v9;
  *((_QWORD *)v9 + 3) = a4;
  *((_QWORD *)v9 + 4) = v4;
  *((_QWORD *)v9 + 1) = a2;
  *((_QWORD *)v9 + 2) = a3;
  *v9 = UITraitOverrides.subscript.getter(a2, a3, a4);
  return sub_18558F140;
}

void sub_18558EEA8(double **a1, uint64_t a2)
{
  sub_18558F14C(a1, a2, (void (*)(_QWORD, _QWORD, _QWORD, double))UITraitOverrides.subscript.setter);
}

uint64_t UITraitOverrides.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18558F194(a1, a2, a3, (uint64_t)&unk_1E16A2708, (uint64_t (*)(uint64_t))sub_18559C650);
}

{
  return sub_18558F194(a1, a2, a3, (uint64_t)&unk_1E16A26B8, (uint64_t (*)(uint64_t))sub_18559D274);
}

uint64_t UITraitOverrides.subscript.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_18558F25C(a1, a2, a3, a4, a5, (uint64_t)&unk_1E16A2708, (uint64_t (*)(uint64_t))sub_18559C650);
}

{
  return sub_18558F25C(a1, a2, a3, a4, a5, (uint64_t)&unk_1E16A26B8, (uint64_t (*)(uint64_t))sub_18559D274);
}

{
  void *v8;

  if ((a2 & 1) != 0)
  {
    if (qword_1EDD83270 != -1)
      swift_once();
    a1 = qword_1EDD83278;
  }
  v8 = (void *)sub_185247F8C();
  swift_unknownObjectRetain();
  objc_msgSend(v8, sel__setNSIntegerValue_forTraitToken_, a1, sub_185247F14(a4, a5, (uint64_t)&unk_1E16A2668, (uint64_t (*)(uint64_t))sub_18559C5EC));
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

void (*UITraitOverrides.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(_QWORD **a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v9;
  char v10;

  v9 = malloc(0x30uLL);
  *a1 = v9;
  v9[4] = a4;
  v9[5] = v4;
  v9[2] = a2;
  v9[3] = a3;
  *v9 = UITraitOverrides.subscript.getter(a2, a3, a4);
  *((_BYTE *)v9 + 8) = v10 & 1;
  return sub_18558EF68;
}

{
  uint64_t v4;
  _QWORD *v9;
  char v10;

  v9 = malloc(0x30uLL);
  *a1 = v9;
  v9[4] = a4;
  v9[5] = v4;
  v9[2] = a2;
  v9[3] = a3;
  *v9 = UITraitOverrides.subscript.getter(a2, a3, a4);
  *((_BYTE *)v9 + 8) = v10 & 1;
  return sub_18558F394;
}

{
  uint64_t v4;
  _QWORD *v9;
  char v10;

  v9 = malloc(0x30uLL);
  *a1 = v9;
  v9[4] = a4;
  v9[5] = v4;
  v9[2] = a2;
  v9[3] = a3;
  *v9 = UITraitOverrides.subscript.getter(a2, a3, a4);
  *((_BYTE *)v9 + 8) = v10 & 1;
  return sub_18558F784;
}

void sub_18558EF68(_QWORD **a1, uint64_t a2)
{
  sub_18558F790(a1, a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))UITraitOverrides.subscript.setter);
}

uint64_t sub_18558F020(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  void *v11;

  v11 = (void *)sub_185247F8C();
  swift_unknownObjectRetain();
  objc_msgSend(v11, sel__setCGFloatValue_forTraitToken_, sub_185247F14(a3, a4, a5, a6), a1);
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

void sub_18558F140(double **a1, uint64_t a2)
{
  sub_18558F14C(a1, a2, (void (*)(_QWORD, _QWORD, _QWORD, double))UITraitOverrides.subscript.setter);
}

void sub_18558F14C(double **a1, uint64_t a2, void (*a3)(_QWORD, _QWORD, _QWORD, double))
{
  double *v3;

  v3 = *a1;
  a3(*((_QWORD *)*a1 + 1), *((_QWORD *)v3 + 2), *((_QWORD *)*a1 + 3), *v3);
  free(v3);
}

uint64_t sub_18558F194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v5;
  id v10;
  double v11;
  double v12;

  v10 = *(id *)(*(_QWORD *)v5 + 16);
  objc_msgSend(v10, sel__valueForCGFloatTraitToken_, sub_185247F14(a2, a3, a4, a5));
  v12 = v11;

  swift_unknownObjectRelease();
  if (v12 == 1.79769313e308)
    return 0;
  else
    return *(_QWORD *)&v12;
}

uint64_t sub_18558F25C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  void *v12;

  if ((a2 & 1) != 0)
    *(double *)&a1 = 1.79769313e308;
  v12 = (void *)sub_185247F8C();
  swift_unknownObjectRetain();
  objc_msgSend(v12, sel__setCGFloatValue_forTraitToken_, sub_185247F14(a4, a5, a6, a7), *(double *)&a1);
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

void sub_18558F394(_QWORD **a1, uint64_t a2)
{
  sub_18558F790(a1, a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))UITraitOverrides.subscript.setter);
}

id UITraitOverrides.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v6;
  id v7;

  v6 = *(id *)(*(_QWORD *)v3 + 16);
  v7 = objc_msgSend(v6, sel__valueForNSIntegerTraitToken_, sub_185247F14(a2, a3, (uint64_t)&unk_1E16A2690, (uint64_t (*)(uint64_t))sub_18559C608));

  swift_unknownObjectRelease();
  return v7;
}

{
  uint64_t v3;
  id v6;
  id v7;

  v6 = *(id *)(*(_QWORD *)v3 + 16);
  v7 = objc_msgSend(v6, sel__valueForNSIntegerTraitToken_, sub_185247F14(a2, a3, (uint64_t)&unk_1E16A2668, (uint64_t (*)(uint64_t))sub_18559C5EC));

  swift_unknownObjectRelease();
  if (qword_1EDD83270 != -1)
    swift_once();
  if ((id)qword_1EDD83278 == v7)
    return 0;
  else
    return v7;
}

void (*UITraitOverrides.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = malloc(0x28uLL);
  *a1 = v9;
  v9[3] = a4;
  v9[4] = v4;
  v9[1] = a2;
  v9[2] = a3;
  *v9 = UITraitOverrides.subscript.getter(a2, a3, a4);
  return sub_18558F540;
}

{
  uint64_t v4;
  _QWORD *v9;

  v9 = malloc(0x28uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *v9 = a2;
  v9[1] = a3;
  *((_BYTE *)v9 + 32) = UITraitOverrides.subscript.getter(a2, a3, a4);
  return sub_18558F8E4;
}

void sub_18558F540(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  UITraitOverrides.subscript.setter(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

void sub_18558F784(_QWORD **a1, uint64_t a2)
{
  sub_18558F790(a1, a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))UITraitOverrides.subscript.setter);
}

void sub_18558F790(_QWORD **a1, uint64_t a2, void (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  v3 = *a1;
  a3(**a1, *((unsigned __int8 *)*a1 + 8), (*a1)[2], (*a1)[3], (*a1)[4]);
  free(v3);
}

BOOL UITraitOverrides.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v6;
  id v7;

  v6 = *(id *)(*(_QWORD *)v3 + 16);
  v7 = objc_msgSend(v6, sel__valueForNSIntegerTraitToken_, sub_185247F14(a2, a3, (uint64_t)&unk_1E16A2640, (uint64_t (*)(uint64_t))sub_185573190));

  swift_unknownObjectRelease();
  return v7 != 0;
}

void sub_18558F8E4(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  UITraitOverrides.subscript.setter(*((_BYTE *)*a1 + 32), **a1, (*a1)[1], (*a1)[2]);
  free(v1);
}

void sub_18558FCF8(uint64_t **a1, char a2)
{
  sub_18558DF6C(a1, a2, (void (*)(void *, uint64_t, uint64_t, uint64_t))sub_18559A584);
}

void sub_18558FF60(uint64_t **a1, char a2)
{
  sub_18558DF6C(a1, a2, (void (*)(void *, uint64_t, uint64_t, uint64_t))sub_185247B68);
}

void sub_1855901C8(uint64_t **a1, char a2)
{
  sub_18558DF6C(a1, a2, (void (*)(void *, uint64_t, uint64_t, uint64_t))sub_18559A700);
}

uint64_t sub_18559035C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  uint64_t AssociatedTypeWitness;

  a5();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

void sub_185590484(uint64_t **a1, char a2)
{
  sub_18558DF6C(a1, a2, (void (*)(void *, uint64_t, uint64_t, uint64_t))sub_18559A7C0);
}

uint64_t UITraitOverrides.subscript.getter@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  int v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD v25[2];
  _BYTE v26[32];

  v24 = a4;
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_186507AA4();
  v21 = *(_QWORD *)(v9 - 8);
  v22 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - v11;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v21 - v14;
  v16 = *(id *)(*(_QWORD *)v4 + 16);
  v23 = a3;
  v17 = objc_msgSend(v16, sel__objectForTraitToken_, sub_185249B74(a1, a2, a3, (uint64_t)&unk_1E16A2528, (uint64_t (*)(uint64_t))sub_18559C50C));
  swift_unknownObjectRelease();

  if (v17)
  {
    sub_186507B1C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v25, 0, sizeof(v25));
  }
  sub_1850F26F8((uint64_t)v25, (uint64_t)v26, &qword_1ECD75B20);
  sub_18519F0C4((uint64_t)v26, (uint64_t)v25, &qword_1ECD75B20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  v18 = swift_dynamicCast();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v18)
  {
    v19(v12, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v12, AssociatedTypeWitness);
    sub_18524A124((uint64_t)v15, a1, a2, v24);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, AssociatedTypeWitness);
  }
  else
  {
    v19(v12, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v22);
    (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  }
  return sub_18519F088((uint64_t)v26, &qword_1ECD75B20);
}

{
  uint64_t v4;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v9 = *(id *)(*(_QWORD *)v4 + 16);
  objc_msgSend(v9, sel__valueForCGFloatTraitToken_, sub_185249B74(a1, a2, a3, (uint64_t)&unk_1E16A2500, (uint64_t (*)(uint64_t))sub_18559C4E0));
  v11 = v10;

  swift_unknownObjectRelease();
  v13 = v11;
  return sub_18524A124((uint64_t)&v13, a1, a2, a4);
}

{
  uint64_t v4;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v9 = *(id *)(*(_QWORD *)v4 + 16);
  objc_msgSend(v9, sel__valueForCGFloatTraitToken_, sub_185249B74(a1, a2, a3, (uint64_t)&unk_1E16A24D8, (uint64_t (*)(uint64_t))sub_18559C4E0));
  v11 = v10;

  swift_unknownObjectRelease();
  v13 = v11;
  return sub_18524A124((uint64_t)&v13, a1, a2, a4);
}

{
  uint64_t v4;
  id v9;
  id v10;
  id v12;

  v9 = *(id *)(*(_QWORD *)v4 + 16);
  v10 = objc_msgSend(v9, sel__valueForNSIntegerTraitToken_, sub_185249B74(a1, a2, a3, (uint64_t)&unk_1E16A24B0, (uint64_t (*)(uint64_t))sub_18559C4C4));

  swift_unknownObjectRelease();
  v12 = v10;
  return sub_18524A124((uint64_t)&v12, a1, a2, a4);
}

uint64_t UITraitOverrides.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_185590C54(a1, a2, a3, a4, a5, (void (*)(void))sub_18559A878);
}

{
  return sub_185590C54(a1, a2, a3, a4, a5, (void (*)(void))sub_18559AA34);
}

{
  return sub_185590C54(a1, a2, a3, a4, a5, (void (*)(void))sub_18559AB10);
}

{
  return sub_185590C54(a1, a2, a3, a4, a5, (void (*)(void))sub_18559ABEC);
}

void (*UITraitOverrides.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t **a1, char a2)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  size_t v14;
  void *v15;

  v11 = malloc(0x48uLL);
  *a1 = v11;
  v11[3] = a5;
  v11[4] = v5;
  v11[1] = a3;
  v11[2] = a4;
  *v11 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11[5] = AssociatedTypeWitness;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11[6] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v11[7] = malloc(v14);
  v15 = malloc(v14);
  v11[8] = v15;
  UITraitOverrides.subscript.getter(a3, a4, a5, (uint64_t)v15);
  return sub_1855907E4;
}

{
  uint64_t v5;
  _QWORD *v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  size_t v14;
  void *v15;

  v11 = malloc(0x48uLL);
  *a1 = v11;
  v11[3] = a5;
  v11[4] = v5;
  v11[1] = a3;
  v11[2] = a4;
  *v11 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11[5] = AssociatedTypeWitness;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11[6] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v11[7] = malloc(v14);
  v15 = malloc(v14);
  v11[8] = v15;
  UITraitOverrides.subscript.getter(a3, a4, a5, (uint64_t)v15);
  return sub_1855909AC;
}

{
  uint64_t v5;
  _QWORD *v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  size_t v14;
  void *v15;

  v11 = malloc(0x48uLL);
  *a1 = v11;
  v11[3] = a5;
  v11[4] = v5;
  v11[1] = a3;
  v11[2] = a4;
  *v11 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11[5] = AssociatedTypeWitness;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11[6] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v11[7] = malloc(v14);
  v15 = malloc(v14);
  v11[8] = v15;
  UITraitOverrides.subscript.getter(a3, a4, a5, (uint64_t)v15);
  return sub_185590B74;
}

{
  uint64_t v5;
  _QWORD *v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  size_t v14;
  void *v15;

  v11 = malloc(0x48uLL);
  *a1 = v11;
  v11[3] = a5;
  v11[4] = v5;
  v11[1] = a3;
  v11[2] = a4;
  *v11 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11[5] = AssociatedTypeWitness;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11[6] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v11[7] = malloc(v14);
  v15 = malloc(v14);
  v11[8] = v15;
  UITraitOverrides.subscript.getter(a3, a4, a5, (uint64_t)v15);
  return sub_185590D90;
}

void sub_1855907E4(uint64_t **a1, char a2)
{
  sub_18558E3F4(a1, a2, (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_18559A878);
}

void sub_1855909AC(uint64_t **a1, char a2)
{
  sub_18558E3F4(a1, a2, (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_18559AA34);
}

void sub_185590B74(uint64_t **a1, char a2)
{
  sub_18558E3F4(a1, a2, (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_18559AB10);
}

uint64_t sub_185590C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  uint64_t AssociatedTypeWitness;

  a6();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

void sub_185590D90(uint64_t **a1, char a2)
{
  sub_18558E3F4(a1, a2, (void (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t))sub_18559ABEC);
}

uint64_t sub_185590DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_185590DAC(a1, a2, a3, a4, a5, a6, (void (*)(void))sub_18559A418);
}

uint64_t sub_185590DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void))
{
  uint64_t AssociatedTypeWitness;

  a7();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

uint64_t (*sub_185590E0C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  _QWORD *v8;

  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[4] = UITraitOverrides.subscript.modify(v8, a2, a3, a4);
  return sub_185590E70;
}

uint64_t (*sub_185590E7C(double ***a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  double **v8;

  v8 = (double **)malloc(0x28uLL);
  *a1 = v8;
  v8[4] = (double *)UITraitOverrides.subscript.modify(v8, a2, a3, a4);
  return sub_185590E70;
}

uint64_t sub_185590EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UITraitOverrides.subscript.getter(a1, a2, a3);
}

uint64_t sub_185590EF8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return UITraitOverrides.subscript.setter(a1, a2 & 1, a3, a4, a5);
}

uint64_t (*sub_185590F00(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  _QWORD *v8;

  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[4] = UITraitOverrides.subscript.modify(v8, a2, a3, a4);
  return sub_185590E70;
}

uint64_t (*sub_185590F6C(double ***a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  double **v8;

  v8 = (double **)malloc(0x28uLL);
  *a1 = v8;
  v8[4] = (double *)UITraitOverrides.subscript.modify(v8, a2, a3, a4);
  return sub_185590E70;
}

uint64_t sub_185590FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UITraitOverrides.subscript.getter(a1, a2, a3);
}

uint64_t sub_185590FE8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return UITraitOverrides.subscript.setter(a1, a2 & 1, a3, a4, a5);
}

uint64_t (*sub_185590FF0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  _QWORD *v8;

  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[4] = UITraitOverrides.subscript.modify(v8, a2, a3, a4);
  return sub_185590E70;
}

uint64_t (*sub_18559105C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  _QWORD *v8;

  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[4] = UITraitOverrides.subscript.modify(v8, a2, a3, a4);
  return sub_185590E70;
}

id sub_1855910C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UITraitOverrides.subscript.getter(a1, a2, a3);
}

uint64_t sub_1855910D8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return UITraitOverrides.subscript.setter(a1, a2 & 1, a3, a4, a5);
}

uint64_t (*sub_1855910E0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  _QWORD *v8;

  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[4] = UITraitOverrides.subscript.modify(v8, a2, a3, a4);
  return sub_185590E70;
}

uint64_t (*sub_185591148(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  _QWORD *v8;

  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[4] = UITraitOverrides.subscript.modify(v8, a2, a3, a4);
  return sub_185590E70;
}

uint64_t sub_1855911B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_185247B08(a1, a2, a3, a4, a5, a6, (void (*)(void))sub_18559A584);
}

uint64_t (*sub_1855911BC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  _QWORD *v8;

  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[4] = UITraitOverrides.subscript.modify(v8, a2, a3, a4);
  return sub_185590E70;
}

uint64_t (*sub_185591224(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  _QWORD *v8;

  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[4] = UITraitOverrides.subscript.modify(v8, a2, a3, a4);
  return sub_185590E70;
}

uint64_t sub_18559128C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_185247B08(a1, a2, a3, a4, a5, a6, (void (*)(void))sub_18559A700);
}

uint64_t (*sub_185591298(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  _QWORD *v8;

  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[4] = UITraitOverrides.subscript.modify(v8, a2, a3, a4);
  return sub_185590E70;
}

uint64_t sub_185591300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_185247B08(a1, a2, a3, a4, a5, a6, (void (*)(void))sub_18559A7C0);
}

uint64_t (*sub_18559130C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))()
{
  _QWORD *v8;

  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[4] = UITraitOverrides.subscript.modify(v8, a2, a3, a4);
  return sub_185590E70;
}

uint64_t sub_185591374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_18517D3B4(a1, a2, a3, a4, a5, a6, a7, (void (*)(void))sub_18559A878);
}

uint64_t (*sub_185591380(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  _QWORD *v10;

  v10 = malloc(0x28uLL);
  *a1 = v10;
  v10[4] = UITraitOverrides.subscript.modify(v10, a2, a3, a4, a5);
  return sub_185590E70;
}

uint64_t sub_1855913F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_18517D3B4(a1, a2, a3, a4, a5, a6, a7, (void (*)(void))sub_18559AA34);
}

uint64_t (*sub_185591404(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  _QWORD *v10;

  v10 = malloc(0x28uLL);
  *a1 = v10;
  v10[4] = UITraitOverrides.subscript.modify(v10, a2, a3, a4, a5);
  return sub_185590E70;
}

uint64_t sub_18559147C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_18517D3B4(a1, a2, a3, a4, a5, a6, a7, (void (*)(void))sub_18559AB10);
}

uint64_t (*sub_185591488(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  _QWORD *v10;

  v10 = malloc(0x28uLL);
  *a1 = v10;
  v10[4] = UITraitOverrides.subscript.modify(v10, a2, a3, a4, a5);
  return sub_185590E70;
}

uint64_t sub_185591500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_18517D3B4(a1, a2, a3, a4, a5, a6, a7, (void (*)(void))sub_18559ABEC);
}

uint64_t (*sub_18559150C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))()
{
  _QWORD *v10;

  v10 = malloc(0x28uLL);
  *a1 = v10;
  v10[4] = UITraitOverrides.subscript.modify(v10, a2, a3, a4, a5);
  return sub_185590E70;
}

void sub_185591580(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t _s5UIKit16UITraitOverridesV11descriptionSSvg_0()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_description);
  v2 = sub_1865074F8();

  return v2;
}

uint64_t UITraitOverrides.customMirror.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  v1 = sub_186508158();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD83E30);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[1] = *v0;
  v10[0] = MEMORY[0x1E0DEE9D8];
  v8 = sub_18650814C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEDFE8], v1);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD8AB20);
  sub_18559ACC8();
  return sub_186508164();
}

uint64_t sub_18559174C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  v1 = sub_186508158();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD83E30);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[1] = *v0;
  v10[0] = MEMORY[0x1E0DEE9D8];
  v8 = sub_18650814C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEDFE8], v1);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD8AB20);
  sub_18559ACC8();
  return sub_186508164();
}

uint64_t (*UIView.traitOverrides.modify(_QWORD *a1))()
{
  void *v1;
  _QWORD *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t (*result)();
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  v4 = objc_msgSend(v1, sel_traitOverrides);
  v3[1] = &unk_1EE011D68;
  v5 = objc_msgSend((id)swift_dynamicCastObjCProtocolUnconditional(), sel__swiftImplCopy);
  swift_unknownObjectRelease();
  v3[2] = &unk_1EE011D68;
  v6 = swift_dynamicCastObjCProtocolUnconditional();
  swift_getObjectType();
  sub_1851F9080(0, (unint64_t *)&qword_1EDD82C80);
  result = (uint64_t (*)())swift_dynamicCastMetatype();
  if (result)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD829E0);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v6;
    *v3 = v8;
    return sub_1855919BC;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1855919C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIView.registerForTraitChanges<A>(_:handler:)(a1, a2, a3, a4);
}

uint64_t sub_1855919E4@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t result;

  v3 = objc_msgSend(*a1, sel_traitOverrides);
  v4 = objc_msgSend((id)swift_dynamicCastObjCProtocolUnconditional(), sel__swiftImplCopy);
  swift_unknownObjectRelease();
  v5 = swift_dynamicCastObjCProtocolUnconditional();
  swift_getObjectType();
  sub_1851F9080(0, (unint64_t *)&qword_1EDD82C80);
  result = swift_dynamicCastMetatype();
  if (result)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD829E0);
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v5;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t (*UIViewController.traitOverrides.modify(_QWORD *a1))()
{
  void *v1;
  _QWORD *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t (*result)();
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  v4 = objc_msgSend(v1, sel_traitOverrides);
  v3[1] = &unk_1EE011D68;
  v5 = objc_msgSend((id)swift_dynamicCastObjCProtocolUnconditional(), sel__swiftImplCopy);
  swift_unknownObjectRelease();
  v3[2] = &unk_1EE011D68;
  v6 = swift_dynamicCastObjCProtocolUnconditional();
  swift_getObjectType();
  sub_1851F9080(0, (unint64_t *)&qword_1EDD82C80);
  result = (uint64_t (*)())swift_dynamicCastMetatype();
  if (result)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD829E0);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v6;
    *v3 = v8;
    return sub_1855919BC;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_185591C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIViewController.registerForTraitChanges<A>(_:handler:)(a1, a2, a3, a4);
}

id UIPresentationController.registerForTraitChanges<A>(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1852497EC(a1, a2, a3, a4, (uint64_t)&unk_1E16A2018, (uint64_t)sub_185174D68, (uint64_t)&block_descriptor_41);
}

uint64_t (*UIPresentationController.traitOverrides.modify(_QWORD *a1))()
{
  void *v1;
  _QWORD *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t (*result)();
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  v4 = objc_msgSend(v1, sel_traitOverrides);
  v3[1] = &unk_1EE011D68;
  v5 = objc_msgSend((id)swift_dynamicCastObjCProtocolUnconditional(), sel__swiftImplCopy);
  swift_unknownObjectRelease();
  v3[2] = &unk_1EE011D68;
  v6 = swift_dynamicCastObjCProtocolUnconditional();
  swift_getObjectType();
  sub_1851F9080(0, (unint64_t *)&qword_1EDD82C80);
  result = (uint64_t (*)())swift_dynamicCastMetatype();
  if (result)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD829E0);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v6;
    *v3 = v8;
    return sub_1855919BC;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_185591D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIPresentationController.registerForTraitChanges<A>(_:handler:)(a1, a2, a3, a4);
}

id UIWindowScene.registerForTraitChanges<A>(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1852497EC(a1, a2, a3, a4, (uint64_t)&unk_1E16A2040, (uint64_t)sub_185174D6C, (uint64_t)&block_descriptor_47);
}

id UIWindowScene.unregisterForTraitChanges(_:)(uint64_t a1)
{
  void *v1;

  return objc_msgSend(v1, sel_unregisterForTraitChanges_, a1);
}

void sub_185591DE0(uint64_t *a1, void **a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v2 = *a1;
  v3 = *a2;
  swift_retain();
  v4 = objc_msgSend(v3, sel_traitOverrides);
  v5 = (void *)swift_dynamicCastObjCProtocolUnconditional();
  v6 = *(id *)(v2 + 16);
  swift_release();
  objc_msgSend(v5, sel__replaceWithOverrides_, v6);
  swift_unknownObjectRelease();

}

uint64_t (*UIWindowScene.traitOverrides.modify(_QWORD *a1))()
{
  void *v1;
  _QWORD *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t (*result)();
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  v4 = objc_msgSend(v1, sel_traitOverrides);
  v3[1] = &unk_1EE011D68;
  v5 = objc_msgSend((id)swift_dynamicCastObjCProtocolUnconditional(), sel__swiftImplCopy);
  swift_unknownObjectRelease();
  v3[2] = &unk_1EE011D68;
  v6 = swift_dynamicCastObjCProtocolUnconditional();
  swift_getObjectType();
  sub_1851F9080(0, (unint64_t *)&qword_1EDD82C80);
  result = (uint64_t (*)())swift_dynamicCastMetatype();
  if (result)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD829E0);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v6;
    *v3 = v8;
    return sub_1855919BC;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_185591FB8(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;

  v2 = *a1;
  v3 = **a1;
  v4 = (void *)(*a1)[5];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    v5 = objc_msgSend(v4, sel_traitOverrides);
    v2[3] = (uint64_t)&unk_1EE011D68;
    v6 = (void *)swift_dynamicCastObjCProtocolUnconditional();
    v7 = *(id *)(v3 + 16);
    swift_release();
    objc_msgSend(v6, sel__replaceWithOverrides_, v7);

    swift_unknownObjectRelease();
    swift_release();
  }
  else
  {
    v8 = objc_msgSend((id)(*a1)[5], sel_traitOverrides);
    v2[4] = (uint64_t)&unk_1EE011D68;
    v9 = (void *)swift_dynamicCastObjCProtocolUnconditional();
    v10 = *(id *)(v3 + 16);
    swift_release();
    objc_msgSend(v9, sel__replaceWithOverrides_, v10);

    swift_unknownObjectRelease();
  }
  free(v2);
}

id sub_1855920F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIWindowScene.registerForTraitChanges<A>(_:handler:)(a1, a2, a3, a4);
}

uint64_t sub_185592118()
{
  return UIWindowScene.registerForTraitChanges(_:target:action:)();
}

uint64_t sub_185592138()
{
  return UIWindowScene.registerForTraitChanges(_:action:)();
}

id sub_185592158(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_unregisterForTraitChanges_, a1);
}

id sub_18559216C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UITraitCollection), sel_init);
  qword_1EDD83290 = (uint64_t)result;
  return result;
}

id sub_18559219C(uint64_t a1)
{
  return sub_18559823C(a1, (SEL *)&selRef_userInterfaceIdiom, &qword_1EDD832A0);
}

uint64_t static UITraitUserInterfaceIdiom.defaultValue.getter()
{
  return sub_1855925FC(&qword_1EDD83298, (uint64_t)&qword_1EDD832A0);
}

void sub_1855921CC(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAD8, (SEL *)&selRef_name, &qword_1EDD832B0, &qword_1EDD832B8);
}

uint64_t static UITraitUserInterfaceIdiom.name.getter()
{
  return sub_18559224C(&qword_1EDD832A8, &qword_1EDD832B0);
}

void sub_18559220C(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAD8, (SEL *)&selRef_identifier, &qword_1EDD832C8, &qword_1EDD832D0);
}

uint64_t static UITraitUserInterfaceIdiom.identifier.getter()
{
  return sub_18559224C(&qword_1EDD832C0, &qword_1EDD832C8);
}

uint64_t sub_18559224C(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

id sub_18559229C(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BAD8, byte_1EDD832E0);
}

uint64_t static UITraitUserInterfaceIdiom.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD832D8, byte_1EDD832E0);
}

uint64_t static UITraitUserInterfaceIdiom._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitUserInterfaceIdiom._isPrivate.getter()
{
  return 0;
}

uint64_t sub_1855922DC@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD83298, &qword_1EDD832A0, a1);
}

uint64_t sub_1855922F8(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD832C0, &qword_1EDD832C8);
}

uint64_t sub_185592318(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD832A8, &qword_1EDD832B0);
}

uint64_t sub_185592338(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD832D8, byte_1EDD832E0);
}

uint64_t UIMutableTraits.userInterfaceIdiom.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  v5 = sub_1852478E0((unint64_t *)&unk_1EDD83EA8, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceIdiom, (uint64_t)&unk_1866679BC);
  v4(&v7, &type metadata for UITraitUserInterfaceIdiom, &type metadata for UITraitUserInterfaceIdiom, &protocol witness table for UITraitUserInterfaceIdiom, v5, a1, a2);
  return v7;
}

uint64_t sub_1855923D0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits.userInterfaceIdiom.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_185592400(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits.userInterfaceIdiom.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t UIMutableTraits.userInterfaceIdiom.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1852478E0((unint64_t *)&unk_1EDD83EA8, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceIdiom, (uint64_t)&unk_1866679BC);
  return v5(&v8, &type metadata for UITraitUserInterfaceIdiom, &type metadata for UITraitUserInterfaceIdiom, &protocol witness table for UITraitUserInterfaceIdiom, v6, a2, a3);
}

void (*UIMutableTraits.userInterfaceIdiom.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0((unint64_t *)&unk_1EDD83EA8, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceIdiom, (uint64_t)&unk_1866679BC);
  v8(&type metadata for UITraitUserInterfaceIdiom, &type metadata for UITraitUserInterfaceIdiom, &protocol witness table for UITraitUserInterfaceIdiom, v9, a2, a3);
  return sub_185592548;
}

void sub_185592548(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0((unint64_t *)&unk_1EDD83EA8, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceIdiom, (uint64_t)&unk_1866679BC);
  v4(v1, &type metadata for UITraitUserInterfaceIdiom, &type metadata for UITraitUserInterfaceIdiom, &protocol witness table for UITraitUserInterfaceIdiom, v5, v3, v2);
  free(v1);
}

id sub_1855925CC(uint64_t a1)
{
  return sub_18559823C(a1, (SEL *)&selRef_userInterfaceStyle, &qword_1EDD832F0);
}

uint64_t static UITraitUserInterfaceStyle.defaultValue.getter()
{
  return sub_1855925FC(&qword_1EDD832E8, (uint64_t)&qword_1EDD832F0);
}

uint64_t sub_1855925FC(_QWORD *a1, uint64_t a2)
{
  if (*a1 != -1)
    swift_once();
  return *(_QWORD *)a2;
}

void sub_185592634(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAF0, (SEL *)&selRef_name, &qword_1EDD83300, algn_1EDD83308);
}

uint64_t static UITraitUserInterfaceStyle.name.getter()
{
  return sub_18559224C(&qword_1EDD832F8, &qword_1EDD83300);
}

void sub_185592674(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAF0, (SEL *)&selRef_identifier, &qword_1EDD83318, &qword_1EDD83320);
}

uint64_t static UITraitUserInterfaceStyle.identifier.getter()
{
  return sub_18559224C(&qword_1EDD83310, &qword_1EDD83318);
}

id sub_1855926B4(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BAF0, &byte_1EDD83330);
}

uint64_t static UITraitUserInterfaceStyle.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD83328, (unsigned __int8 *)&byte_1EDD83330);
}

uint64_t sub_1855926E4(_QWORD *a1, unsigned __int8 *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

uint64_t static UITraitUserInterfaceStyle._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitUserInterfaceStyle._isPrivate.getter()
{
  return 0;
}

uint64_t sub_18559272C@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD832E8, &qword_1EDD832F0, a1);
}

uint64_t sub_185592748@<X0>(_QWORD *a1@<X2>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t result;

  if (*a1 != -1)
    result = swift_once();
  *a3 = *a2;
  return result;
}

uint64_t sub_18559278C(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83310, &qword_1EDD83318);
}

uint64_t sub_1855927AC(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD832F8, &qword_1EDD83300);
}

uint64_t sub_1855927CC(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD83328, (unsigned __int8 *)&byte_1EDD83330);
}

uint64_t sub_1855927E8(uint64_t a1, uint64_t a2, _QWORD *a3, unsigned __int8 *a4)
{
  if (*a3 != -1)
    swift_once();
  return *a4;
}

uint64_t sub_185592824@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits.userInterfaceStyle.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_185592854(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits.userInterfaceStyle.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void (*UIMutableTraits.userInterfaceStyle.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0((unint64_t *)&unk_1ECD75710, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceStyle, (uint64_t)&unk_186667980);
  v8(&type metadata for UITraitUserInterfaceStyle, &type metadata for UITraitUserInterfaceStyle, &protocol witness table for UITraitUserInterfaceStyle, v9, a2, a3);
  return sub_185592920;
}

void sub_185592920(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0((unint64_t *)&unk_1ECD75710, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceStyle, (uint64_t)&unk_186667980);
  v4(v1, &type metadata for UITraitUserInterfaceStyle, &type metadata for UITraitUserInterfaceStyle, &protocol witness table for UITraitUserInterfaceStyle, v5, v3, v2);
  free(v1);
}

id sub_1855929A4(uint64_t a1)
{
  return sub_18559823C(a1, (SEL *)&selRef_layoutDirection, &qword_1EDD83340);
}

uint64_t static UITraitLayoutDirection.defaultValue.getter()
{
  return sub_1855925FC(&qword_1EDD83338, (uint64_t)&qword_1EDD83340);
}

void sub_1855929D4(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA68, (SEL *)&selRef_name, &qword_1EDD83350, &qword_1EDD83358);
}

uint64_t static UITraitLayoutDirection.name.getter()
{
  return sub_18559224C(&qword_1EDD83348, &qword_1EDD83350);
}

void sub_185592A14(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA68, (SEL *)&selRef_identifier, &qword_1EDD83368, &qword_1EDD83370);
}

uint64_t static UITraitLayoutDirection.identifier.getter()
{
  return sub_18559224C(&qword_1EDD83360, &qword_1EDD83368);
}

id sub_185592A54(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BA68, byte_1EDD83380);
}

uint64_t static UITraitLayoutDirection.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD83378, byte_1EDD83380);
}

uint64_t static UITraitLayoutDirection._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitLayoutDirection._isPrivate.getter()
{
  return 0;
}

uint64_t sub_185592A94@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD83338, &qword_1EDD83340, a1);
}

uint64_t sub_185592AB0(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83360, &qword_1EDD83368);
}

uint64_t sub_185592AD0(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83348, &qword_1EDD83350);
}

uint64_t sub_185592AF0(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD83378, byte_1EDD83380);
}

uint64_t sub_185592B0C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits.layoutDirection.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_185592B3C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits.layoutDirection.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void (*UIMutableTraits.layoutDirection.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0((unint64_t *)&unk_1ECD75778, (uint64_t (*)(uint64_t))type metadata accessor for UITraitEnvironmentLayoutDirection, (uint64_t)&unk_186667944);
  v8(&type metadata for UITraitLayoutDirection, &type metadata for UITraitLayoutDirection, &protocol witness table for UITraitLayoutDirection, v9, a2, a3);
  return sub_185592C08;
}

void sub_185592C08(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0((unint64_t *)&unk_1ECD75778, (uint64_t (*)(uint64_t))type metadata accessor for UITraitEnvironmentLayoutDirection, (uint64_t)&unk_186667944);
  v4(v1, &type metadata for UITraitLayoutDirection, &type metadata for UITraitLayoutDirection, &protocol witness table for UITraitLayoutDirection, v5, v3, v2);
  free(v1);
}

id sub_185592C8C(uint64_t a1)
{
  return sub_185596554(a1, (SEL *)&selRef_displayScale, &qword_1EDD83390);
}

double static UITraitDisplayScale.defaultValue.getter()
{
  return sub_1855965CC(&qword_1EDD83388, (uint64_t)&qword_1EDD83390);
}

void sub_185592CBC(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA38, (SEL *)&selRef_name, &qword_1EDD833A0, &qword_1EDD833A8);
}

uint64_t static UITraitDisplayScale.name.getter()
{
  return sub_18559224C(&qword_1EDD83398, &qword_1EDD833A0);
}

void sub_185592CFC(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA38, (SEL *)&selRef_identifier, &qword_1EDD833B8, &qword_1EDD833C0);
}

uint64_t static UITraitDisplayScale.identifier.getter()
{
  return sub_18559224C(&qword_1EDD833B0, &qword_1EDD833B8);
}

id sub_185592D3C(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BA38, byte_1EDD833D0);
}

uint64_t static UITraitDisplayScale.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD833C8, byte_1EDD833D0);
}

uint64_t static UITraitDisplayScale._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitDisplayScale._isPrivate.getter()
{
  return 0;
}

double sub_185592D7C@<D0>(_QWORD *a1@<X8>)
{
  return sub_1855966E0(&qword_1EDD83388, (double *)&qword_1EDD83390, a1);
}

uint64_t sub_185592D98(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD833B0, &qword_1EDD833B8);
}

uint64_t sub_185592DB8(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83398, &qword_1EDD833A0);
}

uint64_t sub_185592DD8(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD833C8, byte_1EDD833D0);
}

uint64_t sub_185592DF4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = UIMutableTraits.displayScale.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v5;
  return result;
}

uint64_t sub_185592E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits.displayScale.setter(*(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t (*UIMutableTraits.displayScale.modify(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)(a1 + 16) = a3;
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 8) = a2;
  *(double *)a1 = (*(double (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a3 + 32))(&type metadata for UITraitDisplayScale, &type metadata for UITraitDisplayScale, &protocol witness table for UITraitDisplayScale, a2, a3);
  return sub_185592EAC;
}

uint64_t sub_185592EAC(uint64_t a1, uint64_t a2)
{
  return sub_185596894(a1, a2, (uint64_t)&type metadata for UITraitDisplayScale, (uint64_t)&protocol witness table for UITraitDisplayScale);
}

id sub_185592EC0(uint64_t a1)
{
  return sub_18559823C(a1, (SEL *)&selRef_horizontalSizeClass, &qword_1EDD833E0);
}

uint64_t static UITraitHorizontalSizeClass.defaultValue.getter()
{
  return sub_1855925FC(&qword_1EDD833D8, (uint64_t)&qword_1EDD833E0);
}

void sub_185592EF0(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA50, (SEL *)&selRef_name, &qword_1EDD833F0, &qword_1EDD833F8);
}

uint64_t static UITraitHorizontalSizeClass.name.getter()
{
  return sub_18559224C(&qword_1EDD833E8, &qword_1EDD833F0);
}

void sub_185592F30(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA50, (SEL *)&selRef_identifier, &qword_1EDD83408, &qword_1EDD83410);
}

uint64_t static UITraitHorizontalSizeClass.identifier.getter()
{
  return sub_18559224C(&qword_1EDD83400, &qword_1EDD83408);
}

id sub_185592F70(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BA50, byte_1EDD83420);
}

uint64_t static UITraitHorizontalSizeClass.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD83418, byte_1EDD83420);
}

uint64_t static UITraitHorizontalSizeClass._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitHorizontalSizeClass._isPrivate.getter()
{
  return 0;
}

uint64_t sub_185592FB0@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD833D8, &qword_1EDD833E0, a1);
}

uint64_t sub_185592FCC(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83400, &qword_1EDD83408);
}

uint64_t sub_185592FEC(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD833E8, &qword_1EDD833F0);
}

uint64_t sub_18559300C(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD83418, byte_1EDD83420);
}

uint64_t sub_185593028@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits.horizontalSizeClass.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_185593058(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits.horizontalSizeClass.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void (*UIMutableTraits.horizontalSizeClass.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0((unint64_t *)&unk_1ECD75760, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceSizeClass, (uint64_t)&unk_186667908);
  v8(&type metadata for UITraitHorizontalSizeClass, &type metadata for UITraitHorizontalSizeClass, &protocol witness table for UITraitHorizontalSizeClass, v9, a2, a3);
  return sub_185593124;
}

void sub_185593124(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0((unint64_t *)&unk_1ECD75760, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceSizeClass, (uint64_t)&unk_186667908);
  v4(v1, &type metadata for UITraitHorizontalSizeClass, &type metadata for UITraitHorizontalSizeClass, &protocol witness table for UITraitHorizontalSizeClass, v5, v3, v2);
  free(v1);
}

id sub_1855931A8(uint64_t a1)
{
  return sub_18559823C(a1, (SEL *)&selRef_verticalSizeClass, &qword_1EDD83430);
}

uint64_t static UITraitVerticalSizeClass.defaultValue.getter()
{
  return sub_1855925FC(&qword_1EDD83428, (uint64_t)&qword_1EDD83430);
}

void sub_1855931D8(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAF8, (SEL *)&selRef_name, &qword_1EDD83440, &qword_1EDD83448);
}

uint64_t static UITraitVerticalSizeClass.name.getter()
{
  return sub_18559224C(&qword_1EDD83438, &qword_1EDD83440);
}

void sub_185593218(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAF8, (SEL *)&selRef_identifier, &qword_1EDD83458, &qword_1EDD83460);
}

uint64_t static UITraitVerticalSizeClass.identifier.getter()
{
  return sub_18559224C(&qword_1EDD83450, &qword_1EDD83458);
}

id sub_185593258(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BAF8, byte_1EDD83470);
}

uint64_t static UITraitVerticalSizeClass.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD83468, byte_1EDD83470);
}

uint64_t static UITraitVerticalSizeClass._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitVerticalSizeClass._isPrivate.getter()
{
  return 0;
}

uint64_t sub_185593298@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD83428, &qword_1EDD83430, a1);
}

uint64_t sub_1855932B4(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83450, &qword_1EDD83458);
}

uint64_t sub_1855932D4(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83438, &qword_1EDD83440);
}

uint64_t sub_1855932F4(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD83468, byte_1EDD83470);
}

uint64_t sub_185593310@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits.verticalSizeClass.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_185593340(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits.verticalSizeClass.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void (*UIMutableTraits.verticalSizeClass.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0((unint64_t *)&unk_1ECD75760, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceSizeClass, (uint64_t)&unk_186667908);
  v8(&type metadata for UITraitVerticalSizeClass, &type metadata for UITraitVerticalSizeClass, &protocol witness table for UITraitVerticalSizeClass, v9, a2, a3);
  return sub_18559340C;
}

void sub_18559340C(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0((unint64_t *)&unk_1ECD75760, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceSizeClass, (uint64_t)&unk_186667908);
  v4(v1, &type metadata for UITraitVerticalSizeClass, &type metadata for UITraitVerticalSizeClass, &protocol witness table for UITraitVerticalSizeClass, v5, v3, v2);
  free(v1);
}

id sub_185593490(uint64_t a1)
{
  return sub_18559823C(a1, (SEL *)&selRef_forceTouchCapability, &qword_1EDD83480);
}

uint64_t static UITraitForceTouchCapability.defaultValue.getter()
{
  return sub_1855925FC(&qword_1EDD83478, (uint64_t)&qword_1EDD83480);
}

void sub_1855934C0(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA48, (SEL *)&selRef_name, &qword_1EDD83490, &qword_1EDD83498);
}

uint64_t static UITraitForceTouchCapability.name.getter()
{
  return sub_18559224C(&qword_1EDD83488, &qword_1EDD83490);
}

void sub_185593500(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA48, (SEL *)&selRef_identifier, &qword_1EDD834A8, &qword_1EDD834B0);
}

uint64_t static UITraitForceTouchCapability.identifier.getter()
{
  return sub_18559224C(&qword_1EDD834A0, &qword_1EDD834A8);
}

id sub_185593540(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BA48, byte_1EDD834C0);
}

uint64_t static UITraitForceTouchCapability.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD834B8, byte_1EDD834C0);
}

uint64_t static UITraitForceTouchCapability._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitForceTouchCapability._isPrivate.getter()
{
  return 0;
}

uint64_t sub_185593580@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD83478, &qword_1EDD83480, a1);
}

uint64_t sub_18559359C(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD834A0, &qword_1EDD834A8);
}

uint64_t sub_1855935BC(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83488, &qword_1EDD83490);
}

uint64_t sub_1855935DC(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD834B8, byte_1EDD834C0);
}

uint64_t UIMutableTraits.forceTouchCapability.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  v5 = sub_1852478E0(&qword_1EDD83EB8, (uint64_t (*)(uint64_t))type metadata accessor for UIForceTouchCapability, (uint64_t)&unk_1866678CC);
  v4(&v7, &type metadata for UITraitForceTouchCapability, &type metadata for UITraitForceTouchCapability, &protocol witness table for UITraitForceTouchCapability, v5, a1, a2);
  return v7;
}

uint64_t sub_185593674@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits.forceTouchCapability.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_1855936A4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits.forceTouchCapability.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t UIMutableTraits.forceTouchCapability.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1852478E0(&qword_1EDD83EB8, (uint64_t (*)(uint64_t))type metadata accessor for UIForceTouchCapability, (uint64_t)&unk_1866678CC);
  return v5(&v8, &type metadata for UITraitForceTouchCapability, &type metadata for UITraitForceTouchCapability, &protocol witness table for UITraitForceTouchCapability, v6, a2, a3);
}

void (*UIMutableTraits.forceTouchCapability.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0(&qword_1EDD83EB8, (uint64_t (*)(uint64_t))type metadata accessor for UIForceTouchCapability, (uint64_t)&unk_1866678CC);
  v8(&type metadata for UITraitForceTouchCapability, &type metadata for UITraitForceTouchCapability, &protocol witness table for UITraitForceTouchCapability, v9, a2, a3);
  return sub_1855937EC;
}

void sub_1855937EC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0(&qword_1EDD83EB8, (uint64_t (*)(uint64_t))type metadata accessor for UIForceTouchCapability, (uint64_t)&unk_1866678CC);
  v4(v1, &type metadata for UITraitForceTouchCapability, &type metadata for UITraitForceTouchCapability, &protocol witness table for UITraitForceTouchCapability, v5, v3, v2);
  free(v1);
}

id sub_185593870()
{
  id result;

  if (qword_1EDD83288 != -1)
    swift_once();
  result = objc_msgSend((id)qword_1EDD83290, sel_preferredContentSizeCategory);
  qword_1EDD834D0 = (uint64_t)result;
  return result;
}

id static UITraitPreferredContentSizeCategory.defaultValue.getter()
{
  if (qword_1EDD834C8 != -1)
    swift_once();
  return (id)qword_1EDD834D0;
}

void sub_18559390C(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA80, (SEL *)&selRef_name, &qword_1EDD834E0, &qword_1EDD834E8);
}

uint64_t static UITraitPreferredContentSizeCategory.name.getter()
{
  return sub_18559224C(&qword_1EDD834D8, &qword_1EDD834E0);
}

void sub_18559394C(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA80, (SEL *)&selRef_identifier, &qword_1EDD834F8, &qword_1EDD83500);
}

uint64_t static UITraitPreferredContentSizeCategory.identifier.getter()
{
  return sub_18559224C(&qword_1EDD834F0, &qword_1EDD834F8);
}

id sub_18559398C(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BA80, byte_1EDD83510);
}

uint64_t static UITraitPreferredContentSizeCategory.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD83508, byte_1EDD83510);
}

uint64_t static UITraitPreferredContentSizeCategory._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitPreferredContentSizeCategory._isPrivate.getter()
{
  return 0;
}

id sub_1855939CC@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_1EDD834C8 != -1)
    swift_once();
  v2 = (void *)qword_1EDD834D0;
  *a1 = qword_1EDD834D0;
  return v2;
}

uint64_t sub_185593A1C(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD834F0, &qword_1EDD834F8);
}

uint64_t sub_185593A3C(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD834D8, &qword_1EDD834E0);
}

uint64_t sub_185593A5C(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD83508, byte_1EDD83510);
}

uint64_t sub_185593A78@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits.preferredContentSizeCategory.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_185593AA8(id *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits.preferredContentSizeCategory.setter((uint64_t)*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void (*UIMutableTraits.preferredContentSizeCategory.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(id **a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 296);
  v9 = sub_1852478E0((unint64_t *)&unk_1ECD75730, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_186667890);
  v8(&type metadata for UITraitPreferredContentSizeCategory, &type metadata for UITraitPreferredContentSizeCategory, &protocol witness table for UITraitPreferredContentSizeCategory, v9, a2, a3);
  return sub_185593B88;
}

void sub_185593B88(id **a1, char a2)
{
  id *v2;
  id v3;
  _QWORD *v4;
  id v5;
  void (*v6)(id *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, id, _QWORD *);
  uint64_t v7;
  void (*v8)(id *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, id, _QWORD *);
  uint64_t v9;

  v2 = *a1;
  v3 = (*a1)[1];
  v4 = (*a1)[3];
  v5 = (*a1)[2];
  if ((a2 & 1) != 0)
  {
    *v2 = v3;
    v6 = (void (*)(id *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, id, _QWORD *))v4[38];
    v7 = sub_1852478E0((unint64_t *)&unk_1ECD75730, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_186667890);
    v6(v2, &type metadata for UITraitPreferredContentSizeCategory, &type metadata for UITraitPreferredContentSizeCategory, &protocol witness table for UITraitPreferredContentSizeCategory, v7, v5, v4);

  }
  else
  {
    *v2 = v3;
    v8 = (void (*)(id *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, id, _QWORD *))v4[38];
    v9 = sub_1852478E0((unint64_t *)&unk_1ECD75730, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_186667890);
    v8(v2, &type metadata for UITraitPreferredContentSizeCategory, &type metadata for UITraitPreferredContentSizeCategory, &protocol witness table for UITraitPreferredContentSizeCategory, v9, v5, v4);
  }
  free(v2);
}

id sub_185593C74(uint64_t a1)
{
  return sub_18559823C(a1, (SEL *)&selRef_displayGamut, &qword_1EDD83520);
}

uint64_t static UITraitDisplayGamut.defaultValue.getter()
{
  return sub_1855925FC(&qword_1EDD83518, (uint64_t)&qword_1EDD83520);
}

void sub_185593CA4(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA30, (SEL *)&selRef_name, &qword_1EDD83530, &qword_1EDD83538);
}

uint64_t static UITraitDisplayGamut.name.getter()
{
  return sub_18559224C(&qword_1EDD83528, &qword_1EDD83530);
}

void sub_185593CE4(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA30, (SEL *)&selRef_identifier, &qword_1EDD83548, &qword_1EDD83550);
}

uint64_t static UITraitDisplayGamut.identifier.getter()
{
  return sub_18559224C(&qword_1EDD83540, &qword_1EDD83548);
}

id sub_185593D24(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BA30, byte_1EDD83560);
}

uint64_t static UITraitDisplayGamut.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD83558, byte_1EDD83560);
}

uint64_t static UITraitDisplayGamut._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitDisplayGamut._isPrivate.getter()
{
  return 0;
}

uint64_t sub_185593D64@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD83518, &qword_1EDD83520, a1);
}

uint64_t sub_185593D80(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83540, &qword_1EDD83548);
}

uint64_t sub_185593DA0(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83528, &qword_1EDD83530);
}

uint64_t sub_185593DC0(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD83558, byte_1EDD83560);
}

uint64_t sub_185593DDC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits.displayGamut.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_185593E0C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits.displayGamut.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void (*UIMutableTraits.displayGamut.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0((unint64_t *)&unk_1ECD756F8, (uint64_t (*)(uint64_t))type metadata accessor for UIDisplayGamut, (uint64_t)&unk_186667854);
  v8(&type metadata for UITraitDisplayGamut, &type metadata for UITraitDisplayGamut, &protocol witness table for UITraitDisplayGamut, v9, a2, a3);
  return sub_185593ED8;
}

void sub_185593ED8(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0((unint64_t *)&unk_1ECD756F8, (uint64_t (*)(uint64_t))type metadata accessor for UIDisplayGamut, (uint64_t)&unk_186667854);
  v4(v1, &type metadata for UITraitDisplayGamut, &type metadata for UITraitDisplayGamut, &protocol witness table for UITraitDisplayGamut, v5, v3, v2);
  free(v1);
}

id sub_185593F5C(uint64_t a1)
{
  return sub_18559823C(a1, (SEL *)&selRef_accessibilityContrast, &qword_1EDD83570);
}

uint64_t static UITraitAccessibilityContrast.defaultValue.getter()
{
  return sub_1855925FC(&qword_1EDD83568, (uint64_t)&qword_1EDD83570);
}

void sub_185593F8C(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167B9F8, (SEL *)&selRef_name, &qword_1EDD83580, &qword_1EDD83588);
}

uint64_t static UITraitAccessibilityContrast.name.getter()
{
  return sub_18559224C(&qword_1EDD83578, &qword_1EDD83580);
}

void sub_185593FCC(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167B9F8, (SEL *)&selRef_identifier, &qword_1EDD83598, &qword_1EDD835A0);
}

uint64_t static UITraitAccessibilityContrast.identifier.getter()
{
  return sub_18559224C(&qword_1EDD83590, &qword_1EDD83598);
}

id sub_18559400C(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167B9F8, byte_1EDD835B0);
}

uint64_t static UITraitAccessibilityContrast.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD835A8, byte_1EDD835B0);
}

uint64_t static UITraitAccessibilityContrast._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitAccessibilityContrast._isPrivate.getter()
{
  return 0;
}

uint64_t sub_18559404C@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD83568, &qword_1EDD83570, a1);
}

uint64_t sub_185594068(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83590, &qword_1EDD83598);
}

uint64_t sub_185594088(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83578, &qword_1EDD83580);
}

uint64_t sub_1855940A8(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD835A8, byte_1EDD835B0);
}

uint64_t sub_1855940C4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits.accessibilityContrast.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_1855940F4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits.accessibilityContrast.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void (*UIMutableTraits.accessibilityContrast.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0((unint64_t *)&unk_1ECD75740, (uint64_t (*)(uint64_t))type metadata accessor for UIAccessibilityContrast, (uint64_t)&unk_186667818);
  v8(&type metadata for UITraitAccessibilityContrast, &type metadata for UITraitAccessibilityContrast, &protocol witness table for UITraitAccessibilityContrast, v9, a2, a3);
  return sub_1855941C0;
}

void sub_1855941C0(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0((unint64_t *)&unk_1ECD75740, (uint64_t (*)(uint64_t))type metadata accessor for UIAccessibilityContrast, (uint64_t)&unk_186667818);
  v4(v1, &type metadata for UITraitAccessibilityContrast, &type metadata for UITraitAccessibilityContrast, &protocol witness table for UITraitAccessibilityContrast, v5, v3, v2);
  free(v1);
}

id sub_185594244(uint64_t a1)
{
  return sub_18559823C(a1, (SEL *)&selRef_userInterfaceLevel, &qword_1EDD835C0);
}

uint64_t static UITraitUserInterfaceLevel.defaultValue.getter()
{
  return sub_1855925FC(&qword_1EDD835B8, (uint64_t)&qword_1EDD835C0);
}

void sub_185594274(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAE0, (SEL *)&selRef_name, &qword_1EDD835D0, &qword_1EDD835D8);
}

uint64_t static UITraitUserInterfaceLevel.name.getter()
{
  return sub_18559224C(&qword_1EDD835C8, &qword_1EDD835D0);
}

void sub_1855942B4(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAE0, (SEL *)&selRef_identifier, &qword_1EDD835E8, &qword_1EDD835F0);
}

uint64_t static UITraitUserInterfaceLevel.identifier.getter()
{
  return sub_18559224C(&qword_1EDD835E0, &qword_1EDD835E8);
}

id sub_1855942F4(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BAE0, byte_1EDD83600);
}

uint64_t static UITraitUserInterfaceLevel.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD835F8, byte_1EDD83600);
}

uint64_t static UITraitUserInterfaceLevel._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitUserInterfaceLevel._isPrivate.getter()
{
  return 0;
}

uint64_t sub_185594334@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD835B8, &qword_1EDD835C0, a1);
}

uint64_t sub_185594350(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD835E0, &qword_1EDD835E8);
}

uint64_t sub_185594370(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD835C8, &qword_1EDD835D0);
}

uint64_t sub_185594390(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD835F8, byte_1EDD83600);
}

uint64_t sub_1855943AC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits.userInterfaceLevel.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_1855943DC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits.userInterfaceLevel.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

void (*UIMutableTraits.userInterfaceLevel.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0((unint64_t *)&unk_1ECD756A8, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceLevel, (uint64_t)&unk_1866677DC);
  v8(&type metadata for UITraitUserInterfaceLevel, &type metadata for UITraitUserInterfaceLevel, &protocol witness table for UITraitUserInterfaceLevel, v9, a2, a3);
  return sub_1855944A8;
}

void sub_1855944A8(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0((unint64_t *)&unk_1ECD756A8, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceLevel, (uint64_t)&unk_1866677DC);
  v4(v1, &type metadata for UITraitUserInterfaceLevel, &type metadata for UITraitUserInterfaceLevel, &protocol witness table for UITraitUserInterfaceLevel, v5, v3, v2);
  free(v1);
}

id sub_18559452C(uint64_t a1)
{
  return sub_18559823C(a1, (SEL *)&selRef_legibilityWeight, &qword_1EDD83610);
}

uint64_t static UITraitLegibilityWeight.defaultValue.getter()
{
  return sub_1855925FC(&qword_1EDD83608, (uint64_t)&qword_1EDD83610);
}

void sub_18559455C(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA70, (SEL *)&selRef_name, &qword_1EDD83620, &qword_1EDD83628);
}

uint64_t static UITraitLegibilityWeight.name.getter()
{
  return sub_18559224C(&qword_1EDD83618, &qword_1EDD83620);
}

void sub_18559459C(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA70, (SEL *)&selRef_identifier, &qword_1EDD83638, &qword_1EDD83640);
}

uint64_t static UITraitLegibilityWeight.identifier.getter()
{
  return sub_18559224C(&qword_1EDD83630, &qword_1EDD83638);
}

id sub_1855945DC(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BA70, byte_1EDD83650);
}

uint64_t static UITraitLegibilityWeight.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD83648, byte_1EDD83650);
}

uint64_t static UITraitLegibilityWeight._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitLegibilityWeight._isPrivate.getter()
{
  return 0;
}

uint64_t sub_18559461C@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD83608, &qword_1EDD83610, a1);
}

uint64_t sub_185594638(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83630, &qword_1EDD83638);
}

uint64_t sub_185594658(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83618, &qword_1EDD83620);
}

uint64_t sub_185594678(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD83648, byte_1EDD83650);
}

uint64_t UIMutableTraits.legibilityWeight.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  v5 = sub_1852478E0((unint64_t *)&unk_1EDD83EC0, (uint64_t (*)(uint64_t))type metadata accessor for UILegibilityWeight, (uint64_t)&unk_1866677A0);
  v4(&v7, &type metadata for UITraitLegibilityWeight, &type metadata for UITraitLegibilityWeight, &protocol witness table for UITraitLegibilityWeight, v5, a1, a2);
  return v7;
}

uint64_t sub_185594710@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits.legibilityWeight.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_185594740(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits.legibilityWeight.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t UIMutableTraits.legibilityWeight.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1852478E0((unint64_t *)&unk_1EDD83EC0, (uint64_t (*)(uint64_t))type metadata accessor for UILegibilityWeight, (uint64_t)&unk_1866677A0);
  return v5(&v8, &type metadata for UITraitLegibilityWeight, &type metadata for UITraitLegibilityWeight, &protocol witness table for UITraitLegibilityWeight, v6, a2, a3);
}

void (*UIMutableTraits.legibilityWeight.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0((unint64_t *)&unk_1EDD83EC0, (uint64_t (*)(uint64_t))type metadata accessor for UILegibilityWeight, (uint64_t)&unk_1866677A0);
  v8(&type metadata for UITraitLegibilityWeight, &type metadata for UITraitLegibilityWeight, &protocol witness table for UITraitLegibilityWeight, v9, a2, a3);
  return sub_185594888;
}

void sub_185594888(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0((unint64_t *)&unk_1EDD83EC0, (uint64_t (*)(uint64_t))type metadata accessor for UILegibilityWeight, (uint64_t)&unk_1866677A0);
  v4(v1, &type metadata for UITraitLegibilityWeight, &type metadata for UITraitLegibilityWeight, &protocol witness table for UITraitLegibilityWeight, v5, v3, v2);
  free(v1);
}

id sub_18559490C(uint64_t a1)
{
  return sub_18559823C(a1, (SEL *)&selRef_activeAppearance, &qword_1EDD83660);
}

uint64_t static UITraitActiveAppearance.defaultValue.getter()
{
  return sub_1855925FC(&qword_1EDD83658, (uint64_t)&qword_1EDD83660);
}

void sub_18559493C(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA00, (SEL *)&selRef_name, &qword_1EDD83670, &qword_1EDD83678);
}

uint64_t static UITraitActiveAppearance.name.getter()
{
  return sub_18559224C(&qword_1EDD83668, &qword_1EDD83670);
}

void sub_18559497C(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA00, (SEL *)&selRef_identifier, &qword_1EDD83688, &qword_1EDD83690);
}

uint64_t static UITraitActiveAppearance.identifier.getter()
{
  return sub_18559224C(&qword_1EDD83680, &qword_1EDD83688);
}

id sub_1855949BC(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BA00, byte_1EDD836A0);
}

uint64_t static UITraitActiveAppearance.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD83698, byte_1EDD836A0);
}

uint64_t static UITraitActiveAppearance._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitActiveAppearance._isPrivate.getter()
{
  return 0;
}

uint64_t sub_1855949FC@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD83658, &qword_1EDD83660, a1);
}

uint64_t sub_185594A18(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83680, &qword_1EDD83688);
}

uint64_t sub_185594A38(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83668, &qword_1EDD83670);
}

uint64_t sub_185594A58(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD83698, byte_1EDD836A0);
}

uint64_t UIMutableTraits.activeAppearance.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  v5 = sub_1852478E0(&qword_1ECD75568, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceActiveAppearance, (uint64_t)&unk_186667764);
  v4(&v7, &type metadata for UITraitActiveAppearance, &type metadata for UITraitActiveAppearance, &protocol witness table for UITraitActiveAppearance, v5, a1, a2);
  return v7;
}

uint64_t sub_185594AF0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits.activeAppearance.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_185594B20(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits.activeAppearance.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t UIMutableTraits.activeAppearance.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1852478E0(&qword_1ECD75568, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceActiveAppearance, (uint64_t)&unk_186667764);
  return v5(&v8, &type metadata for UITraitActiveAppearance, &type metadata for UITraitActiveAppearance, &protocol witness table for UITraitActiveAppearance, v6, a2, a3);
}

void (*UIMutableTraits.activeAppearance.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0(&qword_1ECD75568, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceActiveAppearance, (uint64_t)&unk_186667764);
  v8(&type metadata for UITraitActiveAppearance, &type metadata for UITraitActiveAppearance, &protocol witness table for UITraitActiveAppearance, v9, a2, a3);
  return sub_185594C68;
}

void sub_185594C68(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0(&qword_1ECD75568, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceActiveAppearance, (uint64_t)&unk_186667764);
  v4(v1, &type metadata for UITraitActiveAppearance, &type metadata for UITraitActiveAppearance, &protocol witness table for UITraitActiveAppearance, v5, v3, v2);
  free(v1);
}

id sub_185594CEC(uint64_t a1)
{
  return sub_18559823C(a1, (SEL *)&selRef_toolbarItemPresentationSize, &qword_1EDD836B0);
}

uint64_t static UITraitToolbarItemPresentationSize.defaultValue.getter()
{
  return sub_1855925FC(&qword_1EDD836A8, (uint64_t)&qword_1EDD836B0);
}

void sub_185594D1C(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAB8, (SEL *)&selRef_name, &qword_1EDD836C0, &qword_1EDD836C8);
}

uint64_t static UITraitToolbarItemPresentationSize.name.getter()
{
  return sub_18559224C(&qword_1EDD836B8, &qword_1EDD836C0);
}

void sub_185594D5C(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAB8, (SEL *)&selRef_identifier, &qword_1EDD836D8, &qword_1EDD836E0);
}

uint64_t static UITraitToolbarItemPresentationSize.identifier.getter()
{
  return sub_18559224C(&qword_1EDD836D0, &qword_1EDD836D8);
}

id sub_185594D9C(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BAB8, byte_1EDD836F0);
}

uint64_t static UITraitToolbarItemPresentationSize.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD836E8, byte_1EDD836F0);
}

uint64_t static UITraitToolbarItemPresentationSize._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitToolbarItemPresentationSize._isPrivate.getter()
{
  return 0;
}

uint64_t sub_185594DDC@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD836A8, &qword_1EDD836B0, a1);
}

uint64_t sub_185594DF8(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD836D0, &qword_1EDD836D8);
}

uint64_t sub_185594E18(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD836B8, &qword_1EDD836C0);
}

uint64_t sub_185594E38(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD836E8, byte_1EDD836F0);
}

uint64_t UIMutableTraits.toolbarItemPresentationSize.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  v5 = sub_1852478E0(&qword_1EDD83ED0, (uint64_t (*)(uint64_t))type metadata accessor for UINSToolbarItemPresentationSize, (uint64_t)&unk_186667728);
  v4(&v7, &type metadata for UITraitToolbarItemPresentationSize, &type metadata for UITraitToolbarItemPresentationSize, &protocol witness table for UITraitToolbarItemPresentationSize, v5, a1, a2);
  return v7;
}

uint64_t sub_185594ED0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits.toolbarItemPresentationSize.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_185594F00(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits.toolbarItemPresentationSize.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t UIMutableTraits.toolbarItemPresentationSize.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1852478E0(&qword_1EDD83ED0, (uint64_t (*)(uint64_t))type metadata accessor for UINSToolbarItemPresentationSize, (uint64_t)&unk_186667728);
  return v5(&v8, &type metadata for UITraitToolbarItemPresentationSize, &type metadata for UITraitToolbarItemPresentationSize, &protocol witness table for UITraitToolbarItemPresentationSize, v6, a2, a3);
}

void (*UIMutableTraits.toolbarItemPresentationSize.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0(&qword_1EDD83ED0, (uint64_t (*)(uint64_t))type metadata accessor for UINSToolbarItemPresentationSize, (uint64_t)&unk_186667728);
  v8(&type metadata for UITraitToolbarItemPresentationSize, &type metadata for UITraitToolbarItemPresentationSize, &protocol witness table for UITraitToolbarItemPresentationSize, v9, a2, a3);
  return sub_185595048;
}

void sub_185595048(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0(&qword_1EDD83ED0, (uint64_t (*)(uint64_t))type metadata accessor for UINSToolbarItemPresentationSize, (uint64_t)&unk_186667728);
  v4(v1, &type metadata for UITraitToolbarItemPresentationSize, &type metadata for UITraitToolbarItemPresentationSize, &protocol witness table for UITraitToolbarItemPresentationSize, v5, v3, v2);
  free(v1);
}

uint64_t static UITraitImageDynamicRange.defaultValue.getter()
{
  return -1;
}

void sub_1855950D4(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA58, (SEL *)&selRef_name, &qword_1EDD83700, &qword_1EDD83708);
}

uint64_t static UITraitImageDynamicRange.name.getter()
{
  return sub_18559224C(&qword_1EDD836F8, &qword_1EDD83700);
}

void sub_185595114(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA58, (SEL *)&selRef_identifier, &qword_1EDD83718, &qword_1EDD83720);
}

uint64_t static UITraitImageDynamicRange.identifier.getter()
{
  return sub_18559224C(&qword_1EDD83710, &qword_1EDD83718);
}

id sub_185595154(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BA58, byte_1EDD83730);
}

uint64_t static UITraitImageDynamicRange.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD83728, byte_1EDD83730);
}

uint64_t static UITraitImageDynamicRange._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitImageDynamicRange._isPrivate.getter()
{
  return 0;
}

void sub_185595194(_QWORD *a1@<X8>)
{
  *a1 = -1;
}

uint64_t sub_1855951A0(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83710, &qword_1EDD83718);
}

uint64_t sub_1855951C0(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD836F8, &qword_1EDD83700);
}

uint64_t sub_1855951E0(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD83728, byte_1EDD83730);
}

uint64_t UIMutableTraits.imageDynamicRange.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  v5 = sub_1852478E0(&qword_1EDD83ED8, (uint64_t (*)(uint64_t))type metadata accessor for DynamicRange, (uint64_t)&unk_1866676EC);
  v4(&v7, &type metadata for UITraitImageDynamicRange, &type metadata for UITraitImageDynamicRange, &protocol witness table for UITraitImageDynamicRange, v5, a1, a2);
  return v7;
}

uint64_t sub_185595278@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits.imageDynamicRange.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_1855952A8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits.imageDynamicRange.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t UIMutableTraits.imageDynamicRange.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1852478E0(&qword_1EDD83ED8, (uint64_t (*)(uint64_t))type metadata accessor for DynamicRange, (uint64_t)&unk_1866676EC);
  return v5(&v8, &type metadata for UITraitImageDynamicRange, &type metadata for UITraitImageDynamicRange, &protocol witness table for UITraitImageDynamicRange, v6, a2, a3);
}

void (*UIMutableTraits.imageDynamicRange.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0(&qword_1EDD83ED8, (uint64_t (*)(uint64_t))type metadata accessor for DynamicRange, (uint64_t)&unk_1866676EC);
  v8(&type metadata for UITraitImageDynamicRange, &type metadata for UITraitImageDynamicRange, &protocol witness table for UITraitImageDynamicRange, v9, a2, a3);
  return sub_1855953F0;
}

void sub_1855953F0(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0(&qword_1EDD83ED8, (uint64_t (*)(uint64_t))type metadata accessor for DynamicRange, (uint64_t)&unk_1866676EC);
  v4(v1, &type metadata for UITraitImageDynamicRange, &type metadata for UITraitImageDynamicRange, &protocol witness table for UITraitImageDynamicRange, v5, v3, v2);
  free(v1);
}

uint64_t static UITraitSceneCaptureState.defaultValue.getter()
{
  return -1;
}

void sub_18559547C(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA98, (SEL *)&selRef_name, &qword_1EDD83740, &qword_1EDD83748);
}

uint64_t static UITraitSceneCaptureState.name.getter()
{
  return sub_18559224C(&qword_1EDD83738, &qword_1EDD83740);
}

void sub_1855954BC(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA98, (SEL *)&selRef_identifier, &qword_1EDD83758, &qword_1EDD83760);
}

uint64_t static UITraitSceneCaptureState.identifier.getter()
{
  return sub_18559224C(&qword_1EDD83750, &qword_1EDD83758);
}

id sub_1855954FC(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BA98, byte_1EDD83770);
}

uint64_t static UITraitSceneCaptureState.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD83768, byte_1EDD83770);
}

uint64_t static UITraitSceneCaptureState._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitSceneCaptureState._isPrivate.getter()
{
  return 0;
}

uint64_t sub_18559553C(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83750, &qword_1EDD83758);
}

uint64_t sub_18559555C(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83738, &qword_1EDD83740);
}

uint64_t sub_18559557C(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD83768, byte_1EDD83770);
}

uint64_t UIMutableTraits.sceneCaptureState.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  v5 = sub_1852478E0((unint64_t *)&unk_1EDD83EE0, (uint64_t (*)(uint64_t))type metadata accessor for UISceneCaptureState, (uint64_t)&unk_1866676B0);
  v4(&v7, &type metadata for UITraitSceneCaptureState, &type metadata for UITraitSceneCaptureState, &protocol witness table for UITraitSceneCaptureState, v5, a1, a2);
  return v7;
}

uint64_t sub_185595614@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits.sceneCaptureState.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_185595644(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits.sceneCaptureState.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t UIMutableTraits.sceneCaptureState.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1852478E0((unint64_t *)&unk_1EDD83EE0, (uint64_t (*)(uint64_t))type metadata accessor for UISceneCaptureState, (uint64_t)&unk_1866676B0);
  return v5(&v8, &type metadata for UITraitSceneCaptureState, &type metadata for UITraitSceneCaptureState, &protocol witness table for UITraitSceneCaptureState, v6, a2, a3);
}

void (*UIMutableTraits.sceneCaptureState.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0((unint64_t *)&unk_1EDD83EE0, (uint64_t (*)(uint64_t))type metadata accessor for UISceneCaptureState, (uint64_t)&unk_1866676B0);
  v8(&type metadata for UITraitSceneCaptureState, &type metadata for UITraitSceneCaptureState, &protocol witness table for UITraitSceneCaptureState, v9, a2, a3);
  return sub_18559578C;
}

void sub_18559578C(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0((unint64_t *)&unk_1EDD83EE0, (uint64_t (*)(uint64_t))type metadata accessor for UISceneCaptureState, (uint64_t)&unk_1866676B0);
  v4(v1, &type metadata for UITraitSceneCaptureState, &type metadata for UITraitSceneCaptureState, &protocol witness table for UITraitSceneCaptureState, v5, v3, v2);
  free(v1);
}

uint64_t static UITraitTypesettingLanguage.defaultValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ECD75678 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD75628);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ECD75660);
  return sub_18519F0C4(v3, a1, (uint64_t *)&unk_1ECD75628);
}

uint64_t static UITraitTypesettingLanguage.name.getter()
{
  return sub_18559224C(&qword_1ECD75698, &qword_1ECD75680);
}

uint64_t static UITraitTypesettingLanguage.identifier.getter()
{
  return sub_18559224C(&qword_1ECD75650, &qword_1ECD75638);
}

uint64_t static UITraitTypesettingLanguage._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitTypesettingLanguage._isPrivate.getter()
{
  return 0;
}

uint64_t sub_1855958CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ECD75678 != -1)
    swift_once();
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD75628);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ECD75660);
  return sub_18519F0C4(v3, a1, (uint64_t *)&unk_1ECD75628);
}

uint64_t sub_185595938(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1ECD75650, &qword_1ECD75638);
}

uint64_t sub_185595958(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1ECD75698, &qword_1ECD75680);
}

id UITraitCollection.init(typesettingLanguage:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD75628);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18519F0C4(a1, (uint64_t)v4, (uint64_t *)&unk_1ECD75628);
  v5 = sub_18558B9A4((uint64_t)&type metadata for UITraitTypesettingLanguage, (uint64_t)v4);
  sub_18519F088(a1, (uint64_t *)&unk_1ECD75628);
  return v5;
}

uint64_t static UITraitTypesettingLanguage._value(from:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  if (a1)
  {
    swift_bridgeObjectRetain();
    sub_186506BE0();
    v3 = sub_186506BF8();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 0, 1, v3);
    v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD75628);
    v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
    v6 = a2;
    v7 = 0;
  }
  else
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD75628);
    v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
    v6 = a2;
    v7 = 1;
  }
  return v5(v6, v7, 1, v4);
}

uint64_t sub_185595AC8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = _s5UIKit26UITraitTypesettingLanguageV15_customRawValue3forSSSg10Foundation6LocaleV0D0VSg_tFZ_0(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_185595AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  if (*(_QWORD *)(a1 + 8))
  {
    swift_bridgeObjectRetain();
    sub_186506BE0();
    v3 = sub_186506BF8();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 0, 1, v3);
    v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD75628);
    v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
    v6 = a2;
    v7 = 0;
  }
  else
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD75628);
    v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
    v6 = a2;
    v7 = 1;
  }
  return v5(v6, v7, 1, v4);
}

uint64_t UIMutableTraits.typesettingLanguage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a2 + 200))(&type metadata for UITraitTypesettingLanguage, &type metadata for UITraitTypesettingLanguage, &protocol witness table for UITraitTypesettingLanguage, a1, a2);
}

uint64_t sub_185595BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return UIMutableTraits.typesettingLanguage.getter(*(_QWORD *)(a3 + a2 - 16), *(_QWORD *)(a3 + a2 - 8));
}

uint64_t sub_185595BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v5 = *(_QWORD *)(a4 + a3 - 16);
  v6 = *(_QWORD *)(a4 + a3 - 8);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD75628);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18519F0C4(a1, (uint64_t)v9, (uint64_t *)&unk_1ECD75628);
  return UIMutableTraits.typesettingLanguage.setter((uint64_t)v9, v5, v6);
}

uint64_t UIMutableTraits.typesettingLanguage.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD75628);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18519F0C4(a1, (uint64_t)v8, (uint64_t *)&unk_1ECD75628);
  (*(void (**)(char *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a3 + 208))(v8, &type metadata for UITraitTypesettingLanguage, &type metadata for UITraitTypesettingLanguage, &protocol witness table for UITraitTypesettingLanguage, a2, a3);
  return sub_18519F088(a1, (uint64_t *)&unk_1ECD75628);
}

void (*UIMutableTraits.typesettingLanguage.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;
  size_t v8;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[1] = a3;
  v7[2] = v3;
  *v7 = a2;
  v8 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ECD75628) - 8) + 64);
  v7[3] = malloc(v8);
  v7[4] = malloc(v8);
  (*(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a3 + 200))(&type metadata for UITraitTypesettingLanguage, &type metadata for UITraitTypesettingLanguage, &protocol witness table for UITraitTypesettingLanguage, a2, a3);
  return sub_185595DEC;
}

void sub_185595DEC(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  v3 = (void *)(*a1)[3];
  v4 = (void *)(*a1)[4];
  v5 = (*a1)[1];
  v6 = **a1;
  if ((a2 & 1) != 0)
  {
    sub_18519F0C4((*a1)[4], (uint64_t)v3, (uint64_t *)&unk_1ECD75628);
    UIMutableTraits.typesettingLanguage.setter((uint64_t)v3, v6, v5);
    sub_18519F088((uint64_t)v4, (uint64_t *)&unk_1ECD75628);
  }
  else
  {
    UIMutableTraits.typesettingLanguage.setter((*a1)[4], v6, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

id sub_185595E8C(uint64_t a1)
{
  return sub_18559823C(a1, (SEL *)&selRef_touchLevel, &qword_1EDD83780);
}

uint64_t static UITraitTouchLevel.defaultValue.getter()
{
  return sub_1855925FC(&qword_1EDD83778, (uint64_t)&qword_1EDD83780);
}

void sub_185595EBC(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAC0, (SEL *)&selRef_name, &qword_1EDD83790, &qword_1EDD83798);
}

uint64_t static UITraitTouchLevel.name.getter()
{
  return sub_18559224C(&qword_1EDD83788, &qword_1EDD83790);
}

void sub_185595EFC(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAC0, (SEL *)&selRef_identifier, &qword_1EDD837A8, &qword_1EDD837B0);
}

uint64_t static UITraitTouchLevel.identifier.getter()
{
  return sub_18559224C(&qword_1EDD837A0, &qword_1EDD837A8);
}

id sub_185595F3C(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BAC0, byte_1EDD837C0);
}

uint64_t static UITraitTouchLevel.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD837B8, byte_1EDD837C0);
}

uint64_t static UITraitTouchLevel._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitTouchLevel._isPrivate.getter()
{
  return 1;
}

uint64_t sub_185595F7C@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD83778, &qword_1EDD83780, a1);
}

uint64_t sub_185595F98(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD837A0, &qword_1EDD837A8);
}

uint64_t sub_185595FB8(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83788, &qword_1EDD83790);
}

uint64_t sub_185595FD8(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD837B8, byte_1EDD837C0);
}

uint64_t UIMutableTraits.touchLevel.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  v5 = sub_1852478E0(&qword_1EDD83EF0, (uint64_t (*)(uint64_t))type metadata accessor for UIScreenTouchLevel, (uint64_t)&unk_186667678);
  v4(&v7, &type metadata for UITraitTouchLevel, &type metadata for UITraitTouchLevel, &protocol witness table for UITraitTouchLevel, v5, a1, a2);
  return v7;
}

uint64_t sub_185596070@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits.touchLevel.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_1855960A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits.touchLevel.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t UIMutableTraits.touchLevel.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1852478E0(&qword_1EDD83EF0, (uint64_t (*)(uint64_t))type metadata accessor for UIScreenTouchLevel, (uint64_t)&unk_186667678);
  return v5(&v8, &type metadata for UITraitTouchLevel, &type metadata for UITraitTouchLevel, &protocol witness table for UITraitTouchLevel, v6, a2, a3);
}

void (*UIMutableTraits.touchLevel.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0(&qword_1EDD83EF0, (uint64_t (*)(uint64_t))type metadata accessor for UIScreenTouchLevel, (uint64_t)&unk_186667678);
  v8(&type metadata for UITraitTouchLevel, &type metadata for UITraitTouchLevel, &protocol witness table for UITraitTouchLevel, v9, a2, a3);
  return sub_1855961E8;
}

void sub_1855961E8(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0(&qword_1EDD83EF0, (uint64_t (*)(uint64_t))type metadata accessor for UIScreenTouchLevel, (uint64_t)&unk_186667678);
  v4(v1, &type metadata for UITraitTouchLevel, &type metadata for UITraitTouchLevel, &protocol witness table for UITraitTouchLevel, v5, v3, v2);
  free(v1);
}

id sub_18559626C(uint64_t a1)
{
  return sub_18559823C(a1, (SEL *)&selRef_artworkSubtype, &qword_1EDD837D0);
}

uint64_t static UITraitArtworkSubtype.defaultValue.getter()
{
  return sub_1855925FC(&qword_1EDD837C8, (uint64_t)&qword_1EDD837D0);
}

void sub_18559629C(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA08, (SEL *)&selRef_name, &qword_1EDD837E0, &qword_1EDD837E8);
}

uint64_t static UITraitArtworkSubtype.name.getter()
{
  return sub_18559224C(&qword_1EDD837D8, &qword_1EDD837E0);
}

void sub_1855962DC(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA08, (SEL *)&selRef_identifier, &qword_1EDD837F8, &qword_1EDD83800);
}

uint64_t static UITraitArtworkSubtype.identifier.getter()
{
  return sub_18559224C(&qword_1EDD837F0, &qword_1EDD837F8);
}

id sub_18559631C(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BA08, byte_1EDD83810);
}

uint64_t static UITraitArtworkSubtype.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD83808, byte_1EDD83810);
}

uint64_t static UITraitArtworkSubtype._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitArtworkSubtype._isPrivate.getter()
{
  return 1;
}

uint64_t sub_18559635C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  if (qword_1EDD837C8 != -1)
    result = swift_once();
  *a1 = qword_1EDD837D0;
  return result;
}

uint64_t sub_1855963AC(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD837F0, &qword_1EDD837F8);
}

uint64_t sub_1855963CC(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD837D8, &qword_1EDD837E0);
}

uint64_t sub_1855963EC(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD83808, byte_1EDD83810);
}

uint64_t UIMutableTraits.artworkSubtype.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a2 + 128))(&type metadata for UITraitArtworkSubtype, &type metadata for UITraitArtworkSubtype, &protocol witness table for UITraitArtworkSubtype, a1, a2);
}

uint64_t sub_18559642C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits.artworkSubtype.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_18559645C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits.artworkSubtype.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t UIMutableTraits.artworkSubtype.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a3 + 136))(a1, &type metadata for UITraitArtworkSubtype, &type metadata for UITraitArtworkSubtype, &protocol witness table for UITraitArtworkSubtype, a2, a3);
}

uint64_t (*UIMutableTraits.artworkSubtype.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  uint64_t v3;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  *a1 = (*(uint64_t (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a3 + 128))(&type metadata for UITraitArtworkSubtype, &type metadata for UITraitArtworkSubtype, &protocol witness table for UITraitArtworkSubtype, a2, a3);
  return sub_185596504;
}

uint64_t sub_185596504(_QWORD *a1)
{
  return (*(uint64_t (**)(_QWORD, ValueMetadata *, ValueMetadata *, _UNKNOWN **, _QWORD))(a1[2] + 136))(*a1, &type metadata for UITraitArtworkSubtype, &type metadata for UITraitArtworkSubtype, &protocol witness table for UITraitArtworkSubtype, a1[1]);
}

id sub_185596540(uint64_t a1)
{
  return sub_185596554(a1, (SEL *)&selRef_displayCornerRadius, &qword_1EDD83820);
}

id sub_185596554(uint64_t a1, SEL *a2, _QWORD *a3)
{
  id result;
  uint64_t v6;

  if (qword_1EDD83288 != -1)
    swift_once();
  result = objc_msgSend((id)qword_1EDD83290, *a2);
  *a3 = v6;
  return result;
}

double static UITraitDisplayCornerRadius.defaultValue.getter()
{
  return sub_1855965CC(&qword_1EDD83818, (uint64_t)&qword_1EDD83820);
}

double sub_1855965CC(_QWORD *a1, uint64_t a2)
{
  if (*a1 != -1)
    swift_once();
  return *(double *)a2;
}

void sub_185596604(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA28, (SEL *)&selRef_name, &qword_1EDD83830, &qword_1EDD83838);
}

uint64_t static UITraitDisplayCornerRadius.name.getter()
{
  return sub_18559224C(&qword_1EDD83828, &qword_1EDD83830);
}

void sub_185596644(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA28, (SEL *)&selRef_identifier, &qword_1EDD83848, &qword_1EDD83850);
}

uint64_t static UITraitDisplayCornerRadius.identifier.getter()
{
  return sub_18559224C(&qword_1EDD83840, &qword_1EDD83848);
}

id sub_185596684(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BA28, byte_1EDD83860);
}

uint64_t static UITraitDisplayCornerRadius.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD83858, byte_1EDD83860);
}

uint64_t static UITraitDisplayCornerRadius._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitDisplayCornerRadius._isPrivate.getter()
{
  return 1;
}

double sub_1855966C4@<D0>(_QWORD *a1@<X8>)
{
  return sub_1855966E0(&qword_1EDD83818, (double *)&qword_1EDD83820, a1);
}

double sub_1855966E0@<D0>(_QWORD *a1@<X2>, double *a2@<X3>, _QWORD *a3@<X8>)
{
  double result;

  if (*a1 != -1)
    swift_once();
  result = *a2;
  *a3 = *(_QWORD *)a2;
  return result;
}

uint64_t sub_185596724(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83840, &qword_1EDD83848);
}

uint64_t sub_185596744(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83828, &qword_1EDD83830);
}

uint64_t sub_185596764(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD83858, byte_1EDD83860);
}

uint64_t UIMutableTraits.displayCornerRadius.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a2 + 32))(&type metadata for UITraitDisplayCornerRadius, &type metadata for UITraitDisplayCornerRadius, &protocol witness table for UITraitDisplayCornerRadius, a1, a2);
}

uint64_t sub_1855967A4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  uint64_t result;
  uint64_t v5;

  result = UIMutableTraits.displayCornerRadius.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = v5;
  return result;
}

uint64_t sub_1855967D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits.displayCornerRadius.setter(*(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t UIMutableTraits.displayCornerRadius.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a2 + 40))(&type metadata for UITraitDisplayCornerRadius, &type metadata for UITraitDisplayCornerRadius, &protocol witness table for UITraitDisplayCornerRadius, a1, a2);
}

uint64_t (*UIMutableTraits.displayCornerRadius.modify(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)(a1 + 16) = a3;
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 8) = a2;
  *(double *)a1 = (*(double (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a3 + 32))(&type metadata for UITraitDisplayCornerRadius, &type metadata for UITraitDisplayCornerRadius, &protocol witness table for UITraitDisplayCornerRadius, a2, a3);
  return sub_185596880;
}

uint64_t sub_185596880(uint64_t a1, uint64_t a2)
{
  return sub_185596894(a1, a2, (uint64_t)&type metadata for UITraitDisplayCornerRadius, (uint64_t)&protocol witness table for UITraitDisplayCornerRadius);
}

uint64_t sub_185596894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, double))(*(_QWORD *)(a1 + 16) + 40))(a3, a3, a4, *(_QWORD *)(a1 + 8), *(double *)a1);
}

uint64_t sub_1855968D0(uint64_t a1)
{
  return sub_185597D24(a1, (uint64_t (*)(uint64_t))-[UITraitCollection _semanticContext], &qword_1EDDA8758);
}

void sub_1855968E4(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAA8, (SEL *)&selRef_name, &qword_1EDDA8760, &qword_1EDDA8768);
}

void sub_185596904(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAA8, (SEL *)&selRef_identifier, &qword_1EDDA8770, &qword_1EDDA8778);
}

id sub_185596924(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BAA8, byte_1EDDA8780);
}

uint64_t sub_185596938@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD83868, &qword_1EDDA8758, a1);
}

uint64_t sub_185596954(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83878, &qword_1EDDA8770);
}

uint64_t sub_185596974(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83870, &qword_1EDDA8760);
}

uint64_t sub_185596994(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD83880, byte_1EDDA8780);
}

id sub_1855969B0(uint64_t a1)
{
  return sub_18559823C(a1, (SEL *)&selRef__presentationSemanticContext, &qword_1EDD83890);
}

uint64_t static UITraitPresentationSemanticContext.defaultValue.getter()
{
  return sub_1855925FC(&qword_1EDD83888, (uint64_t)&qword_1EDD83890);
}

void sub_1855969E0(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA88, (SEL *)&selRef_name, &qword_1EDD838A0, &qword_1EDD838A8);
}

uint64_t static UITraitPresentationSemanticContext.name.getter()
{
  return sub_18559224C(&qword_1EDD83898, &qword_1EDD838A0);
}

void sub_185596A20(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA88, (SEL *)&selRef_identifier, &qword_1EDD838B8, &qword_1EDD838C0);
}

uint64_t static UITraitPresentationSemanticContext.identifier.getter()
{
  return sub_18559224C(&qword_1EDD838B0, &qword_1EDD838B8);
}

id sub_185596A60(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BA88, byte_1EDD838D0);
}

uint64_t static UITraitPresentationSemanticContext.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD838C8, byte_1EDD838D0);
}

uint64_t static UITraitPresentationSemanticContext._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitPresentationSemanticContext._isPrivate.getter()
{
  return 1;
}

uint64_t sub_185596AA0@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD83888, &qword_1EDD83890, a1);
}

uint64_t sub_185596ABC(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD838B0, &qword_1EDD838B8);
}

uint64_t sub_185596ADC(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83898, &qword_1EDD838A0);
}

uint64_t sub_185596AFC(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD838C8, byte_1EDD838D0);
}

uint64_t UIMutableTraits._presentationSemanticContext.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  v5 = sub_1852478E0(&qword_1EDD83EF8, (uint64_t (*)(uint64_t))type metadata accessor for _UIUserInterfacePresentationSemanticContext, (uint64_t)&unk_186667640);
  v4(&v7, &type metadata for UITraitPresentationSemanticContext, &type metadata for UITraitPresentationSemanticContext, &protocol witness table for UITraitPresentationSemanticContext, v5, a1, a2);
  return v7;
}

uint64_t sub_185596B94@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits._presentationSemanticContext.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_185596BC4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits._presentationSemanticContext.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t UIMutableTraits._presentationSemanticContext.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1852478E0(&qword_1EDD83EF8, (uint64_t (*)(uint64_t))type metadata accessor for _UIUserInterfacePresentationSemanticContext, (uint64_t)&unk_186667640);
  return v5(&v8, &type metadata for UITraitPresentationSemanticContext, &type metadata for UITraitPresentationSemanticContext, &protocol witness table for UITraitPresentationSemanticContext, v6, a2, a3);
}

void (*UIMutableTraits._presentationSemanticContext.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0(&qword_1EDD83EF8, (uint64_t (*)(uint64_t))type metadata accessor for _UIUserInterfacePresentationSemanticContext, (uint64_t)&unk_186667640);
  v8(&type metadata for UITraitPresentationSemanticContext, &type metadata for UITraitPresentationSemanticContext, &protocol witness table for UITraitPresentationSemanticContext, v9, a2, a3);
  return sub_185596D0C;
}

void sub_185596D0C(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0(&qword_1EDD83EF8, (uint64_t (*)(uint64_t))type metadata accessor for _UIUserInterfacePresentationSemanticContext, (uint64_t)&unk_186667640);
  v4(v1, &type metadata for UITraitPresentationSemanticContext, &type metadata for UITraitPresentationSemanticContext, &protocol witness table for UITraitPresentationSemanticContext, v5, v3, v2);
  free(v1);
}

id sub_185596D90(uint64_t a1)
{
  return sub_18559823C(a1, (SEL *)&selRef__splitViewControllerContext, &qword_1EDD838E0);
}

uint64_t static UITraitSplitViewControllerContext.defaultValue.getter()
{
  return sub_1855925FC(&qword_1EDD838D8, (uint64_t)&qword_1EDD838E0);
}

void sub_185596DC0(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAB0, (SEL *)&selRef_name, &qword_1EDD838F0, &qword_1EDD838F8);
}

uint64_t static UITraitSplitViewControllerContext.name.getter()
{
  return sub_18559224C(&qword_1EDD838E8, &qword_1EDD838F0);
}

void sub_185596E00(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAB0, (SEL *)&selRef_identifier, &qword_1EDD83908, &qword_1EDD83910);
}

uint64_t static UITraitSplitViewControllerContext.identifier.getter()
{
  return sub_18559224C(&qword_1EDD83900, &qword_1EDD83908);
}

id sub_185596E40(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BAB0, byte_1EDD83920);
}

uint64_t static UITraitSplitViewControllerContext.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD83918, byte_1EDD83920);
}

uint64_t static UITraitSplitViewControllerContext._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitSplitViewControllerContext._isPrivate.getter()
{
  return 1;
}

uint64_t sub_185596E80@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD838D8, &qword_1EDD838E0, a1);
}

uint64_t sub_185596E9C(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83900, &qword_1EDD83908);
}

uint64_t sub_185596EBC(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD838E8, &qword_1EDD838F0);
}

uint64_t sub_185596EDC(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD83918, byte_1EDD83920);
}

uint64_t UIMutableTraits._splitViewControllerContext.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  v5 = sub_1852478E0((unint64_t *)&unk_1EDD83F00, (uint64_t (*)(uint64_t))type metadata accessor for _UISplitViewControllerContext, (uint64_t)&unk_186667608);
  v4(&v7, &type metadata for UITraitSplitViewControllerContext, &type metadata for UITraitSplitViewControllerContext, &protocol witness table for UITraitSplitViewControllerContext, v5, a1, a2);
  return v7;
}

uint64_t sub_185596F74@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits._splitViewControllerContext.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_185596FA4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits._splitViewControllerContext.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t UIMutableTraits._splitViewControllerContext.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1852478E0((unint64_t *)&unk_1EDD83F00, (uint64_t (*)(uint64_t))type metadata accessor for _UISplitViewControllerContext, (uint64_t)&unk_186667608);
  return v5(&v8, &type metadata for UITraitSplitViewControllerContext, &type metadata for UITraitSplitViewControllerContext, &protocol witness table for UITraitSplitViewControllerContext, v6, a2, a3);
}

void (*UIMutableTraits._splitViewControllerContext.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0((unint64_t *)&unk_1EDD83F00, (uint64_t (*)(uint64_t))type metadata accessor for _UISplitViewControllerContext, (uint64_t)&unk_186667608);
  v8(&type metadata for UITraitSplitViewControllerContext, &type metadata for UITraitSplitViewControllerContext, &protocol witness table for UITraitSplitViewControllerContext, v9, a2, a3);
  return sub_1855970EC;
}

void sub_1855970EC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0((unint64_t *)&unk_1EDD83F00, (uint64_t (*)(uint64_t))type metadata accessor for _UISplitViewControllerContext, (uint64_t)&unk_186667608);
  v4(v1, &type metadata for UITraitSplitViewControllerContext, &type metadata for UITraitSplitViewControllerContext, &protocol witness table for UITraitSplitViewControllerContext, v5, v3, v2);
  free(v1);
}

id sub_185597170(uint64_t a1)
{
  return sub_18559823C(a1, (SEL *)&selRef__vibrancy, &qword_1EDD83930);
}

uint64_t static UITraitVibrancy.defaultValue.getter()
{
  return sub_1855925FC(&qword_1EDD83928, (uint64_t)&qword_1EDD83930);
}

void sub_1855971A0(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BB00, (SEL *)&selRef_name, &qword_1EDD83940, &qword_1EDD83948);
}

uint64_t static UITraitVibrancy.name.getter()
{
  return sub_18559224C(&qword_1EDD83938, &qword_1EDD83940);
}

void sub_1855971E0(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BB00, (SEL *)&selRef_identifier, &qword_1EDD83958, &qword_1EDD83960);
}

uint64_t static UITraitVibrancy.identifier.getter()
{
  return sub_18559224C(&qword_1EDD83950, &qword_1EDD83958);
}

id sub_185597220(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BB00, byte_1EDD83970);
}

uint64_t static UITraitVibrancy.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD83968, byte_1EDD83970);
}

uint64_t static UITraitVibrancy._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitVibrancy._isPrivate.getter()
{
  return 1;
}

uint64_t sub_185597260@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD83928, &qword_1EDD83930, a1);
}

uint64_t sub_18559727C(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83950, &qword_1EDD83958);
}

uint64_t sub_18559729C(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83938, &qword_1EDD83940);
}

uint64_t sub_1855972BC(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD83968, byte_1EDD83970);
}

uint64_t UIMutableTraits._vibrancy.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  v5 = sub_1852478E0(&qword_1EDD82698, (uint64_t (*)(uint64_t))type metadata accessor for _UIUserInterfaceVibrancy, (uint64_t)&unk_1866675D0);
  v4(&v7, &type metadata for UITraitVibrancy, &type metadata for UITraitVibrancy, &protocol witness table for UITraitVibrancy, v5, a1, a2);
  return v7;
}

uint64_t sub_185597354@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits._vibrancy.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_185597384(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits._vibrancy.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t UIMutableTraits._vibrancy.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1852478E0(&qword_1EDD82698, (uint64_t (*)(uint64_t))type metadata accessor for _UIUserInterfaceVibrancy, (uint64_t)&unk_1866675D0);
  return v5(&v8, &type metadata for UITraitVibrancy, &type metadata for UITraitVibrancy, &protocol witness table for UITraitVibrancy, v6, a2, a3);
}

void (*UIMutableTraits._vibrancy.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0(&qword_1EDD82698, (uint64_t (*)(uint64_t))type metadata accessor for _UIUserInterfaceVibrancy, (uint64_t)&unk_1866675D0);
  v8(&type metadata for UITraitVibrancy, &type metadata for UITraitVibrancy, &protocol witness table for UITraitVibrancy, v9, a2, a3);
  return sub_1855974CC;
}

void sub_1855974CC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0(&qword_1EDD82698, (uint64_t (*)(uint64_t))type metadata accessor for _UIUserInterfaceVibrancy, (uint64_t)&unk_1866675D0);
  v4(v1, &type metadata for UITraitVibrancy, &type metadata for UITraitVibrancy, &protocol witness table for UITraitVibrancy, v5, v3, v2);
  free(v1);
}

id sub_185597550(uint64_t a1)
{
  return sub_18559823C(a1, (SEL *)&selRef__userInterfaceRenderingMode, &qword_1EDD83980);
}

uint64_t static UITraitUserInterfaceRenderingMode.defaultValue.getter()
{
  return sub_1855925FC(&qword_1EDD83978, (uint64_t)&qword_1EDD83980);
}

void sub_185597580(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAE8, (SEL *)&selRef_name, &qword_1EDD83990, &qword_1EDD83998);
}

uint64_t static UITraitUserInterfaceRenderingMode.name.getter()
{
  return sub_18559224C(&qword_1EDD83988, &qword_1EDD83990);
}

void sub_1855975C0(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAE8, (SEL *)&selRef_identifier, &qword_1EDD839A8, &qword_1EDD839B0);
}

uint64_t static UITraitUserInterfaceRenderingMode.identifier.getter()
{
  return sub_18559224C(&qword_1EDD839A0, &qword_1EDD839A8);
}

id sub_185597600(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BAE8, byte_1EDD839C0);
}

uint64_t static UITraitUserInterfaceRenderingMode.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD839B8, byte_1EDD839C0);
}

uint64_t static UITraitUserInterfaceRenderingMode._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitUserInterfaceRenderingMode._isPrivate.getter()
{
  return 1;
}

uint64_t sub_185597640@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD83978, &qword_1EDD83980, a1);
}

uint64_t sub_18559765C(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD839A0, &qword_1EDD839A8);
}

uint64_t sub_18559767C(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83988, &qword_1EDD83990);
}

uint64_t sub_18559769C(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD839B8, byte_1EDD839C0);
}

uint64_t UIMutableTraits._userInterfaceRenderingMode.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  v5 = sub_1852478E0(&qword_1EDD83F10, (uint64_t (*)(uint64_t))type metadata accessor for _UIUserInterfaceRenderingMode, (uint64_t)&unk_186667598);
  v4(&v7, &type metadata for UITraitUserInterfaceRenderingMode, &type metadata for UITraitUserInterfaceRenderingMode, &protocol witness table for UITraitUserInterfaceRenderingMode, v5, a1, a2);
  return v7;
}

uint64_t sub_185597734@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits._userInterfaceRenderingMode.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_185597764(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits._userInterfaceRenderingMode.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t UIMutableTraits._userInterfaceRenderingMode.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1852478E0(&qword_1EDD83F10, (uint64_t (*)(uint64_t))type metadata accessor for _UIUserInterfaceRenderingMode, (uint64_t)&unk_186667598);
  return v5(&v8, &type metadata for UITraitUserInterfaceRenderingMode, &type metadata for UITraitUserInterfaceRenderingMode, &protocol witness table for UITraitUserInterfaceRenderingMode, v6, a2, a3);
}

void (*UIMutableTraits._userInterfaceRenderingMode.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0(&qword_1EDD83F10, (uint64_t (*)(uint64_t))type metadata accessor for _UIUserInterfaceRenderingMode, (uint64_t)&unk_186667598);
  v8(&type metadata for UITraitUserInterfaceRenderingMode, &type metadata for UITraitUserInterfaceRenderingMode, &protocol witness table for UITraitUserInterfaceRenderingMode, v9, a2, a3);
  return sub_1855978AC;
}

void sub_1855978AC(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0(&qword_1EDD83F10, (uint64_t (*)(uint64_t))type metadata accessor for _UIUserInterfaceRenderingMode, (uint64_t)&unk_186667598);
  v4(v1, &type metadata for UITraitUserInterfaceRenderingMode, &type metadata for UITraitUserInterfaceRenderingMode, &protocol witness table for UITraitUserInterfaceRenderingMode, v5, v3, v2);
  free(v1);
}

id sub_185597930(uint64_t a1)
{
  return sub_18559823C(a1, (SEL *)&selRef__focusSystemState, &qword_1EDD839D0);
}

uint64_t static UITraitFocusSystemState.defaultValue.getter()
{
  return sub_1855925FC(&qword_1EDD839C8, (uint64_t)&qword_1EDD839D0);
}

void sub_185597960(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA40, (SEL *)&selRef_name, &qword_1EDD839E0, &qword_1EDD839E8);
}

uint64_t static UITraitFocusSystemState.name.getter()
{
  return sub_18559224C(&qword_1EDD839D8, &qword_1EDD839E0);
}

void sub_1855979A0(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA40, (SEL *)&selRef_identifier, &qword_1EDD839F8, &qword_1EDD83A00);
}

uint64_t static UITraitFocusSystemState.identifier.getter()
{
  return sub_18559224C(&qword_1EDD839F0, &qword_1EDD839F8);
}

id sub_1855979E0(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BA40, byte_1EDD83A10);
}

uint64_t static UITraitFocusSystemState.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD83A08, byte_1EDD83A10);
}

uint64_t static UITraitFocusSystemState._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitFocusSystemState._isPrivate.getter()
{
  return 1;
}

uint64_t sub_185597A20@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD839C8, &qword_1EDD839D0, a1);
}

uint64_t sub_185597A3C(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD839F0, &qword_1EDD839F8);
}

uint64_t sub_185597A5C(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD839D8, &qword_1EDD839E0);
}

uint64_t sub_185597A7C(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD83A08, byte_1EDD83A10);
}

uint64_t UIMutableTraits._focusSystemState.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  v5 = sub_1852478E0(&qword_1EDD83F18, (uint64_t (*)(uint64_t))type metadata accessor for _UITraitCollectionFocusSystemState, (uint64_t)&unk_186667560);
  v4(&v7, &type metadata for UITraitFocusSystemState, &type metadata for UITraitFocusSystemState, &protocol witness table for UITraitFocusSystemState, v5, a1, a2);
  return v7;
}

uint64_t sub_185597B14@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits._focusSystemState.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_185597B44(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits._focusSystemState.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t UIMutableTraits._focusSystemState.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1852478E0(&qword_1EDD83F18, (uint64_t (*)(uint64_t))type metadata accessor for _UITraitCollectionFocusSystemState, (uint64_t)&unk_186667560);
  return v5(&v8, &type metadata for UITraitFocusSystemState, &type metadata for UITraitFocusSystemState, &protocol witness table for UITraitFocusSystemState, v6, a2, a3);
}

void (*UIMutableTraits._focusSystemState.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0(&qword_1EDD83F18, (uint64_t (*)(uint64_t))type metadata accessor for _UITraitCollectionFocusSystemState, (uint64_t)&unk_186667560);
  v8(&type metadata for UITraitFocusSystemState, &type metadata for UITraitFocusSystemState, &protocol witness table for UITraitFocusSystemState, v9, a2, a3);
  return sub_185597C8C;
}

void sub_185597C8C(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0(&qword_1EDD83F18, (uint64_t (*)(uint64_t))type metadata accessor for _UITraitCollectionFocusSystemState, (uint64_t)&unk_186667560);
  v4(v1, &type metadata for UITraitFocusSystemState, &type metadata for UITraitFocusSystemState, &protocol witness table for UITraitFocusSystemState, v5, v3, v2);
  free(v1);
}

uint64_t sub_185597D10(uint64_t a1)
{
  return sub_185597D24(a1, (uint64_t (*)(uint64_t))-[UITraitCollection _selectionIsKey], &qword_1EDDA8788);
}

uint64_t sub_185597D24(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3)
{
  uint64_t result;

  if (qword_1EDD83288 != -1)
    swift_once();
  result = a2(qword_1EDD83290);
  *a3 = result;
  return result;
}

void sub_185597D7C(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAA0, (SEL *)&selRef_name, &qword_1EDDA8790, &qword_1EDDA8798);
}

void sub_185597D9C(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BAA0, (SEL *)&selRef_identifier, &qword_1EDDA87A0, &qword_1EDDA87A8);
}

id sub_185597DBC(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BAA0, byte_1EDDA87B0);
}

uint64_t sub_185597DD0@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD83A18, &qword_1EDDA8788, a1);
}

uint64_t sub_185597DEC(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83A28, &qword_1EDDA87A0);
}

uint64_t sub_185597E0C(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83A20, &qword_1EDDA8790);
}

uint64_t sub_185597E2C(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD83A30, byte_1EDDA87B0);
}

id sub_185597E48(uint64_t a1)
{
  return sub_18559823C(a1, (SEL *)&selRef__backlightLuminance, &qword_1EDD83A40);
}

uint64_t static UITraitBacklightLuminance.defaultValue.getter()
{
  return sub_1855925FC(&qword_1EDD83A38, (uint64_t)&qword_1EDD83A40);
}

void sub_185597E78(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA10, (SEL *)&selRef_name, &qword_1EDD83A50, &qword_1EDD83A58);
}

uint64_t static UITraitBacklightLuminance.name.getter()
{
  return sub_18559224C(&qword_1EDD83A48, &qword_1EDD83A50);
}

void sub_185597EB8(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167BA10, (SEL *)&selRef_identifier, &qword_1EDD83A68, &qword_1EDD83A70);
}

uint64_t static UITraitBacklightLuminance.identifier.getter()
{
  return sub_18559224C(&qword_1EDD83A60, &qword_1EDD83A68);
}

id sub_185597EF8(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167BA10, byte_1EDD83A80);
}

uint64_t static UITraitBacklightLuminance.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD83A78, byte_1EDD83A80);
}

uint64_t static UITraitBacklightLuminance._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static UITraitBacklightLuminance._isPrivate.getter()
{
  return 1;
}

uint64_t sub_185597F38@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD83A38, &qword_1EDD83A40, a1);
}

uint64_t sub_185597F54(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83A60, &qword_1EDD83A68);
}

uint64_t sub_185597F74(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83A48, &qword_1EDD83A50);
}

uint64_t sub_185597F94(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD83A78, byte_1EDD83A80);
}

uint64_t UIMutableTraits._backlightLuminance.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  v5 = sub_1852478E0(&qword_1EDD83F20, (uint64_t (*)(uint64_t))type metadata accessor for _UIBacklightLuminance, (uint64_t)&unk_186667528);
  v4(&v7, &type metadata for UITraitBacklightLuminance, &type metadata for UITraitBacklightLuminance, &protocol witness table for UITraitBacklightLuminance, v5, a1, a2);
  return v7;
}

uint64_t sub_18559802C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits._backlightLuminance.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_18559805C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits._backlightLuminance.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t UIMutableTraits._backlightLuminance.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1852478E0(&qword_1EDD83F20, (uint64_t (*)(uint64_t))type metadata accessor for _UIBacklightLuminance, (uint64_t)&unk_186667528);
  return v5(&v8, &type metadata for UITraitBacklightLuminance, &type metadata for UITraitBacklightLuminance, &protocol witness table for UITraitBacklightLuminance, v6, a2, a3);
}

void (*UIMutableTraits._backlightLuminance.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0(&qword_1EDD83F20, (uint64_t (*)(uint64_t))type metadata accessor for _UIBacklightLuminance, (uint64_t)&unk_186667528);
  v8(&type metadata for UITraitBacklightLuminance, &type metadata for UITraitBacklightLuminance, &protocol witness table for UITraitBacklightLuminance, v9, a2, a3);
  return sub_1855981A4;
}

void sub_1855981A4(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0(&qword_1EDD83F20, (uint64_t (*)(uint64_t))type metadata accessor for _UIBacklightLuminance, (uint64_t)&unk_186667528);
  v4(v1, &type metadata for UITraitBacklightLuminance, &type metadata for UITraitBacklightLuminance, &protocol witness table for UITraitBacklightLuminance, v5, v3, v2);
  free(v1);
}

id sub_185598228(uint64_t a1)
{
  return sub_18559823C(a1, (SEL *)&selRef__interfaceProtectionState, &qword_1EDD83A90);
}

id sub_18559823C(uint64_t a1, SEL *a2, _QWORD *a3)
{
  id result;

  if (qword_1EDD83288 != -1)
    swift_once();
  result = objc_msgSend((id)qword_1EDD83290, *a2);
  *a3 = result;
  return result;
}

uint64_t static _UITraitInterfaceProtectionState.defaultValue.getter()
{
  return sub_1855925FC(&qword_1EDD83A88, (uint64_t)&qword_1EDD83A90);
}

void sub_1855982B4(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167D188, (SEL *)&selRef_name, &qword_1EDD83AA0, &qword_1EDD83AA8);
}

uint64_t static _UITraitInterfaceProtectionState.name.getter()
{
  return sub_18559224C(&qword_1EDD83A98, &qword_1EDD83AA0);
}

void sub_1855982F4(uint64_t a1)
{
  sub_185219E68(a1, (uint64_t)off_1E167D188, (SEL *)&selRef_identifier, &qword_1EDD83AB8, &qword_1EDD83AC0);
}

uint64_t static _UITraitInterfaceProtectionState.identifier.getter()
{
  return sub_18559224C(&qword_1EDD83AB0, &qword_1EDD83AB8);
}

id sub_185598334(uint64_t a1)
{
  return sub_185598348(a1, (uint64_t)off_1E167D188, byte_1EDD83AD0);
}

id sub_185598348(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(), sel_affectsColorAppearance);
  *a3 = (_BYTE)result;
  return result;
}

uint64_t static _UITraitInterfaceProtectionState.affectsColorAppearance.getter()
{
  return sub_1855926E4(&qword_1EDD83AC8, byte_1EDD83AD0);
}

uint64_t static _UITraitInterfaceProtectionState._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static _UITraitInterfaceProtectionState._isPrivate.getter()
{
  return 1;
}

uint64_t sub_1855983A8@<X0>(_QWORD *a1@<X8>)
{
  return sub_185592748(&qword_1EDD83A88, &qword_1EDD83A90, a1);
}

uint64_t sub_1855983C4(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83AB0, &qword_1EDD83AB8);
}

uint64_t sub_1855983E4(uint64_t a1, uint64_t a2)
{
  return sub_18506FC0C(a1, a2, &qword_1EDD83A98, &qword_1EDD83AA0);
}

uint64_t sub_185598404(uint64_t a1, uint64_t a2)
{
  return sub_1855927E8(a1, a2, &qword_1EDD83AC8, byte_1EDD83AD0);
}

uint64_t UIMutableTraits._interfaceProtectionState.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v7;

  v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a2 + 368);
  v5 = sub_1852478E0(&qword_1EDD83F28, (uint64_t (*)(uint64_t))type metadata accessor for _UIInterfaceProtectionState, (uint64_t)&unk_1866674F0);
  v4(&v7, &type metadata for _UITraitInterfaceProtectionState, &type metadata for _UITraitInterfaceProtectionState, &protocol witness table for _UITraitInterfaceProtectionState, v5, a1, a2);
  return v7;
}

uint64_t sub_18559849C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits._interfaceProtectionState.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_1855984CC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits._interfaceProtectionState.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t UIMutableTraits._interfaceProtectionState.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1852478E0(&qword_1EDD83F28, (uint64_t (*)(uint64_t))type metadata accessor for _UIInterfaceProtectionState, (uint64_t)&unk_1866674F0);
  return v5(&v8, &type metadata for _UITraitInterfaceProtectionState, &type metadata for _UITraitInterfaceProtectionState, &protocol witness table for _UITraitInterfaceProtectionState, v6, a2, a3);
}

void (*UIMutableTraits._interfaceProtectionState.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1852478E0(&qword_1EDD83F28, (uint64_t (*)(uint64_t))type metadata accessor for _UIInterfaceProtectionState, (uint64_t)&unk_1866674F0);
  v8(&type metadata for _UITraitInterfaceProtectionState, &type metadata for _UITraitInterfaceProtectionState, &protocol witness table for _UITraitInterfaceProtectionState, v9, a2, a3);
  return sub_185598614;
}

void sub_185598614(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1852478E0(&qword_1EDD83F28, (uint64_t (*)(uint64_t))type metadata accessor for _UIInterfaceProtectionState, (uint64_t)&unk_1866674F0);
  v4(v1, &type metadata for _UITraitInterfaceProtectionState, &type metadata for _UITraitInterfaceProtectionState, &protocol witness table for _UITraitInterfaceProtectionState, v5, v3, v2);
  free(v1);
}

uint64_t sub_185598698(uint64_t a1, uint64_t a2)
{
  return sub_185599BAC(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

void sub_1855986AC(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1855986B4()
{
  return sub_186507B28();
}

_QWORD *sub_1855986CC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1855986E0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_1855986F4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_185598720@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_185598744(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_185598758@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_18559876C(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

_QWORD *sub_185598780(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_185598798(uint64_t a1, uint64_t a2)
{
  return sub_185599BAC(a1, a2, MEMORY[0x1E0DEA950]);
}

_QWORD *sub_1855987B0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_1855987BC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_1855987D0(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_185598800(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_185598814(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

BOOL sub_185598828(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_18559883C(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_185598850()
{
  _QWORD *v0;

  return *v0 == 0;
}

BOOL sub_185598860(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_185598874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x186DC9F28](&unk_186668F10, a3);
  return sub_186506CF4();
}

uint64_t sub_1855988C8()
{
  return sub_1865077A4();
}

uint64_t sub_1855988D0(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  int v5;
  int v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = MEMORY[0x186DC47D4](a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_185598920(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  int v5;
  int v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = MEMORY[0x186DC47E0](a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_185598974(float *a1@<X8>)
{
  *a1 = MEMORY[0x186DC47EC]();
}

void sub_185598998(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_1855989A0@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_1855989B4@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1855989C8(_DWORD *a1, int *a2)
{
  _DWORD *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_1855989F8@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  _DWORD *v2;
  int v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_DWORD *)a2 = v3;
  *(_BYTE *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_185598A24@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_185598A48(_DWORD *result)
{
  _DWORD *v1;

  *v1 |= *result;
  return result;
}

_DWORD *sub_185598A5C(_DWORD *result)
{
  _DWORD *v1;

  *v1 ^= *result;
  return result;
}

_DWORD *sub_185598A70@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_185598A84(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_185598A98()
{
  _DWORD *v0;

  return *v0 == 0;
}

_DWORD *sub_185598AA8(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_185598ABC(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1865074EC();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_185598B38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1865074F8();
  v2 = sub_1865074D4();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

double sub_185598B78@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

BOOL sub_185598B84(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_185598B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_185598CE4(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t *))MEMORY[0x1E0CB1728]);
}

void sub_185598BA4(double *a1@<X8>)
{
  *a1 = MEMORY[0x186DC3D0C]();
}

BOOL sub_185598BC8(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_185598BDC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = MEMORY[0x186DC3CF4](a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_185598C2C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = MEMORY[0x186DC3D00](a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return v3 & 1;
}

uint64_t sub_185598C80()
{
  return sub_18650817C();
}

uint64_t sub_185598C88(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = MEMORY[0x186DC51AC](a1, &v6);
  v4 = v6;
  v5 = v7;
  if (v7)
    v4 = 0;
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_185598CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_185598CE4(a1, a2, a3, a4, MEMORY[0x1E0CB2720]);
}

uint64_t sub_185598CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t *))
{
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v10;
  char v11;

  v10 = 0;
  v11 = 1;
  v6 = a5(a1, &v10);
  v7 = v10;
  v8 = v11;
  if (v11)
    v7 = 0;
  *(_QWORD *)a2 = v7;
  *(_BYTE *)(a2 + 8) = v8;
  return v6 & 1;
}

uint64_t sub_185598D38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_186508194();
  *a1 = result;
  return result;
}

_DWORD *sub_185598D5C@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  _DWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_185598D70(_DWORD *result)
{
  _DWORD *v1;

  *v1 &= *result;
  return result;
}

BOOL sub_185598D84(_DWORD *a1)
{
  _DWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_185598D98(_DWORD *a1)
{
  _DWORD *v1;

  return (*a1 & ~*v1) == 0;
}

uint64_t sub_185598DAC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_185776AA0(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void sub_185598DE8(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

_QWORD *sub_185598DF4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_185598E04(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_185598E10@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v3;
  uint64_t result;

  v3 = sub_185776AA4(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

_DWORD *sub_185598E4C@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_185598E58()
{
  sub_1852478E0(&qword_1EDD84690, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_186665808);
  sub_1852478E0(&qword_1EDD84698, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_1866657D4);
  return sub_186507EDC();
}

uint64_t sub_185598EDC()
{
  sub_1852478E0(&qword_1EDD84BE0, (uint64_t (*)(uint64_t))type metadata accessor for CALayerCornerCurve, (uint64_t)&unk_1866684BC);
  sub_1852478E0(&qword_1EDD84BE8, (uint64_t (*)(uint64_t))type metadata accessor for CALayerCornerCurve, (uint64_t)&unk_18666845C);
  return sub_186507EDC();
}

uint64_t sub_185598F60()
{
  sub_1852478E0((unint64_t *)&qword_1EDD82C50, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_186667474);
  sub_1852478E0(&qword_1EDD84688, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_18666590C);
  return sub_186507EDC();
}

uint64_t sub_185598FE4()
{
  sub_1852478E0(&qword_1EDD84BF0, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_186668358);
  sub_1852478E0(&qword_1EDD84BF8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1866682F8);
  return sub_186507EDC();
}

uint64_t sub_185599068@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1865074F8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_185599090()
{
  sub_1852478E0(&qword_1EDD84BD0, (uint64_t (*)(uint64_t))type metadata accessor for CIImageOption, (uint64_t)&unk_186669004);
  sub_1852478E0(&qword_1EDD84BD8, (uint64_t (*)(uint64_t))type metadata accessor for CIImageOption, (uint64_t)&unk_186668834);
  return sub_186507EDC();
}

uint64_t sub_185599114()
{
  sub_1852478E0(&qword_1EDD84BC0, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_186668FC0);
  sub_1852478E0(&qword_1EDD84BC8, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_186668948);
  return sub_186507EDC();
}

uint64_t sub_185599198()
{
  sub_1852478E0(&qword_1EDD84670, (uint64_t (*)(uint64_t))type metadata accessor for URLThumbnailDictionaryItem, (uint64_t)&unk_186665AE4);
  sub_1852478E0((unint64_t *)&unk_1EDD84678, (uint64_t (*)(uint64_t))type metadata accessor for URLThumbnailDictionaryItem, (uint64_t)&unk_186665A84);
  return sub_186507EDC();
}

uint64_t sub_18559921C()
{
  sub_1852478E0((unint64_t *)&qword_1EDD84620, (uint64_t (*)(uint64_t))type metadata accessor for ComponentKey, (uint64_t)&unk_186667320);
  sub_1852478E0(&qword_1EDD84628, (uint64_t (*)(uint64_t))type metadata accessor for ComponentKey, (uint64_t)&unk_18666602C);
  return sub_186507EDC();
}

uint64_t sub_1855992A0()
{
  sub_1852478E0(&qword_1EDD84660, (uint64_t (*)(uint64_t))type metadata accessor for DetectionPattern, (uint64_t)&unk_186667430);
  sub_1852478E0(&qword_1EDD84668, (uint64_t (*)(uint64_t))type metadata accessor for DetectionPattern, (uint64_t)&unk_186665BDC);
  return sub_186507EDC();
}

uint64_t sub_185599324()
{
  sub_1852478E0(&qword_1EDD84650, (uint64_t (*)(uint64_t))type metadata accessor for TextAlignment, (uint64_t)&unk_1866673EC);
  sub_1852478E0(&qword_1EDD84658, (uint64_t (*)(uint64_t))type metadata accessor for TextAlignment, (uint64_t)&unk_186665CF0);
  return sub_186507EDC();
}

uint64_t sub_1855993A8()
{
  sub_1852478E0(&qword_1EDD84640, (uint64_t (*)(uint64_t))type metadata accessor for TextList, (uint64_t)&unk_1866673A8);
  sub_1852478E0(&qword_1EDD84648, (uint64_t (*)(uint64_t))type metadata accessor for TextList, (uint64_t)&unk_186665E04);
  return sub_186507EDC();
}

uint64_t sub_18559942C()
{
  sub_1852478E0(&qword_1EDD84630, (uint64_t (*)(uint64_t))type metadata accessor for Highlight, (uint64_t)&unk_186667364);
  sub_1852478E0(&qword_1EDD84638, (uint64_t (*)(uint64_t))type metadata accessor for Highlight, (uint64_t)&unk_186665F18);
  return sub_186507EDC();
}

uint64_t sub_1855994B0()
{
  sub_1852478E0(&qword_1EDD84B90, (uint64_t (*)(uint64_t))type metadata accessor for MarkerFormat, (uint64_t)&unk_186668F3C);
  sub_1852478E0(&qword_1EDD84B98, (uint64_t (*)(uint64_t))type metadata accessor for MarkerFormat, (uint64_t)&unk_186668CC0);
  return sub_186507EDC();
}

uint64_t sub_185599534(uint64_t a1)
{
  MEMORY[0x186DC9F28](&unk_186668F10, a1);
  return sub_186506D0C();
}

uint64_t sub_185599570()
{
  MEMORY[0x186DC9F28](&unk_186668F10);
  return sub_186506D00();
}

uint64_t sub_1855995B8(uint64_t a1, uint64_t a2)
{
  sub_1865080EC();
  MEMORY[0x186DC9F28](&unk_186668F10, a2);
  sub_186506D00();
  return sub_186508134();
}

uint64_t sub_185599610()
{
  sub_1852478E0((unint64_t *)&qword_1EDD81F78, (uint64_t (*)(uint64_t))type metadata accessor for UIConfigurationStateCustomKey, (uint64_t)&unk_186666E74);
  sub_1852478E0(&qword_1EDD845B0, (uint64_t (*)(uint64_t))type metadata accessor for UIConfigurationStateCustomKey, (uint64_t)&unk_186666E14);
  return sub_186507EDC();
}

uint64_t sub_185599694()
{
  sub_1852478E0(&qword_1EDD84BB0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_186668F7C);
  sub_1852478E0(&qword_1EDD84BB8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_186668A5C);
  return sub_186507EDC();
}

uint64_t sub_185599718()
{
  sub_1852478E0(&qword_1EDD84BA0, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_186668BD0);
  sub_1852478E0(&qword_1EDD84BA8, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_186668B70);
  return sub_186507EDC();
}

uint64_t sub_18559979C()
{
  sub_1852478E0(&qword_1EDD84600, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_186666408);
  sub_1852478E0(&qword_1EDD84608, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_1866663D4);
  sub_185573A34();
  return sub_186507EDC();
}

uint64_t sub_18559983C()
{
  sub_1852478E0(&qword_1EDD845E0, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1866665E8);
  sub_1852478E0(&qword_1EDD845E8, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_1866665B4);
  return sub_186507EDC();
}

uint64_t sub_1855998D0()
{
  sub_1852478E0(&qword_1EDD84610, (uint64_t (*)(uint64_t))type metadata accessor for TextEffectStyle, (uint64_t)&unk_186667250);
  sub_1852478E0(&qword_1EDD84618, (uint64_t (*)(uint64_t))type metadata accessor for TextEffectStyle, (uint64_t)&unk_186666308);
  return sub_186507EDC();
}

uint64_t sub_185599954()
{
  sub_1852478E0(&qword_1EDD84C00, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_186669068);
  sub_1852478E0(&qword_1EDD84C08, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1866681E4);
  return sub_186507EDC();
}

uint64_t sub_1855999D8()
{
  sub_1852478E0(&qword_1EDD845F0, (uint64_t (*)(uint64_t))type metadata accessor for Width, (uint64_t)&unk_1866664F8);
  sub_1852478E0(&qword_1EDD845F8, (uint64_t (*)(uint64_t))type metadata accessor for Width, (uint64_t)&unk_1866664C4);
  sub_185573A34();
  return sub_186507EDC();
}

uint64_t sub_185599A78()
{
  sub_1852478E0(&qword_1EDD845C8, (uint64_t (*)(uint64_t))type metadata accessor for Level, (uint64_t)&unk_1866666D8);
  sub_1852478E0((unint64_t *)&unk_1EDD845D0, (uint64_t (*)(uint64_t))type metadata accessor for Level, (uint64_t)&unk_1866666A4);
  sub_185573A34();
  return sub_186507EDC();
}

uint64_t sub_185599B18()
{
  sub_1852478E0(&qword_1EDD845B8, (uint64_t (*)(uint64_t))type metadata accessor for UIAccessibilityTraits, (uint64_t)&unk_1866667C8);
  sub_1852478E0(&qword_1EDD845C0, (uint64_t (*)(uint64_t))type metadata accessor for UIAccessibilityTraits, (uint64_t)&unk_186666794);
  return sub_186507EDC();
}

uint64_t sub_185599BAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1865074F8();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_185599BE8()
{
  sub_1865074F8();
  sub_186507540();
  return swift_bridgeObjectRelease();
}

uint64_t sub_185599C28()
{
  return sub_1865077D4();
}

uint64_t sub_185599C30()
{
  return sub_186508110();
}

void sub_185599C60()
{
  JUMPOUT(0x186DC50F8);
}

uint64_t sub_185599C74()
{
  return sub_186507798();
}

uint64_t sub_185599C7C()
{
  return sub_18650811C();
}

uint64_t sub_185599CAC()
{
  return sub_1865080E0();
}

uint64_t sub_185599CBC()
{
  return sub_1865081A0();
}

uint64_t sub_185599CC4()
{
  return sub_18650811C();
}

uint64_t sub_185599CEC()
{
  return sub_1865080E0();
}

uint64_t sub_185599CF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1865074F8();
  v2 = v1;
  if (v0 == sub_1865074F8() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_186507FCC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_185599D7C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_185599D84()
{
  return swift_deallocObject();
}

uint64_t sub_185599D94()
{
  return swift_deallocObject();
}

uint64_t sub_185599DA4()
{
  return swift_deallocObject();
}

uint64_t sub_185599DB4()
{
  return swift_deallocObject();
}

uint64_t sub_185599DC4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_185599DE8()
{
  return swift_deallocObject();
}

uint64_t sub_185599DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];
  _BYTE v12[32];
  uint64_t v13[4];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13[3] = AssociatedTypeWitness;
  __swift_allocate_boxed_opaque_existential_0(v13);
  (*(void (**)(void))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))();
  sub_1850F69D4((uint64_t)v13, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  swift_dynamicCast();
  sub_1850F26F8((uint64_t)v12, (uint64_t)v11, &qword_1ECD75B20);
  v8 = v11[3];
  sub_18519F088((uint64_t)v11, &qword_1ECD75B20);
  if (v8)
    v9 = sub_186507FB4();
  else
    v9 = 0;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
  objc_msgSend(*v4, sel__setObject_forTraitToken_, v9, sub_185247F14(a3, a4, (uint64_t)&unk_1E16A2758, (uint64_t (*)(uint64_t))sub_18559C68C));
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_185599F54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id *v4;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[4];
  _BYTE v13[32];
  uint64_t v14[4];

  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 24);
  v14[3] = swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_0(v14);
  v8(a1, a3, a4);
  sub_1850F69D4((uint64_t)v14, (uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  swift_dynamicCast();
  sub_1850F26F8((uint64_t)v13, (uint64_t)v12, &qword_1ECD75B20);
  v9 = v12[3];
  sub_18519F088((uint64_t)v12, &qword_1ECD75B20);
  if (v9)
    v10 = sub_186507FB4();
  else
    v10 = 0;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
  objc_msgSend(*v4, sel__setObject_forTraitToken_, v10, sub_1852480D0(a3, a4, (uint64_t)&unk_1E16A25F0, (uint64_t (*)(uint64_t))sub_18559C59C));
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_18559A0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id *v4;
  double v8;

  (*(void (**)(double *__return_ptr, uint64_t, uint64_t, uint64_t))(a4 + 24))(&v8, a1, a3, a4);
  objc_msgSend(*v4, sel__setCGFloatValue_forTraitToken_, sub_1852480D0(a3, a4, (uint64_t)&unk_1E16A25C8, (uint64_t (*)(uint64_t))sub_185571908), v8);
  return swift_unknownObjectRelease();
}

uint64_t sub_18559A150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id *v4;
  double v8;

  (*(void (**)(double *__return_ptr, uint64_t, uint64_t, uint64_t))(a4 + 24))(&v8, a1, a3, a4);
  objc_msgSend(*v4, sel__setCGFloatValue_forTraitToken_, sub_1852480D0(a3, a4, (uint64_t)&unk_1E16A25A0, (uint64_t (*)(uint64_t))sub_185571908), v8);
  return swift_unknownObjectRelease();
}

uint64_t sub_18559A1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id *v4;
  uint64_t v8;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(a4 + 24))(&v8, a1, a3, a4);
  objc_msgSend(*v4, sel__setNSIntegerValue_forTraitToken_, v8, sub_1852480D0(a3, a4, (uint64_t)&unk_1E16A2578, (uint64_t (*)(uint64_t))sub_18559C560));
  return swift_unknownObjectRelease();
}

uint64_t sub_18559A288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id *v5;
  double v10;

  swift_getAssociatedTypeWitness();
  sub_186507618();
  objc_msgSend(*v5, sel__setCGFloatValue_forTraitToken_, sub_185249B74(a3, a4, a5, (uint64_t)&unk_1E16A2500, (uint64_t (*)(uint64_t))sub_18559C4E0), v10);
  return swift_unknownObjectRelease();
}

uint64_t sub_18559A350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id *v5;
  double v10;

  swift_getAssociatedTypeWitness();
  sub_186507618();
  objc_msgSend(*v5, sel__setCGFloatValue_forTraitToken_, sub_185249B74(a3, a4, a5, (uint64_t)&unk_1E16A24D8, (uint64_t (*)(uint64_t))sub_18559C4E0), v10);
  return swift_unknownObjectRelease();
}

uint64_t sub_18559A418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v11[4];
  _BYTE v12[32];
  uint64_t v13[4];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13[3] = AssociatedTypeWitness;
  __swift_allocate_boxed_opaque_existential_0(v13);
  (*(void (**)(void))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))();
  sub_1850F69D4((uint64_t)v13, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  swift_dynamicCast();
  sub_1850F26F8((uint64_t)v12, (uint64_t)v11, &qword_1ECD75B20);
  v7 = v11[3];
  sub_18519F088((uint64_t)v11, &qword_1ECD75B20);
  if (v7)
    v8 = sub_186507FB4();
  else
    v8 = 0;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
  v9 = (void *)sub_185247F8C();
  swift_unknownObjectRetain();
  objc_msgSend(v9, sel__setObject_forTraitToken_, v8, sub_185247F14(a3, a4, (uint64_t)&unk_1E16A2758, (uint64_t (*)(uint64_t))sub_18559C68C));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_18559A584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[4];
  _BYTE v13[32];
  uint64_t v14[4];

  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 24);
  v14[3] = swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_0(v14);
  v7(a1, a3, a4);
  sub_1850F69D4((uint64_t)v14, (uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  swift_dynamicCast();
  sub_1850F26F8((uint64_t)v13, (uint64_t)v12, &qword_1ECD75B20);
  v8 = v12[3];
  sub_18519F088((uint64_t)v12, &qword_1ECD75B20);
  if (v8)
    v9 = sub_186507FB4();
  else
    v9 = 0;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
  v10 = (void *)sub_185247F8C();
  swift_unknownObjectRetain();
  objc_msgSend(v10, sel__setObject_forTraitToken_, v9, sub_1852480D0(a3, a4, (uint64_t)&unk_1E16A25F0, (uint64_t (*)(uint64_t))sub_18559C59C));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_18559A700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v6;
  void *v7;
  double v9;

  (*(void (**)(double *__return_ptr, uint64_t, uint64_t, uint64_t))(a4 + 24))(&v9, a1, a3, a4);
  v6 = v9;
  v7 = (void *)sub_185247F8C();
  swift_unknownObjectRetain();
  objc_msgSend(v7, sel__setCGFloatValue_forTraitToken_, sub_1852480D0(a3, a4, (uint64_t)&unk_1E16A25A0, (uint64_t (*)(uint64_t))sub_185571908), v6);
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_18559A7C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  void *v7;
  uint64_t v9;

  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))(a4 + 24))(&v9, a1, a3, a4);
  v6 = v9;
  v7 = (void *)sub_185247F8C();
  swift_unknownObjectRetain();
  objc_msgSend(v7, sel__setNSIntegerValue_forTraitToken_, v6, sub_1852480D0(a3, a4, (uint64_t)&unk_1E16A2578, (uint64_t (*)(uint64_t))sub_18559C560));
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_18559A878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[4];
  _BYTE v13[32];
  uint64_t v14[4];

  swift_getAssociatedTypeWitness();
  v14[3] = swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_0(v14);
  swift_getAssociatedTypeWitness();
  sub_186507618();
  sub_1850F69D4((uint64_t)v14, (uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  swift_dynamicCast();
  sub_1850F26F8((uint64_t)v13, (uint64_t)v12, &qword_1ECD75B20);
  v8 = v12[3];
  sub_18519F088((uint64_t)v12, &qword_1ECD75B20);
  if (v8)
    v9 = sub_186507FB4();
  else
    v9 = 0;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
  v10 = (void *)sub_185247F8C();
  swift_unknownObjectRetain();
  objc_msgSend(v10, sel__setObject_forTraitToken_, v9, sub_185249B74(a3, a4, a5, (uint64_t)&unk_1E16A2528, (uint64_t (*)(uint64_t))sub_18559C50C));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_18559AA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  double v10;

  swift_getAssociatedTypeWitness();
  sub_186507618();
  v8 = (void *)sub_185247F8C();
  swift_unknownObjectRetain();
  objc_msgSend(v8, sel__setCGFloatValue_forTraitToken_, sub_185249B74(a3, a4, a5, (uint64_t)&unk_1E16A2500, (uint64_t (*)(uint64_t))sub_18559C4E0), v10);
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_18559AB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  double v10;

  swift_getAssociatedTypeWitness();
  sub_186507618();
  v8 = (void *)sub_185247F8C();
  swift_unknownObjectRetain();
  objc_msgSend(v8, sel__setCGFloatValue_forTraitToken_, sub_185249B74(a3, a4, a5, (uint64_t)&unk_1E16A24D8, (uint64_t (*)(uint64_t))sub_18559C4E0), v10);
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t sub_18559ABEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  uint64_t v10;

  swift_getAssociatedTypeWitness();
  sub_186507618();
  v8 = (void *)sub_185247F8C();
  swift_unknownObjectRetain();
  objc_msgSend(v8, sel__setNSIntegerValue_forTraitToken_, v10, sub_185249B74(a3, a4, a5, (uint64_t)&unk_1E16A24B0, (uint64_t (*)(uint64_t))sub_18559C4C4));
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

unint64_t sub_18559ACC8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDD83E40;
  if (!qword_1EDD83E40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EDD8AB20);
    result = MEMORY[0x186DC9F28](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EDD83E40);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x186DC9F1C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_18559AD58()
{
  swift_release();
  return swift_deallocObject();
}

void type metadata accessor for UIUserInterfaceIdiom(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84378);
}

void type metadata accessor for UIForceTouchCapability(uint64_t a1)
{
  sub_185249668(a1, (unint64_t *)&unk_1EDD84368);
}

void type metadata accessor for UILegibilityWeight(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84360);
}

void type metadata accessor for UIUserInterfaceActiveAppearance(uint64_t a1)
{
  sub_185249668(a1, (unint64_t *)&unk_1ECD75558);
}

void type metadata accessor for UINSToolbarItemPresentationSize(uint64_t a1)
{
  sub_185249668(a1, (unint64_t *)&unk_1EDD84350);
}

void type metadata accessor for DynamicRange(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84348);
}

void type metadata accessor for UISceneCaptureState(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84340);
}

void type metadata accessor for UIScreenTouchLevel(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84338);
}

void type metadata accessor for _UIUserInterfacePresentationSemanticContext(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84330);
}

void type metadata accessor for _UISplitViewControllerContext(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84328);
}

void type metadata accessor for _UIUserInterfaceVibrancy(uint64_t a1)
{
  sub_185249668(a1, (unint64_t *)&unk_1EDD826A0);
}

void type metadata accessor for _UIUserInterfaceRenderingMode(uint64_t a1)
{
  sub_185249668(a1, (unint64_t *)&unk_1EDD84318);
}

void type metadata accessor for _UITraitCollectionFocusSystemState(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84310);
}

void type metadata accessor for _UIBacklightLuminance(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84308);
}

void type metadata accessor for _UIInterfaceProtectionState(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84300);
}

uint64_t sub_18559AEA8()
{
  return 16;
}

__n128 sub_18559AEB4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559AEC0()
{
  return 16;
}

__n128 sub_18559AECC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559AED8()
{
  return 16;
}

__n128 sub_18559AEE4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559AEF0()
{
  return 16;
}

__n128 sub_18559AEFC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559AF08()
{
  return 16;
}

__n128 sub_18559AF14(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559AF20()
{
  return 16;
}

__n128 sub_18559AF2C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559AF38()
{
  return 16;
}

__n128 sub_18559AF44(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559AF50()
{
  return 16;
}

__n128 sub_18559AF5C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559AF68()
{
  return 16;
}

__n128 sub_18559AF74(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559AF80()
{
  return 16;
}

__n128 sub_18559AF8C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559AF98()
{
  return 16;
}

__n128 sub_18559AFA4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559AFB0()
{
  return 16;
}

__n128 sub_18559AFBC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559AFC8()
{
  return 16;
}

__n128 sub_18559AFD4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559AFE0()
{
  return 16;
}

__n128 sub_18559AFEC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559AFF8()
{
  return 16;
}

__n128 sub_18559B004(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559B010()
{
  return 16;
}

__n128 sub_18559B01C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559B028()
{
  return 16;
}

__n128 sub_18559B034(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559B040()
{
  return 16;
}

__n128 sub_18559B04C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559B058()
{
  return 16;
}

__n128 sub_18559B064(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559B070()
{
  return 16;
}

__n128 sub_18559B07C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559B088()
{
  return 16;
}

__n128 sub_18559B094(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559B0A0()
{
  return 16;
}

__n128 sub_18559B0AC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559B0B8()
{
  return 16;
}

__n128 sub_18559B0C4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559B0D0()
{
  return 16;
}

__n128 sub_18559B0DC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559B0E8()
{
  return 16;
}

__n128 sub_18559B0F4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559B100()
{
  return 16;
}

__n128 sub_18559B10C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_18559B118()
{
  return 16;
}

__n128 sub_18559B124(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of static UITraitDefinition.defaultValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static UITraitDefinition.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static UITraitDefinition.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of static UITraitDefinition.affectsColorAppearance.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of static UITraitDefinition._defaultValueRepresentsUnspecified.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of static UITraitDefinition._isPrivate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of static _UICustomRawRepresentableTraitDefinition._customRawValue(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of static _UICustomRawRepresentableTraitDefinition._value(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of UIMutableTraits.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

{
  return (*(uint64_t (**)(void))(a5 + 104))();
}

{
  return (*(uint64_t (**)(void))(a5 + 128))();
}

{
  return (*(uint64_t (**)(void))(a5 + 152))();
}

{
  return (*(uint64_t (**)(void))(a5 + 176))();
}

{
  return (*(uint64_t (**)(void))(a5 + 200))();
}

{
  return (*(uint64_t (**)(void))(a5 + 224))();
}

{
  return (*(uint64_t (**)(void))(a5 + 248))();
}

{
  return (*(uint64_t (**)(void))(a5 + 272))();
}

uint64_t dispatch thunk of UIMutableTraits.subscript.modify(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

{
  return (*(uint64_t (**)(void))(a6 + 48))();
}

{
  return (*(uint64_t (**)(void))(a6 + 72))();
}

{
  return (*(uint64_t (**)(void))(a6 + 96))();
}

{
  return (*(uint64_t (**)(void))(a6 + 120))();
}

{
  return (*(uint64_t (**)(void))(a6 + 144))();
}

{
  return (*(uint64_t (**)(void))(a6 + 168))();
}

{
  return (*(uint64_t (**)(void))(a6 + 192))();
}

{
  return (*(uint64_t (**)(void))(a6 + 216))();
}

{
  return (*(uint64_t (**)(void))(a6 + 240))();
}

{
  return (*(uint64_t (**)(void))(a6 + 264))();
}

{
  return (*(uint64_t (**)(void))(a6 + 288))();
}

uint64_t dispatch thunk of UIMutableTraits.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

{
  return (*(uint64_t (**)(void))(a5 + 88))();
}

uint64_t dispatch thunk of UIMutableTraits.subscript.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a7 + 64))(a1, a2 & 1);
}

{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a7 + 112))(a1, a2 & 1);
}

{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a7 + 160))(a1, a2 & 1);
}

uint64_t dispatch thunk of UIMutableTraits.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 296))();
}

{
  return (*(uint64_t (**)(void))(a6 + 320))();
}

{
  return (*(uint64_t (**)(void))(a6 + 344))();
}

{
  return (*(uint64_t (**)(void))(a6 + 368))();
}

uint64_t dispatch thunk of UIMutableTraits.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 304))();
}

{
  return (*(uint64_t (**)(void))(a7 + 328))();
}

{
  return (*(uint64_t (**)(void))(a7 + 352))();
}

{
  return (*(uint64_t (**)(void))(a7 + 376))();
}

uint64_t dispatch thunk of UIMutableTraits.subscript.modify(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 312))();
}

{
  return (*(uint64_t (**)(void))(a7 + 336))();
}

{
  return (*(uint64_t (**)(void))(a7 + 360))();
}

{
  return (*(uint64_t (**)(void))(a7 + 384))();
}

uint64_t dispatch thunk of UITraitChangeObservable.registerForTraitChanges<A>(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t dispatch thunk of UITraitChangeObservable.registerForTraitChanges(_:target:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of UITraitChangeObservable.registerForTraitChanges(_:action:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of UITraitChangeObservable.unregisterForTraitChanges(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

ValueMetadata *type metadata accessor for UITraitUserInterfaceIdiom()
{
  return &type metadata for UITraitUserInterfaceIdiom;
}

ValueMetadata *type metadata accessor for UITraitDisplayScale()
{
  return &type metadata for UITraitDisplayScale;
}

ValueMetadata *type metadata accessor for UITraitVerticalSizeClass()
{
  return &type metadata for UITraitVerticalSizeClass;
}

ValueMetadata *type metadata accessor for UITraitForceTouchCapability()
{
  return &type metadata for UITraitForceTouchCapability;
}

ValueMetadata *type metadata accessor for UITraitDisplayGamut()
{
  return &type metadata for UITraitDisplayGamut;
}

ValueMetadata *type metadata accessor for UITraitUserInterfaceLevel()
{
  return &type metadata for UITraitUserInterfaceLevel;
}

ValueMetadata *type metadata accessor for UITraitActiveAppearance()
{
  return &type metadata for UITraitActiveAppearance;
}

ValueMetadata *type metadata accessor for UITraitToolbarItemPresentationSize()
{
  return &type metadata for UITraitToolbarItemPresentationSize;
}

ValueMetadata *type metadata accessor for UITraitImageDynamicRange()
{
  return &type metadata for UITraitImageDynamicRange;
}

ValueMetadata *type metadata accessor for UITraitSceneCaptureState()
{
  return &type metadata for UITraitSceneCaptureState;
}

ValueMetadata *type metadata accessor for UITraitTypesettingLanguage()
{
  return &type metadata for UITraitTypesettingLanguage;
}

ValueMetadata *type metadata accessor for UITraitTouchLevel()
{
  return &type metadata for UITraitTouchLevel;
}

ValueMetadata *type metadata accessor for UITraitArtworkSubtype()
{
  return &type metadata for UITraitArtworkSubtype;
}

ValueMetadata *type metadata accessor for UITraitDisplayCornerRadius()
{
  return &type metadata for UITraitDisplayCornerRadius;
}

ValueMetadata *type metadata accessor for UITraitPresentationSemanticContext()
{
  return &type metadata for UITraitPresentationSemanticContext;
}

ValueMetadata *type metadata accessor for UITraitSplitViewControllerContext()
{
  return &type metadata for UITraitSplitViewControllerContext;
}

ValueMetadata *type metadata accessor for UITraitVibrancy()
{
  return &type metadata for UITraitVibrancy;
}

ValueMetadata *type metadata accessor for UITraitUserInterfaceRenderingMode()
{
  return &type metadata for UITraitUserInterfaceRenderingMode;
}

ValueMetadata *type metadata accessor for UITraitFocusSystemState()
{
  return &type metadata for UITraitFocusSystemState;
}

ValueMetadata *type metadata accessor for UITraitBacklightLuminance()
{
  return &type metadata for UITraitBacklightLuminance;
}

ValueMetadata *type metadata accessor for _UITraitInterfaceProtectionState()
{
  return &type metadata for _UITraitInterfaceProtectionState;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for _UIUpdateRequest(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84178);
}

uint64_t __swift_memcpy12_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t sub_18559B4EC(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 12))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_18559B50C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 12) = v3;
  return result;
}

void type metadata accessor for CAFrameRateRange(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84180);
}

void type metadata accessor for UIViewAnimatingState(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84188);
}

void type metadata accessor for UIViewAnimatingPosition(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84190);
}

void type metadata accessor for _UIBackgroundConfigurationShadowType(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84198);
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for UIAnimatableCornerRadii(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UIAnimatableCornerRadii(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 64) = v3;
  return result;
}

void type metadata accessor for CACornerRadii(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD81380);
}

void type metadata accessor for FormattingDescriptorListStyle(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD841A0);
}

void type metadata accessor for FormattingDescriptorAttributeState(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD841A8);
}

void type metadata accessor for _UIVisualEffectTransitionDirection(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD841B0);
}

void type metadata accessor for UIApplicationSceneInterfaceOrientationMode(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD841B8);
}

void type metadata accessor for UIInterfaceOrientation(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD841C0);
}

void type metadata accessor for Style(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD841C8);
}

void type metadata accessor for UIAxis(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD841D0);
}

void type metadata accessor for _UIFluidSliderDriverState(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD841D8);
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for UIAnimatableTransform.Vector3(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UIAnimatableTransform.Vector3(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CAPoint3D(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD841E0);
}

void type metadata accessor for CGRectEdge(uint64_t a1)
{
  sub_185249668(a1, (unint64_t *)&unk_1EDD841E8);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD82A90);
}

void type metadata accessor for _UISliderFluidUpdateSource(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD841F8);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_185249668(a1, &qword_1ECD75330);
}

void type metadata accessor for UIAccessibilityTraits(uint64_t a1)
{
  sub_185249668(a1, (unint64_t *)&unk_1EDD81988);
}

void type metadata accessor for Level(uint64_t a1)
{
  sub_185249668(a1, (unint64_t *)&unk_1EDD84200);
}

void type metadata accessor for Width(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84210);
}

void type metadata accessor for Weight(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84218);
}

uint64_t getEnumTagSinglePayload for SpringBehavior(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SpringBehavior(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for UIFloatRange(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84220);
}

void type metadata accessor for _UITraitColorVariant(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84228);
}

void type metadata accessor for TextEffectStyle(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84230);
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD81E80);
}

void type metadata accessor for UICornerCurve(uint64_t a1)
{
  sub_185249668(a1, (unint64_t *)&unk_1EDD84238);
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for CompoundSpringAnimationState(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CompoundSpringAnimationState(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

void type metadata accessor for CGAffineTransform(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD81390);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84248);
}

void type metadata accessor for UIListEnvironment(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84250);
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84258);
}

void type metadata accessor for __UIContentUnavailableAlignment(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84260);
}

void type metadata accessor for ComponentKey(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84268);
}

void type metadata accessor for Highlight(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84270);
}

void type metadata accessor for TextList(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84278);
}

void type metadata accessor for TextAlignment(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84280);
}

void type metadata accessor for DetectionPattern(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84288);
}

void type metadata accessor for UIOffset(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84290);
}

void type metadata accessor for NSDirectionalEdgeInsets(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84298);
}

void type metadata accessor for URLThumbnailDictionaryItem(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD842A0);
}

void type metadata accessor for __UIListContentTextTransform(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD842A8);
}

void type metadata accessor for __UIListContentTextAlignment(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD842B0);
}

void type metadata accessor for Event(uint64_t a1)
{
  sub_185249668(a1, (unint64_t *)&unk_1EDD842B8);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD814E0);
}

void type metadata accessor for _UIHDRHeadroomUsage(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD842C8);
}

void type metadata accessor for __UIButtonConfigurationTitleAlignment(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD842D0);
}

void type metadata accessor for __UIButtonConfigurationIndicator(uint64_t a1)
{
  sub_185249668(a1, (unint64_t *)&unk_1EDD842D8);
}

void type metadata accessor for __UIButtonConfigurationMacIdiomStyle(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD842E8);
}

void type metadata accessor for __UIButtonConfigurationSize(uint64_t a1)
{
  sub_185249668(a1, (unint64_t *)&unk_1EDD842F0);
}

uint64_t storeEnumTagSinglePayload for UIAnimatableNormalizedRect(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD825C8);
}

uint64_t sub_18559BAD0()
{
  return sub_1852478E0((unint64_t *)&unk_1ECD75730, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_186667890);
}

uint64_t sub_18559BAFC()
{
  return sub_1852478E0((unint64_t *)&unk_1EDD843E0, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&unk_1866657A8);
}

uint64_t sub_18559BB28()
{
  return sub_1852478E0(&qword_1EDD843F0, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1866658D0);
}

uint64_t sub_18559BB54()
{
  return sub_1852478E0(&qword_1EDD843F8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1866658A4);
}

uint64_t sub_18559BB80()
{
  return sub_1852478E0(&qword_1EDD84400, (uint64_t (*)(uint64_t))type metadata accessor for URLThumbnailDictionaryItem, (uint64_t)&unk_186665A48);
}

uint64_t sub_18559BBAC()
{
  return sub_1852478E0(&qword_1EDD84408, (uint64_t (*)(uint64_t))type metadata accessor for URLThumbnailDictionaryItem, (uint64_t)&unk_186665A1C);
}

uint64_t sub_18559BBD8()
{
  return sub_1852478E0(&qword_1EDD84410, (uint64_t (*)(uint64_t))type metadata accessor for URLThumbnailDictionaryItem, (uint64_t)&unk_186665AB8);
}

uint64_t sub_18559BC04()
{
  return sub_1852478E0(&qword_1EDD84418, (uint64_t (*)(uint64_t))type metadata accessor for DetectionPattern, (uint64_t)&unk_186665BA0);
}

uint64_t sub_18559BC30()
{
  return sub_1852478E0(&qword_1EDD84420, (uint64_t (*)(uint64_t))type metadata accessor for DetectionPattern, (uint64_t)&unk_186665B74);
}

uint64_t sub_18559BC5C()
{
  return sub_1852478E0(&qword_1EDD84428, (uint64_t (*)(uint64_t))type metadata accessor for TextAlignment, (uint64_t)&unk_186665CB4);
}

uint64_t sub_18559BC88()
{
  return sub_1852478E0(&qword_1EDD84430, (uint64_t (*)(uint64_t))type metadata accessor for TextAlignment, (uint64_t)&unk_186665C88);
}

uint64_t sub_18559BCB4()
{
  return sub_1852478E0(&qword_1EDD84438, (uint64_t (*)(uint64_t))type metadata accessor for TextList, (uint64_t)&unk_186665DC8);
}

uint64_t sub_18559BCE0()
{
  return sub_1852478E0(&qword_1EDD84440, (uint64_t (*)(uint64_t))type metadata accessor for TextList, (uint64_t)&unk_186665D9C);
}

uint64_t sub_18559BD0C()
{
  return sub_1852478E0(&qword_1EDD84448, (uint64_t (*)(uint64_t))type metadata accessor for Highlight, (uint64_t)&unk_186665EDC);
}

uint64_t sub_18559BD38()
{
  return sub_1852478E0(&qword_1EDD84450, (uint64_t (*)(uint64_t))type metadata accessor for Highlight, (uint64_t)&unk_186665EB0);
}

uint64_t sub_18559BD64()
{
  return sub_1852478E0(&qword_1EDD84458, (uint64_t (*)(uint64_t))type metadata accessor for ComponentKey, (uint64_t)&unk_186665FF0);
}

uint64_t sub_18559BD90()
{
  return sub_1852478E0(&qword_1EDD84460, (uint64_t (*)(uint64_t))type metadata accessor for ComponentKey, (uint64_t)&unk_186665FC4);
}

uint64_t sub_18559BDBC()
{
  return sub_1852478E0(&qword_1EDD84468, (uint64_t (*)(uint64_t))type metadata accessor for NSUnderlineStyle, (uint64_t)&unk_186667290);
}

uint64_t sub_18559BDE8()
{
  return sub_1852478E0(&qword_1EDD84470, (uint64_t (*)(uint64_t))type metadata accessor for NSUnderlineStyle, (uint64_t)&unk_186666140);
}

uint64_t sub_18559BE14()
{
  return sub_1852478E0(&qword_1EDD84478, (uint64_t (*)(uint64_t))type metadata accessor for NSUnderlineStyle, (uint64_t)&unk_186666170);
}

uint64_t sub_18559BE40()
{
  return sub_1852478E0(&qword_1EDD84480, (uint64_t (*)(uint64_t))type metadata accessor for NSUnderlineStyle, (uint64_t)&unk_1866661A8);
}

uint64_t sub_18559BE6C()
{
  return sub_1852478E0(&qword_1EDD84488, (uint64_t (*)(uint64_t))type metadata accessor for TextEffectStyle, (uint64_t)&unk_1866662D0);
}

uint64_t sub_18559BE98()
{
  return sub_1852478E0(&qword_1EDD84490, (uint64_t (*)(uint64_t))type metadata accessor for TextEffectStyle, (uint64_t)&unk_1866662A8);
}

uint64_t sub_18559BEC4()
{
  return sub_1852478E0(&qword_1EDD84498, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_186667214);
}

uint64_t sub_18559BEF0()
{
  return sub_1852478E0((unint64_t *)&unk_1EDD844A0, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_1866663A8);
}

uint64_t sub_18559BF1C()
{
  return sub_1852478E0((unint64_t *)&unk_1EDD8B0F0, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_1866671E8);
}

uint64_t sub_18559BF48()
{
  return sub_1852478E0(&qword_1EDD844B0, (uint64_t (*)(uint64_t))type metadata accessor for Width, (uint64_t)&unk_1866671AC);
}

uint64_t sub_18559BF74()
{
  return sub_1852478E0(&qword_1EDD844B8, (uint64_t (*)(uint64_t))type metadata accessor for Width, (uint64_t)&unk_186666498);
}

uint64_t sub_18559BFA0()
{
  return sub_1852478E0((unint64_t *)&unk_1EDD844C0, (uint64_t (*)(uint64_t))type metadata accessor for Width, (uint64_t)&unk_186667180);
}

uint64_t sub_18559BFCC()
{
  return sub_1852478E0(&qword_1EDD82898, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_186667144);
}

uint64_t sub_18559BFF8()
{
  return sub_1852478E0((unint64_t *)&unk_1EDD844D0, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_186666588);
}

uint64_t sub_18559C024()
{
  return sub_1852478E0(&qword_1EDD82890, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_186667118);
}

uint64_t sub_18559C050()
{
  return sub_1852478E0(&qword_1EDD844E0, (uint64_t (*)(uint64_t))type metadata accessor for Level, (uint64_t)&unk_1866670DC);
}

uint64_t sub_18559C07C()
{
  return sub_1852478E0(&qword_1EDD844E8, (uint64_t (*)(uint64_t))type metadata accessor for Level, (uint64_t)&unk_186666678);
}

uint64_t sub_18559C0A8()
{
  return sub_1852478E0((unint64_t *)&unk_1EDD844F0, (uint64_t (*)(uint64_t))type metadata accessor for Level, (uint64_t)&unk_1866670B0);
}

uint64_t sub_18559C0D4()
{
  return sub_1852478E0(&qword_1EDD814F8, (uint64_t (*)(uint64_t))type metadata accessor for UIAccessibilityTraits, (uint64_t)&unk_186667074);
}

uint64_t sub_18559C100()
{
  return sub_1852478E0((unint64_t *)&unk_1EDD84500, (uint64_t (*)(uint64_t))type metadata accessor for UIAccessibilityTraits, (uint64_t)&unk_186666768);
}

uint64_t sub_18559C12C()
{
  return sub_1852478E0(&qword_1EDD81998, (uint64_t (*)(uint64_t))type metadata accessor for UIAccessibilityTraits, (uint64_t)&unk_186667048);
}

uint64_t sub_18559C158()
{
  return sub_1852478E0(&qword_1EDD84510, (uint64_t (*)(uint64_t))type metadata accessor for _UISliderFluidUpdateSource, (uint64_t)&unk_186666888);
}

uint64_t sub_18559C184()
{
  return sub_1852478E0(&qword_1EDD84518, (uint64_t (*)(uint64_t))type metadata accessor for _UISliderFluidUpdateSource, (uint64_t)&unk_186666858);
}

uint64_t sub_18559C1B0()
{
  return sub_1852478E0(&qword_1EDD84520, (uint64_t (*)(uint64_t))type metadata accessor for _UISliderFluidUpdateSource, (uint64_t)&unk_1866668B0);
}

uint64_t sub_18559C1DC()
{
  return sub_1852478E0(&qword_1EDD84528, (uint64_t (*)(uint64_t))type metadata accessor for _UISliderFluidUpdateSource, (uint64_t)&unk_1866668E8);
}

uint64_t sub_18559C208()
{
  return sub_1852478E0(&qword_1EDD84530, (uint64_t (*)(uint64_t))type metadata accessor for UIAxis, (uint64_t)&unk_186666A54);
}

uint64_t sub_18559C234()
{
  return sub_1852478E0(&qword_1EDD84538, (uint64_t (*)(uint64_t))type metadata accessor for UIAxis, (uint64_t)&unk_186666A20);
}

uint64_t sub_18559C260()
{
  return sub_1852478E0(&qword_1EDD84540, (uint64_t (*)(uint64_t))type metadata accessor for UIAxis, (uint64_t)&unk_186666A80);
}

uint64_t sub_18559C28C()
{
  return sub_1852478E0(&qword_1EDD84548, (uint64_t (*)(uint64_t))type metadata accessor for UIAxis, (uint64_t)&unk_186666ABC);
}

uint64_t sub_18559C2B8()
{
  return sub_1852478E0(&qword_1EDD84550, (uint64_t (*)(uint64_t))type metadata accessor for Style, (uint64_t)&unk_186666C08);
}

uint64_t sub_18559C2E4()
{
  return sub_1852478E0(&qword_1EDD84558, (uint64_t (*)(uint64_t))type metadata accessor for _UIVisualEffectTransitionDirection, (uint64_t)&unk_186666CEC);
}

uint64_t sub_18559C310()
{
  return sub_1852478E0(&qword_1EDD84560, (uint64_t (*)(uint64_t))type metadata accessor for UIConfigurationStateCustomKey, (uint64_t)&unk_186666DD8);
}

uint64_t sub_18559C33C()
{
  return sub_1852478E0((unint64_t *)&unk_1EDD84568, (uint64_t (*)(uint64_t))type metadata accessor for UIConfigurationStateCustomKey, (uint64_t)&unk_186666DAC);
}

uint64_t sub_18559C368()
{
  return sub_1852478E0(&qword_1EDD84578, (uint64_t (*)(uint64_t))type metadata accessor for _UIBackgroundConfigurationShadowType, (uint64_t)&unk_186666F44);
}

uint64_t sub_18559C394()
{
  return sub_1852478E0(&qword_1EDD84580, (uint64_t (*)(uint64_t))type metadata accessor for TextEffectStyle, (uint64_t)&unk_186666338);
}

uint64_t sub_18559C3C0()
{
  return sub_1852478E0(&qword_1EDD84588, (uint64_t (*)(uint64_t))type metadata accessor for ComponentKey, (uint64_t)&unk_186666060);
}

uint64_t sub_18559C3EC()
{
  return sub_1852478E0(&qword_1EDD84590, (uint64_t (*)(uint64_t))type metadata accessor for Highlight, (uint64_t)&unk_186665F4C);
}

uint64_t sub_18559C418()
{
  return sub_1852478E0(&qword_1EDD84598, (uint64_t (*)(uint64_t))type metadata accessor for TextList, (uint64_t)&unk_186665E38);
}

uint64_t sub_18559C444()
{
  return sub_1852478E0(&qword_1EDD845A0, (uint64_t (*)(uint64_t))type metadata accessor for TextAlignment, (uint64_t)&unk_186665D24);
}

uint64_t sub_18559C470()
{
  return sub_1852478E0(&qword_1EDD845A8, (uint64_t (*)(uint64_t))type metadata accessor for DetectionPattern, (uint64_t)&unk_186665C10);
}

uint64_t sub_18559C49C()
{
  return swift_deallocObject();
}

id sub_18559C4AC(uint64_t a1)
{
  return sub_185587EF0(a1);
}

uint64_t sub_18559C4B4()
{
  return swift_deallocObject();
}

id sub_18559C4C4(uint64_t a1)
{
  uint64_t *v1;

  return sub_185589380(a1, v1[5], v1[2], v1[3]);
}

uint64_t sub_18559C4D0()
{
  return swift_deallocObject();
}

id sub_18559C4E0(uint64_t a1)
{
  uint64_t *v1;

  return sub_1855891BC(a1, v1[5], v1[2], v1[3]);
}

uint64_t sub_18559C4EC()
{
  return swift_deallocObject();
}

uint64_t sub_18559C4FC()
{
  return swift_deallocObject();
}

id sub_18559C50C(uint64_t a1)
{
  uint64_t *v1;

  return sub_185588A54(a1, v1[5], v1[2], v1[3], v1[4]);
}

uint64_t sub_18559C518()
{
  return swift_deallocObject();
}

uint64_t sub_18559C528(uint64_t a1, uint64_t a2)
{
  return sub_185588EE0(a1, a2) & 1;
}

uint64_t sub_18559C550()
{
  return swift_deallocObject();
}

id sub_18559C560(uint64_t a1)
{
  uint64_t *v1;

  return sub_18558889C(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_18559C56C()
{
  return swift_deallocObject();
}

uint64_t sub_18559C57C()
{
  return swift_deallocObject();
}

uint64_t sub_18559C58C()
{
  return swift_deallocObject();
}

id sub_18559C59C(uint64_t a1)
{
  uint64_t *v1;

  return sub_185588170(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_18559C5A8()
{
  return swift_deallocObject();
}

uint64_t sub_18559C5B8(uint64_t a1, uint64_t a2)
{
  return sub_18559C6BC(a1, a2);
}

uint64_t sub_18559C5CC()
{
  return swift_deallocObject();
}

uint64_t sub_18559C5DC()
{
  return swift_deallocObject();
}

id sub_18559C5EC(uint64_t a1)
{
  uint64_t *v1;

  return sub_185587D74(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_18559C5F8()
{
  return swift_deallocObject();
}

id sub_18559C608(uint64_t a1)
{
  uint64_t *v1;

  return sub_185587C38(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_18559C614()
{
  return swift_deallocObject();
}

uint64_t sub_18559C624()
{
  return swift_deallocObject();
}

id sub_18559C634(uint64_t a1)
{
  uint64_t *v1;

  return sub_18558799C(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_18559C640()
{
  return swift_deallocObject();
}

id sub_18559C650(uint64_t a1)
{
  uint64_t *v1;

  return sub_185587AE0(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_18559C66C()
{
  return swift_deallocObject();
}

uint64_t sub_18559C67C()
{
  return swift_deallocObject();
}

id sub_18559C68C(uint64_t a1)
{
  uint64_t *v1;

  return sub_185587558(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_18559C698()
{
  return swift_deallocObject();
}

uint64_t sub_18559C6A8(uint64_t a1, uint64_t a2)
{
  return sub_18559C6BC(a1, a2);
}

uint64_t sub_18559C6BC(uint64_t a1, uint64_t a2)
{
  return sub_1855885F0(a1, a2) & 1;
}

ValueMetadata *_s13MutableTraitsVMa()
{
  return &_s13MutableTraitsVN;
}

void type metadata accessor for Region(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD849A8);
}

void type metadata accessor for __UIButtonConfigurationCornerStyle(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD849B0);
}

void type metadata accessor for CTRun(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD849B8);
}

void type metadata accessor for CTFont(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD849C0);
}

void type metadata accessor for NSTextAlignment(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD849C8);
}

void type metadata accessor for MarkerFormat(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD849D0);
}

void type metadata accessor for TraitKey(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD82C48);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD82A00);
}

void type metadata accessor for __UICellConfigurationDragState(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD849D8);
}

void type metadata accessor for __UICellConfigurationDropState(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD849E0);
}

void type metadata accessor for CGGradient(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD849E8);
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD849F0);
}

void type metadata accessor for CIContextOption(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD849F8);
}

void type metadata accessor for CGColorSpace(uint64_t a1)
{
  sub_185249668(a1, (unint64_t *)&unk_1EDD84A00);
}

void type metadata accessor for CIImageOption(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD81968);
}

void _s3__C6RegionOMa_0(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84A10);
}

void type metadata accessor for CACornerMask(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84A18);
}

void type metadata accessor for _UISimpleTimedInhibitorClockType(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84A20);
}

ValueMetadata *type metadata accessor for UITraitSelectionIsKey()
{
  return &type metadata for UITraitSelectionIsKey;
}

ValueMetadata *type metadata accessor for UITraitSemanticContext()
{
  return &type metadata for UITraitSemanticContext;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for _UISwiftTraits.HashableMetatype(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 8))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for _UISwiftTraits.HashableMetatype(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for _UISwiftTraits()
{
  return &type metadata for _UISwiftTraits;
}

void type metadata accessor for CALayerCornerCurve(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84A28);
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for UIAnimatableTransform.Epsilon(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UIAnimatableTransform.Epsilon(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

void type metadata accessor for CAMeshVertex(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD814C0);
}

__n128 __swift_memcpy32_4(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for UIAnimatableNormalizedRect(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

void type metadata accessor for CAMeshFace(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD814B8);
}

void type metadata accessor for Name(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84A30);
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84A38);
}

void type metadata accessor for _UIUpdateRequestFlags(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84A40);
}

__n128 __swift_memcpy16_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for RBColor(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84A48);
}

void type metadata accessor for UIRectCorner(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84A50);
}

uint64_t sub_18559CA64()
{
  return sub_1852478E0(&qword_1EDD84A58, (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner, (uint64_t)&unk_186667E7C);
}

uint64_t sub_18559CA90()
{
  return sub_1852478E0(&qword_1EDD84A60, (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner, (uint64_t)&unk_186667E48);
}

uint64_t sub_18559CABC()
{
  return sub_1852478E0(&qword_1EDD84A68, (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner, (uint64_t)&unk_186667EA8);
}

uint64_t sub_18559CAE8()
{
  return sub_1852478E0(&qword_1EDD84A70, (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner, (uint64_t)&unk_186667EE4);
}

uint64_t sub_18559CB14()
{
  return sub_1852478E0(&qword_1EDD84A78, (uint64_t (*)(uint64_t))type metadata accessor for _UIUpdateRequestFlags, (uint64_t)&unk_18666801C);
}

uint64_t sub_18559CB40()
{
  return sub_1852478E0(&qword_1EDD84A80, (uint64_t (*)(uint64_t))type metadata accessor for _UIUpdateRequestFlags, (uint64_t)&unk_186667FEC);
}

uint64_t sub_18559CB6C()
{
  return sub_1852478E0(&qword_1EDD84A88, (uint64_t (*)(uint64_t))type metadata accessor for _UIUpdateRequestFlags, (uint64_t)&unk_186668044);
}

uint64_t sub_18559CB98()
{
  return sub_1852478E0(&qword_1EDD84A90, (uint64_t (*)(uint64_t))type metadata accessor for _UIUpdateRequestFlags, (uint64_t)&unk_18666807C);
}

uint64_t sub_18559CBC4()
{
  return sub_1852478E0(&qword_1EDD84A98, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1866681A8);
}

uint64_t sub_18559CBF0()
{
  return sub_1852478E0(&qword_1EDD84AA0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_18666817C);
}

uint64_t sub_18559CC1C()
{
  return sub_1852478E0(&qword_1EDD84AA8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_1866682BC);
}

uint64_t sub_18559CC48()
{
  return sub_1852478E0(&qword_1EDD84AB0, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_186668290);
}

uint64_t sub_18559CC74()
{
  return sub_1852478E0(&qword_1EDD84AB8, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_18666832C);
}

uint64_t sub_18559CCA0()
{
  return sub_1852478E0(&qword_1EDD84AC0, (uint64_t (*)(uint64_t))type metadata accessor for CALayerCornerCurve, (uint64_t)&unk_186668420);
}

uint64_t sub_18559CCCC()
{
  return sub_1852478E0(&qword_1EDD84AC8, (uint64_t (*)(uint64_t))type metadata accessor for CALayerCornerCurve, (uint64_t)&unk_1866683F4);
}

uint64_t sub_18559CCF8()
{
  return sub_1852478E0(&qword_1EDD84AD0, (uint64_t (*)(uint64_t))type metadata accessor for CALayerCornerCurve, (uint64_t)&unk_186668490);
}

uint64_t sub_18559CD24()
{
  return sub_1852478E0(&qword_1EDD84AD8, (uint64_t (*)(uint64_t))type metadata accessor for CACornerMask, (uint64_t)&unk_186668650);
}

uint64_t sub_18559CD50()
{
  return sub_1852478E0(&qword_1EDD84AE0, (uint64_t (*)(uint64_t))type metadata accessor for CACornerMask, (uint64_t)&unk_18666861C);
}

uint64_t sub_18559CD7C()
{
  return sub_1852478E0(&qword_1EDD84AE8, (uint64_t (*)(uint64_t))type metadata accessor for CACornerMask, (uint64_t)&unk_18666867C);
}

uint64_t sub_18559CDA8()
{
  return sub_1852478E0(&qword_1EDD84AF0, (uint64_t (*)(uint64_t))type metadata accessor for CACornerMask, (uint64_t)&unk_1866686B8);
}

uint64_t sub_18559CDD4()
{
  return sub_1852478E0(&qword_1EDD84AF8, (uint64_t (*)(uint64_t))type metadata accessor for CIImageOption, (uint64_t)&unk_1866687F8);
}

uint64_t sub_18559CE00()
{
  return sub_1852478E0(&qword_1EDD84B00, (uint64_t (*)(uint64_t))type metadata accessor for CIImageOption, (uint64_t)&unk_1866687CC);
}

uint64_t sub_18559CE2C()
{
  return sub_1852478E0(&qword_1EDD84B08, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_18666890C);
}

uint64_t sub_18559CE58()
{
  return sub_1852478E0(&qword_1EDD84B10, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_1866688E0);
}

uint64_t sub_18559CE84()
{
  return sub_1852478E0(&qword_1EDD84B18, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_186668A20);
}

uint64_t sub_18559CEB0()
{
  return sub_1852478E0(&qword_1EDD84B20, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1866689F4);
}

uint64_t sub_18559CEDC()
{
  return sub_1852478E0(&qword_1EDD84B28, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_186668B34);
}

uint64_t sub_18559CF08()
{
  return sub_1852478E0((unint64_t *)&unk_1EDD84B30, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_186668B08);
}

uint64_t sub_18559CF34()
{
  return sub_1852478E0(&qword_1EDD82C68, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_186668BA4);
}

uint64_t sub_18559CF60()
{
  return sub_1852478E0(&qword_1EDD84B40, (uint64_t (*)(uint64_t))type metadata accessor for MarkerFormat, (uint64_t)&unk_186668C88);
}

uint64_t sub_18559CF8C()
{
  return sub_1852478E0(&qword_1EDD84B48, (uint64_t (*)(uint64_t))type metadata accessor for MarkerFormat, (uint64_t)&unk_186668C60);
}

uint64_t sub_18559CFB8()
{
  return sub_1852478E0(&qword_1EDD84B50, (uint64_t (*)(uint64_t))type metadata accessor for NSTextAlignment, (uint64_t)&unk_186668DA4);
}

uint64_t sub_18559CFE4()
{
  return sub_1852478E0(&qword_1EDD84B58, (uint64_t (*)(uint64_t))type metadata accessor for CTFont, (uint64_t)&unk_186668E18);
}

uint64_t sub_18559D010()
{
  return sub_1852478E0(&qword_1EDD84B60, (uint64_t (*)(uint64_t))type metadata accessor for CTFont, (uint64_t)&unk_186668E44);
}

uint64_t sub_18559D03C()
{
  return sub_1852478E0((unint64_t *)&unk_1EDD84B68, (uint64_t (*)(uint64_t))type metadata accessor for MarkerFormat, (uint64_t)&unk_186668CF0);
}

uint64_t sub_18559D068()
{
  return sub_1852478E0((unint64_t *)&unk_1EDD829F0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_186668A90);
}

uint64_t sub_18559D094()
{
  return sub_1852478E0((unint64_t *)&unk_1EDD84B78, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_18666897C);
}

uint64_t sub_18559D0C0()
{
  return sub_1852478E0(&qword_1EDD81960, (uint64_t (*)(uint64_t))type metadata accessor for CIImageOption, (uint64_t)&unk_186668868);
}

uint64_t sub_18559D0EC()
{
  return sub_1852478E0(&qword_1EDD84B88, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_186668218);
}

void type metadata accessor for _UIUserInterfaceSemanticContext(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84C10);
}

void type metadata accessor for _UITraitCollectionSelectionIsKey(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84C18);
}

void type metadata accessor for UICollectionViewLayoutInvalidationContextIntent(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84C20);
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t sub_18559D170(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_18559D1C4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

void type metadata accessor for UIViewSpringAnimationParameters(uint64_t a1)
{
  sub_185249668(a1, &qword_1EDD84C28);
}

uint64_t sub_18559D324()
{
  uint64_t v0;

  v0 = sub_186507264();
  __swift_allocate_value_buffer(v0, qword_1EDDA87B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDDA87B8);
  return sub_186507258();
}

void sub_18559D4D0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v2 = OBJC_IVAR____UIZoomTransitionController_dismissInteraction;
  v3 = *(void **)(v1 + OBJC_IVAR____UIZoomTransitionController_dismissInteraction);
  *(_QWORD *)(v1 + OBJC_IVAR____UIZoomTransitionController_dismissInteraction) = a1;
  v6 = a1;
  v4 = objc_msgSend(v3, sel_view);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v3, sel_setIsEnabled_, 0);
    objc_msgSend(v3, sel_setIsEnabled_, 1);
    objc_msgSend(v5, sel_removeInteraction_, v3);
    objc_msgSend(v5, sel_addInteraction_, *(_QWORD *)(v1 + v2));

  }
  objc_msgSend(*(id *)(v1 + v2), sel_setDelegate_, v1);

}

char *sub_18559D5A8()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;
  _BYTE *v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  objc_class *v8;
  _BYTE *v9;
  id v10;
  char *v11;
  objc_super v13;
  objc_super v14;

  *(_QWORD *)&v0[OBJC_IVAR____UIZoomTransitionController_clientTransition] = 0;
  v0[OBJC_IVAR____UIZoomTransitionController_isZoomingIn] = 1;
  v0[OBJC_IVAR____UIZoomTransitionController_isForNavigation] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR____UIZoomTransitionController_activeTransitionContext] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____UIZoomTransitionController_foregroundView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____UIZoomTransitionController_backgroundView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____UIZoomTransitionController_viewToScaleBack] = 0;
  v0[OBJC_IVAR____UIZoomTransitionController_isPreempting] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____UIZoomTransitionController_morphInteractionAssertion] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____UIZoomTransitionController_shimPropertyAnimator] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____UIZoomTransitionController_wrappedSourceView] = 0;
  v1 = OBJC_IVAR____UIZoomTransitionController_transitionOverlayView;
  v2 = objc_allocWithZone((Class)_UITouchPassthroughView);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, sel_init);
  *(_QWORD *)&v3[OBJC_IVAR____UIZoomTransitionController_fallbackSourceView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____UIZoomTransitionController_pendingDismissDestinationView] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____UIZoomTransitionController_showcasePortal] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____UIZoomTransitionController_morphAnimation] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _UIMagicMorphAnimation()), sel_init);
  v4 = objc_msgSend(objc_allocWithZone((Class)_UIDismissInteraction), sel_init);
  *(_QWORD *)&v3[OBJC_IVAR____UIZoomTransitionController_dismissInteraction] = v4;
  v5 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), sel_init);
  *(_QWORD *)&v3[OBJC_IVAR____UIZoomTransitionController_dimmingView] = v5;
  objc_msgSend(v5, sel_setUserInteractionEnabled_, 0);
  v6 = objc_msgSend(objc_allocWithZone((Class)UIView), sel_initWithFrame_, 0.0, 0.0, 1.0, 1.0);
  *(_QWORD *)&v3[OBJC_IVAR____UIZoomTransitionController_shimAnimationView] = v6;
  v7 = *(void **)&v0[v1];
  v8 = (objc_class *)type metadata accessor for _UIZoomToolbarTransitionController();
  v9 = objc_allocWithZone(v8);
  v9[OBJC_IVAR____TtC5UIKit34_UIZoomToolbarTransitionController_isZoomingIn] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC5UIKit34_UIZoomToolbarTransitionController_temporaryViews] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v9[OBJC_IVAR____TtC5UIKit34_UIZoomToolbarTransitionController_toolbarSnapshot] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC5UIKit34_UIZoomToolbarTransitionController_overlay] = v7;
  v14.receiver = v9;
  v14.super_class = v8;
  v10 = v7;
  *(_QWORD *)&v3[OBJC_IVAR____UIZoomTransitionController_toolbarTransitionController] = objc_msgSendSuper2(&v14, sel_init);
  v3[OBJC_IVAR____UIZoomTransitionController_style] = 0;
  v3[OBJC_IVAR____UIZoomTransitionController_isPresentingSheet] = 0;

  v13.receiver = v3;
  v13.super_class = (Class)_UIZoomTransitionController;
  v11 = (char *)objc_msgSendSuper2(&v13, sel_init);
  objc_msgSend(*(id *)&v11[OBJC_IVAR____UIZoomTransitionController_dismissInteraction], sel_setDelegate_, v11);
  return v11;
}

void sub_18559D99C(char *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  char **v4;
  unsigned int v5;
  void *ObjCClassFromMetadata;
  id v7;
  void *v8;
  uint64_t *v9;
  id v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  char *v15;
  char *v16;
  void *v17;
  char *v18;
  id v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  BOOL v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char isEscapingClosureAtFileLocation;
  id v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  char *v52;
  _QWORD *v53;
  void *v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  void *v60;
  void *v61;
  void *v62;
  id v63;
  id v64;
  void *v65;
  uint64_t v66;
  char v67;
  void *v68;
  char *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  _QWORD *v73;
  void *v74;
  char *v75;
  void *v76;
  id v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  void *v82;
  void *v83;
  void *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  char *v92;
  id v93;
  void *v94;
  uint64_t v95;
  CGFloat v96;
  uint64_t v97;
  objc_class *v98;
  _BYTE *v99;
  void (**v100)();
  id v101;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v103;
  void *v104;
  char v105;
  id v106;
  __int128 v107;
  uint64_t v108;
  __int128 v109;
  id v110;
  id v111;
  char *v112;
  _QWORD *v113;
  char **v114;
  char *v115;
  void *v116;
  id v117;
  id v118;
  id v119;
  char **v120;
  __int128 v121;
  id v122;
  objc_super v123;
  __int128 aBlock;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  objc_super v130;
  objc_super v131;
  id v132[2];
  CGRect v133;

  v2 = v1;
  v4 = &selRef_setSpotlightView_;
  v5 = objc_msgSend(v1, sel_isZoomingIn);
  type metadata accessor for _UIZoomTransitionSettingsDomain();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  if (v5)
  {
    v123.receiver = ObjCClassFromMetadata;
    v123.super_class = (Class)&OBJC_METACLASS____TtC5UIKit31_UIZoomTransitionSettingsDomain;
    v7 = objc_msgSendSuper2(&v123, sel_rootSettings);
    if (!v7)
      goto LABEL_63;
    v8 = v7;
    v9 = &OBJC_IVAR____TtC5UIKit21_UIZoomTransitionSpec_zoomIn;
  }
  else
  {
    v131.receiver = ObjCClassFromMetadata;
    v131.super_class = (Class)&OBJC_METACLASS____TtC5UIKit31_UIZoomTransitionSettingsDomain;
    v10 = objc_msgSendSuper2(&v131, sel_rootSettings);
    if (!v10)
      goto LABEL_64;
    v8 = v10;
    v9 = &OBJC_IVAR____TtC5UIKit21_UIZoomTransitionSpec_zoomOut;
  }
  type metadata accessor for _UIZoomTransitionSpec();
  v11 = (char *)*(id *)(swift_dynamicCastClassUnconditional() + *v9);

  v132[0] = v11;
  v12 = *(void **)&v11[OBJC_IVAR____TtC5UIKit30_UIZoomTransitionAnimationSpec_general];
  v13 = objc_allocWithZone((Class)_s22HybridPropertyAnimatorCMa());
  v14 = v12;
  v15 = sub_18577802C(0, 0, 1048632, (uint64_t)v12, 0.0);
  v15[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__pausesOnCompletion] = 1;
  v16 = (char *)OBJC_IVAR____UIZoomTransitionController_shimPropertyAnimator;
  v17 = *(void **)((char *)v2 + OBJC_IVAR____UIZoomTransitionController_shimPropertyAnimator);
  *(_QWORD *)((char *)v2 + OBJC_IVAR____UIZoomTransitionController_shimPropertyAnimator) = v15;
  v18 = v15;

  *(_QWORD *)((char *)v2 + OBJC_IVAR____UIZoomTransitionController_activeTransitionContext) = a1;
  swift_unknownObjectRelease();
  swift_unknownObjectRetain();
  v19 = objc_msgSend(v2, sel_dismissInteraction);
  LODWORD(v11) = objc_msgSend(v19, sel_isActive);

  LODWORD(v121) = (_DWORD)v11;
  if ((v11 & 1) != 0 || !objc_msgSend(a1, sel_isInteractive))
    goto LABEL_12;
  if (qword_1EDD83AD8 != -1)
    goto LABEL_58;
  while (1)
  {
    v20 = sub_186507264();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EDDA87B8);
    v21 = sub_18650724C();
    v22 = sub_1865078C4();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v23 = 0;
      _os_log_impl(&dword_185066000, v21, v22, "Zoom transition gesture started and ended before startInteractiveTransition called.", v23, 2u);
      MEMORY[0x186DCA030](v23, -1, -1);
    }

LABEL_12:
    v24 = objc_msgSend(a1, sel_viewControllerForKey_, CFSTR("UITransitionContextFromViewController"), (_QWORD)v107);
    if (!v24)
      break;
    v25 = v24;
    v26 = objc_msgSend(a1, sel_viewControllerForKey_, CFSTR("UITransitionContextToViewController"));
    if (!v26)
      goto LABEL_60;
    v27 = v26;
    v115 = v16;
    if (objc_msgSend(v2, v4[460]))
    {
      v119 = v25;
      v28 = v27;
      v29 = objc_msgSend(a1, sel_viewForKey_, CFSTR("UITransitionContextToView"));
      if (!v29)
        goto LABEL_65;
      v30 = *(void **)((char *)v2 + OBJC_IVAR____UIZoomTransitionController_foregroundView);
      *(_QWORD *)((char *)v2 + OBJC_IVAR____UIZoomTransitionController_foregroundView) = v29;

      v31 = objc_msgSend(a1, sel_viewForKey_, CFSTR("UITransitionContextFromView"));
    }
    else
    {
      v28 = v25;
      v119 = v27;
      v32 = objc_msgSend(a1, sel_viewForKey_, CFSTR("UITransitionContextFromView"));
      if (!v32)
        goto LABEL_66;
      v33 = *(void **)((char *)v2 + OBJC_IVAR____UIZoomTransitionController_foregroundView);
      *(_QWORD *)((char *)v2 + OBJC_IVAR____UIZoomTransitionController_foregroundView) = v32;

      v31 = objc_msgSend(a1, sel_viewForKey_, CFSTR("UITransitionContextToView"));
    }
    v34 = v31;
    v35 = *(void **)((char *)v2 + OBJC_IVAR____UIZoomTransitionController_backgroundView);
    *(_QWORD *)((char *)v2 + OBJC_IVAR____UIZoomTransitionController_backgroundView) = v34;

    if ((objc_msgSend(v2, sel_isForNavigation) & 1) != 0
      || (v36 = objc_msgSend(v28, sel_activePresentationController)) == 0)
    {
      v38 = 0;
    }
    else
    {
      v37 = v36;
      objc_opt_self();
      v38 = swift_dynamicCastObjCClass() != 0;

    }
    v112 = v18;
    *((_BYTE *)v2 + OBJC_IVAR____UIZoomTransitionController_isPresentingSheet) = v38;
    v39 = objc_msgSend(a1, sel_containerView);
    v108 = OBJC_IVAR____UIZoomTransitionController_foregroundView;
    v40 = *(void **)((char *)v2 + OBJC_IVAR____UIZoomTransitionController_foregroundView);
    if (!v40)
      goto LABEL_61;
    v41 = v39;
    v42 = v40;
    objc_msgSend(v42, sel_setUserInteractionEnabled_, objc_msgSend(v2, sel_isZoomingIn));

    v122 = (id)objc_opt_self();
    v43 = swift_allocObject();
    *(_QWORD *)(v43 + 16) = v2;
    *(_QWORD *)(v43 + 24) = a1;
    *(_QWORD *)(v43 + 32) = v27;
    *(_QWORD *)(v43 + 40) = v41;
    *(_QWORD *)(v43 + 48) = v28;
    *(_QWORD *)(v43 + 56) = v119;
    *(_QWORD *)(v43 + 64) = v25;
    *(_QWORD *)(v43 + 72) = v132;
    *(_BYTE *)(v43 + 80) = v121;
    v44 = swift_allocObject();
    *(_QWORD *)(v44 + 16) = sub_1855A6814;
    *(_QWORD *)(v44 + 24) = v43;
    *(_QWORD *)&v126 = sub_1855A6A1C;
    *((_QWORD *)&v126 + 1) = v44;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v125 = sub_1855D8DF4;
    *((_QWORD *)&v125 + 1) = &block_descriptor_107;
    v16 = (char *)_Block_copy(&aBlock);
    v18 = (char *)*((_QWORD *)&v126 + 1);
    *(_QWORD *)&v107 = a1;
    swift_unknownObjectRetain();
    v111 = v25;
    v110 = v27;
    v113 = v2;
    v45 = v2;
    a1 = v41;
    v2 = v28;
    v4 = (char **)v119;
    swift_retain();
    swift_release();
    objc_msgSend(v122, sel_performWithoutAnimation_, v16);
    _Block_release(v16);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    v120 = v4;
    v47 = objc_msgSend((id)objc_opt_self(), sel__contextWithSource_zoomed_, v4, v2);
    sub_18559EF70(v47, a1, (char)objc_msgSend(v45, sel_isZoomingIn));
    v49 = v48;

    v118 = a1;
    if (!objc_msgSend(v45, sel_isZoomingIn))
    {
      v56 = objc_msgSend(v2, sel__showcaseView, (_QWORD)v107);
      v53 = v113;
      v52 = v115;
      if (!v56)
        goto LABEL_32;
      v50 = v56;
      v57 = objc_msgSend(v56, sel_window);

      if (!v57)
      {

LABEL_32:
        v58 = *(void **)((char *)v113 + v108);
        if (!v58)
          goto LABEL_69;
        v50 = v58;
      }
      v59 = v49;
      sub_18559F66C();
      v60 = *(void **)((char *)v45 + OBJC_IVAR____UIZoomTransitionController_pendingDismissDestinationView);
      *(_QWORD *)((char *)v45 + OBJC_IVAR____UIZoomTransitionController_pendingDismissDestinationView) = v59;
      v117 = v59;

      goto LABEL_38;
    }
    v50 = v49;
    v51 = objc_msgSend(v2, sel__showcaseView, (_QWORD)v107);
    v53 = v113;
    v52 = v115;
    if (v51)
    {
      v54 = v51;
      v55 = objc_msgSend(v51, sel_window);

      if (v55)
      {
        v117 = v54;
        goto LABEL_38;
      }

    }
    v61 = *(void **)((char *)v113 + v108);
    if (!v61)
      goto LABEL_70;
    v117 = v61;
LABEL_38:
    v116 = v49;
    sub_18559F9C8(v2, v49);
    v62 = *(void **)((char *)v45 + OBJC_IVAR____UIZoomTransitionController_wrappedSourceView);
    v63 = v62;
    v64 = sub_18559FD90(v62);

    v65 = *(void **)((char *)v45 + OBJC_IVAR____UIZoomTransitionController_viewToScaleBack);
    *(_QWORD *)((char *)v45 + OBJC_IVAR____UIZoomTransitionController_viewToScaleBack) = v64;

    v18 = (char *)swift_allocObject();
    *((_QWORD *)v18 + 2) = v45;
    *((_QWORD *)v18 + 3) = v2;
    *((_QWORD *)v18 + 4) = v50;
    v66 = swift_allocObject();
    *(_QWORD *)(v66 + 16) = sub_1855A688C;
    *(_QWORD *)(v66 + 24) = v18;
    *(_QWORD *)&v126 = sub_1855A6A1C;
    *((_QWORD *)&v126 + 1) = v66;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v125 = sub_1855D8DF4;
    *((_QWORD *)&v125 + 1) = &block_descriptor_117;
    v16 = (char *)_Block_copy(&aBlock);
    a1 = v45;
    v2 = v2;
    v4 = (char **)v50;
    swift_retain();
    swift_release();
    objc_msgSend(v122, sel_performWithoutAnimation_, v16);
    _Block_release(v16);
    v67 = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v67 & 1) != 0)
      goto LABEL_56;
    v114 = v4;
    v68 = *(void **)&a1[OBJC_IVAR____UIZoomTransitionController_shimAnimationView];
    objc_msgSend(v68, sel_setAlpha_, 1.0);
    objc_msgSend(v118, sel_insertSubview_atIndex_, v68, 0);
    v69 = *(char **)&v52[(_QWORD)v53];
    if (!v69)
      goto LABEL_62;
    v70 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v71 = *(void **)&v69[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_propertyAnimator];
    v72 = swift_allocObject();
    swift_unknownObjectUnownedInit();
    v73 = (_QWORD *)swift_allocObject();
    v73[2] = v72;
    v73[3] = sub_1855A68A8;
    v73[4] = v70;
    *(_QWORD *)&v126 = sub_1855A6900;
    *((_QWORD *)&v126 + 1) = v73;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v125 = sub_18530A69C;
    *((_QWORD *)&v125 + 1) = &block_descriptor_127;
    v74 = _Block_copy(&aBlock);
    v75 = v69;
    swift_retain_n();
    swift_release();
    objc_msgSend(v71, sel_addAnimations_delayFactor_, v74, 0.0);
    _Block_release(v74);

    swift_release_n();
    v76 = *(void **)&v52[(_QWORD)v53];
    if ((_DWORD)v121)
    {
      if (!v76)
        goto LABEL_67;
      v77 = v76;
      sub_185777778();
    }
    else
    {
      if (!v76)
        goto LABEL_68;
      v77 = v76;
      sub_185777ABC();
    }

    v78 = *(_QWORD *)&a1[OBJC_IVAR____UIZoomTransitionController_morphAnimation];
    v79 = *(char **)(v78 + OBJC_IVAR____UIMagicMorphAnimation_morphView);
    v80 = &v79[OBJC_IVAR____UIMagicMorphView_milestones];
    swift_beginAccess();
    v81 = v79;
    v82 = (void *)sub_1856BE4E0(0xD00000000000001ELL, 0x8000000186686770);
    swift_endAccess();

    if ((v121 & 1) == 0)
    {
      v95 = OBJC_IVAR____UIMagicMorphAnimation_groupCompletion;
      objc_msgSend(*(id *)(v78 + OBJC_IVAR____UIMagicMorphAnimation_groupCompletion), sel_increment);
      sub_1855A0C68((uint64_t)a1, v132, v107, v117);
      objc_msgSend(*(id *)(v78 + v95), sel_complete);
      v83 = v118;
      if (!objc_msgSend(a1, sel_isZoomingIn))
        goto LABEL_53;
      v85 = v2;
      objc_msgSend(v118, sel_bounds);
      v96 = CGRectGetHeight(v133) + -2.0;
      v97 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v98 = (objc_class *)type metadata accessor for _UIMagicMorphView.Milestone();
      v99 = objc_allocWithZone(v98);
      v99[OBJC_IVAR____UIMagicMorphMilestone_property] = 1;
      v99[OBJC_IVAR____UIMagicMorphMilestone_comparisonResult] = 0;
      *(CGFloat *)&v99[OBJC_IVAR____UIMagicMorphMilestone_value] = v96;
      v100 = (void (**)())&v99[OBJC_IVAR____UIMagicMorphMilestone_action];
      *v100 = sub_1855A6960;
      v100[1] = (void (*)())v97;
      v130.receiver = v99;
      v130.super_class = v98;
      v101 = objc_msgSendSuper2(&v130, sel_init);
      swift_beginAccess();
      v93 = v101;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v129 = *(_QWORD *)v80;
      *(_QWORD *)v80 = 0x8000000000000000;
      sub_185647E38((uint64_t)v93, 0xD00000000000001ELL, 0x8000000186686770, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)v80 = v129;
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_52;
    }
    v83 = v118;
    if ((objc_msgSend(a1, sel_isZoomingIn) & 1) == 0
      && (a1[OBJC_IVAR____UIZoomTransitionController_style] & 1) == 0)
    {
      v84 = *(void **)((char *)v53 + v108);
      if (!v84)
        goto LABEL_71;
      v85 = v2;
      objc_msgSend(v84, sel__intersectedSceneCornerRadii);
      v121 = aBlock;
      v107 = v126;
      v109 = v125;
      v86 = v127;
      v87 = v128;
      v88 = *(void **)((char *)v132[0] + OBJC_IVAR____TtC5UIKit30_UIZoomTransitionAnimationSpec_cornerRadiusAdjustment);
      v89 = swift_allocObject();
      *(_QWORD *)(v89 + 16) = v81;
      *(_OWORD *)(v89 + 24) = v121;
      *(_OWORD *)(v89 + 40) = v109;
      *(_OWORD *)(v89 + 56) = v107;
      *(_QWORD *)(v89 + 72) = v86;
      *(_QWORD *)(v89 + 80) = v87;
      *(_QWORD *)&v126 = sub_1855A698C;
      *((_QWORD *)&v126 + 1) = v89;
      v90 = MEMORY[0x1E0C809B0];
      *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v125 = sub_18530A69C;
      *((_QWORD *)&v125 + 1) = &block_descriptor_146;
      v91 = _Block_copy(&aBlock);
      v92 = v81;
      v93 = v88;
      swift_release();
      *(_QWORD *)&v126 = j__signpost_c2_removePresentationModifier_end;
      *((_QWORD *)&v126 + 1) = 0;
      *(_QWORD *)&aBlock = v90;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v125 = sub_1856DA9E8;
      *((_QWORD *)&v125 + 1) = &block_descriptor_149;
      v94 = _Block_copy(&aBlock);
      objc_msgSend(v122, sel__animateUsingSpringBehavior_tracking_animations_completion_, v93, 0, v91, v94);
      _Block_release(v94);
      _Block_release(v91);
LABEL_52:

      v2 = v85;
    }
LABEL_53:
    v103 = swift_allocObject();
    *(_QWORD *)(v103 + 16) = v2;
    v104 = v2;
    v2 = (_QWORD *)swift_allocObject();
    v2[2] = sub_1855A6930;
    v2[3] = v103;
    *(_QWORD *)&v126 = sub_1855A6A1C;
    *((_QWORD *)&v126 + 1) = v2;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v125 = sub_1855D8DF4;
    *((_QWORD *)&v125 + 1) = &block_descriptor_137;
    v16 = (char *)_Block_copy(&aBlock);
    v4 = (char **)*((_QWORD *)&v126 + 1);
    a1 = v104;
    swift_retain();
    swift_release();
    objc_msgSend(v122, sel_performWithoutAnimation_, v16);

    _Block_release(v16);
    v105 = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v105 & 1) == 0)
    {
      v106 = v132[0];
      swift_release();
      swift_release();
      swift_release();

      return;
    }
LABEL_57:
    __break(1u);
LABEL_58:
    swift_once();
  }
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
}

void sub_18559E8C4(char *a1, void *a2, uint64_t a3, void *a4, void *a5, id a6, void *a7, void **a8, char a9)
{
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  void *v41;
  id v42;
  char v43;
  id v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  double v55;
  id v57;
  objc_super v58;

  if (!objc_msgSend(a1, sel_isZoomingIn))
  {
LABEL_6:
    v19 = *(void **)&a1[OBJC_IVAR____UIZoomTransitionController_backgroundView];
    if (v19)
    {
      v20 = v19;
      objc_msgSend(a2, sel_finalFrameForViewController_, a3);
      objc_msgSend(v20, sel__setFrameIgnoringLayerTransform_);
      if (!*(_QWORD *)&a1[OBJC_IVAR____UIZoomTransitionController_foregroundView])
      {
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      objc_msgSend(a4, sel_insertSubview_belowSubview_, v20);

    }
    a6 = objc_msgSend(a6, sel_view);
    if (!a6)
      goto LABEL_48;
    goto LABEL_10;
  }
  v16 = OBJC_IVAR____UIZoomTransitionController_foregroundView;
  v17 = *(void **)&a1[OBJC_IVAR____UIZoomTransitionController_foregroundView];
  if (!v17)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v18 = v17;
  objc_msgSend(a2, sel_finalFrameForViewController_, a3);
  objc_msgSend(v18, sel_setFrame_);

  if (!*(_QWORD *)&a1[v16])
  {
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  objc_msgSend(a4, sel_addSubview_);
  a6 = objc_msgSend(a5, (SEL)&selRef_userSelectedSmartReply_isLongForm_withMailOrMsgThreadId_);
  if (!a6)
  {
    __break(1u);
    goto LABEL_6;
  }
LABEL_10:
  objc_msgSend(a6, sel_layoutIfNeeded);

  v21 = objc_msgSend(a5, sel__showcaseView);
  if (!v21
    || (v22 = v21,
        v23 = objc_msgSend(v21, sel_window),
        v23,
        v22,
        !v23))
  {
    a1[OBJC_IVAR____UIZoomTransitionController_style] = 0;
    v31 = *(void **)&a1[OBJC_IVAR____UIZoomTransitionController_dimmingView];
    objc_msgSend(a4, sel_bounds);
    objc_msgSend(v31, sel_setFrame_);
    if (!objc_msgSend(a1, sel_isForNavigation)
      || (v32 = objc_msgSend(a7, sel_navigationController)) == 0)
    {
      if (!*(_QWORD *)&a1[OBJC_IVAR____UIZoomTransitionController_foregroundView])
      {
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      objc_msgSend(a4, sel_insertSubview_belowSubview_, v31);
      goto LABEL_39;
    }
    v33 = *(void **)&a1[OBJC_IVAR____UIZoomTransitionController_foregroundView];
    if (!v33)
    {
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    v34 = v32;
    v35 = v33;
    v36 = objc_msgSend(v34, sel_view);
    objc_msgSend(v35, sel_set_overrideReparentingContainer_, v36);

    v37 = objc_msgSend(v34, sel_toolbar);
    if (!v37)
    {
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    v38 = v37;
    v39 = objc_msgSend(v37, sel_superview);

    v40 = objc_msgSend(v34, sel_view);
    v41 = v40;
    if (v39)
    {
      if (v40)
      {
        sub_1851F9080(0, (unint64_t *)&qword_1EDD82CE0);
        v42 = v39;
        v43 = sub_186507A44();

        if ((v43 & 1) == 0)
          goto LABEL_36;
LABEL_31:
        v47 = objc_msgSend(v34, sel_view);
        if (!v47)
        {
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
        v48 = v47;
        v49 = objc_msgSend(v34, sel_toolbar);
        if (!v49)
        {
LABEL_58:
          __break(1u);
          return;
        }
        v50 = v49;
        objc_msgSend(v48, sel_insertSubview_aboveSubview_, v31, v49);

LABEL_38:
LABEL_39:
        v57 = objc_msgSend(a5, sel_view);
        if (v57)
        {
          v53 = objc_msgSend(a5, sel_tabBarController);
          if (v53)
          {
            v54 = v53;
            v55 = -[UITabBarController _sidebarOverlapAmount](v53);

          }
          else
          {
            v55 = 0.0;
          }
          objc_msgSend(v57, sel__setCropInsets_, 0.0, v55, 0.0, 0.0);
          v46 = v57;
          goto LABEL_44;
        }
        __break(1u);
        goto LABEL_46;
      }
      v41 = v39;
    }
    else if (!v40)
    {
      goto LABEL_31;
    }

LABEL_36:
    v51 = objc_msgSend(v34, sel_view);
    if (!v51)
    {
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    v52 = v51;
    objc_msgSend(v51, sel_addSubview_, v31);

    goto LABEL_38;
  }
  a1[OBJC_IVAR____UIZoomTransitionController_style] = 1;
  v24 = OBJC_IVAR____UIZoomTransitionController_foregroundView;
  if (!*(_QWORD *)&a1[OBJC_IVAR____UIZoomTransitionController_foregroundView])
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  objc_msgSend(a4, sel_sendSubviewToBack_);
  v25 = *(void **)&a1[v24];
  if (!v25)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v26 = objc_msgSend(v25, sel_layer);
  objc_msgSend(v26, sel_setZPosition_, 1.0);

  if (objc_msgSend(a1, sel_isZoomingIn))
  {
    type metadata accessor for _UIZoomTransitionSettingsDomain();
    v58.receiver = (id)swift_getObjCClassFromMetadata();
    v58.super_class = (Class)&OBJC_METACLASS____TtC5UIKit31_UIZoomTransitionSettingsDomain;
    v27 = objc_msgSendSuper2(&v58, sel_rootSettings);
    if (v27)
    {
      v28 = v27;
      type metadata accessor for _UIZoomTransitionSpec();
      v29 = objc_retain(*(id *)(swift_dynamicCastClassUnconditional()
                              + OBJC_IVAR____TtC5UIKit21_UIZoomTransitionSpec_zoomInShowcase));

      v30 = *a8;
      *a8 = v29;

      return;
    }
    goto LABEL_53;
  }
  if ((a9 & 1) != 0)
  {
    v44 = objc_msgSend(objc_allocWithZone((Class)_UIPortalView), sel_initWithSourceView_, *(_QWORD *)(*(_QWORD *)&a1[OBJC_IVAR____UIZoomTransitionController_morphAnimation]+ OBJC_IVAR____UIMagicMorphAnimation_morphView));
    v45 = (void *)sub_1865074D4();
    objc_msgSend(v44, sel_setName_, v45);

    objc_msgSend(v44, sel_setMatchesPosition_, 1);
    objc_msgSend(v44, sel_setMatchesTransform_, 1);
    objc_msgSend(v44, sel_setUserInteractionEnabled_, 0);
    objc_msgSend(a4, sel_addSubview_, v44);
    v46 = *(void **)&a1[OBJC_IVAR____UIZoomTransitionController_showcasePortal];
    *(_QWORD *)&a1[OBJC_IVAR____UIZoomTransitionController_showcasePortal] = v44;
LABEL_44:

  }
}

void sub_18559EF70(void *a1, void *a2, char a3)
{
  char *v3;
  char *v4;
  id v8;
  uint64_t (**v9)(id, void *);
  id v10;
  NSObject *v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  os_log_type_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  os_log_type_t v34;
  uint8_t *v35;
  void *v36;
  unsigned int v37;
  id v38;
  id v39;
  uint64_t v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  uint8_t *buf;
  uint64_t v55;
  os_log_type_t v56;
  os_log_type_t type;
  uint64_t typea;
  uint64_t v59;

  v4 = v3;
  v8 = objc_msgSend(v4, sel_clientTransition);
  v9 = (uint64_t (**)(id, void *))objc_msgSend(v8, sel__viewProvider);

  v10 = (id)v9[2](v9, a1);
  _Block_release(v9);
  if ((a3 & 1) != 0)
  {
    if (!v10)
    {
      if (qword_1EDD83AD8 != -1)
        swift_once();
      v33 = sub_186507264();
      __swift_project_value_buffer(v33, (uint64_t)qword_1EDDA87B8);
      v11 = sub_18650724C();
      v34 = sub_1865078DC();
      if (os_log_type_enabled(v11, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v35 = 0;
        _os_log_impl(&dword_185066000, v11, v34, "Starting a zoom transition from a nil view will trigger a fallback transition. To get the best possible teansition, be sure to provide a view that's visible and in a window.", v35, 2u);
        MEMORY[0x186DCA030](v35, -1, -1);
      }
      goto LABEL_19;
    }
    v11 = v10;
    v12 = -[NSObject window](v11, sel_window);

    if (v12)
    {
LABEL_19:

      goto LABEL_20;
    }
    if (qword_1EDD83AD8 != -1)
      swift_once();
    v13 = sub_186507264();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EDDA87B8);
    v14 = v11;
    v11 = sub_18650724C();
    v15 = sub_1865078DC();
    if (os_log_type_enabled(v11, v15))
    {
      type = v15;
      v16 = (uint8_t *)swift_slowAlloc();
      v55 = swift_slowAlloc();
      v59 = v55;
      *(_DWORD *)v16 = 136446210;
      buf = v16;
      v17 = a2;
      v18 = -[NSObject _conciseParentDescription](v14, sel__conciseParentDescription);
      v19 = sub_1865074F8();
      v21 = v20;

      a2 = v17;
      sub_185766448(v19, v21, &v59);
      sub_186507AD4();

      swift_bridgeObjectRelease();
      v22 = buf;
      _os_log_impl(&dword_185066000, v11, type, "Starting a zoom transition to a view not in the view hierarchy will trigger a fallback transition. To correct the error, be sure to a provide a view that's visible and in a window. View: %{public}s", buf, 0xCu);
      v23 = v55;
LABEL_14:
      swift_arrayDestroy();
      MEMORY[0x186DCA030](v23, -1, -1);
      MEMORY[0x186DCA030](v22, -1, -1);

      goto LABEL_19;
    }
  }
  else
  {
    if (!v10)
      goto LABEL_20;
    v11 = v10;
    v24 = -[NSObject window](v11, sel_window);

    if (v24)
      goto LABEL_19;
    if (qword_1EDD83AD8 != -1)
      swift_once();
    v25 = sub_186507264();
    __swift_project_value_buffer(v25, (uint64_t)qword_1EDDA87B8);
    v14 = v11;
    v11 = sub_18650724C();
    v26 = sub_1865078DC();
    if (os_log_type_enabled(v11, v26))
    {
      v56 = v26;
      v22 = (uint8_t *)swift_slowAlloc();
      typea = swift_slowAlloc();
      v59 = typea;
      *(_DWORD *)v22 = 136446210;
      v27 = -[NSObject _conciseParentDescription](v14, sel__conciseParentDescription);
      v28 = a2;
      v29 = sub_1865074F8();
      v31 = v30;

      v32 = v29;
      a2 = v28;
      sub_185766448(v32, v31, &v59);
      sub_186507AD4();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_185066000, v11, v56, "Dismissing a zoom transition to a view not in the view hierarchy will trigger a fallback transition. To correct the error, be sure to a provide a view that's visible and in a window. View: %{public}s", v22, 0xCu);
      v23 = typea;
      goto LABEL_14;
    }
  }

LABEL_20:
  v36 = *(void **)&v4[OBJC_IVAR____UIZoomTransitionController_activeTransitionContext];
  if (!v36)
    goto LABEL_23;
  swift_unknownObjectRetain();
  if (!UIAccessibilityIsReduceMotionEnabled())
  {
    swift_unknownObjectRelease();
    if (v10)
      goto LABEL_26;
LABEL_38:
    v38 = objc_msgSend(a1, sel_zoomedViewController);
    sub_1855A39C8(a2, v38);

    goto LABEL_39;
  }
  v37 = objc_msgSend(v36, sel_isInteractive);
  swift_unknownObjectRelease();
  if (!v37)
    goto LABEL_38;
LABEL_23:
  if (!v10)
    goto LABEL_38;
LABEL_26:
  v38 = v10;
  v39 = objc_msgSend(v38, sel_window);

  if (!v39)
  {

    goto LABEL_38;
  }
  v40 = OBJC_IVAR____UIZoomTransitionController_wrappedSourceView;
  v41 = *(void **)&v4[OBJC_IVAR____UIZoomTransitionController_wrappedSourceView];
  if (v41
    && (v42 = objc_msgSend(v41, sel_sourceView)) != 0
    && (v43 = v42, v42, v43 == v38))
  {
    v53 = *(void **)&v4[v40];
    if (v53)
    {
      v53;

      goto LABEL_39;
    }
  }
  else
  {
    objc_msgSend(v38, sel__bringAncestorControlledCollectionSubviewToFrontAmongCoplanarPeers);
    v44 = *(void **)&v4[v40];
    if (v44)
      objc_msgSend(v44, sel_removeFromSuperview);
    v45 = objc_msgSend(a1, sel_zoomedViewController);
    v46 = objc_msgSend(v45, sel__showcaseView);
    if (v46)
    {
      v47 = v46;
      v48 = objc_msgSend(v46, sel_window);

      v45 = v47;
      if (v48)
        goto LABEL_35;
    }

    v49 = objc_msgSend(a1, sel_zoomedViewController);
    v47 = objc_msgSend(v49, sel_view);

    if (v47)
    {
LABEL_35:
      v50 = sub_1855A4100(v38, v47);

      v51 = objc_msgSend(v38, sel_superview);
      if (v51)
      {
        v52 = v51;
        objc_msgSend(v51, sel_insertSubview_aboveSubview_, v50, v38);

        sub_18559F66C();
        v38 = *(id *)&v4[v40];
        *(_QWORD *)&v4[v40] = v50;
        v50;
LABEL_39:

        return;
      }
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
}

void sub_18559F66C()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  _QWORD *v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  __int128 v19;
  uint64_t v20;

  sub_1865074F8();
  v1 = objc_allocWithZone(MEMORY[0x1E0CD2780]);
  v2 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithType_, v2);

  v4 = (void *)sub_1865074D4();
  objc_msgSend(v3, sel_setName_, v4);

  v5 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  v6 = objc_msgSend(v5, sel_CGColor);

  objc_msgSend(v3, sel_setValue_forKey_, v6, *MEMORY[0x1E0CD2D00]);
  v7 = objc_msgSend(v0, sel_layer);
  v8 = objc_msgSend(v7, sel_filters);

  if (!v8)
  {
    v16 = objc_msgSend(v0, sel_layer);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD81EC0);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1866691E0;
    *(_QWORD *)(v17 + 56) = sub_1851F9080(0, (unint64_t *)&qword_1EDD81E88);
    *(_QWORD *)(v17 + 32) = v3;
    v18 = v3;
    v3 = (id)sub_18650763C();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_setFilters_, v3);

LABEL_10:
    return;
  }

  v18 = objc_msgSend(v0, sel_layer);
  v9 = objc_msgSend(v18, sel_filters);
  if (!v9)
  {
    objc_msgSend(v18, sel_setFilters_, 0);
    goto LABEL_10;
  }
  v10 = v9;
  v11 = (_QWORD *)sub_186507654();

  v20 = sub_1851F9080(0, (unint64_t *)&qword_1EDD81E88);
  *(_QWORD *)&v19 = v3;
  v12 = v3;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v11 = sub_185646B84(0, v11[2] + 1, 1, v11);
  v14 = v11[2];
  v13 = v11[3];
  if (v14 >= v13 >> 1)
    v11 = sub_185646B84((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
  v11[2] = v14 + 1;
  sub_1850F6908(&v19, &v11[4 * v14 + 4]);
  v15 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setFilters_, v15);

}

void sub_18559F9C8(void *a1, void *a2)
{
  char *v2;
  id v5;
  void *v6;
  BOOL v7;
  void *v8;
  BOOL v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  const void *v18;
  double x;
  double v20;
  double y;
  double v22;
  double width;
  double v24;
  double height;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double MinY;
  double MinX;
  double v40;
  double v41;
  double v42;
  double v43;
  id v44;
  _BYTE v45[8];
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;

  v5 = objc_msgSend(a1, sel_view);
  if (v5)
  {
    v6 = *(void **)&v2[OBJC_IVAR____UIZoomTransitionController_wrappedSourceView];
    if (v6)
      v7 = v6 == a2;
    else
      v7 = 0;
    if (v7)
    {
      v44 = v5;
      v10 = objc_msgSend(a2, sel_sourceView);
      if (v10)
      {
LABEL_12:
        v11 = objc_msgSend((id)objc_opt_self(), sel__contextSourceView_zoomedViewController_, v10, a1);
        if (!v11)
        {
          __break(1u);
          return;
        }
        v12 = v11;
        v13 = objc_msgSend(v2, sel_clientTransition);
        v14 = objc_msgSend(v13, sel__options);

        swift_unknownObjectWeakInit();
        swift_beginAccess();
        v15 = (void *)MEMORY[0x186DCA138](v45);
        if (v15)
        {
          v16 = v15;
          v17 = objc_msgSend(v15, sel_alignmentRectProvider);
          if (v17)
          {
            v18 = v17;
            x = (*((double (**)(id, void *))v17 + 2))(v17, v12);
            y = v20;
            width = v22;
            height = v24;
            _Block_release(v18);

            swift_unknownObjectWeakDestroy();
            v46.origin.x = x;
            v46.origin.y = y;
            v46.size.width = width;
            v46.size.height = height;
            if (CGRectIsNull(v46))
            {

LABEL_31:
              return;
            }
            v26 = objc_msgSend(a1, sel__showcaseView);
            if (v26)
            {
              v27 = v26;
              v28 = objc_msgSend(v26, sel_window);

              if (v28)
              {
LABEL_25:
                v29 = OBJC_IVAR____UIZoomTransitionController_style;
                if (v2[OBJC_IVAR____UIZoomTransitionController_style] == 1)
                {
                  objc_msgSend(v27, sel_convertRect_fromCoordinateSpace_, v44, x, y, width, height);
                  v31 = v30;
                  v33 = v32;
                  v35 = v34;
                  v37 = v36;
                  objc_msgSend(v27, sel_bounds);
                  v55.origin.x = v31;
                  v55.origin.y = v33;
                  v55.size.width = v35;
                  v55.size.height = v37;
                  v48 = CGRectIntersection(v47, v55);
                  x = v48.origin.x;
                  y = v48.origin.y;
                  width = v48.size.width;
                  height = v48.size.height;
                }
                v49.origin.x = x;
                v49.origin.y = y;
                v49.size.width = width;
                v49.size.height = height;
                MinY = CGRectGetMinY(v49);
                v50.origin.x = x;
                v50.origin.y = y;
                v50.size.width = width;
                v50.size.height = height;
                MinX = CGRectGetMinX(v50);
                objc_msgSend(v27, sel_bounds);
                v40 = CGRectGetHeight(v51);
                v52.origin.x = x;
                v52.origin.y = y;
                v52.size.width = width;
                v52.size.height = height;
                v41 = v40 - CGRectGetMaxY(v52);
                objc_msgSend(v27, sel_bounds);
                v42 = CGRectGetWidth(v53);
                v54.origin.x = x;
                v54.origin.y = y;
                v54.size.width = width;
                v54.size.height = height;
                v43 = v42 - CGRectGetMaxX(v54);
                if (v2[v29] == 1)
                  objc_msgSend(v27, sel__setCropInsets_, MinY, MinX, v41, v43);
                else
                  objc_msgSend(v27, sel__setMorphInsets_, MinY, MinX, v41, v43);

                goto LABEL_31;
              }

            }
            v27 = v44;
            goto LABEL_25;
          }

        }
        swift_unknownObjectWeakDestroy();

        return;
      }
      v5 = v44;
    }
    else
    {
      v8 = *(void **)&v2[OBJC_IVAR____UIZoomTransitionController_fallbackSourceView];
      if (v8)
        v9 = v8 == a2;
      else
        v9 = 0;
      if (!v9)
      {
        v44 = v5;
        v10 = a2;
        goto LABEL_12;
      }
    }

  }
}

id sub_18559FD90(void *a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  id result;
  id v7;

  v2 = objc_msgSend(a1, sel__viewControllerForAncestor);
  if (!v2)
    v2 = v1;
  objc_opt_self();
  v3 = swift_dynamicCastObjCClass();
  if (v3)
  {
    v4 = (void *)v3;
    v5 = v2;
    result = objc_msgSend(v4, sel_collectionView);
    if (result)
    {
      v7 = result;

LABEL_7:
      return v7;
    }
    __break(1u);
  }
  else
  {
    result = objc_msgSend(v2, sel_view);
    v7 = result;
    if (result)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_18559FE54(_BYTE *a1, uint64_t a2, void *a3)
{
  if ((a1[OBJC_IVAR____UIZoomTransitionController_style] & 1) == 0)
    sub_18559FEC8();
  sub_1855A0280(a3, 0, 0, 0);
  sub_1855A0608(objc_msgSend(a1, sel_isZoomingIn) ^ 1, 0);
}

void sub_18559FEC8()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  double v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  objc_super v38;

  type metadata accessor for _UIZoomTransitionSettingsDomain();
  v38.receiver = (id)swift_getObjCClassFromMetadata();
  v38.super_class = (Class)&OBJC_METACLASS____TtC5UIKit31_UIZoomTransitionSettingsDomain;
  v1 = objc_msgSendSuper2(&v38, sel_rootSettings);
  if (!v1)
  {
    __break(1u);
    goto LABEL_12;
  }
  v2 = v1;
  type metadata accessor for _UIZoomTransitionSpec();
  v3 = swift_dynamicCastClassUnconditional();
  v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_layer);

  v7 = objc_msgSend(v0, sel_view);
  if (!v7)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v8 = v7;
  objc_msgSend(v7, sel__intersectedSceneCornerRadii);
  v32 = v35;
  v33 = v34;
  v30 = v37;
  v31 = v36;

  v34 = v33;
  v35 = v32;
  v36 = v31;
  v37 = v30;
  objc_msgSend(v6, sel_setCornerRadii_, &v34);

  v9 = objc_msgSend(v0, sel_view);
  if (!v9)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v10 = v9;
  v11 = objc_msgSend(v9, sel_layer);

  objc_msgSend(v11, sel_setCornerCurve_, *MEMORY[0x1E0CD2A68]);
  v12 = objc_msgSend(v0, sel_view);
  if (!v12)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v13 = v12;
  v14 = objc_msgSend(v12, sel_layer);

  v15 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
  v16 = objc_msgSend(v15, sel_CGColor);

  objc_msgSend(v14, sel_setShadowColor_, v16);
  v17 = objc_msgSend(v0, sel_view);
  if (!v17)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18 = v17;
  v19 = objc_msgSend(v17, sel_layer);

  objc_msgSend(v19, sel_setShadowOffset_, *(double *)(v3 + OBJC_IVAR____TtC5UIKit21_UIZoomTransitionSpec_platterShadowXOffset), *(double *)(v3 + OBJC_IVAR____TtC5UIKit21_UIZoomTransitionSpec_platterShadowYOffset));
  v20 = objc_msgSend(v0, sel_view);
  if (!v20)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, sel_layer);

  LODWORD(v23) = *(_DWORD *)(v3 + OBJC_IVAR____TtC5UIKit21_UIZoomTransitionSpec_platterShadowOpacity);
  objc_msgSend(v22, sel_setShadowOpacity_, v23);

  v24 = objc_msgSend(v0, sel_view);
  if (!v24)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v25 = v24;
  v26 = objc_msgSend(v24, sel_layer);

  objc_msgSend(v26, sel_setShadowRadius_, *(double *)(v3 + OBJC_IVAR____TtC5UIKit21_UIZoomTransitionSpec_platterShadowRadius));
  v27 = objc_msgSend(v0, sel_view);
  if (v27)
  {
    v28 = v27;
    v29 = objc_msgSend(v27, sel_layer);

    objc_msgSend(v29, sel_setPunchoutShadow_, 1);
    return;
  }
LABEL_19:
  __break(1u);
}

id sub_1855A0280(void *a1, uint64_t a2, uint64_t (*a3)(), void *a4)
{
  char *v4;
  char *v5;
  void *v10;
  unsigned __int8 v11;
  id result;
  void *v13;
  BOOL v14;
  char v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  int v34;
  int v35;
  void *v36;
  id v37;
  void *v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  id v44;
  objc_class *v45;
  char *v46;
  char *v47;
  id v48;
  uint64_t v49;
  uint64_t (*v50)();
  uint64_t v51;
  objc_super v52;

  v5 = v4;
  v10 = *(void **)&v4[OBJC_IVAR____UIZoomTransitionController_activeTransitionContext];
  if (!v10)
    goto LABEL_6;
  swift_unknownObjectRetain();
  if (!UIAccessibilityIsReduceMotionEnabled())
  {
    swift_unknownObjectRelease();
LABEL_6:
    sub_1855A2EE8();
    v13 = *(void **)&v5[OBJC_IVAR____UIZoomTransitionController_foregroundView];
    if (v13)
      v14 = v13 == a1;
    else
      v14 = 0;
    v15 = !v14;
    v16 = objc_msgSend(v5, sel_isForNavigation);
    v17 = OBJC_IVAR____UIZoomTransitionController_style;
    v18 = MEMORY[0x1E0DEE9D8];
    if (v16 && (v15 & 1) == 0)
    {
      if ((v5[OBJC_IVAR____UIZoomTransitionController_style] & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A80);
        v19 = swift_allocObject();
        *(_OWORD *)(v19 + 16) = xmmword_1866691F0;
        v20 = OBJC_IVAR____UIZoomTransitionController_transitionOverlayView;
        v21 = *(void **)&v5[OBJC_IVAR____UIZoomTransitionController_transitionOverlayView];
        *(_QWORD *)(v19 + 32) = v21;
        v51 = v19;
        sub_18650766C();
        v49 = v51;
        v22 = v21;
        objc_msgSend(a1, sel_bounds);
        v24 = v23;
        v26 = v25;
        v28 = v27;
        v30 = v29;
        objc_msgSend(a1, sel__cropInsets);
        v32 = v24 - v31;
        objc_msgSend(a1, sel__cropInsets);
        objc_msgSend(*(id *)&v5[v20], sel_setFrame_, v32, v26 - v33, v28, v30);
        v17 = OBJC_IVAR____UIZoomTransitionController_style;
LABEL_18:
        v34 = v5[v17];
        if (a2)
          v35 = v34;
        else
          v35 = 0;
        v50 = a3;
        if (v35 == 1)
        {
          v36 = a4;
          v37 = *(id *)(a2 + OBJC_IVAR____TtC5UIKit30_UIZoomTransitionAnimationSpec_general);
        }
        else
        {
          result = objc_msgSend((id)objc_opt_self(), sel_behaviorWithDampingRatio_response_, 1.0, 0.1);
          if (!result)
          {
            __break(1u);
            return result;
          }
          v37 = result;
          v36 = a4;
          if (!a2)
          {
            v40 = 0;
            v39 = 0;
            v38 = 0;
            if ((v15 & 1) != 0)
              goto LABEL_26;
            goto LABEL_28;
          }
        }
        v38 = *(void **)(a2 + OBJC_IVAR____TtC5UIKit30_UIZoomTransitionAnimationSpec_morph);
        v39 = *(void **)(a2 + OBJC_IVAR____TtC5UIKit30_UIZoomTransitionAnimationSpec_position);
        v40 = *(void **)(a2 + OBJC_IVAR____TtC5UIKit30_UIZoomTransitionAnimationSpec_transform);
        v41 = v38;
        v42 = v39;
        v43 = v40;
        if ((v15 & 1) != 0)
        {
LABEL_26:
          v44 = 0;
LABEL_29:
          v45 = (objc_class *)type metadata accessor for _UIMagicMorphAnimation.Parameters();
          v46 = (char *)objc_allocWithZone(v45);
          *(_QWORD *)&v46[OBJC_IVAR____TtCC5UIKit22_UIMagicMorphAnimation10Parameters_morphSpring] = v38;
          *(_QWORD *)&v46[OBJC_IVAR____TtCC5UIKit22_UIMagicMorphAnimation10Parameters_positionSpring] = v39;
          *(_QWORD *)&v46[OBJC_IVAR____TtCC5UIKit22_UIMagicMorphAnimation10Parameters_transformSpring] = v40;
          *(_QWORD *)&v46[OBJC_IVAR____TtCC5UIKit22_UIMagicMorphAnimation10Parameters_fallbackBackgroundColor] = v44;
          *(_QWORD *)&v46[OBJC_IVAR____TtCC5UIKit22_UIMagicMorphAnimation10Parameters_overlayViews] = v49;
          v47 = &v46[OBJC_IVAR____TtCC5UIKit22_UIMagicMorphAnimation10Parameters_reparentingOptions];
          *(_QWORD *)v47 = v37;
          v47[8] = v35;
          v52.receiver = v46;
          v52.super_class = v45;
          swift_unknownObjectRetain();
          v48 = objc_msgSendSuper2(&v52, sel_init);
          sub_18564B44C((id (*)())a1, (uint64_t)v48, v50, v36);

          return (id)swift_unknownObjectRelease();
        }
LABEL_28:
        v44 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
        goto LABEL_29;
      }
      v18 = MEMORY[0x1E0DEE9D8];
    }
    v49 = v18;
    goto LABEL_18;
  }
  v11 = objc_msgSend(v10, sel_isInteractive);
  result = (id)swift_unknownObjectRelease();
  if ((v11 & 1) != 0)
    goto LABEL_6;
  return result;
}

void sub_1855A0608(unsigned __int8 a1, unsigned __int8 a2)
{
  _BYTE *v2;
  _BYTE *v3;
  uint64_t v6;
  void *v7;
  unsigned __int8 v8;
  void *v9;
  id v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  uint64_t v26;
  void *v27;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v32;
  double v33;
  CGFloat v34;
  double v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  void *v46;
  unsigned __int8 v47;
  void *v48;
  double v49;
  void *v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  objc_super v59;
  CATransform3D v60;
  CGRect v61;
  CGRect v62;

  v3 = v2;
  v6 = OBJC_IVAR____UIZoomTransitionController_activeTransitionContext;
  v7 = *(void **)&v2[OBJC_IVAR____UIZoomTransitionController_activeTransitionContext];
  if (!v7)
    goto LABEL_4;
  swift_unknownObjectRetain();
  if (UIAccessibilityIsReduceMotionEnabled())
  {
    v8 = objc_msgSend(v7, sel_isInteractive);
    swift_unknownObjectRelease();
    if ((v8 & 1) == 0)
      goto LABEL_23;
LABEL_4:
    if ((a1 & 1) == 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  swift_unknownObjectRelease();
  if ((a1 & 1) == 0)
  {
LABEL_8:
    v9 = *(void **)&v3[OBJC_IVAR____UIZoomTransitionController_viewToScaleBack];
    if (v9)
    {
      v10 = objc_msgSend(v9, sel_layer);
      v11 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 16);
      *(_OWORD *)&v60.m11 = *MEMORY[0x1E0CD2610];
      *(_OWORD *)&v60.m13 = v11;
      v12 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 48);
      *(_OWORD *)&v60.m21 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 32);
      *(_OWORD *)&v60.m23 = v12;
      v13 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 80);
      *(_OWORD *)&v60.m31 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 64);
      *(_OWORD *)&v60.m33 = v13;
      v14 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 112);
      *(_OWORD *)&v60.m41 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 96);
      *(_OWORD *)&v60.m43 = v14;
      objc_msgSend(v10, sel_setSublayerTransform_, &v60);

      v15 = *(void **)&v3[OBJC_IVAR____UIZoomTransitionController_backgroundView];
      if (v15)
        objc_msgSend(v15, sel_setUserInteractionEnabled_, 1);
      v16 = *(void **)&v3[OBJC_IVAR____UIZoomTransitionController_dimmingView];
      v17 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
      objc_msgSend(v16, sel_setBackgroundColor_, v17);

      sub_1851F9080(0, &qword_1EDD81E78);
      v18 = (void *)sub_18650763C();
      objc_msgSend(v16, sel_setBackgroundEffects_, v18);

      v19 = *(void **)&v3[OBJC_IVAR____UIZoomTransitionController_showcasePortal];
      if (v19)
      {
        objc_msgSend(v19, sel_setAlpha_, 0.0);
        v20 = *(void **)&v3[v6];
        if (!v20)
          goto LABEL_28;
        goto LABEL_24;
      }
LABEL_23:
      v20 = *(void **)&v3[v6];
      if (!v20)
        goto LABEL_28;
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_37;
  }
LABEL_7:
  if ((v3[OBJC_IVAR____UIZoomTransitionController_isPresentingSheet] & 1) != 0)
    goto LABEL_8;
  v21 = OBJC_IVAR____UIZoomTransitionController_viewToScaleBack;
  v22 = *(void **)&v3[OBJC_IVAR____UIZoomTransitionController_viewToScaleBack];
  if (!v22)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v23 = objc_msgSend(v22, sel_layer);
  type metadata accessor for _UIZoomTransitionSettingsDomain();
  v59.receiver = (id)swift_getObjCClassFromMetadata();
  v59.super_class = (Class)&OBJC_METACLASS____TtC5UIKit31_UIZoomTransitionSettingsDomain;
  v24 = objc_msgSendSuper2(&v59, sel_rootSettings);
  if (!v24)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v25 = v24;
  type metadata accessor for _UIZoomTransitionSpec();
  v26 = swift_dynamicCastClassUnconditional();
  v27 = *(void **)&v3[v21];
  if (!v27)
  {
LABEL_39:
    __break(1u);
    return;
  }
  objc_msgSend(v27, sel_bounds);
  x = v61.origin.x;
  y = v61.origin.y;
  width = v61.size.width;
  height = v61.size.height;
  v32 = *(double *)(v26 + OBJC_IVAR____TtC5UIKit21_UIZoomTransitionSpec_recededBackgroundScaleDownPoints);
  v33 = *(double *)(v26 + OBJC_IVAR____TtC5UIKit21_UIZoomTransitionSpec_recededBackgroundMinScale);
  v34 = CGRectGetWidth(v61) - v32;
  v62.origin.x = x;
  v62.origin.y = y;
  v62.size.width = width;
  v62.size.height = height;
  v35 = v34 / CGRectGetWidth(v62);
  if (v35 <= v33)
    v35 = v33;
  CATransform3DMakeScale(&v60, v35, v35, 1.0);
  v57 = *(_OWORD *)&v60.m13;
  v58 = *(_OWORD *)&v60.m11;
  v55 = *(_OWORD *)&v60.m23;
  v56 = *(_OWORD *)&v60.m21;
  v53 = *(_OWORD *)&v60.m33;
  v54 = *(_OWORD *)&v60.m31;
  v51 = *(_OWORD *)&v60.m43;
  v52 = *(_OWORD *)&v60.m41;

  *(_OWORD *)&v60.m11 = v58;
  *(_OWORD *)&v60.m13 = v57;
  *(_OWORD *)&v60.m21 = v56;
  *(_OWORD *)&v60.m23 = v55;
  *(_OWORD *)&v60.m31 = v54;
  *(_OWORD *)&v60.m33 = v53;
  *(_OWORD *)&v60.m41 = v52;
  *(_OWORD *)&v60.m43 = v51;
  objc_msgSend(v23, sel_setSublayerTransform_, &v60);

  v36 = *(void **)&v3[OBJC_IVAR____UIZoomTransitionController_backgroundView];
  if (v36)
    objc_msgSend(v36, sel_setUserInteractionEnabled_, 0);
  v37 = *(void **)&v3[OBJC_IVAR____UIZoomTransitionController_dimmingView];
  v38 = objc_msgSend(v3, sel_clientTransition, v51, v52, v53, v54, v55, v56, v57, v58);
  v39 = objc_msgSend(v38, sel__options);

  v40 = objc_msgSend(v39, sel_dimmingColor);
  objc_msgSend(v37, sel_setBackgroundColor_, v40);

  v41 = objc_msgSend(v3, sel_clientTransition);
  v42 = objc_msgSend(v41, sel__options);

  v43 = objc_msgSend(v42, sel_dimmingVisualEffect);
  if (v43)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A80);
    v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_1866691F0;
    *(_QWORD *)(v44 + 32) = v43;
    *(_QWORD *)&v60.m11 = v44;
    sub_18650766C();
    sub_1851F9080(0, &qword_1EDD81E78);
    v45 = v43;
    v46 = (void *)sub_18650763C();
    swift_bridgeObjectRelease();
    objc_msgSend(v37, sel_setBackgroundEffects_, v46);

    goto LABEL_23;
  }
  sub_1851F9080(0, &qword_1EDD81E78);
  v50 = (void *)sub_18650763C();
  objc_msgSend(v37, sel_setBackgroundEffects_, v50);

  v20 = *(void **)&v3[v6];
  if (!v20)
  {
LABEL_28:
    if (v3[OBJC_IVAR____UIZoomTransitionController_style] != 1)
      return;
    goto LABEL_29;
  }
LABEL_24:
  swift_unknownObjectRetain();
  if (!UIAccessibilityIsReduceMotionEnabled())
  {
    swift_unknownObjectRelease();
    goto LABEL_28;
  }
  v47 = objc_msgSend(v20, sel_isInteractive);
  swift_unknownObjectRelease();
  if ((v47 & 1) != 0)
    goto LABEL_28;
LABEL_29:
  v48 = *(void **)&v3[OBJC_IVAR____UIZoomTransitionController_foregroundView];
  if (v48)
  {
    v49 = 0.0;
    if (((a1 | a2) & 1) != 0)
      v49 = 1.0;
    objc_msgSend(v48, sel_setAlpha_, v49);
  }
}

void sub_1855A0BF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x186DCA138](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = *(id *)(v2 + OBJC_IVAR____UIZoomTransitionController_shimAnimationView);

    objc_msgSend(v4, sel_setAlpha_, 0.0);
  }
}

void sub_1855A0C68(uint64_t a1, id *a2, uint64_t a3, void *a4)
{
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;

  v7 = *(void **)((char *)*a2 + OBJC_IVAR____TtC5UIKit30_UIZoomTransitionAnimationSpec_general);
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = v7;
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  sub_18564AF0C(v7, 0, (uint64_t)sub_1855A69CC, v8, (uint64_t)sub_1855A6A04, v10);

  swift_release_n();
  swift_release();
  swift_release();
  v12 = (uint64_t)*a2;
  v13 = *a2;
  sub_1855A0280(a4, v12, 0, 0);

}

void sub_1855A0DC8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x186DCA138](v1);
  if (v2)
  {
    v3 = v2;
    sub_1855A0608(objc_msgSend(v2, sel_isZoomingIn), 0);

  }
}

id sub_1855A0E28(id result)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  BOOL v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  id v23;
  unsigned int v24;
  uint64_t v25;
  _BYTE *v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  void *v34;
  _BYTE *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD v41[9];

  v2 = OBJC_IVAR____UIZoomTransitionController_activeTransitionContext;
  v3 = *(id *)(v1 + OBJC_IVAR____UIZoomTransitionController_activeTransitionContext);
  if (v3)
    v4 = v3 == result;
  else
    v4 = 0;
  if (!v4)
    return result;
  v5 = v1;
  v6 = result;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____UIZoomTransitionController_dimmingView), sel_removeFromSuperview);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____UIZoomTransitionController_shimAnimationView), sel_removeFromSuperview);
  v40 = OBJC_IVAR____UIZoomTransitionController_wrappedSourceView;
  v7 = *(void **)(v1 + OBJC_IVAR____UIZoomTransitionController_wrappedSourceView);
  if (v7)
    objc_msgSend(v7, sel_removeFromSuperview);
  v39 = OBJC_IVAR____UIZoomTransitionController_fallbackSourceView;
  v8 = *(void **)(v1 + OBJC_IVAR____UIZoomTransitionController_fallbackSourceView);
  if (v8)
    objc_msgSend(v8, sel_removeFromSuperview);
  v9 = *(void **)(v1 + OBJC_IVAR____UIZoomTransitionController_pendingDismissDestinationView);
  if (v9)
  {
    v10 = v9;
    sub_1855A2EE8();

  }
  v11 = *(void **)(v5 + OBJC_IVAR____UIZoomTransitionController_showcasePortal);
  if (v11)
    objc_msgSend(v11, sel_removeFromSuperview);
  sub_1855A0608(0, 1u);
  v38 = OBJC_IVAR____UIZoomTransitionController_style;
  if (*(_BYTE *)(v5 + OBJC_IVAR____UIZoomTransitionController_style) == 1)
  {
    v12 = *(void **)(v5 + OBJC_IVAR____UIZoomTransitionController_foregroundView);
    if (v12)
    {
      v13 = v12;
      v14 = objc_msgSend(v13, sel_layer);
      objc_msgSend(v14, sel_setZPosition_, 0.0);

      v15 = objc_msgSend(v13, sel_superview);
      objc_msgSend(v15, sel_bringSubviewToFront_, v13);

    }
  }
  v16 = *(void **)(v5 + OBJC_IVAR____UIZoomTransitionController_backgroundView);
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend(v17, sel_layer);
    v19 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 16);
    v41[0] = *MEMORY[0x1E0CD2610];
    v41[1] = v19;
    v20 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 48);
    v41[2] = *(_OWORD *)(MEMORY[0x1E0CD2610] + 32);
    v41[3] = v20;
    v21 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 80);
    v41[4] = *(_OWORD *)(MEMORY[0x1E0CD2610] + 64);
    v41[5] = v21;
    v22 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 112);
    v41[6] = *(_OWORD *)(MEMORY[0x1E0CD2610] + 96);
    v41[7] = v22;
    objc_msgSend(v18, sel_setSublayerTransform_, v41);

    objc_msgSend(v17, sel_setUserInteractionEnabled_, 1);
    v23 = objc_msgSend(v17, sel_layer);
    objc_msgSend(v23, sel_setZPosition_, 0.0);

  }
  v24 = objc_msgSend(v6, sel_transitionWasCancelled);
  v25 = OBJC_IVAR____UIZoomTransitionController_shimPropertyAnimator;
  v26 = *(_BYTE **)(v5 + OBJC_IVAR____UIZoomTransitionController_shimPropertyAnimator);
  if (!v26)
  {
    __break(1u);
    goto LABEL_33;
  }
  v27 = v24;
  v28 = OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__state;
  v29 = *(_QWORD *)&v26[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__state];
  if (v29)
  {
    if (v29 != 1)
      goto LABEL_24;
    v26[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isRunning] = 0;
    *(_QWORD *)&v26[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_springBehaviorWhenContinued] = 0;
    v30 = v26;
    swift_unknownObjectRelease();
    objc_msgSend(*(id *)&v30[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_propertyAnimator], sel_stopAnimation_, 0);
    *(_QWORD *)&v26[v28] = 2;

    v26 = *(_BYTE **)(v5 + v25);
    if (!v26)
    {
      __break(1u);
LABEL_24:
      if (v29 == 2)
        goto LABEL_25;
LABEL_33:
      result = (id)sub_186507E04();
      __break(1u);
      return result;
    }
  }
LABEL_25:
  v31 = v27 ^ 1;
  if (*(_QWORD *)&v26[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__state] == 2)
  {
    v32 = v27;
    *(_QWORD *)&v26[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_completionPosition] = v27;
    v33 = 1.0;
    if (v27)
      v33 = 0.0;
    *(double *)&v26[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__fractionComplete] = v33;
    v34 = *(void **)&v26[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_propertyAnimator];
    v35 = v26;
    objc_msgSend(v34, sel_finishAnimationAtPosition_, v32);
    sub_185778B40();

  }
  objc_msgSend(v6, sel_completeTransition_, v31);
  *(_QWORD *)(v5 + v2) = 0;
  swift_unknownObjectRelease();
  v36 = *(void **)(v5 + v40);
  *(_QWORD *)(v5 + v40) = 0;

  v37 = *(void **)(v5 + v39);
  *(_QWORD *)(v5 + v39) = 0;

  *(_BYTE *)(v5 + v38) = 0;
  *(_BYTE *)(v5 + OBJC_IVAR____UIZoomTransitionController_isPresentingSheet) = 0;
  result = *(id *)(v5 + OBJC_IVAR____UIZoomTransitionController_foregroundView);
  if (result)
    return objc_msgSend(result, sel_setUserInteractionEnabled_, 1);
  return result;
}

void sub_1855A1240(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void (*v10)();
  uint64_t v11;

  v2 = (void *)objc_opt_self();
  v10 = sub_1855A69C4;
  v11 = a1;
  v3 = MEMORY[0x1E0C809B0];
  v6 = MEMORY[0x1E0C809B0];
  v7 = 1107296256;
  v8 = sub_18530A69C;
  v9 = &block_descriptor_162;
  v4 = _Block_copy(&v6);
  swift_retain();
  swift_release();
  v10 = (void (*)())j__signpost_c2_removePresentationModifier_end;
  v11 = 0;
  v6 = v3;
  v7 = 1107296256;
  v8 = sub_1856DA9E8;
  v9 = &block_descriptor_165;
  v5 = _Block_copy(&v6);
  objc_msgSend(v2, sel__animateByRetargetingAnimations_completion_, v4, v5);
  _Block_release(v5);
  _Block_release(v4);
}

void sub_1855A1340(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x186DCA138](v1);
  if (v2)
  {
    v3 = (char *)v2;
    if (qword_1EDD81E70 != -1)
      swift_once();
    v4 = xmmword_1EDDA8590;
    v5 = qword_1EDDA85A0;
    v6 = unk_1EDDA85A8;
    v7 = xmmword_1EDDA85B0;
    v8 = qword_1EDDA85C0;
    v9 = unk_1EDDA85C8;
    v10 = &v3[OBJC_IVAR____UIMagicMorphView_overrideCornerRadii];
    *(_OWORD *)v10 = xmmword_1EDDA8590;
    *((_QWORD *)v10 + 2) = v5;
    *((_QWORD *)v10 + 3) = v6;
    *((_OWORD *)v10 + 2) = v7;
    *((_QWORD *)v10 + 6) = v8;
    *((_QWORD *)v10 + 7) = v9;
    v10[64] = 0;
    v11 = &v3[OBJC_IVAR____UIMagicMorphView_clippingViews];
    swift_beginAccess();
    v12 = *(_QWORD *)v11;
    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      v13 = sub_186507E58();
    }
    else
    {
      v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    if (v13)
    {
      if (v13 < 1)
      {
        __break(1u);
        return;
      }
      v14 = 0;
      do
      {
        if ((v12 & 0xC000000000000001) != 0)
          v15 = (id)MEMORY[0x186DC4CB4](v14, v12);
        else
          v15 = *(id *)(v12 + 8 * v14 + 32);
        v16 = v15;
        ++v14;
        v17 = objc_msgSend(v15, sel_layer);
        v19 = v4;
        v20 = v5;
        v21 = v6;
        v22 = v7;
        v23 = v8;
        v24 = v9;
        objc_msgSend(v17, sel_setCornerRadii_, &v19);

      }
      while (v13 != v14);
    }
    swift_bridgeObjectRelease();
    v18 = objc_msgSend(v3, sel_layer);
    v19 = v4;
    v20 = v5;
    v21 = v6;
    v22 = v7;
    v23 = v8;
    v24 = v9;
    objc_msgSend(v18, sel_setCornerRadii_, &v19);

  }
}

uint64_t sub_1855A155C(void *a1, _OWORD *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t result;
  _QWORD v11[6];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  v5 = a2[1];
  *(_OWORD *)(v4 + 24) = *a2;
  *(_OWORD *)(v4 + 40) = v5;
  v6 = a2[3];
  *(_OWORD *)(v4 + 56) = a2[2];
  *(_OWORD *)(v4 + 72) = v6;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1855A6998;
  *(_QWORD *)(v7 + 24) = v4;
  v11[4] = sub_1855A6A1C;
  v11[5] = v7;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1855D8DF4;
  v11[3] = &block_descriptor_159;
  v8 = _Block_copy(v11);
  v9 = a1;
  swift_retain();
  swift_release();
  UIMM_HFR(v8);
  _Block_release(v8);
  swift_release();
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v4 & 1) != 0)
    __break(1u);
  return result;
}

void sub_1855A1694()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  double v4;
  id v5;
  void *v6;
  id v7;
  _OWORD v8[4];

  v1 = objc_msgSend(v0, sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_7;
  }
  v2 = v1;
  v3 = objc_msgSend(v1, sel_layer);

  LODWORD(v4) = 0;
  objc_msgSend(v3, sel_setShadowOpacity_, v4);

  v5 = objc_msgSend(v0, sel_view);
  if (!v5)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, sel_layer);

  if (qword_1EDD81E70 != -1)
    swift_once();
  v8[0] = xmmword_1EDDA8590;
  v8[1] = *(_OWORD *)&qword_1EDDA85A0;
  v8[2] = xmmword_1EDDA85B0;
  v8[3] = *(_OWORD *)&qword_1EDDA85C0;
  objc_msgSend(v7, sel_setCornerRadii_, v8);

}

uint64_t sub_1855A18F8()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;

  v1 = *(void **)(v0 + OBJC_IVAR____UIZoomTransitionController_activeTransitionContext);
  if (!v1)
    return 2;
  swift_unknownObjectRetain();
  if (!UIAccessibilityIsReduceMotionEnabled())
  {
    swift_unknownObjectRelease();
    return 2;
  }
  v2 = objc_msgSend(v1, sel_isInteractive);
  swift_unknownObjectRelease();
  if (v2)
    return 2;
  else
    return 1;
}

void *sub_1855A1A00(void *a1)
{
  uint64_t v1;
  unsigned __int8 v3;
  void *v4;
  id v5;

  swift_unknownObjectRetain();
  if (!UIAccessibilityIsReduceMotionEnabled())
  {
    swift_unknownObjectRelease();
    goto LABEL_5;
  }
  v3 = objc_msgSend(a1, sel_isInteractive);
  swift_unknownObjectRelease();
  if ((v3 & 1) != 0)
  {
LABEL_5:
    v4 = *(void **)(v1 + OBJC_IVAR____UIZoomTransitionController_toolbarTransitionController);
    v5 = v4;
    return v4;
  }
  return 0;
}

uint64_t sub_1855A1B58@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t i;
  char *v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  if ((*(_BYTE *)(v2 + OBJC_IVAR____UIZoomTransitionController_isPreempting) & 1) != 0)
    goto LABEL_14;
  v21 = a1;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____UIZoomTransitionController_morphAnimation);
  v5 = sub_18564C748();
  objc_msgSend(v5, sel_setPaused_, 1);

  objc_msgSend(*(id *)(v4 + OBJC_IVAR____UIMagicMorphAnimation_morphView), sel_removeFromSuperview);
  sub_1857070B8();
  v6 = *(void **)(v4 + OBJC_IVAR____UIMagicMorphAnimation_animationContainerView);
  objc_msgSend(v6, sel_removeFromSuperview);
  v22 = 0x3FF0000000000000uLL;
  *(_QWORD *)&v23 = 0;
  *((_QWORD *)&v23 + 1) = 0x3FF0000000000000;
  v24 = 0uLL;
  objc_msgSend(v6, sel_setTransform_, &v22);
  v7 = objc_msgSend(v6, sel_layer);
  v8 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 16);
  v22 = *MEMORY[0x1E0CD2610];
  v23 = v8;
  v9 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 48);
  v24 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 32);
  v25 = v9;
  v10 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 80);
  v26 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 64);
  v27 = v10;
  v11 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 112);
  v28 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 96);
  v29 = v11;
  objc_msgSend(v7, sel_setSublayerTransform_, &v22);

  v12 = (uint64_t *)(v4 + OBJC_IVAR____UIMagicMorphAnimation_animationItems);
  swift_beginAccess();
  v13 = *v12;
  if (!((unint64_t)*v12 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v14)
      goto LABEL_4;
LABEL_13:
    swift_bridgeObjectRelease();
    *v12 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
    a1 = v21;
LABEL_14:
    result = (uint64_t)sub_1855A0E28(a1);
    *a2 = 0u;
    a2[1] = 0u;
    return result;
  }
  swift_bridgeObjectRetain();
  result = sub_186507E58();
  v14 = result;
  if (!result)
    goto LABEL_13;
LABEL_4:
  if (v14 >= 1)
  {
    for (i = 0; i != v14; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0)
        v17 = (char *)MEMORY[0x186DC4CB4](i, v13);
      else
        v17 = (char *)*(id *)(v13 + 8 * i + 32);
      v18 = v17;
      v19 = *(void **)&v17[OBJC_IVAR____TtCC5UIKit22_UIMagicMorphAnimationP33_27010C79BBE8436D7F6A5CD454B184E54Item_reparentingView];
      if (v19)
      {
        v20 = v19;
        objc_msgSend(v20, sel_removeFromSuperview);

      }
    }
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1855A1F04(uint64_t result)
{
  char *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;

  if (result)
  {
    v2 = (void *)result;
    swift_unknownObjectRetain();
    if (objc_msgSend(v1, sel_isZoomingIn))
    {
      v3 = objc_msgSend(v2, sel_toKeyboard);
      if (v3)
      {
        v4 = v3;
        v5 = objc_msgSend(v2, sel_fromKeyboard);

        if (v5)
        {
LABEL_10:

          return swift_unknownObjectRelease();
        }
LABEL_9:
        v7 = *(id *)&v1[OBJC_IVAR____UIZoomTransitionController_transitionOverlayView];
        objc_msgSend(v7, sel_addSubview_, v4);

        v4 = v7;
        goto LABEL_10;
      }
    }
    else
    {
      v6 = objc_msgSend(v2, sel_fromKeyboard);
      if (v6)
      {
        v4 = v6;
        goto LABEL_9;
      }
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1855A2138(id a1, uint64_t a2, char a3, double a4, double a5, double a6, double a7)
{
  char *v7;
  char *v8;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  unsigned int v26;
  unsigned int v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  char v32;
  id v33;
  unsigned __int8 v34;
  id v35;
  void *v36;
  unsigned int v37;
  id v38;
  id v39;
  uint64_t (**v40)(id, id);
  id v41;
  id v42;
  double v43;
  double v44;
  double v45;
  double v46;

  v8 = v7;
  v16 = OBJC_IVAR____UIZoomTransitionController_activeTransitionContext;
  v17 = *(void **)&v8[OBJC_IVAR____UIZoomTransitionController_activeTransitionContext];
  if (v17)
  {
    if (objc_msgSend((id)swift_unknownObjectRetain(), sel_isInteractive))
    {
      swift_unknownObjectRelease();
    }
    else
    {
      v26 = objc_msgSend(v8, sel_isZoomingIn);
      v27 = objc_msgSend(v17, sel_transitionWasCancelled);
      swift_unknownObjectRelease();
      if (v26)
      {
        if ((v27 & 1) != 0)
          goto LABEL_15;
      }
      else if (!v27)
      {
        goto LABEL_15;
      }
    }
  }
  v18 = objc_msgSend(a1, sel_view);
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend(v8, sel_owningViewController);
    if (!v20)
    {
      a3 = 0;
LABEL_36:

      return a3 & 1;
    }
    v21 = v20;
    if (a2 == 1)
    {
      v22 = objc_msgSend(v20, sel__showcaseView);
      if (v22)
      {
        v23 = v22;
        v24 = objc_msgSend(v22, sel_window);

        if (v24)
        {

          a3 = 0;
          v25 = v21;
LABEL_35:

          v19 = v23;
          goto LABEL_36;
        }

      }
    }
    if (objc_msgSend(v8, sel_isForNavigation))
    {
      v28 = objc_msgSend(v21, sel_navigationController);
      if (v28)
      {
        v23 = v28;
        v25 = v21;
        v29 = objc_msgSend(v23, sel_topViewController);
        if (!v29)
        {

          a3 = 0;
          v23 = v25;
          goto LABEL_35;
        }
        v30 = v29;
        sub_1851F9080(0, &qword_1EDD813C0);
        v31 = v25;
        v32 = sub_186507A44();

        if ((v32 & 1) == 0)
        {

          a3 = 0;
          v25 = v31;
          goto LABEL_35;
        }
        v33 = objc_msgSend(v23, sel__transitionCoordinator);
        swift_unknownObjectRelease();
        if (v33)
        {
          v34 = objc_msgSend(v23, sel__isCurrentTransitionPreemptable);

          if ((v34 & 1) == 0 && !*(_QWORD *)&v8[v16])
          {
            a3 = 0;
            v25 = v19;
            v23 = v31;
            goto LABEL_35;
          }
        }
        else
        {

        }
      }
    }
    if ((a3 & 1) != 0
      && (objc_msgSend(v8, sel_isForNavigation) & 1) == 0
      && (v35 = objc_msgSend(v21, sel_activePresentationController)) != 0
      && (v36 = v35, v37 = objc_msgSend(v35, sel__shouldDismiss), v36, !v37))
    {
      a3 = 0;
    }
    else
    {
      v38 = objc_msgSend(v8, sel_clientTransition);
      v39 = objc_msgSend(v38, sel__options);

      v40 = (uint64_t (**)(id, id))objc_msgSend(v39, sel_interactiveDismissShouldBegin);
      if (v40)
      {
        v41 = objc_msgSend(objc_allocWithZone((Class)UIZoomTransitionInteractionContext), sel_init);
        v42 = objc_msgSend(v21, sel_view);
        objc_msgSend(v19, sel_convertPoint_toView_, v42, a4, a5);
        v44 = v43;
        v46 = v45;

        objc_msgSend(v41, sel_setLocation_, v44, v46);
        objc_msgSend(v41, sel_setVelocity_, a6, a7);
        objc_msgSend(v41, sel_setWillBegin_, a3 & 1);
        a3 = v40[2](v40, v41);

        _Block_release(v40);
      }
    }
    v25 = v19;
    v23 = v21;
    goto LABEL_35;
  }
LABEL_15:
  a3 = 0;
  return a3 & 1;
}

void sub_1855A25F8(char *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = &a1[OBJC_IVAR____UIMagicMorphView_overrideCornerRadii];
  *(_QWORD *)v11 = *a2;
  *((_QWORD *)v11 + 1) = v4;
  *((_QWORD *)v11 + 2) = v5;
  *((_QWORD *)v11 + 3) = v6;
  *((_QWORD *)v11 + 4) = v7;
  *((_QWORD *)v11 + 5) = v8;
  *((_QWORD *)v11 + 6) = v9;
  *((_QWORD *)v11 + 7) = v10;
  v11[64] = 0;
  v12 = &a1[OBJC_IVAR____UIMagicMorphView_clippingViews];
  swift_beginAccess();
  v13 = *(_QWORD *)v12;
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    v14 = sub_186507E58();
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  if (!v14)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    v19 = objc_msgSend(a1, sel_layer);
    v20 = v3;
    v21 = v4;
    v22 = v5;
    v23 = v6;
    v24 = v7;
    v25 = v8;
    v26 = v9;
    v27 = v10;
    objc_msgSend(v19, sel_setCornerRadii_, &v20);

    return;
  }
  if (v14 >= 1)
  {
    v15 = 0;
    do
    {
      if ((v13 & 0xC000000000000001) != 0)
        v16 = (id)MEMORY[0x186DC4CB4](v15, v13);
      else
        v16 = *(id *)(v13 + 8 * v15 + 32);
      v17 = v16;
      ++v15;
      v18 = objc_msgSend(v16, sel_layer);
      v20 = v3;
      v21 = v4;
      v22 = v5;
      v23 = v6;
      v24 = v7;
      v25 = v8;
      v26 = v9;
      v27 = v10;
      objc_msgSend(v18, sel_setCornerRadii_, &v20);

    }
    while (v14 != v15);
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_1855A27BC(void *a1, _OWORD *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t result;
  _QWORD v11[6];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  v5 = a2[1];
  *(_OWORD *)(v4 + 24) = *a2;
  *(_OWORD *)(v4 + 40) = v5;
  v6 = a2[3];
  *(_OWORD *)(v4 + 56) = a2[2];
  *(_OWORD *)(v4 + 72) = v6;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1855A6AE0;
  *(_QWORD *)(v7 + 24) = v4;
  v11[4] = sub_1855A6A1C;
  v11[5] = v7;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1855D8DF4;
  v11[3] = &block_descriptor_97;
  v8 = _Block_copy(v11);
  v9 = a1;
  swift_retain();
  swift_release();
  UIMM_HFR(v8);
  _Block_release(v8);
  swift_release();
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v4 & 1) != 0)
    __break(1u);
  return result;
}

void sub_1855A28F4(uint64_t a1, double *a2)
{
  double v2;
  __int128 v3;
  char v4;

  v2 = a2[6];
  if (v2 <= a2[4])
    v2 = a2[4];
  if (v2 <= *a2)
    v2 = *a2;
  if (v2 <= a2[2])
    v2 = a2[2];
  CACornerRadiiMake((double *)&v3, v2, v2, v2, v2);
  v4 = 0;
  sub_185705548((uint64_t)&v3);
}

uint64_t sub_1855A29D8(void *a1, char a2, void *a3, uint64_t a4, void *a5, double a6)
{
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  uint64_t result;
  _QWORD v19[6];

  v11 = a2 & 1;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_BYTE *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = a3;
  *(_QWORD *)(v12 + 40) = a4;
  *(_QWORD *)(v12 + 48) = a5;
  *(double *)(v12 + 56) = a6;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_1855A6708;
  *(_QWORD *)(v13 + 24) = v12;
  v19[4] = sub_1855A6A1C;
  v19[5] = v13;
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 1107296256;
  v19[2] = sub_1855D8DF4;
  v19[3] = &block_descriptor_72;
  v14 = _Block_copy(v19);
  v15 = a1;
  v16 = a3;
  swift_unknownObjectRetain();
  v17 = a5;
  swift_retain();
  swift_release();
  UIMM_HFR(v14);
  _Block_release(v14);
  swift_release();
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v12 & 1) != 0)
    __break(1u);
  return result;
}

void sub_1855A2B38(void *a1, char a2, void *a3, void *a4, char *a5, double a6)
{
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  CGPoint v16;
  double x;
  double y;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  CGFloat v32;
  CGFloat width;
  CGFloat height;
  id v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  double v44;
  double a;
  double v46;
  double v47;
  double v48;
  double v49;
  CGFloat v51;
  char *v52;
  double v53;
  double v54;
  CGFloat v55;
  CGAffineTransform v56;
  CGPoint v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;

  objc_msgSend(a1, sel_originalTrackingViewPosition);
  v13 = v12;
  v15 = v14;
  objc_msgSend(a1, sel_translation);
  v57.x = v13;
  v57.y = v15;
  v16 = CGPointApplyAffineTransform(v57, &v56);
  x = v16.x;
  y = v16.y;
  if ((a2 & 1) != 0)
  {
    objc_msgSend(a3, sel_setAlpha_, a6 * -1.3 + 1.0);
    goto LABEL_13;
  }
  if (!objc_msgSend(a1, sel_wantsHeightClamping))
  {
LABEL_13:
    objc_msgSend(a5, sel_setCenter_, x, y);
    objc_msgSend(a1, sel_transform);
    objc_msgSend(a5, sel_setTransform_, &v56);
    return;
  }
  objc_msgSend(a1, sel_scale);
  v54 = v19;
  objc_msgSend(a3, sel_bounds);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  objc_msgSend(a3, sel__cropInsets);
  v58.origin.x = UIRectInset(v21, v23, v25, v27, v28, v31, v30, v29);
  v55 = v58.origin.x;
  v32 = v58.origin.y;
  width = v58.size.width;
  height = v58.size.height;
  v53 = CGRectGetHeight(v58);
  v35 = objc_msgSend(a4, sel_containerView);
  objc_msgSend(v35, sel_bounds);
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v43 = v42;

  v59.origin.x = v37;
  v59.origin.y = v39;
  v59.size.width = v41;
  v59.size.height = v43;
  v44 = CGRectGetHeight(v59);
  v60.origin.x = v55;
  v60.origin.y = v32;
  v60.size.width = width;
  v60.size.height = height;
  a = CGRectGetHeight(v60);
  v61.origin.x = v55;
  v61.origin.y = v32;
  v61.size.width = width;
  v61.size.height = height;
  v46 = CGRectGetHeight(v61);
  v62.origin.x = v55;
  v62.origin.y = v32;
  v62.size.width = width;
  v62.size.height = height;
  if (CGRectGetWidth(v62) >= v46)
  {
LABEL_11:
    v64.origin.x = v55;
    v64.origin.y = v32;
    v64.size.width = width;
    v64.size.height = height;
    v51 = CGRectGetWidth(v64);
    v52 = &a5[OBJC_IVAR____UIMagicMorphView_overrideBounds];
    *(_QWORD *)v52 = 0;
    *((_QWORD *)v52 + 1) = 0;
    *((CGFloat *)v52 + 2) = v51;
    *((double *)v52 + 3) = a;
    v52[32] = 0;
    sub_18570570C();
    v65.origin.x = v55;
    v65.origin.y = v32;
    v65.size.width = width;
    v65.size.height = height;
    y = v16.y + (CGRectGetHeight(v65) - a) * -0.5;
    x = v16.x;
    goto LABEL_13;
  }
  v47 = (v16.y + v54 * v53 * 0.5 - v44) / v54;
  if (v47 <= 0.0)
    v47 = 0.0;
  v56.a = a - v47;
  v48 = v44 * 0.5;
  v63.origin.x = v55;
  v63.origin.y = v32;
  v63.size.width = width;
  v63.size.height = height;
  v49 = CGRectGetHeight(v63);
  if (v44 * -0.5 <= 0.0 && v48 <= v49)
  {
    sub_185774578(v48, v49, v44 * -0.5, 0.0);
    a = v56.a;
    goto LABEL_11;
  }
  __break(1u);
}

void sub_1855A2EE8()
{
  void *v0;
  void *v1;
  char **v2;
  id v3;
  int64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t *v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  int64_t *v23;
  unint64_t v24;
  int64_t *v25;
  int64_t *v26;
  id v28;
  void *v29;
  void *v30;
  id v31;
  _OWORD v32[2];
  _OWORD v33[2];
  int64_t *v34;

  v1 = v0;
  v2 = &selRef_keyboardExtensionsOnDevice;
  v3 = objc_msgSend(v0, sel_layer);
  v4 = (int64_t *)objc_msgSend(v3, sel_filters);

  if (!v4)
    goto LABEL_40;
  v5 = sub_186507654();

  v34 = (int64_t *)v5;
  v6 = *(_QWORD *)(v5 + 16);
  if (!v6)
  {
    v14 = 0;
    goto LABEL_39;
  }
  v30 = v1;
  swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 8;
  while (1)
  {
    sub_1850F69D4(v5 + v8 * 8 - 32, (uint64_t)v33);
    sub_1850F69D4((uint64_t)v33, (uint64_t)v32);
    sub_1851F9080(0, (unint64_t *)&qword_1EDD81E88);
    swift_dynamicCast();
    v10 = objc_msgSend(v31, sel_name);

    if (v10)
      break;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
LABEL_5:
    ++v7;
    v8 += 4;
    if (v6 == v7)
    {
      swift_bridgeObjectRelease();
      v14 = v34[2];
LABEL_37:
      v1 = v30;
      v2 = &selRef_keyboardExtensionsOnDevice;
      goto LABEL_38;
    }
  }
  v11 = sub_1865074F8();
  v13 = v12;

  if (v11 != 0xD00000000000002BLL || v13 != 0x80000001866866E0)
  {
    v9 = sub_186507FCC();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
    if ((v9 & 1) != 0)
      goto LABEL_13;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
LABEL_13:
  swift_bridgeObjectRelease();
  v14 = v7 + 1;
  if (__OFADD__(v7, 1))
    goto LABEL_53;
  v15 = v34;
  v16 = v34[2];
  if (v14 == v16)
  {
    v6 = v7;
    v2 = &selRef_keyboardExtensionsOnDevice;
LABEL_38:
    if (v14 < v6)
      goto LABEL_52;
LABEL_39:
    sub_1855B04B8(v6, v14);
    v4 = v34;
LABEL_40:
    v28 = objc_msgSend(v1, v2[380]);
    if (v4)
    {
      swift_bridgeObjectRetain();
      v29 = (void *)sub_18650763C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v29 = 0;
    }
    objc_msgSend(v28, sel_setFilters_, v29);
    swift_bridgeObjectRelease();

    return;
  }
  v17 = v7 + 1;
  while (2)
  {
    if (v17 < v16)
    {
      sub_1850F69D4((uint64_t)&v15[v8], (uint64_t)v33);
      sub_1850F69D4((uint64_t)v33, (uint64_t)v32);
      swift_dynamicCast();
      v18 = objc_msgSend(v31, sel_name);

      if (v18)
      {
        v19 = sub_1865074F8();
        v21 = v20;

        if (v19 == 0xD00000000000002BLL && v21 == 0x80000001866866E0)
        {
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
LABEL_34:
          v14 = v17 + 1;
          if (__OFADD__(v17, 1))
            goto LABEL_45;
          v15 = v34;
          v16 = v34[2];
          ++v17;
          v8 += 4;
          if (v14 == v16)
          {
            v6 = v7;
            goto LABEL_37;
          }
          continue;
        }
        v22 = sub_186507FCC();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
        if ((v22 & 1) != 0)
          goto LABEL_34;
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
      }
      if (v17 != v7)
      {
        if ((v7 & 0x8000000000000000) != 0)
          goto LABEL_47;
        v23 = v34;
        v24 = v34[2];
        if (v7 >= v24)
          goto LABEL_48;
        sub_1850F69D4((uint64_t)&v34[4 * v7 + 4], (uint64_t)v33);
        if (v17 >= v24)
          goto LABEL_49;
        sub_1850F69D4((uint64_t)&v23[v8], (uint64_t)v32);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v23 = sub_18578546C(v23);
          v34 = v23;
        }
        if (v7 >= v23[2])
          goto LABEL_50;
        v25 = &v23[4 * v7 + 4];
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
        sub_1850F6908(v32, v25);
        if (v17 >= v34[2])
          goto LABEL_51;
        v26 = &v34[v8];
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v34[v8]);
        sub_1850F6908(v33, v26);
      }
      if (__OFADD__(v7++, 1))
        goto LABEL_46;
      goto LABEL_34;
    }
    break;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
}

void sub_1855A33BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x186DCA138](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_1855A0608(0, 0);

  }
}

void sub_1855A3414(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x186DCA138](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_1855A0E28(a2);

  }
}

uint64_t sub_1855A34B8(void *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t result;
  _QWORD v13[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(double *)(v8 + 24) = a3;
  *(double *)(v8 + 32) = a4;
  *(_QWORD *)(v8 + 40) = a2;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1855A6684;
  *(_QWORD *)(v9 + 24) = v8;
  v13[4] = sub_1855A6A1C;
  v13[5] = v9;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1855D8DF4;
  v13[3] = &block_descriptor_45;
  v10 = _Block_copy(v13);
  v11 = a1;
  swift_retain();
  swift_retain();
  swift_release();
  UIMM_HFR(v10);
  _Block_release(v10);
  swift_release();
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v8 & 1) != 0)
    __break(1u);
  return result;
}

void sub_1855A35F8(char *a1, uint64_t a2, double a3, double a4)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  _QWORD v11[6];

  v11[0] = 0x3FF0000000000000;
  v11[1] = 0;
  v7 = a2 + 16;
  v11[2] = 0;
  v11[3] = 0x3FF0000000000000;
  v11[4] = 0;
  v11[5] = 0;
  objc_msgSend(a1, sel_setTransform_, v11);
  objc_msgSend(a1, sel_setCenter_, a3, a4);
  v8 = &a1[OBJC_IVAR____UIMagicMorphView_overrideBounds];
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  v8[32] = 1;
  sub_18570570C();
  objc_msgSend(a1, sel_layoutIfNeeded);
  swift_beginAccess();
  v9 = MEMORY[0x186DCA138](v7);
  if (v9)
  {
    v10 = (void *)v9;
    sub_1855A0608(1u, 0);

  }
}

uint64_t sub_1855A36D4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t result;
  char *v7;
  void *v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  char *v21;
  void *v22;
  void *v23;
  id v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  v5 = a3 + 16;
  swift_beginAccess();
  result = MEMORY[0x186DCA138](v5);
  if (result)
  {
    v7 = (char *)result;
    v8 = *(void **)(result + OBJC_IVAR____UIZoomTransitionController_morphInteractionAssertion);
    *(_QWORD *)(result + OBJC_IVAR____UIZoomTransitionController_morphInteractionAssertion) = 0;

    sub_1855A0E28(a4);
    v9 = (char *)*(id *)&v7[OBJC_IVAR____UIZoomTransitionController_morphAnimation];
    v10 = sub_18564C748();
    objc_msgSend(v10, sel_setPaused_, 1);

    objc_msgSend(*(id *)&v9[OBJC_IVAR____UIMagicMorphAnimation_morphView], sel_removeFromSuperview);
    sub_1857070B8();
    v11 = *(void **)&v9[OBJC_IVAR____UIMagicMorphAnimation_animationContainerView];
    objc_msgSend(v11, sel_removeFromSuperview);
    v25 = 0x3FF0000000000000uLL;
    *(_QWORD *)&v26 = 0;
    *((_QWORD *)&v26 + 1) = 0x3FF0000000000000;
    v27 = 0uLL;
    objc_msgSend(v11, sel_setTransform_, &v25);
    v12 = objc_msgSend(v11, sel_layer);
    v13 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 16);
    v25 = *MEMORY[0x1E0CD2610];
    v26 = v13;
    v14 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 48);
    v27 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 32);
    v28 = v14;
    v15 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 80);
    v29 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 64);
    v30 = v15;
    v16 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 112);
    v31 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 96);
    v32 = v16;
    objc_msgSend(v12, sel_setSublayerTransform_, &v25);

    v17 = &v9[OBJC_IVAR____UIMagicMorphAnimation_animationItems];
    swift_beginAccess();
    v18 = *(_QWORD *)v17;
    if (*(_QWORD *)v17 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_186507E58();
      v19 = result;
      if (result)
        goto LABEL_4;
    }
    else
    {
      v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (v19)
      {
LABEL_4:
        if (v19 < 1)
        {
          __break(1u);
          return result;
        }
        for (i = 0; i != v19; ++i)
        {
          if ((v18 & 0xC000000000000001) != 0)
            v21 = (char *)MEMORY[0x186DC4CB4](i, v18);
          else
            v21 = (char *)*(id *)(v18 + 8 * i + 32);
          v22 = v21;
          v23 = *(void **)&v21[OBJC_IVAR____TtCC5UIKit22_UIMagicMorphAnimationP33_27010C79BBE8436D7F6A5CD454B184E54Item_reparentingView];
          if (v23)
          {
            v24 = v23;
            objc_msgSend(v24, sel_removeFromSuperview);

          }
        }
      }
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)v17 = MEMORY[0x1E0DEE9D8];

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for _UIZoomTransitionController(uint64_t a1)
{
  return sub_1851F9080(a1, &qword_1EDD85170);
}

id sub_1855A39C8(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  id v7;
  void *ObjCClassFromMetadata;
  id result;
  void *v10;
  double v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  objc_super v29;
  objc_super v30;
  CGRect v31;

  v5 = OBJC_IVAR____UIZoomTransitionController_fallbackSourceView;
  v6 = *(void **)(v2 + OBJC_IVAR____UIZoomTransitionController_fallbackSourceView);
  if (v6)
  {
    v7 = *(id *)(v2 + OBJC_IVAR____UIZoomTransitionController_fallbackSourceView);
LABEL_6:
    v25 = v6;
    result = objc_msgSend(a2, sel_view);
    if (result)
    {
      v26 = result;
      objc_msgSend(a1, sel_insertSubview_belowSubview_, v7, result);

      result = objc_msgSend(a2, sel_view);
      if (result)
      {
        v27 = result;
        v28 = objc_msgSend(result, sel_backgroundColor);

        objc_msgSend(v7, sel_setBackgroundColor_, v28);
        return v7;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
  type metadata accessor for _UIZoomTransitionSettingsDomain();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v30.receiver = ObjCClassFromMetadata;
  v30.super_class = (Class)&OBJC_METACLASS____TtC5UIKit31_UIZoomTransitionSettingsDomain;
  result = objc_msgSendSuper2(&v30, sel_rootSettings);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v10 = result;
  type metadata accessor for _UIZoomTransitionSpec();
  v11 = *(double *)(swift_dynamicCastClassUnconditional()
                  + OBJC_IVAR____TtC5UIKit21_UIZoomTransitionSpec_fallbackSourceViewWidth);

  v29.receiver = ObjCClassFromMetadata;
  v29.super_class = (Class)&OBJC_METACLASS____TtC5UIKit31_UIZoomTransitionSettingsDomain;
  result = objc_msgSendSuper2(&v29, sel_rootSettings);
  if (result)
  {
    v12 = result;
    v13 = *(double *)(swift_dynamicCastClassUnconditional()
                    + OBJC_IVAR____TtC5UIKit21_UIZoomTransitionSpec_fallbackSourceViewWidth);

    objc_msgSend(a1, sel_bounds);
    v17 = UIRectCenteredRect(0.0, 0.0, v11, v13, v14, v15, v16);
    v7 = objc_msgSend(objc_allocWithZone((Class)UIView), sel_initWithFrame_, v17, v18, v19, v20);
    v21 = objc_msgSend(v7, sel_layer);
    v22 = (void *)sub_1865074D4();
    objc_msgSend(v21, sel_setName_, v22);

    v23 = objc_msgSend(v7, sel_layer);
    objc_msgSend(v7, sel_bounds);
    objc_msgSend(v23, sel_setCornerRadius_, CGRectGetWidth(v31) * 0.5);

    objc_msgSend(v7, sel_setAlpha_, 0.0);
    v24 = *(void **)(v2 + v5);
    *(_QWORD *)(v2 + v5) = v7;

    v6 = 0;
    goto LABEL_6;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1855A3CC0(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t result;
  _QWORD v8[6];

  v4 = swift_allocObject();
  *(_BYTE *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1855A65B4;
  *(_QWORD *)(v5 + 24) = v4;
  v8[4] = sub_1855A65EC;
  v8[5] = v5;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1855D8DF4;
  v8[3] = &block_descriptor_35_0;
  v6 = _Block_copy(v8);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  UIMM_HFR(v6);
  _Block_release(v6);
  swift_release();
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((a2 & 1) != 0)
    __break(1u);
  return result;
}

void sub_1855A3DE8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t (*v20)();
  uint64_t v21;

  v3 = *(_QWORD *)(a3 + OBJC_IVAR____UIZoomTransitionController_activeTransitionContext);
  if (v3)
  {
    v7 = (void *)objc_opt_self();
    v8 = swift_allocObject();
    *(_BYTE *)(v8 + 16) = a1 & 1;
    *(_QWORD *)(v8 + 24) = v3;
    v20 = sub_1855A6598;
    v21 = v8;
    v9 = MEMORY[0x1E0C809B0];
    v16 = MEMORY[0x1E0C809B0];
    v17 = 1107296256;
    v18 = sub_18530A69C;
    v19 = &block_descriptor_17;
    v10 = _Block_copy(&v16);
    swift_unknownObjectRetain_n();
    swift_release();
    v20 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
    v21 = 0;
    v16 = v9;
    v17 = 1107296256;
    v18 = sub_1856DA9E8;
    v19 = &block_descriptor_20;
    v11 = _Block_copy(&v16);
    objc_msgSend(v7, sel__animateUsingSpringBehavior_tracking_animations_completion_, a2, 0, v10, v11);
    _Block_release(v11);
    _Block_release(v10);
    v12 = OBJC_IVAR____UIZoomTransitionController_shimPropertyAnimator;
    v13 = *(_QWORD *)(a3 + OBJC_IVAR____UIZoomTransitionController_shimPropertyAnimator);
    if (v13)
    {
      *(_BYTE *)(v13 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isReversed) = (a1 & 1) == 0;
      v14 = *(void **)(a3 + v12);
      if (v14)
      {
        v15 = v14;
        sub_1855A3F88(a2, v15);
        swift_unknownObjectRelease();

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_1855A3F88(uint64_t result, _BYTE *a2)
{
  uint64_t v2;
  BOOL v3;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  id v12;

  v2 = *(_QWORD *)&a2[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__state];
  if (v2)
    v3 = v2 == 2;
  else
    v3 = 1;
  if (!v3)
  {
    if (v2 == 1)
    {
      v5 = OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isRunning;
      if ((a2[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isRunning] & 1) == 0)
      {
        v6 = (void *)result;
        v7 = a2[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isReversed];
        *(_QWORD *)&a2[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_completionPosition] = v7;
        v8 = 1.0;
        if ((_DWORD)v7)
          v8 = 0.0;
        *(double *)&a2[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__fractionComplete] = v8;
        sub_185778D50();
        a2[v5] = 1;
        *(_QWORD *)&a2[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_springBehaviorWhenContinued] = v6;
        swift_unknownObjectRelease();
        v9 = swift_allocObject();
        *(_QWORD *)(v9 + 16) = a2;
        v10 = swift_allocObject();
        *(_QWORD *)(v10 + 16) = a2;
        v11 = a2;
        v12 = v6;
        sub_1857788E0((uint64_t)sub_1855A65A4, v9, (uint64_t)sub_1855A65AC, v10, 1.0);
        swift_release();
        return swift_release();
      }
    }
    else
    {
      result = sub_186507E04();
      __break(1u);
    }
  }
  return result;
}

id sub_1855A4100(void *a1, id a2)
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double Width;
  double v31;
  double Height;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  BOOL v38;
  id v39;
  void *v40;
  id v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  SEL *v58;
  __int128 v59;
  unint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  CGFloat v65;
  CGFloat v66;
  CGFloat v67;
  CGFloat v68;
  CGFloat v69;
  CGFloat v70;
  __int128 v71;
  unint64_t v72;
  __int128 v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  int v81;
  id v82;
  id v83;
  void *v84;
  double v85;
  double v86;
  id v87;
  id v88;
  id v89;
  id v90;
  double v91;
  double v92;
  double v93;
  double v94;
  id v95;
  id v96;
  double v97;
  double v98;
  id v99;
  id v100;
  int v101;
  double v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  CGFloat v111;
  CGFloat v112;
  CGFloat v113;
  CGFloat v114;
  CGFloat v115;
  CGFloat v116;
  CGFloat v117;
  CGFloat v118;
  CGFloat m24;
  CGFloat m23;
  CGFloat v121;
  CGFloat v122;
  CGFloat v123;
  CGFloat v124;
  CGFloat v125;
  CGFloat v126;
  __int128 v127;
  __int128 v128;
  CGFloat v129;
  CGFloat v130;
  CGFloat v131;
  CGFloat v132;
  CGFloat v133;
  CGFloat v134;
  CGFloat v135;
  CGFloat v136;
  CGFloat v137;
  CGFloat v138;
  CGFloat v139;
  __int128 v140;
  CGFloat v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  CGSize size;
  __int128 v148;
  CGFloat v149;
  CGFloat v150;
  __int128 v151;
  CGFloat m14;
  __int128 v153;
  CGFloat m13;
  __int128 v155;
  CGFloat m12;
  __int128 v157;
  CGFloat m11;
  __int128 v159;
  CGFloat m44;
  CGFloat m43;
  CGFloat m42;
  CGFloat m41;
  CGFloat m34;
  CGFloat m33;
  CGFloat m32;
  CGFloat m31;
  __int128 v168;
  __int128 v169;
  CGFloat m22;
  __int128 v171;
  CGFloat m21;
  double v173;
  __int128 v174;
  float64x2_t v175;
  __int128 v176;
  float64x2_t v177;
  __int128 v178;
  float64x2_t v179;
  __int128 v180;
  float64x2_t v181;
  CGRect recta;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  CATransform3D b;
  CATransform3D v191;
  uint64_t v192;
  CGRect v193;
  CGRect v194;
  CGRect v195;
  CGRect v196;
  CGRect v197;
  CGRect v198;
  CGRect v199;
  CGRect v200;
  CGRect v201;
  CGRect v202;
  CGRect v203;
  CGRect v204;

  v192 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a2, sel_bounds);
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  objc_msgSend(a2, sel__cropInsets);
  recta.origin.x = UIRectInset(v5, v7, v9, v11, v12, v15, v14, v13);
  v17 = v16;
  v19 = v18;
  v21 = v20;
  objc_msgSend(a1, sel_bounds);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v193.origin.x = recta.origin.x;
  v193.origin.y = v17;
  v193.size.width = v19;
  v193.size.height = v21;
  Width = CGRectGetWidth(v193);
  v194.origin.x = v23;
  v194.origin.y = v25;
  v194.size.width = v27;
  v194.size.height = v29;
  v31 = vabdd_f64(Width, CGRectGetWidth(v194));
  v195.origin.x = v23;
  v195.origin.y = v25;
  v195.size.width = v27;
  v195.size.height = v29;
  v173 = v31 / CGRectGetWidth(v195);
  v196.origin.x = recta.origin.x;
  v196.origin.y = v17;
  v196.size.width = v19;
  v196.size.height = v21;
  Height = CGRectGetHeight(v196);
  v197.origin.x = v23;
  v197.origin.y = v25;
  v197.size.width = v27;
  v197.size.height = v29;
  v33 = vabdd_f64(Height, CGRectGetHeight(v197));
  v198.origin.x = v23;
  v198.origin.y = v25;
  v198.size.width = v27;
  v198.size.height = v29;
  if (v33 / CGRectGetHeight(v198) >= v173)
  {
    v201.origin.x = recta.origin.x;
    v201.origin.y = v17;
    v201.size.width = v19;
    v201.size.height = v21;
    v34 = CGRectGetWidth(v201);
    objc_msgSend(a1, sel_bounds);
    v35 = CGRectGetWidth(v202);
  }
  else
  {
    v199.origin.x = recta.origin.x;
    v199.origin.y = v17;
    v199.size.width = v19;
    v199.size.height = v21;
    v34 = CGRectGetHeight(v199);
    objc_msgSend(a1, sel_bounds);
    v35 = CGRectGetHeight(v200);
  }
  v36 = v34 / v35;
  v37 = (*(_QWORD *)&v36 >> 52) & 0x7FFLL;
  if (v37 | *(_QWORD *)&v36 & 0xFFFFFFFFFFFFFLL)
    v38 = v37 == 2047;
  else
    v38 = 1;
  if (v38)
    v36 = 1.0;
  recta.origin.x = v36;
  v39 = objc_msgSend(objc_allocWithZone((Class)_UIPortalView), sel_initWithSourceView_, a1);
  v40 = (void *)sub_1865074D4();
  objc_msgSend(v39, sel_setName_, v40);

  v41 = v39;
  objc_msgSend(a1, sel_bounds);
  v43 = v42;
  v45 = v44;
  CGAffineTransformMakeScale((CGAffineTransform *)&v191, recta.origin.x, recta.origin.x);
  v203.origin.x = 0.0;
  v203.origin.y = 0.0;
  v203.size.width = v43;
  v203.size.height = v45;
  v204 = CGRectApplyAffineTransform(v203, (CGAffineTransform *)&v191);
  objc_msgSend(v41, sel_setBounds_, v204.origin.x, v204.origin.y, v204.size.width, v204.size.height);

  v46 = objc_msgSend(v41, sel_layer);
  CATransform3DMakeScale(&v191, recta.origin.x, recta.origin.x, 1.0);
  objc_msgSend(v46, sel_setSublayerTransform_, &v191);

  objc_msgSend(v41, sel_setHidesSourceView_, 1);
  objc_msgSend(v41, sel_setAllowsHitTesting_, 1);
  objc_msgSend(v41, sel_setForwardsClientHitTestingToSourceView_, 1);
  v47 = objc_msgSend(v41, sel_portalLayer);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD81EA8);
  v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_186669200;
  strcpy((char *)(v48 + 32), "cornerRadius");
  *(_BYTE *)(v48 + 45) = 0;
  *(_WORD *)(v48 + 46) = -5120;
  v49 = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v48 + 48) = 0;
  *(_QWORD *)(v48 + 72) = v49;
  strcpy((char *)(v48 + 80), "shadowOpacity");
  *(_WORD *)(v48 + 94) = -4864;
  *(_QWORD *)(v48 + 96) = 0;
  *(_QWORD *)(v48 + 120) = v49;
  *(_QWORD *)(v48 + 128) = 0x6957726564726F62;
  *(_QWORD *)(v48 + 136) = 0xEB00000000687464;
  *(_QWORD *)(v48 + 144) = 0;
  *(_QWORD *)(v48 + 168) = v49;
  strcpy((char *)(v48 + 176), "masksToBounds");
  *(_WORD *)(v48 + 190) = -4864;
  v50 = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(v48 + 192) = 0;
  *(_QWORD *)(v48 + 216) = v50;
  *(_QWORD *)(v48 + 224) = 0x756F72676B636162;
  *(_QWORD *)(v48 + 232) = 0xEF726F6C6F43646ELL;
  v51 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  v52 = objc_msgSend(v51, sel_CGColor);

  type metadata accessor for CGColor(0);
  *(_QWORD *)(v48 + 264) = v53;
  *(_QWORD *)(v48 + 240) = v52;
  sub_1856A1408(v48);
  v54 = (void *)sub_18650739C();
  swift_bridgeObjectRelease();
  objc_msgSend(v47, sel_setOverrides_, v54);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82F00);
  v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_186669210;
  *(_QWORD *)(v55 + 40) = 0;
  *(_QWORD *)(v55 + 48) = 0;
  *(_QWORD *)(v55 + 32) = 0;
  v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_186669210;
  *(_QWORD *)(v56 + 32) = 0;
  *(_QWORD *)(v56 + 40) = 0;
  *(_QWORD *)(v56 + 48) = 0;
  v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_186669210;
  *(_QWORD *)(v57 + 32) = 0;
  *(_QWORD *)(v57 + 40) = 0;
  *(_QWORD *)(v57 + 48) = 0;
  v58 = (SEL *)objc_msgSend(a1, sel_layer);
  -[SEL transform](v58, sel_transform);
  v180 = *(_OWORD *)&v191.m11;
  v178 = *(_OWORD *)&v191.m13;
  v176 = *(_OWORD *)&v191.m21;
  v174 = *(_OWORD *)&v191.m23;
  v171 = *(_OWORD *)&v191.m31;
  v169 = *(_OWORD *)&v191.m33;
  v168 = *(_OWORD *)&v191.m41;
  v59 = *(_OWORD *)&v191.m43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  *(_OWORD *)&v191.m11 = v180;
  *(_OWORD *)&v191.m13 = v178;
  *(_OWORD *)&v191.m21 = v176;
  *(_OWORD *)&v191.m23 = v174;
  *(_OWORD *)&v191.m31 = v171;
  *(_OWORD *)&v191.m33 = v169;
  *(_OWORD *)&v191.m41 = v168;
  *(_OWORD *)&v191.m43 = v59;
  CATransform3DGetDecomposition_();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v60 = *(_QWORD *)(v56 + 16);
  if (!v60)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v60 == 1)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v60 < 3)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  CATransform3DMakeScale(&v191, *(double *)(v56 + 32) / recta.origin.x, *(double *)(v56 + 40) / recta.origin.x, *(double *)(v56 + 48) / recta.origin.x);
  if (*(_QWORD *)(v55 + 16) < 3uLL)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  *(CGFloat *)&v180 = v191.m11;
  *(CGFloat *)&v178 = v191.m12;
  *(CGFloat *)&v176 = v191.m13;
  *(CGFloat *)&v174 = v191.m14;
  m21 = v191.m21;
  m22 = v191.m22;
  v61 = *(_OWORD *)&v191.m23;
  m32 = v191.m32;
  m31 = v191.m31;
  m34 = v191.m34;
  m33 = v191.m33;
  m42 = v191.m42;
  m41 = v191.m41;
  m44 = v191.m44;
  m43 = v191.m43;
  CATransform3DMakeRotation(&v191, *(CGFloat *)(v55 + 48), 0.0, 0.0, 1.0);
  m11 = v191.m11;
  m12 = v191.m12;
  m13 = v191.m13;
  m14 = v191.m14;
  v149 = v191.m22;
  v150 = v191.m21;
  v62 = *(_OWORD *)&v191.m23;
  v63 = *(_OWORD *)&v191.m31;
  v64 = *(_OWORD *)&v191.m33;
  v141 = v191.m41;
  v138 = v191.m43;
  v139 = v191.m42;
  v137 = v191.m44;
  CATransform3DMakeRotation(&v191, *(CGFloat *)(v55 + 32), 1.0, 0.0, 0.0);
  v65 = v191.m11;
  v66 = v191.m12;
  v67 = v191.m13;
  v68 = v191.m14;
  v69 = v191.m21;
  v70 = v191.m22;
  v71 = *(_OWORD *)&v191.m23;
  v135 = v191.m32;
  v136 = v191.m31;
  v133 = v191.m34;
  v134 = v191.m33;
  v131 = v191.m42;
  v132 = v191.m41;
  v129 = v191.m44;
  v130 = v191.m43;
  CATransform3DMakeRotation(&v191, *(CGFloat *)(v55 + 40), 0.0, 1.0, 0.0);
  v72 = *(_QWORD *)(v57 + 16);
  if (!v72)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v72 == 1)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v72 >= 3)
  {
    v125 = v191.m12;
    v126 = v191.m11;
    v123 = v191.m14;
    v124 = v191.m13;
    v121 = v191.m22;
    v122 = v191.m21;
    m24 = v191.m24;
    m23 = v191.m23;
    v117 = v191.m32;
    v118 = v191.m31;
    v115 = v191.m34;
    v116 = v191.m33;
    v113 = v191.m42;
    v114 = v191.m41;
    v111 = v191.m44;
    v112 = v191.m43;
    CATransform3DMakeTranslation(&v191, *(CGFloat *)(v57 + 32), *(CGFloat *)(v57 + 40), *(CGFloat *)(v57 + 48));
    v127 = *(_OWORD *)&v191.m13;
    v128 = *(_OWORD *)&v191.m11;
    v191.m11 = m11;
    v191.m12 = m12;
    v191.m13 = m13;
    v191.m14 = m14;
    v157 = *(_OWORD *)&v191.m21;
    v159 = *(_OWORD *)&v191.m23;
    v191.m21 = v150;
    v191.m22 = v149;
    *(_OWORD *)&v191.m23 = v62;
    v153 = *(_OWORD *)&v191.m31;
    v155 = *(_OWORD *)&v191.m33;
    *(_OWORD *)&v191.m31 = v63;
    *(_OWORD *)&v191.m33 = v64;
    v151 = *(_OWORD *)&v191.m41;
    v191.m41 = v141;
    v191.m42 = v139;
    v148 = *(_OWORD *)&v191.m43;
    v191.m43 = v138;
    v191.m44 = v137;
    b.m11 = v65;
    b.m12 = v66;
    b.m13 = v67;
    b.m14 = v68;
    b.m21 = v69;
    b.m22 = v70;
    *(_OWORD *)&b.m23 = v71;
    b.m31 = v136;
    b.m32 = v135;
    b.m33 = v134;
    b.m34 = v133;
    b.m41 = v132;
    b.m42 = v131;
    b.m43 = v130;
    b.m44 = v129;
    CATransform3DConcat((CATransform3D *)&recta.size, &v191, &b);
    *(CGSize *)&v191.m11 = recta.size;
    *(_OWORD *)&v191.m13 = v183;
    *(_OWORD *)&v191.m21 = v184;
    *(_OWORD *)&v191.m23 = v185;
    *(_OWORD *)&v191.m31 = v186;
    *(_OWORD *)&v191.m33 = v187;
    *(_OWORD *)&v191.m41 = v188;
    *(_OWORD *)&v191.m43 = v189;
    b.m11 = v126;
    b.m12 = v125;
    b.m13 = v124;
    b.m14 = v123;
    b.m21 = v122;
    b.m22 = v121;
    b.m23 = m23;
    b.m24 = m24;
    b.m31 = v118;
    b.m32 = v117;
    b.m33 = v116;
    b.m34 = v115;
    b.m41 = v114;
    b.m42 = v113;
    b.m43 = v112;
    b.m44 = v111;
    CATransform3DConcat((CATransform3D *)&recta.size, &v191, &b);
    size = recta.size;
    v146 = v183;
    v145 = v184;
    v144 = v185;
    v143 = v186;
    v142 = v187;
    v140 = v188;
    v73 = v189;
    v74 = objc_msgSend(v41, sel_layer);
    *(CGSize *)&v191.m11 = size;
    *(_OWORD *)&v191.m13 = v146;
    *(_OWORD *)&v191.m21 = v145;
    *(_OWORD *)&v191.m23 = v144;
    *(_OWORD *)&v191.m31 = v143;
    *(_OWORD *)&v191.m33 = v142;
    *(_OWORD *)&v191.m41 = v140;
    *(_OWORD *)&v191.m43 = v73;
    *(_QWORD *)&b.m11 = v180;
    *(_QWORD *)&b.m12 = v178;
    *(_QWORD *)&b.m13 = v176;
    *(_QWORD *)&b.m14 = v174;
    b.m21 = m21;
    b.m22 = m22;
    *(_OWORD *)&b.m23 = v61;
    b.m31 = m31;
    b.m32 = m32;
    b.m33 = m33;
    b.m34 = m34;
    b.m41 = m41;
    b.m42 = m42;
    b.m43 = m43;
    b.m44 = m44;
    CATransform3DConcat((CATransform3D *)&recta.size, &v191, &b);
    *(CGSize *)&v191.m11 = recta.size;
    *(_OWORD *)&v191.m13 = v183;
    *(_OWORD *)&v191.m21 = v184;
    *(_OWORD *)&v191.m23 = v185;
    *(_OWORD *)&v191.m31 = v186;
    *(_OWORD *)&v191.m33 = v187;
    *(_OWORD *)&v191.m41 = v188;
    *(_OWORD *)&v191.m43 = v189;
    *(_OWORD *)&b.m11 = v128;
    *(_OWORD *)&b.m13 = v127;
    *(_OWORD *)&b.m21 = v157;
    *(_OWORD *)&b.m23 = v159;
    *(_OWORD *)&b.m31 = v153;
    *(_OWORD *)&b.m33 = v155;
    *(_OWORD *)&b.m41 = v151;
    *(_OWORD *)&b.m43 = v148;
    CATransform3DConcat((CATransform3D *)&recta.size, &v191, &b);
    *(CGSize *)&v191.m11 = recta.size;
    *(_OWORD *)&v191.m13 = v183;
    *(_OWORD *)&v191.m21 = v184;
    *(_OWORD *)&v191.m23 = v185;
    *(_OWORD *)&v191.m31 = v186;
    *(_OWORD *)&v191.m33 = v187;
    *(_OWORD *)&v191.m41 = v188;
    *(_OWORD *)&v191.m43 = v189;
    objc_msgSend(v74, sel_setTransform_, &v191);

    v75 = v41;
    objc_msgSend(a1, sel_center);
    objc_msgSend(v75, sel_setCenter_);

    v41 = v75;
    v76 = objc_msgSend(a1, sel_backgroundColor);
    objc_msgSend(v41, sel_setBackgroundColor_, v76);

    v77 = objc_msgSend(v41, sel_layer);
    v78 = objc_msgSend(a1, sel_layer);
    v79 = objc_msgSend(v78, sel_cornerCurve);

    objc_msgSend(v77, sel_setCornerCurve_, v79);
    v80 = objc_msgSend(a1, sel_layer);
    v58 = (SEL *)&selRef_controlKeyFontWeight;
    objc_msgSend(v80, sel_cornerRadii);
    v180 = *(_OWORD *)&v191.m11;
    v178 = *(_OWORD *)&v191.m13;
    v176 = *(_OWORD *)&v191.m21;
    v174 = *(_OWORD *)&v191.m23;

    if (qword_1EDD81E70 == -1)
      goto LABEL_18;
    goto LABEL_29;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  swift_once();
LABEL_18:
  *(_OWORD *)&v191.m11 = v180;
  *(_OWORD *)&v191.m13 = v178;
  *(_OWORD *)&v191.m21 = v176;
  *(_OWORD *)&v191.m23 = v174;
  *(_OWORD *)&b.m11 = xmmword_1EDDA8590;
  *(_OWORD *)&b.m13 = *(_OWORD *)&qword_1EDDA85A0;
  *(_OWORD *)&b.m21 = xmmword_1EDDA85B0;
  *(_OWORD *)&b.m23 = *(_OWORD *)&qword_1EDDA85C0;
  v81 = CACornerRadiiEqualToRadii();
  v82 = objc_msgSend(v41, sel_layer);
  v83 = objc_msgSend(a1, sel_layer);
  v84 = v83;
  if (v81)
  {
    objc_msgSend(v83, sel_cornerRadius);
    v86 = v85;

    objc_msgSend(v82, sel_setCornerRadius_, recta.origin.x * v86);
    v82 = objc_msgSend(v41, sel_layer);
    v87 = objc_msgSend(a1, sel_layer);
    v88 = objc_msgSend(v87, sel_maskedCorners);

    objc_msgSend(v82, sel_setMaskedCorners_, v88, *(_QWORD *)&v111, *(_QWORD *)&v112, *(_QWORD *)&v113, *(_QWORD *)&v114, *(_QWORD *)&v115, *(_QWORD *)&v116, *(_QWORD *)&v117, *(_QWORD *)&v118, *(_QWORD *)&m24, *(_QWORD *)&m23, *(_QWORD *)&v121, *(_QWORD *)&v122, *(_QWORD *)&v123, *(_QWORD *)&v124, *(_QWORD *)&v125, *(_QWORD *)&v126);
  }
  else
  {
    objc_msgSend(v83, v58[157]);
    v179 = vmulq_n_f64(*(float64x2_t *)&v191.m11, recta.origin.x);
    v181 = vmulq_n_f64(*(float64x2_t *)&v191.m13, recta.origin.x);
    v175 = vmulq_n_f64(*(float64x2_t *)&v191.m21, recta.origin.x);
    v177 = vmulq_n_f64(*(float64x2_t *)&v191.m23, recta.origin.x);

    *(float64x2_t *)&v191.m11 = v179;
    *(float64x2_t *)&v191.m13 = v181;
    *(float64x2_t *)&v191.m21 = v175;
    *(float64x2_t *)&v191.m23 = v177;
    objc_msgSend(v82, sel_setCornerRadii_, &v191, *(_QWORD *)&v111, *(_QWORD *)&v112, *(_QWORD *)&v113, *(_QWORD *)&v114, *(_QWORD *)&v115, *(_QWORD *)&v116, *(_QWORD *)&v117, *(_QWORD *)&v118, *(_QWORD *)&m24, *(_QWORD *)&m23, *(_QWORD *)&v121, *(_QWORD *)&v122, *(_QWORD *)&v123, *(_QWORD *)&v124, *(_QWORD *)&v125, *(_QWORD *)&v126);
  }

  v89 = objc_msgSend(v41, sel_layer);
  v90 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v90, sel_shadowOffset);
  v92 = v91;
  v94 = v93;

  objc_msgSend(v89, sel_setShadowOffset_, recta.origin.x * v92, recta.origin.x * v94);
  v95 = objc_msgSend(v41, sel_layer);
  v96 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v96, sel_shadowRadius);
  v98 = v97;

  objc_msgSend(v95, sel_setShadowRadius_, recta.origin.x * v98);
  v99 = objc_msgSend(v41, sel_layer);
  v100 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v100, sel_shadowOpacity);
  LODWORD(v98) = v101;

  LODWORD(v102) = LODWORD(v98);
  objc_msgSend(v99, sel_setShadowOpacity_, v102);

  v103 = objc_msgSend(v41, sel_layer);
  v104 = objc_msgSend(a1, sel_layer);
  v105 = objc_msgSend(v104, sel_shadowColor);

  objc_msgSend(v103, sel_setShadowColor_, v105);
  v106 = objc_msgSend(v41, sel_layer);
  v107 = objc_msgSend(a1, sel_layer);
  v108 = objc_msgSend(v107, sel_shadowPathIsBounds);

  objc_msgSend(v106, sel_setShadowPathIsBounds_, v108);
  v109 = v41;
  objc_msgSend(a1, sel_alpha);
  objc_msgSend(v109, sel_setAlpha_);

  sub_1855A2EE8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v109;
}

void sub_1855A52E4()
{
  void *v0;
  unsigned int v1;
  void *ObjCClassFromMetadata;
  id v3;
  void *v4;
  uint64_t *v5;
  id v6;
  char *v7;
  id v8;
  objc_super v9;
  objc_super v10;

  v1 = objc_msgSend(v0, sel_isZoomingIn);
  type metadata accessor for _UIZoomTransitionSettingsDomain();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  if (v1)
  {
    v9.receiver = ObjCClassFromMetadata;
    v9.super_class = (Class)&OBJC_METACLASS____TtC5UIKit31_UIZoomTransitionSettingsDomain;
    v3 = objc_msgSendSuper2(&v9, sel_rootSettings);
    if (v3)
    {
      v4 = v3;
      v5 = &OBJC_IVAR____TtC5UIKit21_UIZoomTransitionSpec_zoomIn;
LABEL_6:
      type metadata accessor for _UIZoomTransitionSpec();
      v7 = (char *)*(id *)(swift_dynamicCastClassUnconditional() + *v5);

      v8 = *(id *)&v7[OBJC_IVAR____TtC5UIKit30_UIZoomTransitionAnimationSpec_general];
      objc_msgSend(v8, sel_response);

      return;
    }
    __break(1u);
  }
  else
  {
    v10.receiver = ObjCClassFromMetadata;
    v10.super_class = (Class)&OBJC_METACLASS____TtC5UIKit31_UIZoomTransitionSettingsDomain;
    v6 = objc_msgSendSuper2(&v10, sel_rootSettings);
    if (v6)
    {
      v4 = v6;
      v5 = &OBJC_IVAR____TtC5UIKit21_UIZoomTransitionSpec_zoomOut;
      goto LABEL_6;
    }
  }
  __break(1u);
}

void sub_1855A5408()
{
  char *v0;
  char *v1;
  char *v2;
  objc_class *v3;
  id v4;
  void *v5;
  char *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  uint64_t ObjCClassFromMetadata;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  char *v26;
  void *v27;
  void *v28;
  char *v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  char *v44;
  id v45;
  void *v46;
  char *v47;
  id v48;
  uint64_t v49;
  void *v50;
  char *v51;
  void *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  objc_super v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 aBlock;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  objc_super v66;

  v1 = v0;
  v2 = *(char **)&v0[OBJC_IVAR____UIZoomTransitionController_morphAnimation];
  v3 = (objc_class *)type metadata accessor for _UIMagicMorphAnimation.InteractionAssertion();
  v4 = objc_allocWithZone(v3);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  v5 = *(void **)&v2[OBJC_IVAR____UIMagicMorphAnimation_groupCompletion];
  v6 = v2;
  objc_msgSend(v5, sel_increment);
  v7 = sub_18564C748();
  objc_msgSend(v7, sel_setPaused_, 1);

  v66.receiver = v4;
  v66.super_class = v3;
  v8 = objc_msgSendSuper2(&v66, sel_init);

  v9 = *(void **)&v1[OBJC_IVAR____UIZoomTransitionController_morphInteractionAssertion];
  *(_QWORD *)&v1[OBJC_IVAR____UIZoomTransitionController_morphInteractionAssertion] = v8;

  v10 = objc_msgSend(v1, sel_owningViewController);
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v1, sel_clientTransition);
    v13 = objc_msgSend(v12, sel__options);

    LOBYTE(v12) = objc_msgSend(v13, sel__popPreemptsPushInSwiftUIEnabled);
    if ((v12 & 1) == 0)
    {
      swift_getObjectType();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v16 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      v17 = objc_msgSend(v16, sel_bundlePath);

      v18 = sub_1865074F8();
      v20 = v19;

      *(_QWORD *)&aBlock = v18;
      *((_QWORD *)&aBlock + 1) = v20;
      *(_QWORD *)&v58 = 0x49557466697753;
      *((_QWORD *)&v58 + 1) = 0xE700000000000000;
      sub_1855A6758();
      v14 = sub_186507B10();
      swift_bridgeObjectRelease();

      goto LABEL_6;
    }

  }
  v14 = 0;
LABEL_6:
  v21 = OBJC_IVAR____UIZoomTransitionController_activeTransitionContext;
  if (*(_QWORD *)&v1[OBJC_IVAR____UIZoomTransitionController_activeTransitionContext]
    && v14 & 1 | ((objc_msgSend(v1, sel_isZoomingIn) & 1) == 0))
  {
    v22 = *(void **)&v1[v21];
    if (v22)
      objc_msgSend(v22, sel_pauseInteractiveTransition);
    v23 = *(void **)&v1[OBJC_IVAR____UIZoomTransitionController_shimPropertyAnimator];
    if (v23)
    {
      v24 = v23;
      sub_185777778();

      v25 = *(void **)&v6[OBJC_IVAR____UIMagicMorphAnimation_morphView];
      swift_beginAccess();
      v26 = v25;
      v27 = (void *)sub_1856BE4E0(0xD00000000000001ELL, 0x8000000186686770);
      swift_endAccess();

      v28 = *(void **)&v1[OBJC_IVAR____UIZoomTransitionController_foregroundView];
      if (!v28
        || (v29 = &v26[OBJC_IVAR____UIMagicMorphView_overrideCornerRadii],
            (v26[OBJC_IVAR____UIMagicMorphView_overrideCornerRadii + 64] & 1) != 0))
      {

        return;
      }
      v55 = *((_OWORD *)v29 + 2);
      v56 = *((_OWORD *)v29 + 3);
      v53 = *(_OWORD *)v29;
      v54 = *((_OWORD *)v29 + 1);
      v34 = qword_1EDD81E70;
      v35 = v28;
      if (v34 != -1)
        swift_once();
      aBlock = v53;
      v63 = v54;
      v64 = v55;
      v65 = v56;
      v58 = xmmword_1EDDA8590;
      v59 = *(_OWORD *)&qword_1EDDA85A0;
      v60 = xmmword_1EDDA85B0;
      v61 = *(_OWORD *)&qword_1EDDA85C0;
      if (!CACornerRadiiEqualToRadii())
      {

        return;
      }
      objc_msgSend(v35, sel__intersectedSceneCornerRadii);
      v36 = aBlock;
      v37 = v63;
      v38 = v64;
      v39 = v65;
      v40 = (void *)objc_opt_self();
      v41 = swift_allocObject();
      *(_QWORD *)(v41 + 16) = v26;
      *(_OWORD *)(v41 + 24) = v36;
      *(_OWORD *)(v41 + 40) = v37;
      *(_OWORD *)(v41 + 56) = v38;
      *(_OWORD *)(v41 + 72) = v39;
      *(_QWORD *)&v64 = sub_1855A6740;
      *((_QWORD *)&v64 + 1) = v41;
      v42 = MEMORY[0x1E0C809B0];
      *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v63 = sub_18530A69C;
      *((_QWORD *)&v63 + 1) = &block_descriptor_78;
      v43 = _Block_copy(&aBlock);
      v44 = v26;
      swift_release();
      objc_msgSend(v40, sel__performWithoutRetargetingAnimations_, v43);
      _Block_release(v43);
      type metadata accessor for _UIZoomTransitionSettingsDomain();
      v57.receiver = (id)swift_getObjCClassFromMetadata();
      v57.super_class = (Class)&OBJC_METACLASS____TtC5UIKit31_UIZoomTransitionSettingsDomain;
      v45 = objc_msgSendSuper2(&v57, sel_rootSettings);
      if (v45)
      {
        v46 = v45;
        type metadata accessor for _UIZoomTransitionSpec();
        v47 = (char *)objc_retain(*(id *)(swift_dynamicCastClassUnconditional()
                                        + OBJC_IVAR____TtC5UIKit21_UIZoomTransitionSpec_zoomOut));

        v48 = *(id *)&v47[OBJC_IVAR____TtC5UIKit30_UIZoomTransitionAnimationSpec_cornerRadiusAdjustment];
        v49 = swift_allocObject();
        *(_QWORD *)(v49 + 16) = v44;
        *(_OWORD *)(v49 + 24) = v36;
        *(_OWORD *)(v49 + 40) = v37;
        *(_OWORD *)(v49 + 56) = v38;
        *(_OWORD *)(v49 + 72) = v39;
        *(_QWORD *)&v64 = sub_1855A674C;
        *((_QWORD *)&v64 + 1) = v49;
        *(_QWORD *)&aBlock = v42;
        *((_QWORD *)&aBlock + 1) = 1107296256;
        *(_QWORD *)&v63 = sub_18530A69C;
        *((_QWORD *)&v63 + 1) = &block_descriptor_84;
        v50 = _Block_copy(&aBlock);
        v51 = v44;
        swift_release();
        *(_QWORD *)&v64 = j__signpost_c2_removePresentationModifier_end;
        *((_QWORD *)&v64 + 1) = 0;
        *(_QWORD *)&aBlock = v42;
        *((_QWORD *)&aBlock + 1) = 1107296256;
        *(_QWORD *)&v63 = sub_1856DA9E8;
        *((_QWORD *)&v63 + 1) = &block_descriptor_87;
        v52 = _Block_copy(&aBlock);
        objc_msgSend(v40, sel__animateUsingSpringBehavior_tracking_animations_completion_, v48, 0, v50, v52);

        _Block_release(v52);
        _Block_release(v50);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    v30 = objc_msgSend(v1, sel_owningViewController);
    if (v30)
    {
      v31 = v30;
      v32 = OBJC_IVAR____UIZoomTransitionController_isPreempting;
      v1[OBJC_IVAR____UIZoomTransitionController_isPreempting] = 1;
      if (objc_msgSend(v1, sel_isForNavigation))
      {
        v33 = objc_msgSend(v31, sel_navigationController);

      }
      else
      {
        objc_msgSend(v31, sel_dismissViewControllerAnimated_completion_, 1, 0);
        v33 = objc_msgSend(v31, sel_activePresentationController);
        objc_msgSend(v33, sel__sendDismissalsAsNeeded);
      }

      v1[v32] = 0;
    }
  }
}

void sub_1855A5AE0(void *a1)
{
  char *v1;
  void *v2;
  char *v3;
  void *v4;
  id v6;
  unsigned int v7;
  double v8;
  double v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t (*v32)();
  uint64_t v33;

  v2 = *(void **)&v1[OBJC_IVAR____UIZoomTransitionController_activeTransitionContext];
  if (v2)
  {
    v3 = v1;
    v4 = *(void **)&v1[OBJC_IVAR____UIZoomTransitionController_foregroundView];
    if (v4)
    {
      swift_unknownObjectRetain();
      v6 = v4;
      v7 = objc_msgSend(v3, sel_isZoomingIn);
      objc_msgSend(a1, sel_progressToMinScale);
      if (v7)
        v9 = 1.0 - v8;
      else
        v9 = v8;
      objc_msgSend(v2, sel_updateInteractiveTransition_, v9);
      v10 = *(char **)&v3[OBJC_IVAR____UIZoomTransitionController_shimPropertyAnimator];
      if (v10)
      {
        *(double *)&v10[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__fractionComplete] = v9;
        if (*(_QWORD *)&v10[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__state] == 1
          && (v10[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isRunning] & 1) == 0)
        {
          v11 = swift_allocObject();
          *(_QWORD *)(v11 + 16) = v10;
          v12 = v10;
          sub_1857788E0((uint64_t)sub_1855A66C0, v11, 0, 0, 1.0);

          swift_release();
        }
        v13 = *(void **)(*(_QWORD *)&v3[OBJC_IVAR____UIZoomTransitionController_morphAnimation]
                       + OBJC_IVAR____UIMagicMorphAnimation_morphView);
        v14 = objc_allocWithZone((Class)UIViewSpringAnimationBehaviorSettings);
        v15 = v13;
        v16 = objc_msgSend(v14, sel_init);
        objc_msgSend(a1, sel_dampingRatio);
        objc_msgSend(v16, sel_setDampingRatio_);
        objc_msgSend(a1, sel_response);
        objc_msgSend(v16, sel_setResponse_);
        objc_msgSend(a1, sel_dampingRatio);
        objc_msgSend(v16, sel_setTrackingDampingRatio_);
        objc_msgSend(a1, sel_response);
        objc_msgSend(v16, sel_setTrackingResponse_);
        objc_msgSend(v16, sel_setSmoothingAndProjectionEnabled_, 0);
        v17 = (void *)objc_opt_self();
        v18 = v16;
        v19 = objc_msgSend(a1, sel_isTracking);
        v20 = v3[OBJC_IVAR____UIZoomTransitionController_style];
        v21 = swift_allocObject();
        *(_QWORD *)(v21 + 16) = a1;
        *(_BYTE *)(v21 + 24) = v20;
        *(_QWORD *)(v21 + 32) = v6;
        *(_QWORD *)(v21 + 40) = v2;
        *(_QWORD *)(v21 + 48) = v15;
        *(double *)(v21 + 56) = v9;
        v32 = sub_1855A66B4;
        v33 = v21;
        v22 = MEMORY[0x1E0C809B0];
        v28 = MEMORY[0x1E0C809B0];
        v29 = 1107296256;
        v30 = sub_18530A69C;
        v31 = &block_descriptor_56;
        v23 = _Block_copy(&v28);
        swift_unknownObjectRetain();
        v24 = v6;
        v25 = v15;
        v26 = a1;
        swift_release();
        v32 = (uint64_t (*)())j__signpost_c2_removePresentationModifier_end;
        v33 = 0;
        v28 = v22;
        v29 = 1107296256;
        v30 = sub_1856DA9E8;
        v31 = &block_descriptor_59;
        v27 = _Block_copy(&v28);
        objc_msgSend(v17, sel__animateUsingSpringBehavior_tracking_animations_completion_, v18, v19, v23, v27);
        _Block_release(v27);
        _Block_release(v23);
        swift_unknownObjectRelease();

      }
      else
      {
        __break(1u);
      }
    }
  }
}

void sub_1855A5E54()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  char *v5;
  uint64_t v6;
  id v7;
  __CFString *v8;
  __CFString *v9;
  __CFString *v10;
  __CFString *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char *v26;
  void *v27;
  char v28;
  id v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  __CFString *v34;
  __CFString *v35;
  void *v36;
  objc_super v37;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____UIZoomTransitionController_activeTransitionContext];
  if (!v2)
  {
    v30 = *(void **)&v0[OBJC_IVAR____UIZoomTransitionController_morphInteractionAssertion];
    *(_QWORD *)&v0[OBJC_IVAR____UIZoomTransitionController_morphInteractionAssertion] = 0;

    return;
  }
  type metadata accessor for _UIZoomTransitionSettingsDomain();
  v37.receiver = (id)swift_getObjCClassFromMetadata();
  v37.super_class = (Class)&OBJC_METACLASS____TtC5UIKit31_UIZoomTransitionSettingsDomain;
  swift_unknownObjectRetain();
  v3 = objc_msgSendSuper2(&v37, sel_rootSettings);
  if (!v3)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v4 = v3;
  type metadata accessor for _UIZoomTransitionSpec();
  v5 = (char *)objc_retain(*(id *)(swift_dynamicCastClassUnconditional()
                                 + OBJC_IVAR____TtC5UIKit21_UIZoomTransitionSpec_zoomOutInteractive));

  v6 = OBJC_IVAR____TtC5UIKit30_UIZoomTransitionAnimationSpec_general;
  v7 = *(id *)&v5[OBJC_IVAR____TtC5UIKit30_UIZoomTransitionAnimationSpec_general];
  if (objc_msgSend(v1, sel_isZoomingIn))
    v8 = CFSTR("UITransitionContextFromViewController");
  else
    v8 = CFSTR("UITransitionContextToViewController");
  v9 = v8;
  if (objc_msgSend(v1, sel_isZoomingIn))
    v10 = CFSTR("UITransitionContextToViewController");
  else
    v10 = CFSTR("UITransitionContextFromViewController");
  v11 = v10;
  v12 = objc_msgSend(v2, sel_viewControllerForKey_, v9);
  if (!v12)
    goto LABEL_17;
  v13 = v12;
  v14 = objc_msgSend(v2, sel_viewControllerForKey_, v11);
  if (!v14)
  {
LABEL_18:
    __break(1u);
    return;
  }
  v34 = v11;
  v35 = v9;
  v36 = v7;
  v32 = v14;
  v33 = v13;
  v15 = objc_msgSend((id)objc_opt_self(), sel__contextWithSource_zoomed_, v13, v14);
  v16 = objc_msgSend(v2, sel_containerView);
  v31 = v15;
  sub_18559EF70(v15, v16, 0);
  v18 = v17;

  v19 = *(void **)&v1[OBJC_IVAR____UIZoomTransitionController_pendingDismissDestinationView];
  if (v19)
  {
    if (v18 != v19)
    {
      v20 = v19;
      sub_1855A2EE8();

    }
  }
  v21 = *(void **)&v5[v6];
  v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v23;
  *(_QWORD *)(v24 + 24) = v2;
  swift_unknownObjectRetain();
  v25 = v21;
  swift_retain();
  swift_retain();
  sub_18564AF0C(v21, 0, (uint64_t)sub_1855A66A4, v22, (uint64_t)sub_1855A6A20, v24);

  swift_release_n();
  swift_release();
  swift_release();
  v26 = v5;
  sub_1855A0280(v18, (uint64_t)v5, 0, 0);

  v27 = *(void **)&v1[OBJC_IVAR____UIZoomTransitionController_morphInteractionAssertion];
  *(_QWORD *)&v1[OBJC_IVAR____UIZoomTransitionController_morphInteractionAssertion] = 0;

  v28 = objc_msgSend(v1, sel_isZoomingIn) ^ 1;
  v29 = v36;
  sub_1855A3DE8(v28, (uint64_t)v29, (uint64_t)v1);
  swift_unknownObjectRelease();

}

void sub_1855A6230(double a1, double a2)
{
  char *v2;
  uint64_t v3;
  void *v6;
  id v7;
  id v8;
  void *v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  objc_super v30;

  v3 = *(_QWORD *)&v2[OBJC_IVAR____UIZoomTransitionController_activeTransitionContext];
  if (v3)
  {
    v6 = *(void **)(*(_QWORD *)&v2[OBJC_IVAR____UIZoomTransitionController_morphAnimation]
                  + OBJC_IVAR____UIMagicMorphAnimation_morphView);
    type metadata accessor for _UIZoomTransitionSettingsDomain();
    v30.receiver = (id)swift_getObjCClassFromMetadata();
    v30.super_class = (Class)&OBJC_METACLASS____TtC5UIKit31_UIZoomTransitionSettingsDomain;
    v7 = v6;
    swift_unknownObjectRetain();
    v8 = objc_msgSendSuper2(&v30, sel_rootSettings);
    if (v8)
    {
      v9 = v8;
      type metadata accessor for _UIZoomTransitionSpec();
      v10 = (char *)objc_retain(*(id *)(swift_dynamicCastClassUnconditional()
                                      + OBJC_IVAR____TtC5UIKit21_UIZoomTransitionSpec_cancelInteractive));

      v11 = *(id *)&v10[OBJC_IVAR____TtC5UIKit30_UIZoomTransitionAnimationSpec_position];
      v12 = (void *)objc_opt_self();
      v13 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = v7;
      *(double *)(v14 + 24) = a1;
      *(double *)(v14 + 32) = a2;
      *(_QWORD *)(v14 + 40) = v13;
      v28 = sub_1855A6558;
      v29 = v14;
      v15 = MEMORY[0x1E0C809B0];
      v24 = MEMORY[0x1E0C809B0];
      v25 = 1107296256;
      v26 = sub_18530A69C;
      v27 = &block_descriptor_0;
      v16 = _Block_copy(&v24);
      v17 = v7;
      v18 = v11;
      swift_release();
      v19 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = v19;
      *(_QWORD *)(v20 + 24) = v3;
      v28 = sub_1855A656C;
      v29 = v20;
      v24 = v15;
      v25 = 1107296256;
      v26 = sub_1856DA9E8;
      v27 = &block_descriptor_11;
      v21 = _Block_copy(&v24);
      swift_unknownObjectRetain();
      swift_release();
      objc_msgSend(v12, sel__animateUsingSpringBehavior_tracking_animations_completion_, v18, 0, v16, v21);
      _Block_release(v21);
      _Block_release(v16);

      LOBYTE(v12) = objc_msgSend(v2, sel_isZoomingIn);
      v22 = v18;
      sub_1855A3DE8((char)v12, (uint64_t)v22, (uint64_t)v2);
      swift_unknownObjectRelease();

    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v23 = *(void **)&v2[OBJC_IVAR____UIZoomTransitionController_morphInteractionAssertion];
    *(_QWORD *)&v2[OBJC_IVAR____UIZoomTransitionController_morphInteractionAssertion] = 0;

  }
}

uint64_t sub_1855A6530()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1855A6558()
{
  uint64_t v0;

  return sub_1855A34B8(*(void **)(v0 + 16), *(_QWORD *)(v0 + 40), *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_1855A656C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1855A36D4(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24));
}

uint64_t sub_1855A6574()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1855A6598()
{
  uint64_t v0;

  return sub_1855A3CC0(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1855A65A4()
{
  uint64_t v0;

  return sub_1857799F4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1855A65AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_185779AA0(a1, a2, *(_QWORD *)(v2 + 16));
}

id sub_1855A65B4()
{
  uint64_t v0;
  char **v1;

  if (*(_BYTE *)(v0 + 16))
    v1 = &selRef_finishInteractiveTransition;
  else
    v1 = &selRef_cancelInteractiveTransition;
  return objc_msgSend(*(id *)(v0 + 24), *v1);
}

uint64_t sub_1855A65DC()
{
  return swift_deallocObject();
}

uint64_t sub_1855A65EC()
{
  uint64_t v0;

  return sub_1855D8DD4(*(uint64_t (**)(void))(v0 + 16));
}

void UIMM_HFR(void *a1)
{
  id v1;
  CAFrameRateRange v2;

  v1 = a1;
  v2 = CAFrameRateRangeMake(80.0, 120.0, 120.0);
  +[UIView _modifyAnimationsWithPreferredFrameRateRange:updateReason:animations:](UIView, "_modifyAnimationsWithPreferredFrameRateRange:updateReason:animations:", 1048632, v1, *(double *)&v2.minimum, *(double *)&v2.maximum, *(double *)&v2.preferred);

}

uint64_t objectdestroy_3Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1855A6684()
{
  uint64_t v0;

  sub_1855A35F8(*(char **)(v0 + 16), *(_QWORD *)(v0 + 40), *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_1855A6694()
{
  return swift_deallocObject();
}

void sub_1855A66A4()
{
  uint64_t v0;

  sub_1855A33BC(v0);
}

uint64_t sub_1855A66B4()
{
  return sub_1855A6714((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, double))sub_1855A29D8);
}

uint64_t sub_1855A66C0(double a1)
{
  uint64_t v1;

  return sub_185778FF0(*(_QWORD *)(v1 + 16), a1);
}

uint64_t objectdestroy_52Tm()
{
  id *v0;

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1855A6708()
{
  return sub_1855A6714((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, double))sub_1855A2B38);
}

uint64_t sub_1855A6714(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, double))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(double *)(v1 + 56));
}

uint64_t sub_1855A6730()
{
  return swift_deallocObject();
}

void sub_1855A6740()
{
  uint64_t v0;

  sub_1855A25F8(*(char **)(v0 + 16), (uint64_t *)(v0 + 24));
}

uint64_t sub_1855A674C()
{
  uint64_t v0;

  return sub_1855A27BC(*(void **)(v0 + 16), (_OWORD *)(v0 + 24));
}

unint64_t sub_1855A6758()
{
  unint64_t result;

  result = qword_1EDD7D688;
  if (!qword_1EDD7D688)
  {
    result = MEMORY[0x186DC9F28](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EDD7D688);
  }
  return result;
}

uint64_t sub_1855A679C()
{
  return swift_deallocObject();
}

void CACornerRadiiMake(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  *a1 = a4;
  a1[1] = a4;
  a1[2] = a5;
  a1[3] = a5;
  a1[4] = a3;
  a1[5] = a3;
  a1[6] = a2;
  a1[7] = a2;
}

uint64_t sub_1855A67C0()
{
  id *v0;

  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1855A6814()
{
  uint64_t v0;

  sub_18559E8C4(*(char **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(id *)(v0 + 56), *(void **)(v0 + 64), *(void ***)(v0 + 72), *(_BYTE *)(v0 + 80));
}

uint64_t sub_1855A6848()
{
  return swift_deallocObject();
}

uint64_t sub_1855A6858()
{
  id *v0;

  return swift_deallocObject();
}

void sub_1855A688C()
{
  uint64_t v0;

  sub_18559FE54(*(_BYTE **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1855A6898()
{
  return swift_deallocObject();
}

void sub_1855A68A8()
{
  uint64_t v0;

  sub_1855A0BF0(v0);
}

uint64_t sub_1855A68B0()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

uint64_t sub_1855A68D4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1855A6900()
{
  uint64_t *v0;

  return sub_185779328(v0[2], v0[3], v0[4]);
}

uint64_t sub_1855A690C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1855A6930()
{
  sub_1855A1694();
}

uint64_t sub_1855A6950()
{
  return swift_deallocObject();
}

void sub_1855A6960()
{
  uint64_t v0;

  sub_1855A1240(v0);
}

uint64_t sub_1855A6968()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1855A698C()
{
  uint64_t v0;

  return sub_1855A155C(*(void **)(v0 + 16), (_OWORD *)(v0 + 24));
}

void sub_1855A6998()
{
  uint64_t v0;

  sub_1855A28F4(*(_QWORD *)(v0 + 16), (double *)(v0 + 24));
}

uint64_t sub_1855A69B4()
{
  return swift_deallocObject();
}

void sub_1855A69C4()
{
  uint64_t v0;

  sub_1855A1340(v0);
}

void sub_1855A69CC()
{
  uint64_t v0;

  sub_1855A0DC8(v0);
}

uint64_t objectdestroy_7Tm()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1855A6A04()
{
  uint64_t v0;

  sub_1855A3414(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t UIWindow._intelligenceBaseClass.getter()
{
  return sub_1855A6B04();
}

unint64_t sub_1855A6B04()
{
  unint64_t result;

  result = qword_1EDD81F30;
  if (!qword_1EDD81F30)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDD81F30);
  }
  return result;
}

uint64_t _UIIntelligenceLightSourceView.configuration.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____UIIntelligenceLightSourceView_configuration);
  result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t _UIIntelligenceLightSourceView.configuration.setter(char *a1)
{
  uint64_t v1;
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(v1 + OBJC_IVAR____UIIntelligenceLightSourceView_configuration);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t (*_UIIntelligenceLightSourceView.configuration.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_1855A6C24(char a1)
{
  uint64_t v1;
  id v3;
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  objc_super v23;

  *(_BYTE *)(v1 + OBJC_IVAR____UIIntelligenceLightSourceView_configuration) = a1;
  v23.super_class = (Class)_UIIntelligenceLightSourceView;
  v3 = objc_msgSendSuper2(&v23, sel_initWithFrame_);
  v4 = objc_allocWithZone((Class)_UIIntelligenceSystemLightView);
  v5 = v3;
  v6 = objc_msgSend(v4, sel_initWithFrame_preferringAudioReactivity_, a1 & 1, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v6, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v5, sel_addSubview_, v6);
  v7 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_186669240;
  v9 = objc_msgSend(v6, sel_widthAnchor);
  v10 = objc_msgSend(v5, sel_widthAnchor);
  v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  *(_QWORD *)(v8 + 32) = v11;
  v12 = objc_msgSend(v6, sel_heightAnchor);
  v13 = objc_msgSend(v5, sel_heightAnchor);
  v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  *(_QWORD *)(v8 + 40) = v14;
  v15 = objc_msgSend(v6, sel_centerXAnchor);
  v16 = objc_msgSend(v5, sel_centerXAnchor);
  v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(_QWORD *)(v8 + 48) = v17;
  v18 = objc_msgSend(v6, sel_centerYAnchor);
  v19 = objc_msgSend(v5, sel_centerYAnchor);
  v20 = objc_msgSend(v18, sel_constraintEqualToAnchor_, v19);

  *(_QWORD *)(v8 + 56) = v20;
  sub_18650766C();
  sub_1851F9080(0, &qword_1EDD85230);
  v21 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_activateConstraints_, v21);

  return v5;
}

UIKit::_UIIntelligenceLightSourceConfiguration __swiftcall _UIIntelligenceLightSourceConfiguration.init(prefersAudioReactivity:)(UIKit::_UIIntelligenceLightSourceConfiguration prefersAudioReactivity)
{
  UIKit::_UIIntelligenceLightSourceConfiguration *v1;

  v1->prefersAudioReactivity = prefersAudioReactivity.prefersAudioReactivity;
  return prefersAudioReactivity;
}

void __swiftcall _UIIntelligenceLightSourceView.init(frame:configuration:)(_UIIntelligenceLightSourceView_optional *__return_ptr retstr, __C::CGRect frame, UIKit::_UIIntelligenceLightSourceConfiguration_optional configuration)
{
  uint64_t v3;
  _BYTE *v4;

  v3 = *(_BYTE *)configuration.value.prefersAudioReactivity & 1;
  v4 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithFrame_preferAudioReactivity_, v3, frame.origin.x, frame.origin.y, frame.size.width, frame.size.height)+ OBJC_IVAR____UIIntelligenceLightSourceView_configuration;
  swift_beginAccess();
  *v4 = v3;
}

void __swiftcall _UIIntelligenceLightSourceView.init(coder:)(_UIIntelligenceLightSourceView_optional *__return_ptr retstr, NSCoder coder)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCoder_, coder.super.isa);

}

void _UIIntelligenceLightSourceView.init(coder:)()
{
  sub_186507E04();
  __break(1u);
}

void __swiftcall _UIIntelligenceLightSourceView.init(frame:)(_UIIntelligenceLightSourceView *__return_ptr retstr, __C::CGRect frame)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithFrame_, frame.origin.x, frame.origin.y, frame.size.width, frame.size.height);
}

void _UIIntelligenceLightSourceView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t _UIIntelligenceLightSourceConfiguration.prefersAudioReactivity.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t _UIIntelligenceLightSourceConfiguration.prefersAudioReactivity.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*_UIIntelligenceLightSourceConfiguration.prefersAudioReactivity.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t _UIIntelligenceLightSourceConfiguration.hash(into:)()
{
  return sub_186508104();
}

BOOL static _UIIntelligenceLightSourceConfiguration.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1855A72A8()
{
  sub_1865080EC();
  sub_1865080F8();
  return sub_186508134();
}

uint64_t sub_1855A72E8()
{
  return sub_1865080F8();
}

uint64_t sub_1855A730C()
{
  sub_1865080EC();
  sub_1865080F8();
  return sub_186508134();
}

unint64_t sub_1855A7348()
{
  return 0xD000000000000016;
}

uint64_t sub_1855A7364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1855A7C94(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1855A738C()
{
  return 0;
}

void sub_1855A7398(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1855A73A4()
{
  sub_1855A74DC();
  return sub_186508248();
}

uint64_t sub_1855A73CC()
{
  sub_1855A74DC();
  return sub_186508254();
}

uint64_t _UIIntelligenceLightSourceConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD851E0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1855A74DC();
  sub_1865081E8();
  sub_186507F24();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1855A74DC()
{
  unint64_t result;

  result = qword_1EDD851E8;
  if (!qword_1EDD851E8)
  {
    result = MEMORY[0x186DC9F28](&unk_18666941C, &type metadata for _UIIntelligenceLightSourceConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDD851E8);
  }
  return result;
}

uint64_t _UIIntelligenceLightSourceConfiguration.hashValue.getter()
{
  sub_1865080EC();
  sub_186508104();
  return sub_186508134();
}

uint64_t _UIIntelligenceLightSourceConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD851F0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1855A74DC();
  sub_1865081C4();
  if (!v2)
  {
    v9 = sub_186507F0C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

uint64_t sub_1855A766C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return _UIIntelligenceLightSourceConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1855A7680(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD851E0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1855A74DC();
  sub_1865081E8();
  sub_186507F24();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1855A7768()
{
  sub_1865080EC();
  sub_186508104();
  return sub_186508134();
}

uint64_t sub_1855A77AC()
{
  return sub_186508104();
}

uint64_t sub_1855A77D4()
{
  sub_1865080EC();
  sub_186508104();
  return sub_186508134();
}

BOOL sub_1855A7814(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void __swiftcall _UIIntelligenceLightSourceConfiguration.init()(_UIIntelligenceLightSourceConfiguration *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id _UIIntelligenceLightSourceConfiguration.init()()
{
  uint64_t v0;
  objc_super v2;

  *(_BYTE *)(v0 + OBJC_IVAR____UIIntelligenceLightSourceConfiguration_wrapped) = 0;
  v2.super_class = (Class)_UIIntelligenceLightSourceConfiguration;
  return objc_msgSendSuper2(&v2, sel_init);
}

unint64_t sub_1855A78B4()
{
  unint64_t result;

  result = qword_1EDD85200;
  if (!qword_1EDD85200)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for _UIIntelligenceLightSourceConfiguration, &type metadata for _UIIntelligenceLightSourceConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EDD85200);
  }
  return result;
}

uint64_t type metadata accessor for _UIIntelligenceLightSourceView(uint64_t a1)
{
  return sub_1851F9080(a1, &qword_1EDD85208);
}

uint64_t getEnumTagSinglePayload for _UIIntelligenceLightSourceConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for _UIIntelligenceLightSourceConfiguration(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1855A79F8 + 4 * byte_186669255[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1855A7A2C + 4 * byte_186669250[v4]))();
}

uint64_t sub_1855A7A2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1855A7A34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1855A7A3CLL);
  return result;
}

uint64_t sub_1855A7A48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1855A7A50);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1855A7A54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1855A7A5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for _UIIntelligenceLightSourceConfiguration()
{
  return &type metadata for _UIIntelligenceLightSourceConfiguration;
}

uint64_t type metadata accessor for _UIIntelligenceLightSourceConfiguration(uint64_t a1)
{
  return sub_1851F9080(a1, &qword_1EDD85210);
}

uint64_t getEnumTagSinglePayload for _UIIntelligenceLightSourceConfiguration.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for _UIIntelligenceLightSourceConfiguration.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1855A7B60 + 4 * byte_18666925A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1855A7B80 + 4 * byte_18666925F[v4]))();
}

_BYTE *sub_1855A7B60(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1855A7B80(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1855A7B88(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1855A7B90(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1855A7B98(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1855A7BA0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for _UIIntelligenceLightSourceConfiguration.CodingKeys()
{
  return &type metadata for _UIIntelligenceLightSourceConfiguration.CodingKeys;
}

unint64_t sub_1855A7BC0()
{
  unint64_t result;

  result = qword_1EDD85218;
  if (!qword_1EDD85218)
  {
    result = MEMORY[0x186DC9F28](&unk_1866693F4, &type metadata for _UIIntelligenceLightSourceConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDD85218);
  }
  return result;
}

unint64_t sub_1855A7C08()
{
  unint64_t result;

  result = qword_1EDD85220;
  if (!qword_1EDD85220)
  {
    result = MEMORY[0x186DC9F28](&unk_186669364, &type metadata for _UIIntelligenceLightSourceConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDD85220);
  }
  return result;
}

unint64_t sub_1855A7C50()
{
  unint64_t result;

  result = qword_1EDD85228;
  if (!qword_1EDD85228)
  {
    result = MEMORY[0x186DC9F28](&unk_18666938C, &type metadata for _UIIntelligenceLightSourceConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EDD85228);
  }
  return result;
}

uint64_t sub_1855A7C94(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000016 && a2 == 0x8000000186686970)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_186507FCC();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void UIViewController.ViewLoading.wrappedValue.getter()
{
  sub_186507E04();
  __break(1u);
}

void UIViewController.ViewLoading.wrappedValue.setter()
{
  sub_1855A825C();
}

void UIViewController.ViewLoading.wrappedValue.modify()
{
  sub_186507E04();
  __break(1u);
}

uint64_t UIViewController.ViewLoading.init()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, 1, 1);
}

uint64_t UIViewController.ViewLoading.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 - 8);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v9(a3, 1, 1, a2);
  v7 = sub_186507AA4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a3, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a3, a1, a2);
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v9)(a3, 0, 1, a2);
}

uint64_t static UIViewController.ViewLoading.subscript.getter@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void (*v13)(_QWORD *, _QWORD);
  uint64_t v14;
  uint64_t result;
  _QWORD v17[4];
  id v18;

  v5 = *a2;
  v6 = (_QWORD *)MEMORY[0x1E0DED210];
  v7 = *(_QWORD *)(*MEMORY[0x1E0DED210] + *a2 + 8);
  v8 = sub_186507AA4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v17[-1] - v10;
  objc_msgSend(a1, sel_loadViewIfNeeded);
  v18 = a1;
  v12 = a1;
  v13 = (void (*)(_QWORD *, _QWORD))swift_readAtKeyPath();
  (*(void (**)(char *))(v9 + 16))(v11);
  v13(v17, 0);

  v14 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v7) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a3, v11, v7);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  sub_186507C30();
  sub_186507564();
  v18 = v12;
  MEMORY[0x186DC9F28](MEMORY[0x1E0CB2120], *(_QWORD *)(v5 + *v6));
  sub_1855A82B4();
  sub_186507564();
  swift_bridgeObjectRelease();
  sub_186507564();
  result = sub_186507E04();
  __break(1u);
  return result;
}

uint64_t static UIViewController.ViewLoading.subscript.setter(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v4;

  v4 = *a3;
  sub_1855A82DC(a1, a2, a3);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*MEMORY[0x1E0DED210] + v4 + 8) - 8) + 8))(a1);
}

void (*static UIViewController.ViewLoading.subscript.modify(_QWORD *a1, void *a2, uint64_t *a3, uint64_t a4))(void ***a1, char a2)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  void *v12;

  v8 = malloc(0x38uLL);
  *a1 = v8;
  v8[1] = a3;
  v8[2] = a4;
  *v8 = a2;
  v9 = *(_QWORD *)(*MEMORY[0x1E0DED210] + *a3 + 8);
  v8[3] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v8[4] = v10;
  v11 = *(_QWORD *)(v10 + 64);
  v8[5] = malloc(v11);
  v12 = malloc(v11);
  v8[6] = v12;
  static UIViewController.ViewLoading.subscript.getter(a2, a3, (uint64_t)v12);
  return sub_1855A8178;
}

void sub_1855A8178(void ***a1, char a2)
{
  void **v2;
  void *v3;
  void *v4;
  void *v5;
  void (**v6)(void *, void *, void *);
  _QWORD *v7;
  void *v8;
  void (*v9)(void *, void *, void *);

  v2 = *a1;
  v3 = (*a1)[5];
  v4 = (*a1)[6];
  v5 = (*a1)[3];
  v6 = (void (**)(void *, void *, void *))(*a1)[4];
  v7 = (*a1)[1];
  v8 = **a1;
  if ((a2 & 1) != 0)
  {
    v6[2]((*a1)[5], v4, v5);
    swift_retain();
    swift_retain();
    sub_1855A82DC((uint64_t)v3, v8, v7);
    v9 = v6[1];
    ((void (*)(void *, void *))v9)(v3, v5);
  }
  else
  {
    swift_retain();
    swift_retain();
    sub_1855A82DC((uint64_t)v4, v8, v7);
    v9 = v6[1];
  }
  ((void (*)(void *, void *))v9)(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

void sub_1855A825C()
{
  sub_186507E04();
  __break(1u);
}

uint64_t sub_1855A82B4()
{
  return sub_186507F54();
}

void sub_1855A82DC(uint64_t a1, void *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  void (*v12)(_BYTE *, _QWORD);
  uint64_t v13;
  _BYTE v15[32];
  id v16;

  v5 = *(_QWORD *)(*MEMORY[0x1E0DED210] + *a3 + 8);
  v6 = sub_186507AA4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v15[-v8 - 8];
  v10 = *(_QWORD *)(v5 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(&v15[-v8 - 8], a1, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v9, 0, 1, v5);
  v16 = a2;
  v11 = a2;
  v12 = (void (*)(_BYTE *, _QWORD))swift_modifyAtReferenceWritableKeyPath();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v13, v9, v6);
  v12(v15, 0);

  swift_release();
  swift_release();

}

void sub_1855A8408()
{
  UIViewController.ViewLoading.wrappedValue.getter();
}

void sub_1855A8414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for UIViewController.ViewLoading(0, *(_QWORD *)(a4 + a3 - 8), a3, a4);
  sub_1855A825C();
}

uint64_t sub_1855A8444()
{
  return 8;
}

_QWORD *sub_1855A8450(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1855A845C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_186507AA4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1855A84C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (*(_DWORD *)(v6 + 80) > 7u || (v7 & 0x100000) != 0 || v8 > 0x18)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain();
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 16)))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_1855A85A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return result;
}

void *sub_1855A85FC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v7 = *(_QWORD *)(v6 + 64);
    else
      v7 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1855A8694(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
  return a1;
}

void *sub_1855A8774(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v7 = *(_QWORD *)(v6 + 64);
    else
      v7 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1855A880C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
  return a1;
}

uint64_t sub_1855A88EC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  if (!a2)
    return 0;
  v8 = a2 - v6;
  if (a2 > v6)
  {
    v9 = 8 * v7;
    if (v7 > 3)
      goto LABEL_8;
    v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v7);
      if (v10)
        goto LABEL_15;
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2)
          goto LABEL_24;
LABEL_8:
        v10 = *(unsigned __int8 *)(a1 + v7);
        if (!*(_BYTE *)(a1 + v7))
          goto LABEL_24;
LABEL_15:
        v12 = (v10 - 1) << v9;
        if (v7 > 3)
          v12 = 0;
        if ((_DWORD)v7)
        {
          if (v7 <= 3)
            v13 = v7;
          else
            v13 = 4;
          __asm { BR              X12 }
        }
        return v6 + v12 + 1;
      }
      v10 = *(unsigned __int16 *)(a1 + v7);
      if (*(_WORD *)(a1 + v7))
        goto LABEL_15;
    }
  }
LABEL_24:
  if (v5 < 2)
    return 0;
  v14 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v14 >= 2)
    return v14 - 1;
  else
    return 0;
}

void sub_1855A8A2C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  BOOL v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (v8)
  {
    v10 = *(_QWORD *)(v7 + 64);
  }
  else
  {
    v9 = 0;
    v10 = *(_QWORD *)(v7 + 64) + 1;
  }
  v11 = a3 >= v9;
  v12 = a3 - v9;
  if (v12 != 0 && v11)
  {
    if (v10 > 3)
    {
      v6 = 1u;
      if (v9 < a2)
        goto LABEL_14;
      goto LABEL_21;
    }
    v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v13))
    {
      v6 = 4u;
      if (v9 < a2)
      {
LABEL_14:
        v14 = ~v9 + a2;
        if (v10 < 4)
        {
          if ((_DWORD)v10)
          {
            v15 = v14 & ~(-1 << (8 * v10));
            bzero(a1, v10);
            if ((_DWORD)v10 == 3)
            {
              *a1 = v15;
              *((_BYTE *)a1 + 2) = BYTE2(v15);
            }
            else if ((_DWORD)v10 == 2)
            {
              *a1 = v15;
            }
            else
            {
              *(_BYTE *)a1 = v15;
            }
          }
        }
        else
        {
          bzero(a1, v10);
          *(_DWORD *)a1 = v14;
        }
        __asm { BR              X10 }
      }
LABEL_21:
      __asm { BR              X11 }
    }
    if (v13 >= 0x100)
      v6 = 2;
    else
      v6 = v13 > 1;
  }
  if (v9 < a2)
    goto LABEL_14;
  goto LABEL_21;
}

void sub_1855A8BD4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1855A8BDC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t type metadata accessor for UIViewController.ViewLoading(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UIViewController.ViewLoading);
}

char *sub_1855A8C0C()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  char *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  char *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  _QWORD v15[6];
  objc_super v16;

  v1 = OBJC_IVAR____UIRopeAnimation__progressValue;
  v2 = objc_allocWithZone((Class)UIViewFloatAnimatableProperty);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, sel_init);
  *(_QWORD *)&v3[OBJC_IVAR____UIRopeAnimation__animations] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[OBJC_IVAR____UIRopeAnimation__lastIndex] = 0;

  v16.receiver = v3;
  v16.super_class = (Class)_UIRopeAnimation;
  v4 = (char *)objc_msgSendSuper2(&v16, sel_init);
  v5 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1866691F0;
  v7 = *(void **)&v4[OBJC_IVAR____UIRopeAnimation__progressValue];
  *(_QWORD *)(v6 + 32) = v7;
  sub_18650766C();
  sub_1851F9080(0, (unint64_t *)&qword_1ECD74C18);
  v8 = v4;
  v9 = v7;
  v10 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v8;
  v15[4] = sub_1855A9598;
  v15[5] = v11;
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 1107296256;
  v15[2] = sub_18530A69C;
  v15[3] = &block_descriptor_24;
  v12 = _Block_copy(v15);
  v13 = v8;
  swift_release();
  objc_msgSend(v5, sel__createTransformerWithInputAnimatableProperties_presentationValueChangedCallback_, v10, v12);

  _Block_release(v12);
  return v13;
}

id sub_1855A8DDC(uint64_t a1)
{
  id result;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  BOOL v11;

  result = objc_msgSend(*(id *)(a1 + OBJC_IVAR____UIRopeAnimation__progressValue), sel_presentationValue);
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) == 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  v4 = (uint64_t)v3;
  v5 = OBJC_IVAR____UIRopeAnimation__lastIndex;
  v6 = a1 + OBJC_IVAR____UIRopeAnimation__animations;
  result = (id)swift_beginAccess();
  v7 = *(_QWORD *)(a1 + v5);
  if (v7 <= v4)
  {
    while (v7 < *(_QWORD *)(*(_QWORD *)v6 + 16))
    {
      if (v7 < 0)
      {
        __break(1u);
LABEL_11:
        __break(1u);
        goto LABEL_12;
      }
      v8 = *(void (**)(uint64_t))(*(_QWORD *)v6 + 16 * v7 + 32);
      v9 = swift_retain();
      v8(v9);
      result = (id)swift_release();
      v10 = *(_QWORD *)(a1 + v5);
      v11 = __OFADD__(v10, 1);
      v7 = v10 + 1;
      if (v11)
        goto LABEL_11;
      *(_QWORD *)(a1 + v5) = v7;
      if (v7 > v4)
        return result;
    }
  }
  return result;
}

void sub_1855A905C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  void *v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  _QWORD *v24;

  v7 = *(void **)&v3[OBJC_IVAR____UIRopeAnimation__progressValue];
  objc_msgSend(v7, sel_value);
  v9 = v8;
  objc_msgSend(v7, sel_presentationValue);
  if (v9 == v10)
  {
    *(_QWORD *)&v3[OBJC_IVAR____UIRopeAnimation__lastIndex] = 0;
    objc_msgSend(v7, sel_setValue_, 0.0);
    v11 = (void *)objc_opt_self();
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v3;
    v23 = sub_1855A9500;
    v24 = (_QWORD *)v12;
    v13 = MEMORY[0x1E0C809B0];
    v19 = MEMORY[0x1E0C809B0];
    v20 = 1107296256;
    v21 = sub_18530A69C;
    v22 = &block_descriptor_1;
    v14 = _Block_copy(&v19);
    v15 = v3;
    swift_release();
    v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = v16;
    v17[3] = a2;
    v17[4] = a3;
    v23 = sub_1855A9560;
    v24 = v17;
    v19 = v13;
    v20 = 1107296256;
    v21 = sub_1856DA9E8;
    v22 = &block_descriptor_12;
    v18 = _Block_copy(&v19);
    sub_18518D708(a2);
    swift_release();
    objc_msgSend(v11, sel__animateUsingSpringBehavior_tracking_animations_completion_, a1, 0, v14, v18);
    _Block_release(v18);
    _Block_release(v14);
  }
}

id sub_1855A923C(uint64_t a1)
{
  void *v1;
  uint64_t v2;

  v1 = *(void **)(a1 + OBJC_IVAR____UIRopeAnimation__progressValue);
  v2 = a1 + OBJC_IVAR____UIRopeAnimation__animations;
  swift_beginAccess();
  return objc_msgSend(v1, sel_setValue_, (double)*(uint64_t *)(*(_QWORD *)v2 + 16));
}

uint64_t sub_1855A92A4(char a1, char a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD))
{
  uint64_t v7;
  uint64_t result;
  void *v9;
  _QWORD *v10;

  v7 = a3 + 16;
  swift_beginAccess();
  result = MEMORY[0x186DCA138](v7);
  if (result)
  {
    v9 = (void *)result;
    v10 = (_QWORD *)(result + OBJC_IVAR____UIRopeAnimation__animations);
    swift_beginAccess();
    *v10 = MEMORY[0x1E0DEE9D8];

    result = swift_bridgeObjectRelease();
  }
  if (a4)
    return a4(a1 & 1, a2 & 1);
  return result;
}

uint64_t type metadata accessor for _UIRopeAnimation(uint64_t a1)
{
  return sub_1851F9080(a1, &qword_1EDD85250);
}

uint64_t sub_1855A94B0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1855A94D4(char a1, char a2)
{
  uint64_t v2;

  return sub_1855D8E14(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1855A94DC()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1855A9500()
{
  uint64_t v0;

  return sub_1855A923C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1855A9508()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1855A952C()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1855A9560(char a1, char a2)
{
  uint64_t v2;

  return sub_1855A92A4(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t (**)(_QWORD, _QWORD))(v2 + 24));
}

uint64_t sub_1855A956C()
{
  uint64_t v0;

  return sub_185712B94(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1855A9574()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1855A9598()
{
  uint64_t v0;

  return sub_1855A8DDC(*(_QWORD *)(v0 + 16));
}

uint64_t UIView._intelligenceBaseClass.getter()
{
  return sub_1851F9080(0, (unint64_t *)&qword_1EDD82CE0);
}

double UIView._intelligenceVisibleBounds.getter()
{
  void *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;

  objc_msgSend(v0, sel_bounds);
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  objc_msgSend(v0, sel_safeAreaInsets);
  return UIRectInset(v2, v4, v6, v8, v9, v12, v11, v10);
}

uint64_t UIView._intelligenceCollectContent(in:collector:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_186507024();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DC16B0], v0);
  sub_186506E2C();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

id UIView._intelligenceCollectSubelements(in:using:transformToRoot:)(uint64_t a1, uint64_t a2, uint64_t a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  void *v7;
  void *v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  id result;
  void *v28;
  unint64_t v29;
  unint64_t v30;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  CGFloat v43;
  CGFloat v44;
  CGFloat v45;
  char *v46;
  char v47;
  BOOL IsEmpty;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  _QWORD v64[4];
  CGRect v65;
  uint64_t v66;

  v8 = v7;
  v61 = a2;
  v62 = a3;
  v14 = sub_186507144();
  v59 = *(_QWORD *)(v14 - 8);
  v60 = v14;
  MEMORY[0x1E0C80A78](v14);
  v57 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD81F38);
  MEMORY[0x1E0C80A78](v16);
  v53 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_186507030();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v52 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD81BF0);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v49 - v25;
  v66 = MEMORY[0x1E0DEE9D8];
  v65.origin.x = a4;
  v65.origin.y = a5;
  v65.size.width = a6;
  v65.size.height = a7;
  result = objc_msgSend(v7, sel__allSubviews);
  if (result)
  {
    v28 = result;
    v58 = v19;
    sub_1851F9080(0, (unint64_t *)&qword_1EDD82CE0);
    v29 = sub_186507654();

    v54 = v29;
    if (v29 >> 62)
      goto LABEL_22;
    v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (v30)
    {
      v63 = v54 & 0xC000000000000001;
      v51 = v54 & 0xFFFFFFFFFFFFFF8;
      v50 = v54 + 32;
      v55 = v18;
      v56 = a1;
      while (!__OFSUB__(v30--, 1))
      {
        if (v63)
        {
          v32 = (id)MEMORY[0x186DC4CB4](v30, v54);
        }
        else
        {
          if ((v30 & 0x8000000000000000) != 0)
            goto LABEL_20;
          if (v30 >= *(_QWORD *)(v51 + 16))
            goto LABEL_21;
          v32 = *(id *)(v50 + 8 * v30);
        }
        v33 = v32;
        v34 = MEMORY[0x1E0C80A78](v32);
        *(&v49 - 6) = (uint64_t)v8;
        *(&v49 - 5) = v34;
        *(&v49 - 4) = (uint64_t)&v65;
        *(&v49 - 3) = a1;
        v35 = v62;
        *(&v49 - 2) = v61;
        *(&v49 - 1) = v35;
        sub_186506E08();
        sub_18519F0C4((uint64_t)v26, (uint64_t)v24, (uint64_t *)&unk_1EDD81BF0);
        v36 = v58;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v24, 1, v18) == 1)
        {
          sub_18519F088((uint64_t)v24, (uint64_t *)&unk_1EDD81BF0);
        }
        else
        {
          v37 = v8;
          v38 = v26;
          v39 = v24;
          v40 = v52;
          (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v52, v39, v18);
          v41 = (uint64_t)v53;
          (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v53, v40, v18);
          sub_1855AFF20(0, 0, v41);
          v42 = v40;
          v24 = v39;
          v26 = v38;
          v8 = v37;
          (*(void (**)(char *, uint64_t))(v36 + 8))(v42, v18);
        }
        v65.origin.x = sub_1855A9EFC(v33, v65.origin.x, v65.origin.y, v65.size.width, v65.size.height);
        v65.origin.y = v43;
        v65.size.width = v44;
        v65.size.height = v45;
        a1 = v56;
        sub_186506E50();
        __swift_project_boxed_opaque_existential_0Tm(v64, v64[3]);
        v46 = v57;
        sub_186507054();
        v47 = sub_186507120();
        (*(void (**)(char *, uint64_t))(v59 + 8))(v46, v60);
        if ((v47 & 1) != 0)
        {
          IsEmpty = CGRectIsEmpty(v65);

          sub_18519F088((uint64_t)v26, (uint64_t *)&unk_1EDD81BF0);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v64);
          if (IsEmpty)
            goto LABEL_18;
        }
        else
        {
          sub_18519F088((uint64_t)v26, (uint64_t *)&unk_1EDD81BF0);

          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v64);
        }
        v18 = v55;
        if (!v30)
          goto LABEL_18;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      swift_bridgeObjectRetain();
      v30 = sub_186507E58();
      swift_bridgeObjectRelease();
    }
LABEL_18:
    swift_bridgeObjectRelease();
    sub_186506E44();
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1855A9D40(void *a1, uint64_t a2, double *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  void *v16;
  uint64_t result;
  _QWORD v18[6];

  v11 = *a3;
  v12 = a3[1];
  v13 = a3[2];
  v14 = a3[3];
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a5;
  *(_QWORD *)(v15 + 24) = a6;
  v18[4] = sub_185281934;
  v18[5] = v15;
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 1107296256;
  v18[2] = sub_1855A9E78;
  v18[3] = &block_descriptor_45_0;
  v16 = _Block_copy(v18);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel__intelligenceCollectElementFor_in_using_transformToRoot_, a2, a4, v16, v11, v12, v13, v14);
  _Block_release(v16);
  LOBYTE(a4) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((a4 & 1) != 0)
    __break(1u);
  return result;
}

double sub_1855A9E78(uint64_t a1, void *a2, double a3, double a4, double a5, double a6)
{
  double (*v10)(double, double, double, double);
  id v11;
  double v12;

  v10 = *(double (**)(double, double, double, double))(a1 + 32);
  v11 = a2;
  v12 = v10(a3, a4, a5, a6);

  return v12;
}

CGFloat sub_1855A9EFC(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  void *v5;
  id v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  double v23;
  CGFloat v24;
  double v25;
  double v26;
  CGFloat v27;
  CGFloat MaxY;
  BOOL v29;
  double v30;
  char v31;
  CGFloat v32;
  double v33;
  double v34;
  double MinY;
  double v36;
  CGFloat v37;
  double v38;
  double v40;
  double v41;
  double v42;
  double v43;
  double Width;
  double v45;
  double v46;
  CGFloat v47;
  double v48;
  double MinX;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  CGFloat v55;
  double MaxX;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  CGFloat v65;
  CGFloat v66;
  CGFloat v67;
  CGFloat v68;
  CGFloat v69;
  CGFloat v70;
  double v71;
  double v72;
  CGFloat v73;
  CGFloat height;
  double v75;
  CGFloat rect;
  double recta;
  CGRect v78;
  CGRect v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;
  CGRect v90;
  CGRect v91;
  CGRect v92;
  CGRect v93;
  CGRect v94;
  CGRect v95;
  CGRect v96;
  CGRect v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;
  CGRect v108;
  CGRect v109;

  v11 = objc_msgSend(a1, sel__presentationControllerToNotifyOnLayoutSubviews);
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, sel__occludedFrameOfPresentedViewInContainerView);
    v17 = -[UIView _convertRect:toViewInSameWindow:]((uint64_t)a1, v5, v13, v14, v15, v16);
    v19 = v18;
    v21 = v20;
    v22 = a2;
    v24 = v23;
    v78.origin.x = v22;
    v78.origin.y = a3;
    v78.size.width = a4;
    v78.size.height = a5;
    v109.origin.x = v17;
    v109.origin.y = v19;
    v109.size.width = v21;
    v109.size.height = v24;
    if (CGRectIntersectsRect(v78, v109))
    {
      objc_msgSend(v5, sel__currentScreenScale);
      v79.size.width = v21;
      v79.size.height = v24;
      v26 = 1.0 / v25;
      v79.origin.x = v17;
      v79.origin.y = v19;
      v73 = v21;
      height = v79.size.height;
      v27 = CGRectGetMaxY(v79) + v26;
      v80.origin.x = v22;
      v80.origin.y = a3;
      rect = a4;
      v80.size.width = a4;
      v80.size.height = a5;
      MaxY = CGRectGetMaxY(v80);
      v63 = v27;
      v29 = MaxY > v27;
      v30 = MaxY;
      v31 = v29;
      v71 = 0.0;
      v72 = v26;
      v32 = 0.0;
      v33 = 0.0;
      v34 = 0.0;
      if (!v29)
      {
        v81.origin.x = v17;
        v81.origin.y = v19;
        v81.size.width = v73;
        v81.size.height = height;
        MinY = CGRectGetMinY(v81);
        v82.origin.x = v22;
        v82.origin.y = a3;
        v33 = rect;
        v82.size.width = rect;
        v82.size.height = a5;
        v36 = MinY - CGRectGetMinY(v82);
        v26 = v72;
        v34 = 0.0;
        if (v36 >= 0.0)
          v34 = v36;
        v71 = v22;
        v32 = a3;
      }
      v66 = v32;
      v67 = v34;
      v68 = v33;
      v83.origin.x = v17;
      v83.origin.y = v19;
      v83.size.width = v73;
      v83.size.height = height;
      v37 = CGRectGetMinY(v83) - v26;
      v84.origin.x = v22;
      v84.origin.y = a3;
      v84.size.width = rect;
      v84.size.height = a5;
      v69 = v19;
      v70 = v17;
      if (v37 <= CGRectGetMinY(v84))
      {
        v85.origin.x = v22;
        v85.origin.y = a3;
        v85.size.width = rect;
        v85.size.height = a5;
        v40 = CGRectGetMaxY(v85);
        v86.origin.x = v17;
        v86.origin.y = v19;
        v86.size.width = v73;
        v86.size.height = height;
        v41 = v40 - CGRectGetMaxY(v86);
        if (v41 < 0.0)
          v42 = 0.0;
        else
          v42 = v41;
        v87.origin.x = v22;
        v87.origin.y = a3;
        v87.size.width = rect;
        v87.size.height = a5;
        v43 = CGRectGetMaxY(v87) - v42;
        if (v30 <= v63)
        {
          v88.origin.x = v22;
          v88.origin.y = v43;
          v88.size.width = rect;
          v88.size.height = v42;
          Width = CGRectGetWidth(v88);
          v89.origin.x = v22;
          v89.origin.y = v43;
          v89.size.width = rect;
          v89.size.height = v42;
          v64 = Width * CGRectGetHeight(v89);
          v90.origin.x = v71;
          v90.origin.y = v66;
          v90.size.width = v68;
          v90.size.height = v67;
          v45 = CGRectGetWidth(v90);
          v91.origin.x = v71;
          v91.origin.y = v66;
          v91.size.width = v68;
          v91.size.height = v67;
          v46 = v45 * CGRectGetHeight(v91);
          v38 = v72;
          if (v72 + v46 >= v64)
          {
            v31 = 0;
          }
          else
          {
            v66 = v43;
            v67 = v42;
            v31 = 0;
            v71 = v22;
            v68 = rect;
          }
        }
        else
        {
          v66 = v43;
          v67 = v42;
          v31 = 0;
          v71 = v22;
          v68 = rect;
          v38 = v72;
        }
      }
      else
      {
        v38 = v72;
      }
      v92.origin.x = v70;
      v92.origin.y = v69;
      v92.size.width = v73;
      v92.size.height = height;
      v47 = v38 + CGRectGetMaxX(v92);
      v93.origin.x = v22;
      v93.origin.y = a3;
      v93.size.width = rect;
      v93.size.height = a5;
      if (CGRectGetMaxX(v93) <= v47)
      {
        v94.origin.x = v70;
        v94.origin.y = v69;
        v94.size.width = v73;
        v94.size.height = height;
        MinX = CGRectGetMinX(v94);
        v95.origin.x = v22;
        v95.origin.y = a3;
        v95.size.width = rect;
        v95.size.height = a5;
        v50 = MinX - CGRectGetMinX(v95);
        if (v50 < 0.0)
          v51 = 0.0;
        else
          v51 = v50;
        v65 = v51;
        if ((v31 & 1) != 0)
        {
          v31 = 0;
          v71 = v22;
          v66 = a3;
          v67 = a5;
          v48 = v72;
        }
        else
        {
          v96.origin.x = v22;
          v96.origin.y = a3;
          v96.size.width = v51;
          v96.size.height = a5;
          v52 = CGRectGetWidth(v96);
          v97.origin.x = v22;
          v97.origin.y = a3;
          v97.size.width = v51;
          v97.size.height = a5;
          v62 = v52 * CGRectGetHeight(v97);
          v98.origin.x = v71;
          v98.origin.y = v66;
          v98.size.width = v68;
          v98.size.height = v67;
          v53 = CGRectGetWidth(v98);
          v99.origin.x = v71;
          v99.origin.y = v66;
          v99.size.width = v68;
          v99.size.height = v67;
          v54 = v53 * CGRectGetHeight(v99);
          v48 = v72;
          v31 = 0;
          if (v72 + v54 >= v62)
          {
            v65 = v68;
          }
          else
          {
            v71 = v22;
            v66 = a3;
            v67 = a5;
          }
        }
      }
      else
      {
        v65 = v68;
        v48 = v72;
      }
      v100.origin.x = v70;
      v100.origin.y = v69;
      v100.size.height = height;
      v100.size.width = v73;
      v55 = CGRectGetMinX(v100) - v48;
      v101.origin.x = v22;
      v101.origin.y = a3;
      v101.size.width = rect;
      v101.size.height = a5;
      if (v55 <= CGRectGetMinX(v101))
      {
        v102.origin.x = v22;
        v102.origin.y = a3;
        v102.size.width = rect;
        v102.size.height = a5;
        MaxX = CGRectGetMaxX(v102);
        v103.origin.x = v70;
        v103.origin.y = v69;
        v103.size.width = v73;
        v103.size.height = height;
        v57 = MaxX - CGRectGetMaxX(v103);
        if (v57 < 0.0)
          v58 = 0.0;
        else
          v58 = v57;
        v104.origin.x = v22;
        v104.origin.y = a3;
        v104.size.width = rect;
        v104.size.height = a5;
        v59 = CGRectGetMaxX(v104);
        a2 = v59 - v58;
        if ((v31 & 1) != 0)
        {

        }
        else
        {
          v105.origin.x = v59 - v58;
          v105.origin.y = a3;
          v105.size.width = v58;
          v105.size.height = a5;
          v60 = CGRectGetWidth(v105);
          v106.origin.x = a2;
          v106.origin.y = a3;
          v106.size.width = v58;
          v106.size.height = a5;
          recta = v60 * CGRectGetHeight(v106);
          v107.origin.x = v71;
          v107.origin.y = v66;
          v107.size.width = v65;
          v107.size.height = v67;
          v75 = CGRectGetWidth(v107);
          v108.origin.x = v71;
          v108.origin.y = v66;
          v108.size.width = v65;
          v108.size.height = v67;
          v61 = CGRectGetHeight(v108);

          if (v72 + v75 * v61 >= recta)
            return v71;
        }
      }
      else
      {

        a2 = v22;
        if ((v31 & 1) == 0)
          return v71;
      }
    }
    else
    {

      return v22;
    }
  }
  return a2;
}

uint64_t sub_1855AA4AC()
{
  uint64_t v0;

  return sub_1855A9D40(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(double **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t UIView._intelligenceCollectElement(for:in:using:transformToRoot:)(void *a1, uint64_t a2, double (*a3)(void *, double), uint64_t a4, double a5, double a6, double a7, double a8)
{
  void *v8;
  void *v9;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  double v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  uint64_t v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;

  v9 = v8;
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD81BF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_186507030();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = -[UIView _convertRect:toViewInSameWindow:]((uint64_t)v9, a1, a5, a6, a7, a8);
  v27 = v26;
  v29 = v28;
  v31 = v30;
  objc_msgSend(a1, sel__intelligenceVisibleBounds);
  v40.origin.x = v32;
  v40.origin.y = v33;
  v40.size.width = v34;
  v40.size.height = v35;
  v38.origin.x = v25;
  v38.origin.y = v27;
  v38.size.width = v29;
  v38.size.height = v31;
  v39 = CGRectIntersection(v38, v40);
  sub_1855AB4E8(a2, a1, a3, a4, v9, (uint64_t)v20, v39.origin.x, v39.origin.y, v39.size.width, v39.size.height);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
    return sub_18519F088((uint64_t)v20, (uint64_t *)&unk_1EDD81BF0);
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
  sub_186506E38();
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v21);
}

void sub_1855AA73C(void (*a1)(char *, char *, uint64_t)@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>, CGFloat a6@<D0>, CGFloat a7@<D1>, CGFloat a8@<D2>, CGFloat a9@<D3>)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  id v39;
  double v40;
  id v41;
  id v42;
  unsigned __int8 v43;
  char *v44;
  uint64_t IsEmpty;
  void (**v46)(const void *, void *, double);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char v51;
  uint64_t v52;
  char *v53;
  char v54;
  void (*v55)(char *, uint64_t);
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t KeyPath;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  id v73;
  void *v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  uint64_t v77;
  uint64_t v78;
  double v79;
  double v80;
  double v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  void (**v87)(const void *, void *, double);
  void *v88;
  double v89;
  void (**v90)(const void *, void *, double);
  void (*v91)(char *, char *, uint64_t);
  uint64_t ObjCClassMetadata;
  id *v93;
  id *v94;
  uint64_t v95;
  id *v96;
  char v97;
  uint64_t v98;
  id v99;
  void *v100;
  id v101;
  void *v102;
  id v103;
  void *v104;
  uint64_t v105;
  void *v106;
  void (*v107)(char *, char *, uint64_t);
  uint64_t v108;
  void (*v109)(char *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  void (*v112)(char *, char *, uint64_t);
  void *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  void (*v126)(char *, char *, uint64_t);
  char *v127;
  void (**v128)(const void *, void *, double);
  char v129;
  const void *v130;
  __int128 v131;
  uint64_t v132;
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  CGRect v136;

  v126 = a1;
  v17 = sub_186507030();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v120 = (char *)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_18650703C();
  v116 = *(_QWORD *)(v117 - 8);
  MEMORY[0x1E0C80A78](v117);
  v114 = (char *)&v107 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v115 = (char *)&v107 - v22;
  v125 = sub_186507024();
  v122 = *(_QWORD *)(v125 - 8);
  MEMORY[0x1E0C80A78](v125);
  v119 = (char *)&v107 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v118 = (char *)&v107 - v25;
  MEMORY[0x1E0C80A78](v26);
  v124 = (char *)&v107 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD81EC8);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v107 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v121 = (uint64_t)&v107 - v32;
  v123 = sub_186507144();
  v33 = *(_QWORD *)(v123 - 8);
  MEMORY[0x1E0C80A78](v123);
  v35 = (char *)&v107 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v127 = (char *)&v107 - v37;
  v130 = a4;
  v38 = (void (*)(char *, char *, uint64_t))swift_allocObject();
  *((_QWORD *)v38 + 2) = sub_1855B1064;
  *((_QWORD *)v38 + 3) = &v129;
  *((_QWORD *)v38 + 4) = a3;
  v128 = (void (**)(const void *, void *, double))a4;
  _Block_copy(a4);
  v39 = a3;
  if ((objc_msgSend(a2, sel_isHidden) & 1) != 0
    || (objc_msgSend(a2, sel_alpha), _UIViewIsFullyTransparentGivenAlpha(v40))
    || (v41 = objc_msgSend(a2, sel_layer),
        v113 = v39,
        v42 = v41,
        v43 = objc_msgSend(v41, sel_disableUpdateMask),
        v42,
        v39 = v113,
        (v43 & 0x10) != 0))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(a5, 1, 1, v17);

LABEL_8:
    swift_release();
    goto LABEL_9;
  }
  v112 = (void (*)(char *, char *, uint64_t))a2;
  v111 = v17;
  sub_186506E50();
  __swift_project_boxed_opaque_existential_0Tm(&v133, v134);
  v44 = v127;
  sub_186507054();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v133);
  IsEmpty = sub_186507120();
  if ((IsEmpty & 1) != 0)
  {
    v136.origin.x = a6;
    v136.origin.y = a7;
    v136.size.width = a8;
    v136.size.height = a9;
    IsEmpty = CGRectIsEmpty(v136);
    if ((_DWORD)IsEmpty)
    {
      (*(void (**)(char *, uint64_t))(v33 + 8))(v44, v123);
LABEL_12:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(a5, 1, 1, v111);

      goto LABEL_8;
    }
  }
  MEMORY[0x1E0C80A78](IsEmpty);
  *(&v107 - 6) = v112;
  *((CGFloat *)&v107 - 5) = a6;
  *((CGFloat *)&v107 - 4) = a7;
  *((CGFloat *)&v107 - 3) = a8;
  *((CGFloat *)&v107 - 2) = a9;
  *(&v107 - 1) = v126;
  v47 = v121;
  sub_186506E20();
  sub_18519F0C4(v47, (uint64_t)v30, (uint64_t *)&unk_1EDD81EC8);
  v48 = v122;
  v49 = v125;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v30, 1, v125) == 1)
  {
    sub_18519F088(v47, (uint64_t *)&unk_1EDD81EC8);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v127, v123);
    sub_18519F088((uint64_t)v30, (uint64_t *)&unk_1EDD81EC8);
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v124, v30, v49);
  v135 = MEMORY[0x1E0DEE9D8];
  v50 = v127;
  v51 = sub_1865070FC();
  v52 = v123;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v35, v50, v123);
  v108 = v18;
  if ((v51 & 1) != 0)
  {
    v109 = *(void (**)(char *, uint64_t))(v33 + 8);
    v109(v35, v52);
    v53 = v120;
    goto LABEL_16;
  }
  v54 = sub_1865070F0();
  v55 = *(void (**)(char *, uint64_t))(v33 + 8);
  v55(v35, v52);
  v53 = v120;
  v109 = v55;
  if ((v54 & 1) != 0)
  {
LABEL_16:
    v56 = v112;
    UIView._appIntentsIntelligenceProvider.getter(&v131);
    v57 = a5;
    if (v132)
    {
      sub_1855B0F98(&v131, &v133);
      __swift_project_boxed_opaque_existential_0Tm(&v133, v134);
      objc_msgSend(v56, sel_bounds);
      sub_1865071A4();
      KeyPath = swift_getKeyPath();
      MEMORY[0x1E0C80A78](KeyPath);
      *(&v107 - 4) = (void (*)(char *, char *, uint64_t))sub_1855B108C;
      *(&v107 - 3) = v38;
      *(&v107 - 2) = v56;
      v59 = sub_18650769C();
      swift_release();
      swift_bridgeObjectRelease();
      sub_18577C22C(v59);
      __swift_project_boxed_opaque_existential_0Tm(&v133, v134);
      v110 = sub_1865071E0();
      v61 = v60;
      v62 = v56;
      if ((sub_186507138() & 1) != 0)
      {
        __swift_project_boxed_opaque_existential_0Tm(&v133, v134);
        v63 = sub_1865071EC();
      }
      else
      {
        v63 = MEMORY[0x1E0DEE9D8];
      }
      v53 = v120;
      v64 = v125;
      v48 = v122;
      v50 = v127;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v133);
    }
    else
    {
      sub_18519F088((uint64_t)&v131, &qword_1EDD83110);
      v110 = 0;
      v61 = 0xF000000000000000;
      v63 = MEMORY[0x1E0DEE9D8];
      v64 = v125;
      v62 = v56;
      v50 = v127;
    }
    goto LABEL_23;
  }
  v110 = 0;
  v61 = 0xF000000000000000;
  v63 = MEMORY[0x1E0DEE9D8];
  v57 = a5;
  v64 = v125;
  v62 = v112;
LABEL_23:
  v65 = v48;
  v66 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  v67 = v118;
  v107 = v66;
  v66(v118, v124, v64);
  if ((*(unsigned int (**)(char *, uint64_t))(v65 + 88))(v67, v64) == *MEMORY[0x1E0DC16C8])
  {
    (*(void (**)(char *, uint64_t))(v65 + 96))(v67, v64);
    v126 = (void (*)(char *, char *, uint64_t))v63;
    v68 = v57;
    v69 = v116;
    v70 = v61;
    v71 = v115;
    v72 = v117;
    (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v115, v67, v117);
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v114, v71, v72);
    v73 = objc_allocWithZone((Class)sub_186506E8C());
    v74 = (void *)sub_186506E80();
    objc_msgSend(v62, sel__intelligenceCollectRemoteContentIn_remoteContextWrapper_, v74, a6, a7, a8, a9);

    v75 = *(void (**)(char *, uint64_t))(v69 + 8);
    v57 = v68;
    v63 = (uint64_t)v126;
    v76 = v71;
    v61 = v70;
    v53 = v120;
    v75(v76, v72);
  }
  else
  {
    v77 = (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v67, v64);
    MEMORY[0x1E0C80A78](v77);
    *(&v107 - 8) = v62;
    *((CGFloat *)&v107 - 7) = a6;
    *((CGFloat *)&v107 - 6) = a7;
    *((CGFloat *)&v107 - 5) = a8;
    *((CGFloat *)&v107 - 4) = a9;
    *(&v107 - 3) = v126;
    *(&v107 - 2) = (void (*)(char *, char *, uint64_t))sub_1855B108C;
    *(&v107 - 1) = v38;
    v78 = sub_186506E14();
    sub_18577C22C(v78);
  }
  if ((sub_1865070E4() & 1) != 0)
  {
    objc_msgSend(v62, sel_bounds);
    v80 = v79;
    v82 = v81;
    v84 = v83;
    v86 = v85;
    v87 = v128;
    _Block_copy(v128);
    v88 = v113;
    v89 = -[UIView _convertRect:toViewInSameWindow:]((uint64_t)v62, v113, v80, v82, v84, v86);
    v87[2](v87, v88, v89);
    v90 = v87;
    v50 = v127;
    _Block_release(v90);
  }
  v107(v119, v124, v125);
  sub_186506EE0();
  if ((sub_186507114() & 1) != 0)
  {
    v134 = sub_1851F9080(0, (unint64_t *)&qword_1EDD82CE0);
    *(_QWORD *)&v133 = v62;
    v91 = v62;
    objc_msgSend(v91, sel__intelligenceBaseClass);
    ObjCClassMetadata = swift_getObjCClassMetadata();
    sub_1855B0624(&v133, ObjCClassMetadata);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v133);
    sub_186506F1C();
    v93 = -[UIView __viewDelegate]((id *)v91);
    if (v93)
    {
      v94 = v93;
      v95 = sub_1851F9080(0, &qword_1EDD813C0);
      v134 = v95;
      *(_QWORD *)&v133 = v94;
      v96 = v94;
      sub_1855B0624(&v133, v95);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v133);
      sub_186506F58();

      v62 = v112;
    }
  }
  v97 = sub_18650712C();
  v98 = v111;
  if ((v97 & 1) != 0)
  {
    v99 = _UIGetAccessibilityLabelSafe(v62);
    if (v99)
    {
      v100 = v99;
      sub_1865074F8();

    }
    sub_186506F34();
    v62 = v112;
  }
  if (v61 >> 60 != 15)
  {
    sub_1855B0F54(v110, v61);
    sub_186506F28();
  }
  if (*(_QWORD *)(v63 + 16))
    sub_186506F64();
  else
    swift_bridgeObjectRelease();
  if ((sub_1865070FC() & 1) != 0)
  {
    v101 = objc_msgSend(v62, sel__appEntityIdentifier);
    if (v101)
    {
      v102 = v101;
      sub_1865074F8();

    }
    sub_186506F40();
    v62 = v112;
  }
  if ((sub_1865070F0() & 1) != 0)
  {
    v103 = objc_msgSend(v62, sel__appIntentIdentifier);
    if (v103)
    {
      v104 = v103;
      sub_1865074F8();

    }
    sub_186506F4C();
  }
  if ((sub_186507108() & 1) != 0)
  {
    sub_186507018();
    sub_1855B0EFC(v110, v61);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v53, v98);
    (*(void (**)(char *, uint64_t))(v122 + 8))(v124, v125);
    sub_18519F088(v121, (uint64_t *)&unk_1EDD81EC8);
    v109(v50, v123);
  }
  else
  {
    sub_1855B0EFC(v110, v61);
    (*(void (**)(char *, uint64_t))(v122 + 8))(v124, v125);
    sub_18519F088(v121, (uint64_t *)&unk_1EDD81EC8);
    v109(v50, v123);
    v105 = v108;
    (*(void (**)(uint64_t, char *, uint64_t))(v108 + 32))(v57, v53, v98);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v105 + 56))(v57, 0, 1, v98);
  }
  v106 = v113;
  swift_release();

LABEL_9:
  v46 = v128;
  _Block_release(v128);
  _Block_release(v46);
}

void sub_1855AB4E8(uint64_t a1@<X0>, void *a2@<X1>, double (*a3)(void *, double)@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>, CGFloat a7@<D0>, CGFloat a8@<D1>, CGFloat a9@<D2>, CGFloat a10@<D3>)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  id v42;
  double v43;
  id v44;
  id v45;
  unsigned __int8 v46;
  uint64_t IsEmpty;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  char v56;
  id v57;
  uint64_t KeyPath;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  char *v71;
  uint64_t v72;
  id v73;
  void *v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  __n128 v79;
  char *v80;
  void *v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  id v87;
  uint64_t ObjCClassMetadata;
  id *v89;
  id *v90;
  uint64_t v91;
  id *v92;
  char v93;
  uint64_t v94;
  id v95;
  void *v96;
  uint64_t v97;
  char *v98;
  id v99;
  void *v100;
  id v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t);
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  id v109;
  void *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  double (*v116)(void *, double);
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  __int128 v127;
  uint64_t v128;
  __int128 v129;
  uint64_t v130;
  uint64_t v131;
  CGRect v132;

  v126 = a6;
  v19 = sub_186507030();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v119 = (char *)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = sub_18650703C();
  v113 = *(_QWORD *)(v114 - 8);
  v22 = MEMORY[0x1E0C80A78](v114);
  v111 = (char *)&v104 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v112 = (char *)&v104 - v24;
  v124 = sub_186507024();
  v121 = *(_QWORD *)(v124 - 8);
  v25 = MEMORY[0x1E0C80A78](v124);
  v118 = (char *)&v104 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v117 = (char *)&v104 - v28;
  MEMORY[0x1E0C80A78](v27);
  v122 = (char *)&v104 - v29;
  v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD81EC8);
  v31 = MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v104 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v120 = (uint64_t)&v104 - v34;
  v123 = sub_186507144();
  v35 = *(_QWORD *)(v123 - 8);
  v36 = MEMORY[0x1E0C80A78](v123);
  v38 = (char *)&v104 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v125 = (char *)&v104 - v39;
  v40 = (_QWORD *)swift_allocObject();
  v116 = a3;
  v40[2] = a3;
  v40[3] = a4;
  v115 = a4;
  v41 = v40;
  v40[4] = a5;
  v42 = a5;
  if ((objc_msgSend(a2, sel_isHidden) & 1) == 0)
  {
    objc_msgSend(a2, sel_alpha);
    if (!_UIViewIsFullyTransparentGivenAlpha(v43))
    {
      v44 = objc_msgSend(a2, sel_layer);
      v110 = v42;
      v45 = v44;
      v46 = objc_msgSend(v44, sel_disableUpdateMask);

      v42 = v110;
      if ((v46 & 0x10) == 0)
      {
        v108 = v41;
        v109 = a2;
        v107 = v19;
        sub_186506E50();
        __swift_project_boxed_opaque_existential_0Tm(&v129, v130);
        sub_186507054();
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v129);
        IsEmpty = sub_186507120();
        if ((IsEmpty & 1) != 0)
        {
          v132.origin.x = a7;
          v132.origin.y = a8;
          v132.size.width = a9;
          v132.size.height = a10;
          IsEmpty = CGRectIsEmpty(v132);
          if ((_DWORD)IsEmpty)
          {
            (*(void (**)(char *, uint64_t))(v35 + 8))(v125, v123);
LABEL_12:
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v126, 1, 1, v107);
            swift_release();
            v42 = v110;
            goto LABEL_9;
          }
        }
        MEMORY[0x1E0C80A78](IsEmpty);
        *(&v104 - 6) = (uint64_t)v109;
        *((CGFloat *)&v104 - 5) = a7;
        *((CGFloat *)&v104 - 4) = a8;
        *((CGFloat *)&v104 - 3) = a9;
        *((CGFloat *)&v104 - 2) = a10;
        *(&v104 - 1) = a1;
        v48 = v120;
        sub_186506E20();
        sub_18519F0C4(v48, (uint64_t)v33, (uint64_t *)&unk_1EDD81EC8);
        v49 = v121;
        v50 = v124;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v33, 1, v124) == 1)
        {
          sub_18519F088(v48, (uint64_t *)&unk_1EDD81EC8);
          (*(void (**)(char *, uint64_t))(v35 + 8))(v125, v123);
          sub_18519F088((uint64_t)v33, (uint64_t *)&unk_1EDD81EC8);
          goto LABEL_12;
        }
        (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v122, v33, v50);
        v131 = MEMORY[0x1E0DEE9D8];
        v51 = v125;
        v52 = sub_1865070FC();
        v53 = v51;
        v54 = v123;
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v38, v53, v123);
        v106 = v20;
        if ((v52 & 1) != 0)
        {
          v55 = *(void (**)(char *, uint64_t))(v35 + 8);
          v55(v38, v54);
        }
        else
        {
          v56 = sub_1865070F0();
          v55 = *(void (**)(char *, uint64_t))(v35 + 8);
          v55(v38, v54);
          if ((v56 & 1) == 0)
          {
            v105 = v55;
            goto LABEL_21;
          }
        }
        v57 = v109;
        UIView._appIntentsIntelligenceProvider.getter(&v127);
        v105 = v55;
        if (v128)
        {
          sub_1855B0F98(&v127, &v129);
          __swift_project_boxed_opaque_existential_0Tm(&v129, v130);
          objc_msgSend(v57, sel_bounds);
          sub_1865071A4();
          KeyPath = swift_getKeyPath();
          MEMORY[0x1E0C80A78](KeyPath);
          v59 = v108;
          *(&v104 - 4) = (uint64_t)sub_1855B108C;
          *(&v104 - 3) = (uint64_t)v59;
          *(&v104 - 2) = (uint64_t)v57;
          v60 = sub_18650769C();
          swift_release();
          swift_bridgeObjectRelease();
          sub_18577C22C(v60);
          __swift_project_boxed_opaque_existential_0Tm(&v129, v130);
          v61 = sub_1865071E0();
          v63 = v62;
          if ((sub_186507138() & 1) != 0)
          {
            __swift_project_boxed_opaque_existential_0Tm(&v129, v130);
            v64 = sub_1865071EC();
          }
          else
          {
            v64 = MEMORY[0x1E0DEE9D8];
          }
          v65 = v126;
          v66 = v124;
          v49 = v121;
          v67 = v117;
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v129);
          goto LABEL_24;
        }
        sub_18519F088((uint64_t)&v127, &qword_1EDD83110);
LABEL_21:
        v61 = 0;
        v63 = 0xF000000000000000;
        v64 = MEMORY[0x1E0DEE9D8];
        v65 = v126;
        v66 = v124;
        v67 = v117;
LABEL_24:
        v68 = v49;
        v69 = *(void (**)(char *, char *, uint64_t))(v49 + 16);
        v69(v67, v122, v66);
        if ((*(unsigned int (**)(char *, uint64_t))(v68 + 88))(v67, v66) == *MEMORY[0x1E0DC16C8])
        {
          (*(void (**)(char *, uint64_t))(v68 + 96))(v67, v66);
          v70 = v113;
          v71 = v112;
          v72 = v114;
          (*(void (**)(char *, char *, uint64_t))(v113 + 32))(v112, v67, v114);
          (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v111, v71, v72);
          v73 = objc_allocWithZone((Class)sub_186506E8C());
          v74 = (void *)sub_186506E80();
          v75 = v109;
          objc_msgSend(v109, sel__intelligenceCollectRemoteContentIn_remoteContextWrapper_, v74, a7, a8, a9, a10);

          (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
        }
        else
        {
          v76 = (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v67, v66);
          MEMORY[0x1E0C80A78](v76);
          v75 = v109;
          *(&v104 - 8) = (uint64_t)v109;
          *((CGFloat *)&v104 - 7) = a7;
          *((CGFloat *)&v104 - 6) = a8;
          *((CGFloat *)&v104 - 5) = a9;
          *((CGFloat *)&v104 - 4) = a10;
          *(&v104 - 3) = a1;
          *(&v104 - 2) = (uint64_t)sub_1855B108C;
          *(&v104 - 1) = (uint64_t)v108;
          v77 = sub_186506E14();
          sub_18577C22C(v77);
        }
        v78 = sub_1865070E4();
        v80 = v119;
        if ((v78 & 1) != 0)
        {
          objc_msgSend(v75, sel_bounds);
          v81 = v110;
          v86 = -[UIView _convertRect:toViewInSameWindow:]((uint64_t)v75, v110, v82, v83, v84, v85);
          v79.n128_f64[0] = v116(v81, v86);
        }
        ((void (*)(char *, char *, uint64_t, __n128))v69)(v118, v122, v124, v79);
        sub_186506EE0();
        if ((sub_186507114() & 1) != 0)
        {
          v130 = sub_1851F9080(0, (unint64_t *)&qword_1EDD82CE0);
          *(_QWORD *)&v129 = v75;
          v87 = v75;
          objc_msgSend(v87, sel__intelligenceBaseClass);
          ObjCClassMetadata = swift_getObjCClassMetadata();
          sub_1855B0624(&v129, ObjCClassMetadata);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v129);
          sub_186506F1C();
          v89 = -[UIView __viewDelegate]((id *)v87);
          if (v89)
          {
            v90 = v89;
            v91 = sub_1851F9080(0, &qword_1EDD813C0);
            v130 = v91;
            *(_QWORD *)&v129 = v90;
            v92 = v90;
            sub_1855B0624(&v129, v91);
            __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v129);
            sub_186506F58();

          }
        }
        v93 = sub_18650712C();
        v94 = v107;
        if ((v93 & 1) != 0)
        {
          v95 = _UIGetAccessibilityLabelSafe(v75);
          if (v95)
          {
            v96 = v95;
            sub_1865074F8();

          }
          sub_186506F34();
          v75 = v109;
        }
        if (v63 >> 60 != 15)
        {
          sub_1855B0F54(v61, v63);
          sub_186506F28();
        }
        if (*(_QWORD *)(v64 + 16))
          sub_186506F64();
        else
          swift_bridgeObjectRelease();
        v97 = v123;
        v98 = v125;
        if ((sub_1865070FC() & 1) != 0)
        {
          v99 = objc_msgSend(v75, sel__appEntityIdentifier);
          if (v99)
          {
            v100 = v99;
            sub_1865074F8();

          }
          sub_186506F40();
          v97 = v123;
          v98 = v125;
        }
        if ((sub_1865070F0() & 1) != 0)
        {
          v101 = objc_msgSend(v75, sel__appIntentIdentifier);
          if (v101)
          {
            v102 = v101;
            sub_1865074F8();

          }
          sub_186506F4C();
          v97 = v123;
          v98 = v125;
        }
        if ((sub_186507108() & 1) != 0)
        {
          sub_186507018();
          sub_1855B0EFC(v61, v63);
          (*(void (**)(char *, uint64_t))(v106 + 8))(v80, v94);
          (*(void (**)(char *, uint64_t))(v121 + 8))(v122, v124);
          sub_18519F088(v120, (uint64_t *)&unk_1EDD81EC8);
          v105(v98, v97);
        }
        else
        {
          sub_1855B0EFC(v61, v63);
          (*(void (**)(char *, uint64_t))(v121 + 8))(v122, v124);
          sub_18519F088(v120, (uint64_t *)&unk_1EDD81EC8);
          v105(v98, v97);
          v103 = v106;
          (*(void (**)(uint64_t, char *, uint64_t))(v106 + 32))(v65, v80, v94);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v103 + 56))(v65, 0, 1, v94);
        }
        v42 = v110;
        goto LABEL_8;
      }
    }
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v126, 1, 1, v19);
LABEL_8:
  swift_release();
LABEL_9:

}

uint64_t sub_1855AC1A4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>, CGFloat a5@<D0>, CGFloat a6@<D1>, CGFloat a7@<D2>, CGFloat a8@<D3>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  double v38;
  id v39;
  id v40;
  unsigned __int8 v41;
  uint64_t IsEmpty;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  char *v49;
  char v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  char v54;
  id v55;
  uint64_t KeyPath;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  id v69;
  void *v70;
  id v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  double v77;
  double v78;
  double v79;
  double v80;
  char *v81;
  id v82;
  uint64_t ObjCClassMetadata;
  id *v84;
  id *v85;
  uint64_t v86;
  id *v87;
  id v88;
  void *v89;
  uint64_t v90;
  char *v91;
  id v92;
  void *v93;
  id v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  id v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  uint64_t v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  CGRect v124;

  v114 = a1;
  v117 = a4;
  v14 = sub_186507030();
  v116 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v108 = (char *)&v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_18650703C();
  v105 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v17 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v98 - v19;
  v113 = sub_186507024();
  v110 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v107 = (char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v98 - v23;
  MEMORY[0x1E0C80A78](v25);
  v111 = (char *)&v98 - v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD81EC8);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v98 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v109 = (char *)&v98 - v31;
  v112 = sub_186507144();
  v32 = *(_QWORD *)(v112 - 8);
  MEMORY[0x1E0C80A78](v112);
  v34 = (char *)&v98 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v115 = (char *)&v98 - v36;
  v118 = swift_allocObject();
  *(_QWORD *)(v118 + 16) = a3;
  v37 = a3;
  if ((objc_msgSend(a2, sel_isHidden) & 1) != 0
    || (objc_msgSend(a2, sel_alpha), _UIViewIsFullyTransparentGivenAlpha(v38))
    || (v39 = objc_msgSend(a2, sel_layer),
        v104 = v37,
        v40 = v39,
        v41 = objc_msgSend(v39, sel_disableUpdateMask),
        v40,
        v37 = v104,
        (v41 & 0x10) != 0))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v116 + 56))(v117, 1, 1, v14);

    return swift_release();
  }
  v103 = a2;
  v102 = v14;
  sub_186506E50();
  __swift_project_boxed_opaque_existential_0Tm(&v121, v122);
  sub_186507054();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v121);
  IsEmpty = sub_186507120();
  if ((IsEmpty & 1) == 0
    || (v124.origin.x = a5,
        v124.origin.y = a6,
        v124.size.width = a7,
        v124.size.height = a8,
        IsEmpty = CGRectIsEmpty(v124),
        !(_DWORD)IsEmpty))
  {
    MEMORY[0x1E0C80A78](IsEmpty);
    *(&v98 - 6) = (uint64_t)v103;
    *((CGFloat *)&v98 - 5) = a5;
    *((CGFloat *)&v98 - 4) = a6;
    *((CGFloat *)&v98 - 3) = a7;
    *((CGFloat *)&v98 - 2) = a8;
    *(&v98 - 1) = v114;
    v44 = (uint64_t)v109;
    sub_186506E20();
    sub_18519F0C4(v44, (uint64_t)v29, (uint64_t *)&unk_1EDD81EC8);
    v45 = v110;
    v46 = v113;
    v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v110 + 48))(v29, 1, v113);
    v48 = v102;
    if (v47 == 1)
    {
      sub_18519F088(v44, (uint64_t *)&unk_1EDD81EC8);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v115, v112);
      sub_18519F088((uint64_t)v29, (uint64_t *)&unk_1EDD81EC8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v116 + 56))(v117, 1, 1, v48);
      goto LABEL_49;
    }
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v111, v29, v46);
    v123 = MEMORY[0x1E0DEE9D8];
    v49 = v115;
    v50 = sub_1865070FC();
    v51 = v49;
    v52 = v112;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v34, v51, v112);
    if ((v50 & 1) != 0)
    {
      v53 = *(void (**)(char *, uint64_t))(v32 + 8);
      v53(v34, v52);
    }
    else
    {
      v54 = sub_1865070F0();
      v53 = *(void (**)(char *, uint64_t))(v32 + 8);
      v53(v34, v52);
      if ((v54 & 1) == 0)
      {
        v100 = 0;
        v101 = 0xF000000000000000;
        v99 = MEMORY[0x1E0DEE9D8];
        v60 = v113;
        v61 = v110;
        goto LABEL_18;
      }
    }
    v55 = v103;
    UIView._appIntentsIntelligenceProvider.getter(&v119);
    if (v120)
    {
      sub_1855B0F98(&v119, &v121);
      __swift_project_boxed_opaque_existential_0Tm(&v121, v122);
      objc_msgSend(v55, sel_bounds);
      sub_1865071A4();
      KeyPath = swift_getKeyPath();
      MEMORY[0x1E0C80A78](KeyPath);
      v57 = v118;
      *(&v98 - 4) = (uint64_t)sub_1855B10A0;
      *(&v98 - 3) = v57;
      *(&v98 - 2) = (uint64_t)v55;
      v58 = sub_18650769C();
      swift_release();
      swift_bridgeObjectRelease();
      sub_18577C22C(v58);
      __swift_project_boxed_opaque_existential_0Tm(&v121, v122);
      v100 = sub_1865071E0();
      v101 = v59;
      if ((sub_186507138() & 1) != 0)
      {
        __swift_project_boxed_opaque_existential_0Tm(&v121, v122);
        v99 = sub_1865071EC();
      }
      else
      {
        v99 = MEMORY[0x1E0DEE9D8];
      }
      v60 = v113;
      v61 = v110;
      v44 = (uint64_t)v109;
      v62 = v114;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v121);
      goto LABEL_21;
    }
    sub_18519F088((uint64_t)&v119, &qword_1EDD83110);
    v100 = 0;
    v101 = 0xF000000000000000;
    v99 = MEMORY[0x1E0DEE9D8];
    v60 = v113;
    v61 = v110;
    v44 = (uint64_t)v109;
LABEL_18:
    v62 = v114;
LABEL_21:
    v63 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
    v63(v24, v111, v60);
    if ((*(unsigned int (**)(char *, uint64_t))(v61 + 88))(v24, v60) == *MEMORY[0x1E0DC16C8])
    {
      (*(void (**)(char *, uint64_t))(v61 + 96))(v24, v60);
      v64 = v61;
      v65 = v105;
      v66 = v48;
      v67 = v53;
      v68 = v106;
      (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v20, v24, v106);
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v17, v20, v68);
      v69 = objc_allocWithZone((Class)sub_186506E8C());
      v70 = (void *)sub_186506E80();
      v71 = v103;
      objc_msgSend(v103, sel__intelligenceCollectRemoteContentIn_remoteContextWrapper_, v70, a5, a6, a7, a8);

      v72 = *(void (**)(char *, uint64_t))(v65 + 8);
      v61 = v64;
      v44 = (uint64_t)v109;
      v73 = v68;
      v53 = v67;
      v48 = v66;
      v72(v20, v73);
    }
    else
    {
      v74 = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v24, v60);
      MEMORY[0x1E0C80A78](v74);
      v71 = v103;
      *(&v98 - 8) = (uint64_t)v103;
      *((CGFloat *)&v98 - 7) = a5;
      *((CGFloat *)&v98 - 6) = a6;
      *((CGFloat *)&v98 - 5) = a7;
      *((CGFloat *)&v98 - 4) = a8;
      *(&v98 - 3) = v62;
      *(&v98 - 2) = (uint64_t)sub_1855B10A0;
      *(&v98 - 1) = v118;
      v75 = sub_186506E14();
      sub_18577C22C(v75);
    }
    if ((sub_1865070E4() & 1) != 0)
    {
      objc_msgSend(v71, sel_bounds);
      v76.n128_f64[0] = -[UIView _convertRect:toViewInSameWindow:]((uint64_t)v71, v104, v77, v78, v79, v80);
    }
    ((void (*)(char *, char *, uint64_t, __n128))v63)(v107, v111, v113, v76);
    v81 = v108;
    sub_186506EE0();
    if ((sub_186507114() & 1) != 0)
    {
      v122 = sub_1851F9080(0, (unint64_t *)&qword_1EDD82CE0);
      *(_QWORD *)&v121 = v71;
      v82 = v71;
      objc_msgSend(v82, sel__intelligenceBaseClass);
      ObjCClassMetadata = swift_getObjCClassMetadata();
      sub_1855B0624(&v121, ObjCClassMetadata);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v121);
      sub_186506F1C();
      v84 = -[UIView __viewDelegate]((id *)v82);
      if (v84)
      {
        v85 = v84;
        v86 = sub_1851F9080(0, &qword_1EDD813C0);
        v122 = v86;
        *(_QWORD *)&v121 = v85;
        v87 = v85;
        sub_1855B0624(&v121, v86);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v121);
        sub_186506F58();

      }
    }
    if ((sub_18650712C() & 1) != 0)
    {
      v88 = _UIGetAccessibilityLabelSafe(v71);
      if (v88)
      {
        v89 = v88;
        sub_1865074F8();

      }
      sub_186506F34();
      v61 = v110;
    }
    if (v101 >> 60 != 15)
    {
      sub_1855B0F54(v100, v101);
      sub_186506F28();
    }
    if (*(_QWORD *)(v99 + 16))
      sub_186506F64();
    else
      swift_bridgeObjectRelease();
    v90 = v112;
    v91 = v115;
    if ((sub_1865070FC() & 1) != 0)
    {
      v92 = objc_msgSend(v71, sel__appEntityIdentifier);
      if (v92)
      {
        v93 = v92;
        sub_1865074F8();

      }
      sub_186506F40();
      v90 = v112;
      v91 = v115;
    }
    if ((sub_1865070F0() & 1) != 0)
    {
      v94 = objc_msgSend(v71, sel__appIntentIdentifier);
      if (v94)
      {
        v95 = v94;
        sub_1865074F8();

      }
      sub_186506F4C();
      v90 = v112;
      v91 = v115;
    }
    if ((sub_186507108() & 1) != 0)
    {
      sub_186507018();
      sub_1855B0EFC(v100, v101);
      (*(void (**)(char *, uint64_t))(v116 + 8))(v81, v48);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v111, v113);
      sub_18519F088(v44, (uint64_t *)&unk_1EDD81EC8);
      v53(v91, v90);
    }
    else
    {
      sub_1855B0EFC(v100, v101);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v111, v113);
      sub_18519F088(v44, (uint64_t *)&unk_1EDD81EC8);
      v53(v91, v90);
      v97 = v116;
      v96 = v117;
      (*(void (**)(uint64_t, char *, uint64_t))(v116 + 32))(v117, v81, v48);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v97 + 56))(v96, 0, 1, v48);
    }
    goto LABEL_49;
  }
  (*(void (**)(char *, uint64_t))(v32 + 8))(v115, v112);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v116 + 56))(v117, 1, 1, v102);
LABEL_49:

  return swift_release();
}

uint64_t sub_1855ACEDC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>, CGFloat a5@<D0>, CGFloat a6@<D1>, CGFloat a7@<D2>, CGFloat a8@<D3>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  double v38;
  id v39;
  id v40;
  unsigned __int8 v41;
  uint64_t IsEmpty;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  char *v49;
  char v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  char v54;
  id v55;
  uint64_t KeyPath;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  id v69;
  void *v70;
  id v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  double v77;
  double v78;
  double v79;
  double v80;
  char *v81;
  id v82;
  uint64_t ObjCClassMetadata;
  id *v84;
  id *v85;
  uint64_t v86;
  id *v87;
  id v88;
  void *v89;
  uint64_t v90;
  char *v91;
  id v92;
  void *v93;
  id v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  id v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  uint64_t v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  CGRect v124;

  v114 = a1;
  v117 = a4;
  v14 = sub_186507030();
  v116 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v108 = (char *)&v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_18650703C();
  v105 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v17 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v98 - v19;
  v113 = sub_186507024();
  v110 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v107 = (char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v98 - v23;
  MEMORY[0x1E0C80A78](v25);
  v111 = (char *)&v98 - v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD81EC8);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v98 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v109 = (char *)&v98 - v31;
  v112 = sub_186507144();
  v32 = *(_QWORD *)(v112 - 8);
  MEMORY[0x1E0C80A78](v112);
  v34 = (char *)&v98 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v35);
  v115 = (char *)&v98 - v36;
  v118 = swift_allocObject();
  *(_QWORD *)(v118 + 16) = a3;
  v37 = a3;
  if ((objc_msgSend(a2, sel_isHidden) & 1) != 0
    || (objc_msgSend(a2, sel_alpha), _UIViewIsFullyTransparentGivenAlpha(v38))
    || (v39 = objc_msgSend(a2, sel_layer),
        v104 = v37,
        v40 = v39,
        v41 = objc_msgSend(v39, sel_disableUpdateMask),
        v40,
        v37 = v104,
        (v41 & 0x10) != 0))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v116 + 56))(v117, 1, 1, v14);

    return swift_release();
  }
  v103 = a2;
  v102 = v14;
  sub_186506E50();
  __swift_project_boxed_opaque_existential_0Tm(&v121, v122);
  sub_186507054();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v121);
  IsEmpty = sub_186507120();
  if ((IsEmpty & 1) == 0
    || (v124.origin.x = a5,
        v124.origin.y = a6,
        v124.size.width = a7,
        v124.size.height = a8,
        IsEmpty = CGRectIsEmpty(v124),
        !(_DWORD)IsEmpty))
  {
    MEMORY[0x1E0C80A78](IsEmpty);
    *(&v98 - 6) = (uint64_t)v103;
    *((CGFloat *)&v98 - 5) = a5;
    *((CGFloat *)&v98 - 4) = a6;
    *((CGFloat *)&v98 - 3) = a7;
    *((CGFloat *)&v98 - 2) = a8;
    *(&v98 - 1) = v114;
    v44 = (uint64_t)v109;
    sub_186506E20();
    sub_18519F0C4(v44, (uint64_t)v29, (uint64_t *)&unk_1EDD81EC8);
    v45 = v110;
    v46 = v113;
    v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v110 + 48))(v29, 1, v113);
    v48 = v102;
    if (v47 == 1)
    {
      sub_18519F088(v44, (uint64_t *)&unk_1EDD81EC8);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v115, v112);
      sub_18519F088((uint64_t)v29, (uint64_t *)&unk_1EDD81EC8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v116 + 56))(v117, 1, 1, v48);
      goto LABEL_49;
    }
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v111, v29, v46);
    v123 = MEMORY[0x1E0DEE9D8];
    v49 = v115;
    v50 = sub_1865070FC();
    v51 = v49;
    v52 = v112;
    (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v34, v51, v112);
    if ((v50 & 1) != 0)
    {
      v53 = *(void (**)(char *, uint64_t))(v32 + 8);
      v53(v34, v52);
    }
    else
    {
      v54 = sub_1865070F0();
      v53 = *(void (**)(char *, uint64_t))(v32 + 8);
      v53(v34, v52);
      if ((v54 & 1) == 0)
      {
        v100 = 0;
        v101 = 0xF000000000000000;
        v99 = MEMORY[0x1E0DEE9D8];
        v60 = v113;
        v61 = v110;
        goto LABEL_18;
      }
    }
    v55 = v103;
    UIView._appIntentsIntelligenceProvider.getter(&v119);
    if (v120)
    {
      sub_1855B0F98(&v119, &v121);
      __swift_project_boxed_opaque_existential_0Tm(&v121, v122);
      objc_msgSend(v55, sel_bounds);
      sub_1865071A4();
      KeyPath = swift_getKeyPath();
      MEMORY[0x1E0C80A78](KeyPath);
      v57 = v118;
      *(&v98 - 4) = (uint64_t)sub_1855B105C;
      *(&v98 - 3) = v57;
      *(&v98 - 2) = (uint64_t)v55;
      v58 = sub_18650769C();
      swift_release();
      swift_bridgeObjectRelease();
      sub_18577C22C(v58);
      __swift_project_boxed_opaque_existential_0Tm(&v121, v122);
      v100 = sub_1865071E0();
      v101 = v59;
      if ((sub_186507138() & 1) != 0)
      {
        __swift_project_boxed_opaque_existential_0Tm(&v121, v122);
        v99 = sub_1865071EC();
      }
      else
      {
        v99 = MEMORY[0x1E0DEE9D8];
      }
      v60 = v113;
      v61 = v110;
      v44 = (uint64_t)v109;
      v62 = v114;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v121);
      goto LABEL_21;
    }
    sub_18519F088((uint64_t)&v119, &qword_1EDD83110);
    v100 = 0;
    v101 = 0xF000000000000000;
    v99 = MEMORY[0x1E0DEE9D8];
    v60 = v113;
    v61 = v110;
    v44 = (uint64_t)v109;
LABEL_18:
    v62 = v114;
LABEL_21:
    v63 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
    v63(v24, v111, v60);
    if ((*(unsigned int (**)(char *, uint64_t))(v61 + 88))(v24, v60) == *MEMORY[0x1E0DC16C8])
    {
      (*(void (**)(char *, uint64_t))(v61 + 96))(v24, v60);
      v64 = v61;
      v65 = v105;
      v66 = v48;
      v67 = v53;
      v68 = v106;
      (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v20, v24, v106);
      (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v17, v20, v68);
      v69 = objc_allocWithZone((Class)sub_186506E8C());
      v70 = (void *)sub_186506E80();
      v71 = v103;
      objc_msgSend(v103, sel__intelligenceCollectRemoteContentIn_remoteContextWrapper_, v70, a5, a6, a7, a8);

      v72 = *(void (**)(char *, uint64_t))(v65 + 8);
      v61 = v64;
      v44 = (uint64_t)v109;
      v73 = v68;
      v53 = v67;
      v48 = v66;
      v72(v20, v73);
    }
    else
    {
      v74 = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v24, v60);
      MEMORY[0x1E0C80A78](v74);
      v71 = v103;
      *(&v98 - 8) = (uint64_t)v103;
      *((CGFloat *)&v98 - 7) = a5;
      *((CGFloat *)&v98 - 6) = a6;
      *((CGFloat *)&v98 - 5) = a7;
      *((CGFloat *)&v98 - 4) = a8;
      *(&v98 - 3) = v62;
      *(&v98 - 2) = (uint64_t)sub_1855B105C;
      *(&v98 - 1) = v118;
      v75 = sub_186506E14();
      sub_18577C22C(v75);
    }
    if ((sub_1865070E4() & 1) != 0)
    {
      objc_msgSend(v71, sel_bounds);
      v76.n128_f64[0] = -[UIView _convertRect:toViewInSameWindow:]((uint64_t)v71, v104, v77, v78, v79, v80);
    }
    ((void (*)(char *, char *, uint64_t, __n128))v63)(v107, v111, v113, v76);
    v81 = v108;
    sub_186506EE0();
    if ((sub_186507114() & 1) != 0)
    {
      v122 = sub_1851F9080(0, (unint64_t *)&qword_1EDD82CE0);
      *(_QWORD *)&v121 = v71;
      v82 = v71;
      objc_msgSend(v82, sel__intelligenceBaseClass);
      ObjCClassMetadata = swift_getObjCClassMetadata();
      sub_1855B0624(&v121, ObjCClassMetadata);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v121);
      sub_186506F1C();
      v84 = -[UIView __viewDelegate]((id *)v82);
      if (v84)
      {
        v85 = v84;
        v86 = sub_1851F9080(0, &qword_1EDD813C0);
        v122 = v86;
        *(_QWORD *)&v121 = v85;
        v87 = v85;
        sub_1855B0624(&v121, v86);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v121);
        sub_186506F58();

      }
    }
    if ((sub_18650712C() & 1) != 0)
    {
      v88 = _UIGetAccessibilityLabelSafe(v71);
      if (v88)
      {
        v89 = v88;
        sub_1865074F8();

      }
      sub_186506F34();
      v61 = v110;
    }
    if (v101 >> 60 != 15)
    {
      sub_1855B0F54(v100, v101);
      sub_186506F28();
    }
    if (*(_QWORD *)(v99 + 16))
      sub_186506F64();
    else
      swift_bridgeObjectRelease();
    v90 = v112;
    v91 = v115;
    if ((sub_1865070FC() & 1) != 0)
    {
      v92 = objc_msgSend(v71, sel__appEntityIdentifier);
      if (v92)
      {
        v93 = v92;
        sub_1865074F8();

      }
      sub_186506F40();
      v90 = v112;
      v91 = v115;
    }
    if ((sub_1865070F0() & 1) != 0)
    {
      v94 = objc_msgSend(v71, sel__appIntentIdentifier);
      if (v94)
      {
        v95 = v94;
        sub_1865074F8();

      }
      sub_186506F4C();
      v90 = v112;
      v91 = v115;
    }
    if ((sub_186507108() & 1) != 0)
    {
      sub_186507018();
      sub_1855B0EFC(v100, v101);
      (*(void (**)(char *, uint64_t))(v116 + 8))(v81, v48);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v111, v113);
      sub_18519F088(v44, (uint64_t *)&unk_1EDD81EC8);
      v53(v91, v90);
    }
    else
    {
      sub_1855B0EFC(v100, v101);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v111, v113);
      sub_18519F088(v44, (uint64_t *)&unk_1EDD81EC8);
      v53(v91, v90);
      v97 = v116;
      v96 = v117;
      (*(void (**)(uint64_t, char *, uint64_t))(v116 + 32))(v117, v81, v48);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v97 + 56))(v96, 0, 1, v48);
    }
    goto LABEL_49;
  }
  (*(void (**)(char *, uint64_t))(v32 + 8))(v115, v112);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v116 + 56))(v117, 1, 1, v102);
LABEL_49:

  return swift_release();
}

uint64_t sub_1855ADC14@<X0>(void (*a1)(char *, uint64_t)@<X0>, void *a2@<X1>, uint64_t a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>, CGFloat a6@<D2>, CGFloat a7@<D3>, CGFloat a8@<D4>, CGFloat a9@<D5>)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  id v41;
  id v42;
  unsigned __int8 v43;
  uint64_t IsEmpty;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  char *v51;
  char v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  char v56;
  void (*v57)(char *, uint64_t);
  uint64_t KeyPath;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  void (*v75)(char *, uint64_t);
  void (*v76)(char *, uint64_t);
  char *v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  __n128 v83;
  __n128 v84;
  __n128 v85;
  char *v86;
  void (*v87)(char *, uint64_t);
  uint64_t ObjCClassMetadata;
  id *v89;
  id *v90;
  uint64_t v91;
  id *v92;
  id v93;
  void *v94;
  uint64_t v95;
  char *v96;
  id v97;
  void *v98;
  id v99;
  void *v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t);
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t);
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(char *, uint64_t);
  char *v120;
  __int128 v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  CGRect v126;
  CGRect v127;

  v119 = a1;
  v17 = sub_186507030();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v113 = (char *)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_18650703C();
  v110 = *(_QWORD *)(v111 - 8);
  MEMORY[0x1E0C80A78](v111);
  v108 = (char *)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v109 = (char *)&v102 - v22;
  v118 = sub_186507024();
  v115 = *(_QWORD *)(v118 - 8);
  MEMORY[0x1E0C80A78](v118);
  v112 = (char *)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v102 - v25;
  MEMORY[0x1E0C80A78](v27);
  v116 = (char *)&v102 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD81EC8);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v102 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v114 = (uint64_t)&v102 - v33;
  v117 = sub_186507144();
  v34 = *(_QWORD *)(v117 - 8);
  MEMORY[0x1E0C80A78](v117);
  v36 = (char *)&v102 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  v120 = (char *)&v102 - v38;
  v39 = swift_allocObject();
  *(CGFloat *)(v39 + 16) = a8;
  *(CGFloat *)(v39 + 24) = a9;
  if ((objc_msgSend(a2, sel_isHidden) & 1) != 0
    || (objc_msgSend(a2, sel_alpha), _UIViewIsFullyTransparentGivenAlpha(v40))
    || (v41 = objc_msgSend(a2, sel_layer),
        v107 = a3,
        v42 = v41,
        v43 = objc_msgSend(v41, sel_disableUpdateMask),
        v42,
        a3 = v107,
        (v43 & 0x10) != 0))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(a3, 1, 1, v17);
    return swift_release();
  }
  v106 = (void (*)(char *, uint64_t))a2;
  v105 = v17;
  sub_186506E50();
  __swift_project_boxed_opaque_existential_0Tm(&v123, v124);
  sub_186507054();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v123);
  IsEmpty = sub_186507120();
  if ((IsEmpty & 1) == 0
    || (v126.origin.x = a4,
        v126.origin.y = a5,
        v126.size.width = a6,
        v126.size.height = a7,
        IsEmpty = CGRectIsEmpty(v126),
        !(_DWORD)IsEmpty))
  {
    MEMORY[0x1E0C80A78](IsEmpty);
    *(&v102 - 6) = v106;
    *((CGFloat *)&v102 - 5) = a4;
    *((CGFloat *)&v102 - 4) = a5;
    *((CGFloat *)&v102 - 3) = a6;
    *((CGFloat *)&v102 - 2) = a7;
    *(&v102 - 1) = v119;
    v46 = v114;
    sub_186506E20();
    sub_18519F0C4(v46, (uint64_t)v31, (uint64_t *)&unk_1EDD81EC8);
    v47 = v115;
    v48 = v118;
    v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 48))(v31, 1, v118);
    v50 = v105;
    if (v49 == 1)
    {
      sub_18519F088(v46, (uint64_t *)&unk_1EDD81EC8);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v120, v117);
      sub_18519F088((uint64_t)v31, (uint64_t *)&unk_1EDD81EC8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v107, 1, 1, v50);
      return swift_release();
    }
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v116, v31, v48);
    v125 = MEMORY[0x1E0DEE9D8];
    v51 = v120;
    v52 = sub_1865070FC();
    v53 = v51;
    v54 = v117;
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v36, v53, v117);
    if ((v52 & 1) != 0)
    {
      v55 = *(void (**)(char *, uint64_t))(v34 + 8);
      v55(v36, v54);
    }
    else
    {
      v56 = sub_1865070F0();
      v55 = *(void (**)(char *, uint64_t))(v34 + 8);
      v55(v36, v54);
      if ((v56 & 1) == 0)
      {
        v102 = v55;
        goto LABEL_18;
      }
    }
    v57 = v106;
    UIView._appIntentsIntelligenceProvider.getter(&v121);
    v102 = v55;
    if (v122)
    {
      sub_1855B0F98(&v121, &v123);
      __swift_project_boxed_opaque_existential_0Tm(&v123, v124);
      objc_msgSend(v57, sel_bounds);
      sub_1865071A4();
      KeyPath = swift_getKeyPath();
      MEMORY[0x1E0C80A78](KeyPath);
      *(&v102 - 4) = (void (*)(char *, uint64_t))sub_1855B0EEC;
      *(&v102 - 3) = (void (*)(char *, uint64_t))v39;
      *(&v102 - 2) = v57;
      v59 = sub_18650769C();
      swift_release();
      swift_bridgeObjectRelease();
      sub_18577C22C(v59);
      __swift_project_boxed_opaque_existential_0Tm(&v123, v124);
      v103 = sub_1865071E0();
      v104 = v60;
      if ((sub_186507138() & 1) != 0)
      {
        __swift_project_boxed_opaque_existential_0Tm(&v123, v124);
        v61 = sub_1865071EC();
      }
      else
      {
        v61 = MEMORY[0x1E0DEE9D8];
      }
      v62 = v18;
      v63 = v118;
      v64 = v115;
      v65 = v119;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v123);
      goto LABEL_21;
    }
    sub_18519F088((uint64_t)&v121, &qword_1EDD83110);
LABEL_18:
    v103 = 0;
    v104 = 0xF000000000000000;
    v61 = MEMORY[0x1E0DEE9D8];
    v62 = v18;
    v63 = v118;
    v64 = v115;
    v65 = v119;
LABEL_21:
    v66 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    v66(v26, v116, v63);
    if ((*(unsigned int (**)(char *, uint64_t))(v64 + 88))(v26, v63) == *MEMORY[0x1E0DC16C8])
    {
      (*(void (**)(char *, uint64_t))(v64 + 96))(v26, v63);
      v67 = v50;
      v68 = v110;
      v69 = v109;
      v70 = v61;
      v71 = v62;
      v72 = v111;
      (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v109, v26, v111);
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v108, v69, v72);
      v73 = objc_allocWithZone((Class)sub_186506E8C());
      v74 = (void *)sub_186506E80();
      v75 = v106;
      objc_msgSend(v106, sel__intelligenceCollectRemoteContentIn_remoteContextWrapper_, v74, a4, a5, a6, a7);

      v76 = *(void (**)(char *, uint64_t))(v68 + 8);
      v50 = v67;
      v77 = v69;
      v64 = v115;
      v78 = v72;
      v62 = v71;
      v61 = v70;
      v79 = v75;
      v76(v77, v78);
    }
    else
    {
      v80 = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v26, v63);
      MEMORY[0x1E0C80A78](v80);
      v79 = v106;
      *(&v102 - 8) = v106;
      *((CGFloat *)&v102 - 7) = a4;
      *((CGFloat *)&v102 - 6) = a5;
      *((CGFloat *)&v102 - 5) = a6;
      *((CGFloat *)&v102 - 4) = a7;
      *(&v102 - 3) = v65;
      *(&v102 - 2) = (void (*)(char *, uint64_t))sub_1855B0EEC;
      *(&v102 - 1) = (void (*)(char *, uint64_t))v39;
      v81 = sub_186506E14();
      sub_18577C22C(v81);
    }
    if ((sub_1865070E4() & 1) != 0)
    {
      objc_msgSend(v79, sel_bounds);
      *(CGRect *)v82.n128_u64 = CGRectOffset(v127, a8, a9);
    }
    ((void (*)(char *, char *, uint64_t, __n128, __n128, __n128, __n128))v66)(v112, v116, v118, v82, v83, v84, v85);
    v86 = v113;
    sub_186506EE0();
    if ((sub_186507114() & 1) != 0)
    {
      v124 = sub_1851F9080(0, (unint64_t *)&qword_1EDD82CE0);
      *(_QWORD *)&v123 = v79;
      v87 = v79;
      objc_msgSend(v87, sel__intelligenceBaseClass);
      ObjCClassMetadata = swift_getObjCClassMetadata();
      sub_1855B0624(&v123, ObjCClassMetadata);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v123);
      sub_186506F1C();
      v89 = -[UIView __viewDelegate]((id *)v87);
      if (v89)
      {
        v90 = v89;
        v91 = sub_1851F9080(0, &qword_1EDD813C0);
        v124 = v91;
        *(_QWORD *)&v123 = v90;
        v92 = v90;
        sub_1855B0624(&v123, v91);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v123);
        sub_186506F58();

      }
    }
    if ((sub_18650712C() & 1) != 0)
    {
      v93 = _UIGetAccessibilityLabelSafe(v79);
      if (v93)
      {
        v94 = v93;
        sub_1865074F8();

      }
      sub_186506F34();
      v64 = v115;
    }
    if (v104 >> 60 != 15)
    {
      sub_1855B0F54(v103, v104);
      sub_186506F28();
    }
    if (*(_QWORD *)(v61 + 16))
      sub_186506F64();
    else
      swift_bridgeObjectRelease();
    v95 = v117;
    v96 = v120;
    if ((sub_1865070FC() & 1) != 0)
    {
      v97 = objc_msgSend(v79, sel__appEntityIdentifier);
      if (v97)
      {
        v98 = v97;
        sub_1865074F8();

      }
      sub_186506F40();
      v95 = v117;
      v96 = v120;
    }
    if ((sub_1865070F0() & 1) != 0)
    {
      v99 = objc_msgSend(v79, sel__appIntentIdentifier);
      if (v99)
      {
        v100 = v99;
        sub_1865074F8();

      }
      sub_186506F4C();
      v95 = v117;
      v96 = v120;
    }
    if ((sub_186507108() & 1) != 0)
    {
      sub_186507018();
      sub_1855B0EFC(v103, v104);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v86, v50);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v116, v118);
      sub_18519F088(v114, (uint64_t *)&unk_1EDD81EC8);
      v102(v96, v95);
    }
    else
    {
      sub_1855B0EFC(v103, v104);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v116, v118);
      sub_18519F088(v114, (uint64_t *)&unk_1EDD81EC8);
      v102(v96, v95);
      v101 = v107;
      (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v107, v86, v50);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v62 + 56))(v101, 0, 1, v50);
    }
    return swift_release();
  }
  (*(void (**)(char *, uint64_t))(v34 + 8))(v120, v117);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v107, 1, 1, v105);
  return swift_release();
}

uint64_t sub_1855AE8F0@<X0>(void (*a1)(char *, uint64_t)@<X0>, void *a2@<X1>, uint64_t a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>, CGFloat a6@<D2>, CGFloat a7@<D3>, CGFloat a8@<D4>, CGFloat a9@<D5>)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  id v41;
  id v42;
  unsigned __int8 v43;
  uint64_t IsEmpty;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  char *v51;
  char v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  char v56;
  void (*v57)(char *, uint64_t);
  uint64_t KeyPath;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  void *v74;
  void (*v75)(char *, uint64_t);
  void (*v76)(char *, uint64_t);
  char *v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  __n128 v82;
  __n128 v83;
  __n128 v84;
  __n128 v85;
  char *v86;
  void (*v87)(char *, uint64_t);
  uint64_t ObjCClassMetadata;
  id *v89;
  id *v90;
  uint64_t v91;
  id *v92;
  id v93;
  void *v94;
  uint64_t v95;
  char *v96;
  id v97;
  void *v98;
  id v99;
  void *v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t);
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t);
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(char *, uint64_t);
  char *v120;
  __int128 v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  CGRect v126;
  CGRect v127;

  v119 = a1;
  v17 = sub_186507030();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v113 = (char *)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = sub_18650703C();
  v110 = *(_QWORD *)(v111 - 8);
  MEMORY[0x1E0C80A78](v111);
  v108 = (char *)&v102 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v109 = (char *)&v102 - v22;
  v118 = sub_186507024();
  v115 = *(_QWORD *)(v118 - 8);
  MEMORY[0x1E0C80A78](v118);
  v112 = (char *)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v102 - v25;
  MEMORY[0x1E0C80A78](v27);
  v116 = (char *)&v102 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD81EC8);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v102 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v32);
  v114 = (uint64_t)&v102 - v33;
  v117 = sub_186507144();
  v34 = *(_QWORD *)(v117 - 8);
  MEMORY[0x1E0C80A78](v117);
  v36 = (char *)&v102 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  v120 = (char *)&v102 - v38;
  v39 = swift_allocObject();
  *(CGFloat *)(v39 + 16) = a8;
  *(CGFloat *)(v39 + 24) = a9;
  if ((objc_msgSend(a2, sel_isHidden) & 1) != 0
    || (objc_msgSend(a2, sel_alpha), _UIViewIsFullyTransparentGivenAlpha(v40))
    || (v41 = objc_msgSend(a2, sel_layer),
        v107 = a3,
        v42 = v41,
        v43 = objc_msgSend(v41, sel_disableUpdateMask),
        v42,
        a3 = v107,
        (v43 & 0x10) != 0))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(a3, 1, 1, v17);
    return swift_release();
  }
  v106 = (void (*)(char *, uint64_t))a2;
  v105 = v17;
  sub_186506E50();
  __swift_project_boxed_opaque_existential_0Tm(&v123, v124);
  sub_186507054();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v123);
  IsEmpty = sub_186507120();
  if ((IsEmpty & 1) == 0
    || (v126.origin.x = a4,
        v126.origin.y = a5,
        v126.size.width = a6,
        v126.size.height = a7,
        IsEmpty = CGRectIsEmpty(v126),
        !(_DWORD)IsEmpty))
  {
    MEMORY[0x1E0C80A78](IsEmpty);
    *(&v102 - 6) = v106;
    *((CGFloat *)&v102 - 5) = a4;
    *((CGFloat *)&v102 - 4) = a5;
    *((CGFloat *)&v102 - 3) = a6;
    *((CGFloat *)&v102 - 2) = a7;
    *(&v102 - 1) = v119;
    v46 = v114;
    sub_186506E20();
    sub_18519F0C4(v46, (uint64_t)v31, (uint64_t *)&unk_1EDD81EC8);
    v47 = v115;
    v48 = v118;
    v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v115 + 48))(v31, 1, v118);
    v50 = v105;
    if (v49 == 1)
    {
      sub_18519F088(v46, (uint64_t *)&unk_1EDD81EC8);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v120, v117);
      sub_18519F088((uint64_t)v31, (uint64_t *)&unk_1EDD81EC8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v107, 1, 1, v50);
      return swift_release();
    }
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v116, v31, v48);
    v125 = MEMORY[0x1E0DEE9D8];
    v51 = v120;
    v52 = sub_1865070FC();
    v53 = v51;
    v54 = v117;
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v36, v53, v117);
    if ((v52 & 1) != 0)
    {
      v55 = *(void (**)(char *, uint64_t))(v34 + 8);
      v55(v36, v54);
    }
    else
    {
      v56 = sub_1865070F0();
      v55 = *(void (**)(char *, uint64_t))(v34 + 8);
      v55(v36, v54);
      if ((v56 & 1) == 0)
      {
        v102 = v55;
        goto LABEL_18;
      }
    }
    v57 = v106;
    UIView._appIntentsIntelligenceProvider.getter(&v121);
    v102 = v55;
    if (v122)
    {
      sub_1855B0F98(&v121, &v123);
      __swift_project_boxed_opaque_existential_0Tm(&v123, v124);
      objc_msgSend(v57, sel_bounds);
      sub_1865071A4();
      KeyPath = swift_getKeyPath();
      MEMORY[0x1E0C80A78](KeyPath);
      *(&v102 - 4) = (void (*)(char *, uint64_t))sub_1855B0EEC;
      *(&v102 - 3) = (void (*)(char *, uint64_t))v39;
      *(&v102 - 2) = v57;
      v59 = sub_18650769C();
      swift_release();
      swift_bridgeObjectRelease();
      sub_18577C22C(v59);
      __swift_project_boxed_opaque_existential_0Tm(&v123, v124);
      v103 = sub_1865071E0();
      v104 = v60;
      if ((sub_186507138() & 1) != 0)
      {
        __swift_project_boxed_opaque_existential_0Tm(&v123, v124);
        v61 = sub_1865071EC();
      }
      else
      {
        v61 = MEMORY[0x1E0DEE9D8];
      }
      v62 = v18;
      v63 = v118;
      v64 = v115;
      v65 = v119;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v123);
      goto LABEL_21;
    }
    sub_18519F088((uint64_t)&v121, &qword_1EDD83110);
LABEL_18:
    v103 = 0;
    v104 = 0xF000000000000000;
    v61 = MEMORY[0x1E0DEE9D8];
    v62 = v18;
    v63 = v118;
    v64 = v115;
    v65 = v119;
LABEL_21:
    v66 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    v66(v26, v116, v63);
    if ((*(unsigned int (**)(char *, uint64_t))(v64 + 88))(v26, v63) == *MEMORY[0x1E0DC16C8])
    {
      (*(void (**)(char *, uint64_t))(v64 + 96))(v26, v63);
      v67 = v50;
      v68 = v110;
      v69 = v109;
      v70 = v61;
      v71 = v62;
      v72 = v111;
      (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v109, v26, v111);
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v108, v69, v72);
      v73 = objc_allocWithZone((Class)sub_186506E8C());
      v74 = (void *)sub_186506E80();
      v75 = v106;
      objc_msgSend(v106, sel__intelligenceCollectRemoteContentIn_remoteContextWrapper_, v74, a4, a5, a6, a7);

      v76 = *(void (**)(char *, uint64_t))(v68 + 8);
      v50 = v67;
      v77 = v69;
      v64 = v115;
      v78 = v72;
      v62 = v71;
      v61 = v70;
      v79 = v75;
      v76(v77, v78);
    }
    else
    {
      v80 = (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v26, v63);
      MEMORY[0x1E0C80A78](v80);
      v79 = v106;
      *(&v102 - 8) = v106;
      *((CGFloat *)&v102 - 7) = a4;
      *((CGFloat *)&v102 - 6) = a5;
      *((CGFloat *)&v102 - 5) = a6;
      *((CGFloat *)&v102 - 4) = a7;
      *(&v102 - 3) = v65;
      *(&v102 - 2) = (void (*)(char *, uint64_t))sub_1855B0EEC;
      *(&v102 - 1) = (void (*)(char *, uint64_t))v39;
      v81 = sub_186506E14();
      sub_18577C22C(v81);
    }
    if ((sub_1865070E4() & 1) != 0)
    {
      objc_msgSend(v79, sel_bounds);
      *(CGRect *)v82.n128_u64 = CGRectOffset(v127, a8, a9);
    }
    ((void (*)(char *, char *, uint64_t, __n128, __n128, __n128, __n128))v66)(v112, v116, v118, v82, v83, v84, v85);
    v86 = v113;
    sub_186506EE0();
    if ((sub_186507114() & 1) != 0)
    {
      v124 = sub_1851F9080(0, (unint64_t *)&qword_1EDD82CE0);
      *(_QWORD *)&v123 = v79;
      v87 = v79;
      objc_msgSend(v87, sel__intelligenceBaseClass);
      ObjCClassMetadata = swift_getObjCClassMetadata();
      sub_1855B0624(&v123, ObjCClassMetadata);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v123);
      sub_186506F1C();
      v89 = -[UIView __viewDelegate]((id *)v87);
      if (v89)
      {
        v90 = v89;
        v91 = sub_1851F9080(0, &qword_1EDD813C0);
        v124 = v91;
        *(_QWORD *)&v123 = v90;
        v92 = v90;
        sub_1855B0624(&v123, v91);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v123);
        sub_186506F58();

      }
    }
    if ((sub_18650712C() & 1) != 0)
    {
      v93 = _UIGetAccessibilityLabelSafe(v79);
      if (v93)
      {
        v94 = v93;
        sub_1865074F8();

      }
      sub_186506F34();
      v64 = v115;
    }
    if (v104 >> 60 != 15)
    {
      sub_1855B0F54(v103, v104);
      sub_186506F28();
    }
    if (*(_QWORD *)(v61 + 16))
      sub_186506F64();
    else
      swift_bridgeObjectRelease();
    v95 = v117;
    v96 = v120;
    if ((sub_1865070FC() & 1) != 0)
    {
      v97 = objc_msgSend(v79, sel__appEntityIdentifier);
      if (v97)
      {
        v98 = v97;
        sub_1865074F8();

      }
      sub_186506F40();
      v95 = v117;
      v96 = v120;
    }
    if ((sub_1865070F0() & 1) != 0)
    {
      v99 = objc_msgSend(v79, sel__appIntentIdentifier);
      if (v99)
      {
        v100 = v99;
        sub_1865074F8();

      }
      sub_186506F4C();
      v95 = v117;
      v96 = v120;
    }
    if ((sub_186507108() & 1) != 0)
    {
      sub_186507018();
      sub_1855B0EFC(v103, v104);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v86, v50);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v116, v118);
      sub_18519F088(v114, (uint64_t *)&unk_1EDD81EC8);
      v102(v96, v95);
    }
    else
    {
      sub_1855B0EFC(v103, v104);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v116, v118);
      sub_18519F088(v114, (uint64_t *)&unk_1EDD81EC8);
      v102(v96, v95);
      v101 = v107;
      (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v107, v86, v50);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v62 + 56))(v101, 0, 1, v50);
    }
    return swift_release();
  }
  (*(void (**)(char *, uint64_t))(v34 + 8))(v120, v117);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(v107, 1, 1, v105);
  return swift_release();
}

uint64_t UIView._intelligenceCollectRemoteContent(in:remoteContextWrapper:)(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  uint64_t v21[5];

  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD81BF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_186507030();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v21[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1865071D4();
  sub_1865071C8();
  sub_1865071BC();
  swift_release();
  v21[3] = sub_18650703C();
  v21[4] = MEMORY[0x1E0DC1700];
  __swift_allocate_boxed_opaque_existential_0(v21);
  sub_186506E74();
  v16 = objc_allocWithZone((Class)sub_186506E68());
  v17 = (void *)sub_186506E5C();
  v18 = v4;
  sub_1855AC1A4((uint64_t)v17, v18, v18, (uint64_t)v11, a1, a2, a3, a4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {

    sub_18519F088((uint64_t)v11, (uint64_t *)&unk_1EDD81BF0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    sub_186507150();

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }

  sub_1865071C8();
  sub_1865071B0();
  swift_release();
  return swift_release();
}

double UIView._appIntentsIntelligenceProvider.getter@<D0>(_OWORD *a1@<X8>)
{
  void *v1;
  double result;
  _OWORD v4[2];
  _BYTE v5[24];
  uint64_t v6;

  if (objc_msgSend(v1, sel__internalAppIntentsIntelligenceProvider))
  {
    sub_186507B1C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_1855B00F4((uint64_t)v4, (uint64_t)v5);
  if (!v6)
  {
    sub_18519F088((uint64_t)v5, &qword_1ECD75B20);
    goto LABEL_8;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82DA0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    result = 0.0;
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t sub_1855AF9D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  uint64_t v16;
  void *v17;
  uint64_t result;
  _QWORD v19[6];

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = a4;
  v19[4] = sub_185281934;
  v19[5] = v16;
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 1107296256;
  v19[2] = sub_1855A9E78;
  v19[3] = &block_descriptor_2;
  v17 = _Block_copy(v19);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel__intelligenceCollectSubelementsIn_using_transformToRoot_, a2, v17, a5, a6, a7, a8);
  _Block_release(v17);
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v17 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t UIView._appIntentsIntelligenceProvider.setter(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;

  sub_18519F0C4(a1, (uint64_t)v11, &qword_1EDD83110);
  v3 = v12;
  if (v12)
  {
    v4 = __swift_project_boxed_opaque_existential_0Tm(v11, v12);
    v5 = *(_QWORD *)(v3 - 8);
    v6 = MEMORY[0x1E0C80A78](v4);
    v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v5 + 16))(v8, v6);
    v9 = sub_186507FB4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  }
  else
  {
    v9 = 0;
  }
  objc_msgSend(v1, sel__setInternalAppIntentsIntelligenceProvider_, v9);
  swift_unknownObjectRelease();
  return sub_18519F088(a1, &qword_1EDD83110);
}

void (*UIView._appIntentsIntelligenceProvider.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0xC8uLL);
  *a1 = v3;
  v3[24] = v1;
  UIView._appIntentsIntelligenceProvider.getter(v3);
  return sub_1855AFC60;
}

void sub_1855AFC60(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    sub_18519F0C4(*a1, v2 + 48, &qword_1EDD83110);
    sub_18519F0C4(v2 + 48, v2 + 96, &qword_1EDD83110);
    v3 = *(_QWORD *)(v2 + 120);
    if (v3)
    {
      v4 = __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v2 + 96), *(_QWORD *)(v2 + 120));
      v5 = *(_QWORD *)(v3 - 8);
      v6 = MEMORY[0x1E0C80A78](v4);
      v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v5 + 16))(v8, v6);
      v9 = sub_186507FB4();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
      __swift_destroy_boxed_opaque_existential_0Tm(v2 + 96);
    }
    else
    {
      v9 = 0;
    }
    objc_msgSend(*(id *)(v2 + 192), sel__setInternalAppIntentsIntelligenceProvider_, v9);
    swift_unknownObjectRelease();
    sub_18519F088(v2 + 48, &qword_1EDD83110);
  }
  else
  {
    sub_18519F0C4(*a1, v2 + 144, &qword_1EDD83110);
    v10 = *(_QWORD *)(v2 + 168);
    if (v10)
    {
      v11 = __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v2 + 144), *(_QWORD *)(v2 + 168));
      v12 = *(_QWORD *)(v10 - 8);
      v13 = MEMORY[0x1E0C80A78](v11);
      v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v12 + 16))(v15, v13);
      v16 = sub_186507FB4();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
      __swift_destroy_boxed_opaque_existential_0Tm(v2 + 144);
    }
    else
    {
      v16 = 0;
    }
    objc_msgSend(*(id *)(v2 + 192), sel__setInternalAppIntentsIntelligenceProvider_, v16);
    swift_unknownObjectRelease();
  }
  sub_18519F088(v2, &qword_1EDD83110);
  free((void *)v2);
}

uint64_t sub_1855AFF20(uint64_t a1, int64_t a2, uint64_t a3)
{
  unint64_t *v3;
  unint64_t v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int isUniquelyReferenced_nonNull_native;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(_QWORD *)(v5 + 24) >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_185646DC4(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *v3 = v5;
  }
  v14 = sub_186507030();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = v5 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v17 = *(_QWORD *)(v15 + 72);
  v18 = v16 + v17 * a1;
  swift_arrayDestroy();
  if (!v9)
    goto LABEL_25;
  v19 = *(_QWORD *)(v5 + 16);
  v20 = v19 - a2;
  if (__OFSUB__(v19, a2))
    goto LABEL_33;
  if (v20 < 0)
  {
LABEL_35:
    result = sub_186507EA0();
    __break(1u);
    return result;
  }
  v21 = v18 + v17;
  v22 = v16 + v17 * a2;
  if (v18 + v17 < v22 || v21 >= v22 + v20 * v17)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v21 != v22)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  v24 = *(_QWORD *)(v5 + 16);
  v25 = __OFADD__(v24, v9);
  v26 = v24 + v9;
  if (v25)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(_QWORD *)(v5 + 16) = v26;
LABEL_25:
  if (v17 >= 1)
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v15 + 16))(v18, a3, v14);
  return sub_18519F088(a3, &qword_1EDD81F38);
}

uint64_t sub_1855B00F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_1855B013C@<D0>(_OWORD *a1@<X8>)
{
  return UIView._appIntentsIntelligenceProvider.getter(a1);
}

uint64_t sub_1855B015C(uint64_t a1)
{
  _BYTE v2[48];

  sub_18519F0C4(a1, (uint64_t)v2, &qword_1EDD83110);
  return UIView._appIntentsIntelligenceProvider.setter((uint64_t)v2);
}

uint64_t sub_1855B019C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1855B01C4(a1, a2, a3, (unint64_t *)&qword_1ECD74A70);
}

uint64_t sub_1855B01B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1855B01C4(a1, a2, a3, (unint64_t *)&qword_1EDD81F30);
}

uint64_t sub_1855B01C4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v29;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v7 = a4;
    v10 = a3;
    v6 = a2;
    v9 = a1;
    v8 = *v5;
    if (!(*v5 >> 62))
    {
      if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v25 = sub_186507E58();
  swift_bridgeObjectRelease();
  if (v25 < v6)
    goto LABEL_31;
LABEL_4:
  v11 = v6 - v9;
  if (__OFSUB__(v6, v9))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v4 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v12 = sub_186507E58();
    swift_bridgeObjectRelease();
    v13 = v12 + v4;
    if (!__OFADD__(v12, v4))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v16 = sub_186507E58();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v8 = *v5;
  v29 = v7;
  if (*v5 >> 62)
    goto LABEL_34;
  v12 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  v13 = v12 + v4;
  if (__OFADD__(v12, v4))
    goto LABEL_36;
LABEL_8:
  v8 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v5 = v8;
  v28 = v10;
  v12 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
  {
    v15 = v8 & 0xFFFFFFFFFFFFFF8;
    if (v13 <= *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v12 = 1;
  }
  if (v8 >> 62)
    goto LABEL_37;
  v16 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v16 <= v13)
    v16 = v13;
  swift_bridgeObjectRetain();
  v8 = MEMORY[0x186DC4CC0](v12, v16, 1, v8);
  swift_bridgeObjectRelease();
  *v5 = v8;
  v15 = v8 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v17 = (_QWORD *)(v15 + 32 + 8 * v9);
  sub_1851F9080(0, v29);
  swift_arrayDestroy();
  if (!v4)
  {
LABEL_28:
    *v17 = v28;
    return sub_18650766C();
  }
  if (!(v8 >> 62))
  {
    v18 = *(_QWORD *)(v15 + 16);
    v19 = v18 - v6;
    if (!__OFSUB__(v18, v6))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v26 = sub_186507E58();
  swift_bridgeObjectRelease();
  v19 = v26 - v6;
  if (__OFSUB__(v26, v6))
    goto LABEL_40;
LABEL_21:
  if ((v19 & 0x8000000000000000) == 0)
  {
    v20 = (char *)(v17 + 1);
    v21 = (char *)(v15 + 32 + 8 * v6);
    if (v17 + 1 != (_QWORD *)v21 || v20 >= &v21[8 * v19])
      memmove(v20, v21, 8 * v19);
    if (!(v8 >> 62))
    {
      v22 = *(_QWORD *)(v15 + 16);
      v23 = v22 + v4;
      if (!__OFADD__(v22, v4))
      {
LABEL_27:
        *(_QWORD *)(v15 + 16) = v23;
        goto LABEL_28;
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v27 = sub_186507E58();
    swift_bridgeObjectRelease();
    v23 = v27 + v4;
    if (!__OFADD__(v27, v4))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_1855B04B8(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_185646B84(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[4 * a2 + 4];
    if (a1 != a2 || &v4[4 * a1 + 4] >= (_QWORD *)&v16[32 * v15])
      result = (uint64_t)memmove(&v4[4 * a1 + 4], v16, 32 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

_QWORD *sub_1855B0624(_QWORD *a1, uint64_t a2)
{
  void *v3;
  Class Class;
  uint64_t ObjCClassMetadata;
  _QWORD *v6;
  objc_class *ObjCClassFromMetadata;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;

  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  v3 = (void *)sub_186507FB4();
  Class = object_getClass(v3);
  swift_unknownObjectRelease();
  if (!Class)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  ObjCClassMetadata = swift_getObjCClassMetadata();
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (ObjCClassMetadata != a2)
  {
    do
    {
      ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
      class_getName(ObjCClassFromMetadata);
      v8 = sub_186507570();
      v10 = v9;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_185646CA4(0, v6[2] + 1, 1, v6);
      v12 = v6[2];
      v11 = v6[3];
      if (v12 >= v11 >> 1)
        v6 = sub_185646CA4((_QWORD *)(v11 > 1), v12 + 1, 1, v6);
      v6[2] = v12 + 1;
      v13 = &v6[2 * v12];
      v13[4] = v8;
      v13[5] = v10;
    }
    while (class_getSuperclass(ObjCClassFromMetadata) && swift_getObjCClassMetadata() != a2);
  }
  return v6;
}

uint64_t sub_1855B0744(void *a1, void (*a2)(char *, char *, uint64_t), void *a3, void *a4, double a5, double a6, double a7, double a8)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  double v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  uint64_t v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;

  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD81BF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_186507030();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  _Block_copy(a4);
  v23 = -[UIView _convertRect:toViewInSameWindow:]((uint64_t)a3, a1, a5, a6, a7, a8);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  objc_msgSend(a1, sel__intelligenceVisibleBounds);
  v38.origin.x = v30;
  v38.origin.y = v31;
  v38.size.width = v32;
  v38.size.height = v33;
  v36.origin.x = v23;
  v36.origin.y = v25;
  v36.size.width = v27;
  v36.size.height = v29;
  v37 = CGRectIntersection(v36, v38);
  sub_1855AA73C(a2, a1, a3, a4, (uint64_t)v18, v37.origin.x, v37.origin.y, v37.size.width, v37.size.height);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
    return sub_18519F088((uint64_t)v18, (uint64_t *)&unk_1EDD81BF0);
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
  sub_186506E38();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
}

uint64_t sub_1855B0918(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v19 = sub_186507E58();
  swift_bridgeObjectRelease();
  if (v19 < v2)
    goto LABEL_31;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v8 = sub_186507E58();
    swift_bridgeObjectRelease();
    v9 = v8 + v6;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_186507E58();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v5 = *v3;
  if (*v3 >> 62)
    goto LABEL_34;
  v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = v8 - v7;
  if (__OFADD__(v8, v6))
    goto LABEL_36;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if (v5 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x186DC4CC0](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  sub_1851F9080(0, &qword_1EDD85258);
  swift_arrayDestroy();
  if (!v6)
    return sub_18650766C();
  if (!(v5 >> 62))
  {
    v13 = *(_QWORD *)(v11 + 16);
    v14 = v13 - v2;
    if (!__OFSUB__(v13, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v20 = sub_186507E58();
  swift_bridgeObjectRelease();
  v14 = v20 - v2;
  if (__OFSUB__(v20, v2))
    goto LABEL_40;
LABEL_21:
  if ((v14 & 0x8000000000000000) == 0)
  {
    v15 = (const void *)(v11 + 32 + 8 * v2);
    if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14)
      memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
    if (!(v5 >> 62))
    {
      v16 = *(_QWORD *)(v11 + 16);
      v17 = v16 + v6;
      if (!__OFADD__(v16, v6))
      {
LABEL_27:
        *(_QWORD *)(v11 + 16) = v17;
        return sub_18650766C();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v21 = sub_186507E58();
    swift_bridgeObjectRelease();
    v17 = v21 + v6;
    if (!__OFADD__(v21, v6))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_1855B0BF4(uint64_t a1, uint64_t a2)
{
  return sub_1855B0C00(a1, a2, (void (*)(_QWORD))type metadata accessor for UIPromptSuggestionView);
}

uint64_t sub_1855B0C00(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  void (*v6)(_QWORD);
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = a3;
    v3 = a2;
    v5 = a1;
    v7 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v21 = sub_186507E58();
  swift_bridgeObjectRelease();
  if (v21 < v3)
    goto LABEL_31;
LABEL_4:
  v9 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v8 = v5 - v3;
  if (__OFSUB__(0, v9))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v10 = sub_186507E58();
    swift_bridgeObjectRelease();
    v11 = v10 + v8;
    if (!__OFADD__(v10, v8))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v14 = sub_186507E58();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v7 = *v4;
  if (*v4 >> 62)
    goto LABEL_34;
  v10 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  v11 = v10 - v9;
  if (__OFADD__(v10, v8))
    goto LABEL_36;
LABEL_8:
  v7 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v7;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
  {
    v13 = v7 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(_QWORD *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v10 = 1;
  }
  if (v7 >> 62)
    goto LABEL_37;
  v14 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11)
    v14 = v11;
  swift_bridgeObjectRetain();
  v7 = MEMORY[0x186DC4CC0](v10, v14, 1, v7);
  swift_bridgeObjectRelease();
  *v4 = v7;
  v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v6(0);
  swift_arrayDestroy();
  if (!v8)
    return sub_18650766C();
  if (!(v7 >> 62))
  {
    v15 = *(_QWORD *)(v13 + 16);
    v16 = v15 - v3;
    if (!__OFSUB__(v15, v3))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v22 = sub_186507E58();
  swift_bridgeObjectRelease();
  v16 = v22 - v3;
  if (__OFSUB__(v22, v3))
    goto LABEL_40;
LABEL_21:
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (const void *)(v13 + 32 + 8 * v3);
    if (v5 != v3 || v13 + 32 + 8 * v5 >= (unint64_t)v17 + 8 * v16)
      memmove((void *)(v13 + 32 + 8 * v5), v17, 8 * v16);
    if (!(v7 >> 62))
    {
      v18 = *(_QWORD *)(v13 + 16);
      v19 = v18 + v8;
      if (!__OFADD__(v18, v8))
      {
LABEL_27:
        *(_QWORD *)(v13 + 16) = v19;
        return sub_18650766C();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v23 = sub_186507E58();
    swift_bridgeObjectRelease();
    v19 = v23 + v8;
    if (!__OFADD__(v23, v8))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_1855B0ED0(uint64_t a1, uint64_t a2)
{
  return sub_1855B0C00(a1, a2, (void (*)(_QWORD))type metadata accessor for InProcessAnimationManager.TickEntry);
}

uint64_t sub_1855B0EDC()
{
  return swift_deallocObject();
}

double sub_1855B0EEC(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  double result;

  *(_QWORD *)&result = (unint64_t)j_j__CGRectOffset(*(CGRect *)&a1, *(CGFloat *)(v4 + 16), *(CGFloat *)(v4 + 24));
  return result;
}

uint64_t sub_1855B0EFC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1855B0F10(a1, a2);
  return a1;
}

uint64_t sub_1855B0F10(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1855B0F54(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

_OWORD *sub_1855B0F98(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_1855B0FB0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = sub_186506EEC();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return result;
}

uint64_t sub_1855B0FDC()
{
  return sub_186506EF8();
}

void sub_1855B1004(double *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1855B1118(a1, a2);
}

uint64_t sub_1855B1018()
{
  return swift_deallocObject();
}

uint64_t sub_1855B1028()
{
  return swift_deallocObject();
}

uint64_t sub_1855B1038()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1855B105C(uint64_t a1)
{
  uint64_t v1;

  return -[UIView _convertRect:toViewInSameWindow:](a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1855B1068()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1855B1090()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

double sub_1855B10A0(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;

  return -[UIView _convertRect:toViewInSameWindow:](a1, *(void **)(v5 + 16), a2, a3, a4, a5);
}

uint64_t sub_1855B10A8(uint64_t a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t (*v6)(void *, double);
  void *v7;
  double v8;

  v6 = *(uint64_t (**)(void *, double))(v5 + 16);
  v7 = *(void **)(v5 + 32);
  v8 = -[UIView _convertRect:toViewInSameWindow:](a1, v7, a2, a3, a4, a5);
  return v6(v7, v8);
}

id sub_1855B10E4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel__intelligenceCollectContentIn_collector_, *(_QWORD *)(v0 + 56), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

uint64_t sub_1855B1100()
{
  uint64_t v0;

  return sub_1855AF9D8(*(void **)(v0 + 16), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40), *(double *)(v0 + 48));
}

void sub_1855B1118(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(double *)a2 = (*(double (**)(_QWORD, double, double, double, double))(v2 + 16))(*(_QWORD *)(v2 + 32), *a1, a1[1], a1[2], a1[3]);
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = v6;
}

uint64_t sub_1855B1168()
{
  return swift_deallocObject();
}

uint64_t sub_1855B1188()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1855B11F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  void (*v15)(uint64_t *, uint64_t *, uint64_t);

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = ~v8;
  v10 = v7 + v8;
  v11 = ((v7 + v8) & ~v8) + v7;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v15(a1, a2, *(_QWORD *)(a3 + 16));
    v15((uint64_t *)(((unint64_t)v4 + v10) & v9), (uint64_t *)(((unint64_t)a2 + v10) & v9), v5);
  }
  return v4;
}

uint64_t sub_1855B12A8(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v6)(unint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v6 = *(uint64_t (**)(unint64_t, uint64_t))(v4 + 8);
  v6(a1, v3);
  return v6((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), v3);
}

unint64_t sub_1855B1310(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_1855B137C(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_1855B13E8(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

unint64_t sub_1855B1454(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, unint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v7((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), v5);
  return a1;
}

uint64_t sub_1855B14C0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = ((*(_QWORD *)(v4 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
     + *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1855B1580 + 4 * byte_186669508[(v7 - 1)]))();
}

void sub_1855B15D0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t _s15InstantlyStableVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s15InstantlyStableVMn);
}

uint64_t sub_1855B179C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  void (*v12)(uint64_t, uint64_t);

  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32);
  v12(a5, a1);
  v10 = a5 + *(int *)(_s15InstantlyStableVMa(0, a3, a4, v9) + 36);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v12)(v10, a2, a3);
}

uint64_t sub_1855B1814@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t UICollectionViewListCell.accessories.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v1 = objc_msgSend(v0, sel_accessories);
  sub_1851F9080(0, qword_1ECD74918);
  v2 = sub_186507654();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
      goto LABEL_3;
LABEL_35:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRetain();
  v3 = sub_186507E58();
  swift_bridgeObjectRelease();
  if (!v3)
    goto LABEL_35;
LABEL_3:
  v14 = MEMORY[0x1E0DEE9D8];
  sub_1855B37A0(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    v5 = v14;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x186DC4CB4](v4, v2);
      else
        v6 = *(id *)(v2 + 8 * v4 + 32);
      v7 = v6;
      objc_opt_self();
      if (swift_dynamicCastObjCClass())
      {
        v8 = 0;
      }
      else
      {
        objc_opt_self();
        if (swift_dynamicCastObjCClass())
        {
          v8 = 8;
        }
        else
        {
          objc_opt_self();
          if (swift_dynamicCastObjCClass())
          {
            v8 = 2;
          }
          else
          {
            objc_opt_self();
            if (swift_dynamicCastObjCClass())
            {
              v8 = 3;
            }
            else
            {
              objc_opt_self();
              if (swift_dynamicCastObjCClass())
              {
                v8 = 4;
              }
              else
              {
                objc_opt_self();
                if (swift_dynamicCastObjCClass())
                {
                  v8 = 5;
                }
                else
                {
                  objc_opt_self();
                  if (swift_dynamicCastObjCClass())
                  {
                    v8 = 6;
                  }
                  else
                  {
                    objc_opt_self();
                    if (swift_dynamicCastObjCClass())
                    {
                      v8 = 7;
                    }
                    else
                    {
                      objc_opt_self();
                      v9 = (void *)swift_dynamicCastObjCClass();
                      if (v9)
                      {
                        v8 = (uint64_t)objc_msgSend(v9, sel_customView);
                      }
                      else
                      {
                        objc_opt_self();
                        if (swift_dynamicCastObjCClass())
                        {
                          v8 = 1;
                        }
                        else
                        {
                          objc_opt_self();
                          if (!swift_dynamicCastObjCClass())
                            goto LABEL_38;
                          v8 = 9;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_1855B37A0(v10 > 1, v11 + 1, 1);
      ++v4;
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = v14 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v8;
      *(_QWORD *)(v12 + 40) = v7;
    }
    while (v3 != v4);
    swift_bridgeObjectRelease();
    return v5;
  }
  __break(1u);
LABEL_38:
  result = sub_186507E04();
  __break(1u);
  return result;
}

void (*UICollectionViewListCell.accessories.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = UICollectionViewListCell.accessories.getter();
  return sub_1855B1BD8;
}

void sub_1855B1BD8(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_bridgeObjectRetain();
    UICollectionViewListCell.accessories.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    UICollectionViewListCell.accessories.setter(*a1);
  }
}

BOOL static UICellAccessory.DisplayedState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t UICellAccessory.DisplayedState.hash(into:)()
{
  return sub_1865080F8();
}

uint64_t sub_1855B1C60()
{
  return sub_1865080F8();
}

uint64_t UICellAccessory.DisclosureIndicatorOptions.isHidden.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t (*UICellAccessory.DisclosureIndicatorOptions.isHidden.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t (*UICellAccessory.DisclosureIndicatorOptions.reservedLayoutWidth.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t (*UICellAccessory.DisclosureIndicatorOptions.tintColor.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t UICellAccessory.DetailOptions.isHidden.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t UICellAccessory.DetailOptions.isHidden.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*UICellAccessory.DetailOptions.isHidden.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

void UICellAccessory.DetailOptions.reservedLayoutWidth.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t UICellAccessory.DetailOptions.reservedLayoutWidth.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 8) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 16) = v2;
  return result;
}

uint64_t (*UICellAccessory.DetailOptions.reservedLayoutWidth.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

void *UICellAccessory.DetailOptions.tintColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

void UICellAccessory.DetailOptions.tintColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
}

uint64_t (*UICellAccessory.DetailOptions.tintColor.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

id UICellAccessory.DetailOptions.init(isHidden:reservedLayoutWidth:tintColor:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_185349B04(a1, a2, a3, &qword_1EDD83AE8, (id *)&qword_1EDD85260, a4);
}

id sub_1855B1D94()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UICellAccessoryDetail), sel_init);
  qword_1EDD85260 = (uint64_t)result;
  return result;
}

id static UICellAccessory.detail(displayed:options:actionHandler:)@<X0>(unsigned __int8 *a1@<X0>, double *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  double v10;
  int v11;
  uint64_t v12;
  id v13;
  double v14;
  double v15;
  id result;
  _QWORD v17[6];

  v8 = *a1;
  v9 = *(unsigned __int8 *)a2;
  v10 = a2[1];
  v11 = *((unsigned __int8 *)a2 + 16);
  v12 = *((_QWORD *)a2 + 3);
  v13 = objc_msgSend(objc_allocWithZone((Class)UICellAccessoryDetail), sel_init);
  if (a3)
  {
    v17[4] = a3;
    v17[5] = a4;
    v17[0] = MEMORY[0x1E0C809B0];
    v17[1] = 1107296256;
    v17[2] = sub_18530A69C;
    v17[3] = &block_descriptor_3;
    a3 = _Block_copy(v17);
    swift_retain();
    swift_release();
  }
  objc_msgSend(v13, sel_setActionHandler_, a3);
  _Block_release(a3);
  objc_msgSend(v13, sel_setDisplayedState_, v8);
  objc_msgSend(v13, sel_setTintColor_, v12);
  objc_msgSend(v13, sel_setHidden_, v9);
  v14 = v10;
  v15 = -1.79769313e308;
  if (v10 == 0.0)
    v15 = 0.0;
  if (v11)
    v14 = v15;
  result = objc_msgSend(v13, sel_setReservedLayoutWidth_, v14);
  *a5 = 8;
  a5[1] = v13;
  return result;
}

uint64_t UICellAccessory.CheckmarkOptions.isHidden.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t (*UICellAccessory.CheckmarkOptions.isHidden.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t (*UICellAccessory.CheckmarkOptions.reservedLayoutWidth.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t (*UICellAccessory.CheckmarkOptions.tintColor.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

id UICellAccessory.CheckmarkOptions.init(isHidden:reservedLayoutWidth:tintColor:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_185349B04(a1, a2, a3, qword_1EDD83AF0, (id *)&qword_1EDD85268, a4);
}

id sub_1855B1F7C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UICellAccessoryCheckmark), sel_init);
  qword_1EDD85268 = (uint64_t)result;
  return result;
}

id static UICellAccessory.checkmark(displayed:options:)@<X0>(unsigned __int8 *a1@<X0>, double *a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_18529D7C4(a1, a2, (Class *)off_1E167A440, 2, a3);
}

uint64_t UICellAccessory.DeleteOptions.isHidden.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t UICellAccessory.DeleteOptions.isHidden.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*UICellAccessory.DeleteOptions.isHidden.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

void UICellAccessory.DeleteOptions.reservedLayoutWidth.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t UICellAccessory.DeleteOptions.reservedLayoutWidth.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 8) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 16) = v2;
  return result;
}

uint64_t (*UICellAccessory.DeleteOptions.reservedLayoutWidth.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

void *UICellAccessory.DeleteOptions.tintColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

void UICellAccessory.DeleteOptions.tintColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
}

uint64_t (*UICellAccessory.DeleteOptions.tintColor.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

void *UICellAccessory.DeleteOptions.backgroundColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

void UICellAccessory.DeleteOptions.backgroundColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
}

uint64_t (*UICellAccessory.DeleteOptions.backgroundColor.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t UICellAccessory.InsertOptions.isHidden.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t (*UICellAccessory.InsertOptions.isHidden.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t (*UICellAccessory.InsertOptions.reservedLayoutWidth.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t (*UICellAccessory.InsertOptions.tintColor.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t (*UICellAccessory.InsertOptions.backgroundColor.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

void UICellAccessory.InsertOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)(char a1@<W0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  sub_185192034(a1, a2, a3, a4, (uint64_t *)&unk_1EDD83B00, (id *)&qword_1EDD85270, a5);
}

id sub_1855B2130()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UICellAccessoryInsert), sel_init);
  qword_1EDD85270 = (uint64_t)result;
  return result;
}

id static UICellAccessory.insert(displayed:options:actionHandler:)@<X0>(unsigned __int8 *a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  return sub_18529D358(a1, a2, a3, a4, (Class *)off_1E167A468, (uint64_t)&block_descriptor_6, 4, a5);
}

uint64_t UICellAccessory.ReorderOptions.isHidden.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t UICellAccessory.ReorderOptions.isHidden.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*UICellAccessory.ReorderOptions.isHidden.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

void UICellAccessory.ReorderOptions.reservedLayoutWidth.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t UICellAccessory.ReorderOptions.reservedLayoutWidth.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 8) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 16) = v2;
  return result;
}

uint64_t (*UICellAccessory.ReorderOptions.reservedLayoutWidth.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

void *UICellAccessory.ReorderOptions.tintColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

void UICellAccessory.ReorderOptions.tintColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
}

uint64_t (*UICellAccessory.ReorderOptions.tintColor.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t UICellAccessory.ReorderOptions.showsVerticalSeparator.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t UICellAccessory.ReorderOptions.showsVerticalSeparator.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*UICellAccessory.ReorderOptions.showsVerticalSeparator.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t UICellAccessory.MultiselectOptions.isHidden.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t (*UICellAccessory.MultiselectOptions.isHidden.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t (*UICellAccessory.MultiselectOptions.reservedLayoutWidth.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t (*UICellAccessory.MultiselectOptions.tintColor.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t (*UICellAccessory.MultiselectOptions.backgroundColor.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t _s5UIKit15UICellAccessoryV14DisplayedStateO9hashValueSivg_0()
{
  sub_1865080EC();
  sub_1865080F8();
  return sub_186508134();
}

uint64_t sub_1855B22DC()
{
  sub_1865080EC();
  sub_1865080F8();
  return sub_186508134();
}

void UICellAccessory.OutlineDisclosureOptions.style.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *UICellAccessory.OutlineDisclosureOptions.style.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*UICellAccessory.OutlineDisclosureOptions.style.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t UICellAccessory.OutlineDisclosureOptions.isHidden.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t UICellAccessory.OutlineDisclosureOptions.isHidden.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*UICellAccessory.OutlineDisclosureOptions.isHidden.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t (*UICellAccessory.OutlineDisclosureOptions.reservedLayoutWidth.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t (*UICellAccessory.OutlineDisclosureOptions.tintColor.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

void (*UICellAccessory.OutlineDisclosureOptions._customImage.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + 32);
  *a1 = v2;
  a1[1] = v1;
  v3 = v2;
  return sub_1855B23BC;
}

void sub_1855B23BC(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  v3 = *(void **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(void **)(v2 + 32);
  if ((a2 & 1) != 0)
  {
    v5 = v3;

    *(_QWORD *)(v2 + 32) = v3;
  }
  else
  {

    *(_QWORD *)(v2 + 32) = v3;
  }
}

unsigned __int8 *UICellAccessory.OutlineDisclosureOptions.init(style:isHidden:reservedLayoutWidth:tintColor:)@<X0>(unsigned __int8 *result@<X0>, unsigned __int8 a2@<W1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X8>)
{
  int v7;
  int v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  double v14;

  v7 = a2;
  v8 = *result;
  v9 = *(_QWORD *)a3;
  v10 = *(_BYTE *)(a3 + 8);
  v11 = *(_BYTE *)(a3 + 9);
  if (v8 == 3)
  {
    if (qword_1EDD825B8 != -1)
      swift_once();
    result = (unsigned __int8 *)objc_msgSend((id)qword_1EDD825B0, sel_style);
    if (result == (unsigned __int8 *)2)
      LOBYTE(v8) = 2;
    else
      LOBYTE(v8) = result == (unsigned __int8 *)1;
  }
  if (v7 == 2)
  {
    if (qword_1EDD825B8 != -1)
      swift_once();
    result = (unsigned __int8 *)objc_msgSend((id)qword_1EDD825B0, sel_isHidden);
    v12 = (char)result;
    if ((v11 & 1) == 0)
    {
LABEL_11:
      v13 = v10 & 1;
      if (a4)
        goto LABEL_26;
      goto LABEL_23;
    }
  }
  else
  {
    v12 = v7 & 1;
    if ((v11 & 1) == 0)
      goto LABEL_11;
  }
  if (qword_1EDD825B8 != -1)
    swift_once();
  result = (unsigned __int8 *)objc_msgSend((id)qword_1EDD825B0, sel_reservedLayoutWidth);
  if (v14 == 0.0)
  {
    v13 = 1;
    v9 = 0;
    if (a4)
      goto LABEL_26;
  }
  else
  {
    v9 = *(_QWORD *)&v14;
    if (v14 == -1.79769313e308)
    {
      v13 = 1;
      v9 = 1;
      if (a4)
        goto LABEL_26;
    }
    else
    {
      v13 = 0;
      if (a4)
        goto LABEL_26;
    }
  }
LABEL_23:
  if (qword_1EDD825B8 != -1)
    swift_once();
  result = (unsigned __int8 *)objc_msgSend((id)qword_1EDD825B0, sel_tintColor);
  a4 = result;
LABEL_26:
  *(_BYTE *)a5 = v8;
  *(_BYTE *)(a5 + 1) = v12;
  *(_QWORD *)(a5 + 8) = v9;
  *(_BYTE *)(a5 + 16) = v13;
  *(_QWORD *)(a5 + 24) = a4;
  *(_QWORD *)(a5 + 32) = 0;
  return result;
}

id sub_1855B2608()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)UICellAccessoryOutlineDisclosure), sel_init);
  qword_1EDD825B0 = (uint64_t)result;
  return result;
}

id static UICellAccessory.outlineDisclosure(displayed:options:actionHandler:)@<X0>(unsigned __int8 *a1@<X0>, char *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  void *v11;
  void *v12;
  id v13;
  id result;
  void *v15;
  unsigned __int8 v17;
  uint64_t aBlock;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  void *v21;
  void *v22;
  uint64_t v23;
  unsigned __int8 v24;

  v17 = *a1;
  v7 = *a2;
  v8 = a2[1];
  v9 = *((_QWORD *)a2 + 1);
  v10 = a2[16];
  v12 = (void *)*((_QWORD *)a2 + 3);
  v11 = (void *)*((_QWORD *)a2 + 4);
  v13 = objc_msgSend(objc_allocWithZone((Class)UICellAccessoryOutlineDisclosure), sel_init);
  if (a3)
  {
    v22 = a3;
    v23 = a4;
    aBlock = MEMORY[0x1E0C809B0];
    v19 = 1107296256;
    v20 = sub_18530A69C;
    v21 = &block_descriptor_9;
    a3 = _Block_copy(&aBlock);
    v15 = v11;
    swift_retain();
    swift_release();
  }
  objc_msgSend(v13, sel_setActionHandler_, a3, v15);
  _Block_release(a3);
  LOBYTE(aBlock) = v7;
  BYTE1(aBlock) = v8;
  v19 = v9;
  LOBYTE(v20) = v10;
  v21 = v12;
  v22 = v11;
  v24 = v17;
  result = sub_1855B2790((double *)&aBlock, &v24);
  *a5 = 1;
  a5[1] = v13;
  return result;
}

id sub_1855B2790(double *a1, unsigned __int8 *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;

  v3 = *(unsigned __int8 *)a1;
  v4 = *((unsigned __int8 *)a1 + 1);
  v5 = a1[1];
  v6 = *((unsigned __int8 *)a1 + 16);
  v7 = *((_QWORD *)a1 + 3);
  v8 = *((_QWORD *)a1 + 4);
  objc_msgSend(v2, sel_setDisplayedState_, *a2);
  objc_msgSend(v2, sel_setStyle_, v3);
  objc_msgSend(v2, sel_setTintColor_, v7);
  objc_msgSend(v2, sel_setHidden_, v4);
  v9 = v5;
  v10 = -1.79769313e308;
  if (v5 == 0.0)
    v10 = 0.0;
  if (v6)
    v9 = v10;
  objc_msgSend(v2, sel_setReservedLayoutWidth_, v9);
  return objc_msgSend(v2, sel__setCustomImage_, v8);
}

uint64_t UICellAccessory.PopUpMenuOptions.isHidden.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t (*UICellAccessory.PopUpMenuOptions.isHidden.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t (*UICellAccessory.PopUpMenuOptions.reservedLayoutWidth.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t (*UICellAccessory.PopUpMenuOptions.tintColor.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

id UICellAccessory.PopUpMenuOptions.init(isHidden:reservedLayoutWidth:tintColor:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  return sub_185349B04(a1, a2, a3, qword_1EDD83B10, (id *)&qword_1EDD85278, a4);
}

void sub_1855B28BC()
{
  id v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v0 = objc_allocWithZone((Class)UIMenu);
  v1 = (void *)sub_1865074D4();
  sub_1851F9080(0, (unint64_t *)&qword_1ECD74A70);
  v2 = (void *)sub_18650763C();
  v3 = objc_msgSend(v0, sel_initWithTitle_image_imageName_identifier_options_children_, v1, 0, 0, 0, 0, v2);

  v4 = v3;
  objc_msgSend(v4, sel_setSubtitle_, 0);

  objc_msgSend(v4, sel_setPreferredElementSize_, -1);
  v5 = objc_msgSend(objc_allocWithZone((Class)UICellAccessoryPopUpMenu), sel_initWithMenu_, v4);

  qword_1EDD85278 = (uint64_t)v5;
}

id static UICellAccessory.popUpMenu(_:displayed:options:selectedElementDidChangeHandler:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, double *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  double v11;
  int v12;
  uint64_t v13;
  id v14;
  double v15;
  double v16;
  id result;
  _QWORD v18[6];

  v9 = *a2;
  v10 = *(unsigned __int8 *)a3;
  v11 = a3[1];
  v12 = *((unsigned __int8 *)a3 + 16);
  v13 = *((_QWORD *)a3 + 3);
  v14 = objc_msgSend(objc_allocWithZone((Class)UICellAccessoryPopUpMenu), sel_initWithMenu_, a1);
  if (a4)
  {
    v18[4] = a4;
    v18[5] = a5;
    v18[0] = MEMORY[0x1E0C809B0];
    v18[1] = 1107296256;
    v18[2] = sub_1855B2B2C;
    v18[3] = &block_descriptor_12_0;
    a4 = _Block_copy(v18);
    swift_retain();
    swift_release();
  }
  objc_msgSend(v14, sel_setSelectedElementDidChangeHandler_, a4);
  _Block_release(a4);
  objc_msgSend(v14, sel_setDisplayedState_, v9);
  objc_msgSend(v14, sel_setTintColor_, v13);
  objc_msgSend(v14, sel_setHidden_, v10);
  v15 = v11;
  v16 = -1.79769313e308;
  if (v11 == 0.0)
    v16 = 0.0;
  if (v12)
    v15 = v16;
  result = objc_msgSend(v14, sel_setReservedLayoutWidth_, v15);
  *a6 = 9;
  a6[1] = v14;
  return result;
}

void sub_1855B2B2C(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t UICellAccessory.LabelOptions.isHidden.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t UICellAccessory.LabelOptions.isHidden.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*UICellAccessory.LabelOptions.isHidden.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

void UICellAccessory.LabelOptions.reservedLayoutWidth.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t UICellAccessory.LabelOptions.reservedLayoutWidth.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 8) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 16) = v2;
  return result;
}

uint64_t (*UICellAccessory.LabelOptions.reservedLayoutWidth.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

void *UICellAccessory.LabelOptions.tintColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

void UICellAccessory.LabelOptions.tintColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
}

uint64_t (*UICellAccessory.LabelOptions.tintColor.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

id UICellAccessory.LabelOptions.font.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

void UICellAccessory.LabelOptions.font.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
}

uint64_t (*UICellAccessory.LabelOptions.font.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t UICellAccessory.LabelOptions.adjustsFontForContentSizeCategory.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t UICellAccessory.LabelOptions.adjustsFontForContentSizeCategory.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = result;
  return result;
}

uint64_t (*UICellAccessory.LabelOptions.adjustsFontForContentSizeCategory.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

void UICellAccessory.LabelOptions.init(isHidden:reservedLayoutWidth:tintColor:font:adjustsFontForContentSizeCategory:)(char a1@<W0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, unsigned __int8 a5@<W4>, uint64_t a6@<X8>)
{
  double v10;
  char v11;
  char v12;
  unsigned __int8 v13;
  char v14;
  int v15;
  double v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  unsigned __int8 v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;

  v10 = *(double *)a2;
  v11 = *(_BYTE *)(a2 + 8);
  v12 = *(_BYTE *)(a2 + 9);
  if (a1 == 2)
  {
    if (qword_1EDD7D668 != -1)
      swift_once();
    v13 = objc_msgSend((id)qword_1EDD7D660, sel_isHidden);
    if ((v12 & 1) == 0)
    {
LABEL_5:
      v14 = v11 & 1;
      v15 = a5;
      if (!a3)
        goto LABEL_21;
LABEL_12:
      v17 = a3;
      if (!a4)
        goto LABEL_24;
      goto LABEL_13;
    }
  }
  else
  {
    v13 = a1 & 1;
    if ((*(_BYTE *)(a2 + 9) & 1) == 0)
      goto LABEL_5;
  }
  if (qword_1EDD7D668 != -1)
    swift_once();
  objc_msgSend((id)qword_1EDD7D660, sel_reservedLayoutWidth);
  if (v16 == 0.0)
  {
    v14 = 1;
    v10 = 0.0;
    v15 = a5;
    if (!a3)
      goto LABEL_21;
    goto LABEL_12;
  }
  if (v16 == -1.79769313e308)
    v10 = COERCE_DOUBLE(1);
  else
    v10 = v16;
  v14 = v16 == -1.79769313e308;
  v15 = a5;
  if (a3)
    goto LABEL_12;
LABEL_21:
  if (qword_1EDD7D668 != -1)
    swift_once();
  v17 = objc_msgSend((id)qword_1EDD7D660, sel_tintColor);
  v25 = v17;
  if (!a4)
  {
LABEL_24:
    v26 = qword_1EDD7D668;
    v27 = a3;
    if (v26 != -1)
      swift_once();
    v19 = objc_msgSend((id)qword_1EDD7D660, sel_font);
    if (v15 != 2)
      goto LABEL_27;
    goto LABEL_14;
  }
LABEL_13:
  v18 = a3;
  v19 = a4;
  if (v15 != 2)
  {
LABEL_27:
    v28 = v19;

    v24 = v15 & 1;
    goto LABEL_28;
  }
LABEL_14:
  v20 = qword_1EDD7D668;
  v21 = v19;
  v22 = a4;
  if (v20 != -1)
    swift_once();
  v23 = (id)qword_1EDD7D660;
  v24 = objc_msgSend(v23, sel_adjustsFontForContentSizeCategory);

LABEL_28:
  *(_BYTE *)a6 = v13;
  *(double *)(a6 + 8) = v10;
  *(_BYTE *)(a6 + 16) = v14;
  *(_QWORD *)(a6 + 24) = v17;
  *(_QWORD *)(a6 + 32) = v19;
  *(_BYTE *)(a6 + 40) = v24;
}

void sub_1855B2F04()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)UICellAccessoryLabel);
  v1 = (void *)sub_1865074D4();
  v2 = objc_msgSend(v0, sel_initWithText_, v1);

  qword_1EDD7D660 = (uint64_t)v2;
}

id static UICellAccessory.label(text:displayed:options:)@<X0>(unsigned __int8 *a1@<X2>, double *a2@<X3>, _QWORD *a3@<X8>)
{
  char v4;
  double v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  id v10;
  void *v11;
  id v12;
  id result;
  unsigned __int8 v14;
  unsigned __int8 v15;
  double v16[2];
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v14 = *a1;
  v4 = *(_BYTE *)a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  v7 = *((_QWORD *)a2 + 3);
  v8 = *((_QWORD *)a2 + 4);
  v9 = *((_BYTE *)a2 + 40);
  v10 = objc_allocWithZone((Class)UICellAccessoryLabel);
  swift_bridgeObjectRetain();
  v11 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v10, sel_initWithText_, v11);

  LOBYTE(v16[0]) = v4;
  v16[1] = v5;
  v17 = v6;
  v18 = v7;
  v19 = v8;
  v20 = v9;
  v15 = v14;
  result = sub_1855B3044(v16, &v15);
  *a3 = 7;
  a3[1] = v12;
  return result;
}

id sub_1855B3044(double *a1, unsigned __int8 *a2)
{
  void *v2;
  uint64_t v3;
  double v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;

  v3 = *(unsigned __int8 *)a1;
  v4 = a1[1];
  v5 = *((unsigned __int8 *)a1 + 16);
  v6 = *((_QWORD *)a1 + 3);
  v7 = *((_QWORD *)a1 + 4);
  v8 = *((unsigned __int8 *)a1 + 40);
  objc_msgSend(v2, sel_setDisplayedState_, *a2);
  objc_msgSend(v2, sel_setTintColor_, v6);
  objc_msgSend(v2, sel_setFont_, v7);
  objc_msgSend(v2, sel_setAdjustsFontForContentSizeCategory_, v8);
  objc_msgSend(v2, sel_setHidden_, v3);
  v9 = v4;
  v10 = -1.79769313e308;
  if (v4 == 0.0)
    v10 = 0.0;
  if (v5)
    v9 = v10;
  return objc_msgSend(v2, sel_setReservedLayoutWidth_, v9);
}

uint64_t (*static UICellAccessory.Placement.position(before:)(uint64_t a1))(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)a1;
  v2 = *(void **)(a1 + 8);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  sub_1855B37C8(v1);
  v4 = v2;
  return sub_1855B37C0;
}

uint64_t sub_1855B3178(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  void **v5;
  void *v6;
  void *v7;
  id v8;
  char v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  v4 = 0;
  v5 = (void **)(a1 + 40);
  while (2)
  {
    v6 = *(v5 - 1);
    switch((unint64_t)v6)
    {
      case 0uLL:
        if (a2)
          goto LABEL_4;
        break;
      case 1uLL:
        if (a2 != (void *)1)
          goto LABEL_4;
        break;
      case 2uLL:
        if (a2 != (void *)2)
          goto LABEL_4;
        break;
      case 3uLL:
        if (a2 != (void *)3)
          goto LABEL_4;
        break;
      case 4uLL:
        if (a2 != (void *)4)
          goto LABEL_4;
        break;
      case 5uLL:
        if (a2 != (void *)5)
          goto LABEL_4;
        break;
      case 6uLL:
        if (a2 != (void *)6)
          goto LABEL_4;
        break;
      case 7uLL:
        if (a2 != (void *)7)
          goto LABEL_4;
        break;
      case 8uLL:
        if (a2 != (void *)8)
          goto LABEL_4;
        break;
      case 9uLL:
        if (a2 != (void *)9)
          goto LABEL_4;
        break;
      default:
        if ((unint64_t)a2 < 0xA)
          goto LABEL_4;
        v7 = *v5;
        sub_1851F9080(0, (unint64_t *)&qword_1EDD82C80);
        sub_1855B37C8(v6);
        v8 = v7;
        sub_1855B37C8(a2);
        sub_1855B37C8(v6);
        v9 = sub_186507A44();
        sub_1855B4DC0(a2);
        sub_1855B4DC0(v6);
        sub_1855B4DC0(v6);

        if ((v9 & 1) == 0)
        {
LABEL_4:
          ++v4;
          v5 += 2;
          if (v2 == v4)
            return 0;
          continue;
        }
        break;
    }
    return v4;
  }
}

uint64_t (*static UICellAccessory.Placement.position(after:)(uint64_t a1))(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;

  v1 = *(void **)a1;
  v2 = *(void **)(a1 + 8);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  sub_1855B37C8(v1);
  v4 = v2;
  return sub_1855B4DB8;
}

uint64_t sub_1855B3358(uint64_t a1, void *a2)
{
  uint64_t v2;
  void **v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  char v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  v4 = (void **)(a1 + 16 * v2 + 24);
  v5 = *(_QWORD *)(a1 + 16);
  while (2)
  {
    v6 = *(v4 - 1);
    switch((unint64_t)v6)
    {
      case 0uLL:
        if (a2)
          goto LABEL_4;
        break;
      case 1uLL:
        if (a2 != (void *)1)
          goto LABEL_4;
        break;
      case 2uLL:
        if (a2 != (void *)2)
          goto LABEL_4;
        break;
      case 3uLL:
        if (a2 != (void *)3)
          goto LABEL_4;
        break;
      case 4uLL:
        if (a2 != (void *)4)
          goto LABEL_4;
        break;
      case 5uLL:
        if (a2 != (void *)5)
          goto LABEL_4;
        break;
      case 6uLL:
        if (a2 != (void *)6)
          goto LABEL_4;
        break;
      case 7uLL:
        if (a2 != (void *)7)
          goto LABEL_4;
        break;
      case 8uLL:
        if (a2 != (void *)8)
          goto LABEL_4;
        break;
      case 9uLL:
        if (a2 != (void *)9)
          goto LABEL_4;
        break;
      default:
        if ((unint64_t)a2 < 0xA)
          goto LABEL_4;
        v7 = *v4;
        sub_1851F9080(0, (unint64_t *)&qword_1EDD82C80);
        sub_1855B37C8(v6);
        v8 = v7;
        sub_1855B37C8(a2);
        sub_1855B37C8(v6);
        v9 = sub_186507A44();
        sub_1855B4DC0(a2);
        sub_1855B4DC0(v6);
        sub_1855B4DC0(v6);

        if ((v9 & 1) == 0)
        {
LABEL_4:
          v4 -= 2;
          if (--v5)
            continue;
          v5 = v2;
        }
        break;
    }
    return v5;
  }
}

id UICellAccessory.CustomViewConfiguration.customView.getter()
{
  id *v0;

  return *v0;
}

uint64_t UICellAccessory.CustomViewConfiguration.placement.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[2];
  v3 = v1[3];
  *a1 = v1[1];
  a1[1] = v2;
  a1[2] = v3;
  return sub_18525B5E8();
}

uint64_t UICellAccessory.CustomViewConfiguration.isHidden.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t UICellAccessory.CustomViewConfiguration.isHidden.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*UICellAccessory.CustomViewConfiguration.isHidden.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

void UICellAccessory.CustomViewConfiguration.reservedLayoutWidth.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 40);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t UICellAccessory.CustomViewConfiguration.reservedLayoutWidth.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 40) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 48) = v2;
  return result;
}

uint64_t (*UICellAccessory.CustomViewConfiguration.reservedLayoutWidth.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

void *UICellAccessory.CustomViewConfiguration.tintColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 56);
  v2 = v1;
  return v1;
}

void UICellAccessory.CustomViewConfiguration.tintColor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
}

uint64_t (*UICellAccessory.CustomViewConfiguration.tintColor.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t UICellAccessory.CustomViewConfiguration.maintainsFixedSize.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t UICellAccessory.CustomViewConfiguration.maintainsFixedSize.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 64) = result;
  return result;
}

uint64_t (*UICellAccessory.CustomViewConfiguration.maintainsFixedSize.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

void UICellAccessory.AccessoryType.hash(into:)()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  switch((unint64_t)*v0)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
      sub_1865080F8();
      break;
    default:
      sub_1865080F8();
      v2 = v1;
      sub_186507A50();
      sub_1855B4DC0(v1);
      break;
  }
}

uint64_t UICellAccessory.AccessoryType.hashValue.getter()
{
  sub_1865080EC();
  UICellAccessory.AccessoryType.hash(into:)();
  return sub_186508134();
}

uint64_t sub_1855B36E4()
{
  sub_1865080EC();
  UICellAccessory.AccessoryType.hash(into:)();
  return sub_186508134();
}

uint64_t sub_1855B3730()
{
  sub_1865080EC();
  UICellAccessory.AccessoryType.hash(into:)();
  return sub_186508134();
}

id UICellAccessory.accessoryType.getter@<X0>(void **a1@<X8>)
{
  void **v1;
  void *v2;

  v2 = *v1;
  *a1 = *v1;
  return sub_1855B37C8(v2);
}

uint64_t sub_1855B3784(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1855B3984(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1855B37A0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1855B3AEC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1855B37C0(uint64_t a1)
{
  uint64_t v1;

  return sub_1855B3178(a1, *(void **)(v1 + 16));
}

id sub_1855B37C8(id result)
{
  if ((unint64_t)result >= 0xA)
    return result;
  return result;
}

uint64_t sub_1855B37D8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1855B3C54(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1855B37F4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1855B3DC0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1855B3810(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1855B3F60(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1855B382C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1855B40BC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1855B3848(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1855B4218(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1855B3864(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1855B4380(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1855B3880(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1855B4508(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1855B389C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1855B4670(a1, a2, a3, (_QWORD *)*v3, &qword_1EDD852C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998]);
  *v3 = result;
  return result;
}

uint64_t sub_1855B38C8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1855B4670(a1, a2, a3, (_QWORD *)*v3, &qword_1EDD86790, type metadata accessor for UILayoutComponentResponse.UpdateOutputModelCallbackInfo);
  *v3 = result;
  return result;
}

uint64_t sub_1855B38F4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1855B4850(a1, a2, a3, (_QWORD *)*v3, &qword_1EDD852B8, type metadata accessor for MarkerFormat);
  *v3 = result;
  return result;
}

uint64_t sub_1855B3920(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1855B4850(a1, a2, a3, (_QWORD *)*v3, &qword_1EDD852B0, type metadata accessor for TextList);
  *v3 = result;
  return result;
}

uint64_t sub_1855B394C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1855B49DC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1855B3968(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1855B4B38(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1855B3984(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_1EDD82FF0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_1855B3AEC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD81F60);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_1855B3C54(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD81EC0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_1855B3DC0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD86670);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD867A0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_1855B3F60(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD852A0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_1855B40BC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85298);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_1855B4218(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD866B0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_1855B4380(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD852D0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD852D8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_1855B4508(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD852C8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_1855B4670(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_1855B4850(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, void (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 25;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11)
      memmove(v13 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    a6(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_1855B49DC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82F00);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_1855B4B38(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD852A8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t _s5UIKit15UICellAccessoryV0C4TypeO2eeoiySbAE_AEtFZ_0(void **a1, void **a2)
{
  void *v2;
  void *v3;
  uint64_t result;
  char v5;

  v2 = *a1;
  v3 = *a2;
  switch((unint64_t)*a1)
  {
    case 0uLL:
      result = v3 == 0;
      break;
    case 1uLL:
      result = v3 == (void *)1;
      break;
    case 2uLL:
      result = v3 == (void *)2;
      break;
    case 3uLL:
      result = v3 == (void *)3;
      break;
    case 4uLL:
      result = v3 == (void *)4;
      break;
    case 5uLL:
      result = v3 == (void *)5;
      break;
    case 6uLL:
      result = v3 == (void *)6;
      break;
    case 7uLL:
      result = v3 == (void *)7;
      break;
    case 8uLL:
      result = v3 == (void *)8;
      break;
    case 9uLL:
      result = v3 == (void *)9;
      break;
    default:
      if ((unint64_t)v3 >= 0xA)
      {
        sub_1851F9080(0, (unint64_t *)&qword_1EDD82C80);
        sub_1855B37C8(v2);
        sub_1855B37C8(v3);
        v5 = sub_186507A44();
        sub_1855B4DC0(v3);
        sub_1855B4DC0(v2);
        result = v5 & 1;
      }
      else
      {
        result = 0;
      }
      break;
  }
  return result;
}

uint64_t sub_1855B4DB8(uint64_t a1)
{
  uint64_t v1;

  return sub_1855B3358(a1, *(void **)(v1 + 16));
}

void sub_1855B4DC0(id a1)
{
  if ((unint64_t)a1 >= 0xA)

}

unint64_t sub_1855B4DD4()
{
  unint64_t result;

  result = qword_1EDD85280;
  if (!qword_1EDD85280)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UICellAccessory.DisplayedState, &type metadata for UICellAccessory.DisplayedState);
    atomic_store(result, (unint64_t *)&qword_1EDD85280);
  }
  return result;
}

unint64_t sub_1855B4E1C()
{
  unint64_t result;

  result = qword_1EDD85288;
  if (!qword_1EDD85288)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UICellAccessory.OutlineDisclosureOptions.Style, &type metadata for UICellAccessory.OutlineDisclosureOptions.Style);
    atomic_store(result, (unint64_t *)&qword_1EDD85288);
  }
  return result;
}

unint64_t sub_1855B4E64()
{
  unint64_t result;

  result = qword_1EDD85290;
  if (!qword_1EDD85290)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UICellAccessory.AccessoryType, &type metadata for UICellAccessory.AccessoryType);
    atomic_store(result, (unint64_t *)&qword_1EDD85290);
  }
  return result;
}

uint64_t sub_1855B4EA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = UICollectionViewListCell.accessories.getter();
  *a1 = result;
  return result;
}

void sub_1855B4ED0()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  UICollectionViewListCell.accessories.setter(v0);
}

id sub_1855B4EF8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(a1 + 32);
  *a2 = v2;
  return v2;
}

void sub_1855B4F04(id *a1, uint64_t a2)
{
  id v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *(void **)(a2 + 32);
  v5 = *a1;

  *(_QWORD *)(a2 + 32) = v3;
}

_QWORD *initializeBufferWithCopyOfBuffer for UICellAccessory(_QWORD *a1, uint64_t a2)
{
  void *v4;
  id v5;
  void *v6;
  id v7;

  v4 = *(void **)a2;
  if (*(_QWORD *)a2 >= 0xAuLL)
    v5 = v4;
  v6 = *(void **)(a2 + 8);
  *a1 = v4;
  a1[1] = v6;
  v7 = v6;
  return a1;
}

uint64_t assignWithCopy for UICellAccessory(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  if (*(_QWORD *)a1 >= 0xAuLL)
  {
    if ((unint64_t)v5 >= 0xA)
    {
      *(_QWORD *)a1 = v5;
      v7 = v5;

      goto LABEL_8;
    }

    v5 = *(void **)a2;
    goto LABEL_6;
  }
  if ((unint64_t)v5 < 0xA)
  {
LABEL_6:
    *(_QWORD *)a1 = v5;
    goto LABEL_8;
  }
  *(_QWORD *)a1 = v5;
  v6 = v5;
LABEL_8:
  v8 = *(void **)(a2 + 8);
  v9 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v10 = v8;

  return a1;
}

uint64_t assignWithTake for UICellAccessory(uint64_t a1, unint64_t *a2)
{
  void *v4;
  unint64_t v5;
  void *v6;

  v4 = *(void **)a1;
  v5 = *a2;
  if (*(_QWORD *)a1 >= 0xAuLL)
  {
    if (v5 >= 0xA)
    {
      *(_QWORD *)a1 = v5;

      goto LABEL_6;
    }

  }
  *(_QWORD *)a1 = v5;
LABEL_6:
  v6 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  return a1;
}

uint64_t sub_1855B5084(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for UICellAccessory.LayoutDimension(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1855B50C0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t initializeWithCopy for UICellAccessory.DetailOptions(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for UICellAccessory.DetailOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(void **)(a1 + 24);
  v5 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = v5;

  return a1;
}

uint64_t assignWithTake for UICellAccessory.DetailOptions(uint64_t a1, uint64_t a2)
{
  void *v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for UICellAccessory.DetailOptions()
{
  return &type metadata for UICellAccessory.DetailOptions;
}

ValueMetadata *type metadata accessor for UICellAccessory.CheckmarkOptions()
{
  return &type metadata for UICellAccessory.CheckmarkOptions;
}

ValueMetadata *type metadata accessor for UICellAccessory.InsertOptions()
{
  return &type metadata for UICellAccessory.InsertOptions;
}

uint64_t initializeWithCopy for UICellAccessory.ReorderOptions(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for UICellAccessory.ReorderOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a1 + 24);
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = v6;

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for UICellAccessory.ReorderOptions(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for UICellAccessory.ReorderOptions(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UICellAccessory.ReorderOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

uint64_t _s5UIKit15UICellAccessoryV13DeleteOptionsVwcp_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(void **)(a2 + 24);
  v4 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t _s5UIKit15UICellAccessoryV13DeleteOptionsVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a1 + 24);
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = v6;

  v8 = *(void **)(a1 + 32);
  v9 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v9;
  v10 = v9;

  return a1;
}

uint64_t _s5UIKit15UICellAccessoryV13DeleteOptionsVwta_0(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);

  v4 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t initializeWithCopy for UICellAccessory.OutlineDisclosureOptions(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(void **)(a2 + 24);
  v4 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for UICellAccessory.OutlineDisclosureOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a1 + 24);
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = v6;

  v8 = *(void **)(a1 + 32);
  v9 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v9;
  v10 = v9;

  return a1;
}

uint64_t assignWithTake for UICellAccessory.OutlineDisclosureOptions(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);

  v4 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t _s5UIKit15UICellAccessoryV13DeleteOptionsVwet_0(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s5UIKit15UICellAccessoryV13DeleteOptionsVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for UICellAccessory.OutlineDisclosureOptions()
{
  return &type metadata for UICellAccessory.OutlineDisclosureOptions;
}

uint64_t _s5UIKit15UICellAccessoryV14DisplayedStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1855B56FC + 4 * byte_18666956D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1855B5730 + 4 * byte_186669568[v4]))();
}

uint64_t sub_1855B5730(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1855B5738(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1855B5740);
  return result;
}

uint64_t sub_1855B574C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1855B5754);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1855B5758(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1855B5760(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UICellAccessory.OutlineDisclosureOptions.Style()
{
  return &type metadata for UICellAccessory.OutlineDisclosureOptions.Style;
}

uint64_t _s5UIKit15UICellAccessoryV26DisclosureIndicatorOptionsVwet_0(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s5UIKit15UICellAccessoryV26DisclosureIndicatorOptionsVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for UICellAccessory.PopUpMenuOptions()
{
  return &type metadata for UICellAccessory.PopUpMenuOptions;
}

uint64_t initializeWithCopy for UICellAccessory.LabelOptions(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(void **)(a2 + 24);
  v4 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for UICellAccessory.LabelOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a1 + 24);
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = v6;

  v8 = *(void **)(a2 + 32);
  v9 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  v10 = v8;

  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for UICellAccessory.LabelOptions(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);

  v4 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for UICellAccessory.LabelOptions(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UICellAccessory.LabelOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UICellAccessory.LabelOptions()
{
  return &type metadata for UICellAccessory.LabelOptions;
}

uint64_t destroy for UICellAccessory.Placement()
{
  return sub_18525B5F0();
}

_QWORD *_s5UIKit15UICellAccessoryV9PlacementOwCP_0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_18525B5E8();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

_QWORD *assignWithCopy for UICellAccessory.Placement(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_18525B5E8();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_18525B5F0();
  return a1;
}

uint64_t assignWithTake for UICellAccessory.Placement(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  sub_18525B5F0();
  return a1;
}

uint64_t getEnumTagSinglePayload for UICellAccessory.Placement(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)a1 >> 2;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for UICellAccessory.Placement(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)result = 4 * -a2;
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1855B5B9C(_QWORD *a1)
{
  return *a1 >> 63;
}

_QWORD *sub_1855B5BA8(_QWORD *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t initializeWithCopy for UICellAccessory.CustomViewConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = v4;
  sub_18525B5E8();
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v9 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v10 = v9;
  return a1;
}

uint64_t assignWithCopy for UICellAccessory.CustomViewConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  sub_18525B5E8();
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_QWORD *)(a1 + 24) = v9;
  sub_18525B5F0();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v10;
  v11 = *(void **)(a1 + 56);
  v12 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v12;
  v13 = v12;

  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for UICellAccessory.CustomViewConfiguration(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v5;
  sub_18525B5F0();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for UICellAccessory.CustomViewConfiguration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UICellAccessory.CustomViewConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for UICellAccessory.AccessoryType(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for UICellAccessory.AccessoryType(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for UICellAccessory.AccessoryType(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = v4;

  return a1;
}

void **assignWithTake for UICellAccessory.AccessoryType(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for UICellAccessory.AccessoryType(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF5 && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483638);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 9;
  if (v4 >= 0xB)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UICellAccessory.AccessoryType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF6)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483638;
    if (a3 >= 0x7FFFFFF6)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF6)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 9;
  }
  return result;
}

uint64_t sub_1855B6000(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1855B6018(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for UICellAccessory.AccessoryType()
{
  return &type metadata for UICellAccessory.AccessoryType;
}

uint64_t sub_1855B6048()
{
  swift_release();
  return swift_deallocObject();
}

id sub_1855B6214()
{
  return sub_1855B6A7C(type metadata accessor for _UITabCrossFadeTransitionDomain);
}

uint64_t type metadata accessor for _UITabCrossFadeTransitionDomain()
{
  return objc_opt_self();
}

uint64_t sub_1855B631C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for _UITabCrossFadeTransitionSpec();
  objc_msgSendSuper2(&v12, sel_setDefaultValues);
  v1 = OBJC_IVAR____TtC5UIKit29_UITabCrossFadeTransitionSpec_compact;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC5UIKit29_UITabCrossFadeTransitionSpec_compact];
  *(_QWORD *)(v2 + OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_fadedOutScale) = 0x3FEFC91D14E3BCD3;
  *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_fadeOut)
            + OBJC_IVAR____TtC5UIKit30_UIDurationBounceAnimationSpec_duration) = 0x3FC10FF972474539;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v0[v1] + OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_fadeOut)
            + OBJC_IVAR____TtC5UIKit30_UIDurationBounceAnimationSpec_delay) = 0x3FC7765FD8ADAB9FLL;
  v3 = *(_QWORD *)&v0[v1];
  v4 = OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_scaleOut;
  result = 0x3FC999999999999ALL;
  *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_scaleOut)
            + OBJC_IVAR____TtC5UIKit30_UIDurationBounceAnimationSpec_duration) = 0x3FC999999999999ALL;
  *(_QWORD *)(*(_QWORD *)(v3 + v4) + OBJC_IVAR____TtC5UIKit30_UIDurationBounceAnimationSpec_delay) = 0;
  v6 = OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_fadeIn;
  *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_fadeIn)
            + OBJC_IVAR____TtC5UIKit30_UIDurationBounceAnimationSpec_duration) = 0x3FC10FF972474539;
  *(_QWORD *)(*(_QWORD *)(v3 + v6) + OBJC_IVAR____TtC5UIKit30_UIDurationBounceAnimationSpec_delay) = 0x3FA999999999999ALL;
  v7 = OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_scaleIn;
  *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_scaleIn)
            + OBJC_IVAR____TtC5UIKit30_UIDurationBounceAnimationSpec_duration) = 0x3FD999999999999ALL;
  *(_QWORD *)(*(_QWORD *)(v3 + v7) + OBJC_IVAR____TtC5UIKit30_UIDurationBounceAnimationSpec_delay) = 0x3FB126E978D4FDF4;
  v8 = OBJC_IVAR____TtC5UIKit29_UITabCrossFadeTransitionSpec_regular;
  *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC5UIKit29_UITabCrossFadeTransitionSpec_regular]
            + OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_fadedOutScale) = 0x3FEFAE147AE147AELL;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v0[v8] + OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_fadeOut)
            + OBJC_IVAR____TtC5UIKit30_UIDurationBounceAnimationSpec_duration) = 0x3FC999999999999ALL;
  v9 = *(_QWORD *)&v0[v8];
  *(_QWORD *)(*(_QWORD *)(v9 + OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_fadeOut)
            + OBJC_IVAR____TtC5UIKit30_UIDurationBounceAnimationSpec_delay) = 0x3FD199999999999ALL;
  *(_QWORD *)(*(_QWORD *)(v9 + OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_scaleOut)
            + OBJC_IVAR____TtC5UIKit30_UIDurationBounceAnimationSpec_duration) = 0x3FD3333333333333;
  v10 = *(_QWORD *)&v0[v8];
  *(_QWORD *)(*(_QWORD *)(v10 + OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_scaleOut)
            + OBJC_IVAR____TtC5UIKit30_UIDurationBounceAnimationSpec_delay) = 0;
  *(_QWORD *)(*(_QWORD *)(v10 + OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_fadeIn)
            + OBJC_IVAR____TtC5UIKit30_UIDurationBounceAnimationSpec_duration) = 0x3FC999999999999ALL;
  v11 = *(_QWORD *)&v0[v8];
  *(_QWORD *)(*(_QWORD *)(v11 + OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_fadeIn)
            + OBJC_IVAR____TtC5UIKit30_UIDurationBounceAnimationSpec_delay) = 0x3FB3333333333333;
  *(_QWORD *)(*(_QWORD *)(v11 + OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_scaleIn)
            + OBJC_IVAR____TtC5UIKit30_UIDurationBounceAnimationSpec_duration) = 0x3FE3333333333333;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v0[v8] + OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_scaleIn)
            + OBJC_IVAR____TtC5UIKit30_UIDurationBounceAnimationSpec_delay) = 0x3FB999999999999ALL;
  return result;
}

id sub_1855B658C()
{
  char *v0;
  uint64_t v1;
  objc_class *ObjCClassFromMetadata;
  id v3;
  char *v4;
  uint64_t v5;
  objc_super v7;

  v1 = OBJC_IVAR____TtC5UIKit29_UITabCrossFadeTransitionSpec_regular;
  type metadata accessor for _UITabCrossFadeTransitionAnimationSpec();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v3 = objc_allocWithZone(ObjCClassFromMetadata);
  v4 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v3, sel_init);
  v5 = OBJC_IVAR____TtC5UIKit29_UITabCrossFadeTransitionSpec_compact;
  *(_QWORD *)&v4[v5] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);

  v7.receiver = v4;
  v7.super_class = (Class)type metadata accessor for _UITabCrossFadeTransitionSpec();
  return objc_msgSendSuper2(&v7, sel_initWithDefaultValues);
}

id sub_1855B664C()
{
  return sub_1855B6A7C(type metadata accessor for _UITabCrossFadeTransitionSpec);
}

uint64_t type metadata accessor for _UITabCrossFadeTransitionSpec()
{
  return objc_opt_self();
}

id sub_1855B67F4()
{
  char *v0;
  uint64_t v1;
  objc_class *ObjCClassFromMetadata;
  id v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v9;

  *(_QWORD *)&v0[OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_fadedOutScale] = 0;
  v1 = OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_fadeOut;
  type metadata accessor for _UIDurationBounceAnimationSpec();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  v3 = objc_allocWithZone(ObjCClassFromMetadata);
  v4 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v3, sel_init);
  v5 = OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_scaleOut;
  *(_QWORD *)&v4[v5] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  v6 = OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_fadeIn;
  *(_QWORD *)&v4[v6] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);
  v7 = OBJC_IVAR____TtC5UIKit38_UITabCrossFadeTransitionAnimationSpec_scaleIn;
  *(_QWORD *)&v4[v7] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_init);

  v9.receiver = v4;
  v9.super_class = (Class)type metadata accessor for _UITabCrossFadeTransitionAnimationSpec();
  return objc_msgSendSuper2(&v9, sel_initWithDefaultValues);
}

id sub_1855B68F8()
{
  return sub_1855B6A7C(type metadata accessor for _UITabCrossFadeTransitionAnimationSpec);
}

uint64_t type metadata accessor for _UITabCrossFadeTransitionAnimationSpec()
{
  return objc_opt_self();
}

id sub_1855B6A70()
{
  return sub_1855B6A7C(type metadata accessor for _UIDurationBounceAnimationSpec);
}

id sub_1855B6A7C(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for _UIDurationBounceAnimationSpec()
{
  return objc_opt_self();
}

uint64_t sub_1855B6ACC(void *a1)
{
  uint64_t v1;
  uint64_t *v3;

  v3 = &OBJC_IVAR____TtC5UIKit29_UITabCrossFadeTransitionSpec_compact;
  if (objc_msgSend(a1, sel_userInterfaceIdiom) && objc_msgSend(a1, sel_horizontalSizeClass) != (id)1)
    v3 = &OBJC_IVAR____TtC5UIKit29_UITabCrossFadeTransitionSpec_regular;
  return *(_QWORD *)(v1 + *v3);
}

void sub_1855B6B30()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD81EC0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_186669900;
  v1 = (void *)sub_1865074D4();
  v2 = (void *)sub_1865074D4();
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_rowWithTitle_childSettingsKeyPath_, v1, v2);

  if (v4)
  {
    v5 = sub_1851F9080(0, &qword_1EDD85348);
    *(_QWORD *)(v0 + 56) = v5;
    *(_QWORD *)(v0 + 32) = v4;
    v6 = (void *)sub_1865074D4();
    v7 = (void *)sub_1865074D4();
    v8 = objc_msgSend(v3, sel_rowWithTitle_childSettingsKeyPath_, v6, v7);

    if (v8)
    {
      *(_QWORD *)(v0 + 88) = v5;
      *(_QWORD *)(v0 + 64) = v8;
      v9 = (void *)sub_1865074D4();
      v10 = (void *)sub_18650763C();
      swift_bridgeObjectRelease();
      objc_msgSend((id)objc_opt_self(), sel_moduleWithTitle_contents_, v9, v10);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1855B6D0C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD81EC0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_186669900;
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_186669910;
  v2 = (void *)sub_1865074D4();
  v3 = (void *)sub_1865074D4();
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_rowWithTitle_childSettingsKeyPath_, v2, v3);

  if (!v5)
  {
    __break(1u);
    goto LABEL_10;
  }
  v6 = sub_1851F9080(0, &qword_1EDD85348);
  *(_QWORD *)(v1 + 56) = v6;
  *(_QWORD *)(v1 + 32) = v5;
  v7 = (void *)sub_1865074D4();
  v8 = (void *)sub_1865074D4();
  v9 = objc_msgSend(v4, sel_rowWithTitle_childSettingsKeyPath_, v7, v8);

  if (!v9)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  *(_QWORD *)(v1 + 88) = v6;
  *(_QWORD *)(v1 + 64) = v9;
  v10 = (void *)sub_1865074D4();
  v11 = (void *)sub_1865074D4();
  v12 = objc_msgSend(v4, sel_rowWithTitle_childSettingsKeyPath_, v10, v11);

  if (!v12)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  *(_QWORD *)(v1 + 120) = v6;
  *(_QWORD *)(v1 + 96) = v12;
  v13 = (void *)sub_1865074D4();
  v14 = (void *)sub_1865074D4();
  v15 = objc_msgSend(v4, sel_rowWithTitle_childSettingsKeyPath_, v13, v14);

  if (!v15)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v16 = (void *)objc_opt_self();
  *(_QWORD *)(v1 + 152) = v6;
  *(_QWORD *)(v1 + 128) = v15;
  v17 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  v18 = (void *)sub_1865074D4();
  v19 = objc_msgSend(v16, sel_sectionWithRows_title_, v17, v18);

  if (!v19)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v20 = sub_1851F9080(0, &qword_1EDD85338);
  *(_QWORD *)(v0 + 56) = v20;
  *(_QWORD *)(v0 + 32) = v19;
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1866691E0;
  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D83080]), sel_init);
  v23 = (void *)sub_1865074D4();
  v24 = objc_msgSend((id)objc_opt_self(), sel_rowWithTitle_action_, v23, v22);

  if (!v24)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  *(_QWORD *)(v21 + 56) = sub_1851F9080(0, &qword_1EDD85340);
  *(_QWORD *)(v21 + 32) = v24;
  v25 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  v26 = objc_msgSend(v16, sel_sectionWithRows_, v25);

  if (v26)
  {
    *(_QWORD *)(v0 + 88) = v20;
    *(_QWORD *)(v0 + 64) = v26;
    v27 = (void *)sub_1865074D4();
    v28 = (void *)sub_18650763C();
    swift_bridgeObjectRelease();
    objc_msgSend(v16, sel_moduleWithTitle_contents_, v27, v28);

    return;
  }
LABEL_15:
  __break(1u);
}

void sub_1855B71A0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD81EC0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_186669900;
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_186669210;
  v2 = (void *)sub_1865074D4();
  v3 = (void *)sub_1865074D4();
  v4 = (void *)objc_opt_self();
  v5 = objc_msgSend(v4, sel_rowWithTitle_valueKeyPath_, v2, v3);

  if (!v5)
  {
    __break(1u);
    goto LABEL_9;
  }
  v6 = sub_1851F9080(0, &qword_1EDD85330);
  *(_QWORD *)(v1 + 56) = v6;
  *(_QWORD *)(v1 + 32) = v5;
  v7 = (void *)sub_1865074D4();
  v8 = (void *)sub_1865074D4();
  v9 = objc_msgSend(v4, sel_rowWithTitle_valueKeyPath_, v7, v8);

  if (!v9)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  *(_QWORD *)(v1 + 88) = v6;
  *(_QWORD *)(v1 + 64) = v9;
  v10 = (void *)sub_1865074D4();
  v11 = (void *)sub_1865074D4();
  v12 = objc_msgSend(v4, sel_rowWithTitle_valueKeyPath_, v10, v11);

  if (!v12)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v13 = (void *)objc_opt_self();
  *(_QWORD *)(v1 + 120) = v6;
  *(_QWORD *)(v1 + 96) = v12;
  v14 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  v15 = (void *)sub_1865074D4();
  v16 = objc_msgSend(v13, sel_sectionWithRows_title_, v14, v15);

  if (!v16)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v17 = sub_1851F9080(0, &qword_1EDD85338);
  *(_QWORD *)(v0 + 56) = v17;
  *(_QWORD *)(v0 + 32) = v16;
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1866691E0;
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D83080]), sel_init);
  v20 = (void *)sub_1865074D4();
  v21 = objc_msgSend((id)objc_opt_self(), sel_rowWithTitle_action_, v20, v19);

  if (!v21)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  *(_QWORD *)(v18 + 56) = sub_1851F9080(0, &qword_1EDD85340);
  *(_QWORD *)(v18 + 32) = v21;
  v22 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v13, sel_sectionWithRows_, v22);

  if (v23)
  {
    *(_QWORD *)(v0 + 88) = v17;
    *(_QWORD *)(v0 + 64) = v23;
    v24 = (void *)sub_1865074D4();
    v25 = (void *)sub_18650763C();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_moduleWithTitle_contents_, v24, v25);

    return;
  }
LABEL_13:
  __break(1u);
}

void sub_1855B75AC(__int128 *a1)
{
  _OWORD v1[3];

  sub_1855B7E0C(a1, v1);
  __asm { BR              X10 }
}

BOOL sub_1855B7610()
{
  __int128 *v0;
  double v1;
  BOOL v2;
  BOOL v3;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  char v9;

  sub_1855B7E0C(v0, &v7);
  v3 = !v9 && (*(double *)&v7 == v1 ? (v2 = v5 == *((_QWORD *)&v7 + 1)) : (v2 = 0), v2) && v6 == v8;
  return v3;
}

uint64_t sub_1855B7C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1855B8E7C(a1, a2, a3, a4, (void (*)(uint64_t, _BYTE *))sub_1855B7E0C, (uint64_t (*)(_BYTE *, _BYTE *))sub_1855B75AC);
}

double static UIShape.rect.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_BYTE *)(a1 + 56) = 6;
  return result;
}

uint64_t static UIShape.fixedRect(_:cornerRadius:cornerCurve:maskedCorners:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>, double a8@<D4>)
{
  *(double *)a3 = a4;
  *(double *)(a3 + 8) = a5;
  *(double *)(a3 + 16) = a6;
  *(double *)(a3 + 24) = a7;
  *(double *)(a3 + 32) = a8;
  *(_QWORD *)(a3 + 40) = result;
  *(_QWORD *)(a3 + 48) = a2;
  *(_BYTE *)(a3 + 56) = 1;
  return result;
}

void static UIShape.fixedRect(_:)(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  *(double *)(a1 + 16) = a4;
  *(double *)(a1 + 24) = a5;
  *(_QWORD *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = -1;
  *(_BYTE *)(a1 + 56) = 1;
}

id static UIShape.path(_:)@<X0>(id a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = a1;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_BYTE *)(a2 + 56) = 2;
  return a1;
}

uint64_t sub_1855B7CB4()
{
  uint64_t v0;

  sub_185228168(*(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_BYTE *)(v0 + 104));
  return swift_deallocObject();
}

double UIShape.init<A>(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  double result;

  type metadata accessor for _UIShapeProviderBox(0, a2, a3, a4);
  v7 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v7 + 104) - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)v7 + 120), a1);
  *(_QWORD *)a5 = v7;
  result = 0.0;
  *(_OWORD *)(a5 + 8) = 0u;
  *(_OWORD *)(a5 + 24) = 0u;
  *(_OWORD *)(a5 + 40) = 0u;
  *(_BYTE *)(a5 + 56) = 3;
  return result;
}

uint64_t type metadata accessor for _UIShapeProviderBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _UIShapeProviderBox);
}

uint64_t sub_1855B7D70(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 104) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120), a1);
  return v2;
}

uint64_t static UIShape.== infix(_:_:)(__int128 *a1, __int128 *a2)
{
  char v3;
  __int128 v5[4];
  _OWORD v6[4];

  sub_1855B7E0C(a1, v5);
  sub_1855B7E0C(a2, v6);
  sub_1855B75AC(v5);
  return v3 & 1;
}

_OWORD *sub_1855B7E0C(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *(_OWORD *)((char *)a2 + 41) = *(__int128 *)((char *)a1 + 41);
  a2[1] = v3;
  a2[2] = v4;
  *a2 = v2;
  return a2;
}

void UIShape.resolve(in:)()
{
  __asm { BR              X10 }
}

id sub_1855B7EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)v9 = v8;
  *(_QWORD *)(v9 + 8) = a2;
  *(_QWORD *)(v9 + 16) = a3;
  *(_QWORD *)(v9 + 24) = a4;
  *(_QWORD *)(v9 + 32) = a5;
  *(_QWORD *)(v9 + 40) = a6;
  *(_QWORD *)(v9 + 48) = a7;
  *(_BYTE *)(v9 + 56) = a8;
  *(_QWORD *)(v9 + 64) = v11;
  *(_QWORD *)(v9 + 72) = v10;
  *(_QWORD *)(v9 + 80) = v12;
  *(_QWORD *)(v9 + 88) = v13;
  *(_QWORD *)(v9 + 96) = v8;
  *(_QWORD *)(v9 + 104) = a2;
  *(_QWORD *)(v9 + 112) = a3;
  *(_BYTE *)(v9 + 120) = 0;
  return sub_185228314(v8, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t UIShape.ResolutionContext.contentShape.getter@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v10[2];
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v15[2];

  v3 = v1[5];
  v13 = v1[4];
  v2 = v13;
  v14 = v3;
  v15[0] = v1[6];
  v4 = v15[0];
  *(_OWORD *)((char *)v15 + 9) = *(_OWORD *)((char *)v1 + 105);
  v5 = *(_OWORD *)((char *)v15 + 9);
  v6 = v1[1];
  v10[0] = *v1;
  v10[1] = v6;
  v8 = v1[3];
  v11 = v1[2];
  v7 = v11;
  v12 = v8;
  *a1 = v10[0];
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = v2;
  a1[5] = v3;
  a1[6] = v4;
  *(_OWORD *)((char *)a1 + 105) = v5;
  return sub_1855B8DA4((uint64_t)v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228314, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D98);
}

__n128 UIShape.ResolutionContext.contentShape.setter(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  _OWORD v10[6];
  _OWORD v11[2];

  v3 = v1[5];
  v10[4] = v1[4];
  v10[5] = v3;
  v11[0] = v1[6];
  *(_OWORD *)((char *)v11 + 9) = *(_OWORD *)((char *)v1 + 105);
  v4 = v1[1];
  v10[0] = *v1;
  v10[1] = v4;
  v5 = v1[3];
  v10[2] = v1[2];
  v10[3] = v5;
  sub_1855B8DA4((uint64_t)v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
  v6 = *(_OWORD *)(a1 + 80);
  v1[4] = *(_OWORD *)(a1 + 64);
  v1[5] = v6;
  v1[6] = *(_OWORD *)(a1 + 96);
  *(_OWORD *)((char *)v1 + 105) = *(_OWORD *)(a1 + 105);
  v7 = *(_OWORD *)(a1 + 16);
  *v1 = *(_OWORD *)a1;
  v1[1] = v7;
  result = *(__n128 *)(a1 + 32);
  v9 = *(_OWORD *)(a1 + 48);
  v1[2] = result;
  v1[3] = v9;
  return result;
}

uint64_t (*UIShape.ResolutionContext.contentShape.modify())()
{
  return signpost_c2_removePresentationModifier_end;
}

double UIShape.Resolved.boundingRect.getter()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 120) & 1) != 0)
    return *(double *)(v0 + 72);
  else
    return *(double *)(v0 + 64);
}

id UIShape.Resolved.inset(by:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t v5;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  char v22;
  id v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  __int128 v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;

  v11 = *(void **)v5;
  v12 = *(_QWORD *)(v5 + 24);
  v37 = *(_QWORD *)(v5 + 16);
  v38 = *(_QWORD *)(v5 + 8);
  v13 = *(_QWORD *)(v5 + 32);
  v14 = *(_QWORD *)(v5 + 40);
  v15 = *(_QWORD *)(v5 + 48);
  v16 = *(_BYTE *)(v5 + 56);
  v17 = *(double *)(v5 + 64);
  v19 = *(double *)(v5 + 72);
  v18 = *(double *)(v5 + 80);
  v21 = *(double *)(v5 + 88);
  v20 = *(double *)(v5 + 96);
  v22 = *(_BYTE *)(v5 + 120);
  if ((v22 & 1) != 0)
  {
    v23 = *(id *)&v17;
    v24 = UIRectInset(v19, v18, v21, v20, a2, a5, a4, a3);
    v20 = v27;
    v28 = 0uLL;
  }
  else
  {
    v36 = *(_OWORD *)(v5 + 104);
    v29 = UIRectInset(v17, v19, v18, v21, a2, a5, a4, a3);
    v24 = v30;
    v25 = v31;
    v26 = v32;
    if (v20 > 0.0)
    {
      if (a4 >= a2)
        v33 = a2;
      else
        v33 = a4;
      if (v33 > a3)
        v33 = a3;
      if (v33 > a5)
        v33 = a5;
      v34 = v20 - v33;
      if (v34 < 0.0)
        v20 = 0.0;
      else
        v20 = v34;
    }
    v17 = v29;
    v28 = v36;
  }
  *(_QWORD *)a1 = v11;
  *(_QWORD *)(a1 + 8) = v38;
  *(_QWORD *)(a1 + 16) = v37;
  *(_QWORD *)(a1 + 24) = v12;
  *(_QWORD *)(a1 + 32) = v13;
  *(_QWORD *)(a1 + 40) = v14;
  *(_QWORD *)(a1 + 48) = v15;
  *(_BYTE *)(a1 + 56) = v16;
  *(double *)(a1 + 64) = v17;
  *(double *)(a1 + 72) = v24;
  *(_QWORD *)(a1 + 80) = v25;
  *(_QWORD *)(a1 + 88) = v26;
  *(double *)(a1 + 96) = v20;
  *(_OWORD *)(a1 + 104) = v28;
  *(_BYTE *)(a1 + 120) = v22;
  return sub_185228314(v11, v38, v37, v12, v13, v14, v15, v16);
}

void sub_1855B8D8C(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if ((a8 & 1) != 0)

}

id sub_1855B8D98(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if ((a8 & 1) != 0)
    return result;
  return result;
}

uint64_t sub_1855B8DA4(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD), void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 80);
  v8 = *(_QWORD *)(a1 + 88);
  v9 = *(_QWORD *)(a1 + 96);
  v10 = *(_QWORD *)(a1 + 104);
  v11 = *(_QWORD *)(a1 + 112);
  v12 = *(unsigned __int8 *)(a1 + 120);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56));
  a3(v5, v6, v7, v8, v9, v10, v11, v12);
  return a1;
}

id UIShape.Resolved.shape.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  v9 = *(_BYTE *)(v1 + 56);
  *(_BYTE *)(a1 + 56) = v9;
  return sub_185228314(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_1855B8E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1855B8E7C(a1, a2, a3, a4, (void (*)(uint64_t, _BYTE *))sub_1855B7E0C, (uint64_t (*)(_BYTE *, _BYTE *))sub_1855BBB54);
}

uint64_t sub_1855B8E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, _BYTE *), uint64_t (*a6)(_BYTE *, _BYTE *))
{
  _BYTE v10[64];
  _BYTE v11[64];

  a5(a1, v10);
  a5(a2, v11);
  return a6(v10, v11) & 1;
}

id UIShape.Resolved.path.getter()
{
  uint64_t v0;
  id result;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  void *v9;

  if ((*(_BYTE *)(v0 + 120) & 1) != 0)
    return *(id *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v4 = *(double *)(v0 + 88);
  v5 = *(double *)(v0 + 96);
  v7 = *(double *)(v0 + 72);
  v6 = *(double *)(v0 + 80);
  v8 = *(double *)(v0 + 64);
  v9 = (void *)objc_opt_self();
  if (v5 == 0.0)
    return objc_msgSend(v9, sel_bezierPathWithRect_, v8, v7, v6, v4);
  result = objc_msgSend(v9, sel__roundedRectBezierPath_withRoundedCorners_cornerRadius_segments_legacyCorners_, v2, 16, v3 == 1, v8, v7, v6, v4, v5);
  if (!result)
    __break(1u);
  return result;
}

id UIShape.Resolved.inset(by:)@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  double v11;
  char v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  __int128 v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;

  v5 = *(void **)v2;
  v6 = *(_QWORD *)(v2 + 24);
  v30 = *(_QWORD *)(v2 + 16);
  v31 = *(_QWORD *)(v2 + 8);
  v7 = *(_QWORD *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 40);
  v9 = *(_QWORD *)(v2 + 48);
  v10 = *(_BYTE *)(v2 + 56);
  v11 = *(double *)(v2 + 64);
  v12 = *(_BYTE *)(v2 + 120);
  if ((v12 & 1) != 0)
  {
    v13 = *(double *)(v2 + 72);
    v14 = *(double *)(v2 + 80);
    v15 = *(double *)(v2 + 88);
    v16 = *(double *)(v2 + 96);
    v17 = *(id *)&v11;
    v18 = UIRectInset(v13, v14, v15, v16, a2, a2, a2, a2);
    v22 = 0uLL;
  }
  else
  {
    v29 = *(_OWORD *)(v2 + 104);
    v23 = *(double *)(v2 + 96);
    v24 = UIRectInset(*(double *)(v2 + 64), *(double *)(v2 + 72), *(double *)(v2 + 80), *(double *)(v2 + 88), a2, a2, a2, a2);
    v18 = v25;
    v19 = v26;
    v20 = v27;
    v21 = v23 - a2;
    if (v23 - a2 < 0.0)
      v21 = 0.0;
    if (v23 <= 0.0)
      v21 = v23;
    v11 = v24;
    v22 = v29;
  }
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v31;
  *(_QWORD *)(a1 + 16) = v30;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  *(double *)(a1 + 64) = v11;
  *(double *)(a1 + 72) = v18;
  *(_QWORD *)(a1 + 80) = v19;
  *(_QWORD *)(a1 + 88) = v20;
  *(double *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 104) = v22;
  *(_BYTE *)(a1 + 120) = v12;
  return sub_185228314(v5, v31, v30, v6, v7, v8, v9, v10);
}

void sub_1855B9144(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  __int128 v25;
  double v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  __int128 v38;
  double v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  _BYTE v49[64];
  _OWORD v50[3];
  uint64_t v51;
  char v52;
  _OWORD v53[3];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD v62[4];
  __int128 v63;
  __int128 v64;
  _BYTE v65[25];

  v3 = a1[5];
  v63 = a1[4];
  v64 = v3;
  *(_OWORD *)v65 = a1[6];
  *(_OWORD *)&v65[9] = *(_OWORD *)((char *)a1 + 105);
  v4 = a1[1];
  v62[0] = *a1;
  v62[1] = v4;
  v5 = a1[3];
  v62[2] = a1[2];
  v62[3] = v5;
  v7 = *(void **)v2;
  v6 = *(_QWORD *)(v2 + 8);
  v9 = *(_QWORD *)(v2 + 16);
  v8 = *(_QWORD *)(v2 + 24);
  v11 = *(_QWORD *)(v2 + 32);
  v10 = *(_QWORD *)(v2 + 40);
  v12 = *(_QWORD *)(v2 + 48);
  v13 = *(_BYTE *)(v2 + 56);
  v14 = *(_QWORD *)(v2 + 72);
  v16 = *(_QWORD *)(v2 + 80);
  v15 = *(_QWORD *)(v2 + 88);
  v18 = *(_QWORD *)(v2 + 96);
  v17 = *(_QWORD *)(v2 + 104);
  v19 = *(_QWORD *)(v2 + 112);
  v20 = *(double *)&v63;
  if ((*(_BYTE *)(v2 + 120) & 1) != 0
    || (v55 = *(_QWORD *)(v2 + 64), v56 = v14, v57 = v16, v58 = v15, v59 = v18, v60 = v17, v61 = v19, (v65[24] & 1) != 0))
  {
    if ((v65[24] & 1) != 0)
    {
      v21 = (id)v63;
LABEL_16:
      sub_1855B9954(v21, a2);

      return;
    }
    v22 = *(_QWORD *)&v65[8];
    v23 = *(_QWORD *)&v65[16];
    v24 = *((double *)&v63 + 1);
    v25 = v64;
    v26 = *(double *)v65;
    v27 = (void *)objc_opt_self();
    v28 = v27;
    if (*(double *)v65 == 0.0)
    {
      v29 = objc_msgSend(v27, sel_bezierPathWithRect_, v63, v64);
LABEL_10:
      v21 = v29;
      goto LABEL_16;
    }
    sub_1855B8DA4((uint64_t)v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228314, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D98);
    v32 = objc_msgSend(v28, sel__roundedRectBezierPath_withRoundedCorners_cornerRadius_segments_legacyCorners_, v23, 16, v22 == 1, v20, v24, v25, v26);
    if (!v32)
    {
      __break(1u);
      goto LABEL_13;
    }
    goto LABEL_15;
  }
  v40 = v7;
  v41 = v6;
  v42 = v9;
  v43 = v8;
  v44 = v11;
  v45 = v10;
  v46 = v12;
  v47 = v13;
  v53[0] = v63;
  v53[1] = v64;
  v53[2] = *(_OWORD *)v65;
  v35 = *(_QWORD *)&v65[8];
  v36 = *(_QWORD *)&v65[16];
  v54 = *(_QWORD *)&v65[16];
  v39 = *(double *)v65;
  v37 = *((double *)&v63 + 1);
  v38 = v64;
  sub_1855B951C((uint64_t)v53, (uint64_t)v49);
  sub_1855BCDCC((uint64_t)v49, (uint64_t)v50);
  if ((v52 & 1) == 0)
  {
LABEL_13:
    v33 = v51;
    *(_QWORD *)a2 = v40;
    *(_QWORD *)(a2 + 8) = v41;
    *(_QWORD *)(a2 + 16) = v42;
    *(_QWORD *)(a2 + 24) = v43;
    *(_QWORD *)(a2 + 32) = v44;
    *(_QWORD *)(a2 + 40) = v45;
    *(_QWORD *)(a2 + 48) = v46;
    *(_BYTE *)(a2 + 56) = v47;
    v34 = v50[1];
    *(_OWORD *)(a2 + 64) = v50[0];
    *(_OWORD *)(a2 + 80) = v34;
    *(_OWORD *)(a2 + 96) = v50[2];
    *(_QWORD *)(a2 + 112) = v33;
    *(_BYTE *)(a2 + 120) = 0;
    sub_185228314(v40, v41, v42, v43, v44, v45, v46, v47);
    return;
  }
  v30 = (void *)objc_opt_self();
  v31 = v30;
  if (v39 == 0.0)
  {
    v29 = objc_msgSend(v30, sel_bezierPathWithRect_, v20, v37, v38);
    goto LABEL_10;
  }
  sub_1855B8DA4((uint64_t)v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228314, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D98);
  v32 = objc_msgSend(v31, sel__roundedRectBezierPath_withRoundedCorners_cornerRadius_segments_legacyCorners_, v36, 16, v35 == 1, v20, v37, v38, v39);
  if (v32)
  {
LABEL_15:
    v21 = v32;
    sub_1855B8DA4((uint64_t)v62, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
    goto LABEL_16;
  }
  __break(1u);
}

void sub_1855B951C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double x;
  double y;
  double width;
  double height;
  double v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  char v23;
  BOOL v24;
  char v25;
  double v26;
  double v27;
  double v28;
  double v29;
  char v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  char v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;

  x = *(double *)v2;
  y = *(double *)(v2 + 8);
  width = *(double *)(v2 + 16);
  height = *(double *)(v2 + 24);
  v8 = *(double *)(v2 + 32);
  v10 = *(_QWORD *)(v2 + 40);
  v9 = *(_QWORD *)(v2 + 48);
  v12 = *(double *)a1;
  v11 = *(double *)(a1 + 8);
  v14 = *(double *)(a1 + 16);
  v13 = *(double *)(a1 + 24);
  v44 = *(double *)(a1 + 32);
  v45 = v8;
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 48);
  v46.origin.x = *(CGFloat *)a1;
  v46.origin.y = v11;
  v46.size.width = v14;
  v46.size.height = v13;
  if (CGRectIsEmpty(v46))
  {
    if (qword_1EDD83B28 != -1)
      swift_once();
    v17 = 0;
    y = *((double *)&xmmword_1EDDA8850 + 1);
    x = *(double *)&xmmword_1EDDA8850;
    height = *((double *)&xmmword_1EDDA8860 + 1);
    width = *(double *)&xmmword_1EDDA8860;
    v10 = *((_QWORD *)&xmmword_1EDDA8870 + 1);
    v18 = *(double *)&xmmword_1EDDA8870;
    v9 = qword_1EDDA8880;
    goto LABEL_82;
  }
  v47.origin.x = x;
  v47.origin.y = y;
  v47.size.width = width;
  v47.size.height = height;
  v51.origin.x = v12;
  v51.origin.y = v11;
  v51.size.width = v14;
  v51.size.height = v13;
  if (!CGRectEqualToRect(v47, v51))
  {
    v19 = v12;
    v20 = v11;
    v21 = v14;
    v22 = v13;
    if (!v16)
      goto LABEL_29;
    v19 = v12;
    v20 = v11;
    v21 = v14;
    v22 = v13;
    if (v44 <= 0.0)
      goto LABEL_29;
    if ((v16 & 1) != 0)
    {
      if ((v16 & 2) == 0)
      {
        if ((v16 & 4) == 0)
        {
          v23 = 3;
          if ((v16 & 8) == 0)
            goto LABEL_28;
          goto LABEL_27;
        }
        v23 = 7;
LABEL_25:
        if ((v16 & 8) == 0 || (v23 & 0xC) == 0xCLL)
          goto LABEL_28;
LABEL_27:
        v23 |= 0xCu;
LABEL_28:
        v19 = UIRectInsetEdges(v23, v12, v11, v14, v13, v44 + v44 / -1.41421356);
LABEL_29:
        v24 = v45 <= 0.0 || v9 == 0;
        v25 = !v24;
        v26 = x;
        v27 = y;
        v28 = width;
        v29 = height;
        if (v24)
        {
LABEL_55:
          v34 = v19;
          if (CGRectContainsRect(*(CGRect *)(&v20 - 1), *(CGRect *)&v26))
          {
            v17 = 0;
            v18 = v45;
            goto LABEL_82;
          }
          v35 = x;
          v36 = y;
          v37 = width;
          v38 = height;
          if ((v25 & 1) == 0)
            goto LABEL_77;
          if ((v9 & 1) != 0)
          {
            if ((v9 & 2) == 0)
            {
              if ((v9 & 4) == 0)
              {
                v39 = 3;
                if ((v9 & 8) == 0)
                  goto LABEL_76;
                goto LABEL_75;
              }
              v39 = 7;
LABEL_73:
              if ((v9 & 8) == 0 || (v39 & 0xC) == 0xCLL)
                goto LABEL_76;
LABEL_75:
              v39 |= 0xCu;
LABEL_76:
              v35 = UIRectInsetEdges(v39, x, y, width, height, v45 + v45 / -1.41421356);
LABEL_77:
              v52.origin.x = v12;
              v52.origin.y = v11;
              v52.size.width = v14;
              v52.size.height = v13;
              if (CGRectContainsRect(*(CGRect *)&v35, v52))
              {
                v17 = 0;
                x = v12;
                y = v11;
                width = v14;
                height = v13;
                v18 = v44;
                v10 = v15;
                v9 = v16;
                goto LABEL_82;
              }
              v48.origin.x = v12;
              v48.origin.y = v11;
              v48.size.width = v14;
              v48.size.height = v13;
              v53.origin.x = x;
              v53.origin.y = y;
              v53.size.width = width;
              v53.size.height = height;
              if (!CGRectContainsRect(v48, v53))
              {
                v10 = 0;
                v9 = 0;
                v17 = 1;
                x = 0.0;
                y = 0.0;
                width = 0.0;
                height = 0.0;
                v18 = 0.0;
                goto LABEL_82;
              }
              v49.origin.x = x;
              v49.origin.y = y;
              v49.size.width = width;
              v49.size.height = height;
              v54.origin.x = v12;
              v54.origin.y = v11;
              v54.size.width = v14;
              v54.size.height = v13;
              v50 = CGRectIntersection(v49, v54);
              x = v50.origin.x;
              y = v50.origin.y;
              width = v50.size.width;
              height = v50.size.height;
              goto LABEL_6;
            }
            v39 = 11;
          }
          else
          {
            if ((v9 & 2) == 0)
            {
              if ((v9 & 4) == 0)
              {
                v39 = 0;
                if ((v9 & 8) == 0)
                  goto LABEL_76;
                goto LABEL_75;
              }
              v39 = 6;
              goto LABEL_73;
            }
            v39 = 9;
          }
          if ((v9 & 4) != 0)
            v39 = 15;
          goto LABEL_73;
        }
        v42 = v20;
        v43 = v19;
        v40 = v22;
        v41 = v21;
        if ((v9 & 1) != 0)
        {
          if ((v9 & 2) == 0)
          {
            if ((v9 & 4) == 0)
            {
              v30 = 3;
              if ((v9 & 8) == 0)
                goto LABEL_54;
              goto LABEL_53;
            }
            v30 = 7;
LABEL_51:
            if ((v9 & 8) == 0 || (v30 & 0xC) == 0xCLL)
              goto LABEL_54;
LABEL_53:
            v30 |= 0xCu;
LABEL_54:
            v26 = UIRectInsetEdges(v30, x, y, width, height, v45 + v45 / -1.41421356);
            v27 = v31;
            v28 = v32;
            v29 = v33;
            v20 = v42;
            v19 = v43;
            v22 = v40;
            v21 = v41;
            goto LABEL_55;
          }
          v30 = 11;
        }
        else
        {
          if ((v9 & 2) == 0)
          {
            if ((v9 & 4) == 0)
            {
              v30 = 0;
              if ((v9 & 8) == 0)
                goto LABEL_54;
              goto LABEL_53;
            }
            v30 = 6;
            goto LABEL_51;
          }
          v30 = 9;
        }
        if ((v9 & 4) != 0)
          v30 = 15;
        goto LABEL_51;
      }
      v23 = 11;
    }
    else
    {
      if ((v16 & 2) == 0)
      {
        if ((v16 & 4) == 0)
        {
          v23 = 0;
          if ((v16 & 8) == 0)
            goto LABEL_28;
          goto LABEL_27;
        }
        v23 = 6;
        goto LABEL_25;
      }
      v23 = 9;
    }
    if ((v16 & 4) != 0)
      v23 = 15;
    goto LABEL_25;
  }
LABEL_6:
  v18 = v45;
  v17 = 0;
  if (v45 < v44)
  {
    v9 &= v16;
    v18 = v44;
    v10 = v15;
  }
LABEL_82:
  *(double *)a2 = x;
  *(double *)(a2 + 8) = y;
  *(double *)(a2 + 16) = width;
  *(double *)(a2 + 24) = height;
  *(double *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v10;
  *(_QWORD *)(a2 + 48) = v9;
  *(_BYTE *)(a2 + 56) = v17;
}

void sub_1855B9954(void *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  CGFloat v20;
  uint64_t v21;
  id v22;
  double v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v39;
  char v40;
  __int128 v41;
  void *v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _BYTE v56[25];
  CGRect v57;
  CGRect v58;
  CGRect v59;

  v5 = sub_186506CB8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v2[5];
  v54 = v2[4];
  v55 = v9;
  *(_OWORD *)v56 = v2[6];
  *(_OWORD *)&v56[9] = *(__int128 *)((char *)v2 + 105);
  v10 = v2[1];
  v50 = *v2;
  v11 = v2[2];
  v12 = v2[3];
  v51 = v10;
  v52 = v11;
  v53 = v12;
  v13 = (void *)v54;
  v14 = *(_QWORD *)&v56[8];
  v15 = *(_QWORD *)&v56[16];
  v43 = v56[24];
  v48 = *((_QWORD *)&v54 + 1);
  v47 = *((_QWORD *)&v55 + 1);
  v45 = *(_QWORD *)&v56[8];
  v46 = *(_QWORD *)v56;
  v44 = *(_QWORD *)&v56[16];
  if ((v56[24] & 1) != 0)
  {
    v16 = a1;
    v17 = *(double *)v56;
    v18 = *((double *)&v55 + 1);
    v19 = *(double *)&v55;
    v20 = *((double *)&v54 + 1);
    v21 = v55;
    v22 = (id)v54;
LABEL_8:
    v27 = objc_msgSend(v22, sel_CGPath);

    v28 = objc_msgSend(v16, sel_CGPath);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0C9B8A0], v5);
    v29 = (void *)sub_186507A80();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v30 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithCGPath_, v29);

    objc_msgSend(v16, sel_bounds);
    v59.origin.x = v31;
    v59.origin.y = v32;
    v59.size.width = v33;
    v59.size.height = v34;
    v57.origin.x = v20;
    v57.origin.y = v19;
    v57.size.width = v18;
    v57.size.height = v17;
    v58 = CGRectIntersection(v57, v59);
    x = v58.origin.x;
    y = v58.origin.y;
    width = v58.size.width;
    height = v58.size.height;
    sub_1855B8DA4((uint64_t)&v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228314, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D98);
    sub_1855B8D8C(v13, v48, v21, v47, v46, v45, v44, v43);
    v39 = v53;
    v40 = BYTE8(v53);
    v49 = 1;
    v41 = v51;
    *(_OWORD *)a2 = v50;
    *(_OWORD *)(a2 + 16) = v41;
    *(_OWORD *)(a2 + 32) = v52;
    *(_QWORD *)(a2 + 48) = v39;
    *(_BYTE *)(a2 + 56) = v40;
    *(_QWORD *)(a2 + 64) = v30;
    *(CGFloat *)(a2 + 72) = x;
    *(CGFloat *)(a2 + 80) = y;
    *(CGFloat *)(a2 + 88) = width;
    *(CGFloat *)(a2 + 96) = height;
    *(_QWORD *)(a2 + 104) = 0;
    *(_QWORD *)(a2 + 112) = 0;
    *(_BYTE *)(a2 + 120) = 1;
    return;
  }
  v19 = *((double *)&v54 + 1);
  v42 = (void *)v54;
  v20 = *(double *)&v54;
  v17 = *((double *)&v55 + 1);
  v21 = v55;
  v18 = *(double *)&v55;
  v23 = *(double *)v56;
  v24 = (void *)objc_opt_self();
  v25 = v24;
  if (v23 == 0.0)
  {
    v16 = a1;
    v22 = objc_msgSend(v24, sel_bezierPathWithRect_, *(double *)&v13, v19, v18, v17);
LABEL_7:
    v13 = v42;
    goto LABEL_8;
  }
  sub_1855B8DA4((uint64_t)&v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228314, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D98);
  v26 = objc_msgSend(v25, sel__roundedRectBezierPath_withRoundedCorners_cornerRadius_segments_legacyCorners_, v15, 16, v14 == 1, *(double *)&v13, v19, v18, v17, v23);
  if (v26)
  {
    v22 = v26;
    v16 = a1;
    sub_1855B8DA4((uint64_t)&v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
    goto LABEL_7;
  }
  __break(1u);
}

double sub_1855B9D04()
{
  double result;

  if (qword_1EDD83B28 != -1)
    swift_once();
  *(_QWORD *)&xmmword_1EDDA87D0 = 1;
  *(__int128 *)((char *)&xmmword_1EDDA87D0 + 8) = 0u;
  unk_1EDDA87E8 = 0u;
  *(__int128 *)((char *)&xmmword_1EDDA87F0 + 8) = 0u;
  byte_1EDDA8808 = 6;
  xmmword_1EDDA8810 = xmmword_1EDDA8850;
  unk_1EDDA8820 = xmmword_1EDDA8860;
  result = *(double *)&xmmword_1EDDA8870;
  xmmword_1EDDA8830 = xmmword_1EDDA8870;
  qword_1EDDA8840 = qword_1EDDA8880;
  byte_1EDDA8848 = 0;
  return result;
}

void UIShape.ResolutionContext.init(view:)(void *a1@<X0>, _OWORD *a2@<X8>)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;
  uint64_t v15;
  _QWORD v17[7];
  char v18;
  char v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[2];

  v3 = objc_msgSend(a1, sel__outermostLayer);
  if (v3)
  {
    v4 = v3;
    sub_1855BA434((uint64_t)v17);
    v5 = (void *)v17[0];
    v6 = v17[1];
    v7 = v17[2];
    v8 = v17[3];
    v9 = v17[4];
    v10 = v17[5];
    v15 = v17[6];
    v14 = v18;
    objc_msgSend(v4, sel_bounds);
    v19 = 0;
    UIShape.resolve(in:)();
    sub_185228168(v5, v6, v7, v8, v9, v10, v15, v14);

    v11 = v25;
    a2[4] = v24;
    a2[5] = v11;
    a2[6] = v26[0];
    *(_OWORD *)((char *)a2 + 105) = *(_OWORD *)((char *)v26 + 9);
    v12 = v21;
    *a2 = v20;
    a2[1] = v12;
    v13 = v23;
    a2[2] = v22;
    a2[3] = v13;
  }
  else
  {
    __break(1u);
  }
}

void sub_1855B9EEC()
{
  sub_186507E04();
  __break(1u);
}

void sub_1855B9F40()
{
  sub_186507E04();
  __break(1u);
}

uint64_t sub_1855B9F94()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1855B9FA4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 80))();
}

uint64_t sub_1855B9FCC(uint64_t a1, _QWORD *a2)
{
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)a1 + 88))(*a2) & 1;
}

uint64_t sub_1855B9FFC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[6];
  _OWORD v12[2];

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 104);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (_OWORD *)MEMORY[0x1E0C80A78]();
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v4[5];
  v11[4] = v4[4];
  v11[5] = v7;
  v12[0] = v4[6];
  *(_OWORD *)((char *)v12 + 9) = *(_OWORD *)((char *)v4 + 105);
  v8 = v4[1];
  v11[0] = *v4;
  v11[1] = v8;
  v9 = v4[3];
  v11[2] = v4[2];
  v11[3] = v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, (uint64_t)v0 + *(_QWORD *)(v1 + 120), v2);
  (*(void (**)(_OWORD *, uint64_t))(*(_QWORD *)(v1 + 112) + 16))(v11, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_1855BA0D0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 104);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v17 - v8;
  v10 = swift_dynamicCastClass();
  if (v10)
  {
    v11 = v10;
    v12 = (uint64_t)v1 + *(_QWORD *)(v2 + 120);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v13(v9, v12, v3);
    v13(v6, v11 + *(_QWORD *)(*(_QWORD *)v11 + 120), v3);
    v14 = sub_1865074C8();
    v15 = *(void (**)(char *, uint64_t))(v4 + 8);
    v15(v6, v3);
    v15(v9, v3);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_1855BA1DC()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 104) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
}

uint64_t sub_1855BA1F8()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 104) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
  return swift_deallocClassInstance();
}

double sub_1855BA234()
{
  double result;

  result = 0.0;
  xmmword_1EDDA8860 = 0u;
  xmmword_1EDDA8870 = 0u;
  xmmword_1EDDA8850 = 0u;
  qword_1EDDA8880 = -1;
  return result;
}

void sub_1855BA254(uint64_t a1@<X8>)
{
  uint64_t v1;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  double Width;
  double Height;
  double v9;
  uint64_t v10;
  double v12;
  double v14;
  double v15;
  uint64_t v16;
  double v17;
  double v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;

  v3 = *(double *)v1;
  v4 = *(double *)(v1 + 8);
  v5 = *(double *)(v1 + 16);
  v6 = *(double *)(v1 + 24);
  v19.origin.x = *(CGFloat *)v1;
  v19.origin.y = v4;
  v19.size.width = v5;
  v19.size.height = v6;
  Width = CGRectGetWidth(v19);
  v20.origin.x = v3;
  v20.origin.y = v4;
  v20.size.width = v5;
  v20.size.height = v6;
  Height = CGRectGetHeight(v20);
  if (Height >= Width)
    v9 = Width;
  else
    v9 = Height;
  v10 = *(_QWORD *)(v1 + 48);
  if ((~(_BYTE)v10 & 3) == 0 || (*(_QWORD *)(v1 + 48) & 0xCLL) == 12)
  {
    v21.origin.x = v3;
    v21.origin.y = v4;
    v21.size.width = v5;
    v21.size.height = v6;
    v12 = CGRectGetWidth(v21) * 0.5;
    if (v12 < v9)
      v9 = v12;
  }
  if ((~(_DWORD)v10 & 5) == 0 || (v10 & 0xA) == 10)
  {
    v22.origin.x = v3;
    v22.origin.y = v4;
    v22.size.width = v5;
    v22.size.height = v6;
    v14 = CGRectGetHeight(v22) * 0.5;
    if (v14 < v9)
      v9 = v14;
  }
  v15 = *(double *)(v1 + 32);
  v16 = *(_QWORD *)(v1 + 40);
  if (v10 == -1 && v9 <= v15)
  {
    v23.origin.x = v3;
    v23.origin.y = v4;
    v23.size.width = v5;
    v23.size.height = v6;
    v17 = CGRectGetWidth(v23);
    v24.origin.x = v3;
    v24.origin.y = v4;
    v24.size.width = v5;
    v24.size.height = v6;
    if (v17 == CGRectGetHeight(v24))
      v16 = 1;
  }
  if (v9 >= v15)
    v18 = v15;
  else
    v18 = v9;
  *(CGFloat *)a1 = v3;
  *(CGFloat *)(a1 + 8) = v4;
  if (v18 < 0.0)
    v18 = 0.0;
  *(CGFloat *)(a1 + 16) = v5;
  *(CGFloat *)(a1 + 24) = v6;
  *(double *)(a1 + 32) = v18;
  *(_QWORD *)(a1 + 40) = v16;
  *(_QWORD *)(a1 + 48) = v10;
}

BOOL sub_1855BA3C8(uint64_t a1, uint64_t a2)
{
  double v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  _BOOL8 result;

  v2 = *(double *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v5 = *(double *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  v8 = CGRectEqualToRect(*(CGRect *)a1, *(CGRect *)a2);
  result = 0;
  if (v8 && v2 == v5 && v4 == v7)
    return v3 == v6;
  return result;
}

void sub_1855BA434(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;

  v3 = objc_msgSend(v1, sel_mask);
  if (v3)
  {
    v21 = v3;
    sub_1855BA434();

  }
  else
  {
    objc_msgSend(v1, sel_cornerRadius);
    if (v4 > 0.0 && objc_msgSend(v1, sel_maskedCorners))
    {
      objc_msgSend(v1, sel_bounds);
      v6 = v5;
      v8 = v7;
      v10 = v9;
      v12 = v11;
      objc_msgSend(v1, sel_cornerRadius);
      v14 = v13;
      v15 = sub_1856B5CD8(objc_msgSend(v1, sel_cornerCurve));
      v16 = sub_1856B5DF4((char)objc_msgSend(v1, sel_maskedCorners));
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v8;
      *(_QWORD *)(a1 + 16) = v10;
      *(_QWORD *)(a1 + 24) = v12;
      *(_QWORD *)(a1 + 32) = v14;
      *(_QWORD *)(a1 + 40) = v15;
      *(_QWORD *)(a1 + 48) = v16;
    }
    else
    {
      objc_msgSend(v1, sel_bounds);
      *(_QWORD *)a1 = v17;
      *(_QWORD *)(a1 + 8) = v18;
      *(_QWORD *)(a1 + 16) = v19;
      *(_QWORD *)(a1 + 24) = v20;
      *(_QWORD *)(a1 + 32) = 0;
      *(_QWORD *)(a1 + 40) = 0;
      *(_QWORD *)(a1 + 48) = -1;
    }
    *(_BYTE *)(a1 + 56) = 1;
  }
}

void sub_1855BA594(uint64_t a1)
{
  void *v1;
  double v2;
  void *v3;
  double v4;
  double v5;
  CGFloat v6;
  double v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  CGAffineTransform v22;
  uint64_t v23;

  v3 = *(void **)(a1 + 64);
  v2 = *(double *)(a1 + 72);
  v5 = *(double *)(a1 + 80);
  v4 = *(double *)(a1 + 88);
  v7 = *(double *)(a1 + 96);
  v6 = *(double *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  if (*(_BYTE *)(a1 + 120) != 1)
  {
    v22.a = *(CGFloat *)(a1 + 64);
    v22.b = v2;
    v22.c = v5;
    v22.d = v4;
    v22.tx = v7;
    v22.ty = v6;
    v23 = v8;
    sub_1855BA83C();
    return;
  }
  v19 = *(_QWORD *)(a1 + 104);
  v20 = *(_QWORD *)(a1 + 112);
  v9 = v3;
  objc_msgSend(v1, sel_setFrame_, v2, v5, v4, v7);
  objc_msgSend(v1, sel_setCornerRadius_, 0.0);
  if (v2 == 0.0 && v5 == 0.0)
  {
    v10 = v9;
  }
  else
  {
    objc_msgSend(v9, sel_copy);
    sub_186507B1C();
    swift_unknownObjectRelease();
    sub_1851F9080(0, (unint64_t *)&unk_1EDD8AB10);
    swift_dynamicCast();
    v10 = v21;
    CGAffineTransformMakeTranslation(&v22, -v2, -v5);
    objc_msgSend(v21, sel_applyTransform_, &v22);
  }
  v11 = objc_msgSend(v1, sel_mask);
  if (!v11)
    goto LABEL_11;
  v12 = v11;
  objc_opt_self();
  v13 = swift_dynamicCastObjCClass();
  if (!v13)
  {

LABEL_11:
    v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
    v17 = objc_msgSend(v10, sel_CGPath);
    objc_msgSend(v16, sel_setPath_, v17);

    v18 = v16;
    objc_msgSend(v1, sel_setMask_, v18);

    goto LABEL_12;
  }
  v14 = (void *)v13;
  v15 = objc_msgSend(v10, sel_CGPath);
  objc_msgSend(v14, sel_setPath_, v15);

LABEL_12:
  sub_1855B8D8C(v3, *(uint64_t *)&v2, *(uint64_t *)&v5, *(uint64_t *)&v4, *(uint64_t *)&v7, v19, v20, 1);
}

id sub_1855BA83C()
{
  void *v0;
  double v1;
  _QWORD *v2;
  double v4[4];
  double v5;
  unint64_t v6;
  uint64_t v7;

  sub_1855BA254((uint64_t)v4);
  objc_msgSend(v0, sel_setFrame_, v4[0], v4[1], v4[2], v4[3]);
  v1 = v5;
  if (v5 > 0.0)
    objc_msgSend(v0, sel_setMasksToBounds_, 1);
  objc_msgSend(v0, sel_setCornerRadius_, v1);
  if (v6 > 2)
    v2 = (_QWORD *)MEMORY[0x1E0CD2A68];
  else
    v2 = (_QWORD *)qword_1E16A33E0[v6];
  objc_msgSend(v0, sel_setCornerCurve_, *v2);
  objc_msgSend(v0, sel_setMaskedCorners_, sub_1856B5E6C(v7));
  return objc_msgSend(v0, sel_setMask_, 0);
}

void sub_1855BA924(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char v18;
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  __int128 v50[4];

  v3 = *(void **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(unsigned __int8 *)(a1 + 56);
  v11 = *(void **)v1;
  v10 = *(_QWORD *)(v1 + 8);
  v13 = *(_QWORD *)(v1 + 16);
  v12 = *(_QWORD *)(v1 + 24);
  v15 = *(_QWORD *)(v1 + 32);
  v14 = *(_QWORD *)(v1 + 40);
  v16 = *(_QWORD *)(v1 + 48);
  v17 = *(unsigned __int8 *)(v1 + 56);
  if (v17 != 255)
  {
    v21 = *(void **)a1;
    v22 = *(_QWORD *)(a1 + 8);
    v23 = *(_QWORD *)(a1 + 16);
    v24 = *(_QWORD *)(a1 + 24);
    v25 = *(_QWORD *)(a1 + 32);
    v26 = *(_QWORD *)(a1 + 40);
    v20 = *(_QWORD *)(a1 + 48);
    *(_QWORD *)&v27 = *(_QWORD *)v1;
    *((_QWORD *)&v27 + 1) = v10;
    v28 = v13;
    v29 = v12;
    v30 = v15;
    v31 = v14;
    v32 = v16;
    v33 = v17;
    if (v9 != 255)
    {
      sub_1855B7E0C(&v27, v50);
      v34 = v21;
      v35 = v22;
      v36 = v23;
      v37 = v24;
      v38 = v25;
      v39 = v26;
      v40 = v20;
      v41 = v9;
      sub_1852287BC(v11, v10, v13, v12, v15, v14, v16, v17);
      sub_1852287BC(v11, v10, v13, v12, v15, v14, v16, v17);
      sub_1852287BC(v21, v22, v23, v24, v25, v26, v20, v9);
      sub_1855B75AC(v50);
      v19 = v18;
      sub_185223490(v21, v22, v23, v24, v25, v26, v20, v9);
      sub_1855BCD90((uint64_t)v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168);
      sub_185223490(v11, v10, v13, v12, v15, v14, v16, v17);
      if ((v19 & 1) != 0)
        return;
LABEL_9:

      *(_QWORD *)(v1 + 64) = 0;
      return;
    }
    sub_185228314(v11, v10, v13, v12, v15, v14, v16, v17);
    sub_185228314(v11, v10, v13, v12, v15, v14, v16, v17);
    sub_185228168(v11, v10, v13, v12, v15, v14, v16, v17);
    v8 = v20;
    v3 = v21;
    v6 = v25;
    v7 = v26;
    v4 = v23;
    v5 = v24;
    v2 = v22;
LABEL_8:
    v34 = v11;
    v35 = v10;
    v36 = v13;
    v37 = v12;
    v38 = v15;
    v39 = v14;
    v40 = v16;
    v41 = v17;
    v42 = v3;
    v43 = v2;
    v44 = v4;
    v45 = v5;
    v46 = v6;
    v47 = v7;
    v48 = v8;
    v49 = v9;
    sub_1852287BC(v3, v2, v4, v5, v6, v7, v8, v9);
    sub_1855BCD00((uint64_t)&v34);
    goto LABEL_9;
  }
  if (v9 != 255)
    goto LABEL_8;
}

uint64_t UICornerCurve.description.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 0x6974616D6F747561;
    case 1:
      return 0x72616C7563726963;
    case 2:
      return 0x6F756E69746E6F63;
  }
  sub_186507F54();
  sub_186507564();
  swift_bridgeObjectRelease();
  sub_186507564();
  return 0x206E776F6E6B6E75;
}

uint64_t UICornerCurve.debugDescription.getter(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 0x6974616D6F747561;
    case 1:
      return 0x72616C7563726963;
    case 2:
      return 0x6F756E69746E6F63;
  }
  sub_186507F54();
  sub_186507564();
  swift_bridgeObjectRelease();
  sub_186507564();
  return 0x206E776F6E6B6E75;
}

uint64_t sub_1855BADA8()
{
  uint64_t *v0;

  return UICornerCurve.description.getter(*v0);
}

uint64_t sub_1855BADB0()
{
  uint64_t *v0;

  return UICornerCurve.debugDescription.getter(*v0);
}

uint64_t UIShape.description.getter()
{
  __int128 *v0;
  _OWORD v2[4];

  sub_1855B7E0C(v0, v2);
  sub_1855BAE80();
  sub_186507564();
  swift_bridgeObjectRelease();
  return 0x2E65706168534955;
}

{
  uint64_t v0;
  char v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(void **)(v0 + OBJC_IVAR___UIShape_value);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR___UIShape_value + 8);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR___UIShape_value + 16);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR___UIShape_value + 24);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR___UIShape_value + 32);
  v8 = *(_QWORD *)(v0 + OBJC_IVAR___UIShape_value + 40);
  v9 = *(_QWORD *)(v0 + OBJC_IVAR___UIShape_value + 48);
  v1 = *(_BYTE *)(v0 + OBJC_IVAR___UIShape_value + 56);
  sub_185228314(v3, v4, v5, v6, v7, v8, v9, v1);
  sub_1855BAE80();
  sub_186507564();
  swift_bridgeObjectRelease();
  sub_185228168(v3, v4, v5, v6, v7, v8, v9, v1);
  return 0x2E65706168534955;
}

uint64_t UIShape.debugDescription.getter()
{
  __int128 *v0;
  _OWORD v2[4];

  sub_1855B7E0C(v0, v2);
  sub_1855BAE80();
  sub_186507564();
  swift_bridgeObjectRelease();
  return 0x2E65706168534955;
}

{
  uint64_t v0;
  char v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(void **)(v0 + OBJC_IVAR___UIShape_value);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR___UIShape_value + 8);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR___UIShape_value + 16);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR___UIShape_value + 24);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR___UIShape_value + 32);
  v8 = *(_QWORD *)(v0 + OBJC_IVAR___UIShape_value + 40);
  v9 = *(_QWORD *)(v0 + OBJC_IVAR___UIShape_value + 48);
  v1 = *(_BYTE *)(v0 + OBJC_IVAR___UIShape_value + 56);
  sub_185228314(v3, v4, v5, v6, v7, v8, v9, v1);
  sub_1855BAE80();
  sub_186507564();
  swift_bridgeObjectRelease();
  sub_185228168(v3, v4, v5, v6, v7, v8, v9, v1);
  return 0x2E65706168534955;
}

void sub_1855BAE80()
{
  __int128 *v0;
  _OWORD v1[4];
  _OWORD v2[3];

  sub_1855B7E0C(v0, v1);
  sub_1855B7E0C(v0, v2);
  __asm { BR              X10 }
}

uint64_t sub_1855BAEE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)(v0 - 168) = 0;
  *(_QWORD *)(v0 - 160) = 0xE000000000000000;
  sub_186507C30();
  v1 = *(_QWORD *)(v0 - 160);
  *(_QWORD *)(v0 - 168) = *(_QWORD *)(v0 - 168);
  *(_QWORD *)(v0 - 160) = v1;
  sub_186507564();
  sub_18650778C();
  sub_186507564();
  swift_bridgeObjectRelease();
  sub_186507564();
  UICornerCurve.description.getter(v3);
  sub_186507564();
  swift_bridgeObjectRelease();
  sub_186507564();
  type metadata accessor for UIRectCorner(0);
  sub_186507D74();
  sub_186507564();
  return *(_QWORD *)(v0 - 168);
}

void sub_1855BB2F4()
{
  JUMPOUT(0x1855BB2D0);
}

uint64_t sub_1855BB3C0()
{
  __int128 *v0;
  _OWORD v2[4];

  sub_1855B7E0C(v0, v2);
  sub_1855BAE80();
  sub_186507564();
  swift_bridgeObjectRelease();
  return 0x2E65706168534955;
}

uint64_t sub_1855BB424(uint64_t a1, uint64_t a2)
{
  return sub_1855BB8D8(a1, a2, (uint64_t (*)(uint64_t, uint64_t *))sub_1855B7E0C, (uint64_t (*)(uint64_t))sub_1855BAE80);
}

void sub_1855BB438()
{
  __int128 *v0;
  _OWORD v1[4];

  sub_1855B7E0C(v0, v1);
  sub_1855BAE80();
}

unint64_t UIShape.Resolved.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;

  v2 = *(void **)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 112);
  v8 = *(_BYTE *)(v0 + 120);
  sub_186507C30();
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
    v9 = objc_msgSend(v2, sel_description);
    sub_1865074F8();

    sub_186507564();
    swift_bridgeObjectRelease();
    sub_186507564();
    sub_1855B8D8C(v2, v1, v4, v3, v6, v5, v7, 1);
  }
  else
  {
    sub_1855BB944();
    sub_186507564();
    swift_bridgeObjectRelease();
    sub_186507564();
  }
  sub_186507564();
  swift_bridgeObjectRelease();
  return 0xD000000000000011;
}

unint64_t UIShape.Resolved.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;

  v2 = *(void **)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 112);
  v8 = *(_BYTE *)(v0 + 120);
  sub_186507C30();
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
    v9 = objc_msgSend(v2, sel_description);
    sub_1865074F8();

    sub_186507564();
    swift_bridgeObjectRelease();
    sub_186507564();
    sub_1855B8D8C(v2, v1, v4, v3, v6, v5, v7, 1);
  }
  else
  {
    sub_1855BB944();
    sub_186507564();
    swift_bridgeObjectRelease();
    sub_186507564();
  }
  sub_186507564();
  swift_bridgeObjectRelease();
  return 0xD000000000000011;
}

uint64_t sub_1855BB78C()
{
  __int128 *v0;
  uint64_t v1;
  void *v2;
  id v3;
  _OWORD v5[3];
  uint64_t v6;
  char v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v1 = (uint64_t)v0;
  sub_1855B7E0C(v0, v5);
  if ((v7 & 1) != 0)
  {
    v2 = *(void **)&v5[0];
    *(_QWORD *)&v8 = 0x2868746170;
    *((_QWORD *)&v8 + 1) = 0xE500000000000000;
    sub_1855BCD90(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1855B8D98);
    v3 = objc_msgSend(v2, sel_description);
    sub_1865074F8();

    sub_186507564();
    swift_bridgeObjectRelease();
    sub_186507564();
    sub_1855BCD90(v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1855B8D8C);
    return v8;
  }
  else
  {
    v8 = v5[0];
    v9 = v5[1];
    v10 = v5[2];
    v11 = v6;
    sub_1855BB944();
    sub_186507564();
    swift_bridgeObjectRelease();
    sub_186507564();
    return 0x2874636572;
  }
}

uint64_t sub_1855BB8C4(uint64_t a1, uint64_t a2)
{
  return sub_1855BB8D8(a1, a2, (uint64_t (*)(uint64_t, uint64_t *))sub_1855B7E0C, (uint64_t (*)(uint64_t))sub_1855BB78C);
}

uint64_t sub_1855BB8D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t *), uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v8;

  v6 = a3(v4, &v8);
  return a4(v6);
}

uint64_t sub_1855BB910()
{
  __int128 *v0;
  _OWORD v2[4];

  sub_1855B7E0C(v0, v2);
  return sub_1855BB78C();
}

uint64_t sub_1855BB944()
{
  uint64_t v0;
  uint64_t v1;

  sub_186507564();
  type metadata accessor for CGRect(0);
  sub_186507D74();
  if (*(double *)(v0 + 32) != 0.0)
  {
    sub_186507C30();
    swift_bridgeObjectRelease();
    sub_18650778C();
    sub_186507564();
    swift_bridgeObjectRelease();
    sub_186507564();
    swift_bridgeObjectRelease();
    v1 = *(_QWORD *)(v0 + 40);
    if (v1)
    {
      sub_186507C30();
      swift_bridgeObjectRelease();
      UICornerCurve.description.getter(v1);
      sub_186507564();
      swift_bridgeObjectRelease();
      sub_186507564();
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(v0 + 48) != -1)
    {
      sub_186507C30();
      sub_186507564();
      type metadata accessor for UIRectCorner(0);
      sub_186507D74();
      sub_186507564();
      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

BOOL sub_1855BBB54(__int128 *a1, __int128 *a2)
{
  CGFloat y;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat width;
  CGFloat height;
  CGFloat v11;
  char v12;
  CGPoint v14;
  CGFloat v15;
  CGFloat v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  _BOOL4 v23;
  _BOOL4 v24;
  CGRect v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  CGPoint v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;

  sub_1855B7E0C(a1, &v30);
  if ((v36 & 1) != 0)
  {
    y = v30.y;
    v5 = v31;
    v6 = v32;
    v7 = v33;
    sub_1855B7E0C(a2, &v25);
    if (v29 == 1)
    {
      v8 = v25.origin.y;
      width = v25.size.width;
      height = v25.size.height;
      v11 = v26;
      sub_1851F9080(0, (unint64_t *)&qword_1EDD82C80);
      sub_1855BCD90((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1855B8D98);
      sub_1855BCD90((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1855B8D98);
      v12 = sub_186507A44();
      sub_1855BCD90((uint64_t)a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1855B8D8C);
      sub_1855BCD90((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1855B8D8C);
      if ((v12 & 1) != 0)
      {
        v37.origin.x = y;
        v37.origin.y = v5;
        v37.size.width = v6;
        v37.size.height = v7;
        v39.origin.x = v8;
        v39.origin.y = width;
        v39.size.width = height;
        v39.size.height = v11;
        return CGRectEqualToRect(v37, v39);
      }
    }
    return 0;
  }
  v14 = v30;
  v15 = v31;
  v16 = v32;
  v17 = v33;
  v19 = v34;
  v18 = v35;
  sub_1855B7E0C(a2, &v25);
  if ((v29 & 1) != 0)
    return 0;
  v20 = v26;
  v21 = v27;
  v22 = v28;
  v38.origin = v14;
  v38.size.width = v15;
  v38.size.height = v16;
  v23 = CGRectEqualToRect(v38, v25);
  v24 = v17 == v20 && v23;
  if (v19 != v21)
    v24 = 0;
  return v18 == v22 && v24;
}

BOOL _s5UIKit7UIShapeV8ResolvedV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  CGFloat v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  CGFloat v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char v12;
  BOOL v14;
  CGFloat v16;
  uint64_t v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat rect2;
  CGFloat v21;
  uint64_t v22;
  uint64_t v23;
  CGRect v24;
  CGRect v25;

  v2 = *(void **)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(double *)(a1 + 88);
  v5 = *(uint64_t *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 112);
  v7 = *(void **)(a2 + 64);
  v8 = *(double *)(a2 + 88);
  v10 = *(double *)(a2 + 96);
  v9 = *(_QWORD *)(a2 + 104);
  v11 = *(_QWORD *)(a2 + 112);
  if ((*(_BYTE *)(a1 + 120) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 120) & 1) != 0)
    {
      v19 = *(double *)(a1 + 80);
      rect2 = *(double *)(a2 + 80);
      v21 = *(double *)(a1 + 72);
      v22 = *(_QWORD *)(a1 + 104);
      v16 = *(double *)(a2 + 72);
      v17 = *(_QWORD *)(a2 + 112);
      sub_1851F9080(0, (unint64_t *)&qword_1EDD82C80);
      v18 = *(double *)&v5;
      sub_1855B8D98(v2, *(uint64_t *)&v21, v3, *(uint64_t *)&v4, v5, v22, v6, 1);
      sub_1855B8D98(v7, *(uint64_t *)&v16, *(uint64_t *)&rect2, *(uint64_t *)&v8, *(uint64_t *)&v10, v9, v17, 1);
      v12 = sub_186507A44();
      sub_1855B8D8C(v7, *(uint64_t *)&v16, *(uint64_t *)&rect2, *(uint64_t *)&v8, *(uint64_t *)&v10, v9, v17, 1);
      sub_1855B8D8C(v2, *(uint64_t *)&v21, *(uint64_t *)&v19, *(uint64_t *)&v4, *(uint64_t *)&v18, v22, v6, 1);
      if ((v12 & 1) != 0)
      {
        v24.origin.x = v21;
        v24.origin.y = v19;
        v24.size.width = v4;
        v24.size.height = v18;
        v25.size.height = v10;
        v25.size.width = v8;
        v25.origin.y = rect2;
        v25.origin.x = v16;
        return CGRectEqualToRect(v24, v25);
      }
    }
    return 0;
  }
  if ((*(_BYTE *)(a2 + 120) & 1) != 0)
    return 0;
  v23 = *(_QWORD *)(a1 + 104);
  if (!CGRectEqualToRect(*(CGRect *)(a1 + 64), *(CGRect *)(a2 + 64)))
    return 0;
  v14 = *(double *)&v5 == v10 && v23 == v9;
  return v14 && v6 == v11;
}

unint64_t sub_1855BBEDC(uint64_t a1)
{
  unint64_t result;

  result = sub_1855BBF00();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1855BBF00()
{
  unint64_t result;

  result = qword_1EDD85350[0];
  if (!qword_1EDD85350[0])
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UIShape, &type metadata for UIShape);
    atomic_store(result, qword_1EDD85350);
  }
  return result;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy121_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_OWORD *)(a1 + 105) = *(__int128 *)((char *)a2 + 105);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

ValueMetadata *type metadata accessor for UIShape.ResolutionContext()
{
  return &type metadata for UIShape.ResolutionContext;
}

void _s5UIKit7UIShapeV8ResolvedVwxx_0(uint64_t a1)
{
  sub_185228168(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  sub_1855B8D8C(*(id *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_BYTE *)(a1 + 120));
}

uint64_t _s5UIKit7UIShapeV8ResolvedVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = a2;
  v4 = *(id *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_BYTE *)(a2 + 56);
  sub_185228314(*(id *)a2, v5, v6, v7, v8, v9, v10, v11);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = v11;
  v12 = *(void **)(v2 + 64);
  v13 = *(_QWORD *)(v2 + 72);
  v14 = *(_QWORD *)(v2 + 80);
  v15 = *(_QWORD *)(v2 + 88);
  v16 = *(_QWORD *)(v2 + 96);
  v17 = *(_QWORD *)(v2 + 104);
  v18 = *(_QWORD *)(v2 + 112);
  LOBYTE(v2) = *(_BYTE *)(v2 + 120);
  sub_1855B8D98(v12, v13, v14, v15, v16, v17, v18, v2);
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_BYTE *)(a1 + 120) = v2;
  return a1;
}

uint64_t _s5UIKit7UIShapeV8ResolvedVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v2 = a2;
  v4 = *(id *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_BYTE *)(a2 + 56);
  sub_185228314(*(id *)a2, v5, v6, v7, v8, v9, v10, v11);
  v12 = *(void **)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  v19 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v11;
  sub_185228168(v12, v13, v14, v15, v16, v17, v18, v19);
  v20 = *(void **)(v2 + 64);
  v21 = *(_QWORD *)(v2 + 72);
  v22 = *(_QWORD *)(v2 + 80);
  v23 = *(_QWORD *)(v2 + 88);
  v24 = *(_QWORD *)(v2 + 96);
  v25 = *(_QWORD *)(v2 + 104);
  v26 = *(_QWORD *)(v2 + 112);
  LOBYTE(v2) = *(_BYTE *)(v2 + 120);
  sub_1855B8D98(v20, v21, v22, v23, v24, v25, v26, v2);
  v27 = *(void **)(a1 + 64);
  v28 = *(_QWORD *)(a1 + 72);
  v29 = *(_QWORD *)(a1 + 80);
  v30 = *(_QWORD *)(a1 + 88);
  v31 = *(_QWORD *)(a1 + 96);
  v32 = *(_QWORD *)(a1 + 104);
  v33 = *(_QWORD *)(a1 + 112);
  v34 = *(_BYTE *)(a1 + 120);
  *(_QWORD *)(a1 + 64) = v20;
  *(_QWORD *)(a1 + 72) = v21;
  *(_QWORD *)(a1 + 80) = v22;
  *(_QWORD *)(a1 + 88) = v23;
  *(_QWORD *)(a1 + 96) = v24;
  *(_QWORD *)(a1 + 104) = v25;
  *(_QWORD *)(a1 + 112) = v26;
  *(_BYTE *)(a1 + 120) = v2;
  sub_1855B8D8C(v27, v28, v29, v30, v31, v32, v33, v34);
  return a1;
}

uint64_t _s5UIKit7UIShapeV8ResolvedVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  char v14;
  uint64_t v15;
  char v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int128 v25;

  v4 = *(_QWORD *)(a2 + 48);
  v5 = *(_BYTE *)(a2 + 56);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v4;
  v14 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v5;
  sub_185228168(v6, v7, v8, v9, v10, v11, v12, v14);
  v15 = *(_QWORD *)(a2 + 112);
  v16 = *(_BYTE *)(a2 + 120);
  v17 = *(void **)(a1 + 64);
  v18 = *(_QWORD *)(a1 + 72);
  v19 = *(_QWORD *)(a1 + 80);
  v20 = *(_QWORD *)(a1 + 88);
  v21 = *(_QWORD *)(a1 + 96);
  v22 = *(_QWORD *)(a1 + 104);
  v23 = *(_QWORD *)(a1 + 112);
  v24 = *(_BYTE *)(a1 + 120);
  v25 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v25;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = v15;
  *(_BYTE *)(a1 + 120) = v16;
  sub_1855B8D8C(v17, v18, v19, v20, v21, v22, v23, v24);
  return a1;
}

uint64_t _s5UIKit7UIShapeV8ResolvedVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 121))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 120);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s5UIKit7UIShapeV8ResolvedVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 120) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 121) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 121) = 0;
    if (a2)
      *(_BYTE *)(result + 120) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for UIShape.Resolved()
{
  return &type metadata for UIShape.Resolved;
}

uint64_t dispatch thunk of UIShapeProvider.resolve(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for UIShapeProviderBox()
{
  return objc_opt_self();
}

uint64_t sub_1855BC36C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void destroy for CachedShape(uint64_t a1)
{
  int v2;

  v2 = *(unsigned __int8 *)(a1 + 56);
  if (v2 != 255)
    sub_185228168(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v2);

}

uint64_t initializeWithCopy for CachedShape(uint64_t a1, uint64_t *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  void *v13;
  id v14;

  v4 = *((unsigned __int8 *)a2 + 56);
  if (v4 == 255)
  {
    v12 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
  }
  else
  {
    v5 = *a2;
    v6 = a2[1];
    v7 = a2[2];
    v8 = a2[3];
    v9 = a2[4];
    v10 = a2[5];
    v11 = a2[6];
    sub_185228314((id)*a2, v6, v7, v8, v9, v10, v11, v4);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    *(_QWORD *)(a1 + 48) = v11;
    *(_BYTE *)(a1 + 56) = v4;
  }
  v13 = (void *)a2[8];
  *(_QWORD *)(a1 + 64) = v13;
  v14 = v13;
  return a1;
}

uint64_t assignWithCopy for CachedShape(uint64_t a1, __int128 *a2)
{
  int v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  void *v33;
  void *v34;
  id v35;

  v4 = *((unsigned __int8 *)a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) == 255)
  {
    if (v4 == 255)
    {
      v30 = *a2;
      v31 = a2[1];
      v32 = a2[2];
      *(_OWORD *)(a1 + 41) = *(__int128 *)((char *)a2 + 41);
      *(_OWORD *)(a1 + 16) = v31;
      *(_OWORD *)(a1 + 32) = v32;
      *(_OWORD *)a1 = v30;
    }
    else
    {
      v20 = *(_QWORD *)a2;
      v21 = *((_QWORD *)a2 + 1);
      v22 = *((_QWORD *)a2 + 2);
      v23 = *((_QWORD *)a2 + 3);
      v24 = *((_QWORD *)a2 + 4);
      v25 = *((_QWORD *)a2 + 5);
      v26 = *((_QWORD *)a2 + 6);
      sub_185228314(*(id *)a2, v21, v22, v23, v24, v25, v26, v4);
      *(_QWORD *)a1 = v20;
      *(_QWORD *)(a1 + 8) = v21;
      *(_QWORD *)(a1 + 16) = v22;
      *(_QWORD *)(a1 + 24) = v23;
      *(_QWORD *)(a1 + 32) = v24;
      *(_QWORD *)(a1 + 40) = v25;
      *(_QWORD *)(a1 + 48) = v26;
      *(_BYTE *)(a1 + 56) = v4;
    }
  }
  else if (v4 == 255)
  {
    sub_1855BC640(a1);
    v28 = a2[1];
    v27 = a2[2];
    v29 = *a2;
    *(_OWORD *)(a1 + 41) = *(__int128 *)((char *)a2 + 41);
    *(_OWORD *)(a1 + 16) = v28;
    *(_OWORD *)(a1 + 32) = v27;
    *(_OWORD *)a1 = v29;
  }
  else
  {
    v5 = *(id *)a2;
    v6 = *((_QWORD *)a2 + 1);
    v7 = *((_QWORD *)a2 + 2);
    v8 = *((_QWORD *)a2 + 3);
    v9 = *((_QWORD *)a2 + 4);
    v10 = *((_QWORD *)a2 + 5);
    v11 = *((_QWORD *)a2 + 6);
    sub_185228314(*(id *)a2, v6, v7, v8, v9, v10, v11, v4);
    v12 = *(void **)a1;
    v13 = *(_QWORD *)(a1 + 8);
    v14 = *(_QWORD *)(a1 + 16);
    v15 = *(_QWORD *)(a1 + 24);
    v16 = *(_QWORD *)(a1 + 32);
    v17 = *(_QWORD *)(a1 + 40);
    v18 = *(_QWORD *)(a1 + 48);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    *(_QWORD *)(a1 + 48) = v11;
    v19 = *(_BYTE *)(a1 + 56);
    *(_BYTE *)(a1 + 56) = v4;
    sub_185228168(v12, v13, v14, v15, v16, v17, v18, v19);
  }
  v33 = *(void **)(a1 + 64);
  v34 = (void *)*((_QWORD *)a2 + 8);
  *(_QWORD *)(a1 + 64) = v34;
  v35 = v34;

  return a1;
}

uint64_t sub_1855BC640(uint64_t a1)
{
  sub_185228168(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for CachedShape(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  void *v16;

  v4 = *(unsigned __int8 *)(a1 + 56);
  if (v4 == 255)
    goto LABEL_5;
  v5 = *(unsigned __int8 *)(a2 + 56);
  if (v5 == 255)
  {
    sub_1855BC640(a1);
LABEL_5:
    v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v15;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    goto LABEL_6;
  }
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(void **)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 56) = v5;
  sub_185228168(v7, v8, v9, v10, v11, v12, v13, v4);
LABEL_6:
  v16 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);

  return a1;
}

uint64_t getEnumTagSinglePayload for CachedShape(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 64);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CachedShape(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 0;
    if (a2)
      *(_QWORD *)(result + 64) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CachedShape()
{
  return &type metadata for CachedShape;
}

void destroy for UIShape.Resolved.Storage(uint64_t a1)
{
  sub_1855B8D8C(*(id *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t initializeWithCopy for UIShape.Resolved.Storage(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 56);
  sub_1855B8D98(*(id *)a2, v4, v5, v6, v7, v8, v9, v10);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  return a1;
}

uint64_t assignWithCopy for UIShape.Resolved.Storage(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 56);
  sub_1855B8D98(*(id *)a2, v4, v5, v6, v7, v8, v9, v10);
  v11 = *(void **)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  sub_1855B8D8C(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for UIShape.Resolved.Storage(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_BYTE *)(a2 + 56);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_BYTE *)(a1 + 56);
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v3;
  *(_BYTE *)(a1 + 56) = v4;
  sub_1855B8D8C(v5, v7, v6, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for UIShape.Resolved.Storage(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UIShape.Resolved.Storage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_BYTE *)(result + 56) = -(char)a2;
  }
  return result;
}

uint64_t sub_1855BCA50(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 56);
}

uint64_t sub_1855BCA58(uint64_t result, char a2)
{
  *(_BYTE *)(result + 56) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for UIShape.Resolved.Storage()
{
  return &type metadata for UIShape.Resolved.Storage;
}

uint64_t _s5UIKit7UIShapeV7StorageOwcp_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 56);
  sub_185228314(*(id *)a2, v4, v5, v6, v7, v8, v9, v10);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  return a1;
}

uint64_t _s5UIKit7UIShapeV7StorageOwca_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 56);
  sub_185228314(*(id *)a2, v4, v5, v6, v7, v8, v9, v10);
  v11 = *(void **)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  v18 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v10;
  sub_185228168(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

uint64_t _s5UIKit7UIShapeV7StorageOwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  char v13;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_BYTE *)(a2 + 56);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v3;
  v13 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v4;
  sub_185228168(v5, v7, v6, v8, v9, v10, v11, v13);
  return a1;
}

uint64_t _s5UIKit7UIShapeV7StorageOwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 6)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t sub_1855BCC48(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 56) <= 5u)
    return *(unsigned __int8 *)(a1 + 56);
  else
    return (*(_DWORD *)a1 + 6);
}

uint64_t sub_1855BCC60(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(_QWORD *)result = a2 - 6;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    LOBYTE(a2) = 6;
  }
  *(_BYTE *)(result + 56) = a2;
  return result;
}

ValueMetadata *type metadata accessor for UIShape.Storage()
{
  return &type metadata for UIShape.Storage;
}

unint64_t sub_1855BCC98(uint64_t a1)
{
  unint64_t result;

  result = sub_1855BCCBC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1855BCCBC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDD853D8;
  if (!qword_1EDD853D8)
  {
    v1 = type metadata accessor for UIShapeProviderBox();
    result = MEMORY[0x186DC9F28](&unk_186669D44, v1);
    atomic_store(result, (unint64_t *)&qword_1EDD853D8);
  }
  return result;
}

uint64_t sub_1855BCD00(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v2 = *(void **)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_QWORD *)(a1 + 104);
  v8 = *(_QWORD *)(a1 + 112);
  v9 = *(_BYTE *)(a1 + 120);
  sub_185223490(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  sub_185223490(v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

uint64_t sub_1855BCD90(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56));
  return a1;
}

uint64_t sub_1855BCDCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD853E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for UIRoundedRectShape(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UIRoundedRectShape(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 56) = v3;
  return result;
}

ValueMetadata *type metadata accessor for UIRoundedRectShape()
{
  return &type metadata for UIRoundedRectShape;
}

void sub_1855BCE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_unfair_lock_s *v6;
  _QWORD *v7;

  v6 = (os_unfair_lock_s *)(a1 + 20);
  os_unfair_lock_lock((os_unfair_lock_t)(a1 + 20));
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    os_unfair_lock_unlock(v6);
  }
  else
  {
    *(_BYTE *)(a1 + 16) = 1;
    os_unfair_lock_unlock(v6);
    if (qword_1EDD831E0 != -1)
      swift_once();
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = a1;
    v7[3] = a2;
    v7[4] = a3;
    swift_retain();
    swift_retain();
    sub_18577CC40((uint64_t)sub_1855BDF00, (uint64_t)v7);
    swift_release();
  }
}

uint64_t sub_1855BCF80@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result;

  if (a2)
    sub_1856425E0(a2, 1);
  result = *a1;
  if (*(_BYTE *)(a3
                + OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_clearsCapturedPropertiesOnStabilization) == 1)
    *a1 = MEMORY[0x1E0DEE9E0];
  else
    result = swift_bridgeObjectRetain();
  *a4 = result;
  return result;
}

uint64_t sub_1855BCFF4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v5[6];

  v1 = *(_QWORD *)(result + OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_modelValueChangedCallback);
  if (v1)
  {
    v2 = *(_QWORD *)(result
                   + OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_modelValueChangedCallback
                   + 8);
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v5[4] = sub_1855A6A1C;
    v5[5] = v3;
    v5[0] = MEMORY[0x1E0C809B0];
    v5[1] = 1107296256;
    v5[2] = sub_1855D8DF4;
    v5[3] = &block_descriptor_30;
    v4 = (uint64_t)_Block_copy(v5);
    sub_18518D708(v1);
    sub_18518D708(v1);
    swift_retain();
    swift_release();
    __UIVIEWSWIFTANIMATABLEPROPERTYTRANSFORMER_IS_EXECUTING_CALLBACK__(v4);
    _Block_release((const void *)v4);
    LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    sub_18518D718(v1);
    result = sub_18518D718(v1);
    if ((v4 & 1) != 0)
      __break(1u);
  }
  return result;
}

id sub_1855BD150()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s29AnimatablePropertyTransformerCMa()
{
  return objc_opt_self();
}

ValueMetadata *_s29AnimatablePropertyTransformerC17RunningProgressesVMa()
{
  return &_s29AnimatablePropertyTransformerC17RunningProgressesVN;
}

uint64_t sub_1855BD228()
{
  void *v0;
  uint64_t v2;
  _OWORD v3[2];
  __int128 v4;
  uint64_t v5;
  __int128 v6;

  if (objc_msgSend(v0, sel___swiftTransformer))
  {
    sub_186507B1C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v3, 0, sizeof(v3));
  }
  sub_1850F26F8((uint64_t)v3, (uint64_t)&v4, &qword_1ECD75B20);
  if (v5)
  {
    sub_1850F6908(&v4, &v6);
    _s29AnimatablePropertyTransformerCMa();
    swift_dynamicCast();
    return v2;
  }
  else
  {
    sub_1855BDE94((uint64_t)&v4);
    return 0;
  }
}

uint64_t sub_1855BD2E4(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char isEscapingClosureAtFileLocation;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  _BYTE *v18;
  _QWORD v19[6];
  uint64_t v20;

  swift_beginAccess();
  swift_unknownObjectRetain();
  sub_185687C3C((uint64_t)&v20, a1, a4);
  swift_unknownObjectRelease();
  result = swift_endAccess();
  if ((a2[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_presentationValueCallbackRan] & 1) != 0)
    return result;
  v8 = *(_QWORD *)&a2[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_presentationValueChangedCallback];
  if (!v8)
    return result;
  v9 = *(_QWORD *)&a2[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_presentationValueChangedCallback
                    + 8];
  a2[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_presentationValueCallbackRan] = 1;
  if ((a2[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_unsafe] & 1) == 0)
    goto LABEL_6;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_QWORD *)(v10 + 24) = v9;
  v19[4] = sub_1855A6A1C;
  v19[5] = v10;
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 1107296256;
  v19[2] = sub_1855D8DF4;
  v19[3] = &block_descriptor_10;
  v11 = _Block_copy(v19);
  sub_18518D708(v8);
  sub_18518D708(v8);
  sub_18518D708(v8);
  swift_retain();
  swift_release();
  __UIVIEWSWIFTANIMATABLEPROPERTYTRANSFORMER_IS_EXECUTING_CALLBACK__((uint64_t)v11);
  _Block_release(v11);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  v13 = v8;
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_6:
    sub_18518D708(v8);
    sub_18518D708(v8);
    sub_18518D708(v8);
    sub_1855DEED4(v8, v9);
    v15 = v14;
    sub_18518D718(v8);
    v16 = *(os_unfair_lock_s **)&a2[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_capturedProperties];
    swift_retain();
    os_unfair_lock_lock(v16 + 6);
    sub_1856425E0(v15, 1);
    os_unfair_lock_unlock(v16 + 6);
    swift_release();
    swift_bridgeObjectRelease();
    v13 = 0;
  }
  if (qword_1EDD831E0 != -1)
    swift_once();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a2;
  v18 = a2;
  sub_18577CDA0((uint64_t)sub_1855BDBB4, v17);
  sub_18518D718(v8);
  swift_release();
  sub_18518D718(v8);
  return sub_18518D718(v13);
}

uint64_t sub_1855BD5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *i;
  void *v21;
  _BYTE v22[104];
  uint64_t aBlock[3];
  _QWORD v24[17];

  v3 = a2 + OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_runningProgresses;
  swift_beginAccess();
  v4 = swift_unknownObjectRetain();
  sub_1857912DC(v4);
  swift_endAccess();
  swift_unknownObjectRelease();
  result = swift_unknownObjectRelease();
  if (!*(_QWORD *)(*(_QWORD *)v3 + 16))
  {
    v6 = *(_QWORD *)(a2
                   + OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_presentationValueChangedCallback);
    v7 = *(_QWORD *)(a2
                   + OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_presentationValueChangedCallback
                   + 8);
    if (*(_BYTE *)(a2 + OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_unsafe) == 1)
    {
      if (v6)
      {
        v8 = swift_allocObject();
        *(_QWORD *)(v8 + 16) = v6;
        *(_QWORD *)(v8 + 24) = v7;
        v24[1] = sub_1855A65EC;
        v24[2] = v8;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_1855D8DF4;
        v24[0] = &block_descriptor_4;
        v9 = (uint64_t)_Block_copy(aBlock);
        sub_18518D708(v6);
        sub_18518D708(v6);
        sub_18518D708(v6);
        swift_retain();
        swift_release();
        __UIVIEWSWIFTANIMATABLEPROPERTYTRANSFORMER_IS_EXECUTING_CALLBACK__(v9);
        _Block_release((const void *)v9);
        LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        result = sub_18518D718(v6);
        if ((v9 & 1) != 0)
        {
          __break(1u);
          return result;
        }
        v10 = 0;
        v11 = v6;
      }
      else
      {
        v11 = 0;
        v10 = 0;
      }
    }
    else
    {
      sub_18518D708(*(_QWORD *)(a2
                              + OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_presentationValueChangedCallback));
      sub_18518D708(v6);
      sub_1855DF0E4(v6, v7);
      v10 = v12;
      sub_18518D718(v6);
      v11 = 0;
    }
    v13 = *(_QWORD *)(a2 + OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_capturedProperties);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
    sub_1855BCF80((uint64_t *)(v13 + 16), v10, a2, aBlock);
    os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 24));
    v14 = aBlock[0];
    swift_release();
    swift_bridgeObjectRelease();
    v15 = -1 << *(_BYTE *)(v14 + 32);
    v16 = ~v15;
    v17 = *(_QWORD *)(v14 + 64);
    v18 = -v15;
    if (v18 < 64)
      v19 = ~(-1 << v18);
    else
      v19 = -1;
    v24[10] = v14;
    v24[11] = v14 + 64;
    v24[12] = v16;
    v24[13] = 0;
    v24[14] = v19 & v17;
    sub_185642AAC((uint64_t)v22);
    sub_1850F26F8((uint64_t)v22, (uint64_t)aBlock, &qword_1EDD83168);
    for (i = (void *)aBlock[0]; aBlock[0]; i = (void *)aBlock[0])
    {
      v21 = (void *)sub_1865074D4();
      swift_bridgeObjectRelease();
      objc_msgSend(i, sel_stopSettingPresentationValueForKey_, v21);

      sub_1855BDB70((uint64_t)v24);
      sub_185642AAC((uint64_t)v22);
      sub_1850F26F8((uint64_t)v22, (uint64_t)aBlock, &qword_1EDD83168);
    }
    sub_1855BDB68();
    sub_18518D718(v6);
    return sub_18518D718(v11);
  }
  return result;
}

id sub_1855BD924(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  char *v8;
  char *v9;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  id result;
  uint64_t i;
  id v28;
  void *v29;
  id v30;
  objc_class *ObjectType;
  objc_super v37;

  v9 = v8;
  ObjectType = (objc_class *)swift_getObjectType();
  v8[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_presentationValueCallbackRan] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_runningProgresses] = MEMORY[0x1E0DEE9E8];
  v13 = (uint64_t *)&v8[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_modelValueChangedCallback];
  *v13 = 0;
  v13[1] = 0;
  v14 = (uint64_t *)&v8[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_presentationValueChangedCallback];
  *v14 = 0;
  v14[1] = 0;
  v15 = (uint64_t *)&v8[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_stabilizedCallback];
  *v15 = 0;
  v15[1] = 0;
  v16 = OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_capturedProperties;
  v17 = v9;
  v18 = sub_1856A153C(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83158);
  v19 = swift_allocObject();
  *(_DWORD *)(v19 + 24) = 0;
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)&v9[v16] = v19;
  v17[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_unsafe] = a2;
  v20 = *v13;
  *v13 = a3;
  v13[1] = a4;
  swift_retain();
  sub_18518D718(v20);
  v21 = *v14;
  *v14 = a5;
  v14[1] = a6;
  swift_retain();
  sub_18518D718(v21);
  v22 = *v15;
  *v15 = a7;
  v15[1] = a8;
  swift_retain();
  sub_18518D718(v22);
  v17[OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_clearsCapturedPropertiesOnStabilization] = 1;

  v37.receiver = v17;
  v37.super_class = ObjectType;
  v23 = objc_msgSendSuper2(&v37, sel_init);
  v24 = v23;
  if (!(a1 >> 62))
  {
    v25 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = v23;
    if (v25)
      goto LABEL_3;
LABEL_10:

    return v24;
  }
  v30 = v23;
  swift_bridgeObjectRetain();
  v25 = sub_186507E58();
  result = (id)swift_bridgeObjectRelease();
  if (!v25)
    goto LABEL_10;
LABEL_3:
  if (v25 >= 1)
  {
    for (i = 0; i != v25; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v28 = (id)MEMORY[0x186DC4CB4](i, a1);
      else
        v28 = *(id *)(a1 + 8 * i + 32);
      v29 = v28;
      objc_msgSend(v28, sel_set__swiftTransformer_, v24);

    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1855BDB68()
{
  return swift_release();
}

uint64_t sub_1855BDB70(uint64_t a1)
{
  _s15PropertyChangesV4InfoVwxx(a1);
  return a1;
}

uint64_t sub_1855BDBA4()
{
  return swift_deallocObject();
}

void sub_1855BDBB4()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16)
           + OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_presentationValueCallbackRan) = 0;
}

uint64_t sub_1855BDBC8()
{
  return swift_deallocObject();
}

uint64_t sub_1855BDBD8(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  os_unfair_lock_s *v13;
  char v14;
  uint64_t v15;
  uint64_t aBlock;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  void *v19;
  void *v20;
  uint64_t v21;

  v15 = a1;
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = 0;
  v3 = (void *)objc_opt_self();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_1855BDE40;
  *(_QWORD *)(v4 + 24) = &v14;
  v20 = sub_1855A6A1C;
  v21 = v4;
  v5 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v17 = 1107296256;
  v18 = sub_1855D8DF4;
  v19 = &block_descriptor_20_0;
  v6 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v20 = sub_1855BDE7C;
  v21 = v2;
  aBlock = v5;
  v17 = 1107296256;
  v18 = sub_18530A69C;
  v19 = &block_descriptor_23_0;
  v7 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel__setupAnimationWithDuration_delay_view_options_factory_animations_start_animationStateGenerator_completion_, 0, 2560, 0, v6, 0, v7, 0.0, 0.0, 0);
  _Block_release(v7);
  _Block_release(v6);
  swift_beginAccess();
  v8 = *(_QWORD *)(v2 + 16);
  if (v8)
  {
    v9 = (unint64_t *)(v8 + OBJC_IVAR____TtC5UIKit32PropertyCollectingAnimationState_capturedProperties);
    swift_beginAccess();
    v10 = *v9;
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = sub_1856A153C(MEMORY[0x1E0DEE9D8]);
  }
  swift_release();
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v13 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtCE5UIKitCSo6UIView29AnimatablePropertyTransformer_capturedProperties);
    swift_retain();
    os_unfair_lock_lock(v13 + 6);
    sub_1856425E0(v10, 0);
    os_unfair_lock_unlock(v13 + 6);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1855BDE40()
{
  uint64_t v0;

  return sub_1855BCFF4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1855BDE48()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1855BDE6C()
{
  return swift_deallocObject();
}

void sub_1855BDE7C()
{
  uint64_t v0;

  sub_185642D18(v0);
}

uint64_t sub_1855BDE84()
{
  return swift_deallocObject();
}

uint64_t sub_1855BDE94(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1855BDED4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1855BDF00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(uint64_t (**)(void))(v0 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 20));
  *(_BYTE *)(v1 + 16) = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 20));
  return v2();
}

_OWORD *_s29AnimatablePropertyTransformerC17RunningProgressesV5EntryVwCP(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  return a1;
}

uint64_t _s29AnimatablePropertyTransformerC17RunningProgressesV5EntryVwxx()
{
  return swift_unknownObjectRelease();
}

_QWORD *_s29AnimatablePropertyTransformerC17RunningProgressesV5EntryVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v3;
  return a1;
}

_OWORD *_s29AnimatablePropertyTransformerC17RunningProgressesV5EntryVwta(_OWORD *a1, _OWORD *a2)
{
  swift_unknownObjectRelease();
  *a1 = *a2;
  return a1;
}

uint64_t _s29AnimatablePropertyTransformerC17RunningProgressesV5EntryVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *_s29AnimatablePropertyTransformerC17RunningProgressesV5EntryVMa()
{
  return &_s29AnimatablePropertyTransformerC17RunningProgressesV5EntryVN;
}

unint64_t sub_1855BE050()
{
  unint64_t result;

  result = qword_1EDD83150;
  if (!qword_1EDD83150)
  {
    result = MEMORY[0x186DC9F28](&unk_186669E18, &_s29AnimatablePropertyTransformerC17RunningProgressesV5EntryVN);
    atomic_store(result, (unint64_t *)&qword_1EDD83150);
  }
  return result;
}

id sub_1855BE0B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  __int128 v6;
  id v7;
  id v9;

  v3 = *a1 + OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_configuration;
  swift_beginAccess();
  v4 = *(void **)(v3 + 8);
  v9 = *(id *)v3;
  v5 = *(_QWORD *)(v3 + 48);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_QWORD *)(a2 + 8) = v4;
  v6 = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 48) = v5;
  v7 = v4;
  swift_bridgeObjectRetain();
  return v9;
}

id sub_1855BE12C(uint64_t a1, uint64_t *a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  __int128 v14;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  v14 = *(_OWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *a2;
  v8 = *a2 + OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_configuration;
  swift_beginAccess();
  v9 = *(void **)v8;
  v10 = *(void **)(v8 + 8);
  *(_QWORD *)v8 = v2;
  *(_QWORD *)(v8 + 8) = v3;
  *(_OWORD *)(v8 + 16) = v14;
  *(_QWORD *)(v8 + 32) = v4;
  *(_QWORD *)(v8 + 40) = v5;
  *(_QWORD *)(v8 + 48) = v6;
  v11 = v3;
  swift_bridgeObjectRetain();
  v12 = v2;
  swift_bridgeObjectRelease();

  return objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_fillView), sel_setBackgroundColor_, *(_QWORD *)v8);
}

id sub_1855BE1FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  __int128 v6;
  id v7;
  id v9;

  v3 = v1 + OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_configuration;
  swift_beginAccess();
  v4 = *(void **)(v3 + 8);
  v9 = *(id *)v3;
  v5 = *(_QWORD *)(v3 + 48);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = *(_OWORD *)(v3 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = v5;
  v7 = v4;
  swift_bridgeObjectRetain();
  return v9;
}

id sub_1855BE274(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  __int128 v11;

  v2 = *a1;
  v3 = a1[1];
  v11 = *((_OWORD *)a1 + 1);
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  v7 = v1 + OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_configuration;
  swift_beginAccess();
  v8 = *(void **)v7;
  v9 = *(void **)(v7 + 8);
  *(_QWORD *)v7 = v2;
  *(_QWORD *)(v7 + 8) = v3;
  *(_OWORD *)(v7 + 16) = v11;
  *(_QWORD *)(v7 + 32) = v4;
  *(_QWORD *)(v7 + 40) = v5;
  *(_QWORD *)(v7 + 48) = v6;
  swift_bridgeObjectRelease();

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_fillView), sel_setBackgroundColor_, *(_QWORD *)v7);
}

void (*sub_1855BE32C(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_configuration;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1855BE384;
}

void sub_1855BE384(_QWORD **a1, char a2)
{
  _QWORD *v3;

  v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
    objc_msgSend(*(id *)(v3[3] + OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_fillView), sel_setBackgroundColor_, *(_QWORD *)(v3[3] + v3[4]));
  free(v3);
}

uint64_t sub_1855BE3D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1 + OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_idleTimer;
  swift_beginAccess();
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)a2 = *(_QWORD *)v3;
  *(_QWORD *)(a2 + 8) = v5;
  *(_QWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 24) = *(_BYTE *)(v3 + 24);
  return sub_18518D708(v4);
}

uint64_t sub_1855BE438(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *a2 + OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_idleTimer;
  v6 = *(_BYTE *)(a1 + 24);
  swift_beginAccess();
  v7 = *(_QWORD *)v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v3;
  *(_QWORD *)(v5 + 16) = v4;
  *(_BYTE *)(v5 + 24) = v6;
  sub_18518D708(v2);
  sub_18518D718(v7);
  return sub_1855BE4EC();
}

uint64_t sub_1855BE4EC()
{
  char *v0;
  char *v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  double v5;
  char v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD aBlock[6];

  v1 = &v0[OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_idleTimer];
  result = swift_beginAccess();
  v3 = *(_QWORD *)v1;
  if (*(_QWORD *)v1)
  {
    v4 = *((_QWORD *)v1 + 1);
    v5 = *((double *)v1 + 2);
    v6 = v1[24];
    swift_retain();
    v7 = objc_msgSend(v0, sel_superview);

    if (v7 && v0[OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView__isPaused] != 1)
    {
      v10 = OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_idleTimerImpl;
      if (*(_QWORD *)&v0[OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_idleTimerImpl])
        return sub_18518D718(v3);
      v11 = (void *)objc_opt_self();
      v12 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = v12;
      *(_QWORD *)(v13 + 24) = v3;
      *(_QWORD *)(v13 + 32) = v4;
      *(double *)(v13 + 40) = v5;
      *(_BYTE *)(v13 + 48) = v6 & 1;
      aBlock[4] = sub_1855C1D78;
      aBlock[5] = v13;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1856DAA30;
      aBlock[3] = &block_descriptor_37;
      v14 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      v15 = objc_msgSend(v11, sel_scheduledTimerWithTimeInterval_repeats_block_, v6 & 1, v14, v5);
      _Block_release(v14);
      v9 = *(void **)&v0[v10];
      *(_QWORD *)&v0[v10] = v15;
    }
    else
    {
      v8 = OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_idleTimerImpl;
      objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_idleTimerImpl], sel_invalidate);
      v9 = *(void **)&v0[v8];
      *(_QWORD *)&v0[v8] = 0;
    }

    return sub_18518D718(v3);
  }
  return result;
}

uint64_t sub_1855BE6E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = v1 + OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_idleTimer;
  swift_beginAccess();
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(v3 + 24);
  return sub_18518D708(v4);
}

uint64_t sub_1855BE740(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;

  v7 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_BYTE *)a1 + 24);
  v4 = v1 + OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_idleTimer;
  swift_beginAccess();
  v5 = *(_QWORD *)v4;
  *(_OWORD *)v4 = v7;
  *(_QWORD *)(v4 + 16) = v2;
  *(_BYTE *)(v4 + 24) = v3;
  sub_18518D718(v5);
  return sub_1855BE4EC();
}

uint64_t (*sub_1855BE7BC(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1855BE804;
}

uint64_t sub_1855BE804(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1855BE4EC();
  return result;
}

char *UIDirectionalLightEffectView.__allocating_init(configuration:)(uint64_t *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return UIDirectionalLightEffectView.init(configuration:)(a1);
}

char *UIDirectionalLightEffectView.init(configuration:)(uint64_t *a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  char *v10;
  char *v11;
  id v12;
  void *v13;
  char *v14;
  id v15;
  void *v16;
  char *v17;
  __int128 v19;
  objc_super v20;

  v2 = *a1;
  v3 = a1[1];
  v19 = *((_OWORD *)a1 + 1);
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  v7 = &v1[OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_idleTimer];
  *((_QWORD *)v7 + 1) = 0;
  *((_QWORD *)v7 + 2) = 0;
  *(_QWORD *)v7 = 0;
  v7[24] = 0;
  v1[OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView__isPaused] = 0;
  v8 = OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_fillView;
  v9 = objc_allocWithZone((Class)UIView);
  v10 = v1;
  *(_QWORD *)&v1[v8] = objc_msgSend(v9, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v10[OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_idleTimerImpl] = 0;
  v11 = &v10[OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_configuration];
  *(_QWORD *)v11 = v2;
  *((_QWORD *)v11 + 1) = v3;
  *((_OWORD *)v11 + 1) = v19;
  *((_QWORD *)v11 + 4) = v4;
  *((_QWORD *)v11 + 5) = v5;
  *((_QWORD *)v11 + 6) = v6;

  v20.receiver = v10;
  v20.super_class = (Class)type metadata accessor for UIDirectionalLightEffectView();
  v12 = objc_msgSendSuper2(&v20, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v13 = (void *)objc_opt_self();
  v14 = (char *)v12;
  v15 = objc_msgSend(v13, sel_clearColor);
  objc_msgSend(v14, sel_setBackgroundColor_, v15);

  v16 = *(void **)&v14[OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_fillView];
  objc_msgSend(v14, sel_addSubview_, v16);
  v17 = &v14[OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_configuration];
  swift_beginAccess();
  objc_msgSend(v16, sel_setBackgroundColor_, *(_QWORD *)v17);

  return v14;
}

uint64_t type metadata accessor for UIDirectionalLightEffectView()
{
  return objc_opt_self();
}

void sub_1855BEA68(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  void *v5;
  void *v11;
  char *v12;

  v11 = (void *)sub_1855BEB10();
  objc_msgSend(v5, sel_addSubview_, v11);
  sub_1855BEE14(v11, a1, a2, a3, a4, a5);
  v12 = v5;
  sub_1855C1048(v12, a3, a4, a5);

}

uint64_t sub_1855BEB10()
{
  char *v0;
  CGFloat v1;
  double Width;
  char *v3;
  char *v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  CGRect v27;
  CGRect v28;

  objc_msgSend(v0, sel_bounds);
  v1 = CGRectGetWidth(v27) * 1.4;
  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v28);
  v3 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UIDirectionalLightEffectView.WaveView()), sel_initWithFrame_, 0.0, 0.0, v1, Width);
  v4 = &v0[OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_configuration];
  swift_beginAccess();
  v5 = OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_gradientColors;
  *(_QWORD *)&v3[OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_gradientColors] = *((_QWORD *)v4 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(*(id *)&v3[OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_gradientView], sel_gradientLayer);
  v7 = *(_QWORD *)&v3[v5];
  if (v7 >> 62)
    goto LABEL_14;
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v8)
  {
    while (1)
    {
      v26 = MEMORY[0x1E0DEE9D8];
      result = sub_1855B37D8(0, v8 & ~(v8 >> 63), 0);
      if (v8 < 0)
        break;
      v23 = v6;
      v6 = 0;
      v10 = v26;
      while ((id)v8 != v6)
      {
        if ((v7 & 0xC000000000000001) != 0)
          v11 = (id)MEMORY[0x186DC4CB4](v6, v7);
        else
          v11 = *(id *)(v7 + 8 * (_QWORD)v6 + 32);
        v12 = v11;
        v13 = objc_msgSend(v11, sel_CGColor);
        type metadata accessor for CGColor(0);
        v25 = v14;

        *(_QWORD *)&v24 = v13;
        v26 = v10;
        v16 = *(_QWORD *)(v10 + 16);
        v15 = *(_QWORD *)(v10 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_1855B37D8(v15 > 1, v16 + 1, 1);
          v10 = v26;
        }
        v6 = (char *)v6 + 1;
        *(_QWORD *)(v10 + 16) = v16 + 1;
        sub_1850F6908(&v24, (_OWORD *)(v10 + 32 * v16 + 32));
        if ((id)v8 == v6)
        {
          swift_bridgeObjectRelease();
          v6 = v23;
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
      v8 = sub_186507E58();
      if (!v8)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    v17 = (void *)sub_18650763C();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setColors_, v17);

    v18 = (void *)*((_QWORD *)v4 + 1);
    if (v18)
    {
      v19 = (id)*((_QWORD *)v4 + 1);
    }
    else
    {
      v19 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
      v18 = 0;
    }
    v20 = *(void **)&v3[OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_fillColor];
    *(_QWORD *)&v3[OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_fillColor] = v19;
    v21 = v18;
    v22 = v19;

    sub_1855C0434();
    return (uint64_t)v3;
  }
  return result;
}

uint64_t sub_1855BEE14(void *a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6)
{
  void *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  uint64_t aBlock;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  sub_1855C0898(a1, a2, a3, (uint64_t)&v26, a4, a5, 0.0, 0.0);
  v7 = (void *)objc_opt_self();
  v8 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  v9 = swift_allocObject();
  v10 = v29;
  *(_OWORD *)(v9 + 56) = v28;
  *(_OWORD *)(v9 + 72) = v10;
  *(_OWORD *)(v9 + 88) = v30;
  v11 = v27;
  *(_OWORD *)(v9 + 24) = v26;
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 104) = v31;
  *(_OWORD *)(v9 + 40) = v11;
  v24 = sub_1855C1CF4;
  v25 = v9;
  v12 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v21 = 1107296256;
  v22 = sub_18530A69C;
  v23 = &block_descriptor_23_1;
  v13 = _Block_copy(&aBlock);
  sub_1855C1C54((uint64_t)&v26);
  swift_release();
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = swift_allocObject();
  v16 = v29;
  *(_OWORD *)(v15 + 56) = v28;
  *(_OWORD *)(v15 + 72) = v16;
  *(_OWORD *)(v15 + 88) = v30;
  v17 = v27;
  *(_OWORD *)(v15 + 24) = v26;
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 104) = v31;
  *(_OWORD *)(v15 + 40) = v17;
  v24 = sub_1855C1D40;
  v25 = v15;
  aBlock = v12;
  v21 = 1107296256;
  v22 = sub_1855D8E30;
  v23 = &block_descriptor_30_0;
  v18 = _Block_copy(&aBlock);
  sub_1855C1C54((uint64_t)&v26);
  swift_release();
  objc_msgSend(v7, sel_animateWithDuration_delay_options_animations_completion_, 0x20000, v13, v18, a6, 0.0);
  _Block_release(v18);
  _Block_release(v13);
  return sub_1855C1CBC((uint64_t)&v26);
}

uint64_t sub_1855BF024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  void *v9;
  void *v19;
  char *v20;

  v19 = (void *)sub_1855BEB10();
  objc_msgSend(v9, sel_addSubview_, v19);
  sub_1855BF10C(v19, a1, a2, a3, a4, a5, a6, a7, a8, a9);
  v20 = v9;
  swift_unknownObjectRetain();
  sub_1855C127C(v20, a6, a7, a8, a9, (uint64_t)v20, a1);

  return swift_unknownObjectRelease();
}

uint64_t sub_1855BF10C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10)
{
  void *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  void *v25;
  uint64_t aBlock;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;

  sub_1855C0898(a1, a5, a6, (uint64_t)&v33, a7, a8, a9, a10);
  v13 = (void *)objc_opt_self();
  v14 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  v15 = swift_allocObject();
  v16 = v36;
  *(_OWORD *)(v15 + 56) = v35;
  *(_OWORD *)(v15 + 72) = v16;
  *(_OWORD *)(v15 + 88) = v37;
  v17 = v34;
  *(_OWORD *)(v15 + 24) = v33;
  *(_QWORD *)(v15 + 16) = v14;
  v18 = v38;
  *(_OWORD *)(v15 + 40) = v17;
  *(_QWORD *)(v15 + 104) = v18;
  *(_QWORD *)(v15 + 112) = a3;
  *(_QWORD *)(v15 + 120) = a4;
  v31 = sub_1855C1C44;
  v32 = v15;
  v19 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v28 = 1107296256;
  v29 = sub_18530A69C;
  v30 = &block_descriptor_5;
  v20 = _Block_copy(&aBlock);
  sub_1855C1C54((uint64_t)&v33);
  sub_18518D708(a3);
  swift_release();
  v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v22 = swift_allocObject();
  v23 = v36;
  *(_OWORD *)(v22 + 56) = v35;
  *(_OWORD *)(v22 + 72) = v23;
  *(_OWORD *)(v22 + 88) = v37;
  v24 = v34;
  *(_OWORD *)(v22 + 24) = v33;
  *(_QWORD *)(v22 + 16) = v21;
  *(_QWORD *)(v22 + 104) = v38;
  *(_OWORD *)(v22 + 40) = v24;
  v31 = sub_1855C1CB0;
  v32 = v22;
  aBlock = v19;
  v28 = 1107296256;
  v29 = sub_1856DA9E8;
  v30 = &block_descriptor_16;
  v25 = _Block_copy(&aBlock);
  sub_1855C1C54((uint64_t)&v33);
  swift_release();
  objc_msgSend(v13, sel__animateUsingSpringBehavior_tracking_animations_completion_, a2, 0, v20, v25);
  _Block_release(v25);
  _Block_release(v20);
  return sub_1855C1CBC((uint64_t)&v33);
}

id UIDirectionalLightEffectView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

void UIDirectionalLightEffectView.init(frame:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id UIDirectionalLightEffectView.__deallocating_deinit(uint64_t a1)
{
  return sub_1855C0730(a1, type metadata accessor for UIDirectionalLightEffectView);
}

id UIDirectionalLightEffectView.Configuration.fillColor.getter()
{
  id *v0;

  return *v0;
}

void *UIDirectionalLightEffectView.Configuration.washColor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

double UIDirectionalLightEffectView.Configuration.scaleFactor.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double UIDirectionalLightEffectView.Configuration.spreadFactor.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

uint64_t UIDirectionalLightEffectView.Configuration.sparklePalette.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t static UIDirectionalLightEffectView.Palette.ponderingPurple.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1855BFC40(&qword_1EDD83B48, &qword_1EDD854D0, a1);
}

uint64_t UIDirectionalLightEffectView.Configuration.init(fillColor:washColor:scaleFactor:spreadFactor:sparklePalette:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  uint64_t v8;

  v8 = *a3;
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(double *)(a4 + 16) = a5;
  *(double *)(a4 + 24) = a6;
  *(double *)(a4 + 32) = a7;
  *(double *)(a4 + 40) = a8;
  *(_QWORD *)(a4 + 48) = v8;
  return result;
}

uint64_t sub_1855BF4E8()
{
  void *v0;
  id v1;
  id v2;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_labelColor);
  v2 = objc_msgSend(v0, sel_darkGrayColor);
  if (qword_1EDD83B48 != -1)
    swift_once();
  qword_1EDD85428 = (uint64_t)v1;
  unk_1EDD85430 = v2;
  __asm { FMOV            V0.2D, #3.0 }
  xmmword_1EDD85438 = _Q0;
  *(_OWORD *)&qword_1EDD85448 = _Q0;
  qword_1EDD85458 = qword_1EDD854D0;
  return swift_bridgeObjectRetain();
}

id static UIDirectionalLightEffectView.Configuration.pondering.getter@<X0>(uint64_t a1@<X8>)
{
  void *v2;
  uint64_t v3;
  __int128 v4;
  id v5;
  id v7;

  if (qword_1EDD83B30 != -1)
    swift_once();
  v2 = (void *)unk_1EDD85430;
  v7 = (id)qword_1EDD85428;
  v3 = qword_1EDD85458;
  *(_QWORD *)a1 = qword_1EDD85428;
  *(_QWORD *)(a1 + 8) = v2;
  v4 = *(_OWORD *)&qword_1EDD85448;
  *(_OWORD *)(a1 + 16) = xmmword_1EDD85438;
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = v3;
  v5 = v2;
  swift_bridgeObjectRetain();
  return v7;
}

uint64_t sub_1855BF60C()
{
  void *v0;
  id v1;
  id v2;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_grayColor);
  v2 = objc_msgSend(v0, sel_clearColor);
  if (qword_1EDD83B50 != -1)
    swift_once();
  qword_1EDD85460 = (uint64_t)v1;
  *(_QWORD *)algn_1EDD85468 = v2;
  __asm { FMOV            V0.2D, #3.0 }
  xmmword_1EDD85470 = _Q0;
  unk_1EDD85480 = _Q0;
  qword_1EDD85490 = qword_1EDD854D8;
  return swift_bridgeObjectRetain();
}

id static UIDirectionalLightEffectView.Configuration.replacementOut.getter@<X0>(uint64_t a1@<X8>)
{
  void *v2;
  uint64_t v3;
  __int128 v4;
  id v5;
  id v7;

  if (qword_1EDD83B38 != -1)
    swift_once();
  v2 = *(void **)algn_1EDD85468;
  v7 = (id)qword_1EDD85460;
  v3 = qword_1EDD85490;
  *(_QWORD *)a1 = qword_1EDD85460;
  *(_QWORD *)(a1 + 8) = v2;
  v4 = unk_1EDD85480;
  *(_OWORD *)(a1 + 16) = xmmword_1EDD85470;
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = v3;
  v5 = v2;
  swift_bridgeObjectRetain();
  return v7;
}

uint64_t sub_1855BF730()
{
  void *v0;
  id v1;
  id v2;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_clearColor);
  v2 = objc_msgSend(v0, sel_labelColor);
  if (qword_1EDD83B58 != -1)
    swift_once();
  qword_1EDD85498 = (uint64_t)v1;
  unk_1EDD854A0 = v2;
  __asm { FMOV            V0.2D, #3.0 }
  xmmword_1EDD854A8 = _Q0;
  *(_OWORD *)&qword_1EDD854B8 = _Q0;
  qword_1EDD854C8 = qword_1EDD854E0;
  return swift_bridgeObjectRetain();
}

id static UIDirectionalLightEffectView.Configuration.replacementIn.getter@<X0>(uint64_t a1@<X8>)
{
  void *v2;
  uint64_t v3;
  __int128 v4;
  id v5;
  id v7;

  if (qword_1EDD83B40 != -1)
    swift_once();
  v2 = (void *)unk_1EDD854A0;
  v7 = (id)qword_1EDD85498;
  v3 = qword_1EDD854C8;
  *(_QWORD *)a1 = qword_1EDD85498;
  *(_QWORD *)(a1 + 8) = v2;
  v4 = *(_OWORD *)&qword_1EDD854B8;
  *(_OWORD *)(a1 + 16) = xmmword_1EDD854A8;
  *(_OWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 48) = v3;
  v5 = v2;
  swift_bridgeObjectRetain();
  return v7;
}

uint64_t sub_1855BF854()
{
  uint64_t v0;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A80);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_186669F40;
  *(_QWORD *)(v0 + 32) = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithRed_green_blue_alpha_, 0.804, 0.612, 0.867, 1.0);
  *(_QWORD *)(v0 + 40) = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithRed_green_blue_alpha_, 0.682, 0.51, 0.796, 1.0);
  *(_QWORD *)(v0 + 48) = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithRed_green_blue_alpha_, 0.686, 0.421, 0.87, 1.0);
  *(_QWORD *)(v0 + 56) = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithRed_green_blue_alpha_, 1.0, 0.796, 1.0, 1.0);
  *(_QWORD *)(v0 + 64) = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithRed_green_blue_alpha_, 0.682, 0.51, 0.796, 0.0);
  result = sub_18650766C();
  qword_1EDD854D0 = v0;
  return result;
}

uint64_t sub_1855BF9B8()
{
  uint64_t v0;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A80);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_186669F50;
  *(_QWORD *)(v0 + 32) = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithRed_green_blue_alpha_, 0.925, 0.553, 0.918, 1.0);
  *(_QWORD *)(v0 + 40) = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithRed_green_blue_alpha_, 0.604, 0.431, 0.843, 1.0);
  *(_QWORD *)(v0 + 48) = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithRed_green_blue_alpha_, 0.604, 0.431, 0.843, 0.0);
  result = sub_18650766C();
  qword_1EDD854D8 = v0;
  return result;
}

uint64_t static UIDirectionalLightEffectView.Palette.replaceBuildOut.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1855BFC40(&qword_1EDD83B50, &qword_1EDD854D8, a1);
}

uint64_t sub_1855BFAE4()
{
  uint64_t v0;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A80);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_186669F40;
  *(_QWORD *)(v0 + 32) = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithRed_green_blue_alpha_, 0.475, 0.345, 0.773, 1.0);
  *(_QWORD *)(v0 + 40) = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithRed_green_blue_alpha_, 0.812, 0.518, 0.4, 1.0);
  *(_QWORD *)(v0 + 48) = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithRed_green_blue_alpha_, 0.945, 0.678, 0.388, 1.0);
  *(_QWORD *)(v0 + 56) = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(_QWORD *)(v0 + 64) = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithWhite_alpha_, 1.0, 1.0);
  result = sub_18650766C();
  qword_1EDD854E0 = v0;
  return result;
}

uint64_t static UIDirectionalLightEffectView.Palette.replaceBuildIn.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1855BFC40(&qword_1EDD83B58, &qword_1EDD854E0, a1);
}

uint64_t sub_1855BFC40@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  *a3 = *a2;
  return swift_bridgeObjectRetain();
}

uint64_t UIDirectionalLightEffectView.IdleTimer.init(timeInterval:repeats:block:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  *(_QWORD *)a4 = a2;
  *(_QWORD *)(a4 + 8) = a3;
  *(double *)(a4 + 16) = a5;
  *(_BYTE *)(a4 + 24) = result;
  return result;
}

uint64_t sub_1855BFC90(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  unint64_t v49;
  unint64_t v50;
  void *v51;
  id v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  objc_super v56;

  v9 = OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_fillColor;
  v10 = (void *)objc_opt_self();
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, sel_clearColor);
  v12 = OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_gradientColors;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_186669F60;
  *(_QWORD *)(v13 + 32) = objc_msgSend(v10, sel_blackColor);
  *(_QWORD *)(v13 + 40) = objc_msgSend(v10, sel_whiteColor);
  *(_QWORD *)&v53 = v13;
  sub_18650766C();
  *(_QWORD *)&v11[v12] = v13;
  v14 = OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_gradientView;
  *(_QWORD *)&v11[v14] = objc_msgSend(objc_allocWithZone((Class)_UIGradientView), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_clippingView;
  *(_QWORD *)&v11[v15] = objc_msgSend(objc_allocWithZone((Class)UIView), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v16 = OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_clippingMaskView;
  *(_QWORD *)&v11[v16] = objc_msgSend(objc_allocWithZone((Class)_UIGradientView), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v17 = OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_fillView;
  *(_QWORD *)&v11[v17] = objc_msgSend(objc_allocWithZone((Class)_UIGradientView), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v18 = OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_fillTrailView;
  *(_QWORD *)&v11[v18] = objc_msgSend(objc_allocWithZone((Class)UIView), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v56.receiver = v11;
  v56.super_class = (Class)type metadata accessor for UIDirectionalLightEffectView.WaveView();
  v19 = (char *)objc_msgSendSuper2(&v56, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v19, sel_setUserInteractionEnabled_, 0);
  v20 = OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_fillView;
  v21 = objc_msgSend(*(id *)&v19[OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_fillView], sel_gradientLayer);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_186669F50;
  sub_1851F9080(0, (unint64_t *)&qword_1ECD75368);
  *(_QWORD *)(v22 + 32) = sub_186507A2C();
  *(_QWORD *)(v22 + 40) = sub_186507A2C();
  *(_QWORD *)(v22 + 48) = sub_186507A2C();
  *(_QWORD *)&v53 = v22;
  sub_18650766C();
  v23 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  objc_msgSend(v21, sel_setLocations_, v23);

  v24 = OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_clippingMaskView;
  v25 = objc_msgSend(*(id *)&v19[OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_clippingMaskView], sel_gradientLayer);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD81EC0);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_186669900;
  v27 = objc_msgSend(v10, sel_blackColor);
  v28 = objc_msgSend(v27, sel_CGColor);

  type metadata accessor for CGColor(0);
  v30 = v29;
  *(_QWORD *)(v26 + 56) = v29;
  *(_QWORD *)(v26 + 32) = v28;
  v31 = objc_msgSend(v10, sel_clearColor);
  v32 = objc_msgSend(v31, sel_CGColor);

  *(_QWORD *)(v26 + 88) = v30;
  *(_QWORD *)(v26 + 64) = v32;
  v33 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_setColors_, v33);

  v34 = objc_msgSend(*(id *)&v19[v24], sel_gradientLayer);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_186669F60;
  *(_QWORD *)(v35 + 32) = sub_186507A2C();
  *(_QWORD *)(v35 + 40) = sub_186507A2C();
  *(_QWORD *)&v53 = v35;
  sub_18650766C();
  v36 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_setLocations_, v36);

  objc_msgSend(v19, sel_addSubview_, *(_QWORD *)&v19[v20]);
  objc_msgSend(v19, sel_addSubview_, *(_QWORD *)&v19[OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_fillTrailView]);
  v37 = *(void **)&v19[OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_clippingView];
  objc_msgSend(v37, sel_setClipsToBounds_, 1);
  objc_msgSend(v37, sel_setMaskView_, *(_QWORD *)&v19[v24]);
  objc_msgSend(v19, sel_addSubview_, v37);
  v38 = *(void **)&v19[OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_gradientView];
  v39 = objc_msgSend(v38, sel_gradientLayer);
  objc_msgSend(v39, sel_setStartPoint_, 0.5, 0.5);
  objc_msgSend(v39, sel_setEndPoint_, 1.0, 1.0);
  objc_msgSend(v39, sel_setType_, *MEMORY[0x1E0CD2F58]);
  objc_msgSend(v37, sel_addSubview_, v38);
  sub_1855C0434();
  v40 = objc_msgSend(v38, sel_gradientLayer);
  v41 = *(_QWORD *)&v19[OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_gradientColors];
  if (v41 >> 62)
    goto LABEL_14;
  v42 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v42)
  {
    while (1)
    {
      v55 = MEMORY[0x1E0DEE9D8];
      result = sub_1855B37D8(0, v42 & ~(v42 >> 63), 0);
      if (v42 < 0)
        break;
      v52 = v40;
      v44 = 0;
      v45 = v55;
      v40 = (id)(v41 & 0xC000000000000001);
      while (v42 != v44)
      {
        if (v40)
          v46 = (id)MEMORY[0x186DC4CB4](v44, v41);
        else
          v46 = *(id *)(v41 + 8 * v44 + 32);
        v47 = v46;
        v48 = objc_msgSend(v46, sel_CGColor);
        v54 = v30;

        *(_QWORD *)&v53 = v48;
        v55 = v45;
        v50 = *(_QWORD *)(v45 + 16);
        v49 = *(_QWORD *)(v45 + 24);
        if (v50 >= v49 >> 1)
        {
          sub_1855B37D8(v49 > 1, v50 + 1, 1);
          v45 = v55;
        }
        ++v44;
        *(_QWORD *)(v45 + 16) = v50 + 1;
        sub_1850F6908(&v53, (_OWORD *)(v45 + 32 * v50 + 32));
        if (v42 == v44)
        {
          swift_bridgeObjectRelease();
          v40 = v52;
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
      v42 = sub_186507E58();
      if (!v42)
        goto LABEL_15;
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    v51 = (void *)sub_18650763C();
    swift_bridgeObjectRelease();
    objc_msgSend(v40, sel_setColors_, v51);

    return (uint64_t)v19;
  }
  return result;
}

id sub_1855C0434()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;

  v1 = objc_msgSend(*(id *)(v0+ OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_fillView), sel_gradientLayer);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD81EC0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_186669900;
  v3 = OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_fillColor;
  v4 = objc_msgSend(*(id *)(v0+ OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_fillColor), sel_colorWithAlphaComponent_, 0.0);
  v5 = objc_msgSend(v4, sel_CGColor);

  type metadata accessor for CGColor(0);
  v7 = v6;
  *(_QWORD *)(v2 + 56) = v6;
  *(_QWORD *)(v2 + 32) = v5;
  v8 = objc_msgSend(*(id *)(v0 + v3), sel_CGColor);
  *(_QWORD *)(v2 + 88) = v7;
  *(_QWORD *)(v2 + 64) = v8;
  v9 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setColors_, v9);

  return objc_msgSend(*(id *)(v0+ OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_fillTrailView), sel_setBackgroundColor_, *(_QWORD *)(v0 + v3));
}

id sub_1855C0578()
{
  char *v0;
  void *v1;
  double Width;
  CGFloat v3;
  void *v4;
  void *v5;
  double Height;
  double v7;
  objc_super v9;
  CGRect v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;
  CGRect v14;

  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for UIDirectionalLightEffectView.WaveView();
  objc_msgSendSuper2(&v9, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_gradientView];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);
  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v10);
  objc_msgSend(v0, sel_bounds);
  v3 = CGRectGetHeight(v11) * 0.5;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_clippingView], sel_setFrame_, 0.0, 0.0, Width, v3);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_clippingMaskView], sel_setFrame_, 0.0, 0.0, Width, v3);
  v4 = *(void **)&v0[OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_fillView];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v4, sel_setFrame_);
  v5 = *(void **)&v0[OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_fillTrailView];
  objc_msgSend(v0, sel_bounds);
  Height = CGRectGetHeight(v12);
  objc_msgSend(v0, sel_bounds);
  v7 = CGRectGetWidth(v13);
  objc_msgSend(v0, sel_bounds);
  return objc_msgSend(v5, sel_setFrame_, 0.0, Height, v7, CGRectGetHeight(v14) * 6.0);
}

id sub_1855C0720()
{
  return sub_1855C0730(0, type metadata accessor for UIDirectionalLightEffectView.WaveView);
}

id sub_1855C0730(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t UIDirectionalLightEffectView.isPaused.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView__isPaused);
}

uint64_t UIDirectionalLightEffectView.isPaused.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView__isPaused) = a1;
  return sub_1855BE4EC();
}

uint64_t (*UIDirectionalLightEffectView.isPaused.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView__isPaused;
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(v1 + v2);
  return sub_1855C082C;
}

uint64_t sub_1855C082C(uint64_t a1)
{
  *(_BYTE *)(*(_QWORD *)a1 + *(_QWORD *)(a1 + 8)) = *(_BYTE *)(a1 + 16);
  return sub_1855BE4EC();
}

uint64_t sub_1855C0854()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView__isPaused);
}

uint64_t sub_1855C0864(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView__isPaused) = a1;
  return sub_1855BE4EC();
}

uint64_t (*sub_1855C0874(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView__isPaused;
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(v1 + v2);
  return sub_1855C082C;
}

id sub_1855C0898@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  void *v8;
  void *v9;
  double v14;
  double v15;
  double v16;
  double v17;
  CGFloat b;
  double a;
  double d;
  CGFloat c;
  double v22;
  CGFloat ty;
  CGFloat tx;
  double v25;
  double v27;
  double v28;
  double v29;
  double Height;
  double Width;
  double v32;
  CGAffineTransform v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;

  v9 = v8;
  objc_msgSend(a1, sel_bounds);
  v32 = v14;
  objc_msgSend(v9, sel_bounds);
  Width = CGRectGetWidth(v38);
  objc_msgSend(v9, sel_bounds);
  Height = CGRectGetHeight(v39);
  objc_msgSend(v9, sel_bounds);
  v28 = CGRectGetWidth(v40);
  objc_msgSend(v9, sel_bounds);
  v15 = CGRectGetHeight(v41);
  v16 = 0.5;
  v17 = a6;
  if (a6 >= 0.5)
  {
    ty = 0.0;
    v22 = 1.0;
    tx = 0.0;
    d = 1.0;
    c = 0.0;
    b = 0.0;
    a = 1.0;
  }
  else
  {
    CGAffineTransformMakeRotation(&v37, 3.14159265);
    v16 = 0.5;
    a = v37.a;
    b = v37.b;
    c = v37.c;
    d = v37.d;
    v22 = -1.0;
    tx = v37.tx;
    ty = v37.ty;
  }
  v27 = -(v22 * v32) - v15 * v22 + a8;
  v29 = v28 * v16;
  v25 = Height * v17 + v32 * v16 * v22 + a8;
  v37.a = a;
  v37.b = b;
  v37.c = c;
  v37.d = d;
  v37.tx = tx;
  v37.ty = ty;
  objc_msgSend(a1, sel_setTransform_, &v37);
  objc_msgSend(a1, sel_setCenter_, Width * a5 + a7, v25);
  objc_msgSend(a1, sel_setAlpha_, 1.0);
  sub_18518D708(a2);
  *(double *)a4 = a;
  *(CGFloat *)(a4 + 8) = b;
  *(CGFloat *)(a4 + 16) = c;
  *(double *)(a4 + 24) = d;
  *(CGFloat *)(a4 + 32) = tx;
  *(CGFloat *)(a4 + 40) = ty;
  *(_QWORD *)(a4 + 48) = a2;
  *(_QWORD *)(a4 + 56) = a3;
  *(double *)(a4 + 64) = v29;
  *(double *)(a4 + 72) = v27;
  *(_QWORD *)(a4 + 80) = a1;
  return a1;
}

void sub_1855C0A88(uint64_t a1, uint64_t a2)
{
  void *Strong;
  void *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  id v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  CGAffineTransform v13;
  CGAffineTransform t2;
  CGAffineTransform t1;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  v4 = *(void **)(a2 + 80);
  CGAffineTransformMakeScale(&t1, 3.0, 1.0);
  v5 = *(_OWORD *)&t1.a;
  v6 = *(_OWORD *)&t1.c;
  v7 = *(_OWORD *)&t1.tx;
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)&t1.a = *(_OWORD *)a2;
  *(_OWORD *)&t1.c = v8;
  *(_OWORD *)&t1.tx = *(_OWORD *)(a2 + 32);
  *(_OWORD *)&t2.a = v5;
  *(_OWORD *)&t2.c = v6;
  *(_OWORD *)&t2.tx = v7;
  CGAffineTransformConcat(&v13, &t1, &t2);
  v11 = *(_OWORD *)&v13.c;
  v12 = *(_OWORD *)&v13.a;
  v10 = *(_OWORD *)&v13.tx;
  v9 = v4;
  *(_OWORD *)&t1.a = v12;
  *(_OWORD *)&t1.c = v11;
  *(_OWORD *)&t1.tx = v10;
  objc_msgSend(v9, sel_setTransform_, &t1);
  objc_msgSend(v9, sel_setCenter_, *(double *)(a2 + 64), *(double *)(a2 + 72));

}

void sub_1855C0B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  void (*v9)(id);

  v4 = a2 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x186DCA138](v4);
  if (v5)
  {
    v6 = (char *)v5;
    v7 = v5 + OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_configuration;
    swift_beginAccess();
    if (*(_QWORD *)(v7 + 8))
      objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_fillView], sel_setBackgroundColor_);
    v8 = objc_msgSend(*(id *)(a3 + 80), sel_removeFromSuperview);
    v9 = *(void (**)(id))(a3 + 48);
    if (v9)
      v9(v8);

  }
}

void sub_1855C0C18(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  void *Strong;
  void *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  id v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  CGAffineTransform v15;
  CGAffineTransform t2;
  CGAffineTransform t1;

  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  v6 = *(void **)(a2 + 80);
  CGAffineTransformMakeScale(&t1, 3.0, 1.0);
  v7 = *(_OWORD *)&t1.a;
  v8 = *(_OWORD *)&t1.c;
  v9 = *(_OWORD *)&t1.tx;
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)&t1.a = *(_OWORD *)a2;
  *(_OWORD *)&t1.c = v10;
  *(_OWORD *)&t1.tx = *(_OWORD *)(a2 + 32);
  *(_OWORD *)&t2.a = v7;
  *(_OWORD *)&t2.c = v8;
  *(_OWORD *)&t2.tx = v9;
  CGAffineTransformConcat(&v15, &t1, &t2);
  v13 = *(_OWORD *)&v15.c;
  v14 = *(_OWORD *)&v15.a;
  v12 = *(_OWORD *)&v15.tx;
  v11 = v6;
  *(_OWORD *)&t1.a = v14;
  *(_OWORD *)&t1.c = v13;
  *(_OWORD *)&t1.tx = v12;
  objc_msgSend(v11, sel_setTransform_, &t1);
  objc_msgSend(v11, sel_setCenter_, *(double *)(a2 + 64), *(double *)(a2 + 72));

  if (a3)
    a3();
}

void sub_1855C0D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  void (*v10)(id);

  v5 = a3 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x186DCA138](v5);
  if (v6)
  {
    v7 = (char *)v6;
    v8 = v6 + OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_configuration;
    swift_beginAccess();
    if (*(_QWORD *)(v8 + 8))
      objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_fillView], sel_setBackgroundColor_);
    v9 = objc_msgSend(*(id *)(a4 + 80), sel_removeFromSuperview);
    v10 = *(void (**)(id))(a4 + 48);
    if (v10)
      v10(v9);

  }
}

void sub_1855C0DC0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v4 = a2 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x186DCA138](v4);
  if (v5)
  {
    v6 = (void *)v5;
    a3();

  }
}

Swift::Void __swiftcall UIDirectionalLightEffectView.layoutSubviews()()
{
  char *v0;
  void *v1;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UIDirectionalLightEffectView();
  objc_msgSendSuper2(&v2, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_fillView];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);
}

Swift::Void __swiftcall UIDirectionalLightEffectView.didMoveToSuperview()()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for UIDirectionalLightEffectView();
  objc_msgSendSuper2(&v1, sel_didMoveToSuperview);
  sub_1855BE4EC();
}

void sub_1855C0F84()
{
  _BYTE *v0;
  char *v1;
  uint64_t v2;

  v1 = &v0[OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_idleTimer];
  *((_QWORD *)v1 + 1) = 0;
  *((_QWORD *)v1 + 2) = 0;
  *(_QWORD *)v1 = 0;
  v1[24] = 0;
  v0[OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView__isPaused] = 0;
  v2 = OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_fillView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIView), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_idleTimerImpl] = 0;

  sub_186507E04();
  __break(1u);
}

void sub_1855C1048(char *a1, double a2, double a3, double a4)
{
  char *v8;
  void *v9;
  void *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;

  v8 = &a1[OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_configuration];
  swift_beginAccess();
  v9 = (void *)*((_QWORD *)v8 + 1);
  v10 = (void *)objc_opt_self();
  v11 = v9;
  v12 = (char *)objc_msgSend(v10, sel_clearColor);
  v13 = v12;
  if (!v9)
  {
    if (v12)
    {
LABEL_8:

      return;
    }
LABEL_6:
    v13 = (char *)sub_1855BEB10();
    objc_msgSend(a1, sel_insertSubview_aboveSubview_, v13, *(_QWORD *)&a1[OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_fillView]);
    v16 = objc_msgSend(v10, sel_whiteColor);
    v17 = *(void **)&v13[OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_fillColor];
    *(_QWORD *)&v13[OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_fillColor] = v16;
    v18 = v16;

    sub_1855C0434();
    v19 = objc_msgSend(v13, sel_layer);
    sub_1865074F8();
    v20 = objc_allocWithZone(MEMORY[0x1E0CD2780]);
    v21 = (void *)sub_1865074D4();
    swift_bridgeObjectRelease();
    v22 = objc_msgSend(v20, sel_initWithType_, v21);

    objc_msgSend(v19, sel_setCompositingFilter_, v22);
    sub_1855BEE14(v13, 0, 0, a2, a3, a4);
    goto LABEL_8;
  }
  if (!v12)
  {
    v13 = v11;
    goto LABEL_8;
  }
  sub_1851F9080(0, (unint64_t *)&qword_1ECD74900);
  v14 = v11;
  v15 = sub_186507A44();

  if ((v15 & 1) != 0)
    goto LABEL_6;
}

void sub_1855C127C(char *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7)
{
  char *v13;
  void *v14;
  void *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;

  v13 = &a1[OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_configuration];
  swift_beginAccess();
  v14 = (void *)*((_QWORD *)v13 + 1);
  v15 = (void *)objc_opt_self();
  v16 = v14;
  v17 = (char *)objc_msgSend(v15, sel_clearColor);
  v18 = v17;
  if (!v14)
  {
    if (v17)
    {
LABEL_8:

      return;
    }
LABEL_6:
    v18 = (char *)sub_1855BEB10();
    objc_msgSend(a1, sel_insertSubview_aboveSubview_, v18, *(_QWORD *)&a1[OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView_fillView]);
    v21 = objc_msgSend(v15, sel_whiteColor);
    v22 = *(void **)&v18[OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_fillColor];
    *(_QWORD *)&v18[OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_fillColor] = v21;
    v23 = v21;

    sub_1855C0434();
    v24 = objc_msgSend(v18, sel_layer);
    sub_1865074F8();
    v25 = objc_allocWithZone(MEMORY[0x1E0CD2780]);
    v26 = (void *)sub_1865074D4();
    swift_bridgeObjectRelease();
    v27 = objc_msgSend(v25, sel_initWithType_, v26);

    objc_msgSend(v24, sel_setCompositingFilter_, v27);
    sub_1855BF10C(v18, a7, 0, 0, 0, 0, a2, a3, a4, a5);
    goto LABEL_8;
  }
  if (!v17)
  {
    v18 = v16;
    goto LABEL_8;
  }
  sub_1851F9080(0, (unint64_t *)&qword_1ECD74900);
  v19 = v16;
  v20 = sub_186507A44();

  if ((v20 & 1) != 0)
    goto LABEL_6;
}

_QWORD *sub_1855C14D8@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView__isPaused);
  return result;
}

uint64_t sub_1855C14F0(_BYTE *a1, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR____TtC5UIKit28UIDirectionalLightEffectView__isPaused) = *a1;
  return sub_1855BE4EC();
}

uint64_t method lookup function for UIDirectionalLightEffectView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UIDirectionalLightEffectView.configuration.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of UIDirectionalLightEffectView.configuration.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of UIDirectionalLightEffectView.configuration.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of UIDirectionalLightEffectView.idleTimer.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of UIDirectionalLightEffectView.idleTimer.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of UIDirectionalLightEffectView.idleTimer.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of UIDirectionalLightEffectView.__allocating_init(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of UIDirectionalLightEffectView.initiateDirectionalLightEffect(at:duration:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of UIDirectionalLightEffectView.initiateDirectionalLightEffect(at:offset:usingSpringBehavior:alongsideAnimations:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t destroy for UIDirectionalLightEffectView.Configuration(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UIDirectionalLightEffectView.Configuration(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  __int128 v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = v3;
  v7 = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UIDirectionalLightEffectView.Configuration(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for UIDirectionalLightEffectView.Configuration(uint64_t a1, uint64_t a2)
{
  void *v4;
  __int128 v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UIDirectionalLightEffectView.Configuration(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UIDirectionalLightEffectView.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UIDirectionalLightEffectView.Configuration()
{
  return &type metadata for UIDirectionalLightEffectView.Configuration;
}

ValueMetadata *type metadata accessor for UIDirectionalLightEffectView.Palette()
{
  return &type metadata for UIDirectionalLightEffectView.Palette;
}

uint64_t destroy for UIDirectionalLightEffectView.IdleTimer()
{
  return swift_release();
}

uint64_t initializeWithCopy for UIDirectionalLightEffectView.IdleTimer(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for UIDirectionalLightEffectView.IdleTimer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for UIDirectionalLightEffectView.IdleTimer(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for UIDirectionalLightEffectView.IdleTimer(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UIDirectionalLightEffectView.IdleTimer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UIDirectionalLightEffectView.IdleTimer()
{
  return &type metadata for UIDirectionalLightEffectView.IdleTimer;
}

uint64_t type metadata accessor for UIDirectionalLightEffectView.WaveView()
{
  return objc_opt_self();
}

void sub_1855C19D4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0;
  v2 = OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_fillColor;
  v3 = (void *)objc_opt_self();
  *(_QWORD *)&v1[v2] = objc_msgSend(v3, sel_clearColor);
  v4 = OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_gradientColors;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_186669F60;
  *(_QWORD *)(v5 + 32) = objc_msgSend(v3, sel_blackColor);
  *(_QWORD *)(v5 + 40) = objc_msgSend(v3, sel_whiteColor);
  sub_18650766C();
  *(_QWORD *)&v1[v4] = v5;
  v6 = OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_gradientView;
  *(_QWORD *)&v1[v6] = objc_msgSend(objc_allocWithZone((Class)_UIGradientView), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v7 = OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_clippingView;
  *(_QWORD *)&v1[v7] = objc_msgSend(objc_allocWithZone((Class)UIView), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v8 = OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_clippingMaskView;
  *(_QWORD *)&v1[v8] = objc_msgSend(objc_allocWithZone((Class)_UIGradientView), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v9 = OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_fillView;
  *(_QWORD *)&v1[v9] = objc_msgSend(objc_allocWithZone((Class)_UIGradientView), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v10 = OBJC_IVAR____TtCC5UIKit28UIDirectionalLightEffectViewP33_FFDE3B7A64024E6DED98D26CC792816C8WaveView_fillTrailView;
  *(_QWORD *)&v1[v10] = objc_msgSend(objc_allocWithZone((Class)UIView), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_186507E04();
  __break(1u);
}

uint64_t sub_1855C1BD4()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

uint64_t sub_1855C1BF8()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 72))
    swift_release();

  if (*(_QWORD *)(v0 + 112))
    swift_release();
  return swift_deallocObject();
}

void sub_1855C1C44()
{
  uint64_t v0;

  sub_1855C0C18(*(_QWORD *)(v0 + 16), v0 + 24, *(void (**)(void))(v0 + 112));
}

uint64_t sub_1855C1C54(uint64_t a1)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 80);
  sub_18518D708(*(_QWORD *)(a1 + 48));
  v3 = v2;
  return a1;
}

uint64_t sub_1855C1C88()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1855C1CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1855C0D08(a1, a2, *(_QWORD *)(v2 + 16), v2 + 24);
}

uint64_t sub_1855C1CBC(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 80);
  sub_18518D718(*(_QWORD *)(a1 + 48));

  return a1;
}

void sub_1855C1CF4()
{
  uint64_t v0;

  sub_1855C0A88(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t objectdestroy_12Tm()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 72))
    swift_release();

  return swift_deallocObject();
}

void sub_1855C1D40(uint64_t a1)
{
  uint64_t v1;

  sub_1855C0B60(a1, *(_QWORD *)(v1 + 16), v1 + 24);
}

uint64_t sub_1855C1D4C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1855C1D78(uint64_t a1)
{
  uint64_t v1;

  sub_1855C0DC0(a1, *(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1855C1D98(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  __int128 v9;
  __int128 v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  _OWORD v13[5];

  if (*(_QWORD *)(a1 + 24) == 1)
  {
    sub_18519F088(a1, (uint64_t *)&unk_1EDD82B20);
    sub_1856BE4F4((uint64_t)a2, a3, a4, (uint64_t)v13);
    swift_bridgeObjectRelease();

    return sub_18519F088((uint64_t)v13, (uint64_t *)&unk_1EDD82B20);
  }
  else
  {
    v9 = *(_OWORD *)(a1 + 48);
    v13[2] = *(_OWORD *)(a1 + 32);
    v13[3] = v9;
    v13[4] = *(_OWORD *)(a1 + 64);
    v10 = *(_OWORD *)(a1 + 16);
    v13[0] = *(_OWORD *)a1;
    v13[1] = v10;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v4;
    *v4 = 0x8000000000000000;
    sub_185647E54(v13, a2, a3, a4, isUniquelyReferenced_nonNull_native);
    *v4 = v12;
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
}

unint64_t sub_1855C1E94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  char isUniquelyReferenced_nonNull_native;
  unint64_t result;
  char v10;
  unint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = v3;
  if (a1)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_185647F9C(a1, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
  }
  else
  {
    result = sub_1855C43E4(a2, a3);
    if ((v10 & 1) == 0)
      return result;
    v11 = result;
    v12 = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v3;
    v15 = *v4;
    *v4 = 0x8000000000000000;
    if (!v12)
    {
      sub_185684324();
      v13 = v15;
    }
    sub_18568108C(v11, v13);
    *v4 = v13;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1855C1F88(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  __int128 v7[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1851E59E0((__int128 *)a1, (uint64_t)v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v2;
    *v2 = 0x8000000000000000;
    sub_185648350(v7, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v6;
    swift_bridgeObjectRelease();
    return sub_1855C7050(a2, (uint64_t (*)(_QWORD))type metadata accessor for UITextEffectView.EffectID);
  }
  else
  {
    sub_18519F088(a1, &qword_1EDD85678);
    sub_1856BE8CC(a2, (uint64_t)v7);
    sub_1855C7050(a2, (uint64_t (*)(_QWORD))type metadata accessor for UITextEffectView.EffectID);
    return sub_18519F088((uint64_t)v7, &qword_1EDD85678);
  }
}

uint64_t sub_1855C2054(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v14[2];

  v3 = v2;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_1850F6908((_OWORD *)a1, v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v2;
    *v2 = 0x8000000000000000;
    sub_1856485EC(v14, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_18519F088(a1, &qword_1ECD75B20);
    v7 = sub_1851E599C(a2);
    if ((v8 & 1) != 0)
    {
      v9 = v7;
      v10 = swift_isUniquelyReferenced_nonNull_native();
      v11 = *v2;
      v13 = *v3;
      *v3 = 0x8000000000000000;
      if ((v10 & 1) == 0)
      {
        sub_185684F90();
        v11 = v13;
      }
      sub_1850F6908((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v9), v14);
      sub_1856818BC(v9, v11);
      *v3 = v11;
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v14, 0, sizeof(v14));
    }
    return sub_18519F088((uint64_t)v14, &qword_1ECD75B20);
  }
}

uint64_t sub_1855C2164(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14[2];
  uint64_t v15;

  v3 = v2;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_1851E59E0((__int128 *)a1, (uint64_t)v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v2;
    *v2 = 0x8000000000000000;
    sub_185648AA0(v14, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_18519F088(a1, &qword_1EDD85668);
    v7 = sub_1851E599C(a2);
    if ((v8 & 1) != 0)
    {
      v9 = v7;
      v10 = swift_isUniquelyReferenced_nonNull_native();
      v11 = *v2;
      v13 = *v3;
      *v3 = 0x8000000000000000;
      if ((v10 & 1) == 0)
      {
        sub_1856856DC();
        v11 = v13;
      }
      sub_1851E59E0((__int128 *)(*(_QWORD *)(v11 + 56) + 40 * v9), (uint64_t)v14);
      sub_185682044(v9, v11);
      *v3 = v11;
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = 0;
      memset(v14, 0, sizeof(v14));
    }
    return sub_18519F088((uint64_t)v14, &qword_1EDD85668);
  }
}

uint64_t sub_1855C227C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1851E59E0((__int128 *)a1, (uint64_t)&v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v2;
    *v2 = 0x8000000000000000;
    sub_185648CDC(&v7, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v6;
    swift_bridgeObjectRelease();
    return sub_1850F7064(a2);
  }
  else
  {
    sub_1856BED68(a2, (uint64_t)&v7);
    result = sub_1850F7064(a2);
    if (v8)
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v7);
  }
  return result;
}

uint64_t sub_1855C232C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  _BYTE v7[72];

  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    sub_18519F088(a1, &qword_1EDD89C80);
    sub_1856BEE58(a2, (uint64_t)v7);
    sub_1855C7050(a2, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceUI.PromptAmbiguityID);
    return sub_18519F088((uint64_t)v7, &qword_1EDD89C80);
  }
  else
  {
    sub_1855C6FD0(a1, (uint64_t)v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v2;
    *v2 = 0x8000000000000000;
    sub_185648E18((uint64_t)v7, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v6;
    swift_bridgeObjectRelease();
    return sub_1855C7050(a2, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceUI.PromptAmbiguityID);
  }
}

uint64_t sub_1855C23FC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD89E10);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IntelligenceUI.PromptEntryView.AmbiguityAppearanceConfiguration(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v13 + 48))(a1, 1, v10) == 1)
  {
    sub_18519F088(a1, (uint64_t *)&unk_1EDD89E10);
    sub_1856BEF54(a2, (uint64_t)v8);
    sub_1855C7050(a2, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceUI.PromptAmbiguityID);
    return sub_18519F088((uint64_t)v8, (uint64_t *)&unk_1EDD89E10);
  }
  else
  {
    sub_1855C6F8C(a1, (uint64_t)v12, type metadata accessor for IntelligenceUI.PromptEntryView.AmbiguityAppearanceConfiguration);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v3;
    *v3 = 0x8000000000000000;
    sub_18564924C((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v17;
    swift_bridgeObjectRelease();
    return sub_1855C7050(a2, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceUI.PromptAmbiguityID);
  }
}

uint64_t sub_1855C2564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  _OWORD v13[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1850F6908((_OWORD *)a1, v13);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v5;
    *v5 = 0x8000000000000000;
    sub_185649668(v13, a2, a3, a4, a5, isUniquelyReferenced_nonNull_native);
    *v5 = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_18519F088(a1, &qword_1ECD75B20);
    sub_1856BF090(a2, a3, a4, a5, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_18519F088((uint64_t)v13, &qword_1ECD75B20);
  }
}

uint64_t sub_1855C2668(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85660);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UITextEffectView.EffectID();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v13 + 48))(a1, 1, v10) == 1)
  {
    sub_18519F088(a1, &qword_1EDD85660);
    sub_1856BF334((uint64_t)a2, (uint64_t)v8);

    return sub_18519F088((uint64_t)v8, &qword_1EDD85660);
  }
  else
  {
    sub_1855C6F8C(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for UITextEffectView.EffectID);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v3;
    *v3 = 0x8000000000000000;
    sub_1856498F8((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v17;

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1855C27BC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v5;
  char v6;
  char v7;
  unint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  char v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  v3 = v2;
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    sub_18519F088(a1, &qword_1EDD85650);
    v5 = sub_1851E599C(a2);
    v7 = v6;
    if ((v6 & 1) != 0)
    {
      v8 = v5;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v10 = *v2;
      v13 = *v3;
      *v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_185687970();
        v10 = v13;
      }
      sub_1855C6F44(*(_QWORD *)(v10 + 56) + 8 * v8, (uint64_t)&v15);
      sub_185683590(v8, v10);
      *v3 = v10;
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = 0;
    }
    v16 = (v7 & 1) == 0;
    return sub_18519F088((uint64_t)&v15, &qword_1EDD85650);
  }
  else
  {
    sub_1855C6F44(a1, (uint64_t)&v15);
    v11 = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v2;
    *v2 = 0x8000000000000000;
    sub_185649E1C((uint64_t)&v15, a2, v11);
    *v2 = v14;
    return swift_bridgeObjectRelease();
  }
}

void UIParentModifierTransitionComponent.init(impl:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_186506BB0();
  type metadata accessor for UIParentModifierTransitionComponent(0, a2, a3, a4);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for UIAnyModifierComponent();
}

uint64_t sub_1855C2A54()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + v2) = sub_1865076B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32))(v4 + *(int *)(v3 + 44), v5, v0);
}

uint64_t type metadata accessor for UIParentModifierTransitionComponent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UIParentModifierTransitionComponent);
}

void UIParentModifierTransitionComponent.handle(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1855C570C(a1, a3);
}

void sub_1855C2ABC()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for UIAnyModifierComponent();
}

BOOL sub_1855C2C2C()
{
  uint64_t v1;
  _QWORD *v2;

  return sub_185793FA8(v1, v2);
}

uint64_t UIParentModifierTransitionComponent.receive(event:responder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v38[6];
  uint64_t v39;
  uint64_t AssociatedConformanceWitness;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v7 = *(_QWORD *)(a3 + 32);
  v8 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = sub_186507AA4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v38 - v12;
  v15 = MEMORY[0x1E0C80A78](v14);
  v44 = v3;
  v45 = (char *)v38 - v16;
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 32);
  v42 = v3 + *(int *)(a3 + 44);
  v43 = a1;
  v18 = a1;
  v20 = v19;
  v17(v18, v8, v7, v15);
  v21 = AssociatedTypeWitness;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, AssociatedTypeWitness) != 1)
  {
    v38[2] = v20;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v45, v13, AssociatedTypeWitness);
    v54 = *(_QWORD *)(v44 + *(int *)(a3 + 48));
    v24 = *(_QWORD *)(a3 + 24);
    v25 = *(_QWORD *)(v24 + 16);
    v26 = swift_getAssociatedTypeWitness();
    v41 = swift_getAssociatedTypeWitness();
    v27 = v8;
    v28 = swift_getAssociatedTypeWitness();
    v38[5] = v7;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v29 = v26;
    v39 = swift_getAssociatedConformanceWitness();
    v38[0] = v25;
    v30 = v41;
    v31 = swift_getAssociatedConformanceWitness();
    v38[1] = v24;
    v38[4] = v27;
    v32 = swift_getAssociatedConformanceWitness();
    v38[3] = v21;
    v46 = v21;
    v47 = v29;
    v48 = v30;
    v49 = v28;
    v50 = AssociatedConformanceWitness;
    v51 = v39;
    v52 = v31;
    v53 = v32;
    type metadata accessor for UIAnyModifierComponent();
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v22 = *(_QWORD *)(a3 + 24);
  v23 = v44;
  v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 + 16) + 56))(v43, a2, v8);
  MEMORY[0x1E0C80A78](v33);
  v38[-4] = v8;
  v38[-3] = v22;
  v38[-2] = v7;
  v38[-1] = v23;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(a2 + 16) + 16)
    && (sub_1855C43E4((uint64_t)&type metadata for UIParentComponentResponse, (uint64_t)&protocol witness table for UIParentComponentResponse), (v34 & 1) != 0))
  {
    swift_retain();
    v35 = swift_bridgeObjectRetain();
    v36 = sub_1855C5B9C(v35, (uint64_t (*)(__int128 *, uint64_t))sub_1855C5B88, (uint64_t)&v38[-6], a2);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v36 = 0;
  }
  swift_beginAccess();
  sub_1855C1E94(v36, (uint64_t)&type metadata for UIParentComponentResponse, (uint64_t)&protocol witness table for UIParentComponentResponse);
  return swift_endAccess();
}

void UIParentModifierTransitionComponent.updateInputModel(_:responder:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_bridgeObjectRetain();
  type metadata accessor for UIAnyModifierComponent();
}

uint64_t sub_1855C32EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_186507708();
  MEMORY[0x186DC9F28](MEMORY[0x1E0DEAF38], v2);
  sub_186507600();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 64))(v4, v5, v0, v1);
}

void UIParentBaseLayoutTransitionComponent.init(impl:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for UIParentBaseLayoutTransitionComponent(0, a2, a3, a4);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  sub_1855C5D78();
  type metadata accessor for UIAnyModifierComponent();
}

uint64_t sub_1855C34B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)(v2 + v1) = sub_1865076B4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32))(v2, v4, v0);
}

uint64_t UIParentBaseLayoutTransitionComponent.receive(event:responder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t AssociatedConformanceWitness;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  ValueMetadata *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;

  v7 = *(_QWORD *)(a3 + 32);
  v8 = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v38 = sub_186507AA4();
  v10 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v12 = (char *)&v31 - v11;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v39 = (char *)&v31 - v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(a1, v8, v7, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, AssociatedTypeWitness) != 1)
  {
    v35 = a1;
    v33 = v13;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v39, v12, AssociatedTypeWitness);
    v18 = *(int *)(a3 + 44);
    v38 = v3;
    v48 = *(_QWORD *)(v3 + v18);
    v32 = *(_QWORD *)(a3 + 24);
    v19 = *(_QWORD *)(v32 + 8);
    v20 = swift_getAssociatedTypeWitness();
    v21 = swift_getAssociatedTypeWitness();
    v37 = v7;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v23 = swift_getAssociatedConformanceWitness();
    v31 = v19;
    v36 = v8;
    v24 = swift_getAssociatedConformanceWitness();
    v25 = sub_1855C5D78();
    v34 = AssociatedTypeWitness;
    v40 = AssociatedTypeWitness;
    v41 = v20;
    v42 = v21;
    v43 = &type metadata for UILayoutOutputModel;
    v44 = AssociatedConformanceWitness;
    v45 = v23;
    v46 = v24;
    v47 = v25;
    type metadata accessor for UIAnyModifierComponent();
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v38);
  v17 = *(_QWORD *)(a3 + 24);
  v26 = sub_18569C864(a1, a2, v8, *(_QWORD *)(v17 + 8));
  MEMORY[0x1E0C80A78](v26);
  *(&v31 - 4) = v8;
  *(&v31 - 3) = v17;
  *(&v31 - 2) = v7;
  *(&v31 - 1) = v3;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(a2 + 16) + 16)
    && (sub_1855C43E4((uint64_t)&type metadata for UIParentComponentResponse, (uint64_t)&protocol witness table for UIParentComponentResponse), (v27 & 1) != 0))
  {
    swift_retain();
    v28 = swift_bridgeObjectRetain();
    v29 = sub_1855C5B9C(v28, (uint64_t (*)(__int128 *, uint64_t))sub_1855C5DBC, (uint64_t)(&v31 - 6), a2);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v29 = 0;
  }
  swift_beginAccess();
  sub_1855C1E94(v29, (uint64_t)&type metadata for UIParentComponentResponse, (uint64_t)&protocol witness table for UIParentComponentResponse);
  return swift_endAccess();
}

void sub_1855C395C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  sub_1855C5D78();
  type metadata accessor for UIAnyModifierComponent();
}

BOOL sub_1855C3A8C()
{
  uint64_t v0;
  _QWORD *v2;

  return sub_185793FA8(v0, v2);
}

void UIParentBaseLayoutTransitionComponent.updateInputModel(_:responder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedConformanceWitness;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  ValueMetadata *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v24 = a2;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) + 8);
  v22 = *(_QWORD *)(a3 + 24);
  v8 = v22;
  v9 = v7;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v13 = (char *)v21 - v12;
  v26 = v14;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))((char *)v21 - v12, a1, AssociatedTypeWitness, v11);
  v23 = *(int *)(a3 + 44);
  v25 = *(_QWORD *)(v3 + v23);
  v31 = v25;
  v27 = v6;
  v28 = v8;
  v29 = *(_QWORD *)(a3 + 32);
  v30 = v13;
  v21[1] = v29;
  v15 = swift_getAssociatedTypeWitness();
  v21[0] = v9;
  v16 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v18 = swift_getAssociatedConformanceWitness();
  v19 = swift_getAssociatedConformanceWitness();
  v20 = sub_1855C5D78();
  swift_bridgeObjectRetain();
  v32 = v15;
  v33 = v16;
  v25 = AssociatedTypeWitness;
  v34 = AssociatedTypeWitness;
  v35 = &type metadata for UILayoutOutputModel;
  v36 = AssociatedConformanceWitness;
  v37 = v18;
  v38 = v19;
  v39 = v20;
  type metadata accessor for UIAnyModifierComponent();
}

uint64_t sub_1855C3C7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v5 = sub_186507708();
  MEMORY[0x186DC9F28](MEMORY[0x1E0DEAF38], v5);
  sub_186507600();
  swift_bridgeObjectRelease();
  v6 = v0[4];
  v7 = v0[7];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*v0 + 64))(v1, v6, v2);
  v8 = v0[2];
  *(_QWORD *)(v4 - 160) = *(_QWORD *)(v7 + v0[3]);
  v0[16] = v2;
  v0[17] = v8;
  v9 = v0[1];
  v0[18] = v9;
  v0[19] = v3;
  v0[3] = v3;
  v0[20] = v6;
  swift_bridgeObjectRetain();
  sub_186507600();
  swift_bridgeObjectRelease();
  v0[10] = v2;
  v0[11] = v8;
  v10 = v0[7];
  v0[12] = v9;
  v0[13] = v10;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v6 + 16) + 16)
    && (sub_1855C43E4((uint64_t)&type metadata for UIParentComponentResponse, (uint64_t)&protocol witness table for UIParentComponentResponse), (v11 & 1) != 0))
  {
    swift_retain();
    v12 = swift_bridgeObjectRetain();
    v13 = sub_1855C5B9C(v12, (uint64_t (*)(__int128 *, uint64_t))sub_1855C5DBC, (uint64_t)(v0 + 8), v6);
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v13 = 0;
  }
  swift_beginAccess();
  sub_1855C1E94(v13, (uint64_t)&type metadata for UIParentComponentResponse, (uint64_t)&protocol witness table for UIParentComponentResponse);
  swift_endAccess();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[6] + 8))(v0[3], v0[5]);
}

uint64_t sub_1855C3E28(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v12 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, a2, AssociatedTypeWitness, v8);
  sub_1857951CC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 40))(a2, v10, AssociatedTypeWitness);
}

uint64_t sub_1855C3F1C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v7 = (char *)&v9 - v6;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&v9 - v6, a2, AssociatedTypeWitness, v5);
  sub_1857951EC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, AssociatedTypeWitness);
}

UIKit::UILayoutOutputModel __swiftcall UIParentBaseLayoutTransitionComponent.outputModel()()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(uint64_t *__return_ptr, _QWORD, _QWORD))(*(_QWORD *)(v0 + 24) + 24))(&v1, *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  sub_1855C5D78();
  swift_bridgeObjectRetain();
  type metadata accessor for UIAnyModifierComponent();
}

uint64_t sub_1855C4144()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = sub_186507708();
  MEMORY[0x186DC9F28](MEMORY[0x1E0DEAF38], v2);
  sub_186507600();
  result = swift_bridgeObjectRelease();
  *v0 = *(_QWORD *)(v1 - 88);
  return result;
}

uint64_t sub_1855C41B4(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;

  swift_bridgeObjectRetain();
  sub_18579520C();
  swift_bridgeObjectRelease();
  *a2 = v4;
  return swift_bridgeObjectRelease();
}

unint64_t sub_1855C422C(uint64_t a1)
{
  uint64_t v2;

  sub_1865080EC();
  sub_18650811C();
  v2 = sub_186508134();
  return sub_1855C4914(a1, v2);
}

unint64_t sub_1855C4284(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1865080EC();
  sub_186507540();
  v4 = sub_186508134();
  return sub_1855C49B0(a1, a2, v4);
}

unint64_t sub_1855C42E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1865080EC();
  sub_1865080F8();
  swift_bridgeObjectRetain();
  sub_186507540();
  swift_bridgeObjectRelease();
  v6 = sub_186508134();
  return sub_1855C4A90(a1, a2, a3, v6);
}

unint64_t sub_1855C4378(float a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  if ((LODWORD(a1) & 0x7FFFFFFF) != 0)
    v3 = LODWORD(a1);
  else
    v3 = 0;
  v4 = MEMORY[0x186DC50F8](*(_QWORD *)(v1 + 40), v3, 4);
  return sub_1855C4B64(v4, a1);
}

unint64_t sub_1855C43B0(unsigned int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x186DC50F8](*(_QWORD *)(v1 + 40), a1, 4);
  return sub_1855C4BFC(a1, v3);
}

unint64_t sub_1855C43E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1865080EC();
  sub_1865080F8();
  v4 = sub_186508134();
  return sub_1855C4C98(a1, a2, v4);
}

unint64_t sub_1855C4444(uint64_t a1)
{
  return sub_1855C4824(a1, (uint64_t (*)(_QWORD))type metadata accessor for UITextEffectView.EffectID);
}

unint64_t sub_1855C4450(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_186507A38();
  return sub_1855C4D08(a1, v2);
}

unint64_t sub_1855C4480(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_186507A38();
  return sub_1855C4E10(a1, v2, &qword_1EDD866A0);
}

unint64_t sub_1855C44CC(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_186506BBC();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  sub_1852478E0(qword_1EDD813D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v3 = sub_186507444();
  return sub_1855C50D8(a1, v3, v2, &qword_1EDD87830, MEMORY[0x1E0CB09D0]);
}

unint64_t sub_1855C4564(char a1)
{
  char v1;
  uint64_t v2;

  v1 = a1 & 1;
  sub_1865080EC();
  sub_1865080F8();
  v2 = sub_186508134();
  return sub_1855C4F20(v1, v2);
}

unint64_t sub_1855C45C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  sub_1865080EC();
  swift_bridgeObjectRetain();
  sub_186507540();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_186507540();
  swift_bridgeObjectRelease();
  v8 = sub_186508134();
  return sub_1855C4FDC(a1, a2, a3, a4, v8);
}

unint64_t sub_1855C466C(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_186506E98();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DC14F8];
  sub_1852478E0(&qword_1EDD88570, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC14F8], MEMORY[0x1E0DC1508]);
  v3 = sub_186507444();
  return sub_1855C50D8(a1, v3, v2, qword_1EDD85680, MEMORY[0x1E0DC1510]);
}

unint64_t sub_1855C4704(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_186507BB8();
  return sub_1855C5208(a1, v2);
}

unint64_t sub_1855C4734(uint64_t a1)
{
  id v2;
  uint64_t v3;

  sub_1865080EC();
  v2 = *(id *)(a1 + 32);
  sub_186507A50();

  type metadata accessor for CGRect(0);
  sub_186507D74();
  sub_186507540();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_186507540();
  swift_bridgeObjectRelease();
  v3 = sub_186508134();
  return sub_1855C52CC((CGRect *)a1, v3);
}

unint64_t sub_1855C4818(uint64_t a1)
{
  return sub_1855C4824(a1, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceUI.PromptAmbiguityID);
}

unint64_t sub_1855C4824(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v4;

  sub_1865080EC();
  sub_186506BBC();
  sub_1852478E0(qword_1EDD813D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_186507450();
  v4 = sub_186508134();
  return sub_1855C55B4(a1, v4, a2);
}

unint64_t sub_1855C48C8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_186507A38();
  return sub_1855C4E10(a1, v2, &qword_1EDD85658);
}

unint64_t sub_1855C4914(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1855C49B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_186507FCC() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_186507FCC() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1855C4A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = a4 & ~v6;
  if (((*(_QWORD *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    v11 = ~v6;
    v12 = *(_QWORD *)(v4 + 48);
    do
    {
      v13 = (_QWORD *)(v12 + 24 * v7);
      if (*v13 == a1)
      {
        v14 = v13[1] == a2 && v13[2] == a3;
        if (v14 || (sub_186507FCC() & 1) != 0)
          break;
      }
      v7 = (v7 + 1) & v11;
    }
    while (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_1855C4B64(uint64_t a1, float a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a1 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = *(_QWORD *)(v2 + 48);
    if (*(float *)(v6 + 4 * result) != a2)
    {
      v7 = ~v4;
      for (result = (result + 1) & v7;
            ((*(_QWORD *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v7)
      {
        if (*(float *)(v6 + 4 * result) == a2)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1855C4BFC(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1855C4C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;

  v5 = -1 << *(_BYTE *)(v3 + 32);
  result = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = ~v5;
    do
    {
      if (*(_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * result) == a1)
        break;
      result = (result + 1) & v7;
    }
    while (((*(_QWORD *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_1855C4D08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for _UITextViewAnimatedPlaceholderIdentifier(0);
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_186507A44();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_186507A44();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1855C4E10(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1851F9080(0, a3);
    v7 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v8 = sub_186507A44();

    if ((v8 & 1) == 0)
    {
      v9 = ~v5;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v11 = sub_186507A44();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1855C4F20(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1855C4FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;

  v6 = v5 + 64;
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = a5 & ~v7;
  if (((*(_QWORD *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v13 = ~v7;
    v14 = *(_QWORD *)(v5 + 48);
    do
    {
      v15 = (_QWORD *)(v14 + 32 * v8);
      v16 = v15[2];
      v17 = v15[3];
      v18 = *v15 == a1 && v15[1] == a2;
      if (v18 || (sub_186507FCC() & 1) != 0)
      {
        v19 = v16 == a3 && v17 == a4;
        if (v19 || (sub_186507FCC() & 1) != 0)
          break;
      }
      v8 = (v8 + 1) & v13;
    }
    while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_1855C50D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t, __n128);
  char v18;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  unint64_t *v22;
  uint64_t v23;

  v22 = a4;
  v23 = a5;
  v6 = v5;
  v20 = a1;
  v21 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v20 - v11;
  v13 = -1 << *(_BYTE *)(v6 + 32);
  v14 = a2 & ~v13;
  if (((*(_QWORD *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v15 = ~v13;
    v16 = *(_QWORD *)(v9 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v9 + 16);
    do
    {
      v17(v12, *(_QWORD *)(v6 + 48) + v16 * v14, v8, v10);
      sub_1852478E0(v22, v21, v23);
      v18 = sub_1865074C8();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      if ((v18 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
  }
  return v14;
}

unint64_t sub_1855C5208(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1850F28CC(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x186DC4BE8](v9, a1);
      sub_1850F7064((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1855C52CC(CGRect *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  CGRect *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _BOOL4 v24;
  unsigned int v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v5 = _s22RotaryPlaceholderLabelC11TextSegmentVMa(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (id *)((char *)&v28 - v15);
  MEMORY[0x1E0C80A78](v17);
  v20 = (CGRect *)((char *)&v28 - v19);
  v30 = v2 + 64;
  v31 = v2;
  v21 = -1 << *(_BYTE *)(v2 + 32);
  v22 = a2 & ~v21;
  if (((*(_QWORD *)(v2 + 64 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) != 0)
  {
    v29 = ~v21;
    v23 = *(_QWORD *)(v18 + 72);
    while (1)
    {
      sub_1855C700C(*(_QWORD *)(v31 + 48) + v23 * v22, (uint64_t)v20, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
      v24 = CGRectEqualToRect(*v20, *a1);
      sub_1855C700C((uint64_t)v20, (uint64_t)v16, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
      sub_1855C700C((uint64_t)a1, (uint64_t)v13, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
      if (!v24)
        break;
      v25 = objc_msgSend(v16[4], sel_isEqualToTextRange_, *((_QWORD *)v13 + 4));
      sub_1855C7050((uint64_t)v16, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
      sub_1855C7050((uint64_t)v13, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
      sub_1855C700C((uint64_t)v20, (uint64_t)v10, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
      sub_1855C700C((uint64_t)a1, (uint64_t)v7, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
      if (!v25)
        goto LABEL_4;
      if (*((_QWORD *)v10 + 5) == *((_QWORD *)v7 + 5) && *((_QWORD *)v10 + 6) == *((_QWORD *)v7 + 6))
      {
        sub_1855C7050((uint64_t)v10, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
        sub_1855C7050((uint64_t)v7, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
        sub_1855C7050((uint64_t)v20, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
        return v22;
      }
      v26 = sub_186507FCC();
      sub_1855C7050((uint64_t)v10, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
      sub_1855C7050((uint64_t)v7, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
      sub_1855C7050((uint64_t)v20, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
      if ((v26 & 1) != 0)
        return v22;
LABEL_5:
      v22 = (v22 + 1) & v29;
      if (((*(_QWORD *)(v30 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
        return v22;
    }
    sub_1855C7050((uint64_t)v16, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
    sub_1855C7050((uint64_t)v13, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
    sub_1855C700C((uint64_t)v20, (uint64_t)v10, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
    sub_1855C700C((uint64_t)a1, (uint64_t)v7, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
LABEL_4:
    sub_1855C7050((uint64_t)v10, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
    sub_1855C7050((uint64_t)v7, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
    sub_1855C7050((uint64_t)v20, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
    goto LABEL_5;
  }
  return v22;
}

unint64_t sub_1855C55B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v16;

  v6 = a3(0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - v8;
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v7 + 72);
    do
    {
      sub_1855C700C(*(_QWORD *)(v3 + 48) + v13 * v11, (uint64_t)v9, a3);
      v14 = _s5UIKit16UITextEffectViewC0C2IDV2eeoiySbAE_AEtFZ_0();
      sub_1855C7050((uint64_t)v9, a3);
      if ((v14 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

uint64_t sub_1855C56BC(unint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = a2 & 0xFFFFFFFFFFFFF8;
  if ((result & 1) == 0)
    v5 = a2;
  if (*(_QWORD *)(v5 + 16) <= a1)
    goto LABEL_7;
  return result;
}

void sub_1855C570C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[6];
  _QWORD v15[2];
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  _QWORD *v29;
  __int128 v30[2];
  char v31;

  sub_1855C746C(a1, (uint64_t)v30);
  if ((v31 & 1) != 0)
  {
    v4 = sub_1851E59E0(v30, (uint64_t)v27);
    v18 = v15;
    MEMORY[0x1E0C80A78](v4);
    v17 = v14;
    v5 = *(_QWORD *)(a2 + 24);
    v14[2] = *(_QWORD *)(a2 + 16);
    v14[3] = v5;
    v14[4] = *(_QWORD *)(a2 + 32);
    v14[5] = v27;
    v16 = (_QWORD *)((char *)v2 + *(int *)(a2 + 48));
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v7 = swift_getAssociatedTypeWitness();
    v8 = swift_getAssociatedTypeWitness();
    v9 = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v11 = swift_getAssociatedConformanceWitness();
    v12 = swift_getAssociatedConformanceWitness();
    v13 = swift_getAssociatedConformanceWitness();
    v19 = AssociatedTypeWitness;
    v20 = v7;
    v21 = v8;
    v22 = v9;
    v23 = AssociatedConformanceWitness;
    v24 = v11;
    v25 = v12;
    v26 = v13;
    type metadata accessor for UIAnyModifierComponent();
  }
  sub_1851E59E0(v30, (uint64_t)v27);
  v18 = v2;
  v15[1] = v28;
  v17 = v29;
  v16 = __swift_project_boxed_opaque_existential_0Tm(v27, v28);
  v19 = swift_getAssociatedTypeWitness();
  v20 = swift_getAssociatedTypeWitness();
  v21 = swift_getAssociatedTypeWitness();
  v22 = swift_getAssociatedTypeWitness();
  v23 = swift_getAssociatedConformanceWitness();
  v24 = swift_getAssociatedConformanceWitness();
  v25 = swift_getAssociatedConformanceWitness();
  v26 = swift_getAssociatedConformanceWitness();
  type metadata accessor for UIAnyModifierComponent();
}

void sub_1855C5AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  v10 = *(_QWORD *)(v9 - 280);
  v11 = MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&a9 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v14 + 16))(v13, *(_QWORD *)(v9 - 272), v10, v11);
  sub_185793F54((uint64_t)v13);
}

void sub_1855C5B30(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 248) = a1;
  sub_186507708();
  sub_1865076F0();
  JUMPOUT(0x1855C5B5CLL);
}

uint64_t sub_1855C5B88(uint64_t a1, uint64_t a2)
{
  return sub_1855C5E0C(a1, a2, type metadata accessor for UIParentModifierTransitionComponent, (uint64_t (*)(uint64_t, uint64_t))sub_1855C570C);
}

uint64_t sub_1855C5B9C(uint64_t a1, uint64_t (*a2)(__int128 *, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t result;
  uint64_t (*v8)(__int128 *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  unint64_t v16;
  __int128 v18[3];
  _BYTE v19[40];
  __int128 v20[2];
  uint64_t v21;

  v5 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  v21 = MEMORY[0x1E0DEE9D8];
  if (v5)
  {
    v8 = a2;
    v9 = MEMORY[0x1E0DEE9D8];
    v10 = a1 + 32;
    v11 = &qword_1EDD867A0;
    do
    {
      sub_1851E75D8(v10, (uint64_t)v20);
      sub_1851E75D8((uint64_t)v20, (uint64_t)v19);
      __swift_instantiateConcreteTypeFromMangledName(v11);
      swift_dynamicCast();
      v12 = v8(v18, a4);
      sub_1855C74EC((uint64_t)v18);
      if ((v12 & 1) != 0)
      {
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v20);
      }
      else
      {
        v13 = a4;
        v14 = v11;
        sub_1851E59E0(v20, (uint64_t)v18);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1855B37F4(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v21;
        v16 = *(_QWORD *)(v21 + 16);
        v15 = *(_QWORD *)(v21 + 24);
        if (v16 >= v15 >> 1)
        {
          sub_1855B37F4(v15 > 1, v16 + 1, 1);
          v9 = v21;
        }
        *(_QWORD *)(v9 + 16) = v16 + 1;
        sub_1851E59E0(v18, v9 + 40 * v16 + 32);
        v11 = v14;
        a4 = v13;
        v8 = a2;
      }
      v10 += 40;
      --v5;
    }
    while (v5);
    return v21;
  }
  return result;
}

uint64_t sub_1855C5D3C()
{
  return sub_1857951EC();
}

uint64_t type metadata accessor for UIParentBaseLayoutTransitionComponent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UIParentBaseLayoutTransitionComponent);
}

unint64_t sub_1855C5D78()
{
  unint64_t result;

  result = qword_1EDD85548[0];
  if (!qword_1EDD85548[0])
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UILayoutOutputModel, &type metadata for UILayoutOutputModel);
    atomic_store(result, qword_1EDD85548);
  }
  return result;
}

uint64_t sub_1855C5DBC(uint64_t a1, uint64_t a2)
{
  return sub_1855C5E0C(a1, a2, type metadata accessor for UIParentBaseLayoutTransitionComponent, (uint64_t (*)(uint64_t, uint64_t))sub_1855C708C);
}

uint64_t sub_1855C5DD0(uint64_t a1)
{
  uint64_t v1;

  return sub_1855C3E28(a1, *(_QWORD *)(v1 + 40));
}

uint64_t sub_1855C5DEC(uint64_t a1)
{
  uint64_t v1;

  return sub_1855C3F1C(a1, *(_QWORD *)(v1 + 40));
}

uint64_t sub_1855C5E0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD), uint64_t (*a4)(uint64_t, uint64_t))
{
  _QWORD *v4;
  uint64_t v7;

  v7 = a3(0, v4[2], v4[3], v4[4]);
  return a4(a1, v7) & 1;
}

uint64_t sub_1855C5E58(uint64_t a1)
{
  uint64_t v1;

  return sub_1855C41B4(a1, *(_QWORD **)(v1 + 40));
}

uint64_t sub_1855C5E74()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1855C5E94()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1855C5EB4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1855C5ED4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UIParentBaseLayoutTransitionComponent<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1855C5F00()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1855C5F20()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1855C5F40()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t initializeWithCopy for UIParentComponentResponse(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  BOOL v4;
  __int128 v5;

  v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  v4 = v3 == 1;
  v5 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v5;
  (**(void (***)(uint64_t))(v5 - 8))(a1);
  *(_BYTE *)(a1 + 40) = v4;
  return a1;
}

uint64_t assignWithCopy for UIParentComponentResponse(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  BOOL v5;
  uint64_t v6;

  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_0Tm(a1);
    v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a2 + 2;
    v5 = v4 == 1;
    v6 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
    *(_BYTE *)(a1 + 40) = v5;
  }
  return a1;
}

uint64_t assignWithTake for UIParentComponentResponse(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;

  if (a1 != a2)
  {
    __swift_destroy_boxed_opaque_existential_0Tm(a1);
    v4 = *(unsigned __int8 *)(a2 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a2 + 2;
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = v4 == 1;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for UIParentComponentResponse(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UIParentComponentResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1855C612C(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_1855C6148(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for UIParentComponentResponse()
{
  return &type metadata for UIParentComponentResponse;
}

uint64_t dispatch thunk of UIParentComponentProviding.convert(event:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1855C6188()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_186506BBC();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1855C621C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v6 = sub_186506BBC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_QWORD *)(v7 + 64) + v10;
  v12 = *(_QWORD *)(v9 + 64) + 7;
  v13 = v10 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v13 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || ((v12 + (v11 & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    swift_retain();
  }
  else
  {
    v17 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    v18 = ((unint64_t)a2 + v11) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v17, v18, v8);
    *(_QWORD *)((v12 + (((unint64_t)a1 + v11) & v17)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v12 + v18) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1855C6334(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_186506BBC();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((*(_QWORD *)(v5 + 64)
                                                                                            + a1
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
  return swift_bridgeObjectRelease();
}

uint64_t sub_1855C63B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_186506BBC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v12, v13);
  *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v13) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1855C645C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_186506BBC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 24))(v12, v13);
  *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v13) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1855C6510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_186506BBC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 32))(v12, v13);
  *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v12) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v13) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1855C65B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_186506BBC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v8 + v10;
  v12 = (v11 + a1) & ~v10;
  v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v12, v13);
  *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v9 + 64) + 7 + v13) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1855C6660(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  unint64_t v23;

  v6 = sub_186506BBC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8)
    v12 = *(_DWORD *)(v7 + 84);
  else
    v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  if (!a2)
    return 0;
  v13 = v6;
  v14 = *(unsigned __int8 *)(v10 + 80);
  v15 = *(_QWORD *)(v7 + 64) + v14;
  v16 = *(_QWORD *)(v10 + 64) + 7;
  if (v12 < a2)
  {
    if (((((v16 + (v15 & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v17 = 2;
    else
      v17 = a2 - v12 + 1;
    if (v17 >= 0x10000)
      v18 = 4;
    else
      v18 = 2;
    if (v17 < 0x100)
      v18 = 1;
    if (v17 >= 2)
      v19 = v18;
    else
      v19 = 0;
    __asm { BR              X4 }
  }
  if (v8 == v12)
  {
    v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v22 = a1;
    v11 = *(unsigned int *)(v7 + 84);
    v9 = v13;
    return v21(v22, v11, v9);
  }
  v22 = (v15 + a1) & ~v14;
  if ((_DWORD)v11 == v12)
  {
    v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v21(v22, v11, v9);
  }
  v23 = *(_QWORD *)((v16 + v22) & 0xFFFFFFFFFFFFF8);
  if (v23 >= 0xFFFFFFFF)
    LODWORD(v23) = -1;
  return (v23 + 1);
}

void sub_1855C67E8(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;

  v8 = *(_QWORD *)(sub_186506BBC() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v9 + 84) <= *(_DWORD *)(v8 + 84))
    v10 = *(_DWORD *)(v8 + 84);
  else
    v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 >= a3)
  {
    v14 = 0u;
    if (a2 <= v10)
      goto LABEL_19;
  }
  else
  {
    if (((*(_DWORD *)(v9 + 64) + 7 + ((*(_DWORD *)(v8 + 64) + (_DWORD)v11) & ~(_DWORD)v11)) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v12 = a3 - v10 + 1;
    else
      v12 = 2;
    if (v12 >= 0x10000)
      v13 = 4;
    else
      v13 = 2;
    if (v12 < 0x100)
      v13 = 1;
    if (v12 >= 2)
      v14 = v13;
    else
      v14 = 0;
    if (a2 <= v10)
LABEL_19:
      __asm { BR              X0 }
  }
  if (((*(_DWORD *)(v9 + 64) + 7 + ((*(_DWORD *)(v8 + 64) + (_DWORD)v11) & ~(_DWORD)v11)) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v15 = ~v10 + a2;
    bzero(a1, ((*(_QWORD *)(v9 + 64) + 7 + ((*(_QWORD *)(v8 + 64) + v11) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v15;
  }
  __asm { BR              X10 }
}

void sub_1855C6918()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1855C69ACLL);
}

void sub_1855C6920()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x1855C6928);
  JUMPOUT(0x1855C69ACLL);
}

void sub_1855C6974()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1855C69ACLL);
}

void sub_1855C697C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1855C69ACLL);
}

uint64_t sub_1855C6984@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_WORD *)(v13 + v15) = 0;
  if (!(_DWORD)v14)
    JUMPOUT(0x1855C69ACLL);
  if ((_DWORD)v7 == v10)
  {
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v4 = v13;
    v5 = v14;
    a1 = v7;
    a2 = a3;
  }
  else
  {
    v4 = (v11 + v13) & v12;
    if ((_DWORD)a1 != v10)
      JUMPOUT(0x1855C6990);
    v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v5 = v14;
  }
  return v3(v4, v5, a1, a2);
}

uint64_t sub_1855C69C4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1855C69CC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1855C6A44(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1855C6AF8(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1855C6B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1855C6B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1855C6C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1855C6C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1855C6CC4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1855C6D40 + 4 * byte_18666A01F[v10]))();
  }
}

void sub_1855C6DC4(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1855C6EB8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1855C6F2CLL);
}

void sub_1855C6EC0(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1855C6EC8);
  JUMPOUT(0x1855C6F2CLL);
}

void sub_1855C6F08()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1855C6F2CLL);
}

void sub_1855C6F10()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1855C6F2CLL);
}

uint64_t sub_1855C6F18(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1855C6F2CLL);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1855C6F28);
    JUMPOUT(0x1855C6F24);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_1855C6F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83080);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1855C6F8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1855C6FD0(uint64_t a1, uint64_t a2)
{
  __swift_memcpy65_8(a2, a1);
  return a2;
}

uint64_t sub_1855C700C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1855C7050(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1855C708C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[4];
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  ValueMetadata *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  __int128 v23[2];
  char v24;

  sub_1855C746C(a1, (uint64_t)v23);
  if ((v24 & 1) != 0)
  {
    v2 = sub_1851E59E0(v23, (uint64_t)v20);
    v11 = v10;
    MEMORY[0x1E0C80A78](v2);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v4 = swift_getAssociatedTypeWitness();
    v5 = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v7 = swift_getAssociatedConformanceWitness();
    v8 = swift_getAssociatedConformanceWitness();
    v9 = sub_1855C5D78();
    v12 = AssociatedTypeWitness;
    v13 = v4;
    v14 = v5;
    v15 = &type metadata for UILayoutOutputModel;
    v16 = AssociatedConformanceWitness;
    v17 = v7;
    v18 = v8;
    v19 = v9;
    type metadata accessor for UIAnyModifierComponent();
  }
  sub_1851E59E0(v23, (uint64_t)v20);
  v10[1] = v21;
  v10[3] = v22;
  v10[2] = __swift_project_boxed_opaque_existential_0Tm(v20, v21);
  v11 = v1;
  v12 = swift_getAssociatedTypeWitness();
  v13 = swift_getAssociatedTypeWitness();
  v14 = swift_getAssociatedTypeWitness();
  v15 = &type metadata for UILayoutOutputModel;
  v16 = swift_getAssociatedConformanceWitness();
  v17 = swift_getAssociatedConformanceWitness();
  v18 = swift_getAssociatedConformanceWitness();
  v19 = sub_1855C5D78();
  type metadata accessor for UIAnyModifierComponent();
}

void sub_1855C73A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  v10 = *(_QWORD *)(v9 - 280);
  v11 = MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&a9 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v14 + 16))(v13, *(_QWORD *)(v9 - 272), v10, v11);
  sub_185793F54((uint64_t)v13);
}

void sub_1855C7414(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 248) = a1;
  sub_186507708();
  sub_1865076F0();
  JUMPOUT(0x1855C7440);
}

uint64_t sub_1855C746C(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  BOOL v4;
  __int128 v5;

  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a1 + 2;
  v4 = v3 == 1;
  v5 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 24) = v5;
  (**(void (***)(uint64_t))(v5 - 8))(a2);
  *(_BYTE *)(a2 + 40) = v4;
  return a2;
}

void sub_1855C74CC()
{
  sub_1855C395C();
}

uint64_t sub_1855C74E0(char a1)
{
  return a1 & 1;
}

uint64_t sub_1855C74EC(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  return a1;
}

void sub_1855C7510()
{
  sub_1855C2ABC();
}

uint64_t sub_1855C7524(char a1)
{
  return a1 & 1;
}

id sub_1855C7530(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 16), sel_isEqual_, *(_QWORD *)(a2 + 16));
}

void sub_1855C7554()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + 16);
  sub_186507A50();

}

uint64_t sub_1855C7598()
{
  sub_1865080EC();
  sub_1855C7554();
  return sub_186508134();
}

uint64_t type metadata accessor for WrappedObjCImpl(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WrappedObjCImpl);
}

uint64_t sub_1855C75E0()
{
  return sub_1855C7598();
}

void sub_1855C7600()
{
  sub_1855C7554();
}

uint64_t sub_1855C7620()
{
  sub_1865080EC();
  sub_1855C7554();
  return sub_186508134();
}

unint64_t sub_1855C765C(uint64_t *a1, uint64_t *a2)
{
  return (unint64_t)sub_1855C7530(*a1, *a2) & 1;
}

uint64_t sub_1855C767C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_186507564();
  sub_186508260();
  sub_186507564();
  swift_bridgeObjectRelease();
  sub_186507564();
  MEMORY[0x186DC9F28](MEMORY[0x1E0CB2120], *(_QWORD *)(v1 + 80));
  sub_186507FA8();
  sub_186507564();
  return 0;
}

uint64_t sub_1855C7744()
{
  return sub_1855C767C();
}

uint64_t sub_1855C7764()
{
  swift_retain();
  sub_1855C7554();
  return swift_release();
}

uint64_t sub_1855C7798()
{
  sub_1865080EC();
  swift_retain();
  sub_1855C7554();
  swift_release();
  return sub_186508134();
}

uint64_t sub_1855C77E8()
{
  return sub_1855C7798();
}

uint64_t sub_1855C77F0()
{
  return sub_1855C7764();
}

uint64_t sub_1855C77F8()
{
  sub_1865080EC();
  sub_1855C7764();
  return sub_186508134();
}

id sub_1855C7834(uint64_t *a1, uint64_t *a2)
{
  return sub_1855C7530(*a1, *a2);
}

void sub_1855C7840()
{
  JUMPOUT(0x186DC9F28);
}

void sub_1855C7850()
{
  JUMPOUT(0x186DC9F28);
}

void sub_1855C7864(char a1)
{
  __asm { BR              X10 }
}

ValueMetadata *sub_1855C788C()
{
  sub_1855C7C14();
  return &type metadata for UIAnimatableFloat;
}

unint64_t sub_1855C796C()
{
  unint64_t result;

  result = qword_1EDD7D558;
  if (!qword_1EDD7D558)
  {
    result = MEMORY[0x186DC9F28](&unk_186671258, &type metadata for UIAnimatableMeshTransform);
    atomic_store(result, (unint64_t *)&qword_1EDD7D558);
  }
  return result;
}

unint64_t sub_1855C79B0()
{
  unint64_t result;

  result = qword_1EDD7D530;
  if (!qword_1EDD7D530)
  {
    result = MEMORY[0x186DC9F28](&unk_18666C7D4, &type metadata for UIAnimatableColorMatrix);
    atomic_store(result, (unint64_t *)&qword_1EDD7D530);
  }
  return result;
}

unint64_t sub_1855C79F4()
{
  unint64_t result;

  result = qword_1EDD81708;
  if (!qword_1EDD81708)
  {
    result = MEMORY[0x186DC9F28](&unk_18666DC38, &type metadata for UIAnimatableNormalizedRect);
    atomic_store(result, (unint64_t *)&qword_1EDD81708);
  }
  return result;
}

unint64_t sub_1855C7A38()
{
  unint64_t result;

  result = qword_1EDD85708;
  if (!qword_1EDD85708)
  {
    result = MEMORY[0x186DC9F28](&unk_186672D9C, &type metadata for UIAnimatableColorArray);
    atomic_store(result, (unint64_t *)&qword_1EDD85708);
  }
  return result;
}

unint64_t sub_1855C7A7C()
{
  unint64_t result;

  result = qword_1EDD7D428;
  if (!qword_1EDD7D428)
  {
    result = MEMORY[0x186DC9F28](&unk_186675678, &type metadata for UIAnimatableNormalizedPoint);
    atomic_store(result, (unint64_t *)&qword_1EDD7D428);
  }
  return result;
}

unint64_t sub_1855C7AC0()
{
  unint64_t result;

  result = qword_1EDD82A78;
  if (!qword_1EDD82A78)
  {
    result = MEMORY[0x186DC9F28](&unk_18666D884, &type metadata for UIAnimatableScaledFloat);
    atomic_store(result, (unint64_t *)&qword_1EDD82A78);
  }
  return result;
}

unint64_t sub_1855C7B04()
{
  unint64_t result;

  result = qword_1EDD82908;
  if (!qword_1EDD82908)
  {
    result = MEMORY[0x186DC9F28](&unk_18666AAB4, &type metadata for UIAnimatableCornerRadii);
    atomic_store(result, (unint64_t *)&qword_1EDD82908);
  }
  return result;
}

unint64_t sub_1855C7B48()
{
  unint64_t result;

  result = qword_1EDD81FC0;
  if (!qword_1EDD81FC0)
  {
    result = MEMORY[0x186DC9F28](&unk_18666A440, &type metadata for UIAnimatableSize);
    atomic_store(result, (unint64_t *)&qword_1EDD81FC0);
  }
  return result;
}

unint64_t sub_1855C7B8C()
{
  unint64_t result;

  result = qword_1EDD82DF8;
  if (!qword_1EDD82DF8)
  {
    result = MEMORY[0x186DC9F28](&unk_18666EB80, &type metadata for UIAnimatablePoint);
    atomic_store(result, (unint64_t *)&qword_1EDD82DF8);
  }
  return result;
}

unint64_t sub_1855C7BD0()
{
  unint64_t result;

  result = qword_1EDD82D40;
  if (!qword_1EDD82D40)
  {
    result = MEMORY[0x186DC9F28](&unk_186673570, &type metadata for UIAnimatableRect);
    atomic_store(result, (unint64_t *)&qword_1EDD82D40);
  }
  return result;
}

unint64_t sub_1855C7C14()
{
  unint64_t result;

  result = qword_1EDD831B8;
  if (!qword_1EDD831B8)
  {
    result = MEMORY[0x186DC9F28](&unk_186673EB0, &type metadata for UIAnimatableFloat);
    atomic_store(result, (unint64_t *)&qword_1EDD831B8);
  }
  return result;
}

unint64_t sub_1855C7C58()
{
  unint64_t result;

  result = qword_1EDD82A18;
  if (!qword_1EDD82A18)
  {
    result = MEMORY[0x186DC9F28](&unk_186676310, &type metadata for UIAnimatableColor);
    atomic_store(result, (unint64_t *)&qword_1EDD82A18);
  }
  return result;
}

unint64_t sub_1855C7C9C()
{
  unint64_t result;

  result = qword_1EDD82EC8;
  if (!qword_1EDD82EC8)
  {
    result = MEMORY[0x186DC9F28](&unk_186673B8C, &type metadata for UIAnimatableTransform);
    atomic_store(result, (unint64_t *)&qword_1EDD82EC8);
  }
  return result;
}

uint64_t sub_1855C7CE0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000020 && a2 == 0x8000000186685D80
    || (sub_186507FCC() & 1) != 0
    || a1 == 0xD000000000000021 && a2 == 0x8000000186685DB0
    || (sub_186507FCC() & 1) != 0
    || a1 == 0xD000000000000023 && a2 == 0x8000000186685DE0
    || (sub_186507FCC() & 1) != 0
    || a1 == 0xD000000000000020 && a2 == 0x8000000186685E10
    || (sub_186507FCC() & 1) != 0
    || a1 == 0xD000000000000025 && a2 == 0x8000000186685E70
    || (sub_186507FCC() & 1) != 0
    || a1 == 0xD000000000000020 && a2 == 0x8000000186685EA0
    || (sub_186507FCC() & 1) != 0
    || a1 == 0xD00000000000001FLL && a2 == 0x8000000186685ED0
    || (sub_186507FCC() & 1) != 0
    || a1 == 0x7974696361706FLL && a2 == 0xE700000000000000
    || (sub_186507FCC() & 1) != 0
    || a1 == 0x704F776F64616873 && a2 == 0xED00007974696361
    || (sub_186507FCC() & 1) != 0
    || a1 == 0x656C616373 && a2 == 0xE500000000000000
    || (sub_186507FCC() & 1) != 0
    || a1 == 0x6F697469736F507ALL && a2 == 0xE90000000000006ELL
    || (sub_186507FCC() & 1) != 0
    || a1 == 1836019578 && a2 == 0xE400000000000000
    || (sub_186507FCC() & 1) != 0
    || a1 == 0x6E6F697469736F70 && a2 == 0xEA0000000000782ELL
    || (sub_186507FCC() & 1) != 0
    || a1 == 0x6E6F697469736F70 && a2 == 0xEA0000000000792ELL
    || (sub_186507FCC() & 1) != 0
    || a1 == 0x6F2E73646E756F62 && a2 == 0xEF782E6E69676972
    || (sub_186507FCC() & 1) != 0
    || a1 == 0x6F2E73646E756F62 && a2 == 0xEF792E6E69676972
    || (sub_186507FCC() & 1) != 0
    || a1 == 0xD000000000000011 && a2 == 0x8000000186687590
    || (sub_186507FCC() & 1) != 0
    || a1 == 0xD000000000000012 && a2 == 0x80000001866875B0
    || (sub_186507FCC() & 1) != 0
    || a1 == 0x6957726564726F62 && a2 == 0xEB00000000687464
    || (sub_186507FCC() & 1) != 0
    || a1 == 0x664F726564726F62 && a2 == 0xEC00000074657366
    || (sub_186507FCC() & 1) != 0
    || a1 == 0xD00000000000001BLL && a2 == 0x8000000186685EF0
    || (sub_186507FCC() & 1) != 0
    || a1 == 0xD00000000000002BLL && a2 == 0x8000000186685F10
    || (sub_186507FCC() & 1) != 0
    || a1 == 0xD00000000000002BLL && a2 == 0x8000000186685F40
    || (sub_186507FCC() & 1) != 0
    || a1 == 0xD00000000000002BLL && a2 == 0x8000000186685F70
    || (sub_186507FCC() & 1) != 0
    || a1 == 0xD00000000000002BLL && a2 == 0x8000000186685FA0
    || (sub_186507FCC() & 1) != 0
    || a1 == 0xD00000000000002BLL && a2 == 0x8000000186685FD0
    || (sub_186507FCC() & 1) != 0
    || a1 == 0xD00000000000002BLL && a2 == 0x8000000186686000
    || (sub_186507FCC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964
         || (sub_186507FCC() & 1) != 0
         || a1 == 0x6152776F64616873 && a2 == 0xEC00000073756964
         || (sub_186507FCC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000 || (sub_186507FCC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x664F776F64616873 && a2 == 0xEC00000074657366 || (sub_186507FCC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F50726F68636E61 && a2 == 0xEB00000000746E69 || (sub_186507FCC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL
         || (sub_186507FCC() & 1) != 0
         || a1 == 0x6F43726564726F62 && a2 == 0xEB00000000726F6CLL
         || (sub_186507FCC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x73726F6C6F63 && a2 == 0xE600000000000000 || (sub_186507FCC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x73646E756F62 && a2 == 0xE600000000000000 || (sub_186507FCC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x73746E65746E6F63 && a2 == 0xEE007265746E6543
         || (sub_186507FCC() & 1) != 0
         || a1 == 0x73746E65746E6F63 && a2 == 0xEC00000074636552
         || (sub_186507FCC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x726F66736E617274 && a2 == 0xE90000000000006DLL
         || (sub_186507FCC() & 1) != 0
         || a1 == 0xD000000000000011 && a2 == 0x8000000186685D40
         || (sub_186507FCC() & 1) != 0
         || a1 == 0xD000000000000011 && a2 == 0x8000000186685D60
         || (sub_186507FCC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x8000000186685E40 || (sub_186507FCC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6E6172546873656DLL && a2 == 0xED00006D726F6673 || (sub_186507FCC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEB00000000696964)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v5 = sub_186507FCC();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

double sub_1855C8C48@<D0>(double *a1@<X8>)
{
  id v2;
  double v3;
  double v4;
  double result;

  v2 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v2, sel_scale);
  v4 = v3;

  result = 1.0 / v4;
  *a1 = 1.0 / v4;
  return result;
}

double sub_1855C8CB0@<D0>(double *a1@<X8>)
{
  void *v2;
  id v3;
  double v4;
  double v5;
  double v6;
  id v7;
  double v8;
  double v9;
  double result;

  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_mainScreen);
  objc_msgSend(v3, sel_scale);
  v5 = v4;

  v6 = 1.0 / v5;
  v7 = objc_msgSend(v2, sel_mainScreen);
  objc_msgSend(v7, sel_scale);
  v9 = v8;

  result = v6 * (1.0 / v9);
  *a1 = result;
  return result;
}

BOOL sub_1855C8D64(double *a1, double *a2)
{
  double *v2;
  _BOOL4 v3;

  v3 = vabdd_f64(*v2, *a1) <= *a2;
  return vabdd_f64(v2[1], a1[1]) <= *a2 && v3;
}

uint64_t sub_1855C8D8C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  id v9;
  _BYTE v10[32];

  sub_1850F69D4(a1, (uint64_t)v10);
  sub_1855C8E84();
  swift_dynamicCast();
  objc_msgSend(v9, sel_CGSizeValue);
  v5 = v4;
  v7 = v6;

  result = __swift_destroy_boxed_opaque_existential_0Tm(a1);
  *a2 = v5;
  a2[1] = v7;
  return result;
}

unint64_t sub_1855C8E20@<X0>(_QWORD *a1@<X8>)
{
  double *v1;
  id v3;
  unint64_t result;

  v3 = objc_msgSend((id)objc_opt_self(), sel_valueWithCGSize_, *v1, v1[1]);
  result = sub_1855C8E84();
  a1[3] = result;
  *a1 = v3;
  return result;
}

unint64_t sub_1855C8E84()
{
  unint64_t result;

  result = qword_1EDD82FD0;
  if (!qword_1EDD82FD0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDD82FD0);
  }
  return result;
}

BOOL sub_1855C8EC0(double *a1, double *a2)
{
  return a1[1] == a2[1] && *a1 == *a2;
}

float64x2_t sub_1855C8EDC(float64x2_t *a1)
{
  float64x2_t *v1;
  float64x2_t result;

  result = vmulq_f64(*a1, *v1);
  *v1 = result;
  return result;
}

BOOL sub_1855C8EF0()
{
  _QWORD *v0;

  return (~v0[1] & 0x7FF0000000000000) == 0 || (~*v0 & 0x7FF0000000000000) == 0;
}

float64x2_t sub_1855C8F0C(double a1)
{
  float64x2_t *v1;
  float64x2_t result;

  result = vmulq_n_f64(*v1, a1);
  *v1 = result;
  return result;
}

double sub_1855C8F1C()
{
  double *v0;

  return *v0 * *v0 + v0[1] * v0[1];
}

void sub_1855C8F30(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

float64x2_t sub_1855C8F38@<Q0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X1>, float64x2_t *a3@<X8>)
{
  float64x2_t result;

  result = vaddq_f64(*a1, *a2);
  *a3 = result;
  return result;
}

float64x2_t sub_1855C8F4C(float64x2_t *a1, float64x2_t *a2)
{
  float64x2_t result;

  result = vaddq_f64(*a2, *a1);
  *a1 = result;
  return result;
}

float64x2_t sub_1855C8F60@<Q0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X1>, float64x2_t *a3@<X8>)
{
  float64x2_t result;

  result = vsubq_f64(*a1, *a2);
  *a3 = result;
  return result;
}

float64x2_t sub_1855C8F74(float64x2_t *a1, float64x2_t *a2)
{
  float64x2_t result;

  result = vsubq_f64(*a1, *a2);
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for UIAnimatableSize()
{
  return &type metadata for UIAnimatableSize;
}

unint64_t sub_1855C8F9C()
{
  unint64_t result;

  result = qword_1EDD81FB0;
  if (!qword_1EDD81FB0)
  {
    result = MEMORY[0x186DC9F28](&unk_18666A418, &type metadata for UIAnimatableSize);
    atomic_store(result, (unint64_t *)&qword_1EDD81FB0);
  }
  return result;
}

unint64_t sub_1855C8FE4()
{
  unint64_t result;

  result = qword_1EDD81FB8;
  if (!qword_1EDD81FB8)
  {
    result = MEMORY[0x186DC9F28](&unk_18666A374, &type metadata for UIAnimatableSize);
    atomic_store(result, (unint64_t *)&qword_1EDD81FB8);
  }
  return result;
}

unint64_t sub_1855C9028(uint64_t a1)
{
  unint64_t result;

  result = sub_1855C904C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1855C904C()
{
  unint64_t result;

  result = qword_1EDD82460;
  if (!qword_1EDD82460)
  {
    result = MEMORY[0x186DC9F28](&unk_18666A3C4, &type metadata for UIAnimatableSize);
    atomic_store(result, (unint64_t *)&qword_1EDD82460);
  }
  return result;
}

unint64_t sub_1855C9090(uint64_t a1)
{
  unint64_t result;

  result = sub_1855C90B4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1855C90B4()
{
  unint64_t result;

  result = qword_1EDD81FC8;
  if (!qword_1EDD81FC8)
  {
    result = MEMORY[0x186DC9F28](&unk_18666A3FC, &type metadata for UIAnimatableSize);
    atomic_store(result, (unint64_t *)&qword_1EDD81FC8);
  }
  return result;
}

char *sub_1855C92BC(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  objc_super v28;

  swift_unknownObjectWeakInit();
  *(_QWORD *)&v4[OBJC_IVAR____UISliderFluidVisualElement_data] = 0;
  v9 = OBJC_IVAR____UISliderFluidVisualElement_clipView;
  v10 = objc_allocWithZone((Class)UIView);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, sel_init);
  v12 = OBJC_IVAR____UISliderFluidVisualElement_minimumTrackView;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)UIView), sel_init);
  v13 = OBJC_IVAR____UISliderFluidVisualElement_maximumTrackView;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)UIView), sel_init);
  *(_QWORD *)&v11[OBJC_IVAR____UISliderFluidVisualElement_tickViews] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v11[OBJC_IVAR____UISliderFluidVisualElement_minimumTrackEffectView] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____UISliderFluidVisualElement_maximumTrackEffectView] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____UISliderFluidVisualElement_minimumView] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____UISliderFluidVisualElement_maximumView] = 0;
  v11[OBJC_IVAR____UISliderFluidVisualElement_usingSliderStyling] = 1;
  v11[OBJC_IVAR____UISliderFluidVisualElement_changeWithVolumeButtons] = 1;
  *(_QWORD *)&v11[OBJC_IVAR____UISliderFluidVisualElement_fluidInteraction] = 0;
  *(_QWORD *)&v11[OBJC_IVAR____UISliderFluidVisualElement_expansionGesture] = 0;
  v11[OBJC_IVAR____UISliderFluidVisualElement_isInteractivelyChanging] = 0;
  v11[OBJC_IVAR____UISliderFluidVisualElement_interactiveChangeEnded] = 1;
  *(_QWORD *)&v11[OBJC_IVAR____UISliderFluidVisualElement_stretchLimit] = 0xBFF0000000000000;
  *(_QWORD *)&v11[OBJC_IVAR____UISliderFluidVisualElement_paddingAroundImage] = 0x4026000000000000;
  *(_QWORD *)&v11[OBJC_IVAR____UISliderFluidVisualElement_defaultSliderHeight] = 0x401C000000000000;
  *(_QWORD *)&v11[OBJC_IVAR____UISliderFluidVisualElement_defaultExpansionFactor] = 0x4003333333333333;
  *(_QWORD *)&v11[OBJC_IVAR____UISliderFluidVisualElement_disabledAlpha] = 0x3FE0000000000000;
  *(_QWORD *)&v11[OBJC_IVAR____UISliderFluidVisualElement_fluidUpdateSource] = 0;

  v28.receiver = v11;
  v28.super_class = (Class)type metadata accessor for _UISliderFluidVisualElement();
  v14 = (char *)objc_msgSendSuper2(&v28, sel_initWithFrame_, a1, a2, a3, a4);
  v15 = OBJC_IVAR____UISliderFluidVisualElement_clipView;
  v16 = *(void **)&v14[OBJC_IVAR____UISliderFluidVisualElement_clipView];
  v17 = v14;
  v18 = objc_msgSend(v16, sel_layer);
  objc_msgSend(v18, sel_setCornerCurve_, *MEMORY[0x1E0CD2A68]);

  v19 = objc_msgSend(*(id *)&v14[v15], sel_layer);
  objc_msgSend(v19, sel_setAllowsEdgeAntialiasing_, 1);

  objc_msgSend(*(id *)&v14[v15], sel_setClipsToBounds_, 1);
  objc_msgSend(*(id *)&v14[v15], sel_setUserInteractionEnabled_, 0);
  v20 = OBJC_IVAR____UISliderFluidVisualElement_minimumTrackView;
  v21 = objc_msgSend(*(id *)&v17[OBJC_IVAR____UISliderFluidVisualElement_minimumTrackView], sel_layer);
  objc_msgSend(v21, sel_setAllowsEdgeAntialiasing_, 1);

  objc_msgSend(*(id *)&v17[v20], sel_setUserInteractionEnabled_, 0);
  v22 = OBJC_IVAR____UISliderFluidVisualElement_maximumTrackView;
  v23 = objc_msgSend(*(id *)&v17[OBJC_IVAR____UISliderFluidVisualElement_maximumTrackView], sel_layer);
  objc_msgSend(v23, sel_setAllowsEdgeAntialiasing_, 1);

  objc_msgSend(*(id *)&v17[v22], sel_setUserInteractionEnabled_, 0);
  objc_msgSend(v17, sel_addSubview_, *(_QWORD *)&v14[v15]);
  objc_msgSend(*(id *)&v14[v15], sel_addSubview_, *(_QWORD *)&v17[v20]);
  v24 = *(void **)&v17[v22];
  v25 = *(id *)&v14[v15];
  v26 = v24;
  objc_msgSend(v25, sel_addSubview_, v26);

  return v17;
}

id sub_1855C967C(char a1, float a2, float a3, float a4)
{
  char *v4;
  float v5;
  id result;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  char isEscapingClosureAtFileLocation;
  _QWORD v13[6];

  v5 = (float)(a2 - a3) / (float)(a4 - a3);
  if ((a1 & 1) != 0)
  {
    result = *(id *)&v4[OBJC_IVAR____UISliderFluidVisualElement_fluidInteraction];
    if (result)
      return objc_msgSend(result, sel_setValue_, v5);
  }
  else
  {
    v7 = (void *)objc_opt_self();
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v4;
    *(float *)(v8 + 24) = v5;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = sub_1855CE1FC;
    *(_QWORD *)(v9 + 24) = v8;
    v13[4] = sub_1855A6A1C;
    v13[5] = v9;
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 1107296256;
    v13[2] = sub_1855D8DF4;
    v13[3] = &block_descriptor_65;
    v10 = _Block_copy(v13);
    v11 = v4;
    swift_retain();
    swift_release();
    objc_msgSend(v7, sel_performWithoutAnimation_, v10);
    _Block_release(v10);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = (id)swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
  return result;
}

void sub_1855C9804(char a1, float a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  float v17;
  void *v18;
  float v19;
  float v20;
  void *v21;
  float v22;
  double v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  _QWORD v31[2];
  id v32;
  id v33;

  v3 = v2;
  v6 = sub_1865072DC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1865072B8();
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)&v12 = MEMORY[0x1E0C80A78](v10).n128_u64[0];
  v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = OBJC_IVAR____UISliderFluidVisualElement_data;
  v16 = *(void **)(v3 + OBJC_IVAR____UISliderFluidVisualElement_data);
  if (v16)
  {
    objc_msgSend(v16, sel_minimumValue, v12);
    v18 = *(void **)(v3 + v15);
    if (v18)
    {
      v19 = v17;
      objc_msgSend(v18, sel_maximumValue);
      v21 = *(void **)(v3 + v15);
      if (v21)
      {
        v22 = v19 + (float)((float)(v20 - v19) * a2);
        v33 = v21;
        objc_msgSend(v33, sel_value);
        if (*(float *)&v23 == v22)
        {
LABEL_20:

          return;
        }
        if ((*(_BYTE *)(v3 + OBJC_IVAR____UISliderFluidVisualElement_fluidUpdateSource) & 7) == 0
          || (v24 = (void *)MEMORY[0x186DCA138](v3 + OBJC_IVAR____UISliderFluidVisualElement_slider)) == 0)
        {
LABEL_17:
          *(float *)&v23 = v22;
          objc_msgSend(v33, sel_setValue_, v23);
          if ((a1 & 1) != 0)
          {
            v29 = (void *)MEMORY[0x186DCA138](v3 + OBJC_IVAR____UISliderFluidVisualElement_slider);
            if (v29)
            {
              v30 = v29;
              objc_msgSend(v29, sel_sendActionsForControlEvents_, 4096);

            }
          }
          goto LABEL_20;
        }
        v25 = v24;
        if (objc_msgSend(v24, sel__allowsSymbolAnimations))
        {
          if (a2 >= 1.0)
          {
            v26 = OBJC_IVAR____UISliderFluidVisualElement_maximumView;
          }
          else
          {
            if (a2 > 0.0)
              goto LABEL_16;
            v26 = OBJC_IVAR____UISliderFluidVisualElement_minimumView;
          }
          v27 = *(void **)(v3 + v26);
          if (v27)
          {
            objc_opt_self();
            v28 = swift_dynamicCastObjCClass();
            if (v28)
            {
              v31[1] = v28;
              v32 = v27;
              sub_1865072AC();
              sub_1865072D0();
              sub_1855CE210((uint64_t)v14, (uint64_t)v9, 1, 0, 0);

              (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
              (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
              goto LABEL_17;
            }
          }
        }
LABEL_16:

        goto LABEL_17;
      }
    }
  }
}

id sub_1855C9AC8(void *a1, uint64_t a2, SEL *a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for _UISliderFluidVisualElement();
  return objc_msgSendSuper2(&v5, *a3);
}

void sub_1855C9B10(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, const char **a7)
{
  const char *v12;
  id v13;
  char v14;
  objc_super v15;

  v15.receiver = a1;
  v15.super_class = (Class)type metadata accessor for _UISliderFluidVisualElement();
  v12 = *a7;
  v13 = v15.receiver;
  objc_msgSendSuper2(&v15, v12, a2, a3, a4, a5);
  v14 = objc_msgSend((id)objc_opt_self(), sel__isInAnimationBlockWithAnimationsEnabled, v15.receiver, v15.super_class);
  sub_1855CB320(v14);
  sub_1855CAE40();

}

void sub_1855C9BAC(void *a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  float v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  _QWORD v27[6];

  v3 = OBJC_IVAR____UISliderFluidVisualElement_fluidInteraction;
  v4 = *(void **)&v1[OBJC_IVAR____UISliderFluidVisualElement_fluidInteraction];
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v1, sel_removeInteraction_, v5);
    v6 = *(void **)&v1[v3];
    *(_QWORD *)&v1[v3] = 0;

  }
  v7 = OBJC_IVAR____UISliderFluidVisualElement_expansionGesture;
  v8 = *(void **)&v1[OBJC_IVAR____UISliderFluidVisualElement_expansionGesture];
  if (v8)
  {
    v9 = v8;
    objc_msgSend(a1, sel_removeGestureRecognizer_, v9);
    v10 = *(void **)&v1[v7];
    *(_QWORD *)&v1[v7] = 0;

  }
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(a1, sel_trackRectForBounds_);
  v13 = objc_msgSend((id)objc_opt_self(), sel_configurationWithTrackSize_, v11, v12);
  v14 = v13;
  if (v1[OBJC_IVAR____UISliderFluidVisualElement_changeWithVolumeButtons])
    v15 = 3;
  else
    v15 = 1;
  objc_msgSend(v13, sel_setPreferredInputMethods_, v15);
  if (*(double *)&v1[OBJC_IVAR____UISliderFluidVisualElement_stretchLimit] > 0.0)
    objc_msgSend(v14, sel_setStretchAmount_);
  v16 = *(void **)&v1[OBJC_IVAR____UISliderFluidVisualElement_data];
  if (v16)
  {
    objc_msgSend(v16, sel_sliderSpeedMultiplier);
    if (v17 != 1.0)
      objc_msgSend(v14, sel_setVelocityMultiplier_, v17);
  }
  v18 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v19 = objc_allocWithZone((Class)_UIFluidSliderInteraction);
  v27[4] = sub_1855CE9F4;
  v27[5] = v18;
  v27[0] = MEMORY[0x1E0C809B0];
  v27[1] = 1107296256;
  v27[2] = sub_1855B2B2C;
  v27[3] = &block_descriptor_48;
  v20 = _Block_copy(v27);
  swift_retain();
  v21 = objc_msgSend(v19, sel_initWithConfiguration_handler_, v14, v20);
  _Block_release(v20);
  swift_release();
  swift_release();
  objc_msgSend(v21, sel__setDirectDrivingDelegate_, v1);
  v22 = *(void **)&v1[v3];
  *(_QWORD *)&v1[v3] = v21;
  v23 = v21;

  objc_msgSend(a1, sel_addInteraction_, v23);
  v24 = objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), sel_initWithTarget_action_, v1, sel_handleExpansionGesture_);
  objc_msgSend(v24, sel_setMinimumPressDuration_, 0.0);
  objc_msgSend(v24, sel_setAllowableMovement_, 1.79769313e308);
  objc_msgSend(v24, sel_setDelegate_, v1);
  objc_msgSend(v24, sel_setCancelsTouchesInView_, 0);
  v25 = *(void **)&v1[v7];
  *(_QWORD *)&v1[v7] = v24;
  v26 = v24;

  objc_msgSend(a1, sel_addGestureRecognizer_, v26);
}

void sub_1855C9EE4(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  double Width;
  void *v18;
  double Height;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  float v31;
  float v32;
  float v33;
  float v34;
  float v35;
  float v36;
  float v37;
  float v38;
  float v39;
  float v40;
  float v41;
  float v42;
  double v43;
  float v44;
  float v45;
  float v46;
  float v47;
  float v48;
  float v49;
  float v50;
  double v51;
  double v52;
  unsigned int v53;
  double v54;
  double v55;
  double v56;
  CGFloat v57;
  double v58;
  double v59;
  double v60;
  CGFloat v61;
  double v62;
  double v63;
  CGFloat v64;
  double v65;
  CGFloat v66;
  double v67;
  CGFloat v68;
  double v69;
  CGFloat v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  double v80;
  double v81;
  CGFloat v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double MinX;
  double v95;
  double MaxX;
  double v97;
  void *v98;
  void *v99;
  id v100;
  double v101;
  id v102;
  id v103;
  double v104;
  id v105;
  double v106;
  unint64_t v107;
  uint64_t v108;
  char v109;
  double v110;
  uint64_t v111;
  void *v112;
  void *v113;
  id v114;
  id v115;
  CGFloat v116;
  CGFloat v117;
  CGFloat v118;
  CGFloat v119;
  CGFloat v120;
  CGFloat v121;
  CGFloat v122;
  char *v123;
  id v124;
  id v125;
  __int128 v126;
  CGRect v127;
  CGRect v128;
  CGRect v129;
  CGRect v130;
  CGRect v131;
  CGRect v132;
  CGRect v133;
  CGRect v134;
  CGRect v135;
  CGRect v136;
  CGRect v137;
  CGRect v138;
  CGRect v139;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x186DCA138](v3);
  if (v4)
  {
    v5 = (char *)v4;
    v6 = v4 + OBJC_IVAR____UISliderFluidVisualElement_slider;
    v7 = (void *)MEMORY[0x186DCA138](v4 + OBJC_IVAR____UISliderFluidVisualElement_slider);
    if (v7)
    {
      v8 = v7;
      v9 = *(void **)&v5[OBJC_IVAR____UISliderFluidVisualElement_data];
      if (v9 && (v10 = *(void **)&v5[OBJC_IVAR____UISliderFluidVisualElement_fluidInteraction]) != 0)
      {
        v11 = OBJC_IVAR____UISliderFluidVisualElement_clipView;
        v12 = *(void **)&v5[OBJC_IVAR____UISliderFluidVisualElement_clipView];
        v13 = v9;
        v123 = v10;
        v14 = v12;
        objc_msgSend(a1, sel_trackBounds);
        objc_msgSend(v14, sel_setBounds_);

        v15 = *(id *)&v5[v11];
        objc_msgSend(a1, sel_trackTransform);
        objc_msgSend(v15, sel_setTransform_, &v126);

        v16 = objc_msgSend(*(id *)&v5[v11], sel_layer);
        objc_msgSend(*(id *)&v5[v11], sel_bounds);
        Width = CGRectGetWidth(v127);
        v18 = v13;
        objc_msgSend(*(id *)&v5[v11], sel_bounds);
        Height = CGRectGetHeight(v128);
        if (Height >= Width)
          Height = Width;
        v20 = Height * 0.5;
        if (v20 > 20.0)
          v20 = 20.0;
        objc_msgSend(v16, sel_setCornerRadius_, v20);

        objc_msgSend(a1, sel_barFrame);
        v22 = v21;
        v24 = v23;
        v26 = v25;
        v28 = v27;
        objc_msgSend(a1, sel_value);
        v30 = v29;
        objc_msgSend(v13, sel_maximumValue);
        v32 = v31;
        objc_msgSend(v13, sel_minimumValue);
        v34 = v32 - v33;
        if (v34 > 0.0)
        {
          v35 = v30;
          objc_msgSend(v13, sel_maximumEnabledValue);
          v37 = v36;
          objc_msgSend(v13, sel_maximumValue);
          if (v37 < v38)
          {
            objc_msgSend(v13, sel_maximumEnabledValue);
            v40 = v39;
            objc_msgSend(v13, sel_minimumValue);
            v42 = (float)(v40 + v41) / v34;
            if (v42 < v35)
            {
              objc_msgSend(a1, sel_trackBounds);
              v26 = v43 * v42;
              v35 = v42;
            }
          }
          objc_msgSend(v13, sel_minimumEnabledValue);
          v45 = v44;
          objc_msgSend(v13, sel_minimumValue);
          if (v46 < v45)
          {
            objc_msgSend(v13, sel_minimumEnabledValue);
            v48 = v47;
            objc_msgSend(v13, sel_minimumValue);
            v50 = (float)(v48 + v49) / v34;
            if (v35 < v50)
            {
              v51 = v50;
              objc_msgSend(a1, sel_trackBounds);
              v26 = v52 * v51;
            }
          }
        }
        objc_msgSend(*(id *)&v5[OBJC_IVAR____UISliderFluidVisualElement_minimumTrackView], sel_setFrame_, v22, v24, v26, v28);
        v53 = objc_msgSend(v5, sel__shouldReverseLayoutDirection);
        objc_msgSend(a1, sel_trackBounds);
        v55 = v54;
        v57 = v56;
        v59 = v58;
        v61 = v60;
        if (objc_msgSend(v18, sel_isMinimumTrackVisible))
        {
          v129.origin.x = v55;
          v129.origin.y = v57;
          v129.size.width = v59;
          v129.size.height = v61;
          v62 = CGRectGetWidth(v129);
          v130.origin.x = v22;
          v130.origin.y = v24;
          v130.size.width = v26;
          v130.size.height = v28;
          v59 = v62 - CGRectGetWidth(v130);
          v55 = 0.0;
          if ((v53 & 1) == 0)
          {
            v131.origin.x = v22;
            v131.origin.y = v24;
            v131.size.width = v26;
            v131.size.height = v28;
            v55 = CGRectGetWidth(v131);
          }
        }
        else
        {
          v24 = v57;
          v28 = v61;
        }
        objc_msgSend(*(id *)&v5[OBJC_IVAR____UISliderFluidVisualElement_maximumTrackView], sel_setFrame_, v55, v24, v59, v28);
        objc_msgSend(v5, sel_bounds);
        objc_msgSend(v8, sel_trackRectForBounds_);
        v64 = v63;
        v66 = v65;
        v68 = v67;
        v70 = v69;
        v71 = OBJC_IVAR____UISliderFluidVisualElement_maximumView;
        if (v53)
          v72 = OBJC_IVAR____UISliderFluidVisualElement_maximumView;
        else
          v72 = OBJC_IVAR____UISliderFluidVisualElement_minimumView;
        v73 = *(void **)&v5[v72];
        if (v53)
          v71 = OBJC_IVAR____UISliderFluidVisualElement_minimumView;
        v74 = *(void **)&v5[v71];
        v124 = v74;
        v125 = v73;
        objc_msgSend(v5, sel_bounds);
        objc_msgSend(v8, sel_minimumValueImageRectForBounds_);
        v76 = v75;
        v78 = v77;
        v80 = v79;
        v82 = v81;
        objc_msgSend(v5, sel_bounds);
        objc_msgSend(v8, sel_maximumValueImageRectForBounds_);
        if (v53)
          v87 = v76;
        else
          v87 = v83;
        if (v53)
          v88 = v78;
        else
          v88 = v84;
        v121 = v88;
        v122 = v87;
        if (v53)
          v89 = v80;
        else
          v89 = v85;
        if (v53)
          v90 = v82;
        else
          v90 = v86;
        v119 = v90;
        v120 = v89;
        if (v53)
          v91 = v83;
        else
          v91 = v76;
        if (v53)
          v92 = v84;
        else
          v92 = v78;
        v117 = v92;
        v118 = v91;
        if (v53)
          v93 = v85;
        else
          v93 = v80;
        v116 = v93;
        if (v53)
          v82 = v86;
        objc_msgSend(*(id *)&v5[v11], sel_frame);
        MinX = CGRectGetMinX(v132);
        v133.origin.x = v64;
        v133.origin.y = v66;
        v133.size.width = v68;
        v133.size.height = v70;
        v95 = CGRectGetMinX(v133);
        objc_msgSend(*(id *)&v5[v11], sel_frame);
        MaxX = CGRectGetMaxX(v134);
        v135.origin.x = v64;
        v135.origin.y = v66;
        v135.size.width = v68;
        v135.size.height = v70;
        v97 = CGRectGetMaxX(v135);
        v98 = (void *)MEMORY[0x186DCA138](v6);
        v99 = v98;
        if (v98)
        {
          v100 = objc_msgSend(v98, sel__sliderConfiguration);

          if (v100)
          {
            objc_opt_self();
            v99 = (void *)swift_dynamicCastObjCClass();
            if (!v99)
              swift_unknownObjectRelease();
          }
          else
          {
            v99 = 0;
          }
        }
        v101 = MaxX - v97;
        v102 = objc_msgSend(v99, sel_delegate);

        if (v102)
        {
          objc_msgSend(v102, sel__sliderFluidInteractionWillExtend_insets_, v8, 0.0, MinX - v95, 0.0, v101);
          swift_unknownObjectRelease();
        }
        if (v73)
        {
          v103 = v125;
          v136.origin.x = v118;
          v136.origin.y = v117;
          v136.size.width = v116;
          v136.size.height = v82;
          v104 = MinX - v95 + CGRectGetMidX(v136);
          v137.origin.x = v118;
          v137.origin.y = v117;
          v137.size.width = v116;
          v137.size.height = v82;
          objc_msgSend(v103, sel_setCenter_, v104, CGRectGetMidY(v137));

        }
        if (v74)
        {
          v105 = v124;
          v138.origin.x = v122;
          v138.origin.y = v121;
          v138.size.width = v120;
          v138.size.height = v119;
          v106 = v101 + CGRectGetMidX(v138);
          v139.origin.x = v122;
          v139.origin.y = v121;
          v139.size.width = v120;
          v139.size.height = v119;
          objc_msgSend(v105, sel_setCenter_, v106, CGRectGetMidY(v139));

        }
        v107 = (unint64_t)objc_msgSend(a1, sel_type);
        v108 = (v107 >> 1) & 1;
        if ((v107 & 4) != 0)
          v108 = 2;
        *(_QWORD *)&v5[OBJC_IVAR____UISliderFluidVisualElement_fluidUpdateSource] = v108;
        if ((objc_msgSend(a1, sel_type) & 2) != 0 || (objc_msgSend(a1, sel_type) & 4) != 0)
        {
          if (objc_msgSend(a1, sel_interactionState))
            v109 = objc_msgSend(v8, sel_isContinuous);
          else
            v109 = 1;
        }
        else
        {
          v109 = 0;
        }
        objc_msgSend(v123, sel_value);
        *(float *)&v110 = v110;
        sub_1855C9804(v109, *(float *)&v110);
        if ((v5[OBJC_IVAR____UISliderFluidVisualElement_isInteractivelyChanging] & 1) == 0)
        {
          v111 = OBJC_IVAR____UISliderFluidVisualElement_interactiveChangeEnded;
          if ((v5[OBJC_IVAR____UISliderFluidVisualElement_interactiveChangeEnded] & 1) == 0)
          {
            if (objc_msgSend(a1, sel_isAtTarget))
            {
              v112 = (void *)MEMORY[0x186DCA138](v6);
              v113 = v112;
              if (v112)
              {
                v114 = objc_msgSend(v112, sel__sliderConfiguration);

                if (v114)
                {
                  objc_opt_self();
                  v113 = (void *)swift_dynamicCastObjCClass();
                  if (!v113)
                    swift_unknownObjectRelease();
                }
                else
                {
                  v113 = 0;
                }
              }
              v115 = objc_msgSend(v113, sel_delegate);

              if (v115)
              {
                if ((objc_msgSend(v115, sel_respondsToSelector_, sel__sliderFluidInteractionDidEnd_) & 1) == 0)
                {

                  swift_unknownObjectRelease();
                  goto LABEL_85;
                }
                objc_msgSend(v115, sel__sliderFluidInteractionDidEnd_, v8);

                swift_unknownObjectRelease();
              }
              else
              {

              }
LABEL_85:
              v5[v111] = 1;
              goto LABEL_76;
            }
          }
        }

        v5 = v123;
      }
      else
      {

      }
    }
LABEL_76:

  }
}

void sub_1855CA7B8(void *a1)
{
  _BYTE *v1;
  int v3;
  char *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  _BYTE *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  double v21;
  double v22;
  double v23;
  double v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  double v29;
  double v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  void *v35;
  float v36;
  id v37;
  id v38;
  id v39;
  _QWORD aBlock[6];

  v3 = objc_msgSend(a1, sel_state) == (id)1 || objc_msgSend(a1, sel_state) == (id)2;
  v4 = &v1[OBJC_IVAR____UISliderFluidVisualElement_slider];
  v5 = (void *)MEMORY[0x186DCA138](&v1[OBJC_IVAR____UISliderFluidVisualElement_slider]);
  if (!v5)
    return;
  v6 = *(void **)&v1[OBJC_IVAR____UISliderFluidVisualElement_fluidInteraction];
  if (!v6)
  {
LABEL_30:

    return;
  }
  v39 = v5;
  v7 = OBJC_IVAR____UISliderFluidVisualElement_isInteractivelyChanging;
  if (v3 == v1[OBJC_IVAR____UISliderFluidVisualElement_isInteractivelyChanging])
  {
    v18 = (void *)MEMORY[0x186DCA138](v4);
    v37 = v6;
    if (v18)
    {
      v19 = objc_msgSend(v18, sel__sliderConfiguration);

      if (v19)
      {
        objc_opt_self();
        v18 = (void *)swift_dynamicCastObjCClass();
        if (!v18)
          swift_unknownObjectRelease();
      }
      else
      {
        v18 = 0;
      }
    }
    v31 = objc_msgSend(v18, sel_delegate, v37);

    if (v31)
    {
      objc_msgSend(a1, sel_locationInView_, v39);
      objc_msgSend(v31, sel__sliderFluidInteractionWillContinue_withLocation_, v39);
      swift_unknownObjectRelease();
    }

    v5 = v38;
    goto LABEL_30;
  }
  v8 = v6;
  v9 = (void *)sub_1865074D4();
  objc_msgSend(v39, sel_willChangeValueForKey_, v9);

  v1[v7] = v3;
  v10 = (void *)sub_1865074D4();
  objc_msgSend(v39, sel_didChangeValueForKey_, v10);

  v11 = (void *)objc_opt_self();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v1;
  *(_BYTE *)(v12 + 24) = v3;
  aBlock[4] = sub_1855CE9E8;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18530A69C;
  aBlock[3] = &block_descriptor_44;
  v13 = _Block_copy(aBlock);
  v14 = v1;
  swift_release();
  objc_msgSend(v11, sel_animateWithDuration_animations_, v13, 0.2);
  _Block_release(v13);
  v15 = (void *)MEMORY[0x186DCA138](v4);
  v16 = v15;
  if (v15)
  {
    v17 = objc_msgSend(v15, sel__sliderConfiguration);

    if (v17)
    {
      objc_opt_self();
      v16 = (void *)swift_dynamicCastObjCClass();
      if (!v16)
        swift_unknownObjectRelease();
    }
    else
    {
      v16 = 0;
    }
  }
  v20 = objc_msgSend(v16, sel_delegate);

  if (v20)
  {
    if ((v3 & 1) != 0)
    {
      objc_msgSend(a1, sel_locationInView_, v39);
      objc_msgSend(v20, sel__sliderFluidInteractionWillBegin_withLocation_, v39);
      swift_unknownObjectRelease();
      v14[OBJC_IVAR____UISliderFluidVisualElement_interactiveChangeEnded] = 0;
    }
    else
    {
      objc_msgSend(v20, sel__sliderFluidInteractionWillEnd_, v39);
      swift_unknownObjectRelease();
    }
  }
  objc_msgSend(v14, sel_bounds);
  objc_msgSend(v39, sel_trackRectForBounds_);
  v22 = v21;
  v24 = v23;
  if (v3)
  {
    v25 = (void *)MEMORY[0x186DCA138](v4);
    if (v25
      && (v26 = v25,
          v27 = objc_msgSend(v25, sel__sliderConfiguration),
          v26,
          v27))
    {
      objc_opt_self();
      v28 = (void *)swift_dynamicCastObjCClass();
      if (v28)
      {
        objc_msgSend(v28, sel_expansionFactor);
        v30 = v29;
      }
      else
      {
        v30 = 2.4;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      v30 = 2.4;
    }
    v24 = v24 * v30;
  }
  v32 = objc_msgSend((id)objc_opt_self(), sel_configurationWithTrackSize_, v22, v24);
  v33 = v32;
  if (v14[OBJC_IVAR____UISliderFluidVisualElement_changeWithVolumeButtons])
    v34 = 3;
  else
    v34 = 1;
  objc_msgSend(v32, sel_setPreferredInputMethods_, v34);
  if (*(double *)&v14[OBJC_IVAR____UISliderFluidVisualElement_stretchLimit] > 0.0)
    objc_msgSend(v33, sel_setStretchAmount_);
  v35 = *(void **)&v14[OBJC_IVAR____UISliderFluidVisualElement_data];
  if (v35)
  {
    objc_msgSend(v35, sel_sliderSpeedMultiplier);
    if (v36 != 1.0)
      objc_msgSend(v33, sel_setVelocityMultiplier_, v36);
  }
  objc_msgSend(v8, sel_setConfiguration_, v33);

}

uint64_t sub_1855CACFC(uint64_t a1, char a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  double v7;
  id v8;
  void *v9;

  v3 = *(_QWORD *)(a1 + OBJC_IVAR____UISliderFluidVisualElement_tickViews);
  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_186507E58();
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v4 >= 1)
  {
    v6 = 0;
    if ((a2 & 1) != 0)
      v7 = 1.0;
    else
      v7 = 0.0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x186DC4CB4](v6, v3);
      else
        v8 = *(id *)(v3 + 8 * v6 + 32);
      v9 = v8;
      ++v6;
      objc_msgSend(v8, sel_setAlpha_, v7);

    }
    while (v4 != v6);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_1855CAE40()
{
  char *v0;
  void *v1;
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char **v19;
  double v20;
  id v21;
  void *v22;
  id v23;
  float v24;
  uint64_t v26;
  char **v27;
  float v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;

  v4 = MEMORY[0x186DCA138](&v0[OBJC_IVAR____UISliderFluidVisualElement_slider]);
  if (v4)
  {
    v36 = (id)v4;
    v5 = OBJC_IVAR____UISliderFluidVisualElement_tickViews;
    v6 = *(_QWORD *)&v0[OBJC_IVAR____UISliderFluidVisualElement_tickViews];
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v7 = sub_186507E58();
      if (!v7)
        goto LABEL_11;
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v7)
        goto LABEL_11;
    }
    if (v7 < 1)
    {
      __break(1u);
      goto LABEL_39;
    }
    for (i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x186DC4CB4](i, v6);
      else
        v9 = *(id *)(v6 + 8 * i + 32);
      v10 = v9;
      objc_msgSend(v9, sel_removeFromSuperview);

    }
LABEL_11:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v0[v5] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
    if (objc_msgSend(v36, sel__sliderConfiguration))
    {
      objc_opt_self();
      v12 = swift_dynamicCastObjCClass();
      if (v12)
      {
        v1 = (void *)v12;
        objc_msgSend(v0, sel_bounds);
        objc_msgSend(v36, sel_trackRectForBounds_);
        v2 = v13;
        v3 = v14;
        v37 = v11;
        if (objc_msgSend(v1, sel_tickStyle) == (id)0x7FFFFFFFFFFFFFFFLL)
        {
LABEL_41:
          *(_QWORD *)&v0[v5] = v11;

          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          return;
        }
        v15 = objc_msgSend(v1, sel_ticks);
        sub_1851F9080(0, qword_1EDD7D690);
        v7 = sub_186507654();

        if (!((unint64_t)v7 >> 62))
        {
          v16 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v16)
          {
LABEL_16:
            v32 = v5;
            if (v16 < 1)
            {
              __break(1u);
              return;
            }
            v17 = 0;
            v34 = OBJC_IVAR____UISliderFluidVisualElement_clipView;
            v35 = OBJC_IVAR____UISliderFluidVisualElement_isInteractivelyChanging;
            v18 = v7 & 0xC000000000000001;
            v19 = &selRef_populateEuclidCandidates_;
            v33 = v16;
            do
            {
              if (v18)
                v23 = (id)MEMORY[0x186DC4CB4](v17, v7);
              else
                v23 = *(id *)(v7 + 8 * v17 + 32);
              v22 = v23;
              objc_msgSend(v23, v19[23]);
              if (v24 > 0.0 && v24 < 1.0)
              {
                v26 = v7;
                v27 = v19;
                objc_msgSend(v22, v19[23]);
                v29 = objc_msgSend(objc_allocWithZone((Class)UIView), sel_initWithFrame_, v2 * v28 + -1.0, 0.0, 2.0, v3);
                v30 = v1;
                v31 = objc_msgSend(v1, sel_tickColor);
                if (!v31)
                  v31 = objc_msgSend((id)objc_opt_self(), sel_tertiarySystemBackgroundColor);
                objc_msgSend(v29, sel_setBackgroundColor_, v31);

                objc_msgSend(v29, sel_setUserInteractionEnabled_, 0);
                objc_msgSend(v29, sel_setAutoresizingMask_, 16);
                if (v0[v35])
                  v20 = 1.0;
                else
                  v20 = 0.0;
                objc_msgSend(v29, sel_setAlpha_, v20);
                objc_msgSend(*(id *)&v0[v34], sel_addSubview_, v29);
                v21 = v29;
                MEMORY[0x186DC4654]();
                if (*(_QWORD *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                  sub_186507690();
                sub_1865076D8();
                sub_18650766C();

                v22 = v21;
                v1 = v30;
                v19 = v27;
                v7 = v26;
                v16 = v33;
              }
              ++v17;

            }
            while (v16 != v17);
            swift_bridgeObjectRelease();
            v11 = v37;
            v5 = v32;
            goto LABEL_41;
          }
          goto LABEL_40;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        v16 = sub_186507E58();
        swift_bridgeObjectRelease();
        if (v16)
          goto LABEL_16;
LABEL_40:
        swift_bridgeObjectRelease();
        v11 = MEMORY[0x1E0DEE9D8];
        goto LABEL_41;
      }
      swift_unknownObjectRelease();
    }

  }
}

void sub_1855CB320(char a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  CGFloat x;
  CGFloat y;
  double width;
  double height;
  double MidX;
  double v10;
  double MidY;
  double v12;
  id v13;
  double v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  double v20;
  double v21;
  void *v22;
  id v23;
  id v24;
  double v25;
  double v26;
  double v27;
  double v28;
  _BOOL4 v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  unsigned int v33;
  void *v34;
  double v35;
  void *v36;
  id v37;
  void *v38;
  double v39;
  uint64_t v40;
  void *v41;
  id v42;
  uint64_t v43;
  void *v44;
  float v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  _QWORD aBlock[6];
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;

  v3 = &v1[OBJC_IVAR____UISliderFluidVisualElement_slider];
  v4 = MEMORY[0x186DCA138](&v1[OBJC_IVAR____UISliderFluidVisualElement_slider]);
  if (v4)
  {
    v52 = (id)v4;
    objc_msgSend(v1, sel_bounds);
    objc_msgSend(v52, sel_trackRectForBounds_);
    x = v54.origin.x;
    y = v54.origin.y;
    width = v54.size.width;
    height = v54.size.height;
    MidX = CGRectGetMidX(v54);
    objc_msgSend(v1, sel_bounds);
    v10 = MidX - CGRectGetMidX(v55);
    v56.origin.x = x;
    v56.origin.y = y;
    v56.size.width = width;
    v56.size.height = height;
    MidY = CGRectGetMidY(v56);
    objc_msgSend(v1, sel_bounds);
    v12 = MidY - CGRectGetMidY(v57);
    v13 = *(id *)&v1[OBJC_IVAR____UISliderFluidVisualElement_clipView];
    objc_msgSend(v1, sel_bounds);
    v14 = v10 + CGRectGetMidX(v58);
    objc_msgSend(v1, sel_bounds);
    objc_msgSend(v13, sel_setCenter_, v14, v12 + CGRectGetMidY(v59));

    v15 = *(void **)&v1[OBJC_IVAR____UISliderFluidVisualElement_fluidInteraction];
    if (!v15)
    {
      v22 = v52;
LABEL_33:

      return;
    }
    if (v1[OBJC_IVAR____UISliderFluidVisualElement_isInteractivelyChanging] == 1)
    {
      v16 = (void *)MEMORY[0x186DCA138](v3);
      v17 = v15;
      if (v16
        && (v18 = objc_msgSend(v16, sel__sliderConfiguration), v16,
                                                                                                   v18))
      {
        objc_opt_self();
        v19 = (void *)swift_dynamicCastObjCClass();
        if (v19)
        {
          objc_msgSend(v19, sel_expansionFactor);
          v21 = v20;
        }
        else
        {
          v21 = 2.4;
        }
        swift_unknownObjectRelease();
      }
      else
      {
        v21 = 2.4;
      }
      height = height * v21;
    }
    else
    {
      v23 = v15;
    }
    v24 = objc_msgSend(v15, sel_configuration);
    objc_msgSend(v24, sel_trackSize);
    v26 = v25;
    v28 = v27;

    v29 = v26 != width;
    v30 = objc_msgSend(v15, sel_configuration);
    v31 = (unint64_t)objc_msgSend(v30, sel_preferredInputMethods);

    v32 = OBJC_IVAR____UISliderFluidVisualElement_changeWithVolumeButtons;
    v33 = v1[OBJC_IVAR____UISliderFluidVisualElement_changeWithVolumeButtons];
    v34 = (void *)MEMORY[0x186DCA138](v3);
    v35 = -1.0;
    if (v34)
    {
      v36 = v34;
      v37 = objc_msgSend(v34, sel__sliderConfiguration);

      if (v37)
      {
        objc_opt_self();
        v38 = (void *)swift_dynamicCastObjCClass();
        if (v38)
        {
          objc_msgSend(v38, sel_stretchLimit);
          v35 = v39;
        }
        swift_unknownObjectRelease();
      }
    }
    v40 = OBJC_IVAR____UISliderFluidVisualElement_stretchLimit;
    if (v35 == *(double *)&v1[OBJC_IVAR____UISliderFluidVisualElement_stretchLimit])
    {
      if (!(((v31 >> 1) & 1 ^ v33 | v29) & 1 | (v28 != height)))
      {
        v41 = v52;
LABEL_32:

        v22 = v15;
        goto LABEL_33;
      }
    }
    else
    {
      *(double *)&v1[OBJC_IVAR____UISliderFluidVisualElement_stretchLimit] = v35;
    }
    v42 = objc_msgSend((id)objc_opt_self(), sel_configurationWithTrackSize_, width, height);
    v41 = v42;
    if (v1[v32])
      v43 = 3;
    else
      v43 = 1;
    objc_msgSend(v42, sel_setPreferredInputMethods_, v43);
    if (*(double *)&v1[v40] > 0.0)
      objc_msgSend(v41, sel_setStretchAmount_);
    v44 = *(void **)&v1[OBJC_IVAR____UISliderFluidVisualElement_data];
    if (v44 && (objc_msgSend(v44, sel_sliderSpeedMultiplier), v45 != 1.0))
    {
      objc_msgSend(v41, sel_setVelocityMultiplier_, v45);
      if ((a1 & 1) != 0)
        goto LABEL_31;
    }
    else if ((a1 & 1) != 0)
    {
LABEL_31:
      objc_msgSend(v15, sel_setConfiguration_, v41);

      goto LABEL_32;
    }
    v46 = (void *)objc_opt_self();
    v47 = swift_allocObject();
    *(_QWORD *)(v47 + 16) = v15;
    *(_QWORD *)(v47 + 24) = v41;
    v48 = swift_allocObject();
    *(_QWORD *)(v48 + 16) = sub_1855CE9A4;
    *(_QWORD *)(v48 + 24) = v47;
    aBlock[4] = sub_1855A6A1C;
    aBlock[5] = v48;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1855D8DF4;
    aBlock[3] = &block_descriptor_38;
    v49 = _Block_copy(aBlock);
    v50 = v15;
    v51 = v41;
    swift_retain();
    swift_release();
    objc_msgSend(v46, sel_performWithoutAnimation_, v49);

    _Block_release(v49);
    LOBYTE(v50) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v50 & 1) != 0)
      __break(1u);
  }
}

id sub_1855CB85C(void *a1)
{
  id v1;
  id v2;
  double v3;

  v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  v2 = objc_allocWithZone((Class)UIColor);
  v3 = 0.0;
  if (v1 == (id)2)
    v3 = 1.0;
  return objc_msgSend(v2, sel_initWithWhite_alpha_, v3, 0.1);
}

void sub_1855CB8B0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  id v58;
  void *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  id v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  id v81;
  void *v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  uint64_t v88;
  void *v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  id (*v93)(uint64_t, void *);
  void *v94;
  id (*v95)(void *);
  uint64_t v96;

  v1 = v0 + OBJC_IVAR____UISliderFluidVisualElement_slider;
  v2 = (void *)MEMORY[0x186DCA138](v0 + OBJC_IVAR____UISliderFluidVisualElement_slider);
  if (!v2)
    goto LABEL_9;
  v3 = v2;
  v4 = objc_msgSend(v2, sel__sliderConfiguration);

  if (!v4)
    goto LABEL_9;
  objc_opt_self();
  v5 = (void *)swift_dynamicCastObjCClass();
  if (!v5)
  {
    swift_unknownObjectRelease();
    goto LABEL_9;
  }
  v6 = objc_msgSend(v5, sel_disableAllSliderVisuals);
  swift_unknownObjectRelease();
  if ((v6 & 1) == 0)
  {
LABEL_9:
    *(_BYTE *)(v0 + OBJC_IVAR____UISliderFluidVisualElement_usingSliderStyling) = 1;
    v11 = (void *)MEMORY[0x186DCA138](v1);
    if (v11)
    {
      v12 = v11;
      v13 = objc_msgSend(v11, sel__sliderConfiguration);

      if (v13)
      {
        objc_opt_self();
        v14 = (void *)swift_dynamicCastObjCClass();
        if (v14)
        {
          v15 = objc_msgSend(v14, sel_maximumTrackEffect);
          swift_unknownObjectRelease();
          if (v15)
          {
            v16 = OBJC_IVAR____UISliderFluidVisualElement_maximumTrackView;
            v17 = *(void **)(v0 + OBJC_IVAR____UISliderFluidVisualElement_maximumTrackView);
            v18 = (void *)objc_opt_self();
            v19 = v17;
            v20 = objc_msgSend(v18, sel_clearColor);
            objc_msgSend(v19, sel_setBackgroundColor_, v20);

            v21 = OBJC_IVAR____UISliderFluidVisualElement_maximumTrackEffectView;
            v22 = *(void **)(v0 + OBJC_IVAR____UISliderFluidVisualElement_maximumTrackEffectView);
            if (v22)
            {
              objc_msgSend(v22, sel_setEffect_, v15);
            }
            else
            {
              v52 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), sel_initWithEffect_, v15);
              v53 = *(void **)(v0 + v21);
              *(_QWORD *)(v0 + v21) = v52;

              v54 = *(void **)(v0 + v21);
              if (!v54)
                goto LABEL_77;
              objc_msgSend(v54, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
              v55 = *(void **)(v0 + v21);
              if (!v55)
                goto LABEL_77;
              objc_msgSend(v55, sel_setAutoresizingMask_, 18);
              v56 = *(void **)(v0 + v21);
              if (!v56)
                goto LABEL_77;
              v57 = *(void **)(v0 + v16);
              v58 = v56;
              objc_msgSend(v57, sel_bounds);
              objc_msgSend(v58, sel_setFrame_);

              v59 = *(void **)(v0 + v21);
              if (!v59
                || (v60 = objc_msgSend(v59, sel__captureGroup),
                    objc_msgSend(v60, sel_setMinimumScale_, 1.0),
                    v60,
                    (v61 = *(_QWORD *)(v0 + v21)) == 0))
              {
LABEL_77:
                __break(1u);
                goto LABEL_78;
              }
              objc_msgSend(*(id *)(v0 + v16), sel_addSubview_, v61);
            }
            objc_opt_self();
            v62 = swift_dynamicCastObjCClass();
            v63 = *(void **)(v0 + v21);
            if (v62)
            {
              if (v63)
              {
                v64 = objc_msgSend(v63, sel_contentView);
                v65 = *(void **)(v0 + OBJC_IVAR____UISliderFluidVisualElement_data);
                if (!v65
                  || (v66 = objc_msgSend(v65, sel_maximumTrackTintColor)) == 0)
                {
                  v67 = objc_allocWithZone((Class)UIColor);
                  v95 = sub_1855CB85C;
                  v96 = 0;
                  v91 = MEMORY[0x1E0C809B0];
                  v92 = 1107296256;
                  v93 = sub_1852E82F4;
                  v94 = &block_descriptor_28;
                  v68 = _Block_copy(&v91);
                  v66 = objc_msgSend(v67, sel_initWithDynamicProvider_, v68);
                  _Block_release(v68);
                  swift_release();
                }
                objc_msgSend(v64, sel_setBackgroundColor_, v66);

              }
            }
            else if (v63)
            {
              v84 = objc_msgSend(v63, sel_contentView);
              v85 = objc_msgSend(v18, sel_clearColor);
              objc_msgSend(v84, sel_setBackgroundColor_, v85);

            }
LABEL_25:
            v33 = (void *)MEMORY[0x186DCA138](v1);
            if (v33)
            {
              v34 = v33;
              v35 = objc_msgSend(v33, sel__sliderConfiguration);

              if (v35)
              {
                objc_opt_self();
                v36 = (void *)swift_dynamicCastObjCClass();
                if (v36)
                {
                  v37 = objc_msgSend(v36, sel_minimumTrackEffect);
                  swift_unknownObjectRelease();
                  if (v37)
                  {
                    v38 = OBJC_IVAR____UISliderFluidVisualElement_minimumTrackView;
                    v39 = *(void **)(v0 + OBJC_IVAR____UISliderFluidVisualElement_minimumTrackView);
                    v40 = (void *)objc_opt_self();
                    v41 = v39;
                    v42 = objc_msgSend(v40, sel_clearColor);
                    objc_msgSend(v41, sel_setBackgroundColor_, v42);

                    v43 = OBJC_IVAR____UISliderFluidVisualElement_minimumTrackEffectView;
                    v44 = *(void **)(v0 + OBJC_IVAR____UISliderFluidVisualElement_minimumTrackEffectView);
                    if (v44)
                    {
                      objc_msgSend(v44, sel_setEffect_, v37);
                      goto LABEL_61;
                    }
                    v69 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), sel_initWithEffect_, v37);
                    v70 = *(void **)(v0 + v43);
                    *(_QWORD *)(v0 + v43) = v69;

                    v71 = *(void **)(v0 + v43);
                    if (v71)
                    {
                      objc_msgSend(v71, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
                      v72 = *(void **)(v0 + v43);
                      if (v72)
                      {
                        objc_msgSend(v72, sel_setAutoresizingMask_, 18);
                        v73 = *(void **)(v0 + v43);
                        if (v73)
                        {
                          v74 = *(void **)(v0 + v38);
                          v75 = v73;
                          objc_msgSend(v74, sel_bounds);
                          objc_msgSend(v75, sel_setFrame_);

                          v76 = *(void **)(v0 + v43);
                          if (v76)
                          {
                            v77 = objc_msgSend(v76, sel__captureGroup);
                            objc_msgSend(v77, sel_setMinimumScale_, 1.0);

                            v78 = *(_QWORD *)(v0 + v43);
                            if (v78)
                            {
                              objc_msgSend(*(id *)(v0 + v38), sel_addSubview_, v78);
LABEL_61:
                              objc_opt_self();
                              v79 = swift_dynamicCastObjCClass();
                              v80 = *(void **)(v0 + v43);
                              if (v79)
                              {
                                if (v80)
                                {
                                  v81 = objc_msgSend(v80, sel_contentView);
                                  v82 = *(void **)(v0 + OBJC_IVAR____UISliderFluidVisualElement_data);
                                  if (!v82
                                    || (v83 = objc_msgSend(v82, sel_minimumTrackTintColor)) == 0)
                                  {
                                    v83 = objc_msgSend(v40, sel_tintColor);
                                  }
                                  objc_msgSend(v81, sel_setBackgroundColor_, v83);

                                }
                              }
                              else if (v80)
                              {
                                v86 = objc_msgSend(v80, sel_contentView);
                                v87 = objc_msgSend(v40, sel_clearColor);
                                objc_msgSend(v86, sel_setBackgroundColor_, v87);

                              }
                              goto LABEL_41;
                            }
                          }
                        }
                      }
                    }
LABEL_78:
                    __break(1u);
                    return;
                  }
                }
                else
                {
                  swift_unknownObjectRelease();
                }
              }
            }
            v45 = OBJC_IVAR____UISliderFluidVisualElement_minimumTrackEffectView;
            v46 = *(void **)(v0 + OBJC_IVAR____UISliderFluidVisualElement_minimumTrackEffectView);
            if (v46)
            {
              objc_msgSend(v46, sel_removeFromSuperview);
              v47 = *(void **)(v0 + v45);
            }
            else
            {
              v47 = 0;
            }
            *(_QWORD *)(v0 + v45) = 0;

            v37 = *(id *)(v0 + OBJC_IVAR____UISliderFluidVisualElement_minimumTrackView);
            v48 = *(void **)(v0 + OBJC_IVAR____UISliderFluidVisualElement_data);
            if (v48)
            {
              v49 = v37;
              v50 = objc_msgSend(v48, sel_minimumTrackTintColor);
              if (v50)
              {
LABEL_40:
                objc_msgSend(v37, sel_setBackgroundColor_, v50);

LABEL_41:
                return;
              }
            }
            else
            {
              v51 = v37;
            }
            v50 = objc_msgSend((id)objc_opt_self(), sel_tintColor);
            goto LABEL_40;
          }
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
    v23 = OBJC_IVAR____UISliderFluidVisualElement_maximumTrackEffectView;
    v24 = *(void **)(v0 + OBJC_IVAR____UISliderFluidVisualElement_maximumTrackEffectView);
    if (v24)
    {
      objc_msgSend(v24, sel_removeFromSuperview);
      v25 = *(void **)(v0 + v23);
    }
    else
    {
      v25 = 0;
    }
    *(_QWORD *)(v0 + v23) = 0;

    v26 = *(void **)(v0 + OBJC_IVAR____UISliderFluidVisualElement_maximumTrackView);
    v27 = *(void **)(v0 + OBJC_IVAR____UISliderFluidVisualElement_data);
    if (v27)
    {
      v28 = v26;
      v29 = objc_msgSend(v27, sel_maximumTrackTintColor);
      if (v29)
      {
LABEL_24:
        objc_msgSend(v26, sel_setBackgroundColor_, v29);

        goto LABEL_25;
      }
    }
    else
    {
      v30 = v26;
    }
    v31 = objc_allocWithZone((Class)UIColor);
    v95 = sub_1855CB85C;
    v96 = 0;
    v91 = MEMORY[0x1E0C809B0];
    v92 = 1107296256;
    v93 = sub_1852E82F4;
    v94 = &block_descriptor_25;
    v32 = _Block_copy(&v91);
    v29 = objc_msgSend(v31, sel_initWithDynamicProvider_, v32);
    _Block_release(v32);
    swift_release();
    goto LABEL_24;
  }
  v7 = OBJC_IVAR____UISliderFluidVisualElement_usingSliderStyling;
  if (*(_BYTE *)(v0 + OBJC_IVAR____UISliderFluidVisualElement_usingSliderStyling) == 1)
  {
    v8 = OBJC_IVAR____UISliderFluidVisualElement_maximumTrackEffectView;
    v9 = *(void **)(v0 + OBJC_IVAR____UISliderFluidVisualElement_maximumTrackEffectView);
    if (v9)
    {
      objc_msgSend(v9, sel_removeFromSuperview);
      v10 = *(void **)(v0 + v8);
    }
    else
    {
      v10 = 0;
    }
    *(_QWORD *)(v0 + v8) = 0;

    objc_msgSend(*(id *)(v0 + OBJC_IVAR____UISliderFluidVisualElement_maximumTrackView), sel_setBackgroundColor_, 0);
    v88 = OBJC_IVAR____UISliderFluidVisualElement_minimumTrackEffectView;
    v89 = *(void **)(v0 + OBJC_IVAR____UISliderFluidVisualElement_minimumTrackEffectView);
    if (v89)
    {
      objc_msgSend(v89, sel_removeFromSuperview);
      v90 = *(void **)(v0 + v88);
    }
    else
    {
      v90 = 0;
    }
    *(_QWORD *)(v0 + v88) = 0;

    objc_msgSend(*(id *)(v0 + OBJC_IVAR____UISliderFluidVisualElement_minimumTrackView), sel_setBackgroundColor_, 0);
    *(_BYTE *)(v0 + v7) = 0;
  }
}

void sub_1855CC1E4()
{
  char *v0;
  char *v1;
  char *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  char v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  char v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  id v52;
  id v53;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____UISliderFluidVisualElement_slider];
  v3 = (void *)MEMORY[0x186DCA138](&v0[OBJC_IVAR____UISliderFluidVisualElement_slider]);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel__sliderConfiguration);

    if (v5)
    {
      objc_opt_self();
      v6 = (void *)swift_dynamicCastObjCClass();
      if (v6)
      {
        v7 = objc_msgSend(v6, sel_minimumValueView);
        swift_unknownObjectRelease();
        if (v7)
        {
          v8 = OBJC_IVAR____UISliderFluidVisualElement_minimumView;
          v9 = *(void **)&v1[OBJC_IVAR____UISliderFluidVisualElement_minimumView];
          if (!v9)
          {
            v13 = 0;
            goto LABEL_42;
          }
          sub_1851F9080(0, (unint64_t *)&qword_1EDD82CE0);
          v10 = v7;
          v11 = v9;
          v12 = sub_186507A44();

          if ((v12 & 1) == 0)
          {
            v13 = *(void **)&v1[v8];
LABEL_42:
            objc_msgSend(v13, sel_removeFromSuperview);
            v50 = *(void **)&v1[v8];
            *(_QWORD *)&v1[v8] = v7;
            v10 = v7;

            objc_msgSend(v1, sel_addSubview_, v10);
          }
LABEL_19:

          goto LABEL_20;
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  v14 = *(void **)&v1[OBJC_IVAR____UISliderFluidVisualElement_data];
  if (v14)
  {
    v15 = objc_msgSend(v14, sel_minimumValueImage);
    if (v15)
    {
      v10 = v15;
      v16 = OBJC_IVAR____UISliderFluidVisualElement_minimumView;
      v17 = *(void **)&v1[OBJC_IVAR____UISliderFluidVisualElement_minimumView];
      if (v17 && (objc_opt_self(), (v18 = swift_dynamicCastObjCClass()) != 0))
      {
        v19 = (void *)v18;
        v20 = v17;
        objc_msgSend(v19, sel_setImage_, v10);
      }
      else
      {
        objc_msgSend(v17, sel_removeFromSuperview);
        v23 = objc_msgSend(objc_allocWithZone((Class)UIImageView), sel_initWithImage_, v10);
        v24 = *(void **)&v1[v16];
        *(_QWORD *)&v1[v16] = v23;

        v25 = *(void **)&v1[v16];
        if (!v25)
        {
          __break(1u);
LABEL_46:
          __break(1u);
          return;
        }
        v20 = v25;
        objc_msgSend(v1, sel_addSubview_, v20);
      }
      goto LABEL_18;
    }
  }
  v21 = OBJC_IVAR____UISliderFluidVisualElement_minimumView;
  v22 = *(void **)&v1[OBJC_IVAR____UISliderFluidVisualElement_minimumView];
  if (v22)
  {
    v20 = v22;
    objc_msgSend(v20, sel_removeFromSuperview);
    v10 = *(id *)&v1[v21];
    *(_QWORD *)&v1[v21] = 0;
LABEL_18:

    goto LABEL_19;
  }
LABEL_20:
  v26 = (void *)MEMORY[0x186DCA138](v2);
  if (v26)
  {
    v27 = v26;
    v28 = objc_msgSend(v26, sel__sliderConfiguration);

    if (v28)
    {
      objc_opt_self();
      v29 = (void *)swift_dynamicCastObjCClass();
      if (v29)
      {
        v30 = objc_msgSend(v29, sel_maximumValueView);
        swift_unknownObjectRelease();
        if (v30)
        {
          v31 = OBJC_IVAR____UISliderFluidVisualElement_maximumView;
          v32 = *(void **)&v1[OBJC_IVAR____UISliderFluidVisualElement_maximumView];
          if (v32)
          {
            sub_1851F9080(0, (unint64_t *)&qword_1EDD82CE0);
            v52 = v30;
            v33 = v32;
            v34 = sub_186507A44();

            v35 = v52;
            if ((v34 & 1) != 0)
            {
LABEL_39:

              return;
            }
            v36 = *(void **)&v1[v31];
          }
          else
          {
            v36 = 0;
          }
          objc_msgSend(v36, sel_removeFromSuperview);
          v51 = *(void **)&v1[v31];
          *(_QWORD *)&v1[v31] = v30;
          v53 = v30;

          objc_msgSend(v1, sel_addSubview_, v53);
LABEL_38:
          v35 = v53;
          goto LABEL_39;
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  v37 = *(void **)&v1[OBJC_IVAR____UISliderFluidVisualElement_data];
  if (v37)
  {
    v38 = objc_msgSend(v37, sel_maximumValueImage);
    if (v38)
    {
      v53 = v38;
      v39 = OBJC_IVAR____UISliderFluidVisualElement_maximumView;
      v40 = *(void **)&v1[OBJC_IVAR____UISliderFluidVisualElement_maximumView];
      if (v40)
      {
        objc_opt_self();
        v41 = swift_dynamicCastObjCClass();
        if (v41)
        {
          v42 = (void *)v41;
          v43 = v40;
          objc_msgSend(v42, sel_setImage_, v53);

          goto LABEL_38;
        }
      }
      objc_msgSend(v40, sel_removeFromSuperview);
      v47 = objc_msgSend(objc_allocWithZone((Class)UIImageView), sel_initWithImage_, v53);
      v48 = *(void **)&v1[v39];
      *(_QWORD *)&v1[v39] = v47;

      v49 = *(void **)&v1[v39];
      if (v49)
      {
        v46 = v49;
        objc_msgSend(v1, sel_addSubview_, v46);
        goto LABEL_37;
      }
      goto LABEL_46;
    }
  }
  v44 = OBJC_IVAR____UISliderFluidVisualElement_maximumView;
  v45 = *(void **)&v1[OBJC_IVAR____UISliderFluidVisualElement_maximumView];
  if (v45)
  {
    v46 = v45;
    objc_msgSend(v46, sel_removeFromSuperview);
    v53 = *(id *)&v1[v44];
    *(_QWORD *)&v1[v44] = 0;
LABEL_37:

    goto LABEL_38;
  }
}

void sub_1855CC6A4()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  unsigned int v4;
  double v5;
  id v6;

  v1 = *(void **)&v0[OBJC_IVAR____UISliderFluidVisualElement_data];
  if (v1)
  {
    v6 = v1;
    if (objc_msgSend(v6, sel_isEnabled))
      v2 = objc_msgSend(v6, sel_isUserInteractionEnabled);
    else
      v2 = 0;
    objc_msgSend(*(id *)&v0[OBJC_IVAR____UISliderFluidVisualElement_fluidInteraction], sel_setUserInteractionEnabled_, v2);
    v3 = *(void **)&v0[OBJC_IVAR____UISliderFluidVisualElement_expansionGesture];
    if (v3)
      objc_msgSend(v3, sel_setEnabled_, v2);
    v4 = objc_msgSend(v6, sel_isEnabled);
    v5 = 0.5;
    if (v4)
      v5 = 1.0;
    objc_msgSend(v0, sel_setAlpha_, v5);

  }
}

id sub_1855CC790(uint64_t a1, double a2, double a3)
{
  void *v3;
  id v7;
  char *v8;
  id v9;
  char v10;
  objc_super v12;

  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for _UISliderFluidVisualElement();
  v7 = objc_msgSendSuper2(&v12, sel_hitTest_withEvent_, a1, a2, a3);
  if (v7)
  {
    sub_1851F9080(0, (unint64_t *)&qword_1EDD82CE0);
    v8 = v3;
    v9 = v7;
    v10 = sub_186507A44();

    if ((v10 & 1) != 0)
    {
      v7 = (id)MEMORY[0x186DCA138](&v8[OBJC_IVAR____UISliderFluidVisualElement_slider]);

    }
  }
  return v7;
}

id sub_1855CC8D4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _UISliderFluidVisualElement();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for _UISliderFluidVisualElement()
{
  return objc_opt_self();
}

BOOL sub_1855CC9FC(CGFloat a1, double a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MaxX;
  CGRect v21;
  CGRect v22;

  v5 = &v2[OBJC_IVAR____UISliderFluidVisualElement_slider];
  v6 = MEMORY[0x186DCA138](&v2[OBJC_IVAR____UISliderFluidVisualElement_slider]);
  if (!v6)
    return 1;
  v7 = (void *)v6;
  v8 = *(void **)&v2[OBJC_IVAR____UISliderFluidVisualElement_data];
  if (!v8)
    goto LABEL_16;
  v9 = v8;
  if ((objc_msgSend(v9, sel_isFluidTrackHidden) & 1) == 0)
  {

    return 1;
  }
  v10 = (void *)MEMORY[0x186DCA138](v5);
  v11 = v10;
  if (v10)
  {
    v12 = objc_msgSend(v10, sel__sliderConfiguration);

    if (v12)
    {
      objc_opt_self();
      v11 = (void *)swift_dynamicCastObjCClass();
      if (!v11)
        swift_unknownObjectRelease();
    }
    else
    {
      v11 = 0;
    }
  }
  v13 = objc_msgSend(v11, sel_delegate);

  if (!v13)
  {
LABEL_14:
    objc_msgSend(v2, sel_bounds);
    objc_msgSend(v7, sel_trackRectForBounds_);
    x = v21.origin.x;
    y = v21.origin.y;
    width = v21.size.width;
    height = v21.size.height;
    if (CGRectGetMinX(v21) <= a1)
    {
      v22.origin.x = x;
      v22.origin.y = y;
      v22.size.width = width;
      v22.size.height = height;
      MaxX = CGRectGetMaxX(v22);

      return MaxX < a1;
    }

LABEL_16:
    return 1;
  }
  if ((objc_msgSend(v13, sel_respondsToSelector_, sel__slider_shouldBeginDragAtPoint_) & 1) == 0)
  {
    swift_unknownObjectRelease();
    goto LABEL_14;
  }
  v14 = objc_msgSend(v13, sel__slider_shouldBeginDragAtPoint_, v7, a1, a2);
  swift_unknownObjectRelease();

  return (BOOL)v14;
}

void sub_1855CCD6C(char a1, float a2)
{
  uint64_t v2;
  void *v5;
  void *v6;
  float v7;
  float v8;
  void *v9;
  float v10;
  float v11;
  float v12;
  id v13;

  v5 = (void *)MEMORY[0x186DCA138](v2 + OBJC_IVAR____UISliderFluidVisualElement_slider);
  if (!v5 || (v6 = v5, objc_msgSend(v5, sel_value), v8 = v7, v6, v8 != a2))
  {
    v9 = *(void **)(v2 + OBJC_IVAR____UISliderFluidVisualElement_data);
    if (v9)
    {
      v13 = v9;
      objc_msgSend(v13, sel_minimumValue);
      v11 = v10;
      objc_msgSend(v13, sel_maximumValue);
      sub_1855C967C(a1 & 1, a2, v11, v12);

    }
  }
}

void sub_1855CCE90()
{
  char *v0;
  void *v1;
  id v2;
  float v3;
  float v4;
  float v5;
  float v6;
  float v7;
  float v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  char *v13;
  char isEscapingClosureAtFileLocation;
  _QWORD v15[6];

  v1 = *(void **)&v0[OBJC_IVAR____UISliderFluidVisualElement_data];
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v2, sel_value);
    v4 = v3;
    objc_msgSend(v2, sel_minimumValue);
    v6 = v5;
    objc_msgSend(v2, sel_maximumValue);
    v8 = (float)(v4 - v6) / (float)(v7 - v6);
    v9 = (void *)objc_opt_self();
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v0;
    *(float *)(v10 + 24) = v8;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = sub_1855CE1FC;
    *(_QWORD *)(v11 + 24) = v10;
    v15[4] = sub_1855A6A1C;
    v15[5] = v11;
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 1107296256;
    v15[2] = sub_1855D8DF4;
    v15[3] = &block_descriptor_22;
    v12 = _Block_copy(v15);
    v13 = v0;
    swift_retain();
    swift_release();
    objc_msgSend(v9, sel_performWithoutAnimation_, v12);
    _Block_release(v12);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();

    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
      __break(1u);
  }
}

double sub_1855CD0E0(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  char *v4;
  void *v9;
  double v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  unsigned int v18;
  double v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  unsigned int v29;
  double v30;
  CGRect v32;

  v9 = *(void **)&v4[OBJC_IVAR____UISliderFluidVisualElement_minimumView];
  v10 = a1;
  if (v9)
  {
    objc_opt_self();
    v11 = (void *)swift_dynamicCastObjCClass();
    v12 = v9;
    if (v11 && (v13 = objc_msgSend(v11, sel_image)) != 0)
    {
      v14 = v13;
      objc_msgSend(v13, sel_size);
      v16 = v15;

    }
    else
    {
      objc_msgSend(v12, sel_bounds);
      v16 = v17;
    }
    v18 = objc_msgSend(v4, sel__shouldReverseLayoutDirection);

    v19 = -0.0;
    if (!v18)
      v19 = v16 + 11.0;
    v10 = v19 + a1;
  }
  v20 = *(void **)&v4[OBJC_IVAR____UISliderFluidVisualElement_maximumView];
  if (v20)
  {
    objc_opt_self();
    v21 = (void *)swift_dynamicCastObjCClass();
    v22 = v20;
    if (v21 && (v23 = objc_msgSend(v21, sel_image)) != 0)
    {
      v24 = v23;
      objc_msgSend(v23, sel_size);
      v26 = v25;

    }
    else
    {
      objc_msgSend(v22, sel_bounds);
      v26 = v27;
    }
    v28 = v26 + 11.0;
    v29 = objc_msgSend(v4, sel__shouldReverseLayoutDirection);

    v30 = -0.0;
    if (v29)
      v30 = v28;
    v10 = v10 + v30;
  }
  v32.origin.x = a1;
  v32.origin.y = a2;
  v32.size.width = a3;
  v32.size.height = a4;
  CGRectGetHeight(v32);
  return v10;
}

void sub_1855CD354()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  unsigned int v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  char v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  char v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  unsigned __int8 *v25;
  char isEscapingClosureAtFileLocation;
  _QWORD v27[6];

  v1 = v0;
  v2 = (void *)MEMORY[0x186DCA138](&v0[OBJC_IVAR____UISliderFluidVisualElement_slider]);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel__sliderConfiguration);

    if (v4)
    {
      objc_opt_self();
      v5 = (void *)swift_dynamicCastObjCClass();
      if (!v5)
      {
LABEL_21:
        swift_unknownObjectRelease();
        return;
      }
      v6 = v5;
      v7 = objc_msgSend(v5, sel_disableAllSliderVisuals);
      if (v7 == v1[OBJC_IVAR____UISliderFluidVisualElement_usingSliderStyling])
        goto LABEL_18;
      v8 = objc_msgSend(v6, sel_minimumTrackEffect);

      if ((v8 != 0) == (*(_QWORD *)&v1[OBJC_IVAR____UISliderFluidVisualElement_minimumTrackEffectView] == 0))
        goto LABEL_18;
      v9 = objc_msgSend(v6, sel_maximumTrackEffect);

      if ((v9 != 0) == (*(_QWORD *)&v1[OBJC_IVAR____UISliderFluidVisualElement_maximumTrackEffectView] == 0))
        goto LABEL_18;
      v10 = objc_msgSend(v6, sel_minimumValueView);
      v11 = *(void **)&v1[OBJC_IVAR____UISliderFluidVisualElement_minimumView];
      if (v10)
      {
        v12 = v10;
        if (!v11)
          goto LABEL_16;
        sub_1851F9080(0, (unint64_t *)&qword_1EDD82CE0);
        v13 = v11;
        v14 = v12;
        v15 = sub_186507A44();

        if ((v15 & 1) == 0)
        {
LABEL_18:
          v21 = (void *)objc_opt_self();
          v22 = swift_allocObject();
          *(_QWORD *)(v22 + 16) = v1;
          v23 = swift_allocObject();
          *(_QWORD *)(v23 + 16) = sub_1855CE1C0;
          *(_QWORD *)(v23 + 24) = v22;
          v27[4] = sub_1855A65EC;
          v27[5] = v23;
          v27[0] = MEMORY[0x1E0C809B0];
          v27[1] = 1107296256;
          v27[2] = sub_1855D8DF4;
          v27[3] = &block_descriptor_12_1;
          v24 = _Block_copy(v27);
          v25 = v1;
          swift_retain();
          swift_release();
          objc_msgSend(v21, sel_performWithoutAnimation_, v24);
          swift_unknownObjectRelease();
          _Block_release(v24);
          isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
          swift_release();
          swift_release();
          if ((isEscapingClosureAtFileLocation & 1) != 0)
            __break(1u);
          return;
        }
      }
      else if (v11)
      {
        goto LABEL_18;
      }
      v16 = objc_msgSend(v6, sel_maximumValueView);
      v17 = *(void **)&v1[OBJC_IVAR____UISliderFluidVisualElement_maximumView];
      if (!v16)
      {
        if (v17)
          goto LABEL_18;
        goto LABEL_20;
      }
      v12 = v16;
      if (v17)
      {
        sub_1851F9080(0, (unint64_t *)&qword_1EDD82CE0);
        v18 = v17;
        v19 = v12;
        v20 = sub_186507A44();

        if ((v20 & 1) == 0)
          goto LABEL_18;
LABEL_20:
        sub_1855CB8B0();
        sub_1855CC1E4();
        sub_1855CB320(0);
        sub_1855CAE40();
        goto LABEL_21;
      }
LABEL_16:

      goto LABEL_18;
    }
  }
}

void sub_1855CD6E4()
{
  sub_1855CB8B0();
  sub_1855CC1E4();
  sub_1855CB320(0);
  sub_1855CAE40();
}

CGFloat sub_1855CD748(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  char *v4;
  void *v5;
  void *v10;
  id v11;
  id v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  CGRect v18;
  CGRect v19;

  v5 = *(void **)&v4[OBJC_IVAR____UISliderFluidVisualElement_minimumView];
  if (!v5)
    return 0.0;
  objc_opt_self();
  v10 = (void *)swift_dynamicCastObjCClass();
  v11 = v5;
  if (v10 && (v12 = objc_msgSend(v10, sel_image)) != 0)
  {
    v13 = v12;
    objc_msgSend(v12, sel_size);
    v15 = v14;

  }
  else
  {
    objc_msgSend(v11, sel_bounds);
    v15 = v16;
  }
  if (objc_msgSend(v4, sel__shouldReverseLayoutDirection))
  {
    v18.origin.x = a1;
    v18.origin.y = a2;
    v18.size.width = a3;
    v18.size.height = a4;
    a1 = CGRectGetMaxX(v18) - v15;
  }
  v19.origin.x = a1;
  v19.origin.y = a2;
  v19.size.width = a3;
  v19.size.height = a4;
  CGRectGetMidY(v19);

  return a1;
}

CGFloat sub_1855CD89C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  char *v4;
  void *v5;
  void *v10;
  id v11;
  id v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  CGRect v18;
  CGRect v19;

  v5 = *(void **)&v4[OBJC_IVAR____UISliderFluidVisualElement_maximumView];
  if (!v5)
    return 0.0;
  objc_opt_self();
  v10 = (void *)swift_dynamicCastObjCClass();
  v11 = v5;
  if (v10 && (v12 = objc_msgSend(v10, sel_image)) != 0)
  {
    v13 = v12;
    objc_msgSend(v12, sel_size);
    v15 = v14;

  }
  else
  {
    objc_msgSend(v11, sel_bounds);
    v15 = v16;
  }
  if ((objc_msgSend(v4, sel__shouldReverseLayoutDirection) & 1) == 0)
  {
    v18.origin.x = a1;
    v18.origin.y = a2;
    v18.size.width = a3;
    v18.size.height = a4;
    a1 = CGRectGetMaxX(v18) - v15;
  }
  v19.origin.x = a1;
  v19.origin.y = a2;
  v19.size.width = a3;
  v19.size.height = a4;
  CGRectGetMidY(v19);

  return a1;
}

double sub_1855CD9F0(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, double (*a7)(double, double, double, double))
{
  id v12;
  double v13;

  v12 = a1;
  v13 = a7(a2, a3, a4, a5);

  return v13;
}

id sub_1855CDAB8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *(void **)(a1 + *a3);
  if (v3)
  {
    objc_opt_self();
    v4 = (void *)swift_dynamicCastObjCClass();
    if (v4)
      v5 = v3;
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

void sub_1855CDB0C(double a1)
{
  char *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  double v5;
  CGFloat v6;
  double v7;
  double v8;
  double v9;
  CGFloat v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  CGFloat v16;
  double v17;
  double v18;
  double v19;
  CGFloat v20;
  unsigned __int8 v21;
  double Width;
  double v23;
  unsigned int v24;
  char v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  double v30;
  id v31;
  id v33;
  _QWORD aBlock[6];
  CGRect v35;
  CGRect v36;
  CGRect v37;

  v2 = *(void **)&v1[OBJC_IVAR____UISliderFluidVisualElement_data];
  if (v2)
  {
    v3 = OBJC_IVAR____UISliderFluidVisualElement_minimumTrackView;
    v4 = *(void **)&v1[OBJC_IVAR____UISliderFluidVisualElement_minimumTrackView];
    v33 = v2;
    objc_msgSend(v4, sel_bounds);
    v6 = v5;
    v8 = v7;
    v10 = v9;
    v12 = v11;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____UISliderFluidVisualElement_clipView], sel_bounds);
    v14 = v13;
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v21 = objc_msgSend(v1, sel__shouldReverseLayoutDirection);
    if (objc_msgSend(v33, sel_isMinimumTrackVisible))
    {
      v35.origin.x = v14;
      v35.origin.y = v16;
      v35.size.width = v18;
      v35.size.height = v20;
      Width = CGRectGetWidth(v35);
      v36.origin.x = v6;
      v36.origin.y = v8;
      v36.size.width = v10;
      v36.size.height = v12;
      v18 = Width - CGRectGetWidth(v36);
      v14 = 0.0;
      v23 = a1;
      if ((v21 & 1) == 0)
      {
        v37.origin.x = v6;
        v37.origin.y = v8;
        v37.size.width = v10;
        v37.size.height = v12;
        v14 = CGRectGetWidth(v37);
      }
    }
    else
    {
      v8 = v16;
      v12 = v20;
      v23 = a1;
    }
    objc_msgSend(*(id *)&v1[OBJC_IVAR____UISliderFluidVisualElement_maximumTrackView], sel_setFrame_, v14, v8, v18, v12, *(_QWORD *)&a1);
    v24 = objc_msgSend(v33, sel_isMinimumTrackVisible);
    v25 = v24;
    if (v23 <= 0.0)
    {
      if (v24)
        v30 = 1.0;
      else
        v30 = 0.0;
      v31 = *(id *)&v1[v3];
      objc_msgSend(v31, sel_setAlpha_, v30);

    }
    else
    {
      v26 = (void *)objc_opt_self();
      v27 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v28 = swift_allocObject();
      *(_QWORD *)(v28 + 16) = v27;
      *(_BYTE *)(v28 + 24) = v25;
      aBlock[4] = sub_1855CE190;
      aBlock[5] = v28;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_18530A69C;
      aBlock[3] = &block_descriptor_6;
      v29 = _Block_copy(aBlock);
      swift_release();
      objc_msgSend(v26, sel_animateWithDuration_animations_, v29, v23);

      _Block_release(v29);
    }
  }
}

void sub_1855CDDA8(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  double v7;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x186DCA138](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = *(void **)(v4 + OBJC_IVAR____UISliderFluidVisualElement_minimumTrackView);
    v7 = 0.0;
    if ((a2 & 1) != 0)
      v7 = 1.0;
    objc_msgSend(v6, sel_setAlpha_, v7);

  }
}

void sub_1855CDEB8()
{
  uint64_t v0;
  void *v1;
  unsigned int v2;
  double v3;
  id v4;

  v1 = *(void **)(v0 + OBJC_IVAR____UISliderFluidVisualElement_data);
  if (v1)
  {
    v4 = v1;
    v2 = objc_msgSend(v4, sel_isFluidTrackHidden);
    v3 = 1.0;
    if (v2)
      v3 = 0.0;
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____UISliderFluidVisualElement_clipView), sel_setAlpha_, v3);

  }
}

void sub_1855CDF64()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  float v6;
  id v7;

  v1 = *(void **)(v0 + OBJC_IVAR____UISliderFluidVisualElement_fluidInteraction);
  if (v1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____UISliderFluidVisualElement_data);
    if (v2)
    {
      v3 = v1;
      v4 = v2;
      v5 = objc_msgSend(v3, sel_configuration);
      objc_msgSend(v4, sel_sliderSpeedMultiplier);
      v7 = objc_msgSend(v5, sel_copyWithVelocityMultiplier_, v6);

      objc_msgSend(v3, sel_setConfiguration_, v7);
    }
  }
}

uint64_t sub_1855CE148()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1855CE16C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1855CE190()
{
  uint64_t v0;

  sub_1855CDDA8(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_1855CE19C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1855CE1C0()
{
  sub_1855CD6E4();
}

uint64_t sub_1855CE1C8()
{
  return swift_deallocObject();
}

uint64_t sub_1855CE1D8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1855CE200()
{
  return swift_deallocObject();
}

void sub_1855CE210(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t (*v24)(char *, uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  _QWORD v40[3];
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  _QWORD aBlock[6];

  v43 = a4;
  v44 = a5;
  v45 = a3;
  v40[1] = a2;
  v6 = sub_1865072B8();
  v42 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v40[2] = v7;
  v41 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1865072E8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v40 - v13;
  v15 = sub_186507300();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v40 - v20;
  v22 = sub_1855CE9FC();
  v47 = a1;
  v48 = v6;
  v49 = v22;
  sub_186507288();
  sub_1865072F4();
  v23 = *(void (**)(char *, uint64_t))(v16 + 8);
  v23(v21, v15);
  v24 = *(uint64_t (**)(char *, uint64_t))(v9 + 88);
  LODWORD(a1) = v24(v14, v8);
  LODWORD(v6) = *MEMORY[0x1E0CE8668];
  v25 = *(void (**)(char *, uint64_t))(v9 + 8);
  v25(v14, v8);
  if ((_DWORD)a1 == (_DWORD)v6)
  {
    __break(1u);
    goto LABEL_6;
  }
  v27 = v47;
  v26 = v48;
  sub_186507288();
  sub_1865072F4();
  v23(v18, v15);
  v28 = v24(v11, v8);
  v29 = *MEMORY[0x1E0CE8660];
  v25(v11, v8);
  if (v28 == v29)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v30 = sub_186507294();
  if (v30)
  {
    v31 = (void *)v30;
    v32 = (void *)sub_1865072C4();
    v34 = v41;
    v33 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v41, v27, v26);
    v35 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    v36 = swift_allocObject();
    v38 = v43;
    v37 = v44;
    *(_QWORD *)(v36 + 16) = v43;
    *(_QWORD *)(v36 + 24) = v37;
    (*(void (**)(unint64_t, char *, uint64_t))(v33 + 32))(v36 + v35, v34, v26);
    aBlock[4] = sub_1855CEAC0;
    aBlock[5] = v36;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1855B2B2C;
    aBlock[3] = &block_descriptor_54;
    v39 = _Block_copy(aBlock);
    sub_18518D708(v38);
    swift_release();
    objc_msgSend(v46, sel_addSymbolEffect_options_animated_completion_, v31, v32, v45 & 1, v39);
    _Block_release(v39);

    return;
  }
LABEL_7:
  __break(1u);
}

void *sub_1855CE538(void *result, void (*a2)(_BYTE *), uint64_t a3, uint64_t a4)
{
  void *v6;
  unsigned __int8 v7;
  id v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_0;
  unsigned __int8 v11[16];
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  unint64_t v15;
  _BYTE v16[56];

  if (a2)
  {
    v6 = result;
    v7 = objc_msgSend(result, sel_isFinished);
    v8 = objc_msgSend(v6, sel_sender);
    v9 = sub_1865072B8();
    v14 = v9;
    v15 = sub_1855CE9FC();
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v13);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(boxed_opaque_existential_0, a4, v9);
    swift_unknownObjectWeakInit();
    v11[0] = v7;
    swift_unknownObjectWeakAssign();
    swift_unknownObjectRelease();
    sub_1851E59E0(&v13, (uint64_t)&v12);
    sub_1855CEB00((uint64_t)v11, (uint64_t)v16);
    a2(v16);
    return (void *)sub_1855CEB3C((uint64_t)v16);
  }
  return result;
}

void sub_1855CE628()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR____UISliderFluidVisualElement_data] = 0;
  v1 = OBJC_IVAR____UISliderFluidVisualElement_clipView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIView), sel_init);
  v2 = OBJC_IVAR____UISliderFluidVisualElement_minimumTrackView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIView), sel_init);
  v3 = OBJC_IVAR____UISliderFluidVisualElement_maximumTrackView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIView), sel_init);
  *(_QWORD *)&v0[OBJC_IVAR____UISliderFluidVisualElement_tickViews] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[OBJC_IVAR____UISliderFluidVisualElement_minimumTrackEffectView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____UISliderFluidVisualElement_maximumTrackEffectView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____UISliderFluidVisualElement_minimumView] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____UISliderFluidVisualElement_maximumView] = 0;
  v0[OBJC_IVAR____UISliderFluidVisualElement_usingSliderStyling] = 1;
  v0[OBJC_IVAR____UISliderFluidVisualElement_changeWithVolumeButtons] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____UISliderFluidVisualElement_fluidInteraction] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____UISliderFluidVisualElement_expansionGesture] = 0;
  v0[OBJC_IVAR____UISliderFluidVisualElement_isInteractivelyChanging] = 0;
  v0[OBJC_IVAR____UISliderFluidVisualElement_interactiveChangeEnded] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____UISliderFluidVisualElement_stretchLimit] = 0xBFF0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____UISliderFluidVisualElement_paddingAroundImage] = 0x4026000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____UISliderFluidVisualElement_defaultSliderHeight] = 0x401C000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____UISliderFluidVisualElement_defaultExpansionFactor] = 0x4003333333333333;
  *(_QWORD *)&v0[OBJC_IVAR____UISliderFluidVisualElement_disabledAlpha] = 0x3FE0000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____UISliderFluidVisualElement_fluidUpdateSource] = 0;

  sub_186507E04();
  __break(1u);
}

id sub_1855CE7F8(double *a1, double *a2, double *a3, double a4)
{
  uint64_t v4;
  void *v9;
  float v10;
  float v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  double v16;
  id v17;
  float v19;
  float v20;
  float v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v9 = *(void **)(v4 + OBJC_IVAR____UISliderFluidVisualElement_data);
  if (v9)
  {
    objc_msgSend(v9, sel_sliderSpeedMultiplier);
    v11 = v10 + -1.0;
  }
  else
  {
    v11 = 0.0;
  }
  v12 = (void *)MEMORY[0x186DCA138](v4 + OBJC_IVAR____UISliderFluidVisualElement_slider);
  if (!v12)
    return 0;
  v13 = v12;
  v14 = objc_msgSend(v12, sel__sliderConfiguration);

  if (!v14)
    return 0;
  objc_opt_self();
  v15 = (void *)swift_dynamicCastObjCClass();
  if (!v15 || fabsf(v11) > 0.01)
  {
    swift_unknownObjectRelease();
    return 0;
  }
  v20 = -1.0;
  v21 = -1.0;
  v19 = -1.0;
  *(float *)&v16 = a4;
  v17 = objc_msgSend(v15, sel_adjustPositionForTargetPosition_adjustedPosition_startPosition_endPosition_, &v21, &v20, &v19, v16);
  *a1 = v21;
  if (a2)
    *a2 = v20;
  if (a3)
    *a3 = v19;
  swift_unknownObjectRelease();
  return v17;
}

uint64_t sub_1855CE978()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1855CE9A4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_setConfiguration_, *(_QWORD *)(v0 + 24));
}

uint64_t sub_1855CE9B4()
{
  return swift_deallocObject();
}

uint64_t sub_1855CE9C4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1855CE9E8()
{
  uint64_t v0;

  return sub_1855CACFC(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_1855CE9F4(void *a1)
{
  uint64_t v1;

  sub_1855C9EE4(a1, v1);
}

unint64_t sub_1855CE9FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDD85828;
  if (!qword_1EDD85828)
  {
    v1 = sub_1865072B8();
    result = MEMORY[0x186DC9F28](MEMORY[0x1E0CE8480], v1);
    atomic_store(result, (unint64_t *)&qword_1EDD85828);
  }
  return result;
}

uint64_t sub_1855CEA44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = sub_1865072B8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  if (*(_QWORD *)(v0 + 16))
    swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 32) & ~v3), v1);
  return swift_deallocObject();
}

void *sub_1855CEAC0(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1865072B8() - 8) + 80);
  return sub_1855CE538(a1, *(void (**)(_BYTE *))(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

uint64_t sub_1855CEB00(uint64_t a1, uint64_t a2)
{
  initializeWithTake for UISymbolEffectCompletionContext(a2, a1);
  return a2;
}

uint64_t sub_1855CEB3C(uint64_t a1)
{
  destroy for UISymbolEffectCompletionContext(a1);
  return a1;
}

id sub_1855CEB70()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____UISliderFluidVisualElement_fluidInteraction);
  if (result)
    return objc_msgSend(result, sel_setValue_, *(float *)(v0 + 24));
  return result;
}

uint64_t sub_1855CEB9C()
{
  return swift_deallocObject();
}

char *_UILatencyLightView.__allocating_init(frame:configuration:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return _UILatencyLightView.init(frame:configuration:)(a1, a2, a3, a4, a5);
}

char *_UILatencyLightView.init(frame:configuration:)(uint64_t a1, double a2, double a3, double a4, double a5)
{
  void *v5;
  char v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  double v14;
  double v15;
  char v16;
  id v17;
  char *v18;
  char *v19;
  uint64_t v21;
  char v22[8];
  uint64_t v23;
  double v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  char v29;

  v10 = *(_BYTE *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(double *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(double *)(a1 + 32);
  v15 = *(double *)(a1 + 40);
  v21 = *(_QWORD *)(a1 + 48);
  v16 = *(_BYTE *)(a1 + 56);
  v17 = objc_allocWithZone((Class)type metadata accessor for _UILatencyLightView.EmitterMaskView());
  v18 = v5;
  *(_QWORD *)&v18[OBJC_IVAR____TtC5UIKit19_UILatencyLightView_emitterMaskView] = sub_1855CF358(0, a2, a3, a4, a5, (v12 + v14 + v15 + v14 + v15) * 0.5);

  v22[0] = v10;
  v23 = v11;
  v24 = v12;
  v25 = v13;
  v26 = v14;
  v27 = v15;
  v28 = v21;
  v29 = v16;
  v19 = _UISoftOutlineView.init(frame:configuration:)(v22, a2, a3, a4, a5);
  objc_msgSend(v19, sel_setMaskView_, *(_QWORD *)&v19[OBJC_IVAR____TtC5UIKit19_UILatencyLightView_emitterMaskView]);
  return v19;
}

uint64_t type metadata accessor for _UILatencyLightView.EmitterMaskView()
{
  return objc_opt_self();
}

void sub_1855CEE10()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  double v4;
  double v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for _UILatencyLightView();
  objc_msgSendSuper2(&v12, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC5UIKit19_UILatencyLightView_emitterMaskView];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);
  v2 = objc_msgSend(v1, sel_layer);
  v3 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v3, sel_cornerRadius);
  v5 = v4;

  objc_msgSend(v2, sel_setCornerRadius_, v5);
  v6 = objc_msgSend(v1, sel_layer);
  v7 = objc_msgSend(v0, sel_layer);
  v8 = objc_msgSend(v7, sel_cornerCurve);

  objc_msgSend(v6, sel_setCornerCurve_, v8);
  v9 = objc_msgSend(v1, sel_layer);
  v10 = objc_msgSend(v0, sel_layer);
  v11 = objc_msgSend(v10, sel_maskedCorners);

  objc_msgSend(v9, sel_setMaskedCorners_, v11);
}

void sub_1855CEFE4()
{
  uint64_t v0;
  uint64_t v1;
  double *v2;

  sub_185696304();
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC5UIKit19_UILatencyLightView_emitterMaskView);
  v2 = (double *)(v0 + OBJC_IVAR____TtC5UIKit18_UISoftOutlineView_configuration);
  swift_beginAccess();
  *(double *)(v1
            + OBJC_IVAR____TtCC5UIKit19_UILatencyLightViewP33_EC16FCD6D726BF32B6086EE652C76F4615EmitterMaskView_radius) = (v2[2] + v2[4] + v2[5] + v2[4] + v2[5]) * 0.5;
  sub_1855CFCBC();
}

void sub_1855CF068()
{
  uint64_t v0;

}

id _UILatencyLightView.__deallocating_deinit(uint64_t a1)
{
  return sub_1855C0730(a1, type metadata accessor for _UILatencyLightView);
}

void sub_1855CF094(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  _QWORD v13[3];
  uint64_t v14;

  v2 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC5UIKit19_UILatencyLightView_emitterMaskView)
                + OBJC_IVAR____TtCC5UIKit19_UILatencyLightViewP33_EC16FCD6D726BF32B6086EE652C76F4615EmitterMaskView_emitterLayer);
  sub_1855D008C(a1, (uint64_t)v13);
  v3 = v14;
  if (v14)
  {
    v4 = __swift_project_boxed_opaque_existential_0Tm(v13, v14);
    v5 = *(_QWORD *)(v3 - 8);
    v6 = MEMORY[0x1E0C80A78](v4);
    v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v5 + 16))(v8, v6);
    v9 = v2;
    v10 = sub_186507FB4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
  }
  else
  {
    v11 = v2;
    v10 = 0;
  }
  v12 = (void *)sub_1865074D4();
  objc_msgSend(v2, sel_setValue_forKeyPath_, v10, v12);

  swift_unknownObjectRelease();
}

Swift::Void __swiftcall _UILatencyLightView._setDuration(_:)(Swift::Float a1)
{
  sub_1855CF200(a1);
}

Swift::Void __swiftcall _UILatencyLightView._setParticleBirthRate(_:)(Swift::Float a1)
{
  sub_1855CF200(a1);
}

uint64_t sub_1855CF200(float a1)
{
  id v2;
  double v3;
  id v4;
  _QWORD v6[4];

  v2 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
  *(float *)&v3 = a1;
  v4 = objc_msgSend(v2, sel_initWithFloat_, v3);
  v6[3] = sub_1851F9080(0, (unint64_t *)&qword_1ECD75368);
  v6[0] = v4;
  sub_1855CF094((uint64_t)v6);
  return sub_1855BDE94((uint64_t)v6);
}

Swift::Void __swiftcall _UILatencyLightView._setParticleLifetime(_:)(Swift::Float a1)
{
  sub_1855CF200(a1);
}

Swift::Void __swiftcall _UILatencyLightView._setParticleScaleOverTime(_:)(Swift::OpaquePointer a1)
{
  sub_1855CF2F0((uint64_t)a1._rawValue);
}

Swift::Void __swiftcall _UILatencyLightView._setParticleOpacityOverTime(_:)(Swift::OpaquePointer a1)
{
  sub_1855CF2F0((uint64_t)a1._rawValue);
}

uint64_t sub_1855CF2F0(uint64_t a1)
{
  _QWORD v3[4];

  v3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD858F8);
  v3[0] = a1;
  swift_bridgeObjectRetain();
  sub_1855CF094((uint64_t)v3);
  return sub_1855BDE94((uint64_t)v3);
}

char *sub_1855CF358(char a1, double a2, double a3, double a4, double a5, double a6)
{
  char *v6;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  char *v20;
  id v21;
  void *v22;
  void *v23;
  double v24;
  double v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void *v51;
  id v52;
  id v53;
  void *v54;
  void *v55;
  double v56;
  id v57;
  objc_super v59;

  v13 = OBJC_IVAR____TtCC5UIKit19_UILatencyLightViewP33_EC16FCD6D726BF32B6086EE652C76F4615EmitterMaskView_emitterLayer;
  v14 = objc_allocWithZone(MEMORY[0x1E0CD2770]);
  v15 = v6;
  *(_QWORD *)&v6[v13] = objc_msgSend(v14, sel_init);
  v16 = OBJC_IVAR____TtCC5UIKit19_UILatencyLightViewP33_EC16FCD6D726BF32B6086EE652C76F4615EmitterMaskView_emitterCell;
  *(_QWORD *)&v15[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2768]), sel_init);
  *(double *)&v15[OBJC_IVAR____TtCC5UIKit19_UILatencyLightViewP33_EC16FCD6D726BF32B6086EE652C76F4615EmitterMaskView_radius] = a6;
  v15[OBJC_IVAR____TtCC5UIKit19_UILatencyLightViewP33_EC16FCD6D726BF32B6086EE652C76F4615EmitterMaskView_reverse] = a1;

  v59.receiver = v15;
  v59.super_class = (Class)type metadata accessor for _UILatencyLightView.EmitterMaskView();
  v17 = (char *)objc_msgSendSuper2(&v59, sel_initWithFrame_, a2, a3, a4, a5);
  v18 = OBJC_IVAR____TtCC5UIKit19_UILatencyLightViewP33_EC16FCD6D726BF32B6086EE652C76F4615EmitterMaskView_emitterCell;
  v19 = *(void **)&v17[OBJC_IVAR____TtCC5UIKit19_UILatencyLightViewP33_EC16FCD6D726BF32B6086EE652C76F4615EmitterMaskView_emitterCell];
  v20 = v17;
  v21 = v19;
  v22 = (void *)sub_1865074D4();
  objc_msgSend(v21, sel_setName_, v22);

  v23 = *(void **)&v17[v18];
  LODWORD(v24) = 1123024896;
  objc_msgSend(v23, sel_setBirthRate_, v24);
  LODWORD(v25) = 1.0;
  objc_msgSend(v23, sel_setLifetime_, v25);
  sub_1855CFCBC();
  sub_1865074F8();
  v26 = objc_allocWithZone(MEMORY[0x1E0CD2760]);
  v27 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  v28 = objc_msgSend(v26, sel_initWithType_, v27);

  v29 = (void *)sub_1865074D4();
  objc_msgSend(v28, sel_setName_, v29);

  v30 = (void *)sub_1865074D4();
  v31 = (void *)sub_1865074D4();
  objc_msgSend(v28, sel_setValue_forKey_, v30, v31);

  v32 = (void *)sub_18650763C();
  v33 = (void *)sub_1865074D4();
  objc_msgSend(v28, sel_setValue_forKey_, v32, v33);

  sub_1865074F8();
  v34 = objc_allocWithZone(MEMORY[0x1E0CD2760]);
  v35 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  v36 = objc_msgSend(v34, sel_initWithType_, v35);

  v37 = (void *)sub_1865074D4();
  objc_msgSend(v36, sel_setName_, v37);

  v38 = (void *)sub_1865074D4();
  v39 = (void *)sub_1865074D4();
  objc_msgSend(v36, sel_setValue_forKey_, v38, v39);

  v40 = (void *)sub_18650763C();
  v41 = (void *)sub_1865074D4();
  objc_msgSend(v36, sel_setValue_forKey_, v40, v41);

  v42 = *(void **)&v17[v18];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A80);
  v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_186669F60;
  *(_QWORD *)(v43 + 32) = v28;
  *(_QWORD *)(v43 + 40) = v36;
  sub_18650766C();
  sub_1851F9080(0, &qword_1EDD85920);
  v44 = v42;
  v45 = v28;
  v46 = v36;
  v47 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  objc_msgSend(v44, sel_setEmitterBehaviors_, v47);

  v48 = OBJC_IVAR____TtCC5UIKit19_UILatencyLightViewP33_EC16FCD6D726BF32B6086EE652C76F4615EmitterMaskView_emitterLayer;
  v49 = *(void **)&v20[OBJC_IVAR____TtCC5UIKit19_UILatencyLightViewP33_EC16FCD6D726BF32B6086EE652C76F4615EmitterMaskView_emitterLayer];
  v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = xmmword_1866691F0;
  v51 = *(void **)&v17[v18];
  *(_QWORD *)(v50 + 32) = v51;
  sub_18650766C();
  sub_1851F9080(0, &qword_1EDD85928);
  v52 = v49;
  v53 = v51;
  v54 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  objc_msgSend(v52, sel_setEmitterCells_, v54);

  v55 = *(void **)&v20[v48];
  objc_msgSend(v55, sel_setEmitterMode_, *MEMORY[0x1E0CD2B40]);
  objc_msgSend(v55, sel_setEmitterShape_, *MEMORY[0x1E0CD2B20]);
  LODWORD(v56) = 2.5;
  objc_msgSend(v55, sel_setEmitterDuration_, v56);
  v57 = objc_msgSend(v20, sel_layer);
  objc_msgSend(v57, sel_addSublayer_, v55);

  sub_185697E28(v20);
  swift_unknownObjectRelease();

  return v20;
}

uint64_t type metadata accessor for _UILatencyLightView()
{
  return objc_opt_self();
}

void sub_1855CFA40()
{
  char *v0;
  void *v1;
  double MidX;
  double v3;
  double v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat tx;
  CGFloat ty;
  id v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  id v19;
  double v20;
  CGFloat v21;
  id v22;
  id v23;
  CGPathRef v24;
  __int128 v25;
  __int128 v26;
  objc_super v27;
  CGAffineTransform v28;
  char v29;
  CGRect v30;
  CGRect v31;

  v27.receiver = v0;
  v27.super_class = (Class)type metadata accessor for _UILatencyLightView.EmitterMaskView();
  objc_msgSendSuper2(&v27, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtCC5UIKit19_UILatencyLightViewP33_EC16FCD6D726BF32B6086EE652C76F4615EmitterMaskView_emitterLayer];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setBounds_);
  objc_msgSend(v0, sel_bounds);
  MidX = CGRectGetMidX(v30);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setPosition_, MidX, CGRectGetMidY(v31));
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v1, sel_setEmitterSize_, v3, v4);
  objc_msgSend(v1, sel_position);
  objc_msgSend(v1, sel_setEmitterPosition_);
  objc_msgSend(v0, sel_bounds);
  v6 = 1.0 / v5;
  objc_msgSend(v0, sel_bounds);
  CGAffineTransformMakeScale(&v28, v6, 1.0 / v7);
  v25 = *(_OWORD *)&v28.c;
  v26 = *(_OWORD *)&v28.a;
  tx = v28.tx;
  ty = v28.ty;
  v10 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v10, sel_bounds);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;

  v19 = objc_msgSend(v0, sel_layer);
  objc_msgSend(v19, sel_cornerRadius);
  v21 = v20;

  v22 = objc_msgSend(v0, sel_layer);
  v23 = objc_msgSend(v22, sel_cornerCurve);

  *(_OWORD *)&v28.a = v26;
  *(_OWORD *)&v28.c = v25;
  v28.tx = tx;
  v28.ty = ty;
  v29 = 0;
  v24 = sub_1856B5EB8(v12, v14, v16, v18, v21, (uint64_t)v23, (uint64_t)&v28);

  objc_msgSend(v1, sel_setEmitterPath_, v24);
}

void sub_1855CFCBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  CGColorSpace *DeviceGray;
  const __CFArray *v4;
  CGGradientRef v5;
  double v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  CGGradient *v11;
  id v12;
  void *v13;
  id v14;
  _QWORD v15[6];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A80);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_186669F60;
  *(_QWORD *)(v2 + 32) = CGColorCreateGenericGray(1.0, 0.3);
  *(_QWORD *)(v2 + 40) = CGColorCreateGenericGray(1.0, 0.0);
  v15[0] = v2;
  sub_18650766C();
  DeviceGray = CGColorSpaceCreateDeviceGray();
  type metadata accessor for CGColor(0);
  v4 = (const __CFArray *)sub_18650763C();
  swift_bridgeObjectRelease();
  v5 = CGGradientCreateWithColors(DeviceGray, v4, 0);

  if (v5)
  {
    v6 = fmax(*(double *)(v1+ OBJC_IVAR____TtCC5UIKit19_UILatencyLightViewP33_EC16FCD6D726BF32B6086EE652C76F4615EmitterMaskView_radius), 4.0);
    v7 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), sel_initWithSize_, v6 + v6, v6 + v6, v15[0]);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v5;
    *(double *)(v8 + 24) = v6;
    *(double *)(v8 + 32) = v6;
    *(double *)(v8 + 40) = v6;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = sub_1855D0064;
    *(_QWORD *)(v9 + 24) = v8;
    v15[4] = sub_1855D0084;
    v15[5] = v9;
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 1107296256;
    v15[2] = sub_185665194;
    v15[3] = &block_descriptor_7;
    v10 = _Block_copy(v15);
    v11 = v5;
    swift_retain();
    swift_release();
    v12 = objc_msgSend(v7, sel_imageWithActions_, v10);

    _Block_release(v10);
    LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v7 & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      v13 = *(void **)(v1
                     + OBJC_IVAR____TtCC5UIKit19_UILatencyLightViewP33_EC16FCD6D726BF32B6086EE652C76F4615EmitterMaskView_emitterCell);
      v14 = objc_msgSend(v12, sel_CGImage);
      objc_msgSend(v13, sel_setContents_, v14);
      swift_release();

    }
  }
}

void sub_1855CFF3C(void *a1, CGGradient *a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  CGContext *v9;
  CGPoint v10;
  CGPoint v11;

  v9 = (CGContext *)objc_msgSend(a1, sel_CGContext);
  v10.x = a3;
  v10.y = a4;
  v11.x = a3;
  v11.y = a4;
  CGContextDrawRadialGradient(v9, a2, v10, 0.0, v11, a5, 0);

}

id sub_1855CFFE8()
{
  return sub_1855C0730(0, type metadata accessor for _UILatencyLightView.EmitterMaskView);
}

id sub_1855D0030()
{
  void *v0;

  return objc_msgSend(v0, sel_setNeedsLayout);
}

uint64_t sub_1855D0040()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1855D0064(void *a1)
{
  uint64_t v1;

  sub_1855CFF3C(a1, *(CGGradient **)(v1 + 16), *(CGFloat *)(v1 + 24), *(CGFloat *)(v1 + 32), *(CGFloat *)(v1 + 40));
}

uint64_t sub_1855D0074()
{
  return swift_deallocObject();
}

uint64_t sub_1855D0084(uint64_t a1)
{
  uint64_t v1;

  return sub_185665174(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1855D008C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void __swiftcall _UIIntelligenceEdgeLightEffect.init(coder:)(_UIIntelligenceEdgeLightEffect_optional *__return_ptr retstr, NSCoder coder)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCoder_, coder.super.isa);

}

uint64_t _UIIntelligenceEdgeLightEffect.init(coder:)(void *a1)
{
  uint64_t v1;

  type metadata accessor for _UIIntelligenceEdgeLightEffect(v1);
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t type metadata accessor for _UIIntelligenceEdgeLightEffect(uint64_t a1)
{
  return sub_1851F9080(a1, &qword_1EDD85A80);
}

void _UIIntelligenceEdgeLightEffect._update(_:for:usage:)(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1855D0894(a1, a3);
}

uint64_t _UIIntelligenceEdgeLightEffect._expectedUsage()()
{
  return 2;
}

void __swiftcall _UIIntelligenceEdgeLightEffect.init()(_UIIntelligenceEdgeLightEffect *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void _UIIntelligenceEdgeLightEffect.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id static UIVisualEffect.intelligenceEdgeLight(source:radius:region:)(uint64_t a1, uint64_t a2, double a3)
{
  return objc_msgSend(objc_allocWithZone((Class)_UIIntelligenceEdgeLightEffect), sel_initWithLightSource_radius_region_, a1, a2, a3);
}

id static UIVisualEffect.intelligenceEdgeLight(source:radius:region:activationDirection:deactivationDirection:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  id v7;

  v7 = objc_msgSend(objc_allocWithZone((Class)_UIIntelligenceEdgeLightEffect), sel_initWithLightSource_radius_region_, a1, a2, a5);
  objc_msgSend(v7, sel_setActivationTransitionDirection_, a3);
  objc_msgSend(v7, sel_setDeactivationTransitionDirection_, a4);
  return v7;
}

id sub_1855D0494(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  char *v7;
  char v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  char *v22;
  char *v23;
  objc_super v27;
  uint64_t aBlock;
  uint64_t v29;
  id (*v30)(uint64_t, void *);
  void *v31;
  void *v32;
  uint64_t v33;

  v12 = a1 & 1;
  v13 = &v7[qword_1EDD8A948];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0x3FC0000040000000;
  v32 = sub_1855D0C84;
  v33 = v14;
  v15 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v29 = 1107296256;
  v30 = sub_1852E82F4;
  v31 = &block_descriptor_8;
  v16 = _Block_copy(&aBlock);
  v17 = v7;
  swift_release();
  v18 = objc_msgSend(a2, sel_descriptorWithModifier_, v16);
  _Block_release(v16);
  v19 = swift_allocObject();
  *(_DWORD *)(v19 + 16) = 0x40000000;
  v32 = sub_1855D0C9C;
  v33 = v19;
  aBlock = v15;
  v29 = 1107296256;
  v30 = sub_1852E82F4;
  v31 = &block_descriptor_17_0;
  v20 = _Block_copy(&aBlock);
  swift_release();
  v21 = objc_msgSend(v18, sel_descriptorWithModifier_, v20);
  _Block_release(v20);

  *(_QWORD *)&v17[qword_1EDD8A920] = v21;
  v17[qword_1EDD8A928] = v12;
  *(double *)&v17[qword_1EDD8A930] = a7;
  v22 = &v17[qword_1EDD8A938];
  *(_QWORD *)v22 = a3;
  *((_QWORD *)v22 + 1) = a4;
  v23 = &v17[qword_1EDD8A940];
  *(_QWORD *)v23 = a5;
  *((_QWORD *)v23 + 1) = a6;
  swift_retain();

  v27.receiver = v17;
  v27.super_class = (Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85A98);
  return objc_msgSendSuper2(&v27, sel_init);
}

id sub_1855D0694(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  char *v7;
  char v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  char *v22;
  char *v23;
  objc_super v27;
  uint64_t aBlock;
  uint64_t v29;
  id (*v30)(uint64_t, void *);
  void *v31;
  void *v32;
  uint64_t v33;

  v12 = a1 & 1;
  v13 = &v7[qword_1EDD8A948];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0x3FC0000040000000;
  v32 = sub_1855D0CE4;
  v33 = v14;
  v15 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v29 = 1107296256;
  v30 = sub_1852E82F4;
  v31 = &block_descriptor_24_1;
  v16 = _Block_copy(&aBlock);
  v17 = v7;
  swift_release();
  v18 = objc_msgSend(a2, sel_descriptorWithModifier_, v16);
  _Block_release(v16);
  v19 = swift_allocObject();
  *(_DWORD *)(v19 + 16) = 0x40000000;
  v32 = sub_1855D0CC4;
  v33 = v19;
  aBlock = v15;
  v29 = 1107296256;
  v30 = sub_1852E82F4;
  v31 = &block_descriptor_31;
  v20 = _Block_copy(&aBlock);
  swift_release();
  v21 = objc_msgSend(v18, sel_descriptorWithModifier_, v20);
  _Block_release(v20);

  *(_QWORD *)&v17[qword_1EDD8A920] = v21;
  v17[qword_1EDD8A928] = v12;
  *(double *)&v17[qword_1EDD8A930] = a7;
  v22 = &v17[qword_1EDD8A938];
  *(_QWORD *)v22 = a3;
  *((_QWORD *)v22 + 1) = a4;
  v23 = &v17[qword_1EDD8A940];
  *(_QWORD *)v23 = a5;
  *((_QWORD *)v23 + 1) = a6;
  swift_retain();

  v27.receiver = v17;
  v27.super_class = (Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85A90);
  return objc_msgSendSuper2(&v27, sel_init);
}

void sub_1855D0894(id a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  unint64_t v5;
  void *v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;

  if (a2 != 2)
  {
    v14 = objc_msgSend(a1, sel_filterEntries);
    sub_1851F9080(0, &qword_1EDD85A88);
    v15 = sub_186507654();

    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      v16 = sub_186507E58();
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v17 = *(_QWORD *)(v2 + OBJC_IVAR____UIIntelligenceEdgeLightEffect_region);
    v18 = *(void **)(v2 + OBJC_IVAR____UIIntelligenceEdgeLightEffect_lightSource);
    v19 = *(double *)(v2 + OBJC_IVAR____UIIntelligenceEdgeLightEffect_radius);
    v20 = v2 + OBJC_IVAR____UIIntelligenceEdgeLightEffect_transitionInfo;
    v21 = *(_QWORD *)(v2 + OBJC_IVAR____UIIntelligenceEdgeLightEffect_transitionInfo);
    v22 = *(_QWORD *)(v20 + 8);
    if (v16 < 1)
    {
      if (v17)
      {
        if (v17 != 1)
          goto LABEL_19;
        v24 = 1;
      }
      else
      {
        v24 = 0;
      }
      v27 = swift_allocObject();
      *(_BYTE *)(v27 + 16) = v24;
      *(double *)(v27 + 24) = v19;
      objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85A90));
      v28 = v18;
      v31 = sub_1855D0694(v24, v28, v21, v22, (uint64_t)sub_1855D0C24, v27, v19);

      swift_release();
      objc_msgSend(a1, sel_addUnderlay_, v31, v31);
      goto LABEL_17;
    }
    if (v17)
    {
      if (v17 != 1)
        goto LABEL_19;
      v23 = 1;
    }
    else
    {
      v23 = 0;
    }
    v25 = swift_allocObject();
    *(_BYTE *)(v25 + 16) = v23;
    *(double *)(v25 + 24) = v19;
    objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85A90));
    v26 = v18;
    v30 = sub_1855D0694(v23, v26, v21, v22, (uint64_t)sub_1855D0CE0, v25, v19);

    swift_release();
    objc_msgSend(a1, sel_addOverlay_, v30, v30);
    goto LABEL_17;
  }
  v4 = objc_msgSend(objc_allocWithZone((Class)_s12ContentProxyCMa()), sel_init);
  objc_msgSend(a1, sel_addViewEffect_, v4);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____UIIntelligenceEdgeLightEffect_region);
  v6 = *(void **)(v2 + OBJC_IVAR____UIIntelligenceEdgeLightEffect_lightSource);
  v7 = *(double *)(v2 + OBJC_IVAR____UIIntelligenceEdgeLightEffect_radius);
  v8 = v2 + OBJC_IVAR____UIIntelligenceEdgeLightEffect_transitionInfo;
  v9 = *(_QWORD *)(v2 + OBJC_IVAR____UIIntelligenceEdgeLightEffect_transitionInfo);
  v10 = *(_QWORD *)(v8 + 8);
  if (v5 <= 1)
  {
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v4;
    *(_BYTE *)(v11 + 24) = v5;
    *(double *)(v11 + 32) = v7;
    objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85A98));
    v12 = v6;
    v13 = v4;
    v29 = sub_1855D0494(v5, v12, v9, v10, (uint64_t)sub_1855D0C64, v11, v7);

    swift_release();
    objc_msgSend(a1, sel_addOverlay_, v29);

LABEL_17:
    return;
  }
LABEL_19:
  type metadata accessor for Region(0);
  sub_186508044();
  __break(1u);
}

uint64_t sub_1855D0C14()
{
  return swift_deallocObject();
}

id sub_1855D0C24()
{
  uint64_t v0;

  return sub_18576AA78(*(_BYTE *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_1855D0C30()
{
  return swift_deallocObject();
}

uint64_t sub_1855D0C40()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1855D0C64()
{
  uint64_t v0;

  return sub_18576AA08(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_1855D0C74()
{
  return swift_deallocObject();
}

void *sub_1855D0C84(void *a1, double a2)
{
  uint64_t v2;

  LODWORD(a2) = *(_DWORD *)(v2 + 16);
  return sub_1856F2034(a1, a2, *(float *)(v2 + 20));
}

uint64_t sub_1855D0C8C()
{
  return swift_deallocObject();
}

void *sub_1855D0C9C(void *a1)
{
  uint64_t v1;

  return sub_1856F205C(a1, *(float *)(v1 + 16));
}

uint64_t sub_1855D0CA4()
{
  return swift_deallocObject();
}

uint64_t sub_1855D0CB4()
{
  return swift_deallocObject();
}

uint64_t sub_1855D0CE8(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;

  if (a1 >> 62)
    goto LABEL_14;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v2)
      break;
    v8 = MEMORY[0x1E0DEE9D8];
    result = sub_186507CFC();
    if (v2 < 0)
    {
      __break(1u);
      return result;
    }
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x186DC4CB4](v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      ++v4;
      v7 = objc_msgSend(v5, sel_CGColor);

      sub_186507CD8();
      sub_186507D08();
      sub_186507D14();
      sub_186507CE4();
      if (v2 == v4)
        return v8;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v2 = sub_186507E58();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1855D0E98()
{
  char *v0;
  id v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = objc_msgSend(v0, sel_layer);
  type metadata accessor for _UIOrbitalColorView.CogOrbitLayer();
  v2 = swift_dynamicCastClassUnconditional();
  v3 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5UIKit19_UIOrbitalColorView_palette], sel_colors);
  sub_1855D3150();
  v4 = sub_186507654();

  v5 = sub_1855D0CE8(v4);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_colors) = v5;
  swift_bridgeObjectRelease();
  v6 = swift_bridgeObjectRetain();
  sub_1855D2014(v6);
  swift_bridgeObjectRelease();
  v7 = swift_bridgeObjectRetain();
  v8 = sub_1855D1744(v7);
  sub_1855D2014(v8);

  return swift_bridgeObjectRelease();
}

id sub_1855D1028(uint64_t a1)
{
  return sub_1855C0730(a1, type metadata accessor for _UIOrbitalColorView);
}

uint64_t type metadata accessor for _UIOrbitalColorView()
{
  return objc_opt_self();
}

char *sub_1855D1064()
{
  char *v0;
  char *v1;
  uint64_t v2;
  objc_class *v3;
  char *v4;
  unint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v11;
  char *v12;
  void *v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  objc_super v19;
  objc_super v20;
  objc_super v21;

  v1 = v0;
  v2 = OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_clockwiseCog;
  v3 = (objc_class *)type metadata accessor for _UIOrbitalColorView.CogLayer();
  v4 = (char *)objc_allocWithZone(v3);
  v5 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v4[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_spokes] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v4[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_meshingOffset] = 0;
  *(_DWORD *)&v4[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_rootEdge] = 1;
  v21.receiver = v4;
  v21.super_class = v3;
  v6 = v0;
  v7 = objc_msgSendSuper2(&v21, sel_init);
  sub_1855D2014(v5);

  *(_QWORD *)&v1[v2] = v7;
  v8 = OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_counterClockwiseCog;
  v9 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v9[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_spokes] = v5;
  *(_QWORD *)&v9[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_meshingOffset] = 0x3FE0000000000000;
  *(_DWORD *)&v9[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_rootEdge] = 3;
  v20.receiver = v9;
  v20.super_class = v3;
  v10 = objc_msgSendSuper2(&v20, sel_init);
  sub_1855D2014(v5);

  *(_QWORD *)&v6[v8] = v10;
  v11 = OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_container;
  *(_QWORD *)&v6[v11] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD27A8]), sel_init);
  *(_QWORD *)&v6[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_colors] = v5;
  *(_QWORD *)&v6[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_period] = 0x4030000000000000;
  *(_QWORD *)&v6[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_relativeCogSpeed] = 0x4000000000000000;

  v19.receiver = v6;
  v19.super_class = (Class)type metadata accessor for _UIOrbitalColorView.CogOrbitLayer();
  v12 = (char *)objc_msgSendSuper2(&v19, sel_init);
  v13 = *(void **)&v12[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_container];
  v14 = v12;
  objc_msgSend(v14, sel_addSublayer_, v13);
  objc_msgSend(v13, sel_addSublayer_, *(_QWORD *)&v14[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_clockwiseCog]);
  objc_msgSend(v13, sel_addSublayer_, *(_QWORD *)&v14[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_counterClockwiseCog]);
  v15 = swift_bridgeObjectRetain();
  sub_1855D2014(v15);
  swift_bridgeObjectRelease();
  v16 = swift_bridgeObjectRetain();
  v17 = sub_1855D1744(v16);
  sub_1855D2014(v17);
  swift_bridgeObjectRelease();
  sub_1855D195C();

  return v14;
}

uint64_t sub_1855D12A8(_QWORD *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  unint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t result;
  objc_super v22;
  char *v23;
  char v24[32];
  objc_super v25;
  objc_super v26;

  v2 = v1;
  v4 = OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_clockwiseCog;
  v5 = (objc_class *)type metadata accessor for _UIOrbitalColorView.CogLayer();
  v6 = (char *)objc_allocWithZone(v5);
  v7 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v6[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_spokes] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v6[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_meshingOffset] = 0;
  *(_DWORD *)&v6[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_rootEdge] = 1;
  v26.receiver = v6;
  v26.super_class = v5;
  v8 = v1;
  v9 = objc_msgSendSuper2(&v26, sel_init);
  sub_1855D2014(v7);

  *(_QWORD *)&v2[v4] = v9;
  v10 = OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_counterClockwiseCog;
  v11 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v11[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_spokes] = v7;
  *(_QWORD *)&v11[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_meshingOffset] = 0x3FE0000000000000;
  *(_DWORD *)&v11[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_rootEdge] = 3;
  v25.receiver = v11;
  v25.super_class = v5;
  v12 = objc_msgSendSuper2(&v25, sel_init);
  sub_1855D2014(v7);

  *(_QWORD *)&v8[v10] = v12;
  v13 = OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_container;
  *(_QWORD *)&v8[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD27A8]), sel_init);
  v14 = OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_colors;
  *(_QWORD *)&v8[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_colors] = v7;
  v15 = OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_period;
  *(_QWORD *)&v8[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_period] = 0x4030000000000000;
  v16 = OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_relativeCogSpeed;
  *(_QWORD *)&v8[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_relativeCogSpeed] = 0x4000000000000000;
  sub_1850F69D4((uint64_t)a1, (uint64_t)v24);
  v17 = (objc_class *)type metadata accessor for _UIOrbitalColorView.CogOrbitLayer();
  if (swift_dynamicCast())
  {
    v18 = v23;
    *(_QWORD *)&v8[v14] = *(_QWORD *)&v23[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_colors];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v8[v15] = *(_QWORD *)&v18[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_period];
    *(_QWORD *)&v8[v16] = *(_QWORD *)&v18[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_relativeCogSpeed];

    __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
    v19 = sub_186507FB4();
    v22.receiver = v8;
    v22.super_class = v17;
    v20 = objc_msgSendSuper2(&v22, sel_initWithLayer_, v19);

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    return (uint64_t)v20;
  }
  else
  {
    result = sub_186507E04();
    __break(1u);
  }
  return result;
}

id sub_1855D1560()
{
  char *v0;
  double Width;
  double Height;
  void *v3;
  double MidX;
  void *v5;
  double v6;
  void *v7;
  double v8;
  objc_super v10;
  CGRect v11;
  CGRect v12;
  CGRect v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;

  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for _UIOrbitalColorView.CogOrbitLayer();
  objc_msgSendSuper2(&v10, sel_layoutSublayers);
  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v11);
  objc_msgSend(v0, sel_bounds);
  Height = CGRectGetHeight(v12);
  v3 = *(void **)&v0[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_container];
  objc_msgSend(v3, sel_setBounds_, 0.0, 0.0, Width, Height);
  objc_msgSend(v0, sel_bounds);
  MidX = CGRectGetMidX(v13);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v3, sel_setPosition_, MidX, CGRectGetMidY(v14));
  v5 = *(void **)&v0[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_clockwiseCog];
  objc_msgSend(v5, sel_setBounds_, 0.0, 0.0, Width, Height);
  objc_msgSend(v0, sel_bounds);
  v6 = CGRectGetMidX(v15);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v5, sel_setPosition_, v6, CGRectGetMinY(v16));
  v7 = *(void **)&v0[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_counterClockwiseCog];
  objc_msgSend(v7, sel_setBounds_, 0.0, 0.0, Width, Height);
  objc_msgSend(v0, sel_bounds);
  v8 = CGRectGetMidX(v17);
  objc_msgSend(v0, sel_bounds);
  return objc_msgSend(v7, sel_setPosition_, v8, CGRectGetMaxY(v18));
}

uint64_t sub_1855D1744(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0)
    goto LABEL_39;
  v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  v15 = v1 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v2 & 0x4000000000000000) == 0)
  {
    v3 = *(_QWORD *)(v2 + 16);
    swift_bridgeObjectRelease();
    v4 = (unint64_t)v3 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    swift_retain();
    v3 = sub_186507E58();
    swift_bridgeObjectRelease();
    swift_release();
    v14 = v3 >= 0 ? v3 : v3 + 1;
    if (v3 < -1)
      __break(1u);
    v4 = v14 >> 1;
LABEL_6:
    if ((unint64_t)(v3 + 1) < 3)
      return v2;
    v5 = 0;
    while (1)
    {
      v6 = v5 + 1;
      v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1))
        break;
      if (v5 != v1)
      {
        if ((v15 & 0xC000000000000001) != 0)
        {
          v9 = MEMORY[0x186DC4CB4](v5, v15);
          v10 = (id)MEMORY[0x186DC4CB4](v3 - (v5 + 1), v15);
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0)
            goto LABEL_33;
          v7 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v5 >= v7)
            goto LABEL_34;
          v8 = *(id *)(v15 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000) != 0)
            goto LABEL_35;
          if (v1 >= v7)
            goto LABEL_37;
          v9 = (uint64_t)v8;
          v10 = *(id *)(v15 + 32 + 8 * v1);
        }
        v11 = v10;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v15 < 0
          || (v15 & 0x4000000000000000) != 0)
        {
          sub_1857854A8(v15);
        }
        v12 = (v15 & 0xFFFFFFFFFFFFFF8) + 8 * v5;

        *(_QWORD *)(v12 + 32) = v11;
        sub_18650766C();
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v15 < 0
          || (v15 & 0x4000000000000000) != 0)
        {
          sub_1857854A8(v15);
        }
        if ((v1 & 0x8000000000000000) != 0)
          goto LABEL_36;
        if (v1 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_38;

        *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 8 * v1 + 0x20) = v9;
        sub_18650766C();
      }
      v5 = v6;
      if (v4 == v6)
        return v15;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    v2 = (uint64_t)sub_1856C6664(v1);
    v15 = v2;
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_4;
  }
}

void sub_1855D195C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  double v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;

  v1 = (void *)sub_1865074D4();
  v2 = objc_msgSend((id)objc_opt_self(), sel_animationWithKeyPath_, v1);

  objc_msgSend(v2, sel_setRemovedOnCompletion_, 0);
  v3 = *MEMORY[0x1E0CD31C0];
  v4 = (void *)objc_opt_self();
  v5 = v2;
  v6 = objc_msgSend(v4, sel_functionWithName_, v3);
  objc_msgSend(v5, sel_setValueFunction_, v6);

  v7 = (void *)sub_186507810();
  objc_msgSend(v5, sel_setFromValue_, v7);

  v8 = (void *)sub_186506CC4();
  objc_msgSend(v5, sel_setToValue_, v8);

  LODWORD(v9) = 2139095040;
  objc_msgSend(v5, sel_setRepeatCount_, v9);
  v10 = OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_period;
  objc_msgSend(v5, sel_setDuration_, *(double *)(v0+ OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_period)/ *(double *)(v0+ OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_relativeCogSpeed));
  v11 = *(void **)(v0
                 + OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_clockwiseCog);
  v12 = (void *)sub_1865074D4();
  objc_msgSend(v11, sel_addAnimation_forKey_, v5, v12);

  v13 = (void *)sub_186506CC4();
  objc_msgSend(v5, sel_setToValue_, v13);

  v14 = *(void **)(v0
                 + OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_counterClockwiseCog);
  v15 = (void *)sub_1865074D4();
  objc_msgSend(v14, sel_addAnimation_forKey_, v5, v15);

  objc_msgSend(v5, sel_setDuration_, *(double *)(v0 + v10));
  v16 = *(void **)(v0
                 + OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_container);
  v17 = (id)sub_1865074D4();
  objc_msgSend(v16, sel_addAnimation_forKey_, v5, v17);

}

id sub_1855D1BF8()
{
  return sub_1855C0730(0, type metadata accessor for _UIOrbitalColorView.CogOrbitLayer);
}

uint64_t type metadata accessor for _UIOrbitalColorView.CogOrbitLayer()
{
  return objc_opt_self();
}

uint64_t sub_1855D1C80(_QWORD *a1)
{
  void *v1;
  objc_class *v3;
  char *v4;
  char *v5;
  uint64_t v6;
  id v7;
  uint64_t result;
  objc_super v9;
  char *v10;
  char v11[32];

  sub_1850F69D4((uint64_t)a1, (uint64_t)v11);
  v3 = (objc_class *)type metadata accessor for _UIOrbitalColorView.CogLayer();
  v4 = v1;
  if (swift_dynamicCast())
  {
    v5 = v10;
    *(_QWORD *)&v4[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_spokes] = MEMORY[0x1E0DEE9D8];
    *(_DWORD *)&v4[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_rootEdge] = *(_DWORD *)&v5[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_rootEdge];
    *(_QWORD *)&v4[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_meshingOffset] = *(_QWORD *)&v5[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_meshingOffset];

    __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
    v6 = sub_186507FB4();
    v9.receiver = v4;
    v9.super_class = v3;
    v7 = objc_msgSendSuper2(&v9, sel_initWithLayer_, v6);

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    return (uint64_t)v7;
  }
  else
  {
    result = sub_186507E04();
    __break(1u);
  }
  return result;
}

uint64_t sub_1855D1E30()
{
  char *v0;
  double Width;
  double Height;
  double MidX;
  double MidY;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  id v10;
  void *v11;
  objc_super v12;
  CGRect v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;

  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for _UIOrbitalColorView.CogLayer();
  objc_msgSendSuper2(&v12, sel_layoutSublayers);
  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v13);
  objc_msgSend(v0, sel_bounds);
  Height = CGRectGetHeight(v14);
  objc_msgSend(v0, sel_bounds);
  MidX = CGRectGetMidX(v15);
  objc_msgSend(v0, sel_bounds);
  MidY = CGRectGetMidY(v16);
  v5 = &v0[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_spokes];
  swift_beginAccess();
  v6 = *(_QWORD *)v5;
  if (!(v6 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v7)
      goto LABEL_3;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  result = sub_186507E58();
  v7 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_3:
  if (v7 >= 1)
  {
    v9 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x186DC4CB4](v9, v6);
      else
        v10 = *(id *)(v6 + 8 * v9 + 32);
      v11 = v10;
      ++v9;
      objc_msgSend(v10, sel_setBounds_, 0.0, 0.0, Width, Height);
      objc_msgSend(v11, sel_setPosition_, MidX, MidY);

    }
    while (v7 != v9);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

void sub_1855D2014(unint64_t a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  CGColorRef CopyWithAlpha;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t i;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  objc_class *v28;
  char *v29;
  id v30;
  char *v31;
  id v32;
  id v33;
  char *v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  CGColorRef v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  objc_super v48;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_spokes);
  swift_beginAccess();
  if ((unint64_t)*v3 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    v4 = sub_186507E58();
    swift_bridgeObjectRelease();
    if (!(a1 >> 62))
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!(a1 >> 62))
    {
LABEL_3:
      v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  v5 = sub_186507E58();
  swift_bridgeObjectRelease();
LABEL_4:
  v46 = v5;
  v47 = a1;
  if (v4 == v5)
  {
    if (v4 < 0)
    {
LABEL_39:
      __break(1u);
      return;
    }
    if (v4)
    {
      v6 = 0;
      v7 = a1 & 0xC000000000000001;
      v43 = *MEMORY[0x1E0CD2F58];
      do
      {
        v19 = *v3;
        if ((*v3 & 0xC000000000000001) != 0)
        {
          swift_bridgeObjectRetain();
          v8 = (char *)MEMORY[0x186DC4CB4](v6, v19);
          swift_bridgeObjectRelease();
          if (!v7)
            goto LABEL_14;
        }
        else
        {
          if (v6 >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_24;
          }
          v8 = (char *)*(id *)(v19 + 8 * v6 + 32);
          if (!v7)
          {
LABEL_14:
            v9 = *(id *)(a1 + 8 * v6 + 32);
            goto LABEL_10;
          }
        }
        v9 = (id)MEMORY[0x186DC4CB4](v6, a1);
LABEL_10:
        ++v6;
        v10 = OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_color;
        v11 = *(void **)&v8[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_color];
        *(_QWORD *)&v8[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_color] = v9;
        v12 = v9;

        v13 = *(void **)&v8[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_gradientLayer];
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD81EC0);
        v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_186669900;
        v15 = *(void **)&v8[v10];
        type metadata accessor for CGColor(0);
        *(_QWORD *)(v14 + 56) = v16;
        *(_QWORD *)(v14 + 32) = v15;
        CopyWithAlpha = CGColorCreateCopyWithAlpha((CGColorRef)v15, 0.0);
        *(_QWORD *)(v14 + 88) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85B18);
        *(_QWORD *)(v14 + 64) = CopyWithAlpha;
        v18 = (void *)sub_18650763C();
        swift_bridgeObjectRelease();
        objc_msgSend(v13, sel_setColors_, v18);

        objc_msgSend(v13, sel_setStartPoint_, 0.5, 0.5);
        objc_msgSend(v13, sel_setEndPoint_, 1.0, 1.0);
        objc_msgSend(v13, sel_setType_, v43);

        a1 = v47;
      }
      while (v4 != v6);
    }
  }
  v20 = *v3;
  if ((unint64_t)*v3 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v21 = sub_186507E58();
    if (!v21)
      goto LABEL_27;
  }
  else
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (!v21)
      goto LABEL_27;
  }
  if (v21 < 1)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  for (i = 0; i != v21; ++i)
  {
    if ((v20 & 0xC000000000000001) != 0)
      v23 = (id)MEMORY[0x186DC4CB4](i, v20);
    else
      v23 = *(id *)(v20 + 8 * i + 32);
    v24 = v23;
    objc_msgSend(v23, sel_removeFromSuperlayer);

  }
LABEL_27:
  swift_bridgeObjectRelease_n();
  *v3 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  if (v46 < 0)
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v46)
  {
    v25 = 0;
    v44 = a1 & 0xC000000000000001;
    v42 = *MEMORY[0x1E0CD2F58];
    do
    {
      if (v44)
        v26 = (id)MEMORY[0x186DC4CB4](v25, a1);
      else
        v26 = *(id *)(a1 + 8 * v25 + 32);
      v27 = v26;
      v28 = (objc_class *)type metadata accessor for _UIOrbitalColorView.SpokeLayer();
      v29 = (char *)objc_allocWithZone(v28);
      *(_QWORD *)&v29[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_color] = v27;
      *(_QWORD *)&v29[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_normalizedRadius] = 0x3FE0000000000000;
      *(_QWORD *)&v29[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_normalizedOffset] = 0x3FF0000000000000;
      *(_DWORD *)&v29[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_offsetDirection] = 1;
      v30 = objc_allocWithZone(MEMORY[0x1E0CD2790]);
      v31 = v29;
      v32 = v27;
      v33 = objc_msgSend(v30, sel_init);
      *(_QWORD *)&v31[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_gradientLayer] = v33;

      v48.receiver = v31;
      v48.super_class = v28;
      v34 = (char *)objc_msgSendSuper2(&v48, sel_init);
      v35 = *(void **)&v34[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_gradientLayer];
      objc_msgSend(v34, sel_addSublayer_, v35);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD81EC0);
      v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_186669900;
      v37 = *(void **)&v34[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_color];
      type metadata accessor for CGColor(0);
      *(_QWORD *)(v36 + 56) = v38;
      *(_QWORD *)(v36 + 32) = v37;
      v39 = CGColorCreateCopyWithAlpha((CGColorRef)v37, 0.0);
      *(_QWORD *)(v36 + 88) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85B18);
      *(_QWORD *)(v36 + 64) = v39;
      v40 = (void *)sub_18650763C();
      swift_bridgeObjectRelease();
      objc_msgSend(v35, sel_setColors_, v40);

      objc_msgSend(v35, sel_setStartPoint_, 0.5, 0.5);
      objc_msgSend(v35, sel_setEndPoint_, 1.0, 1.0);
      objc_msgSend(v35, sel_setType_, v42);

      swift_beginAccess();
      v41 = v34;
      MEMORY[0x186DC4654]();
      if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_186507690();
      ++v25;
      sub_1865076D8();
      sub_18650766C();
      swift_endAccess();
      objc_msgSend(v45, sel_addSublayer_, v41);

      a1 = v47;
    }
    while (v46 != v25);
  }
  sub_1855D2624();
}

void sub_1855D2624()
{
  uint64_t v0;
  unint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  unint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  unint64_t v12;
  char *v13;
  CATransform3D v14;

  v1 = (unint64_t *)(v0
                          + OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_spokes);
  swift_beginAccess();
  v2 = *v1;
  if (*v1 >> 62)
    goto LABEL_24;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v4 = *(double *)(v0
                 + OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_meshingOffset);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_186507E58();
    swift_bridgeObjectRelease();
    if (v5 < 0)
    {
      __break(1u);
      return;
    }
  }
  else
  {
    v5 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v5)
  {
    v6 = 0;
    v7 = 6.28318531 / (double)v3;
    v8 = v7 * v4;
    v9 = OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_rootEdge;
    do
    {
      v10 = *v1;
      if ((*v1 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v11 = (id)MEMORY[0x186DC4CB4](v6, v10);
        swift_bridgeObjectRelease();
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_21:
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
LABEL_24:
          swift_bridgeObjectRetain();
          v3 = sub_186507E58();
          swift_bridgeObjectRelease();
          v2 = *v1;
          goto LABEL_3;
        }
        if (v6 >= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_21;
        v11 = *(id *)(v10 + 8 * v6 + 32);
      }
      CATransform3DMakeRotation(&v14, v8 + v7 * (double)(uint64_t)v6, 0.0, 0.0, 1.0);
      objc_msgSend(v11, sel_setTransform_, &v14);

      v12 = *v1;
      if ((*v1 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v13 = (char *)MEMORY[0x186DC4CB4](v6, v12);
        swift_bridgeObjectRelease();
      }
      else
      {
        if ((v6 & 0x8000000000000000) != 0)
          goto LABEL_22;
        if (v6 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_23;
        v13 = (char *)*(id *)(v12 + 8 * v6 + 32);
      }
      ++v6;
      *(_DWORD *)&v13[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_offsetDirection] = *(_DWORD *)(v0 + v9);
      objc_msgSend(v13, sel_setNeedsLayout);

    }
    while (v5 != v6);
  }
}

id sub_1855D28B0()
{
  return sub_1855C0730(0, type metadata accessor for _UIOrbitalColorView.CogLayer);
}

uint64_t type metadata accessor for _UIOrbitalColorView.CogLayer()
{
  return objc_opt_self();
}

uint64_t sub_1855D28F0(_QWORD *a1)
{
  void *v1;
  objc_class *v3;
  char *v4;
  char *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t result;
  objc_super v14;
  char *v15;
  char v16[32];

  sub_1850F69D4((uint64_t)a1, (uint64_t)v16);
  v3 = (objc_class *)type metadata accessor for _UIOrbitalColorView.SpokeLayer();
  v4 = v1;
  if (swift_dynamicCast())
  {
    v5 = v15;
    v6 = *(void **)&v15[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_color];
    *(_QWORD *)&v4[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_color] = v6;
    *(_QWORD *)&v4[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_normalizedRadius] = *(_QWORD *)&v5[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_normalizedRadius];
    *(_QWORD *)&v4[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_normalizedOffset] = *(_QWORD *)&v5[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_normalizedOffset];
    *(_DWORD *)&v4[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_offsetDirection] = *(_DWORD *)&v5[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_offsetDirection];
    v7 = objc_allocWithZone(MEMORY[0x1E0CD2790]);
    v8 = v6;
    v9 = objc_msgSend(v7, sel_init);
    *(_QWORD *)&v4[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_gradientLayer] = v9;

    __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
    v10 = sub_186507FB4();
    v14.receiver = v4;
    v14.super_class = v3;
    v11 = objc_msgSendSuper2(&v14, sel_initWithLayer_, v10);
    swift_unknownObjectRelease();
    v12 = v11;
    sub_1855D2D04();

    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
    return (uint64_t)v12;
  }
  else
  {
    result = sub_186507E04();
    __break(1u);
  }
  return result;
}

uint64_t sub_1855D2A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *))
{
  uint64_t v6;

  swift_unknownObjectRetain();
  sub_186507B1C();
  swift_unknownObjectRelease();
  return a4(&v6);
}

id sub_1855D2B48()
{
  char *v0;
  double Width;
  double Height;
  double v3;
  double v4;
  double MidX;
  double MidY;
  double v7;
  double v8;
  void *v9;
  id result;
  objc_super v11;
  CGRect v12;
  CGRect v13;
  CGRect v14;
  CGRect v15;

  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for _UIOrbitalColorView.SpokeLayer();
  objc_msgSendSuper2(&v11, sel_layoutSublayers);
  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v12);
  objc_msgSend(v0, sel_bounds);
  Height = CGRectGetHeight(v13);
  v3 = *(double *)&v0[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_normalizedRadius];
  v4 = *(double *)&v0[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_normalizedOffset];
  objc_msgSend(v0, sel_bounds);
  MidX = CGRectGetMidX(v14);
  objc_msgSend(v0, sel_bounds);
  MidY = CGRectGetMidY(v15);
  v7 = (Width + Height) * 0.5;
  v8 = v7 * 0.5 * v4;
  switch(*(_DWORD *)&v0[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_offsetDirection])
  {
    case 0:
      MidX = MidX - v8;
      goto LABEL_6;
    case 1:
      MidY = MidY - v8;
      goto LABEL_6;
    case 2:
      MidX = v8 + MidX;
      goto LABEL_6;
    case 3:
      MidY = v8 + MidY;
LABEL_6:
      v9 = *(void **)&v0[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_gradientLayer];
      objc_msgSend(v9, sel_setBounds_, 0.0, 0.0, v7 * v3 + v7 * v3, v7 * v3 + v7 * v3);
      result = objc_msgSend(v9, sel_setPosition_, MidX, MidY);
      break;
    default:
      type metadata accessor for CGRectEdge(0);
      result = (id)sub_186508044();
      __break(1u);
      break;
  }
  return result;
}

id sub_1855D2D04()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  CGColorRef CopyWithAlpha;
  void *v6;

  v1 = *(void **)(v0
                + OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_gradientLayer);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD81EC0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_186669900;
  v3 = *(void **)(v0 + OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF10SpokeLayer_color);
  type metadata accessor for CGColor(0);
  *(_QWORD *)(v2 + 56) = v4;
  *(_QWORD *)(v2 + 32) = v3;
  CopyWithAlpha = CGColorCreateCopyWithAlpha((CGColorRef)v3, 0.0);
  *(_QWORD *)(v2 + 88) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85B18);
  *(_QWORD *)(v2 + 64) = CopyWithAlpha;
  v6 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setColors_, v6);

  objc_msgSend(v1, sel_setStartPoint_, 0.5, 0.5);
  objc_msgSend(v1, sel_setEndPoint_, 1.0, 1.0);
  return objc_msgSend(v1, sel_setType_, *MEMORY[0x1E0CD2F58]);
}

id sub_1855D2E44()
{
  return sub_1855C0730(0, type metadata accessor for _UIOrbitalColorView.SpokeLayer);
}

uint64_t type metadata accessor for _UIOrbitalColorView.SpokeLayer()
{
  return objc_opt_self();
}

id sub_1855D2EAC(void *a1, double a2, double a3, double a4, double a5)
{
  objc_class *v10;
  char *v11;
  id v12;
  id v13;
  uint64_t inited;
  id v15;
  objc_super v17;

  v10 = (objc_class *)type metadata accessor for _UIOrbitalColorView();
  v11 = (char *)objc_allocWithZone(v10);
  *(_QWORD *)&v11[OBJC_IVAR____TtC5UIKit19_UIOrbitalColorView_palette] = a1;
  v17.receiver = v11;
  v17.super_class = v10;
  v12 = a1;
  v13 = objc_msgSendSuper2(&v17, sel_initWithFrame_, a2, a3, a4, a5);
  sub_1855D0E98();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD82B00);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1866691E0;
  *(_QWORD *)(inited + 32) = &type metadata for UITraitUserInterfaceStyle;
  *(_QWORD *)(inited + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  v15 = v13;
  UIView.registerForTraitChanges(_:action:)(inited, (uint64_t)sel_updateColors);

  swift_setDeallocating();
  swift_unknownObjectRelease();

  return v15;
}

void sub_1855D2FC4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  objc_class *v3;
  char *v4;
  unint64_t v5;
  id v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  objc_super v11;
  objc_super v12;

  v1 = v0;
  v2 = OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_clockwiseCog;
  v3 = (objc_class *)type metadata accessor for _UIOrbitalColorView.CogLayer();
  v4 = (char *)objc_allocWithZone(v3);
  v5 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v4[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_spokes] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v4[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_meshingOffset] = 0;
  *(_DWORD *)&v4[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_rootEdge] = 1;
  v12.receiver = v4;
  v12.super_class = v3;
  v6 = objc_msgSendSuper2(&v12, sel_init);
  sub_1855D2014(v5);

  *(_QWORD *)&v1[v2] = v6;
  v7 = OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_counterClockwiseCog;
  v8 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v8[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_spokes] = v5;
  *(_QWORD *)&v8[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_meshingOffset] = 0x3FE0000000000000;
  *(_DWORD *)&v8[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF8CogLayer_rootEdge] = 3;
  v11.receiver = v8;
  v11.super_class = v3;
  v9 = objc_msgSendSuper2(&v11, sel_init);
  sub_1855D2014(v5);

  *(_QWORD *)&v1[v7] = v9;
  v10 = OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_container;
  *(_QWORD *)&v1[v10] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD27A8]), sel_init);
  *(_QWORD *)&v1[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_colors] = v5;
  *(_QWORD *)&v1[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_period] = 0x4030000000000000;
  *(_QWORD *)&v1[OBJC_IVAR____TtCC5UIKit19_UIOrbitalColorViewP33_E7ADF61CB2C5BE84A3CEAD4215D687DF13CogOrbitLayer_relativeCogSpeed] = 0x4000000000000000;

  sub_186507E04();
  __break(1u);
}

unint64_t sub_1855D3150()
{
  unint64_t result;

  result = qword_1ECD74900;
  if (!qword_1ECD74900)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ECD74900);
  }
  return result;
}

uint64_t sub_1855D318C()
{
  uint64_t v0;

  v0 = sub_186507264();
  __swift_allocate_value_buffer(v0, qword_1EDD85B20);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EDD85B20);
  return sub_186507258();
}

void sub_1855D320C(uint64_t a1)
{
  char *v1;
  char *v2;
  char **v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  void (*v18)(void);
  id v19;
  uint64_t v20;
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  id v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = v1;
  v37 = *MEMORY[0x1E0C80C00];
  v4 = &selRef_horizontalVolumeDownScale;
  v5 = objc_msgSend(v1, sel_hostScene);
  if (v5)
  {
    v6 = v5;
    v7 = (uint64_t)&v1[OBJC_IVAR____TtC5UIKit33_UISceneHostGeometryHostComponent_geometryDriver];
    swift_beginAccess();
    sub_1855D3938(v7, (uint64_t)&v31);
    if (v32)
    {
      sub_1851E59E0(&v31, (uint64_t)v34);
      v8 = v36;
      __swift_project_boxed_opaque_existential_0Tm(v34, v35);
      v9 = *(void (**)(void))(v8 + 16);
      v10 = v6;
      v9();

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v34);
    }
    else
    {
      sub_1855D38F8((uint64_t)&v31);
    }
    v11 = OBJC_IVAR____TtC5UIKit33_UISceneHostGeometryHostComponent_currentHandle;
    v12 = *(_QWORD *)&v2[OBJC_IVAR____TtC5UIKit33_UISceneHostGeometryHostComponent_currentHandle];
    if (v12)
      *(_BYTE *)(v12 + 16) = 0;
    *(_QWORD *)&v2[v11] = 0;
    swift_release();
    sub_1855D3938(a1, (uint64_t)&v31);
    if (v32)
    {
      sub_1851E59E0(&v31, (uint64_t)v34);
      type metadata accessor for _UISceneHostGeometryHandle();
      swift_allocObject();
      sub_1856652CC();
      v14 = v13;
      v15 = *(void **)(v13 + 152);
      *(_QWORD *)(v13 + 152) = v6;
      v16 = v6;

      v17 = v36;
      __swift_project_boxed_opaque_existential_0Tm(v34, v35);
      v18 = *(void (**)(void))(v17 + 8);
      v19 = v16;
      v18();
      v4 = &selRef_horizontalVolumeDownScale;

      *(_QWORD *)&v2[v11] = v14;
      swift_release();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v34);
    }
    else
    {

      sub_1855D38F8((uint64_t)&v31);
    }
  }
  if (qword_1EDD83B60 != -1)
    swift_once();
  v20 = sub_186507264();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EDD85B20);
  sub_1855D3938(a1, (uint64_t)v34);
  v21 = v2;
  v22 = sub_18650724C();
  v23 = sub_1865078D0();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc();
    v25 = (_QWORD *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    v33 = v26;
    *(_DWORD *)v24 = 136315394;
    sub_1855D3938((uint64_t)v34, (uint64_t)&v31);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85B40);
    v27 = sub_18650751C();
    *(_QWORD *)&v31 = sub_185766448(v27, v28, &v33);
    sub_186507AD4();
    swift_bridgeObjectRelease();
    sub_1855D38F8((uint64_t)v34);
    *(_WORD *)(v24 + 12) = 2112;
    v29 = objc_msgSend(v21, v4[24]);
    v30 = v29;
    if (v29)
      *(_QWORD *)&v31 = v29;
    else
      *(_QWORD *)&v31 = 0;
    sub_186507AD4();
    *v25 = v30;

    _os_log_impl(&dword_185066000, v22, v23, "Using %s as geometry driver for scene %@", (uint8_t *)v24, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD8A850);
    swift_arrayDestroy();
    MEMORY[0x186DCA030](v25, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x186DCA030](v26, -1, -1);
    MEMORY[0x186DCA030](v24, -1, -1);

  }
  else
  {
    sub_1855D38F8((uint64_t)v34);

  }
}

id FBScene.set(_:)(uint64_t a1)
{
  void *v1;
  uint64_t ObjCClassFromMetadata;
  id result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[40];

  type metadata accessor for _UISceneHostGeometrySceneExtension();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  type metadata accessor for _UISceneHostGeometryHostComponent();
  result = objc_msgSend(v1, sel_componentForExtension_ofClass_, ObjCClassFromMetadata, swift_getObjCClassFromMetadata());
  if (result)
  {
    v5 = swift_dynamicCastClass();
    if (v5)
    {
      v6 = v5;
      sub_1851E75D8(a1, (uint64_t)v8);
      sub_1855D320C((uint64_t)v8);
      v7 = v6 + OBJC_IVAR____TtC5UIKit33_UISceneHostGeometryHostComponent_geometryDriver;
      swift_beginAccess();
      sub_1855D38B0((uint64_t)v8, v7);
      swift_endAccess();
      return (id)swift_unknownObjectRelease();
    }
    else
    {
      return (id)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t type metadata accessor for _UISceneHostGeometryHostComponent()
{
  return objc_opt_self();
}

uint64_t sub_1855D38B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85B40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1855D38F8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85B40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1855D3938(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85B40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t UIConfigurationTextAttributesTransformer.transform.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t UIConfigurationTextAttributesTransformer.callAsFunction(_:)()
{
  uint64_t (**v0)(void);

  return (*v0)();
}

uint64_t sub_1855D39CC(uint64_t a1, void (*a2)(void))
{
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v4 = sub_1865069AC();
  v5 = MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, uint64_t, __n128))(v7 + 16))((char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  if (qword_1ECD74848 != -1)
    swift_once();
  type metadata accessor for AttributeScopes.UIKitAttributes();
  sub_1852478E0((unint64_t *)&unk_1ECD74838, (uint64_t (*)(uint64_t))type metadata accessor for AttributeScopes.UIKitAttributes, (uint64_t)&protocol conformance descriptor for AttributeScopes.UIKitAttributes);
  sub_1865073B4();
  a2();
  swift_bridgeObjectRelease();
  return sub_1865069C4();
}

BOOL static UIButton.Configuration.CornerStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t UIButton.Configuration.CornerStyle.hash(into:)()
{
  return sub_1865080F8();
}

uint64_t static UIButton.Configuration.tinted()@<X0>(uint64_t *a1@<X8>)
{
  return sub_1854AF788((SEL *)&selRef_tintedButtonConfiguration, a1);
}

uint64_t static UIButton.Configuration.filled()@<X0>(uint64_t *a1@<X8>)
{
  return sub_1854AF788((SEL *)&selRef_filledButtonConfiguration, a1);
}

uint64_t static UIButton.Configuration.bordered()@<X0>(uint64_t *a1@<X8>)
{
  return sub_1854AF788((SEL *)&selRef_borderedButtonConfiguration, a1);
}

uint64_t static UIButton.Configuration.borderedTinted()@<X0>(uint64_t *a1@<X8>)
{
  return sub_1854AF788((SEL *)&selRef_borderedTintedButtonConfiguration, a1);
}

uint64_t static UIButton.Configuration.borderedProminent()@<X0>(uint64_t *a1@<X8>)
{
  return sub_1854AF788((SEL *)&selRef_borderedProminentButtonConfiguration, a1);
}

uint64_t UIButton.Configuration.updated(for:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  id v4;
  uint64_t result;

  v4 = objc_msgSend(*(id *)(*(_QWORD *)v2 + 16), sel_updatedConfigurationForButton_, a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74BB8);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v4;
  *a2 = result;
  return result;
}

uint64_t UIButton.Configuration.background.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  id v3;
  uint64_t result;
  uint64_t v5;

  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_background);
  objc_msgSend(v3, sel_copy);

  sub_186507B1C();
  swift_unknownObjectRelease();
  sub_1851F9080(0, (unint64_t *)&qword_1ECD74850);
  swift_dynamicCast();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A78);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v5;
  *a1 = result;
  return result;
}

void (*UIButton.Configuration.background.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[6] = v1;
  v4 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_background);
  objc_msgSend(v4, sel_copy);

  sub_186507B1C();
  swift_unknownObjectRelease();
  v3[7] = sub_1851F9080(0, (unint64_t *)&qword_1ECD74850);
  swift_dynamicCast();
  v5 = v3[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A78);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  v3[4] = v6;
  return sub_1855D3DE8;
}

void sub_1855D3DE8(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    swift_retain();
    v4 = (void *)sub_1855D7CCC();
    v5 = *(void **)(v3 + 16);
    v6 = v4;
    v7 = v5;
    swift_release();
    objc_msgSend(v7, sel_copy);

    sub_186507B1C();
    swift_unknownObjectRelease();
    swift_dynamicCast();
    v8 = (void *)v2[5];
    objc_msgSend(v6, sel__setSwiftBridgingBackground_, v8);

    swift_release();
  }
  else
  {
    v9 = (void *)sub_1855D7CCC();
    v10 = *(void **)(v3 + 16);
    v11 = v9;
    v12 = v10;
    swift_release();
    objc_msgSend(v12, sel_copy);

    sub_186507B1C();
    swift_unknownObjectRelease();
    swift_dynamicCast();
    v13 = (void *)v2[5];
    objc_msgSend(v11, sel__setSwiftBridgingBackground_, v13);

  }
  free(v2);
}

uint64_t UIButton.Configuration.cornerStyle.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_1855D4020((uint64_t)objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_cornerStyle), a1);
}

uint64_t sub_1855D3F8C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  void *v3;
  uint64_t result;
  char v5;

  v3 = *(void **)(*(_QWORD *)a1 + 16);
  swift_retain();
  sub_1855D4020((uint64_t)objc_msgSend(v3, sel_cornerStyle), &v5);
  result = swift_release();
  *a2 = v5;
  return result;
}

id sub_1855D3FF0(unsigned __int8 *a1)
{
  return objc_msgSend((id)sub_1855D7CCC(), sel_setCornerStyle_, *a1 - 1);
}

uint64_t sub_1855D4020@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  if ((unint64_t)(result + 1) >= 6)
  {
    sub_186507C30();
    sub_186507564();
    type metadata accessor for __UIButtonConfigurationCornerStyle(0);
    sub_186507D74();
    sub_186507564();
    sub_186508260();
    sub_186507564();
    swift_bridgeObjectRelease();
    result = sub_186507E04();
    __break(1u);
  }
  else
  {
    *a2 = result + 1;
  }
  return result;
}

id (*UIButton.Configuration.cornerStyle.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  sub_1855D4020((uint64_t)objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_cornerStyle), (_BYTE *)(a1 + 8));
  return sub_1855D4174;
}

id sub_1855D4174(uint64_t a1)
{
  return objc_msgSend((id)sub_1855D7CCC(), sel_setCornerStyle_, *(unsigned __int8 *)(a1 + 8) - 1);
}

unint64_t UIButton.Configuration.buttonSize.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  unint64_t result;

  result = (unint64_t)objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_buttonSize);
  if (result >= 4)
  {
    sub_186507C30();
    sub_186507564();
    type metadata accessor for __UIButtonConfigurationSize(0);
    sub_186507D74();
    sub_186507564();
    sub_186508260();
    sub_186507564();
    swift_bridgeObjectRelease();
    result = sub_186507E04();
    __break(1u);
  }
  else
  {
    *a1 = 0x3000102u >> (8 * result);
  }
  return result;
}

id sub_1855D42D4(char *a1)
{
  return objc_msgSend((id)sub_1855D7CCC(), sel_setButtonSize_, qword_18666A930[*a1]);
}

id UIButton.Configuration.buttonSize.setter(char *a1)
{
  uint64_t *v1;
  uint64_t v2;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v8;

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4 = *v1;
  if (isUniquelyReferenced_nonNull_native)
  {
    v5 = *(void **)(v4 + 16);
  }
  else
  {
    objc_msgSend(*(id *)(v4 + 16), sel_copy);
    sub_186507B1C();
    swift_unknownObjectRelease();
    sub_1851F9080(0, (unint64_t *)&unk_1EDD827B8);
    swift_dynamicCast();
    v5 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74BB8);
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v8;
    swift_release();
    *v1 = v6;
  }
  return objc_msgSend(v5, sel_setButtonSize_, qword_18666A930[v2]);
}

id (*UIButton.Configuration.buttonSize.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  UIButton.Configuration.buttonSize.getter((_BYTE *)(a1 + 8));
  return sub_1855D4448;
}

id sub_1855D4448(uint64_t a1)
{
  return objc_msgSend((id)sub_1855D7CCC(), sel_setButtonSize_, qword_18666A930[*(char *)(a1 + 8)]);
}

id UIButton.Configuration.macIdiomStyle.getter@<X0>(_BYTE *a1@<X8>)
{
  return sub_1855D63E0((SEL *)&selRef_macIdiomStyle, type metadata accessor for __UIButtonConfigurationMacIdiomStyle, a1);
}

id UIButton.Configuration.macIdiomStyle.setter(unsigned __int8 *a1)
{
  return sub_1855D5D38(a1, (SEL *)&selRef_setMacIdiomStyle_);
}

id (*UIButton.Configuration.macIdiomStyle.modify(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  UIButton.Configuration.macIdiomStyle.getter((_BYTE *)(a1 + 8));
  return sub_1855D44F4;
}

id sub_1855D44F4(uint64_t a1, uint64_t a2)
{
  return sub_1855D6D68(a1, a2, (SEL *)&selRef_setMacIdiomStyle_);
}

id UIButton.Configuration.baseForegroundColor.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_baseForegroundColor);
}

void (*UIButton.Configuration.baseForegroundColor.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_baseForegroundColor);
  return sub_1855D4574;
}

void sub_1855D4574(void **a1, char a2)
{
  sub_1855D723C(a1, a2, UIButton.Configuration.baseForegroundColor.setter);
}

id UIButton.Configuration.baseBackgroundColor.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_baseBackgroundColor);
}

void (*UIButton.Configuration.baseBackgroundColor.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_baseBackgroundColor);
  return sub_1855D45F4;
}

void sub_1855D45F4(void **a1, char a2)
{
  sub_1855D723C(a1, a2, UIButton.Configuration.baseBackgroundColor.setter);
}

void (*UIButton.Configuration.image.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_image);
  return sub_1855D464C;
}

void sub_1855D464C(void **a1, char a2)
{
  sub_1855D723C(a1, a2, UIButton.Configuration.image.setter);
}

_QWORD *UIButton.Configuration.imageColorTransformer.getter@<X0>(id (**a1)()@<X8>)
{
  uint64_t v1;
  _QWORD *result;
  _QWORD *v4;
  id (*v5)();

  result = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_imageColorTransformer);
  if (result)
  {
    v4 = result;
    result = (_QWORD *)swift_allocObject();
    result[2] = v4;
    v5 = sub_1855D7DC0;
  }
  else
  {
    v5 = 0;
  }
  *a1 = v5;
  a1[1] = (id (*)())result;
  return result;
}

uint64_t sub_1855D46C4@<X0>(uint64_t a1@<X0>, id (**a2)()@<X8>)
{
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t result;
  id (*v8)();

  v3 = *(void **)(*(_QWORD *)a1 + 16);
  swift_retain();
  v4 = objc_msgSend(v3, sel_imageColorTransformer);
  if (v4)
  {
    v5 = v4;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v5;
    result = swift_release();
    v8 = sub_1855D8D6C;
  }
  else
  {
    result = swift_release();
    v8 = 0;
    v6 = 0;
  }
  *a2 = v8;
  a2[1] = (id (*)())v6;
  return result;
}

id sub_1855D475C(uint64_t a1, uint64_t a2)
{
  return (id)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
}

void (*UIButton.Configuration.imageColorTransformer.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  id (*v6)();

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[8] = v1;
  v4 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_imageColorTransformer);
  if (v4)
  {
    v5 = v4;
    v4 = (_QWORD *)swift_allocObject();
    v4[2] = v5;
    v6 = sub_1855D8D6C;
  }
  else
  {
    v6 = 0;
  }
  v3[6] = v6;
  v3[7] = v4;
  return sub_1855D481C;
}

void sub_1855D481C(uint64_t a1, char a2)
{
  sub_1855D6108(a1, a2, (uint64_t)&block_descriptor_6_0, (SEL *)&selRef_setImageColorTransformer_, (uint64_t)&block_descriptor_3_0);
}

void (*UIButton.Configuration.preferredSymbolConfigurationForImage.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_preferredSymbolConfigurationForImage);
  return sub_1855D4884;
}

void sub_1855D4884(void **a1, char a2)
{
  sub_1855D723C(a1, a2, UIButton.Configuration.preferredSymbolConfigurationForImage.setter);
}

id UIButton.Configuration.showsActivityIndicator.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_showsActivityIndicator);
}

id UIButton.Configuration.showsActivityIndicator.setter(char a1)
{
  return sub_1855D65A4(a1, (SEL *)&selRef_setShowsActivityIndicator_);
}

id (*UIButton.Configuration.showsActivityIndicator.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_showsActivityIndicator);
  return sub_1855D4904;
}

id sub_1855D4904(uint64_t a1)
{
  return UIButton.Configuration.showsActivityIndicator.setter(*(_BYTE *)(a1 + 8));
}

_QWORD *UIButton.Configuration.activityIndicatorColorTransformer.getter@<X0>(id (**a1)()@<X8>)
{
  uint64_t v1;
  _QWORD *result;
  _QWORD *v4;
  id (*v5)();

  result = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_activityIndicatorColorTransformer);
  if (result)
  {
    v4 = result;
    result = (_QWORD *)swift_allocObject();
    result[2] = v4;
    v5 = sub_1855D8D6C;
  }
  else
  {
    v5 = 0;
  }
  *a1 = v5;
  a1[1] = (id (*)())result;
  return result;
}

uint64_t sub_1855D4994@<X0>(uint64_t a1@<X0>, id (**a2)()@<X8>)
{
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t result;
  id (*v8)();

  v3 = *(void **)(*(_QWORD *)a1 + 16);
  swift_retain();
  v4 = objc_msgSend(v3, sel_activityIndicatorColorTransformer);
  if (v4)
  {
    v5 = v4;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v5;
    result = swift_release();
    v8 = sub_1855D8D6C;
  }
  else
  {
    result = swift_release();
    v8 = 0;
    v6 = 0;
  }
  *a2 = v8;
  a2[1] = (id (*)())v6;
  return result;
}

void UIButton.Configuration.activityIndicatorColorTransformer.setter(uint64_t *a1)
{
  sub_185570D58(a1, (uint64_t)&block_descriptor_17_1, (SEL *)&selRef_setActivityIndicatorColorTransformer_);
}

void (*UIButton.Configuration.activityIndicatorColorTransformer.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  id (*v6)();

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[8] = v1;
  v4 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_activityIndicatorColorTransformer);
  if (v4)
  {
    v5 = v4;
    v4 = (_QWORD *)swift_allocObject();
    v4[2] = v5;
    v6 = sub_1855D8D6C;
  }
  else
  {
    v6 = 0;
  }
  v3[6] = v6;
  v3[7] = v4;
  return sub_1855D4AD8;
}

void sub_1855D4AD8(uint64_t a1, char a2)
{
  sub_1855D6108(a1, a2, (uint64_t)&block_descriptor_23_2, (SEL *)&selRef_setActivityIndicatorColorTransformer_, (uint64_t)&block_descriptor_20_1);
}

uint64_t UIButton.Configuration.title.getter()
{
  return sub_1855D51B4((SEL *)&selRef_title);
}

void (*UIButton.Configuration.title.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = v1;
  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_title);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1865074F8();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1855D4B78;
}

void sub_1855D4B78(uint64_t a1, char a2)
{
  sub_1855D53BC(a1, a2, (SEL *)&selRef_setTitle_);
}

uint64_t UIButton.Configuration.attributedTitle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1855D54A0((SEL *)&selRef_attributedTitle, a1);
}

void (*UIButton.Configuration.attributedTitle.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD82838) - 8) + 64);
  a1[1] = malloc(v3);
  v4 = malloc(v3);
  a1[2] = v4;
  if (objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_attributedTitle))
  {
    if (qword_1ECD74848 != -1)
      swift_once();
    type metadata accessor for AttributeScopes.UIKitAttributes();
    sub_1852478E0((unint64_t *)&unk_1ECD74838, (uint64_t (*)(uint64_t))type metadata accessor for AttributeScopes.UIKitAttributes, (uint64_t)&protocol conformance descriptor for AttributeScopes.UIKitAttributes);
    sub_186506940();
    v6 = sub_186506910();
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 0, 1, v6);
  }
  else
  {
    v5 = sub_186506910();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  }
  return sub_1855D4CDC;
}

void sub_1855D4CDC(uint64_t a1, char a2)
{
  sub_1855D58A4(a1, a2, (void (*)(void *))UIButton.Configuration.attributedTitle.setter);
}

_QWORD *UIButton.Configuration.titleTextAttributesTransformer.getter@<X0>(uint64_t (**a1)(uint64_t a1)@<X8>)
{
  uint64_t v1;
  _QWORD *result;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);

  result = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_titleTextAttributesTransformer);
  if (result)
  {
    v4 = result;
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v4;
    result = (_QWORD *)swift_allocObject();
    result[2] = sub_1855D7DE4;
    result[3] = v5;
    v6 = sub_1855D7DEC;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = (uint64_t (*)(uint64_t))result;
  return result;
}

uint64_t sub_1855D4D80@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(uint64_t)@<X8>)
{
  void *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t result;
  uint64_t (*v7)(uint64_t);

  v3 = *(void **)(*(_QWORD *)a1 + 16);
  swift_retain();
  v4 = (uint64_t (*)(uint64_t))objc_msgSend(v3, sel_titleTextAttributesTransformer);
  if (v4)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v4;
    v4 = (uint64_t (*)(uint64_t))swift_allocObject();
    *((_QWORD *)v4 + 2) = sub_1855D8C7C;
    *((_QWORD *)v4 + 3) = v5;
    result = swift_release();
    v7 = sub_1855D8DC8;
  }
  else
  {
    result = swift_release();
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = v4;
  return result;
}

uint64_t sub_1855D4E38(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;
  uint64_t v5;

  type metadata accessor for Key(0);
  sub_1852478E0((unint64_t *)&qword_1EDD82C50, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_186667474);
  v3 = (void *)sub_18650739C();
  v4 = (id)(*(uint64_t (**)(uint64_t, void *))(a2 + 16))(a2, v3);

  v5 = sub_1865073A8();
  return v5;
}

void (*UIButton.Configuration.titleTextAttributesTransformer.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[8] = v1;
  v4 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_titleTextAttributesTransformer);
  if (v4)
  {
    v5 = v4;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v5;
    v4 = (_QWORD *)swift_allocObject();
    v4[2] = sub_1855D8C7C;
    v4[3] = v6;
    v7 = sub_1855D8DC8;
  }
  else
  {
    v7 = 0;
  }
  v3[6] = v7;
  v3[7] = v4;
  return sub_1855D4FB4;
}

void sub_1855D4FB4(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  if ((a2 & 1) != 0)
  {
    if (v3)
    {
      v4 = v2[7];
      sub_18518D708(*(_QWORD *)(*(_QWORD *)a1 + 48));
      v5 = (void *)sub_1855D7CCC();
      v6 = swift_allocObject();
      *(_QWORD *)(v6 + 16) = v3;
      *(_QWORD *)(v6 + 24) = v4;
      v2[4] = sub_1855D8DD0;
      v2[5] = v6;
      *v2 = MEMORY[0x1E0C809B0];
      v2[1] = 1107296256;
      v2[2] = sub_185371FCC;
      v2[3] = &block_descriptor_46;
      v7 = _Block_copy(v2);
      sub_18518D708(v3);
      v8 = v5;
      swift_release();
      objc_msgSend(v8, sel_setTitleTextAttributesTransformer_, v7);
      _Block_release(v7);

      sub_18518D718(v3);
    }
    else
    {
      objc_msgSend((id)sub_1855D7CCC(), sel_setTitleTextAttributesTransformer_, 0);
    }
    v14 = v2[6];
  }
  else
  {
    if (!v3)
    {
      objc_msgSend((id)sub_1855D7CCC(), sel_setTitleTextAttributesTransformer_, 0);
      goto LABEL_10;
    }
    v9 = v2[7];
    v10 = (void *)sub_1855D7CCC();
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v3;
    *(_QWORD *)(v11 + 24) = v9;
    v2[4] = sub_1855D8DD0;
    v2[5] = v11;
    *v2 = MEMORY[0x1E0C809B0];
    v2[1] = 1107296256;
    v2[2] = sub_185371FCC;
    v2[3] = &block_descriptor_53;
    v12 = _Block_copy(v2);
    v13 = v10;
    sub_18518D708(v3);
    swift_release();
    objc_msgSend(v13, sel_setTitleTextAttributesTransformer_, v12);
    _Block_release(v12);

    v14 = v3;
  }
  sub_18518D718(v14);
LABEL_10:
  free(v2);
}

uint64_t UIButton.Configuration.subtitle.getter()
{
  return sub_1855D51B4((SEL *)&selRef_subtitle);
}

uint64_t sub_1855D51B4(SEL *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), *a1);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = sub_1865074F8();

  return v4;
}

void sub_1855D521C(uint64_t a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(void **)(*(_QWORD *)a1 + 16);
  swift_retain();
  v6 = objc_msgSend(v5, *a2);
  if (v6)
  {
    v7 = v6;
    v8 = sub_1865074F8();
    v10 = v9;
    swift_release();

  }
  else
  {
    swift_release();
    v8 = 0;
    v10 = 0;
  }
  *a3 = v8;
  a3[1] = v10;
}

void sub_1855D52A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v6;
  id v7;
  id v8;

  v6 = *(_QWORD *)(a1 + 8);
  swift_bridgeObjectRetain();
  v7 = (id)sub_1855D7CCC();
  if (v6)
  {
    v8 = (id)sub_1865074D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v7, *a5, v8);

}

void UIButton.Configuration.subtitle.setter(uint64_t a1, uint64_t a2)
{
  sub_18521AD48(a1, a2, (SEL *)&selRef_setSubtitle_);
}

void (*UIButton.Configuration.subtitle.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = v1;
  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_subtitle);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1865074F8();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1855D53B0;
}

void sub_1855D53B0(uint64_t a1, char a2)
{
  sub_1855D53BC(a1, a2, (SEL *)&selRef_setSubtitle_);
}

void sub_1855D53BC(uint64_t a1, char a2, SEL *a3)
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;

  v4 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v5 = (id)sub_1855D7CCC();
    v8 = v5;
    if (v4)
    {
      v6 = (void *)sub_1865074D4();
      swift_bridgeObjectRelease();
      v5 = v8;
    }
    else
    {
      v6 = 0;
    }
    objc_msgSend(v5, *a3, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = (id)sub_1855D7CCC();
    v7 = v8;
    if (v4)
    {
      v6 = (void *)sub_1865074D4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = 0;
    }
    objc_msgSend(v8, *a3, v6);
  }

}

uint64_t UIButton.Configuration.attributedSubtitle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1855D54A0((SEL *)&selRef_attributedSubtitle, a1);
}

uint64_t sub_1855D54A0@<X0>(SEL *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  if (objc_msgSend(*(id *)(*(_QWORD *)v2 + 16), *a1))
  {
    if (qword_1ECD74848 != -1)
      swift_once();
    type metadata accessor for AttributeScopes.UIKitAttributes();
    sub_1852478E0((unint64_t *)&unk_1ECD74838, (uint64_t (*)(uint64_t))type metadata accessor for AttributeScopes.UIKitAttributes, (uint64_t)&protocol conformance descriptor for AttributeScopes.UIKitAttributes);
    sub_186506940();
    v4 = sub_186506910();
    v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
    v6 = a2;
    v7 = 0;
  }
  else
  {
    v4 = sub_186506910();
    v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
    v6 = a2;
    v7 = 1;
  }
  return v5(v6, v7, 1, v4);
}

uint64_t sub_1855D55A8@<X0>(uint64_t a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(void **)(*(_QWORD *)a1 + 16);
  swift_retain();
  if (objc_msgSend(v5, *a2))
  {
    if (qword_1ECD74848 != -1)
      swift_once();
    type metadata accessor for AttributeScopes.UIKitAttributes();
    sub_1852478E0((unint64_t *)&unk_1ECD74838, (uint64_t (*)(uint64_t))type metadata accessor for AttributeScopes.UIKitAttributes, (uint64_t)&protocol conformance descriptor for AttributeScopes.UIKitAttributes);
    sub_186506940();
    v7 = sub_186506910();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a3, 0, 1, v7);
  }
  else
  {
    v6 = sub_186506910();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a3, 1, 1, v6);
  }
  return swift_release();
}

uint64_t sub_1855D56C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD82838);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_18521AFBC(a1, (uint64_t)v9);
  return a5(v9);
}

uint64_t UIButton.Configuration.attributedSubtitle.setter(uint64_t a1)
{
  return sub_18521AB24(a1, (SEL *)&selRef_setAttributedSubtitle_);
}

void (*UIButton.Configuration.attributedSubtitle.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD82838) - 8) + 64);
  a1[1] = malloc(v3);
  v4 = malloc(v3);
  a1[2] = v4;
  if (objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_attributedSubtitle))
  {
    if (qword_1ECD74848 != -1)
      swift_once();
    type metadata accessor for AttributeScopes.UIKitAttributes();
    sub_1852478E0((unint64_t *)&unk_1ECD74838, (uint64_t (*)(uint64_t))type metadata accessor for AttributeScopes.UIKitAttributes, (uint64_t)&protocol conformance descriptor for AttributeScopes.UIKitAttributes);
    sub_186506940();
    v6 = sub_186506910();
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 0, 1, v6);
  }
  else
  {
    v5 = sub_186506910();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  }
  return sub_1855D5898;
}

void sub_1855D5898(uint64_t a1, char a2)
{
  sub_1855D58A4(a1, a2, (void (*)(void *))UIButton.Configuration.attributedSubtitle.setter);
}

void sub_1855D58A4(uint64_t a1, char a2, void (*a3)(void *))
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_18521AFBC((uint64_t)v5, (uint64_t)v4);
    a3(v4);
    sub_18521AF7C((uint64_t)v5);
  }
  else
  {
    a3(v5);
  }
  free(v5);
  free(v4);
}

_QWORD *UIButton.Configuration.subtitleTextAttributesTransformer.getter@<X0>(uint64_t (**a1)(uint64_t)@<X8>)
{
  uint64_t v1;
  _QWORD *result;
  _QWORD *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);

  result = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_subtitleTextAttributesTransformer);
  if (result)
  {
    v4 = result;
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v4;
    result = (_QWORD *)swift_allocObject();
    result[2] = sub_1855D8C7C;
    result[3] = v5;
    v6 = sub_1855D8DC8;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = (uint64_t (*)(uint64_t))result;
  return result;
}

uint64_t sub_1855D599C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(uint64_t)@<X8>)
{
  void *v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t result;
  uint64_t (*v7)(uint64_t);

  v3 = *(void **)(*(_QWORD *)a1 + 16);
  swift_retain();
  v4 = (uint64_t (*)(uint64_t))objc_msgSend(v3, sel_subtitleTextAttributesTransformer);
  if (v4)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v4;
    v4 = (uint64_t (*)(uint64_t))swift_allocObject();
    *((_QWORD *)v4 + 2) = sub_1855D8C7C;
    *((_QWORD *)v4 + 3) = v5;
    result = swift_release();
    v7 = sub_1855D8DC8;
  }
  else
  {
    result = swift_release();
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = v4;
  return result;
}

id UIButton.Configuration.subtitleTextAttributesTransformer.setter(uint64_t *a1)
{
  return sub_18521ADD0(a1, (uint64_t)&unk_1E16A3D50, (uint64_t)sub_1855D8DD0, (uint64_t)&block_descriptor_76, (SEL *)&selRef_setSubtitleTextAttributesTransformer_);
}

void (*UIButton.Configuration.subtitleTextAttributesTransformer.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[8] = v1;
  v4 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_subtitleTextAttributesTransformer);
  if (v4)
  {
    v5 = v4;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v5;
    v4 = (_QWORD *)swift_allocObject();
    v4[2] = sub_1855D8C7C;
    v4[3] = v6;
    v7 = sub_1855D8DC8;
  }
  else
  {
    v7 = 0;
  }
  v3[6] = v7;
  v3[7] = v4;
  return sub_1855D5B34;
}

void sub_1855D5B34(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  if ((a2 & 1) != 0)
  {
    if (v3)
    {
      v4 = v2[7];
      sub_18518D708(*(_QWORD *)(*(_QWORD *)a1 + 48));
      v5 = (void *)sub_1855D7CCC();
      v6 = swift_allocObject();
      *(_QWORD *)(v6 + 16) = v3;
      *(_QWORD *)(v6 + 24) = v4;
      v2[4] = sub_1855D8DD0;
      v2[5] = v6;
      *v2 = MEMORY[0x1E0C809B0];
      v2[1] = 1107296256;
      v2[2] = sub_185371FCC;
      v2[3] = &block_descriptor_83;
      v7 = _Block_copy(v2);
      sub_18518D708(v3);
      v8 = v5;
      swift_release();
      objc_msgSend(v8, sel_setSubtitleTextAttributesTransformer_, v7);
      _Block_release(v7);

      sub_18518D718(v3);
    }
    else
    {
      objc_msgSend((id)sub_1855D7CCC(), sel_setSubtitleTextAttributesTransformer_, 0);
    }
    v14 = v2[6];
  }
  else
  {
    if (!v3)
    {
      objc_msgSend((id)sub_1855D7CCC(), sel_setSubtitleTextAttributesTransformer_, 0);
      goto LABEL_10;
    }
    v9 = v2[7];
    v10 = (void *)sub_1855D7CCC();
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v3;
    *(_QWORD *)(v11 + 24) = v9;
    v2[4] = sub_1855D8DD0;
    v2[5] = v11;
    *v2 = MEMORY[0x1E0C809B0];
    v2[1] = 1107296256;
    v2[2] = sub_185371FCC;
    v2[3] = &block_descriptor_90;
    v12 = _Block_copy(v2);
    v13 = v10;
    sub_18518D708(v3);
    swift_release();
    objc_msgSend(v13, sel_setSubtitleTextAttributesTransformer_, v12);
    _Block_release(v12);

    v14 = v3;
  }
  sub_18518D718(v14);
LABEL_10:
  free(v2);
}

id UIButton.Configuration.indicator.setter(unsigned __int8 *a1)
{
  return sub_1855D5D38(a1, (SEL *)&selRef_setIndicator_);
}

id sub_1855D5D38(unsigned __int8 *a1, SEL *a2)
{
  uint64_t *v2;
  uint64_t v4;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v10;

  v4 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6 = *v2;
  if (isUniquelyReferenced_nonNull_native)
  {
    v7 = *(void **)(v6 + 16);
  }
  else
  {
    objc_msgSend(*(id *)(v6 + 16), sel_copy);
    sub_186507B1C();
    swift_unknownObjectRelease();
    sub_1851F9080(0, (unint64_t *)&unk_1EDD827B8);
    swift_dynamicCast();
    v7 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74BB8);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v10;
    swift_release();
    *v2 = v8;
  }
  return objc_msgSend(v7, *a2, v4);
}

id (*UIButton.Configuration.indicator.modify(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;

  *a1 = v1;
  UIButton.Configuration._dci_indicator.getter();
  return sub_1855D5E6C;
}

id sub_1855D5E6C(uint64_t a1, uint64_t a2)
{
  return sub_1855D6D68(a1, a2, (SEL *)&selRef_setIndicator_);
}

_QWORD *UIButton.Configuration.indicatorColorTransformer.getter@<X0>(id (**a1)()@<X8>)
{
  uint64_t v1;
  _QWORD *result;
  _QWORD *v4;
  id (*v5)();

  result = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_indicatorColorTransformer);
  if (result)
  {
    v4 = result;
    result = (_QWORD *)swift_allocObject();
    result[2] = v4;
    v5 = sub_1855D8D6C;
  }
  else
  {
    v5 = 0;
  }
  *a1 = v5;
  a1[1] = (id (*)())result;
  return result;
}

uint64_t sub_1855D5EE4@<X0>(uint64_t a1@<X0>, id (**a2)()@<X8>)
{
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t result;
  id (*v8)();

  v3 = *(void **)(*(_QWORD *)a1 + 16);
  swift_retain();
  v4 = objc_msgSend(v3, sel_indicatorColorTransformer);
  if (v4)
  {
    v5 = v4;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v5;
    result = swift_release();
    v8 = sub_1855D8D6C;
  }
  else
  {
    result = swift_release();
    v8 = 0;
    v6 = 0;
  }
  *a2 = v8;
  a2[1] = (id (*)())v6;
  return result;
}

void sub_1855D5F7C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  _QWORD v15[6];

  v8 = *a1;
  v9 = a1[1];
  sub_18518D708(*a1);
  v10 = (void *)sub_1855D7CCC();
  v11 = v10;
  if (v8)
  {
    v15[4] = v8;
    v15[5] = v9;
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 1107296256;
    v15[2] = sub_1852E82F4;
    v15[3] = a5;
    v12 = _Block_copy(v15);
    v13 = v11;
    swift_release();
  }
  else
  {
    v14 = v10;
    v12 = 0;
  }
  objc_msgSend(v11, *a6, v12);
  _Block_release(v12);

}

void UIButton.Configuration.indicatorColorTransformer.setter(uint64_t *a1)
{
  sub_185570D58(a1, (uint64_t)&block_descriptor_105_0, (SEL *)&selRef_setIndicatorColorTransformer_);
}

void (*UIButton.Configuration.indicatorColorTransformer.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  id (*v6)();

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[8] = v1;
  v4 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_indicatorColorTransformer);
  if (v4)
  {
    v5 = v4;
    v4 = (_QWORD *)swift_allocObject();
    v4[2] = v5;
    v6 = sub_1855D8D6C;
  }
  else
  {
    v6 = 0;
  }
  v3[6] = v6;
  v3[7] = v4;
  return sub_1855D60EC;
}

void sub_1855D60EC(uint64_t a1, char a2)
{
  sub_1855D6108(a1, a2, (uint64_t)&block_descriptor_111, (SEL *)&selRef_setIndicatorColorTransformer_, (uint64_t)&block_descriptor_108_0);
}

void sub_1855D6108(uint64_t a1, char a2, uint64_t a3, SEL *a4, uint64_t a5)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;

  v6 = *(_QWORD **)a1;
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  if ((a2 & 1) != 0)
  {
    sub_18518D708(*(_QWORD *)(*(_QWORD *)a1 + 48));
    v10 = (void *)sub_1855D7CCC();
    v11 = v10;
    if (v7)
    {
      v6[4] = v7;
      v6[5] = v8;
      *v6 = MEMORY[0x1E0C809B0];
      v6[1] = 1107296256;
      v6[2] = sub_1852E82F4;
      v6[3] = a5;
      v12 = _Block_copy(v6);
      v13 = v11;
      swift_release();
    }
    else
    {
      v19 = v10;
      v12 = 0;
    }
    objc_msgSend(v11, *a4, v12);
    _Block_release(v12);

    sub_18518D718(v6[6]);
  }
  else
  {
    v15 = (void *)sub_1855D7CCC();
    v16 = v15;
    if (v7)
    {
      v6[4] = v7;
      v6[5] = v8;
      *v6 = MEMORY[0x1E0C809B0];
      v6[1] = 1107296256;
      v6[2] = sub_1852E82F4;
      v6[3] = a3;
      v17 = _Block_copy(v6);
      v18 = v16;
      swift_release();
    }
    else
    {
      v20 = v15;
      v17 = 0;
    }
    objc_msgSend(v16, *a4, v17);
    _Block_release(v17);

  }
  free(v6);
}

id UIButton.Configuration.imagePlacement.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_imagePlacement);
}

id (*UIButton.Configuration.imagePlacement.modify(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_imagePlacement);
  return sub_1855D62BC;
}

id sub_1855D62BC(uint64_t *a1)
{
  return UIButton.Configuration.imagePlacement.setter(*a1);
}

id (*UIButton.Configuration.imagePadding.modify(_QWORD *a1))(double *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_imagePadding);
  *a1 = v3;
  return sub_1855D6320;
}

id sub_1855D6320(double *a1)
{
  return UIButton.Configuration.imagePadding.setter(*a1);
}

id UIButton.Configuration.titlePadding.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_titlePadding);
}

id (*UIButton.Configuration.titlePadding.modify(_QWORD *a1))(double *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_titlePadding);
  *a1 = v3;
  return sub_1855D639C;
}

id sub_1855D639C(double *a1)
{
  return UIButton.Configuration.titlePadding.setter(*a1);
}

id UIButton.Configuration.titleAlignment.getter@<X0>(_BYTE *a1@<X8>)
{
  return sub_1855D63E0((SEL *)&selRef_titleAlignment, type metadata accessor for __UIButtonConfigurationTitleAlignment, a1);
}

id sub_1855D63E0@<X0>(SEL *a1@<X0>, void (*a2)(_QWORD)@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)v3 + 16), *a1);
  if ((unint64_t)result >= 4)
  {
    sub_186507C30();
    sub_186507564();
    a2(0);
    sub_186507D74();
    sub_186507564();
    sub_186508260();
    sub_186507564();
    swift_bridgeObjectRelease();
    result = (id)sub_186507E04();
    __break(1u);
  }
  else
  {
    *a3 = (_BYTE)result;
  }
  return result;
}

id UIButton.Configuration.titleAlignment.setter(unsigned __int8 *a1)
{
  return sub_1855D5D38(a1, (SEL *)&selRef_setTitleAlignment_);
}

id (*UIButton.Configuration.titleAlignment.modify(uint64_t a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  UIButton.Configuration.titleAlignment.getter((_BYTE *)(a1 + 8));
  return sub_1855D6568;
}

id sub_1855D6568(uint64_t a1, uint64_t a2)
{
  return sub_1855D6D68(a1, a2, (SEL *)&selRef_setTitleAlignment_);
}

id UIButton.Configuration.automaticallyUpdateForSelection.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_automaticallyUpdateForSelection);
}

id UIButton.Configuration.automaticallyUpdateForSelection.setter(char a1)
{
  return sub_1855D65A4(a1, (SEL *)&selRef_setAutomaticallyUpdateForSelection_);
}

id sub_1855D65A4(char a1, SEL *a2)
{
  uint64_t *v2;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v10;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6 = *v2;
  if (isUniquelyReferenced_nonNull_native)
  {
    v7 = *(void **)(v6 + 16);
  }
  else
  {
    objc_msgSend(*(id *)(v6 + 16), sel_copy);
    sub_186507B1C();
    swift_unknownObjectRelease();
    sub_1851F9080(0, (unint64_t *)&unk_1EDD827B8);
    swift_dynamicCast();
    v7 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74BB8);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v10;
    swift_release();
    *v2 = v8;
  }
  return objc_msgSend(v7, *a2, a1 & 1);
}

id (*UIButton.Configuration.automaticallyUpdateForSelection.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_automaticallyUpdateForSelection);
  return sub_1855D66D4;
}

id sub_1855D66D4(uint64_t a1)
{
  return UIButton.Configuration.automaticallyUpdateForSelection.setter(*(_BYTE *)(a1 + 8));
}

void UIButton.Configuration.hash(into:)()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)v0 + 16);
  swift_retain();
  v2 = v1;
  sub_186507A50();
  swift_release();

}

id static UIButton.Configuration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_isEqual_, *(_QWORD *)(*(_QWORD *)a2 + 16));
}

uint64_t UIButton.Configuration.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *v0;
  sub_1865080EC();
  v2 = *(void **)(v1 + 16);
  swift_retain();
  v3 = v2;
  sub_186507A50();
  swift_release();

  return sub_186508134();
}

uint64_t _s5UIKit26UIListContentConfigurationV15ImagePropertiesV9hashValueSivg_0()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *v0;
  sub_1865080EC();
  v2 = *(void **)(v1 + 16);
  swift_retain();
  v3 = v2;
  sub_186507A50();
  swift_release();

  return sub_186508134();
}

void _s5UIKit26UIListContentConfigurationV15ImagePropertiesV4hash4intoys6HasherVz_tF_0()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)v0 + 16);
  swift_retain();
  v2 = v1;
  sub_186507A50();
  swift_release();

}

uint64_t sub_1855D68A4()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *v0;
  sub_1865080EC();
  v2 = *(void **)(v1 + 16);
  swift_retain();
  v3 = v2;
  sub_186507A50();
  swift_release();

  return sub_186508134();
}

_QWORD *sub_1855D6900@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  _QWORD *v4;

  result = objc_msgSend(*a1, sel_configuration);
  if (result)
  {
    v4 = result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74BB8);
    result = (_QWORD *)swift_allocObject();
    result[2] = v4;
  }
  *a2 = result;
  return result;
}

id (*UIButton.configuration.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  void *v1;
  _QWORD *v3;
  _QWORD *v4;

  a1[1] = v1;
  v3 = objc_msgSend(v1, sel_configuration);
  if (v3)
  {
    v4 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74BB8);
    v3 = (_QWORD *)swift_allocObject();
    v3[2] = v4;
  }
  *a1 = v3;
  return sub_1855D69C8;
}

id sub_1855D69C8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    if (v2)
      v3 = *(_QWORD *)(v2 + 16);
    else
      v3 = 0;
    v4 = (void *)a1[1];
    goto LABEL_8;
  }
  v4 = (void *)a1[1];
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 16);
LABEL_8:
    objc_msgSend(v4, sel_setConfiguration_, v3);
    return (id)swift_release();
  }
  return objc_msgSend(v4, sel_setConfiguration_, 0);
}

id UIButton.Configuration.titleLineBreakMode.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_titleLineBreakMode);
}

id (*UIButton.Configuration.titleLineBreakMode.modify(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_titleLineBreakMode);
  return sub_1855D6A8C;
}

id sub_1855D6A8C(uint64_t *a1)
{
  return UIButton.Configuration.titleLineBreakMode.setter(*a1);
}

id UIButton.Configuration.subtitleLineBreakMode.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_subtitleLineBreakMode);
}

id UIButton.Configuration.subtitleLineBreakMode.setter(uint64_t a1)
{
  return sub_1852D81B8(a1, (SEL *)&selRef_setSubtitleLineBreakMode_);
}

id (*UIButton.Configuration.subtitleLineBreakMode.modify(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_subtitleLineBreakMode);
  return sub_1855D6B10;
}

id sub_1855D6B10(uint64_t *a1)
{
  return UIButton.Configuration.subtitleLineBreakMode.setter(*a1);
}

id UIButton.Configuration.imageReservation.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_imageReservation);
}

id UIButton.Configuration.imageReservation.setter(double a1)
{
  return sub_1852C2E8C((SEL *)&selRef_setImageReservation_, a1);
}

id (*UIButton.Configuration.imageReservation.modify(_QWORD *a1))(double *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_imageReservation);
  *a1 = v3;
  return sub_1855D6B94;
}

id sub_1855D6B94(double *a1)
{
  return UIButton.Configuration.imageReservation.setter(*a1);
}

id _sSo8UIButtonC5UIKitE13ConfigurationV9indicatorAE9IndicatorOvg_0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_indicator);
  if ((unint64_t)result >= 3)
  {
    sub_186507C30();
    sub_186507564();
    type metadata accessor for __UIButtonConfigurationIndicator(0);
    sub_186507D74();
    sub_186507564();
    sub_186508260();
    sub_186507564();
    swift_bridgeObjectRelease();
    result = (id)sub_186507E04();
    __break(1u);
  }
  else
  {
    *a1 = (_BYTE)result;
  }
  return result;
}

id sub_1855D6CDC(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  return objc_msgSend((id)sub_1855D7CCC(), *a5, *a1);
}

id UIButton.Configuration._dci_indicator.setter(unsigned __int8 *a1)
{
  return sub_1855D5D38(a1, (SEL *)&selRef_setIndicator_);
}

id (*UIButton.Configuration._dci_indicator.modify(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;

  *a1 = v1;
  UIButton.Configuration._dci_indicator.getter();
  return sub_1855D5E6C;
}

id sub_1855D6D68(uint64_t a1, uint64_t a2, SEL *a3)
{
  return objc_msgSend((id)sub_1855D7CCC(), *a3, *(unsigned __int8 *)(a1 + 8));
}

Swift::Bool __swiftcall UIButton.Configuration._usesPulldownIndicator()()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_indicator) == (id)3;
}

Swift::Void __swiftcall UIButton.Configuration._setUsePulldownIndicator()()
{
  uint64_t *v0;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2 = *v0;
  if (isUniquelyReferenced_nonNull_native)
  {
    v3 = *(void **)(v2 + 16);
  }
  else
  {
    objc_msgSend(*(id *)(v2 + 16), sel_copy);
    sub_186507B1C();
    swift_unknownObjectRelease();
    sub_1851F9080(0, (unint64_t *)&unk_1EDD827B8);
    swift_dynamicCast();
    v3 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74BB8);
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v5;
    swift_release();
    *v0 = v4;
  }
  objc_msgSend(v3, sel_setIndicator_, 3);
}

id UIButton.Configuration._attributedTitle.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_attributedTitle);
}

void UIButton.Configuration._attributedTitle.setter(void *a1)
{
  sub_1852563B8(a1, (const char **)&selRef_setAttributedTitle_);
}

void (*UIButton.Configuration._attributedTitle.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_attributedTitle);
  return sub_1855D6F40;
}

void sub_1855D6F40(void **a1, char a2)
{
  sub_1855D723C(a1, a2, UIButton.Configuration._attributedTitle.setter);
}

uint64_t (*UIButton.Configuration._titleTextAttributesTransformer.getter())(uint64_t)
{
  uint64_t v0;
  uint64_t (*result)(uint64_t);

  result = (uint64_t (*)(uint64_t))objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_titleTextAttributesTransformer);
  if (result)
  {
    *(_QWORD *)(swift_allocObject() + 16) = result;
    return sub_1855D8C7C;
  }
  return result;
}

uint64_t sub_1855D6FB4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t result;
  uint64_t (*v8)@<X0>(_QWORD *@<X0>, uint64_t *@<X8>);

  v3 = *(void **)(*(_QWORD *)a1 + 16);
  swift_retain();
  v4 = objc_msgSend(v3, sel_titleTextAttributesTransformer);
  if (v4)
  {
    v5 = v4;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v5;
    swift_release();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = sub_1855D8C7C;
    *(_QWORD *)(result + 24) = v6;
    v8 = sub_1855D8C78;
  }
  else
  {
    swift_release();
    v8 = 0;
    result = 0;
  }
  *a2 = v8;
  a2[1] = result;
  return result;
}

void sub_1855D706C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_1855D8C00;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_18518D708(v1);
  UIButton.Configuration._titleTextAttributesTransformer.setter((uint64_t)v4, v3);
}

void UIButton.Configuration._titleTextAttributesTransformer.setter(uint64_t a1, uint64_t a2)
{
  sub_1855D7450(a1, a2, (uint64_t)&block_descriptor_122, (SEL *)&selRef_setTitleTextAttributesTransformer_);
}

void (*UIButton.Configuration._titleTextAttributesTransformer.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t);

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[8] = v1;
  v4 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_titleTextAttributesTransformer);
  if (v4)
  {
    v5 = v4;
    v4 = (_QWORD *)swift_allocObject();
    v4[2] = v5;
    v6 = sub_1855D8C7C;
  }
  else
  {
    v6 = 0;
  }
  v3[6] = v6;
  v3[7] = v4;
  return sub_1855D7194;
}

void sub_1855D7194(uint64_t a1, char a2)
{
  sub_1855D75D4(a1, a2, (uint64_t)&block_descriptor_128, (SEL *)&selRef_setTitleTextAttributesTransformer_, (uint64_t)&block_descriptor_125);
}

id UIButton.Configuration._attributedSubtitle.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_attributedSubtitle);
}

void UIButton.Configuration._attributedSubtitle.setter(void *a1)
{
  sub_1852563B8(a1, (const char **)&selRef_setAttributedSubtitle_);
}

void (*UIButton.Configuration._attributedSubtitle.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_attributedSubtitle);
  return sub_1855D7230;
}

void sub_1855D7230(void **a1, char a2)
{
  sub_1855D723C(a1, a2, UIButton.Configuration._attributedSubtitle.setter);
}

void sub_1855D723C(void **a1, char a2, void (*a3)(void *))
{
  void *v4;
  id v5;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v5 = v4;
    a3(v4);

  }
  else
  {
    a3(*a1);
  }
}

uint64_t (*UIButton.Configuration._subtitleTextAttributesTransformer.getter())(uint64_t)
{
  uint64_t v0;
  uint64_t (*result)(uint64_t);

  result = (uint64_t (*)(uint64_t))objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_subtitleTextAttributesTransformer);
  if (result)
  {
    *(_QWORD *)(swift_allocObject() + 16) = result;
    return sub_1855D8C7C;
  }
  return result;
}

uint64_t sub_1855D7308@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t result;
  uint64_t (*v8)@<X0>(_QWORD *@<X0>, uint64_t *@<X8>);

  v3 = *(void **)(*(_QWORD *)a1 + 16);
  swift_retain();
  v4 = objc_msgSend(v3, sel_subtitleTextAttributesTransformer);
  if (v4)
  {
    v5 = v4;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v5;
    swift_release();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = sub_1855D8C7C;
    *(_QWORD *)(result + 24) = v6;
    v8 = sub_1855D8C04;
  }
  else
  {
    swift_release();
    v8 = 0;
    result = 0;
  }
  *a2 = v8;
  a2[1] = result;
  return result;
}

void sub_1855D73C0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_1855D8C00;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_18518D708(v1);
  UIButton.Configuration._subtitleTextAttributesTransformer.setter((uint64_t)v4, v3);
}

void UIButton.Configuration._subtitleTextAttributesTransformer.setter(uint64_t a1, uint64_t a2)
{
  sub_1855D7450(a1, a2, (uint64_t)&block_descriptor_139, (SEL *)&selRef_setSubtitleTextAttributesTransformer_);
}

void sub_1855D7450(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  _QWORD v13[6];

  v8 = (void *)sub_1855D7CCC();
  v9 = v8;
  if (a1)
  {
    v13[4] = a1;
    v13[5] = a2;
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 1107296256;
    v13[2] = sub_185371FCC;
    v13[3] = a3;
    v10 = _Block_copy(v13);
    v11 = v9;
    sub_18518D708(a1);
    swift_release();
  }
  else
  {
    v12 = v8;
    v10 = 0;
  }
  objc_msgSend(v9, *a4, v10);
  sub_18518D718(a1);
  _Block_release(v10);

}

void (*UIButton.Configuration._subtitleTextAttributesTransformer.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t);

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[8] = v1;
  v4 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_subtitleTextAttributesTransformer);
  if (v4)
  {
    v5 = v4;
    v4 = (_QWORD *)swift_allocObject();
    v4[2] = v5;
    v6 = sub_1855D8C7C;
  }
  else
  {
    v6 = 0;
  }
  v3[6] = v6;
  v3[7] = v4;
  return sub_1855D75B8;
}

void sub_1855D75B8(uint64_t a1, char a2)
{
  sub_1855D75D4(a1, a2, (uint64_t)&block_descriptor_145, (SEL *)&selRef_setSubtitleTextAttributesTransformer_, (uint64_t)&block_descriptor_142);
}

void sub_1855D75D4(uint64_t a1, char a2, uint64_t a3, SEL *a4, uint64_t a5)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;

  v6 = *(_QWORD **)a1;
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  if ((a2 & 1) != 0)
  {
    sub_18518D708(*(_QWORD *)(*(_QWORD *)a1 + 48));
    v10 = (void *)sub_1855D7CCC();
    v11 = v10;
    if (v7)
    {
      v6[4] = v7;
      v6[5] = v8;
      *v6 = MEMORY[0x1E0C809B0];
      v6[1] = 1107296256;
      v6[2] = sub_185371FCC;
      v6[3] = a5;
      v12 = _Block_copy(v6);
      sub_18518D708(v7);
      v13 = v11;
      swift_release();
    }
    else
    {
      v19 = v10;
      v12 = 0;
    }
    objc_msgSend(v11, *a4, v12);
    sub_18518D718(v7);
    _Block_release(v12);

    sub_18518D718(v6[6]);
  }
  else
  {
    v15 = (void *)sub_1855D7CCC();
    v16 = v15;
    if (v7)
    {
      v6[4] = v7;
      v6[5] = v8;
      *v6 = MEMORY[0x1E0C809B0];
      v6[1] = 1107296256;
      v6[2] = sub_185371FCC;
      v6[3] = a3;
      v17 = _Block_copy(v6);
      v18 = v16;
      sub_18518D708(v7);
      swift_release();
    }
    else
    {
      v20 = v15;
      v17 = 0;
    }
    objc_msgSend(v16, *a4, v17);
    sub_18518D718(v7);
    _Block_release(v17);

  }
  free(v6);
}

void __swiftcall UIButton.Configuration._bridgeToObjectiveC()(UIButtonConfiguration *__return_ptr retstr)
{
  uint64_t v1;

  objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_copy);
  sub_186507B1C();
  swift_unknownObjectRelease();
  sub_1851F9080(0, (unint64_t *)&unk_1EDD827B8);
  swift_dynamicCast();
}

uint64_t static UIButton.Configuration._forceBridgeFromObjectiveC(_:result:)(void *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v5;

  swift_release();
  objc_msgSend(a1, sel_copy);
  sub_186507B1C();
  swift_unknownObjectRelease();
  sub_1851F9080(0, (unint64_t *)&unk_1EDD827B8);
  swift_dynamicCast();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74BB8);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v5;
  *a2 = result;
  return result;
}

uint64_t static UIButton.Configuration._conditionallyBridgeFromObjectiveC(_:result:)(void *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v6;

  swift_release();
  objc_msgSend(a1, sel_copy);
  sub_186507B1C();
  swift_unknownObjectRelease();
  sub_1851F9080(0, (unint64_t *)&unk_1EDD827B8);
  swift_dynamicCast();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74BB8);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v6;
  *a2 = v4;
  return 1;
}

void static UIButton.Configuration._unconditionallyBridgeFromObjectiveC(_:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;

  if (a1)
  {
    v3 = a1;
    objc_msgSend(v3, sel_copy);
    sub_186507B1C();
    swift_unknownObjectRelease();
    sub_1851F9080(0, (unint64_t *)&unk_1EDD827B8);
    swift_dynamicCast();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74BB8);
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v5;

    *a2 = v4;
  }
  else
  {
    sub_186507C30();
    swift_bridgeObjectRelease();
    sub_1851F9080(0, (unint64_t *)&unk_1EDD827B8);
    sub_186508260();
    sub_186507564();
    swift_bridgeObjectRelease();
    sub_186507564();
    sub_186508260();
    sub_186507564();
    swift_bridgeObjectRelease();
    sub_186507E04();
    __break(1u);
  }
}

uint64_t sub_1855D7AE0()
{
  uint64_t v0;
  uint64_t v2;

  objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_copy);
  sub_186507B1C();
  swift_unknownObjectRelease();
  sub_1851F9080(0, (unint64_t *)&unk_1EDD827B8);
  swift_dynamicCast();
  return v2;
}

uint64_t sub_1855D7B64(void *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v5;

  swift_release();
  objc_msgSend(a1, sel_copy);
  sub_186507B1C();
  swift_unknownObjectRelease();
  sub_1851F9080(0, (unint64_t *)&unk_1EDD827B8);
  swift_dynamicCast();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74BB8);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v5;
  *a2 = result;
  return result;
}

uint64_t sub_1855D7C14(void *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v6;

  swift_release();
  objc_msgSend(a1, sel_copy);
  sub_186507B1C();
  swift_unknownObjectRelease();
  sub_1851F9080(0, (unint64_t *)&unk_1EDD827B8);
  swift_dynamicCast();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74BB8);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v6;
  *a2 = v4;
  return 1;
}

uint64_t sub_1855D7CCC()
{
  uint64_t *v0;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2 = *v0;
  if (isUniquelyReferenced_nonNull_native)
    return *(_QWORD *)(v2 + 16);
  objc_msgSend(*(id *)(v2 + 16), sel_copy);
  sub_186507B1C();
  swift_unknownObjectRelease();
  sub_1851F9080(0, (unint64_t *)&unk_1EDD827B8);
  swift_dynamicCast();
  v3 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74BB8);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v6;
  swift_release();
  *v0 = v4;
  return v3;
}

uint64_t sub_1855D7D9C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

id sub_1855D7DC0()
{
  uint64_t v0;

  return (id)(*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1855D7DE4(uint64_t a1)
{
  uint64_t v1;

  return sub_1855D4E38(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1855D7DEC(uint64_t a1)
{
  uint64_t v1;

  return sub_1855D39CC(a1, *(void (**)(void))(v1 + 16));
}

unint64_t sub_1855D7DF8()
{
  unint64_t result;

  result = qword_1EDD85C80;
  if (!qword_1EDD85C80)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UIButton.Configuration.Size, &type metadata for UIButton.Configuration.Size);
    atomic_store(result, (unint64_t *)&qword_1EDD85C80);
  }
  return result;
}

unint64_t sub_1855D7E40()
{
  unint64_t result;

  result = qword_1EDD85C88;
  if (!qword_1EDD85C88)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UIButton.Configuration.TitleAlignment, &type metadata for UIButton.Configuration.TitleAlignment);
    atomic_store(result, (unint64_t *)&qword_1EDD85C88);
  }
  return result;
}

unint64_t sub_1855D7E88()
{
  unint64_t result;

  result = qword_1EDD85C90;
  if (!qword_1EDD85C90)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UIButton.Configuration.CornerStyle, &type metadata for UIButton.Configuration.CornerStyle);
    atomic_store(result, (unint64_t *)&qword_1EDD85C90);
  }
  return result;
}

unint64_t sub_1855D7ED0()
{
  unint64_t result;

  result = qword_1EDD85C98;
  if (!qword_1EDD85C98)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UIButton.Configuration.MacIdiomStyle, &type metadata for UIButton.Configuration.MacIdiomStyle);
    atomic_store(result, (unint64_t *)&qword_1EDD85C98);
  }
  return result;
}

unint64_t sub_1855D7F18()
{
  unint64_t result;

  result = qword_1EDD85CA0;
  if (!qword_1EDD85CA0)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UIButton.Configuration.Indicator, &type metadata for UIButton.Configuration.Indicator);
    atomic_store(result, (unint64_t *)&qword_1EDD85CA0);
  }
  return result;
}

unint64_t sub_1855D7F60()
{
  unint64_t result;

  result = qword_1EDD85CA8;
  if (!qword_1EDD85CA8)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UIButton.Configuration, &type metadata for UIButton.Configuration);
    atomic_store(result, (unint64_t *)&qword_1EDD85CA8);
  }
  return result;
}

uint64_t sub_1855D7FA4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = UIButton.Configuration.background.getter(&v3);
  *a1 = v3;
  return result;
}

void sub_1855D7FE4(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  swift_retain();
  UIButton.Configuration.background.setter(&v1);
}

_QWORD *sub_1855D8024@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_152Tm((_QWORD *(*)(uint64_t *__return_ptr))UIButton.Configuration.buttonSize.getter, a1);
}

_QWORD *sub_1855D8034@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_152Tm((_QWORD *(*)(uint64_t *__return_ptr))UIButton.Configuration.macIdiomStyle.getter, a1);
}

_QWORD *keypath_get_152Tm@<X0>(_QWORD *(*a1)(uint64_t *__return_ptr)@<X3>, _BYTE *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = a1(&v4);
  *a2 = v4;
  return result;
}

id sub_1855D8080(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1855D6CDC(a1, a2, a3, a4, (SEL *)&selRef_setMacIdiomStyle_);
}

id sub_1855D809C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_156Tm(a1, (SEL *)&selRef_baseForegroundColor, a2);
}

void sub_1855D80A8(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  UIButton.Configuration.baseForegroundColor.setter(v1);
}

id sub_1855D80D4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_156Tm(a1, (SEL *)&selRef_baseBackgroundColor, a2);
}

void sub_1855D80E0(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  UIButton.Configuration.baseBackgroundColor.setter(v1);
}

id sub_1855D810C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_156Tm(a1, (SEL *)&selRef_image, a2);
}

void sub_1855D8118(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  UIButton.Configuration.image.setter(v1);
}

void sub_1855D8148(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1855D5F7C(a1, a2, a3, a4, (uint64_t)&block_descriptor_270, (SEL *)&selRef_setImageColorTransformer_);
}

id sub_1855D816C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_156Tm(a1, (SEL *)&selRef_preferredSymbolConfigurationForImage, a2);
}

void sub_1855D8178(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v1);
}

id sub_1855D81A4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_showsActivityIndicator);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1855D81D8(char *a1)
{
  return UIButton.Configuration.showsActivityIndicator.setter(*a1);
}

void sub_1855D8200(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1855D5F7C(a1, a2, a3, a4, (uint64_t)&block_descriptor_263, (SEL *)&selRef_setActivityIndicatorColorTransformer_);
}

void sub_1855D8224(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1855D521C(a1, (SEL *)&selRef_title, a2);
}

void sub_1855D8240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1855D52A8(a1, a2, a3, a4, (SEL *)&selRef_setTitle_);
}

uint64_t sub_1855D825C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1855D55A8(a1, (SEL *)&selRef_attributedTitle, a2);
}

uint64_t sub_1855D8278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1855D56C4(a1, a2, a3, a4, (uint64_t (*)(char *))UIButton.Configuration.attributedTitle.setter);
}

uint64_t sub_1855D8298(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_175Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t *))UIButton.Configuration.titleTextAttributesTransformer.setter);
}

void sub_1855D82A4(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1855D521C(a1, (SEL *)&selRef_subtitle, a2);
}

void sub_1855D82C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1855D52A8(a1, a2, a3, a4, (SEL *)&selRef_setSubtitle_);
}

uint64_t sub_1855D82DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1855D55A8(a1, (SEL *)&selRef_attributedSubtitle, a2);
}

uint64_t sub_1855D82F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1855D56C4(a1, a2, a3, a4, (uint64_t (*)(char *))UIButton.Configuration.attributedSubtitle.setter);
}

uint64_t sub_1855D8318(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_175Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t *))UIButton.Configuration.subtitleTextAttributesTransformer.setter);
}

uint64_t keypath_set_175Tm(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *))
{
  uint64_t v6;
  uint64_t v8[2];

  v6 = a1[1];
  v8[0] = *a1;
  v8[1] = v6;
  sub_18518D708(v8[0]);
  return a5(v8);
}

_QWORD *sub_1855D8364@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_152Tm((_QWORD *(*)(uint64_t *__return_ptr))UIButton.Configuration.indicator.getter, a1);
}

id sub_1855D8370(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1855D6CDC(a1, a2, a3, a4, (SEL *)&selRef_setIndicator_);
}

void sub_1855D8390(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1855D5F7C(a1, a2, a3, a4, (uint64_t)&block_descriptor_240, (SEL *)&selRef_setIndicatorColorTransformer_);
}

id sub_1855D83B4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_contentInsets);
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  return result;
}

id sub_1855D83EC(double *a1)
{
  return UIButton.Configuration.contentInsets.setter(*a1, a1[1], a1[2], a1[3]);
}

id sub_1855D8414@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_imagePlacement);
  *a2 = result;
  return result;
}

id sub_1855D8448(uint64_t *a1)
{
  return UIButton.Configuration.imagePlacement.setter(*a1);
}

id sub_1855D846C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_imagePadding);
  *a2 = v4;
  return result;
}

id sub_1855D84A0(double *a1)
{
  return UIButton.Configuration.imagePadding.setter(*a1);
}

id sub_1855D84C4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_titlePadding);
  *a2 = v4;
  return result;
}

id sub_1855D84F8(double *a1)
{
  return UIButton.Configuration.titlePadding.setter(*a1);
}

_QWORD *sub_1855D851C@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_152Tm((_QWORD *(*)(uint64_t *__return_ptr))UIButton.Configuration.titleAlignment.getter, a1);
}

id sub_1855D8528(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1855D6CDC(a1, a2, a3, a4, (SEL *)&selRef_setTitleAlignment_);
}

id sub_1855D8544@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_automaticallyUpdateForSelection);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1855D8578(char *a1)
{
  return UIButton.Configuration.automaticallyUpdateForSelection.setter(*a1);
}

id sub_1855D85A0(uint64_t a1, id *a2)
{
  uint64_t v2;

  if (*(_QWORD *)a1)
    v2 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  else
    v2 = 0;
  return objc_msgSend(*a2, sel_setConfiguration_, v2);
}

id sub_1855D85C4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_titleLineBreakMode);
  *a2 = result;
  return result;
}

id sub_1855D85F8(uint64_t *a1)
{
  return UIButton.Configuration.titleLineBreakMode.setter(*a1);
}

id sub_1855D861C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_subtitleLineBreakMode);
  *a2 = result;
  return result;
}

id sub_1855D8650(uint64_t *a1)
{
  return UIButton.Configuration.subtitleLineBreakMode.setter(*a1);
}

id sub_1855D8674@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_imageReservation);
  *a2 = v4;
  return result;
}

id sub_1855D86A8(double *a1)
{
  return UIButton.Configuration.imageReservation.setter(*a1);
}

_QWORD *sub_1855D86CC@<X0>(_BYTE *a1@<X8>)
{
  return keypath_get_152Tm((_QWORD *(*)(uint64_t *__return_ptr))UIButton.Configuration._dci_indicator.getter, a1);
}

id sub_1855D86D8(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1855D6CDC(a1, a2, a3, a4, (SEL *)&selRef_setIndicator_);
}

id sub_1855D86F4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_156Tm(a1, (SEL *)&selRef_attributedTitle, a2);
}

void sub_1855D8700(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  UIButton.Configuration._attributedTitle.setter(v1);
}

id sub_1855D8734@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_156Tm(a1, (SEL *)&selRef_attributedSubtitle, a2);
}

id keypath_get_156Tm@<X0>(uint64_t a1@<X0>, SEL *a2@<X3>, _QWORD *a3@<X8>)
{
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), *a2);
  *a3 = result;
  return result;
}

void sub_1855D8778(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  UIButton.Configuration._attributedSubtitle.setter(v1);
}

_QWORD *initializeBufferWithCopyOfBuffer for UIConfigurationTextAttributesTransformer(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for UIConfigurationTextAttributesTransformer(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for UIConfigurationTextAttributesTransformer(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for UIButton.Configuration.Size()
{
  return &type metadata for UIButton.Configuration.Size;
}

ValueMetadata *type metadata accessor for UIButton.Configuration.TitleAlignment()
{
  return &type metadata for UIButton.Configuration.TitleAlignment;
}

uint64_t _s13ConfigurationV11CornerStyleOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13ConfigurationV11CornerStyleOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1855D8944 + 4 * byte_18666A585[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1855D8978 + 4 * asc_18666A580[v4]))();
}

uint64_t sub_1855D8978(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1855D8980(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1855D8988);
  return result;
}

uint64_t sub_1855D8994(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1855D899CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1855D89A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1855D89A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s23InProcessAnimationStateC10UpdateTypeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13ConfigurationV4SizeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1855D8A90 + 4 * byte_18666A58F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1855D8AC4 + 4 * byte_18666A58A[v4]))();
}

uint64_t sub_1855D8AC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1855D8ACC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1855D8AD4);
  return result;
}

uint64_t sub_1855D8AE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1855D8AE8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1855D8AEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1855D8AF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UIButton.Configuration.MacIdiomStyle()
{
  return &type metadata for UIButton.Configuration.MacIdiomStyle;
}

uint64_t _s13ConfigurationV9IndicatorOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1855D8B5C + 4 * byte_18666A599[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1855D8B90 + 4 * byte_18666A594[v4]))();
}

uint64_t sub_1855D8B90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1855D8B98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1855D8BA0);
  return result;
}

uint64_t sub_1855D8BAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1855D8BB4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1855D8BB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1855D8BC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UIButton.Configuration.Indicator()
{
  return &type metadata for UIButton.Configuration.Indicator;
}

uint64_t sub_1855D8BDC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1855D8C04@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1855D8C30(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16);
  v5 = a1;
  v2(&v4, &v5);
  return v4;
}

uint64_t sub_1855D8DD4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1855D8DF4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1855D8E14(char a1, char a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(a3 + 16))(a3, a1 & 1, a2 & 1);
}

uint64_t sub_1855D8E30(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1855D8E6C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  void *v6;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  void (*v20)(double *, double *, _QWORD, _QWORD, uint64_t (*)(uint64_t *, uint64_t), uint64_t, _QWORD, _QWORD, uint64_t, uint64_t);
  double v21;
  double v22;

  if (__currentViewAnimationState)
  {
    v12 = result;
    _s23InProcessAnimationStateCMa();
    result = swift_dynamicCastClass();
    if (result)
    {
      if (!sub_1856BC50C())
      {
        v13 = swift_allocObject();
        swift_unknownObjectWeakInit();
        _s13AnimationInfoCMa();
        swift_allocObject();
        v14 = v6;
        v15 = sub_1856BC7F8(v14, (uint64_t)sub_1855DF374, v13);
        -[UIView set__swiftAnimationInfo:]((uint64_t)v14, v15);
      }
      sub_1855E79B4(v12, a2);
      v17 = v16;
      swift_release();
      ObjectType = swift_getObjectType();
      v21 = a6;
      v22 = a5;
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = a3;
      *(_QWORD *)(v19 + 24) = a4;
      v20 = *(void (**)(double *, double *, _QWORD, _QWORD, uint64_t (*)(uint64_t *, uint64_t), uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(v17 + 192);
      swift_retain();
      v20(&v22, &v21, 0, 0, sub_1855DFCA0, v19, 0, 0, ObjectType, v17);
      swift_release();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1855D8FF8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  _QWORD aBlock[6];

  v7 = sub_186507318();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_186507330();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  sub_1851F9080(0, (unint64_t *)&qword_1ECD75338);
  v16 = (void *)sub_186507978();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a3;
  v17[3] = a4;
  v17[4] = v15;
  aBlock[4] = sub_1855DFCCC;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18530A69C;
  aBlock[3] = &block_descriptor_361;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_186507324();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1855DFCF4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83230);
  sub_1855DFD3C();
  sub_186507B34();
  MEMORY[0x186DC49B4](0, v14, v10, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1855D929C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_186507AA4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v16 - v11;
  (*(void (**)(uint64_t, uint64_t, double))(a2 + 176))(a1, a2, a4);
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, AssociatedTypeWitness) == 1)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  else
  {
    *(_QWORD *)(a3 + 24) = AssociatedTypeWitness;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a3);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v13 + 32))(boxed_opaque_existential_0, v12, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_1855D9504(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  id v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[3];
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;

  v7 = v6;
  v14 = sub_1856BC50C();
  if (v14)
  {
    v15 = (_QWORD *)v14;
  }
  else
  {
    v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    _s13AnimationInfoCMa();
    swift_allocObject();
    v17 = a3;
    v18 = v6;
    v15 = sub_1856BC7F8(v18, (uint64_t)sub_1855DF374, v16);
    v19 = (uint64_t)v18;
    a3 = v17;
    -[UIView set__swiftAnimationInfo:](v19, v15);
  }
  sub_18519F0C4(a1, (uint64_t)&v46, &qword_1ECD75B20);
  if (!v47)
  {
    swift_bridgeObjectRetain();
    v32 = sub_1855C7CE0(a5, a6);
    if (v32 == 13)
    {
      v48 = 0u;
      v49 = 0u;
    }
    else
    {
      sub_1855C7864(v32);
      v37 = v36;
      v42 = a3;
      v39 = v38;
      v44 = v36;
      v45 = v38;
      __swift_allocate_boxed_opaque_existential_0(v43);
      sub_186507E4C();
      v40 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v39 + 64);
      v41 = v39;
      a3 = v42;
      v40(&v48, v37, v41);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v43);
    }
    sub_18519F088((uint64_t)&v46, &qword_1ECD75B20);
    if (*((_QWORD *)&v49 + 1))
      goto LABEL_6;
LABEL_18:
    swift_release();
    return sub_18519F088((uint64_t)&v48, &qword_1ECD75B20);
  }
  sub_1850F6908(&v46, &v48);
  if (!*((_QWORD *)&v49 + 1))
    goto LABEL_18;
LABEL_6:
  v20 = sub_1850F6908(&v48, v43);
  signpost_c2_removePresentationModifier_end(v20, v21);
  v22 = (os_unfair_lock_s *)(v15[2] + 16);
  os_unfair_lock_lock(v22);
  signpost_c2_removePresentationModifier_end(v23, v24);
  v25 = sub_1855DDDC8(v43, a2, a3, a4 & 1, a5, a6, (uint64_t)v15);
  os_unfair_lock_unlock(v22);
  if (v25)
  {
    v26 = v25;
    v27 = pthread_main_np();
    if ((_DWORD)v27 == 1)
    {
      signpost_c2_removePresentationModifier_end(v27, v28);
      v29 = objc_msgSend(v7, sel_layer);
      objc_msgSend(v29, sel_removePresentationModifier_, v26);

      signpost_c2_removePresentationModifier_end(v30, v31);
    }
    else
    {
      if (qword_1EDD831E0 != -1)
        swift_once();
      v33 = swift_allocObject();
      *(_QWORD *)(v33 + 16) = v15;
      *(_QWORD *)(v33 + 24) = v26;
      v34 = v26;
      swift_retain();
      sub_18577CC40((uint64_t)sub_1855DF380, v33);

      swift_release();
    }
  }
  swift_release();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v43);
}

uint64_t sub_1855D991C(uint64_t a1, uint64_t a2)
{
  void *v2;
  _QWORD *v3;
  void *v4;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  void *v16;
  id v17;
  void *v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  os_unfair_lock_t lock;

  v4 = v2;
  result = sub_1856BC50C();
  if (result)
  {
    v9 = (_QWORD *)result;
    signpost_c2_removePresentationModifier_end(result, v8);
    v10 = (os_unfair_lock_s *)(v9[2] + 16);
    os_unfair_lock_lock(v10);
    signpost_c2_removePresentationModifier_end(v11, v12);
    swift_beginAccess();
    v13 = v9[7];
    if (*(_QWORD *)(v13 + 16))
    {
      swift_bridgeObjectRetain();
      v14 = sub_1855C4284(a1, a2);
      if ((v15 & 1) != 0)
      {
        v16 = *(void **)(*(_QWORD *)(v13 + 56) + 8 * v14);
        swift_endAccess();
        v17 = v16;
        swift_bridgeObjectRelease();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v18 = (void *)sub_1856BE7DC(a1, a2);
        swift_endAccess();
        swift_bridgeObjectRelease();

        if (sub_1856BC67C())
        {
          v19 = (void (*)(uint64_t))v9[4];
          if (v19)
          {
            v9[4] = 0;
            v9[5] = 0;
            swift_retain();
            v20 = sub_18518D718((uint64_t)v19);
            v19(v20);
            sub_18518D718((uint64_t)v19);
          }
        }
LABEL_10:
        swift_beginAccess();
        v21 = (_QWORD *)v9[8];
        if (!v21[2])
        {
          swift_endAccess();
          goto LABEL_23;
        }
        swift_bridgeObjectRetain();
        v22 = sub_1855C4284(a1, a2);
        if ((v23 & 1) == 0)
        {
          swift_endAccess();
          swift_bridgeObjectRelease();
          goto LABEL_23;
        }
        lock = v10;
        v24 = *(_QWORD *)(v21[7] + 8 * v22);
        swift_endAccess();
        swift_bridgeObjectRelease();
        if (qword_1EDD831E0 != -1)
          swift_once();
        v25 = (_QWORD *)qword_1EDDA8748;
        v26 = *(_QWORD *)(qword_1EDDA8748 + 336);
        v27 = __OFSUB__(v26, 1);
        v28 = v26 - 1;
        if (v27)
        {
          __break(1u);
        }
        else
        {
          *(_QWORD *)(qword_1EDDA8748 + 336) = v28;
          v3 = v25 + 16;
          swift_beginAccess();
          v21 = (_QWORD *)v25[16];
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v25[16] = v21;
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            if ((v24 & 0x8000000000000000) == 0)
              goto LABEL_17;
            goto LABEL_33;
          }
        }
        v21 = sub_1857854AC(v21);
        *v3 = v21;
        if ((v24 & 0x8000000000000000) == 0)
        {
LABEL_17:
          if (v24 < v21[2])
          {
            v30 = &v21[2 * v24];
            v30[4] = signpost_c2_removePresentationModifier_end;
            v30[5] = 0;
            swift_endAccess();
            swift_release();
            swift_beginAccess();
            swift_bridgeObjectRetain();
            sub_1856BE700(a1, a2);
            swift_endAccess();
            swift_bridgeObjectRelease();
            v10 = lock;
            if (sub_1856BC67C())
            {
              v31 = (void (*)(uint64_t))v9[4];
              if (v31)
              {
                v9[4] = 0;
                v9[5] = 0;
                swift_retain();
                v32 = sub_18518D718((uint64_t)v31);
                v31(v32);
                sub_18518D718((uint64_t)v31);
              }
            }
LABEL_23:
            os_unfair_lock_unlock(v10);
            if (!v16)
              return swift_release();
            v25 = v16;
            v33 = pthread_main_np();
            if ((_DWORD)v33 == 1)
            {
              signpost_c2_removePresentationModifier_end(v33, v34);
              v35 = objc_msgSend(v4, sel_layer);
              objc_msgSend(v35, sel_removePresentationModifier_, v25);

              signpost_c2_removePresentationModifier_end(v36, v37);
              return swift_release();
            }
            if (qword_1EDD831E0 == -1)
            {
LABEL_28:
              v38 = swift_allocObject();
              *(_QWORD *)(v38 + 16) = v9;
              *(_QWORD *)(v38 + 24) = v25;
              v39 = v25;
              swift_retain();
              sub_18577CC40((uint64_t)sub_1855E017C, v38);

              swift_release();
              return swift_release();
            }
LABEL_35:
            swift_once();
            goto LABEL_28;
          }
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      swift_endAccess();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_endAccess();
    }
    v16 = 0;
    goto LABEL_10;
  }
  return result;
}

void sub_1855D9D8C(void *a1)
{
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD v8[6];

  v2 = objc_msgSend(a1, sel_layer);
  v3 = objc_msgSend(v2, sel_context);

  if (!v3)
  {
    v4 = (void *)objc_opt_self();
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = a1;
    v8[4] = sub_1855DFC5C;
    v8[5] = v5;
    v8[0] = MEMORY[0x1E0C809B0];
    v8[1] = 1107296256;
    v8[2] = sub_18530A69C;
    v8[3] = &block_descriptor_343;
    v6 = _Block_copy(v8);
    v7 = a1;
    swift_release();
    objc_msgSend(v4, sel__performWithoutRetargetingAnimations_, v6);
    _Block_release(v6);
  }
}

uint64_t sub_1855D9F20(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t result;
  id ObjCClassFromMetadata;
  uint64_t aBlock;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t (*v28)();
  _QWORD *v29;

  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 0;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a4;
  v14[4] = a5;
  ObjCClassFromMetadata = (id)swift_getObjCClassFromMetadata();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  v28 = sub_185281934;
  v29 = (_QWORD *)v15;
  v16 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v25 = 1107296256;
  v26 = sub_1855D8DF4;
  v27 = &block_descriptor_320;
  v17 = _Block_copy(&aBlock);
  swift_retain();
  sub_18518D708(a4);
  swift_retain();
  swift_release();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v13;
  *(_BYTE *)(v18 + 24) = a1;
  *(_QWORD *)(v18 + 32) = a6;
  *(_QWORD *)(v18 + 40) = a7;
  v28 = (uint64_t (*)())sub_1855DFB94;
  v29 = (_QWORD *)v18;
  aBlock = v16;
  v25 = 1107296256;
  v26 = sub_18530A69C;
  v27 = &block_descriptor_326;
  v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v28 = sub_1855E0180;
  v29 = v14;
  aBlock = v16;
  v25 = 1107296256;
  v26 = sub_1855D8E30;
  v27 = &block_descriptor_329;
  v20 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(ObjCClassFromMetadata, sel__setupAnimationWithDuration_delay_view_options_factory_animations_start_animationStateGenerator_completion_, 0, 10752, 0, v17, 0, v19, 0.0, 0.0, v20);
  swift_release();
  _Block_release(v20);
  _Block_release(v19);
  _Block_release(v17);
  swift_release();
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v13 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1855DA1A0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t result;
  id ObjCClassFromMetadata;
  uint64_t aBlock;
  uint64_t v29;
  void *v30;
  void *v31;
  uint64_t (*v32)();
  _QWORD *v33;

  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v17;
  v18[3] = a4;
  v18[4] = a5;
  ObjCClassFromMetadata = (id)swift_getObjCClassFromMetadata();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a2;
  *(_QWORD *)(v19 + 24) = a3;
  v32 = sub_185281934;
  v33 = (_QWORD *)v19;
  v20 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v29 = 1107296256;
  v30 = sub_1855D8DF4;
  v31 = &block_descriptor_261;
  v21 = _Block_copy(&aBlock);
  swift_retain();
  sub_18518D708(a4);
  swift_retain();
  swift_release();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v17;
  *(double *)(v22 + 24) = a8;
  *(double *)(v22 + 32) = a9;
  *(_BYTE *)(v22 + 40) = a1;
  *(_QWORD *)(v22 + 48) = a6;
  *(_QWORD *)(v22 + 56) = a7;
  v32 = (uint64_t (*)())sub_1855DFB08;
  v33 = (_QWORD *)v22;
  aBlock = v20;
  v29 = 1107296256;
  v30 = sub_18530A69C;
  v31 = &block_descriptor_267;
  v23 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v32 = sub_1855E0180;
  v33 = v18;
  aBlock = v20;
  v29 = 1107296256;
  v30 = sub_1855D8E30;
  v31 = &block_descriptor_270_0;
  v24 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(ObjCClassFromMetadata, sel__setupAnimationWithDuration_delay_view_options_factory_animations_start_animationStateGenerator_completion_, 0, 10752, 0, v21, 0, v23, 0.0, 0.0, v24);
  swift_release();
  _Block_release(v24);
  _Block_release(v23);
  _Block_release(v21);
  swift_release();
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v17 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1855DA434(uint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  double v17;
  double v18;
  void *ObjCClassFromMetadata;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  uint64_t aBlock;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t (*v35)();
  _QWORD *v36;

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v14;
  v15[3] = a6;
  v15[4] = a7;
  objc_opt_self();
  v16 = (void *)swift_dynamicCastObjCClass();
  swift_retain();
  sub_18518D708(a6);
  if (v16)
  {
    objc_msgSend(v16, sel_response);
    v18 = v17;
  }
  else
  {
    v18 = 0.0;
  }
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a4;
  *(_QWORD *)(v20 + 24) = a5;
  v35 = sub_185281934;
  v36 = (_QWORD *)v20;
  v21 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v32 = 1107296256;
  v33 = sub_1855D8DF4;
  v34 = &block_descriptor_224;
  v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v14;
  *(_QWORD *)(v23 + 24) = a1;
  *(_BYTE *)(v23 + 32) = a2 & 1;
  *(_BYTE *)(v23 + 33) = a3 & 1;
  *(_QWORD *)(v23 + 40) = a8;
  *(_QWORD *)(v23 + 48) = a9;
  v35 = (uint64_t (*)())sub_1855DFAB4;
  v36 = (_QWORD *)v23;
  aBlock = v21;
  v32 = 1107296256;
  v33 = sub_18530A69C;
  v34 = &block_descriptor_230;
  v24 = _Block_copy(&aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  v35 = sub_1855E0180;
  v36 = v15;
  aBlock = v21;
  v32 = 1107296256;
  v33 = sub_1855D8E30;
  v34 = &block_descriptor_233;
  v25 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(ObjCClassFromMetadata, sel__setupAnimationWithDuration_delay_view_options_factory_animations_start_animationStateGenerator_completion_, 0, 10752, 0, v22, 0, v24, v18, 0.0, v25);
  swift_release();
  _Block_release(v25);
  _Block_release(v24);
  _Block_release(v22);
  swift_release();
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1855DA714(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  _QWORD *v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  void *v23;
  void *v24;
  uint64_t result;
  id ObjCClassFromMetadata;
  uint64_t aBlock;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t (*v33)();
  _QWORD *v34;

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v14;
  v15[3] = a5;
  v15[4] = a6;
  ObjCClassFromMetadata = (id)swift_getObjCClassFromMetadata();
  v16 = *(double *)(a1 + 8);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a3;
  *(_QWORD *)(v17 + 24) = a4;
  v33 = sub_185281934;
  v34 = (_QWORD *)v17;
  v18 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v30 = 1107296256;
  v31 = sub_1855D8DF4;
  v32 = &block_descriptor_184;
  v19 = _Block_copy(&aBlock);
  swift_retain();
  sub_18518D708(a5);
  swift_retain();
  swift_release();
  v20 = swift_allocObject();
  v21 = *(_OWORD *)a1;
  *(_OWORD *)(v20 + 40) = *(_OWORD *)(a1 + 16);
  v22 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v20 + 56) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v20 + 72) = v22;
  *(_QWORD *)(v20 + 16) = v14;
  *(_QWORD *)(v20 + 88) = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(v20 + 24) = v21;
  *(_BYTE *)(v20 + 96) = a2;
  *(_QWORD *)(v20 + 104) = a7;
  *(_QWORD *)(v20 + 112) = a8;
  v33 = (uint64_t (*)())sub_1855DF9C8;
  v34 = (_QWORD *)v20;
  aBlock = v18;
  v30 = 1107296256;
  v31 = sub_18530A69C;
  v32 = &block_descriptor_190;
  v23 = _Block_copy(&aBlock);
  swift_retain();
  sub_1855DFA14(a1);
  swift_retain();
  swift_release();
  v33 = sub_1855E0180;
  v34 = v15;
  aBlock = v18;
  v30 = 1107296256;
  v31 = sub_1855D8E30;
  v32 = &block_descriptor_193;
  v24 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(ObjCClassFromMetadata, sel__setupAnimationWithDuration_delay_view_options_factory_animations_start_animationStateGenerator_completion_, 0, 10752, 0, v19, 0, v23, v16, 0.0, v24);
  swift_release();
  _Block_release(v24);
  _Block_release(v23);
  _Block_release(v19);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v14 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1855DA9C8(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t result;
  id ObjCClassFromMetadata;
  uint64_t aBlock;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t (*v28)();
  _QWORD *v29;

  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 0;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a4;
  v14[4] = a5;
  ObjCClassFromMetadata = (id)swift_getObjCClassFromMetadata();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  v28 = sub_185281934;
  v29 = (_QWORD *)v15;
  v16 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v25 = 1107296256;
  v26 = sub_1855D8DF4;
  v27 = &block_descriptor_147;
  v17 = _Block_copy(&aBlock);
  swift_retain();
  sub_18518D708(a4);
  swift_retain();
  swift_release();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v13;
  *(_BYTE *)(v18 + 24) = a1;
  *(_QWORD *)(v18 + 32) = a6;
  *(_QWORD *)(v18 + 40) = a7;
  v28 = (uint64_t (*)())sub_1855DF948;
  v29 = (_QWORD *)v18;
  aBlock = v16;
  v25 = 1107296256;
  v26 = sub_18530A69C;
  v27 = &block_descriptor_153;
  v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v28 = sub_1855E0180;
  v29 = v14;
  aBlock = v16;
  v25 = 1107296256;
  v26 = sub_1855D8E30;
  v27 = &block_descriptor_156;
  v20 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(ObjCClassFromMetadata, sel__setupAnimationWithDuration_delay_view_options_factory_animations_start_animationStateGenerator_completion_, 0, 10752, 0, v17, 0, v19, 0.0, 0.0, v20);
  swift_release();
  _Block_release(v20);
  _Block_release(v19);
  _Block_release(v17);
  swift_release();
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v13 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1855DAC48(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t result;
  id ObjCClassFromMetadata;
  uint64_t aBlock;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t (*v28)();
  _QWORD *v29;

  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = 0;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a4;
  v14[4] = a5;
  ObjCClassFromMetadata = (id)swift_getObjCClassFromMetadata();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = a3;
  v28 = sub_185281934;
  v29 = (_QWORD *)v15;
  v16 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v25 = 1107296256;
  v26 = sub_1855D8DF4;
  v27 = &block_descriptor_111_0;
  v17 = _Block_copy(&aBlock);
  swift_retain();
  sub_18518D708(a4);
  swift_retain();
  swift_release();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v13;
  *(_BYTE *)(v18 + 24) = a1;
  *(_QWORD *)(v18 + 32) = a6;
  *(_QWORD *)(v18 + 40) = a7;
  v28 = (uint64_t (*)())sub_1855DF858;
  v29 = (_QWORD *)v18;
  aBlock = v16;
  v25 = 1107296256;
  v26 = sub_18530A69C;
  v27 = &block_descriptor_117_0;
  v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  v28 = sub_1855E0180;
  v29 = v14;
  aBlock = v16;
  v25 = 1107296256;
  v26 = sub_1855D8E30;
  v27 = &block_descriptor_120;
  v20 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(ObjCClassFromMetadata, sel__setupAnimationWithDuration_delay_view_options_factory_animations_start_animationStateGenerator_completion_, 0, 10752, 0, v17, 0, v19, 0.0, 0.0, v20);
  swift_release();
  _Block_release(v20);
  _Block_release(v19);
  _Block_release(v17);
  swift_release();
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v13 & 1) != 0)
    __break(1u);
  return result;
}

void sub_1855DB028(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(), uint64_t a5)
{
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  double v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t (*v22)();
  uint64_t v23;

  if (a2)
  {
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = a2;
    *(_QWORD *)(v10 + 24) = a3;
    v11 = sub_1855A6A1C;
  }
  else
  {
    v10 = 0;
    v11 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = v10;
  v22 = sub_1855A6A1C;
  v23 = v12;
  v13 = MEMORY[0x1E0C809B0];
  v18 = MEMORY[0x1E0C809B0];
  v19 = 1107296256;
  v20 = sub_18530A69C;
  v21 = &block_descriptor_285;
  v14 = _Block_copy(&v18);
  sub_18518D708(a2);
  swift_release();
  if (a4)
  {
    v22 = a4;
    v23 = a5;
    v18 = v13;
    v19 = 1107296256;
    v20 = sub_1856DA9E8;
    v21 = &block_descriptor_288;
    a4 = (uint64_t (*)())_Block_copy(&v18);
    swift_retain();
    swift_release();
  }
  v15 = a1 & 1;
  if ((_DWORD)v15)
    v16 = 1000.0;
  else
    v16 = 500.0;
  if ((_DWORD)v15)
    v17 = 30.0;
  else
    v17 = 35.0;
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel__animateUsingSpringWithTension_friction_interactive_animations_completion_, v15, v14, a4, v16, v17);
  _Block_release(a4);
  _Block_release(v14);
}

uint64_t sub_1855DB7F4(uint64_t result)
{
  *(_BYTE *)(result + OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType) = 1;
  return result;
}

uint64_t sub_1855DB96C(uint64_t result)
{
  *(_BYTE *)(result + OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType) = 2;
  return result;
}

void sub_1855DBA08(char a1)
{
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  os_unfair_lock_s *v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  _QWORD *v36;
  id v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t i;
  id v42;
  void *v43;
  char v44;
  uint64_t v45;
  int64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;

  v2 = sub_1856BC50C();
  if (v2)
  {
    v3 = v2;
    v44 = a1;
    v4 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
    os_unfair_lock_lock(v4);
    swift_beginAccess();
    v5 = *(_QWORD *)(v3 + 48);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v4);
    v45 = v5 + 64;
    v6 = 1 << *(_BYTE *)(v5 + 32);
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v5 + 64);
    v48 = v3;
    swift_bridgeObjectRetain();
    v49 = v3 + 72;
    swift_beginAccess();
    v9 = 0;
    v46 = (unint64_t)(v6 + 63) >> 6;
    while (1)
    {
      while (1)
      {
        if (v8)
        {
          v10 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
          v11 = v10 | (v9 << 6);
        }
        else
        {
          v12 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
            __break(1u);
            goto LABEL_59;
          }
          if (v12 >= v46)
            goto LABEL_47;
          v13 = *(_QWORD *)(v45 + 8 * v12);
          ++v9;
          if (!v13)
          {
            v9 = v12 + 1;
            if (v12 + 1 >= v46)
              goto LABEL_47;
            v13 = *(_QWORD *)(v45 + 8 * v9);
            if (!v13)
            {
              v14 = v12 + 2;
              if (v14 >= v46)
              {
LABEL_47:
                swift_release();
                swift_bridgeObjectRelease();
                swift_release();
                a1 = v44;
                goto LABEL_48;
              }
              v13 = *(_QWORD *)(v45 + 8 * v14);
              if (!v13)
              {
                while (1)
                {
                  v9 = v14 + 1;
                  if (__OFADD__(v14, 1))
                    break;
                  if (v9 >= v46)
                    goto LABEL_47;
                  v13 = *(_QWORD *)(v45 + 8 * v9);
                  ++v14;
                  if (v13)
                    goto LABEL_20;
                }
LABEL_59:
                __break(1u);
LABEL_60:
                swift_bridgeObjectRetain();
                v40 = sub_186507E58();
                swift_bridgeObjectRelease();
                if (!v40)
                  goto LABEL_61;
LABEL_52:
                if (v40 >= 1)
                {
                  for (i = 0; i != v40; ++i)
                  {
                    if ((v9 & 0xC000000000000001) != 0)
                      v42 = (id)MEMORY[0x186DC4CB4](i, v9);
                    else
                      v42 = *(id *)(v9 + 8 * i + 32);
                    v43 = v42;
                    objc_msgSend(v42, sel___swift_removeAllRetargetableAnimations_, 1);

                  }
                  goto LABEL_61;
                }
                __break(1u);
LABEL_64:
                __break(1u);
                return;
              }
              v9 = v14;
            }
          }
LABEL_20:
          v8 = (v13 - 1) & v13;
          v11 = __clz(__rbit64(v13)) + (v9 << 6);
        }
        v15 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v11);
        v16 = *v15;
        v17 = v15[1];
        v18 = *(_QWORD *)v49;
        if (!*(_QWORD *)(*(_QWORD *)v49 + 16))
        {
          swift_bridgeObjectRetain();
          goto LABEL_38;
        }
        sub_1865080EC();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_186507540();
        v19 = sub_186508134();
        v20 = -1 << *(_BYTE *)(v18 + 32);
        v21 = v19 & ~v20;
        if (((*(_QWORD *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
          break;
LABEL_37:
        swift_bridgeObjectRelease();
LABEL_38:
        v28 = (os_unfair_lock_s *)(*(_QWORD *)(v48 + 16) + 16);
        os_unfair_lock_lock(v28);
        swift_beginAccess();
        v29 = *(_QWORD *)(v48 + 48);
        if (*(_QWORD *)(v29 + 16))
        {
          swift_bridgeObjectRetain();
          v30 = sub_1855C4284(v16, v17);
          if ((v31 & 1) != 0)
          {
            v32 = (uint64_t *)(*(_QWORD *)(v29 + 56) + 16 * v30);
            v33 = *v32;
            v34 = v32[1];
            swift_unknownObjectRetain();
          }
          else
          {
            v33 = 0;
            v34 = 0;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          v33 = 0;
          v34 = 0;
        }
        swift_endAccess();
        os_unfair_lock_unlock(v28);
        if (v33)
        {
          ObjectType = swift_getObjectType();
          v36 = (_QWORD *)swift_allocObject();
          v36[2] = v47;
          v36[3] = v16;
          v36[4] = v17;
          v37 = v47;
          sub_1855DBED4((uint64_t)sub_1855DFC0C, (uint64_t)v36, ObjectType, v34);
          swift_unknownObjectRelease();
          swift_release();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      v22 = *(_QWORD *)(v18 + 48);
      v23 = (_QWORD *)(v22 + 16 * v21);
      v24 = *v23 == v16 && v23[1] == v17;
      if (!v24 && (sub_186507FCC() & 1) == 0)
      {
        v25 = ~v20;
        do
        {
          v21 = (v21 + 1) & v25;
          if (((*(_QWORD *)(v18 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
            goto LABEL_37;
          v26 = (_QWORD *)(v22 + 16 * v21);
          v27 = *v26 == v16 && v26[1] == v17;
        }
        while (!v27 && (sub_186507FCC() & 1) == 0);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
LABEL_48:
  if ((a1 & 1) != 0)
  {
    v38 = objc_msgSend(v47, sel__allSubviews);
    if (!v38)
      goto LABEL_64;
    v39 = v38;
    sub_1851F9080(0, (unint64_t *)&qword_1EDD82CE0);
    v9 = sub_186507654();

    if ((unint64_t)v9 >> 62)
      goto LABEL_60;
    v40 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v40)
      goto LABEL_52;
LABEL_61:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1855DBED4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v18 - v14;
  (*(void (**)(uint64_t, uint64_t, __n128))(a4 + 136))(a3, a4, v13);
  (*(void (**)(uint64_t, uint64_t))(a4 + 88))(a3, a4);
  (*(void (**)(char *, char *, uint64_t (*)(), _QWORD, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 192))(v15, v11, sub_185571650, 0, 0, 0, a1, a2, a3, a4);
  v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v11, AssociatedTypeWitness);
  return ((uint64_t (*)(char *, uint64_t))v16)(v15, AssociatedTypeWitness);
}

uint64_t sub_1855DC040(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v4;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;

  swift_bridgeObjectRetain();
  result = sub_1855C7CE0(a2, a3);
  if (result != 13)
  {
    sub_1855C7864(result);
    v11 = v10;
    v13 = v12;
    if (!sub_1856BC50C())
    {
      v14 = swift_allocObject();
      swift_unknownObjectWeakInit();
      _s13AnimationInfoCMa();
      swift_allocObject();
      v15 = v4;
      v16 = sub_1856BC7F8(v15, (uint64_t)sub_1855DF374, v14);
      -[UIView set__swiftAnimationInfo:]((uint64_t)v15, v16);
    }
    sub_1856BC080(a2, a3, v11, v11, v13);
    v18 = v17;
    swift_release();
    ObjectType = swift_getObjectType();
    sub_1855DC194(a1, a4 & 1, ObjectType, v18);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1855DC194(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE v17[4];
  int v18;
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;

  v18 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = sub_186507AA4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v17[-v9];
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v17[-v13];
  v20 = a3;
  v21 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  sub_18579B904((void (*)(char *, char *))sub_1855DFBC4, (uint64_t)v19, MEMORY[0x1E0DEDCE8], AssociatedTypeWitness, v15, (uint64_t)v10);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v10, 1, AssociatedTypeWitness) == 1)
  {
    swift_getAssociatedConformanceWitness();
    sub_186507E4C();
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v14, v10, AssociatedTypeWitness);
  }
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(a4 + 160))(v14, v18 & 1, a3, a4);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v11 + 8))(v14, AssociatedTypeWitness);
}

uint64_t sub_1855DC414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _OWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[5];

  v8 = sub_1856BC50C();
  if (!v8)
    goto LABEL_10;
  v9 = v8;
  v10 = (os_unfair_lock_s *)(*(_QWORD *)(v8 + 16) + 16);
  os_unfair_lock_lock(v10);
  swift_beginAccess();
  v11 = *(_QWORD *)(v9 + 48);
  if (*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    v12 = sub_1855C4284(a1, a2);
    if ((v13 & 1) != 0)
    {
      v14 = (uint64_t *)(*(_QWORD *)(v11 + 56) + 16 * v12);
      v15 = *v14;
      v16 = v14[1];
      swift_unknownObjectRetain();
    }
    else
    {
      v15 = 0;
      v16 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 0;
    v16 = 0;
  }
  swift_endAccess();
  os_unfair_lock_unlock(v10);
  swift_release();
  if (v15)
  {
    ObjectType = swift_getObjectType();
    sub_1855DC5AC(a3 & 1, ObjectType, v16);
    return swift_unknownObjectRelease();
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRetain();
    result = sub_1855C7CE0(a1, a2);
    if (result == 13)
    {
      *a4 = 0u;
      a4[1] = 0u;
    }
    else
    {
      sub_1855C7864(result);
      v20 = v19;
      v22 = v21;
      v23[3] = v19;
      v23[4] = v21;
      __swift_allocate_boxed_opaque_existential_0(v23);
      sub_186507E4C();
      (*(void (**)(uint64_t, uint64_t))(v22 + 64))(v20, v22);
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
    }
  }
  return result;
}

uint64_t sub_1855DC5AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)&v13 - v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(a3 + 168))(a1, a2, a3, v8);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(AssociatedTypeWitness, AssociatedConformanceWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, AssociatedTypeWitness);
}

uint64_t sub_1855DCBE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *ObjCClassFromMetadata;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  void *v16;
  void *v17;
  uint64_t result;
  _QWORD v19[6];
  __int128 aBlock;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char v25;
  _BYTE v26[24];
  ValueMetadata *v27;
  unint64_t v28;
  _BYTE v29[96];

  v27 = &type metadata for VelocityTrackingAnimation;
  v28 = sub_1855DF748();
  sub_1851E75D8((uint64_t)v26, (uint64_t)v29);
  v29[80] = 2;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v26);
  if (a1)
  {
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = a1;
    *(_QWORD *)(v4 + 24) = a2;
    v5 = sub_1855A65EC;
  }
  else
  {
    v4 = 0;
    v5 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
  }
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  sub_1855DD2C4((uint64_t)v29, (uint64_t)v26);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = 0;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v7;
  v8[3] = signpost_c2_removePresentationModifier_end;
  v8[4] = 0;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1855A65EC;
  *(_QWORD *)(v10 + 24) = v6;
  *(_QWORD *)&v22 = sub_185281934;
  *((_QWORD *)&v22 + 1) = v10;
  v11 = MEMORY[0x1E0C809B0];
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v21 = sub_1855D8DF4;
  *((_QWORD *)&v21 + 1) = &block_descriptor_59_0;
  v12 = _Block_copy(&aBlock);
  sub_18518D708(a1);
  swift_retain();
  swift_retain();
  swift_release();
  sub_1855DEAD8((uint64_t)v26, (uint64_t)&aBlock);
  v13 = swift_allocObject();
  v14 = v23;
  *(_OWORD *)(v13 + 56) = v22;
  *(_OWORD *)(v13 + 72) = v14;
  *(_OWORD *)(v13 + 88) = v24;
  v15 = v21;
  *(_OWORD *)(v13 + 24) = aBlock;
  *(_QWORD *)(v13 + 16) = v7;
  *(_BYTE *)(v13 + 104) = v25;
  *(_OWORD *)(v13 + 40) = v15;
  *(_BYTE *)(v13 + 105) = 0;
  *(_QWORD *)(v13 + 112) = signpost_c2_removePresentationModifier_end;
  *(_QWORD *)(v13 + 120) = 0;
  v19[4] = sub_1855DEB10;
  v19[5] = v13;
  v19[0] = v11;
  v19[1] = 1107296256;
  v19[2] = sub_18530A69C;
  v19[3] = &block_descriptor_66;
  v16 = _Block_copy(v19);
  swift_retain();
  swift_release();
  *(_QWORD *)&v22 = sub_1855E0180;
  *((_QWORD *)&v22 + 1) = v8;
  *(_QWORD *)&aBlock = v11;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v21 = sub_1855D8E30;
  *((_QWORD *)&v21 + 1) = &block_descriptor_69;
  v17 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(ObjCClassFromMetadata, sel__setupAnimationWithDuration_delay_view_options_factory_animations_start_animationStateGenerator_completion_, 0, 10752, 0, v12, 0, v16, 0.0, 0.0, v17);
  swift_release();
  _Block_release(v17);
  _Block_release(v16);
  _Block_release(v12);
  swift_release();
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v7 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_1855DEB14((uint64_t)v26);
    swift_release();
    return sub_1855DEB40((uint64_t)v29);
  }
  return result;
}

uint64_t static UIView.animate<A>(bridgedAnimation:animations:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v14;
  _QWORD *v15;
  void *ObjCClassFromMetadata;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  void *v23;
  void *v24;
  uint64_t result;
  _QWORD v26[6];
  __int128 aBlock;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  char v32;
  uint64_t v33[11];
  _BYTE v34[88];

  v33[3] = a6;
  v33[4] = a7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(boxed_opaque_existential_0, a1, a6);
  sub_1851E75D8((uint64_t)v33, (uint64_t)v34);
  v34[80] = 2;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
  sub_1855DD2C4((uint64_t)v34, (uint64_t)v33);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 0;
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v14;
  v15[3] = a4;
  v15[4] = a5;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  *(_QWORD *)&v29 = sub_185228348;
  *((_QWORD *)&v29 + 1) = v17;
  v18 = MEMORY[0x1E0C809B0];
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v28 = sub_1855D8DF4;
  *((_QWORD *)&v28 + 1) = &block_descriptor_10;
  v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  sub_1855DEAD8((uint64_t)v33, (uint64_t)&aBlock);
  v20 = swift_allocObject();
  v21 = v30;
  *(_OWORD *)(v20 + 56) = v29;
  *(_OWORD *)(v20 + 72) = v21;
  *(_OWORD *)(v20 + 88) = v31;
  v22 = v28;
  *(_OWORD *)(v20 + 24) = aBlock;
  *(_QWORD *)(v20 + 16) = v14;
  *(_BYTE *)(v20 + 104) = v32;
  *(_OWORD *)(v20 + 40) = v22;
  *(_BYTE *)(v20 + 105) = 0;
  *(_QWORD *)(v20 + 112) = signpost_c2_removePresentationModifier_end;
  *(_QWORD *)(v20 + 120) = 0;
  v26[4] = sub_1855DEB10;
  v26[5] = v20;
  v26[0] = v18;
  v26[1] = 1107296256;
  v26[2] = sub_18530A69C;
  v26[3] = &block_descriptor_12_2;
  v23 = _Block_copy(v26);
  swift_retain();
  swift_release();
  *(_QWORD *)&v29 = sub_1855DD3B4;
  *((_QWORD *)&v29 + 1) = v15;
  *(_QWORD *)&aBlock = v18;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v28 = sub_1855D8E30;
  *((_QWORD *)&v28 + 1) = &block_descriptor_15;
  v24 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(ObjCClassFromMetadata, sel__setupAnimationWithDuration_delay_view_options_factory_animations_start_animationStateGenerator_completion_, 0, 10752, 0, v19, 0, v23, 0.0, 0.0, v24);
  swift_release();
  _Block_release(v24);
  _Block_release(v23);
  _Block_release(v19);
  swift_release();
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v14 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_1855DEB14((uint64_t)v33);
    return sub_1855DEB40((uint64_t)v34);
  }
  return result;
}

uint64_t sub_1855DD2C4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for InProcessAnimationDescription(a2, a1);
  return a2;
}

uint64_t sub_1855DD300()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1855DD324(char a1, uint64_t a2, void (*a3)(_QWORD, uint64_t))
{
  unsigned __int8 *v6;
  BOOL v7;
  uint64_t v8;
  unsigned __int8 *v9;

  swift_beginAccess();
  v6 = *(unsigned __int8 **)(a2 + 16);
  if (v6)
    v7 = a3 == 0;
  else
    v7 = 1;
  if (!v7)
  {
    v8 = v6[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted];
    v9 = v6;
    a3(a1 & 1, v8);

  }
}

void sub_1855DD3B4(char a1)
{
  uint64_t v1;

  sub_1855DD324(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD, uint64_t))(v1 + 24));
}

void sub_1855DD3C0(uint64_t a1, char a2, void (*a3)(uint64_t), double a4, double a5)
{
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  _BYTE v15[40];
  _QWORD v16[5];

  _s23InProcessAnimationStateCMa();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_pushViewAnimationState_context_, 0, 0);
  v10 = (void *)__currentViewAnimationState;
  if (__currentViewAnimationState)
  {
    v11 = swift_dynamicCastClassUnconditional();
    swift_beginAccess();
    v12 = *(void **)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v11;
    v13 = v10;

    v16[3] = &_s6GetterVN_1;
    v16[4] = &off_1E168AA38;
    *(double *)v16 = a4;
    *(double *)&v16[1] = a5;
    sub_1850F26F8((uint64_t)v16, (uint64_t)v15, &qword_1ECD74C70);
    v14 = v11 + OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter;
    swift_beginAccess();
    sub_1855DF888((uint64_t)v15, v14, &qword_1ECD74C70);
    swift_endAccess();
    *(_BYTE *)(v11 + OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_isInteractive) = a2 & 1;
    a3(v11);

  }
  else
  {
    __break(1u);
  }
}

void sub_1855DD528(uint64_t a1, uint64_t a2, char a3, char a4, void (*a5)(uint64_t))
{
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  _BYTE v15[40];
  uint64_t v16;
  char v17;
  ValueMetadata *v18;
  _UNKNOWN **v19;

  _s23InProcessAnimationStateCMa();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_pushViewAnimationState_context_, 0, 0);
  v10 = (void *)__currentViewAnimationState;
  if (__currentViewAnimationState)
  {
    v11 = swift_dynamicCastClassUnconditional();
    swift_beginAccess();
    v12 = *(void **)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v11;
    v13 = v10;

    v18 = &_s6GetterVN_2;
    v19 = &off_1E168A8A0;
    v16 = a2;
    v17 = a3 & 1;
    sub_1850F26F8((uint64_t)&v16, (uint64_t)v15, &qword_1ECD74C70);
    v14 = v11 + OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter;
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1855DF888((uint64_t)v15, v14, &qword_1ECD74C70);
    swift_endAccess();
    *(_BYTE *)(v11 + OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_isInteractive) = a4 & 1;
    a5(v11);

  }
  else
  {
    __break(1u);
  }
}

void sub_1855DD6A0(uint64_t a1, uint64_t a2, char a3, void (*a4)(uint64_t))
{
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _BYTE v16[40];
  _QWORD v17[5];

  _s23InProcessAnimationStateCMa();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_pushViewAnimationState_context_, 0, 0);
  v8 = (void *)__currentViewAnimationState;
  if (__currentViewAnimationState)
  {
    v9 = swift_dynamicCastClassUnconditional();
    swift_beginAccess();
    v10 = *(void **)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v9;
    v11 = v8;

    v17[3] = &_s6GetterVN_3;
    v17[4] = &off_1E168AAD0;
    v12 = swift_allocObject();
    v17[0] = v12;
    v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(v12 + 48) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v12 + 64) = v13;
    *(_QWORD *)(v12 + 80) = *(_QWORD *)(a2 + 64);
    v14 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v12 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v12 + 32) = v14;
    sub_1850F26F8((uint64_t)v17, (uint64_t)v16, &qword_1ECD74C70);
    v15 = v9 + OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter;
    swift_beginAccess();
    sub_1855DFA14(a2);
    sub_1855DF888((uint64_t)v16, v15, &qword_1ECD74C70);
    swift_endAccess();
    *(_BYTE *)(v9 + OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_isInteractive) = a3 & 1;
    a4(v9);

  }
  else
  {
    __break(1u);
  }
}

void sub_1855DD830(uint64_t a1, char a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  _BYTE v16[40];
  _BYTE v17[24];
  uint64_t v18;
  uint64_t v19;

  _s23InProcessAnimationStateCMa();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_pushViewAnimationState_context_, 0, 0);
  v11 = (void *)__currentViewAnimationState;
  if (__currentViewAnimationState)
  {
    v12 = swift_dynamicCastClassUnconditional();
    swift_beginAccess();
    v13 = *(void **)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v12;
    v14 = v11;

    v18 = a5;
    v19 = a6;
    sub_1850F26F8((uint64_t)v17, (uint64_t)v16, &qword_1ECD74C70);
    v15 = v12 + OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter;
    swift_beginAccess();
    sub_1855DF888((uint64_t)v16, v15, &qword_1ECD74C70);
    swift_endAccess();
    *(_BYTE *)(v12 + OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_isInteractive) = a2 & 1;
    a3(v12);

  }
  else
  {
    __break(1u);
  }
}

void sub_1855DD984(uint64_t a1, uint64_t a2, char a3, void (*a4)(uint64_t))
{
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  _BYTE v13[40];
  _QWORD v14[5];

  _s23InProcessAnimationStateCMa();
  objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_pushViewAnimationState_context_, 0, 0);
  v8 = (void *)__currentViewAnimationState;
  if (__currentViewAnimationState)
  {
    v9 = swift_dynamicCastClassUnconditional();
    swift_beginAccess();
    v10 = *(void **)(a1 + 16);
    *(_QWORD *)(a1 + 16) = v9;
    v11 = v8;

    v14[3] = &_s6GetterVN;
    v14[4] = &off_1E168AC68;
    v14[0] = swift_allocObject();
    sub_1855DEAD8(a2, v14[0] + 16);
    sub_1850F26F8((uint64_t)v14, (uint64_t)v13, &qword_1ECD74C70);
    v12 = v9 + OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter;
    swift_beginAccess();
    sub_1855DF888((uint64_t)v13, v12, &qword_1ECD74C70);
    swift_endAccess();
    *(_BYTE *)(v9 + OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_isInteractive) = a3 & 1;
    a4(v9);

  }
  else
  {
    __break(1u);
  }
}

void sub_1855DDB00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v3 = MEMORY[0x186DCA138](a1 + 24);
  if (v3)
  {
    v8 = (id)v3;
    signpost_c2_removePresentationModifier_end(v3, v4);
    v5 = objc_msgSend(v8, sel_layer);
    objc_msgSend(v5, sel_removePresentationModifier_, a2);

    signpost_c2_removePresentationModifier_end(v6, v7);
  }
}

uint64_t sub_1855DDB80()
{
  id v0;
  id v1;
  id v2;
  uint64_t v4;
  _OWORD v5[2];
  __int128 v6;
  uint64_t v7;
  __int128 v8;

  v0 = objc_msgSend((id)objc_opt_self(), sel_currentThread);
  v1 = objc_msgSend(v0, sel_threadDictionary);

  if (qword_1EDD83220 != -1)
    swift_once();
  v2 = objc_msgSend(v1, sel_objectForKey_, qword_1EDD83210);

  if (v2)
  {
    sub_186507B1C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1850F26F8((uint64_t)v5, (uint64_t)&v6, &qword_1ECD75B20);
  if (v7)
  {
    sub_1850F6908(&v6, &v8);
    swift_dynamicCast();
    return v4;
  }
  else
  {
    sub_18519F088((uint64_t)&v6, &qword_1ECD75B20);
    return 0;
  }
}

uint64_t sub_1855DDCBC()
{
  uint64_t result;

  sub_1851F9080(0, &qword_1EDD83248);
  result = sub_186507A5C();
  qword_1EDD83210 = result;
  return result;
}

uint64_t sub_1855DDD0C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  _BYTE v5[32];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1850F69D4(a1, (uint64_t)v5);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(v5, AssociatedTypeWitness, AssociatedConformanceWitness);
}

void *sub_1855DDDC8(_QWORD *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  void *v8;
  unint64_t v12;
  uint64_t v15;
  unint64_t v16;
  char v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  BOOL v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  id v51;
  char v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  _DWORD v59[2];
  id v60;
  uint64_t v61;
  void *v62;
  _QWORD *v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;

  v8 = v7;
  LODWORD(v12) = a4;
  v63 = a1;
  swift_beginAccess();
  v15 = *(_QWORD *)(a7 + 56);
  if (!*(_QWORD *)(v15 + 16))
  {
    swift_endAccess();
LABEL_7:
    v62 = 0;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  v16 = sub_1855C4284(a5, a6);
  if ((v17 & 1) == 0)
  {
    swift_endAccess();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v18 = *(void **)(*(_QWORD *)(v15 + 56) + 8 * v16);
  v61 = a2;
  v62 = v18;
  v19 = v18;
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1850F69D4((uint64_t)v63, (uint64_t)&v79);
  v60 = v19;
  if ((v12 & 1) != 0)
  {
    v20 = v19;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v79);
  }
  else
  {
    __swift_project_boxed_opaque_existential_0Tm(&v79, *((uint64_t *)&v80 + 1));
    v59[1] = v12;
    v21 = v19;
    v22 = (void *)sub_186507FB4();
    v23 = -[CAPresentationModifier supportsNewValue:]((_BOOL8)v21, v22);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v79);
    if (v23)
    {

      v24 = v21;
      signpost_c2_removePresentationModifier_end(v24, v25);
      __swift_project_boxed_opaque_existential_0Tm(v63, v63[3]);
      v26 = sub_186507FB4();
      sub_18519F0C4(v61, (uint64_t)&v79, &qword_1ECD75B20);
      v27 = *((_QWORD *)&v80 + 1);
      if (*((_QWORD *)&v80 + 1))
      {
        v28 = __swift_project_boxed_opaque_existential_0Tm(&v79, *((uint64_t *)&v80 + 1));
        v29 = *(_QWORD *)(v27 - 8);
        v30 = MEMORY[0x1E0C80A78](v28);
        v32 = (char *)v59 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v29 + 16))(v32, v30);
        v33 = sub_186507FB4();
        (*(void (**)(char *, uint64_t))(v29 + 8))(v32, v27);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v79);
      }
      else
      {
        v33 = 0;
      }
      objc_msgSend(v24, sel_setValue_velocity_, v26, v33);
      swift_unknownObjectRelease();
      v57 = swift_unknownObjectRelease();
      signpost_c2_removePresentationModifier_end(v57, v58);

      return 0;
    }
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v34 = (void *)sub_1856BE7DC(a5, a6);
  swift_endAccess();
  swift_bridgeObjectRelease();

  sub_1856BC720();
  a2 = v61;
LABEL_12:
  swift_beginAccess();
  v35 = *(_QWORD *)(a7 + 64);
  if (*(_QWORD *)(v35 + 16))
  {
    swift_bridgeObjectRetain();
    v36 = sub_1855C4284(a5, a6);
    if ((v37 & 1) != 0)
    {
      v61 = a5;
      v38 = v8;
      v39 = a3;
      v40 = a2;
      v41 = v12;
      v12 = *(_QWORD *)(*(_QWORD *)(v35 + 56) + 8 * v36);
      swift_endAccess();
      swift_bridgeObjectRelease();
      if (qword_1EDD831E0 != -1)
        swift_once();
      sub_1857828F0(v12);
      LOBYTE(v12) = v41;
      a2 = v40;
      a3 = v39;
      v8 = v38;
      a5 = v61;
    }
    else
    {
      swift_endAccess();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_endAccess();
  }
  sub_1850F69D4((uint64_t)v63, (uint64_t)&v79);
  sub_18519F0C4(a2, (uint64_t)&v74, &qword_1ECD75B20);
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v8;
  sub_1850F6908(&v79, (_OWORD *)(v42 + 24));
  sub_1850F26F8((uint64_t)&v74, v42 + 56, &qword_1ECD75B20);
  *(_QWORD *)(v42 + 88) = a3;
  *(_BYTE *)(v42 + 96) = v12 & 1;
  *(_QWORD *)(v42 + 104) = a5;
  *(_QWORD *)(v42 + 112) = a6;
  *(_QWORD *)(v42 + 120) = a7;
  v43 = qword_1EDD831E0;
  swift_bridgeObjectRetain();
  v44 = v8;
  swift_retain();
  if (v43 != -1)
    swift_once();
  v45 = sub_1857827C0((uint64_t)sub_1855DF3D4, v42);
  swift_release();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v74 = *(_QWORD *)(a7 + 64);
  *(_QWORD *)(a7 + 64) = 0x8000000000000000;
  sub_1856480C0(v45, a5, a6, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a7 + 64) = v74;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1856BC720();
  v47 = sub_1855DDB80();
  if (v47)
  {
    v48 = v47;
    v84 = v47;
    *(_QWORD *)&v71 = 0;
    v69 = 0u;
    v70 = 0u;
    *(_QWORD *)&v66 = 0;
    v64 = 0u;
    v65 = 0u;
    v77 = 0u;
    v78 = 0u;
    v75 = 0u;
    v76 = 0u;
    v74 = 0u;
    sub_1855DF888((uint64_t)&v69, (uint64_t)&v74, &qword_1EDD82B10);
    sub_1855DF888((uint64_t)&v64, (uint64_t)&v76 + 8, &qword_1EDD82B10);
    v81 = v76;
    v82 = v77;
    v83 = v78;
    v79 = v74;
    v80 = v75;
    sub_1855DF40C((uint64_t)&v79, (uint64_t)&v74);
    sub_18519F0C4((uint64_t)&v74, (uint64_t)&v69, (uint64_t *)&unk_1EDD82B20);
    if (*((_QWORD *)&v70 + 1) == 1)
    {
      swift_bridgeObjectRetain();
      v49 = v44;
      sub_18519F088((uint64_t)&v69, (uint64_t *)&unk_1EDD82B20);
      sub_1856BE4F4((uint64_t)v49, a5, a6, (uint64_t)&v64);
      swift_bridgeObjectRelease();

      sub_18519F088((uint64_t)&v64, (uint64_t *)&unk_1EDD82B20);
      v50 = v84;
    }
    else
    {
      v66 = v71;
      v67 = v72;
      v68 = v73;
      v64 = v69;
      v65 = v70;
      swift_bridgeObjectRetain();
      v51 = v44;
      v52 = swift_isUniquelyReferenced_nonNull_native();
      sub_185647E54(&v64, v51, a5, a6, v52);
      v50 = v48;
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    sub_18519F088((uint64_t)&v74, (uint64_t *)&unk_1EDD82B20);
    v53 = objc_msgSend((id)objc_opt_self(), sel_currentThread);
    v54 = objc_msgSend(v53, sel_threadDictionary);

    *(_QWORD *)&v74 = v50;
    v55 = sub_186508050();
    if (qword_1EDD83220 != -1)
      swift_once();
    objc_msgSend(v54, sel_setObject_forKey_, v55, qword_1EDD83210);

    swift_unknownObjectRelease();
    sub_1855BDB70((uint64_t)&v79);
  }
  return v62;
}

void sub_1855DE4DC(uint64_t a1, uint64_t a2, uint64_t a3, id a4)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;

  v8 = MEMORY[0x186DCA138](a1 + 24);
  if (v8)
  {
    v10 = (void *)v8;
    signpost_c2_removePresentationModifier_end(v8, v9);
    v11 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 16) + 16);
    os_unfair_lock_lock(v11);
    signpost_c2_removePresentationModifier_end(v12, v13);
    swift_beginAccess();
    v14 = *(_QWORD *)(a1 + 56);
    if (*(_QWORD *)(v14 + 16))
    {
      swift_bridgeObjectRetain();
      v15 = sub_1855C4284(a2, a3);
      if ((v16 & 1) != 0)
      {
        v17 = *(id *)(*(_QWORD *)(v14 + 56) + 8 * v15);
        swift_endAccess();

        swift_bridgeObjectRelease();
        os_unfair_lock_unlock(v11);
        if (v17 == a4)
        {
          signpost_c2_removePresentationModifier_end(v18, v19);
          v20 = objc_msgSend(v10, sel_layer);
          objc_msgSend(v20, sel_addPresentationModifier_, a4);

          signpost_c2_removePresentationModifier_end(v21, v22);
        }
        goto LABEL_8;
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    os_unfair_lock_unlock(v11);
LABEL_8:

  }
}

uint64_t sub_1855DE610@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t *boxed_opaque_existential_0;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t *v12;
  uint64_t v14[5];
  uint64_t v15[5];

  v15[3] = a3;
  v15[4] = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v15);
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16);
  v11(boxed_opaque_existential_0, a1, a3);
  v14[3] = a3;
  v14[4] = a4;
  v12 = __swift_allocate_boxed_opaque_existential_0(v14);
  v11(v12, a2, a3);
  sub_1851E75D8((uint64_t)v15, a5);
  sub_1851E75D8((uint64_t)v14, a5 + 40);
  *(_BYTE *)(a5 + 80) = 1;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v14);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
}

double sub_1855DE6C0@<D0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  double result;

  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_BYTE *)(a1 + 80) = 0;
  return result;
}

double sub_1855DE6D8@<D0>(uint64_t a1@<X8>)
{
  double *v1;

  return sub_1855DE6C0(a1, *v1, v1[1]);
}

double sub_1855DE6E0@<D0>(id a1@<X4>, char a2@<W0>, uint64_t a3@<X1>, uint64_t a4@<X3>, char a5@<W5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  __int128 v17;
  unsigned __int8 v18;
  char v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v11 = 1;
  if ((a2 & 1) == 0)
  {
    v13 = type metadata accessor for InProcessAnimation(0, a6, a7, a4);
    v11 = 2
        * ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(a3, 1, v13) != 1);
  }
  if ((a5 & 1) != 0)
    v14 = 1;
  else
    v14 = 2;
  objc_msgSend(a1, sel_parametersForTransitionFromState_toState_, v11, v14);
  v15 = 256;
  if (!v19)
    v15 = 0;
  result = *(double *)&v17;
  *(_OWORD *)a8 = v17;
  *(_QWORD *)(a8 + 16) = v15 | v18 | 0x8000000000000000;
  *(_OWORD *)(a8 + 24) = v20;
  *(_OWORD *)(a8 + 40) = v21;
  *(_OWORD *)(a8 + 56) = v22;
  *(_QWORD *)(a8 + 72) = v23;
  *(_BYTE *)(a8 + 80) = 0;
  return result;
}

double sub_1855DE7C8@<D0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v6;

  return sub_1855DE6E0(*(id *)v6, a1, a2, a3, *(_BYTE *)(v6 + 8), a4, a5, a6);
}

__n128 sub_1855DE7DC@<Q0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 result;
  __int128 v12;
  __int128 v13;

  v13 = *v1;
  v3 = *((_QWORD *)v1 + 2);
  v4 = 0;
  v5 = 0;
  if (v3)
  {
    objc_msgSend(*((id *)v1 + 2), sel_doubleValue);
    v5 = v6;
  }
  v7 = (void *)*((_QWORD *)v1 + 3);
  if (v7)
  {
    objc_msgSend(v7, sel_doubleValue);
    v4 = v8;
    v9 = 256;
  }
  else
  {
    v9 = 0;
  }
  v10 = *((_QWORD *)v1 + 8);
  *(_OWORD *)a1 = v13;
  *(_QWORD *)(a1 + 16) = v9 | (v3 != 0) | 0x8000000000000000;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v4;
  result = (__n128)v1[2];
  v12 = v1[3];
  *(__n128 *)(a1 + 40) = result;
  *(_OWORD *)(a1 + 56) = v12;
  *(_QWORD *)(a1 + 72) = v10;
  *(_BYTE *)(a1 + 80) = 0;
  return result;
}

double sub_1855DE894@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = sub_1855DE7DC(a1).n128_u64[0];
  return result;
}

double sub_1855DE8D4@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)a1 = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_QWORD *)(a1 + 72) = 0;
  *(_BYTE *)(a1 + 80) = 3;
  return result;
}

double sub_1855DE904@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_BYTE *)(a1 + 80) = 3;
  return result;
}

uint64_t sub_1855DE924@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1855DD2C4(v1, a1);
}

id sub_1855DE934(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4, int a5, uint64_t a6, void *a7)
{
  void *v7;
  void *v8;
  uint64_t v11;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __n128 v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  id v27;
  _QWORD v29[2];
  int v30;
  void *v31;

  v8 = v7;
  LODWORD(v11) = a5;
  v14 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_0Tm(a3, a3[3]);
  v15 = sub_186507FB4();
  v16 = a4[3];
  if (v16)
  {
    v17 = __swift_project_boxed_opaque_existential_0Tm(a4, a4[3]);
    v29[1] = v29;
    v30 = v11;
    v11 = *(_QWORD *)(v16 - 8);
    v18 = MEMORY[0x1E0C80A78](v17);
    v31 = v14;
    v20 = v8;
    v21 = a7;
    v22 = a6;
    v23 = (char *)v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v11 + 16))(v23, v18);
    v24 = sub_186507FB4();
    v25 = *(void (**)(char *, uint64_t))(v11 + 8);
    LOBYTE(v11) = v30;
    v26 = v23;
    a6 = v22;
    a7 = v21;
    v8 = v20;
    v14 = v31;
    v25(v26, v16);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a4);
  }
  else
  {
    v24 = 0;
  }
  v27 = objc_msgSend(v8, sel_initWithKeyPath_initialValue_initialVelocity_additive_preferredFrameRateRangeMaximum_group_, v14, v15, v24, v11 & 1, a6, a7);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a3);
  return v27;
}

uint64_t sub_1855DEAC8()
{
  return swift_deallocObject();
}

uint64_t sub_1855DEAD8(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for InProcessAnimationDescription(a2, a1);
  return a2;
}

uint64_t sub_1855DEB14(uint64_t a1)
{
  _s6GetterVwxx(a1);
  return a1;
}

uint64_t sub_1855DEB40(uint64_t a1)
{
  destroy for InProcessAnimationDescription(a1);
  return a1;
}

uint64_t _s6GetterVwxx(uint64_t result)
{
  uint64_t v1;
  int v2;

  v1 = result;
  v2 = *(unsigned __int8 *)(result + 80);
  if (v2 != 2)
  {
    if (v2 != 1)
      return result;
    __swift_destroy_boxed_opaque_existential_0Tm(result);
    v1 += 40;
  }
  return __swift_destroy_boxed_opaque_existential_0Tm(v1);
}

uint64_t initializeWithCopy for InProcessAnimationDescription(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v4 = *(unsigned __int8 *)(a2 + 80);
  if (v4 == 2)
  {
    v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
    *(_BYTE *)(a1 + 80) = 2;
  }
  else if (v4 == 1)
  {
    v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    v6 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
    *(_BYTE *)(a1 + 80) = 1;
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
  }
  return a1;
}

uint64_t assignWithCopy for InProcessAnimationDescription(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  if (a1 != a2)
  {
    sub_1855DED74(a1);
    v4 = *(unsigned __int8 *)(a2 + 80);
    if (v4 == 2)
    {
      v7 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
      *(_BYTE *)(a1 + 80) = 2;
    }
    else if (v4 == 1)
    {
      v5 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
      v6 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 64) = v6;
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
      *(_BYTE *)(a1 + 80) = 1;
    }
    else
    {
      v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      v9 = *(_OWORD *)(a2 + 32);
      v10 = *(_OWORD *)(a2 + 48);
      v11 = *(_OWORD *)(a2 + 64);
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *(_OWORD *)(a1 + 48) = v10;
      *(_OWORD *)(a1 + 64) = v11;
      *(_OWORD *)(a1 + 32) = v9;
    }
  }
  return a1;
}

uint64_t sub_1855DED74(uint64_t a1)
{
  destroy for InProcessAnimationDescription.Storage(a1);
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for InProcessAnimationDescription(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  if (a1 != a2)
  {
    sub_1855DED74(a1);
    v4 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v4;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for InProcessAnimationDescription(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 81))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 80);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InProcessAnimationDescription(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 81) = 0;
    if (a2)
      *(_BYTE *)(result + 80) = -(char)a2;
  }
  return result;
}

ValueMetadata *_s6GetterVMa()
{
  return &_s6GetterVN;
}

void sub_1855DEED4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD v14[6];

  v4 = sub_1856A153C(MEMORY[0x1E0DEE9D8]);
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_currentThread);
  v7 = objc_msgSend(v6, sel_threadDictionary);

  v14[0] = v4;
  v8 = sub_186508050();
  if (qword_1EDD83220 != -1)
    swift_once();
  objc_msgSend(v7, sel_setObject_forKey_, v8, qword_1EDD83210, v14[0]);

  swift_unknownObjectRelease();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  v14[4] = sub_185281934;
  v14[5] = v9;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1855D8DF4;
  v14[3] = &block_descriptor_29_0;
  v10 = (uint64_t)_Block_copy(v14);
  swift_retain();
  swift_release();
  __UIVIEWSWIFTANIMATABLEPROPERTYTRANSFORMER_IS_EXECUTING_CALLBACK__(v10);
  _Block_release((const void *)v10);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v10 & 1) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v11 = sub_1855DDB80();
  v12 = objc_msgSend(v5, sel_currentThread);
  v13 = objc_msgSend(v12, sel_threadDictionary);

  objc_msgSend(v13, sel_removeObjectForKey_, qword_1EDD83210);
  if (!v11)
LABEL_7:
    __break(1u);
}

void sub_1855DF0E4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD v14[6];

  v4 = sub_1856A153C(MEMORY[0x1E0DEE9D8]);
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_currentThread);
  v7 = objc_msgSend(v6, sel_threadDictionary);

  v14[0] = v4;
  v8 = sub_186508050();
  if (qword_1EDD83220 != -1)
    swift_once();
  objc_msgSend(v7, sel_setObject_forKey_, v8, qword_1EDD83210, v14[0]);

  swift_unknownObjectRelease();
  if (a1)
  {
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a1;
    *(_QWORD *)(v9 + 24) = a2;
    v14[4] = sub_185281934;
    v14[5] = v9;
    v14[0] = MEMORY[0x1E0C809B0];
    v14[1] = 1107296256;
    v14[2] = sub_1855D8DF4;
    v14[3] = &block_descriptor_22_0;
    v10 = (uint64_t)_Block_copy(v14);
    sub_18518D708(a1);
    sub_18518D708(a1);
    swift_retain();
    swift_release();
    __UIVIEWSWIFTANIMATABLEPROPERTYTRANSFORMER_IS_EXECUTING_CALLBACK__(v10);
    _Block_release((const void *)v10);
    LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    sub_18518D718(a1);
    sub_18518D718(a1);
    if ((v10 & 1) != 0)
    {
      __break(1u);
      goto LABEL_8;
    }
  }
  v11 = sub_1855DDB80();
  v12 = objc_msgSend(v5, sel_currentThread);
  v13 = objc_msgSend(v12, sel_threadDictionary);

  objc_msgSend(v13, sel_removeObjectForKey_, qword_1EDD83210);
  if (!v11)
LABEL_8:
    __break(1u);
}

uint64_t sub_1855DF330()
{
  return swift_deallocObject();
}

uint64_t sub_1855DF340()
{
  return swift_deallocObject();
}

uint64_t sub_1855DF350()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1855DF374()
{
  uint64_t v0;

  sub_1856BC9FC(v0);
}

void sub_1855DF380()
{
  uint64_t v0;

  sub_1855DDB00(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1855DF388()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 24);
  if (*(_QWORD *)(v0 + 80))
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 56);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1855DF3D4(void *a1)
{
  uint64_t *v1;

  sub_1855DF448(a1, (uint64_t)(v1 + 3), (uint64_t)(v1 + 7), v1[11], v1[13], v1[14], v1[15]);
}

uint64_t sub_1855DF40C(uint64_t a1, uint64_t a2)
{
  _s15PropertyChangesV4InfoVwcp(a2, a1);
  return a2;
}

void sub_1855DF448(id a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  void *v8;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  id v30;
  _QWORD v31[4];
  _QWORD v32[4];

  v8 = v7;
  sub_1850F69D4(a2, (uint64_t)v32);
  sub_18519F0C4(a3, (uint64_t)v31, &qword_1ECD75B20);
  if (a4 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (a4 > 0x7FFFFFFF)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (a1)
  {
    v15 = objc_msgSend(a1, sel_count);
    if (v15 == objc_msgSend(a1, sel_capacity))
      a1 = 0;
    else
      v16 = a1;
  }
  v17 = objc_allocWithZone(MEMORY[0x1E0CD2808]);
  swift_bridgeObjectRetain();
  v18 = sub_1855DE934(a5, a6, v32, v31, 0, a4, a1);
  signpost_c2_removePresentationModifier_end(v18, v19);
  v20 = (os_unfair_lock_s *)(*(_QWORD *)(a7 + 16) + 16);
  os_unfair_lock_lock(v20);
  signpost_c2_removePresentationModifier_end(v21, v22);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  a1 = v18;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v31[0] = *(_QWORD *)(a7 + 56);
  *(_QWORD *)(a7 + 56) = 0x8000000000000000;
  sub_1856481E0((uint64_t)a1, a5, a6, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a7 + 56) = v31[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1856BC720();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1856BE700(a5, a6);
  swift_endAccess();
  swift_bridgeObjectRelease();
  sub_1856BC720();
  os_unfair_lock_unlock(v20);
  v24 = pthread_main_np();
  if ((_DWORD)v24 != 1)
  {
    if (qword_1EDD831E0 == -1)
    {
LABEL_10:
      v29 = (_QWORD *)swift_allocObject();
      v29[2] = a7;
      v29[3] = a5;
      v29[4] = a6;
      v29[5] = a1;
      swift_bridgeObjectRetain();
      v30 = a1;
      swift_retain();
      sub_18577CC40((uint64_t)sub_1855DF73C, (uint64_t)v29);
      swift_release();
      goto LABEL_11;
    }
LABEL_14:
    swift_once();
    goto LABEL_10;
  }
  signpost_c2_removePresentationModifier_end(v24, v25);
  v26 = objc_msgSend(v8, sel_layer);
  objc_msgSend(v26, sel_addPresentationModifier_, a1);

  signpost_c2_removePresentationModifier_end(v27, v28);
LABEL_11:

}

uint64_t sub_1855DF708()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1855DF73C()
{
  uint64_t v0;

  sub_1855DE4DC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(id *)(v0 + 40));
}

unint64_t sub_1855DF748()
{
  unint64_t result;

  result = qword_1EDD85CB0;
  if (!qword_1EDD85CB0)
  {
    result = MEMORY[0x186DC9F28](&unk_186672AF4, &type metadata for VelocityTrackingAnimation);
    atomic_store(result, (unint64_t *)&qword_1EDD85CB0);
  }
  return result;
}

uint64_t sub_1855DF790()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  swift_release();
  v1 = v0 + 24;
  v2 = *(unsigned __int8 *)(v0 + 104);
  if (v2 == 2)
    goto LABEL_4;
  if (v2 == 1)
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v1);
    v1 = v0 + 64;
LABEL_4:
    __swift_destroy_boxed_opaque_existential_0Tm(v1);
  }
  swift_release();
  return swift_deallocObject();
}

void sub_1855DF7F4()
{
  uint64_t v0;

  sub_1855DD984(*(_QWORD *)(v0 + 16), v0 + 24, *(_BYTE *)(v0 + 105), *(void (**)(uint64_t))(v0 + 112));
}

uint64_t sub_1855DF808()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1855DF834()
{
  uint64_t *v0;

  sub_1855BCE98(v0[2], v0[3], v0[4]);
}

uint64_t sub_1855DF844()
{
  return swift_deallocObject();
}

void sub_1855DF858()
{
  uint64_t v0;

  sub_1855DD830(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), (uint64_t)&_s6GetterVN_5, (uint64_t)&off_1E168AC30);
}

uint64_t sub_1855DF888(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1855DF8CC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1855DF8F0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1855DF914(char a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v2 + 16) + 16))(*(_QWORD *)(v2 + 16), a1 & 1, a2 & 1);
}

uint64_t sub_1855DF934()
{
  return swift_deallocObject();
}

void sub_1855DF948()
{
  uint64_t v0;

  sub_1855DD830(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), (uint64_t)&_s6GetterVN_4, (uint64_t)&off_1E168A938);
}

uint64_t sub_1855DF97C()
{
  return swift_deallocObject();
}

uint64_t sub_1855DF98C()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

__n128 sub_1855DF9C8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  void (*v3)(uint64_t);
  __int128 v4;
  __int128 v5;
  __n128 result;
  _OWORD v7[4];
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 96);
  v3 = *(void (**)(uint64_t))(v0 + 104);
  v4 = *(_OWORD *)(v0 + 40);
  v5 = *(_OWORD *)(v0 + 72);
  v7[2] = *(_OWORD *)(v0 + 56);
  v7[3] = v5;
  v8 = *(_QWORD *)(v0 + 88);
  v7[0] = *(_OWORD *)(v0 + 24);
  v7[1] = v4;
  sub_1855DD6A0(v1, (uint64_t)v7, v2, v3);
  return result;
}

uint64_t sub_1855DFA14(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 16);
  v3 = *(id *)(a1 + 24);
  v4 = v2;
  return a1;
}

uint64_t sub_1855DFA40()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1855DFA70()
{
  return swift_deallocObject();
}

uint64_t sub_1855DFA80()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1855DFAB4()
{
  uint64_t v0;

  sub_1855DD528(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_BYTE *)(v0 + 33), *(void (**)(uint64_t))(v0 + 40));
}

uint64_t sub_1855DFACC()
{
  return swift_deallocObject();
}

uint64_t sub_1855DFADC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1855DFB08()
{
  uint64_t v0;

  sub_1855DD3C0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 40), *(void (**)(uint64_t))(v0 + 48), *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1855DFB54()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_113Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1855DFB94()
{
  uint64_t v0;

  sub_1855DD830(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), (uint64_t)&_s6GetterVN_0, (uint64_t)&off_1E168A970);
}

uint64_t sub_1855DFBC4(uint64_t a1)
{
  return sub_1855DDD0C(a1);
}

uint64_t sub_1855DFBE0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1855DFC0C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = (id)sub_1865074D4();
  objc_msgSend(v1, sel_stopSettingPresentationValueForKey_, v2);

}

void sub_1855DFC54()
{
  uint64_t v0;

  sub_1855D9D8C(*(void **)(v0 + 16));
}

id sub_1855DFC5C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel___swift_removeAllRetargetableAnimations_, 0);
}

uint64_t objectdestroy_34Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1855DFCA0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1855D8FF8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1855DFCA8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1855DFCCC()
{
  uint64_t v0;

  return (*(uint64_t (**)(double))(v0 + 16))(*(double *)(v0 + 32));
}

unint64_t sub_1855DFCF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDD83228;
  if (!qword_1EDD83228)
  {
    v1 = sub_186507318();
    result = MEMORY[0x186DC9F28](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1EDD83228);
  }
  return result;
}

unint64_t sub_1855DFD3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDD83238;
  if (!qword_1EDD83238)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDD83230);
    result = MEMORY[0x186DC9F28](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EDD83238);
  }
  return result;
}

uint64_t sub_1855DFD88()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  v1 = v0 + 16;
  v2 = *(unsigned __int8 *)(v0 + 96);
  if (v2 == 2)
    goto LABEL_4;
  if (v2 == 1)
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v1);
    v1 = v0 + 56;
LABEL_4:
    __swift_destroy_boxed_opaque_existential_0Tm(v1);
  }
  return swift_deallocObject();
}

ValueMetadata *_s6GetterVMa_0()
{
  return &_s6GetterVN_0;
}

ValueMetadata *_s6GetterVMa_1()
{
  return &_s6GetterVN_1;
}

uint64_t _s6GetterVwCP(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t _s6GetterVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t _s6GetterVwta(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t _s6GetterVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 9))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s6GetterVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s6GetterVMa_2()
{
  return &_s6GetterVN_2;
}

void _s6GetterVwxx_0(uint64_t a1)
{

}

uint64_t _s6GetterVwcp_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  __int128 v5;
  id v6;
  id v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(void **)(a2 + 16);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v6 = v3;
  v7 = v4;
  return a1;
}

_QWORD *_s6GetterVwca_0(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = (void *)a1[2];
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = v5;

  v7 = (void *)a1[3];
  v8 = (void *)a2[3];
  a1[3] = v8;
  v9 = v8;

  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  return a1;
}

uint64_t _s6GetterVwta_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  __int128 v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;

  v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  return a1;
}

uint64_t _s6GetterVwet_0(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 72))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s6GetterVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 72) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *_s6GetterVMa_3()
{
  return &_s6GetterVN_3;
}

ValueMetadata *_s6GetterVMa_4()
{
  return &_s6GetterVN_4;
}

ValueMetadata *_s6GetterVMa_5()
{
  return &_s6GetterVN_5;
}

id sub_1855E02F8@<X0>(_QWORD *a1@<X8>)
{
  int8x16_t *v1;
  void *v3;
  int8x16_t v4;
  int8x16_t v5;
  id result;
  id v7;
  _OWORD v8[4];

  v3 = (void *)objc_opt_self();
  v4 = vbicq_s8(v1[1], (int8x16_t)vclezq_f64((float64x2_t)v1[1]));
  v8[0] = vbicq_s8(*v1, (int8x16_t)vclezq_f64(*(float64x2_t *)v1));
  v8[1] = v4;
  v5 = vbicq_s8(v1[3], (int8x16_t)vclezq_f64((float64x2_t)v1[3]));
  v8[2] = vbicq_s8(v1[2], (int8x16_t)vclezq_f64((float64x2_t)v1[2]));
  v8[3] = v5;
  result = objc_msgSend(v3, sel_valueWithCACornerRadii_, v8);
  if (result)
  {
    v7 = result;
    result = (id)sub_1855C8E84();
    a1[3] = result;
    *a1 = v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_1855E0388()
{
  uint64_t v0;
  _BOOL8 result;
  int64x2_t v2;

  if ((~*(_QWORD *)v0 & 0x7FF0000000000000) == 0)
    return 1;
  v2 = vdupq_n_s64(0x7FF0000000000000uLL);
  result = 1;
  if ((vmaxv_u16((uint16x4_t)vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64((int64x2_t)vandq_s8(*(int8x16_t *)(v0 + 8), (int8x16_t)v2), v2), (int32x4_t)vceqq_s64((int64x2_t)vandq_s8(*(int8x16_t *)(v0 + 24), (int8x16_t)v2), v2)))) & 1) == 0)return (*(_QWORD *)(v0 + 40) & 0x7FF0000000000000) == 0x7FF0000000000000|| (*(_QWORD *)(v0 + 48) & 0x7FF0000000000000) == 0x7FF0000000000000|| (~*(_QWORD *)(v0 + 56) & 0x7FF0000000000000) == 0;
  return result;
}

BOOL sub_1855E0400(double *a1, double a2)
{
  double *v2;

  if (vabdd_f64(*v2, *a1) > a2)
    return 0;
  if (vabdd_f64(v2[1], a1[1]) > a2)
    return 0;
  if (vabdd_f64(v2[2], a1[2]) > a2)
    return 0;
  if (vabdd_f64(v2[3], a1[3]) > a2)
    return 0;
  if (vabdd_f64(v2[4], a1[4]) > a2)
    return 0;
  if (vabdd_f64(v2[5], a1[5]) > a2)
    return 0;
  if (vabdd_f64(v2[6], a1[6]) <= a2)
    return vabdd_f64(v2[7], a1[7]) <= a2;
  return 0;
}

void sub_1855E04DC(_QWORD *a1@<X8>)
{
  *a1 = 0x3F50624DD2F1A9FCLL;
}

void sub_1855E04F4(_QWORD *a1@<X8>)
{
  *a1 = 0x3EB0C6F7A0B5ED8DLL;
}

BOOL sub_1855E050C(double *a1, double *a2)
{
  return sub_1855E0400(a1, *a2);
}

__n128 sub_1855E0514@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v5;
  __int128 v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  _BYTE v11[32];

  sub_1850F69D4(a1, (uint64_t)v11);
  sub_1855C8E84();
  swift_dynamicCast();
  objc_msgSend(v10, sel_CACornerRadiiValue);

  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  *(_OWORD *)a2 = v5;
  *(_OWORD *)(a2 + 16) = v6;
  result = v7;
  *(__n128 *)(a2 + 32) = v7;
  *(_QWORD *)(a2 + 48) = v8;
  *(_QWORD *)(a2 + 56) = v9;
  return result;
}

uint64_t sub_1855E05D4()
{
  return CACornerRadiiEqualToRadii();
}

float64x2_t sub_1855E0618(float64x2_t *a1)
{
  float64x2_t *v1;
  float64x2_t v2;
  float64x2_t result;
  float64x2_t v4;

  v2 = vmulq_f64(a1[1], v1[1]);
  *v1 = vmulq_f64(*a1, *v1);
  v1[1] = v2;
  result = vmulq_f64(a1[2], v1[2]);
  v4 = vmulq_f64(a1[3], v1[3]);
  v1[2] = result;
  v1[3] = v4;
  return result;
}

float64x2_t sub_1855E0648(double a1)
{
  float64x2_t *v1;
  float64x2_t v2;
  float64x2_t v3;
  float64x2_t result;

  v2 = vmulq_n_f64(v1[1], a1);
  *v1 = vmulq_n_f64(*v1, a1);
  v1[1] = v2;
  v3 = vmulq_n_f64(v1[2], a1);
  result = vmulq_n_f64(v1[3], a1);
  v1[2] = v3;
  v1[3] = result;
  return result;
}

double sub_1855E066C()
{
  double *v0;

  return *v0 * *v0
       + v0[1] * v0[1]
       + v0[2] * v0[2]
       + v0[3] * v0[3]
       + v0[4] * v0[4]
       + v0[5] * v0[5]
       + v0[6] * v0[6]
       + v0[7] * v0[7];
}

double sub_1855E06BC@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

float64x2_t sub_1855E06CC@<Q0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X1>, float64x2_t *a3@<X8>)
{
  float64x2_t v3;
  float64x2_t result;
  float64x2_t v5;

  v3 = vaddq_f64(a1[1], a2[1]);
  *a3 = vaddq_f64(*a1, *a2);
  a3[1] = v3;
  result = vaddq_f64(a1[2], a2[2]);
  v5 = vaddq_f64(a1[3], a2[3]);
  a3[2] = result;
  a3[3] = v5;
  return result;
}

float64x2_t sub_1855E06F8(float64x2_t *a1, float64x2_t *a2)
{
  float64x2_t v2;
  float64x2_t result;
  float64x2_t v4;

  v2 = vaddq_f64(a2[1], a1[1]);
  *a1 = vaddq_f64(*a2, *a1);
  a1[1] = v2;
  result = vaddq_f64(a2[2], a1[2]);
  v4 = vaddq_f64(a2[3], a1[3]);
  a1[2] = result;
  a1[3] = v4;
  return result;
}

float64x2_t sub_1855E0724@<Q0>(float64x2_t *a1@<X0>, float64x2_t *a2@<X1>, float64x2_t *a3@<X8>)
{
  float64x2_t v3;
  float64x2_t result;
  float64x2_t v5;

  v3 = vsubq_f64(a1[1], a2[1]);
  *a3 = vsubq_f64(*a1, *a2);
  a3[1] = v3;
  result = vsubq_f64(a1[2], a2[2]);
  v5 = vsubq_f64(a1[3], a2[3]);
  a3[2] = result;
  a3[3] = v5;
  return result;
}

float64x2_t sub_1855E0750(float64x2_t *a1, float64x2_t *a2)
{
  float64x2_t v2;
  float64x2_t result;
  float64x2_t v4;

  v2 = vsubq_f64(a1[1], a2[1]);
  *a1 = vsubq_f64(*a1, *a2);
  a1[1] = v2;
  result = vsubq_f64(a1[2], a2[2]);
  v4 = vsubq_f64(a1[3], a2[3]);
  a1[2] = result;
  a1[3] = v4;
  return result;
}

ValueMetadata *type metadata accessor for UIAnimatableCornerRadii()
{
  return &type metadata for UIAnimatableCornerRadii;
}

unint64_t sub_1855E0790()
{
  unint64_t result;

  result = qword_1EDD828F8;
  if (!qword_1EDD828F8)
  {
    result = MEMORY[0x186DC9F28](&unk_18666AA8C, &type metadata for UIAnimatableCornerRadii);
    atomic_store(result, (unint64_t *)&qword_1EDD828F8);
  }
  return result;
}

unint64_t sub_1855E07D8()
{
  unint64_t result;

  result = qword_1EDD82900;
  if (!qword_1EDD82900)
  {
    result = MEMORY[0x186DC9F28](&unk_18666A9E8, &type metadata for UIAnimatableCornerRadii);
    atomic_store(result, (unint64_t *)&qword_1EDD82900);
  }
  return result;
}

unint64_t sub_1855E081C(uint64_t a1)
{
  unint64_t result;

  result = sub_1855E0840();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1855E0840()
{
  unint64_t result;

  result = qword_1EDD82998;
  if (!qword_1EDD82998)
  {
    result = MEMORY[0x186DC9F28](&unk_18666AA38, &type metadata for UIAnimatableCornerRadii);
    atomic_store(result, (unint64_t *)&qword_1EDD82998);
  }
  return result;
}

unint64_t sub_1855E0884(uint64_t a1)
{
  unint64_t result;

  result = sub_1855E08A8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1855E08A8()
{
  unint64_t result;

  result = qword_1EDD82910;
  if (!qword_1EDD82910)
  {
    result = MEMORY[0x186DC9F28](&unk_18666AA70, &type metadata for UIAnimatableCornerRadii);
    atomic_store(result, (unint64_t *)&qword_1EDD82910);
  }
  return result;
}

uint64_t static _UITraitHDRHeadroomUsage.defaultValue.getter()
{
  return -1;
}

unint64_t static _UITraitHDRHeadroomUsage.name.getter()
{
  return 0xD000000000000010;
}

unint64_t static _UITraitHDRHeadroomUsage.identifier.getter()
{
  return 0xD000000000000018;
}

uint64_t static _UITraitHDRHeadroomUsage.affectsColorAppearance.getter()
{
  return 0;
}

uint64_t static _UITraitHDRHeadroomUsage._defaultValueRepresentsUnspecified.getter()
{
  return 1;
}

uint64_t static _UITraitHDRHeadroomUsage._isPrivate.getter()
{
  return 1;
}

unint64_t sub_1855E0944()
{
  return 0xD000000000000018;
}

unint64_t sub_1855E0960()
{
  return 0xD000000000000010;
}

BOOL _UIHDRHeadroomUsage.shouldUseHDR.getter(uint64_t a1)
{
  return a1 != 0;
}

uint64_t UIMutableTraits._headroomUsage.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, unint64_t, uint64_t, uint64_t);
  unint64_t v5;
  uint64_t v7;

  v4 = *(void (**)(uint64_t *__return_ptr, ValueMetadata *, ValueMetadata *, _UNKNOWN **, unint64_t, uint64_t, uint64_t))(a2 + 368);
  v5 = sub_1855E0B44();
  v4(&v7, &type metadata for _UITraitHDRHeadroomUsage, &type metadata for _UITraitHDRHeadroomUsage, &protocol witness table for _UITraitHDRHeadroomUsage, v5, a1, a2);
  return v7;
}

uint64_t UIMutableTraits._headroomUsage.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, unint64_t, uint64_t, uint64_t);
  unint64_t v6;
  uint64_t v8;

  v8 = a1;
  v5 = *(uint64_t (**)(uint64_t *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, unint64_t, uint64_t, uint64_t))(a3 + 376);
  v6 = sub_1855E0B44();
  return v5(&v8, &type metadata for _UITraitHDRHeadroomUsage, &type metadata for _UITraitHDRHeadroomUsage, &protocol witness table for _UITraitHDRHeadroomUsage, v6, a2, a3);
}

void (*UIMutableTraits._headroomUsage.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v3;
  _QWORD *v7;
  void (*v8)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, unint64_t, uint64_t, uint64_t);
  unint64_t v9;

  v7 = malloc(0x28uLL);
  *a1 = v7;
  v7[3] = a3;
  v7[4] = v3;
  v7[2] = a2;
  v8 = *(void (**)(ValueMetadata *, ValueMetadata *, _UNKNOWN **, unint64_t, uint64_t, uint64_t))(a3 + 368);
  v9 = sub_1855E0B44();
  v8(&type metadata for _UITraitHDRHeadroomUsage, &type metadata for _UITraitHDRHeadroomUsage, &protocol witness table for _UITraitHDRHeadroomUsage, v9, a2, a3);
  return sub_1855E0AD8;
}

void sub_1855E0AD8(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, unint64_t, uint64_t, uint64_t);
  unint64_t v5;

  v1 = *(void **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  **(_QWORD **)a1 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(void (**)(void *, ValueMetadata *, ValueMetadata *, _UNKNOWN **, unint64_t, uint64_t, uint64_t))(v2 + 376);
  v5 = sub_1855E0B44();
  v4(v1, &type metadata for _UITraitHDRHeadroomUsage, &type metadata for _UITraitHDRHeadroomUsage, &protocol witness table for _UITraitHDRHeadroomUsage, v5, v3, v2);
  free(v1);
}

unint64_t sub_1855E0B44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDD85CB8;
  if (!qword_1EDD85CB8)
  {
    type metadata accessor for _UIHDRHeadroomUsage(255);
    result = MEMORY[0x186DC9F28](&unk_1866674B8, v1);
    atomic_store(result, (unint64_t *)&qword_1EDD85CB8);
  }
  return result;
}

uint64_t sub_1855E0B8C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = UIMutableTraits._headroomUsage.getter(*(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  *a3 = result;
  return result;
}

uint64_t sub_1855E0BBC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return UIMutableTraits._headroomUsage.setter(*a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t sub_1855E0BE8()
{
  return 16;
}

__n128 sub_1855E0BF4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

ValueMetadata *type metadata accessor for _UITraitHDRHeadroomUsage()
{
  return &type metadata for _UITraitHDRHeadroomUsage;
}

id UIWindowSceneGeometryPreferencesIOS.interfaceOrientations.getter()
{
  void *v0;
  id result;

  result = objc_msgSend(v0, sel_interfaceOrientations);
  if (result)
    return objc_msgSend(v0, sel_interfaceOrientations);
  return result;
}

id UIWindowSceneGeometryPreferencesIOS.interfaceOrientations.setter(uint64_t a1, char a2)
{
  void *v2;

  if ((a2 & 1) != 0)
    a1 = 0;
  return objc_msgSend(v2, sel_setInterfaceOrientations_, a1);
}

id (*UIWindowSceneGeometryPreferencesIOS.interfaceOrientations.modify(uint64_t a1))(uint64_t *a1)
{
  void *v1;
  void *v2;
  id v4;
  id v5;

  v2 = v1;
  *(_QWORD *)(a1 + 16) = v1;
  v4 = objc_msgSend(v1, sel_interfaceOrientations);
  v5 = v4;
  if (v4)
    v4 = objc_msgSend(v2, sel_interfaceOrientations);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5 == 0;
  return sub_1855E0CE0;
}

id sub_1855E0CE0(uint64_t *a1)
{
  uint64_t v1;

  if (*((_BYTE *)a1 + 8))
    v1 = 0;
  else
    v1 = *a1;
  return objc_msgSend((id)a1[2], sel_setInterfaceOrientations_, v1);
}

BOOL UIWindowSceneGeometryPreferencesMac.systemFrame.getter@<W0>(uint64_t a1@<X8>)
{
  void *v1;
  double x;
  double y;
  double width;
  double height;
  _BOOL8 result;
  double v8;
  double v9;
  double v10;
  double v11;
  CGRect v12;

  objc_msgSend(v1, sel_systemFrame);
  x = v12.origin.x;
  y = v12.origin.y;
  width = v12.size.width;
  height = v12.size.height;
  result = CGRectIsNull(v12);
  v8 = 0.0;
  if (result)
    v9 = 0.0;
  else
    v9 = x;
  if (result)
    v10 = 0.0;
  else
    v10 = y;
  if (result)
    v11 = 0.0;
  else
    v11 = width;
  *(double *)a1 = v9;
  *(double *)(a1 + 8) = v10;
  if (!result)
    v8 = height;
  *(double *)(a1 + 16) = v11;
  *(double *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 32) = result;
  return result;
}

BOOL sub_1855E0D78@<W0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  double x;
  double y;
  double width;
  double height;
  _BOOL8 result;
  double v8;
  double v9;
  double v10;
  double v11;
  CGRect v12;

  objc_msgSend(*a1, sel_systemFrame);
  x = v12.origin.x;
  y = v12.origin.y;
  width = v12.size.width;
  height = v12.size.height;
  result = CGRectIsNull(v12);
  v8 = 0.0;
  if (result)
    v9 = 0.0;
  else
    v9 = x;
  if (result)
    v10 = 0.0;
  else
    v10 = y;
  if (result)
    v11 = 0.0;
  else
    v11 = width;
  *(double *)a2 = v9;
  *(double *)(a2 + 8) = v10;
  if (!result)
    v8 = height;
  *(double *)(a2 + 16) = v11;
  *(double *)(a2 + 24) = v8;
  *(_BYTE *)(a2 + 32) = result;
  return result;
}

id UIWindowSceneGeometryPreferencesMac.systemFrame.setter(uint64_t a1)
{
  void *v1;
  double v3;
  double v4;
  double v5;
  double v6;
  _QWORD v8[5];
  _BYTE v9[40];

  sub_1855E0F6C(a1, (uint64_t)v8);
  v3 = *(double *)v8;
  v4 = *(double *)&v8[1];
  v5 = *(double *)&v8[2];
  v6 = *(double *)&v8[3];
  sub_1855E0F6C(a1, (uint64_t)v9);
  if (v9[32] == 1)
  {
    v3 = *MEMORY[0x1E0C9D628];
    v4 = *(double *)(MEMORY[0x1E0C9D628] + 8);
    v5 = *(double *)(MEMORY[0x1E0C9D628] + 16);
    v6 = *(double *)(MEMORY[0x1E0C9D628] + 24);
  }
  return objc_msgSend(v1, sel_setSystemFrame_, v3, v4, v5, v6);
}

void (*UIWindowSceneGeometryPreferencesMac.systemFrame.modify(double **a1))(id **a1, char a2)
{
  void *v1;
  double *v3;
  double x;
  double y;
  double width;
  double height;
  BOOL IsNull;
  double v9;
  double v10;
  double v11;
  double v12;
  CGRect v14;

  v3 = (double *)malloc(0x30uLL);
  *a1 = v3;
  *((_QWORD *)v3 + 5) = v1;
  objc_msgSend(v1, sel_systemFrame);
  x = v14.origin.x;
  y = v14.origin.y;
  width = v14.size.width;
  height = v14.size.height;
  IsNull = CGRectIsNull(v14);
  v9 = 0.0;
  if (IsNull)
    v10 = 0.0;
  else
    v10 = x;
  if (IsNull)
    v11 = 0.0;
  else
    v11 = y;
  if (IsNull)
    v12 = 0.0;
  else
    v12 = width;
  if (!IsNull)
    v9 = height;
  *v3 = v10;
  v3[1] = v11;
  v3[2] = v12;
  v3[3] = v9;
  *((_BYTE *)v3 + 32) = IsNull;
  return sub_1855E0F14;
}

void sub_1855E0F14(id **a1, char a2)
{
  id *v2;
  id *v3;
  double *v4;

  v2 = *a1;
  v3 = (id *)MEMORY[0x1E0C9D628];
  if (((_BYTE)(*a1)[4] & 1) != 0)
    v4 = (double *)MEMORY[0x1E0C9D628];
  else
    v4 = (double *)*a1;
  if (((_BYTE)(*a1)[4] & 1) == 0)
    v3 = *a1;
  if ((a2 & 1) == 0)
    v4 = (double *)v3;
  objc_msgSend(v2[5], sel_setSystemFrame_, *v4, v4[1], v4[2], v4[3]);
  free(v2);
}

uint64_t sub_1855E0F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD814E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1855E0FB4@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  id result;
  id v5;

  v3 = *a1;
  result = objc_msgSend(*a1, sel_interfaceOrientations);
  v5 = result;
  if (result)
    result = objc_msgSend(v3, sel_interfaceOrientations);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

id sub_1855E1010(uint64_t *a1, id *a2)
{
  uint64_t v2;

  if (*((_BYTE *)a1 + 8))
    v2 = 0;
  else
    v2 = *a1;
  return objc_msgSend(*a2, sel_setInterfaceOrientations_, v2);
}

id sub_1855E1034(uint64_t a1, id *a2)
{
  double *v2;

  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
    v2 = (double *)MEMORY[0x1E0C9D628];
  else
    v2 = (double *)a1;
  return objc_msgSend(*a2, sel_setSystemFrame_, *v2, v2[1], v2[2], v2[3]);
}

uint64_t UIControl.enumerateEventHandlers(_:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t result;
  _QWORD v10[6];

  v3 = v2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1855E1250;
  *(_QWORD *)(v7 + 24) = v6;
  v10[4] = sub_185228348;
  v10[5] = v7;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1855E1268;
  v10[3] = &block_descriptor_11;
  v8 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_enumerateEventHandlers_, v8);
  _Block_release(v8);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v3 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1855E1190(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5, void (*a6)(uint64_t, _QWORD *, uint64_t, char *))
{
  _QWORD v10[3];
  __int128 v11;
  char v12;

  v12 = 0;
  if (result)
  {
    memset(v10, 0, sizeof(v10));
    v11 = xmmword_18666AB00;
LABEL_5:
    a6(result, v10, a4, &v12);
    result = sub_18519F088((uint64_t)v10, &qword_1EDD7D658);
    goto LABEL_6;
  }
  if (a3)
  {
    sub_1855D008C(a2, (uint64_t)v10);
    *((_QWORD *)&v11 + 1) = a3;
    result = 0;
    goto LABEL_5;
  }
LABEL_6:
  *a5 = v12;
  return result;
}

uint64_t sub_1855E1240()
{
  return swift_deallocObject();
}

uint64_t sub_1855E1250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t v5;

  return sub_1855E1190(a1, a2, a3, a4, a5, *(void (**)(uint64_t, _QWORD *, uint64_t, char *))(v5 + 16));
}

uint64_t sub_1855E1258()
{
  return swift_deallocObject();
}

uint64_t sub_1855E1268(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v11)(void *, __int128 *, uint64_t, uint64_t, uint64_t);
  id v12;
  __int128 v14;
  __int128 v15;

  v11 = *(void (**)(void *, __int128 *, uint64_t, uint64_t, uint64_t))(a1 + 32);
  if (a3)
  {
    *((_QWORD *)&v15 + 1) = swift_getObjectType();
    *(_QWORD *)&v14 = a3;
  }
  else
  {
    v14 = 0u;
    v15 = 0u;
  }
  v12 = a2;
  swift_unknownObjectRetain();
  v11(a2, &v14, a4, a5, a6);

  return sub_18519F088((uint64_t)&v14, &qword_1ECD75B20);
}

uint64_t sub_1855E1314@<X0>(_QWORD *a1@<X8>)
{
  return sub_1855E142C((SEL *)&selRef_valueWithCGSize_, a1);
}

id sub_1855E1320@<X0>(_QWORD *a1@<X8>)
{
  return sub_1855E02F8(a1);
}

uint64_t sub_1855E1358@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  a1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82038);
  *a1 = v3;
  return swift_bridgeObjectRetain();
}

id sub_1855E1390@<X0>(_QWORD *a1@<X8>)
{
  _OWORD *v1;
  void *v3;
  __int128 v4;
  __int128 v5;
  id result;
  id v7;
  _OWORD v8[5];

  v3 = (void *)objc_opt_self();
  v4 = v1[1];
  v8[0] = *v1;
  v8[1] = v4;
  v5 = v1[3];
  v8[2] = v1[2];
  v8[3] = v5;
  v8[4] = v1[4];
  result = objc_msgSend(v3, sel_valueWithCAColorMatrix_, v8);
  if (result)
  {
    v7 = result;
    result = (id)sub_1851F9080(0, (unint64_t *)&qword_1EDD82FD0);
    a1[3] = result;
    *a1 = v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1855E1420@<X0>(_QWORD *a1@<X8>)
{
  return sub_1855E142C((SEL *)&selRef_valueWithCGPoint_, a1);
}

uint64_t sub_1855E142C@<X0>(SEL *a1@<X3>, _QWORD *a2@<X8>)
{
  double *v2;
  id v4;
  uint64_t result;

  v4 = objc_msgSend((id)objc_opt_self(), *a1, *v2, v2[1]);
  result = sub_1851F9080(0, (unint64_t *)&qword_1EDD82FD0);
  a2[3] = result;
  *a2 = v4;
  return result;
}

uint64_t sub_1855E14A8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_18573789C(*v1, a1);
}

uint64_t sub_1855E14B0@<X0>(_QWORD *a1@<X8>)
{
  double *v1;
  id v3;
  uint64_t result;

  v3 = objc_msgSend((id)objc_opt_self(), sel_valueWithCGRect_, *v1, v1[1], v1[2], v1[3]);
  result = sub_1851F9080(0, (unint64_t *)&qword_1EDD82FD0);
  a1[3] = result;
  *a1 = v3;
  return result;
}

uint64_t sub_1855E1540@<X0>(_QWORD *a1@<X8>)
{
  __int128 *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  id v7;
  uint64_t result;
  _OWORD v9[7];
  uint64_t v10;
  uint64_t v11;
  _OWORD v12[7];
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char v23;

  v3 = v1[7];
  v21 = v1[6];
  v22 = v3;
  v23 = *((_BYTE *)v1 + 128);
  v4 = v1[3];
  v17 = v1[2];
  v18 = v4;
  v5 = v1[5];
  v19 = v1[4];
  v20 = v5;
  v6 = v1[1];
  v15 = *v1;
  v16 = v6;
  sub_18574F9E0(v12);
  v9[0] = v12[0];
  v9[1] = v12[1];
  v9[2] = v12[2];
  v9[3] = v12[3];
  v9[4] = v12[4];
  v9[5] = v12[5];
  v9[6] = v12[6];
  v10 = v13;
  v11 = v14;
  v7 = objc_msgSend((id)objc_opt_self(), sel_valueWithCATransform3D_, v9);
  result = sub_1851F9080(0, (unint64_t *)&qword_1EDD82FD0);
  a1[3] = result;
  *a1 = v7;
  return result;
}

uint64_t sub_1855E164C@<X0>(_QWORD *a1@<X8>)
{
  double *v1;
  id v3;
  uint64_t result;

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, *v1);
  result = sub_1851F9080(0, (unint64_t *)&qword_1ECD75368);
  a1[3] = result;
  *a1 = v3;
  return result;
}

void sub_1855E16BC(_QWORD *a1@<X8>)
{
  double *v1;
  double v3;
  double v4;
  double v5;
  double v6;
  id v7;
  id v8;
  uint64_t v9;

  v3 = v1[3];
  v4 = 0.0;
  v5 = 0.0;
  v6 = 0.0;
  if (v3 > 0.0)
  {
    v6 = *v1 / v3;
    v5 = v1[1] / v3;
    v4 = v1[2] / v3;
  }
  v7 = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithRed_green_blue_alpha_, v6, v5, v4, v3);
  v8 = objc_msgSend(v7, sel_CGColor);

  type metadata accessor for CGColor(0);
  a1[3] = v9;
  *a1 = v8;
}

void sub_1855E1774(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  double *v14;
  objc_super v15;

  sub_1855E2168();
  sub_1855E21A4();
  v4 = (void *)sub_1865077E0();
  v15.receiver = v2;
  v15.super_class = (Class)type metadata accessor for _UI3DPanGestureRecognizer();
  objc_msgSendSuper2(&v15, sel_touchesBegan_withEvent_, v4, a2);

  if (!objc_msgSend(v2, sel_state))
  {
    v5 = objc_msgSend(v2, sel_view);
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v5, sel_traitCollection);

      v8 = objc_msgSend(v7, sel_userInterfaceIdiom);
      if (v8 == (id)6)
      {
        v9 = (void *)sub_1865077E0();
        v10 = _CentroidOfTouches(v9, 1);
        v12 = v11;

        v13 = (double *)&v2[OBJC_IVAR____UI3DPanGestureRecognizer_initial3DLocationInScene];
        *v13 = v10;
        *((_QWORD *)v13 + 1) = v12;
        v13[2] = 0.0;
        v14 = (double *)&v2[OBJC_IVAR____UI3DPanGestureRecognizer_current3DLocationInScene];
        *v14 = v10;
        *((_QWORD *)v14 + 1) = v12;
        v14[2] = 0.0;
      }
    }
  }
}

id sub_1855E18D0(uint64_t a1, uint64_t a2)
{
  char *v2;
  void *v4;
  id result;
  void *v6;
  unint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  double v13;
  double v14;
  objc_super v15;

  sub_1855E2168();
  sub_1855E21A4();
  v4 = (void *)sub_1865077E0();
  v15.receiver = v2;
  v15.super_class = (Class)type metadata accessor for _UI3DPanGestureRecognizer();
  objc_msgSendSuper2(&v15, sel_touchesMoved_withEvent_, v4, a2);

  result = objc_msgSend(v2, sel__movingTouches);
  if (result)
  {
    v6 = result;
    v7 = sub_186507654();

    v8 = objc_msgSend(v2, sel_view);
    if (v8
      && (v9 = v8,
          v10 = objc_msgSend(v8, sel_traitCollection),
          v9,
          v11 = objc_msgSend(v10, sel_userInterfaceIdiom),
          v10,
          v11 == (id)6))
    {
      if (v7 >> 62)
      {
        swift_bridgeObjectRetain();
        v12 = sub_186507E58();
        swift_bridgeObjectRelease();
      }
      else
      {
        v12 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      result = objc_msgSend(v2, sel_minimumNumberOfTouches);
      if (v12 < (uint64_t)result)
      {
        v13 = vabdd_f64(*(double *)&v2[OBJC_IVAR____UI3DPanGestureRecognizer_current3DLocationInScene + 16], *(double *)&v2[OBJC_IVAR____UI3DPanGestureRecognizer_initial3DLocationInScene + 16]);
        result = objc_msgSend(v2, sel__hysteresis);
        if (v14 <= v13)
          return objc_msgSend(v2, sel_setState_, 5);
      }
    }
    else
    {
      return (id)swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1855E1AA0(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, id))
{
  uint64_t v8;
  id v9;
  id v10;

  sub_1855E2168();
  sub_1855E21A4();
  v8 = sub_1865077EC();
  v9 = a4;
  v10 = a1;
  a5(v8, v9);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1855E1BEC(void *a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5)
{
  uint64_t v8;
  id v9;
  id v10;

  sub_1855E2168();
  sub_1855E21A4();
  v8 = sub_1865077EC();
  v9 = a4;
  v10 = a1;
  sub_1855E1C74(v8, (uint64_t)v9, a5);

  return swift_bridgeObjectRelease();
}

void sub_1855E1C74(uint64_t a1, uint64_t a2, SEL *a3)
{
  void *v3;
  id v6;
  void *v7;
  unint64_t v8;
  void *v9;
  id v10;
  void *v11;
  unint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  objc_super v15;

  v6 = objc_msgSend(v3, sel__movingTouches);
  if (v6)
  {
    v7 = v6;
    sub_1855E2168();
    v8 = sub_186507654();

  }
  else
  {
    v8 = 0;
  }
  sub_1855E2168();
  sub_1855E21A4();
  v9 = (void *)sub_1865077E0();
  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for _UI3DPanGestureRecognizer();
  objc_msgSendSuper2(&v15, *a3, v9, a2);

  if (v8)
  {
    swift_bridgeObjectRetain();
    v10 = objc_msgSend(v3, sel__movingTouches);
    if (v10)
    {
      v11 = v10;
      v12 = sub_186507654();

      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        v14 = sub_186507E58();
        swift_bridgeObjectRelease();
        if (v14)
        {
LABEL_8:
          v13 = sub_1856C5A34(v8, v12);
          swift_bridgeObjectRelease();
          if ((v13 & 1) == 0)
          {
            sub_18567DB6C(v8);
            swift_bridgeObjectRelease();
            sub_1855E1E24();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return;
          }
          goto LABEL_12;
        }
      }
      else if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_8;
      }
      swift_bridgeObjectRelease();
    }
LABEL_12:
    swift_bridgeObjectRelease_n();
  }
}

void sub_1855E1E24()
{
  char *v0;
  id v1;
  void *v2;
  unint64_t v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  char *v12;
  char *v13;

  v1 = objc_msgSend(v0, sel__movingTouches);
  if (v1)
  {
    v2 = v1;
    sub_1855E2168();
    v3 = sub_186507654();

    sub_1855E21A4();
    v4 = (void *)sub_1865077E0();
    v5 = _CentroidOfTouches(v4, 0);
    v7 = v6;

    sub_18567DB6C(v3);
    swift_bridgeObjectRelease();
    v8 = (void *)sub_1865077E0();
    v9 = _CentroidOfTouches(v8, 1);
    v11 = v10;
    swift_bridgeObjectRelease();

    v12 = &v0[OBJC_IVAR____UI3DPanGestureRecognizer_initial3DLocationInScene];
    *(double *)v12 = v9 - v5 + *(double *)&v0[OBJC_IVAR____UI3DPanGestureRecognizer_initial3DLocationInScene];
    *(float64x2_t *)(v12 + 8) = vaddq_f64((float64x2_t)COERCE_UNSIGNED_INT64(v11 - v7), *(float64x2_t *)(v12 + 8));
    v13 = &v0[OBJC_IVAR____UI3DPanGestureRecognizer_current3DLocationInScene];
    *(double *)v13 = v9 - v5 + *(double *)&v0[OBJC_IVAR____UI3DPanGestureRecognizer_current3DLocationInScene];
    *(float64x2_t *)(v13 + 8) = vaddq_f64((float64x2_t)COERCE_UNSIGNED_INT64(v11 - v7), *(float64x2_t *)(v13 + 8));
  }
}

id sub_1855E1F6C(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  objc_class *v14;
  id v15;
  objc_super v17;
  _QWORD v18[3];
  uint64_t v19;

  v2[OBJC_IVAR____UI3DPanGestureRecognizer_canPanInZ] = 1;
  v5 = &v2[OBJC_IVAR____UI3DPanGestureRecognizer_initial3DLocationInScene];
  v5[1] = 0;
  v5[2] = 0;
  *v5 = 0;
  v6 = &v2[OBJC_IVAR____UI3DPanGestureRecognizer_current3DLocationInScene];
  v6[1] = 0;
  v6[2] = 0;
  *v6 = 0;
  sub_1855D008C(a1, (uint64_t)v18);
  v7 = v19;
  if (v19)
  {
    v8 = __swift_project_boxed_opaque_existential_0Tm(v18, v19);
    v9 = *(_QWORD *)(v7 - 8);
    v10 = MEMORY[0x1E0C80A78](v8);
    v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v9 + 16))(v12, v10);
    v13 = sub_186507FB4();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v18);
  }
  else
  {
    v13 = 0;
  }
  v14 = (objc_class *)type metadata accessor for _UI3DPanGestureRecognizer();
  v17.receiver = v2;
  v17.super_class = v14;
  v15 = objc_msgSendSuper2(&v17, sel_initWithTarget_action_, v13, a2);
  swift_unknownObjectRelease();
  sub_1855BDE94(a1);
  return v15;
}

id sub_1855E2118()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _UI3DPanGestureRecognizer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for _UI3DPanGestureRecognizer()
{
  return objc_opt_self();
}

unint64_t sub_1855E2168()
{
  unint64_t result;

  result = qword_1EDD88250;
  if (!qword_1EDD88250)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDD88250);
  }
  return result;
}

unint64_t sub_1855E21A4()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1EDD8B6A0;
  if (!qword_1EDD8B6A0)
  {
    v1 = sub_1855E2168();
    result = MEMORY[0x186DC9F28](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EDD8B6A0);
  }
  return result;
}

void sub_1855E21EC(uint64_t a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;

  v3 = objc_msgSend(v1, sel_view);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_traitCollection);

    v6 = objc_msgSend(v5, sel_userInterfaceIdiom);
    if (v6 == (id)6)
    {
      v7 = objc_msgSend(v1, sel__movingTouches);
      if (v7)
      {
        v8 = v7;
        sub_1855E2168();
        v9 = sub_186507654();

        v10 = sub_18567DB6C(v9);
        swift_bridgeObjectRelease();
        sub_18576ED20(a1, v10);
        if ((v11 & 1) == 0)
          sub_1855E1E24();
        sub_1855E21A4();
        v12 = (void *)sub_1865077E0();
        v13 = _CentroidOfTouches(v12, 1);
        v15 = v14;
        swift_bridgeObjectRelease();

        v16 = (double *)&v1[OBJC_IVAR____UI3DPanGestureRecognizer_current3DLocationInScene];
        *v16 = v13;
        *((_QWORD *)v16 + 1) = v15;
        v16[2] = 0.0;
      }
    }
  }
}

id sub_1855E2364()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____UITextViewAnimatedPlaceholderSupport____lazy_storage___containerView;
  v2 = *(void **)(v0 + OBJC_IVAR____UITextViewAnimatedPlaceholderSupport____lazy_storage___containerView);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____UITextViewAnimatedPlaceholderSupport____lazy_storage___containerView);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UIView), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1855E23E4()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  objc_class *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  objc_super v14;

  v1 = OBJC_IVAR____UITextViewAnimatedPlaceholderSupport____lazy_storage___textEffectsView;
  v2 = *(void **)&v0[OBJC_IVAR____UITextViewAnimatedPlaceholderSupport____lazy_storage___textEffectsView];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____UITextViewAnimatedPlaceholderSupport____lazy_storage___textEffectsView];
  }
  else
  {
    v4 = (objc_class *)type metadata accessor for UITextEffectView();
    v5 = (char *)objc_allocWithZone(v4);
    v6 = MEMORY[0x1E0DEE9E8];
    *(_QWORD *)&v5[OBJC_IVAR____TtC5UIKit16UITextEffectView_managedSubviews] = MEMORY[0x1E0DEE9E8];
    v7 = OBJC_IVAR____TtC5UIKit16UITextEffectView_textEffects;
    v8 = v0;
    v9 = v5;
    *(_QWORD *)&v5[v7] = sub_1856A19EC(MEMORY[0x1E0DEE9D8]);
    *(_QWORD *)&v9[OBJC_IVAR____TtC5UIKit16UITextEffectView_sharedEffectViews] = v6;
    *(_QWORD *)&v9[OBJC_IVAR____TtC5UIKit16UITextEffectView_source] = v8;
    swift_unknownObjectRetain();

    v14.receiver = v9;
    v14.super_class = v4;
    v10 = objc_msgSendSuper2(&v14, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

    v11 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v10;
    v3 = v10;

    v2 = 0;
  }
  v12 = v2;
  return v3;
}

id sub_1855E24F8(void *a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  objc_super v10;

  swift_unknownObjectWeakInit();
  *(_QWORD *)&v1[OBJC_IVAR____UITextViewAnimatedPlaceholderSupport____lazy_storage___containerView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____UITextViewAnimatedPlaceholderSupport____lazy_storage___textEffectsView] = 0;
  v3 = OBJC_IVAR____UITextViewAnimatedPlaceholderSupport_activePlaceholders;
  v4 = v1;
  *(_QWORD *)&v1[v3] = sub_1856A1B90(MEMORY[0x1E0DEE9D8]);
  swift_unknownObjectWeakAssign();

  v10.receiver = v4;
  v10.super_class = (Class)_UITextViewAnimatedPlaceholderSupport;
  v5 = objc_msgSendSuper2(&v10, sel_init);
  v6 = sub_1855E2364();
  objc_msgSend(a1, sel_addSubview_, v6);

  v7 = sub_1855E2364();
  v8 = sub_1855E23E4();
  objc_msgSend(v7, sel_addSubview_, v8);

  return v5;
}

uint64_t sub_1855E2628(uint64_t a1, double a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  unint64_t v27;
  id v28;
  id v29;
  double v30;
  double v31;
  void *v32;
  void *v33;
  id v34;
  objc_class *v35;
  char *v36;
  id v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  id v51;
  void **v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  uint64_t result;
  __int128 v61;
  id v62;
  id v63;
  id v64;
  id v65;
  char *v66;
  id v67;
  char *v68;
  void *v69;
  id v70;
  _QWORD v71[5];
  objc_super v72;

  v3 = v2;
  v6 = type metadata accessor for UITextEffectView.EffectID();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v10 = MEMORY[0x1E0C80A78](v9).n128_u64[0];
  v12 = (char *)&v61 - v11;
  v13 = objc_msgSend(v3, sel_textView, v10);
  if (!v13)
    goto LABEL_11;
  v68 = v8;
  v69 = v3;
  v70 = v13;
  v14 = objc_msgSend(objc_allocWithZone((Class)_UITextViewAnimatedPlaceholderIdentifier), sel_init);
  if (qword_1EDD83B70 != -1)
    swift_once();
  v15 = qword_1EDD85CE0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85DF0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_186669900;
  v17 = qword_1EDD83B88;
  v18 = swift_bridgeObjectRetain();
  if (v17 != -1)
    v18 = swift_once();
  v19 = (void *)qword_1EDD85D28;
  *(_QWORD *)(inited + 32) = qword_1EDD85D28;
  v20 = type metadata accessor for _UITextViewAnimatedPlaceholderIdentifier(v18);
  *(_QWORD *)(inited + 40) = v14;
  v21 = *(void **)off_1E1678D98;
  *(_QWORD *)(inited + 64) = v20;
  *(_QWORD *)(inited + 72) = v21;
  v22 = (void *)objc_opt_self();
  v23 = v19;
  v24 = v14;
  v25 = v21;
  v67 = v22;
  v26 = objc_msgSend(v22, sel_clearColor);
  *(_QWORD *)(inited + 104) = sub_1851F9080(0, (unint64_t *)&qword_1ECD74900);
  *(_QWORD *)(inited + 80) = v26;
  v27 = sub_1856A1C98(inited);
  sub_1855E2C58(v27, v15);
  v28 = v70;
  v29 = objc_msgSend(v70, sel_textContainer);
  objc_msgSend(v29, sel_size);
  v31 = v30;

  sub_1855E4B48(v31, a2);
  v33 = v32;
  swift_bridgeObjectRelease();
  v34 = objc_msgSend(v28, sel_textRangeFromPosition_toPosition_, a1, a1);
  if (!v34)
  {
    __break(1u);
LABEL_11:
    result = sub_186507E04();
    __break(1u);
    return result;
  }
  v66 = v12;
  v65 = v34;

  v35 = (objc_class *)_s16PlaceholderChunkCMa();
  v36 = (char *)objc_allocWithZone(v35);
  *(_QWORD *)&v36[OBJC_IVAR____TtCE5UIKitCSo37_UITextViewAnimatedPlaceholderSupportP33_5BBAEA65D78BEF4D602D567ACAD13A4016PlaceholderChunk_identifier] = v24;
  *(_QWORD *)&v36[OBJC_IVAR____TtCE5UIKitCSo37_UITextViewAnimatedPlaceholderSupportP33_5BBAEA65D78BEF4D602D567ACAD13A4016PlaceholderChunk_type] = 0;
  v72.receiver = v36;
  v72.super_class = v35;
  v63 = v24;
  v62 = objc_msgSendSuper2(&v72, sel_init);
  v37 = sub_1855E23E4();
  v64 = v33;
  if (qword_1EDD83B80 != -1)
    swift_once();
  v38 = (void *)qword_1EDD85CF0;
  v39 = *(void **)algn_1EDD85CF8;
  v61 = xmmword_1EDD85D00;
  v40 = qword_1EDD85D10;
  v41 = unk_1EDD85D18;
  v42 = qword_1EDD85D20;
  v43 = type metadata accessor for UITextEffectView.PonderingEffect();
  v44 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v45 = v39;
  swift_bridgeObjectRetain();
  v46 = v38;
  sub_186506BB0();
  v47 = OBJC_IVAR____TtCC5UIKit16UITextEffectView15PonderingEffect_animateFromColor;
  v48 = v67;
  *(_QWORD *)(v44 + v47) = objc_msgSend(v67, sel_labelColor);
  *(_QWORD *)(v44 + OBJC_IVAR____TtCC5UIKit16UITextEffectView15PonderingEffect_effectViewHandle) = 0;
  swift_beginAccess();
  swift_unknownObjectWeakAssign();

  v49 = v62;
  *(_QWORD *)(v44 + 16) = v62;
  v50 = v44 + OBJC_IVAR____TtCC5UIKit16UITextEffectView15PonderingEffect_lightConfiguration;
  *(_QWORD *)v50 = v46;
  *(_QWORD *)(v50 + 8) = v39;
  *(_OWORD *)(v50 + 16) = v61;
  *(_QWORD *)(v50 + 32) = v40;
  *(_QWORD *)(v50 + 40) = v41;
  *(_QWORD *)(v50 + 48) = v42;
  v51 = objc_msgSend(v48, sel_clearColor);
  v52 = (void **)(v44 + OBJC_IVAR____TtCC5UIKit16UITextEffectView15PonderingEffect_animateFromColor);
  swift_beginAccess();
  v53 = *v52;
  *v52 = v51;

  v54 = sub_1855E23E4();
  v71[4] = &protocol witness table for UITextEffectView.PonderingEffect;
  v71[3] = v43;
  v71[0] = v44;
  swift_retain();
  v55 = (uint64_t)v66;
  sub_1856BD114(v71, (uint64_t)v66);

  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v71);
  v56 = (uint64_t)v68;
  sub_1855E5A58(v55, (uint64_t)v68);
  _s17ActivePlaceholderCMa();
  v57 = swift_allocObject();
  *(_QWORD *)(v57 + 16) = v49;
  sub_1855E5A9C(v56, v57+ OBJC_IVAR____TtCE5UIKitCSo37_UITextViewAnimatedPlaceholderSupportP33_5BBAEA65D78BEF4D602D567ACAD13A4017ActivePlaceholder_effectID);
  swift_beginAccess();
  v58 = v63;
  v59 = v49;
  sub_1857635C0(v57, (uint64_t)v58);
  swift_endAccess();

  swift_release();
  sub_1855E5A1C(v55);
  return (uint64_t)v58;
}

uint64_t sub_1855E2C58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_1855E4820(a1, (uint64_t)sub_1856D60D4, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1855E2D30(void *a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  objc_class *v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  char *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  _QWORD v30[5];
  objc_super v31;

  v3 = v2;
  v6 = type metadata accessor for UITextEffectView.EffectID();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)&v3[OBJC_IVAR____UITextViewAnimatedPlaceholderSupport_activePlaceholders];
  swift_beginAccess();
  v10 = *v9;
  v11 = a1;
  v12 = sub_18575FB98(v11, v10);

  if (!v12)
    return swift_endAccess();
  swift_endAccess();
  v13 = sub_1855E23E4();
  sub_1856BD4D8(v12+ OBJC_IVAR____TtCE5UIKitCSo37_UITextViewAnimatedPlaceholderSupportP33_5BBAEA65D78BEF4D602D567ACAD13A4017ActivePlaceholder_effectID);

  v14 = (objc_class *)_s16PlaceholderChunkCMa();
  v15 = (char *)objc_allocWithZone(v14);
  *(_QWORD *)&v15[OBJC_IVAR____TtCE5UIKitCSo37_UITextViewAnimatedPlaceholderSupportP33_5BBAEA65D78BEF4D602D567ACAD13A4016PlaceholderChunk_identifier] = v11;
  *(_QWORD *)&v15[OBJC_IVAR____TtCE5UIKitCSo37_UITextViewAnimatedPlaceholderSupportP33_5BBAEA65D78BEF4D602D567ACAD13A4016PlaceholderChunk_type] = a2;
  v31.receiver = v15;
  v31.super_class = v14;
  v16 = v11;
  v17 = a2;
  v18 = objc_msgSendSuper2(&v31, sel_init);
  v19 = sub_1855E23E4();
  v20 = qword_1EDD83B68;
  v21 = v3;
  if (v20 != -1)
    swift_once();
  v22 = (void *)qword_1EDD85CD8;
  v23 = type metadata accessor for UITextEffectView.ReplacementTextEffect();
  v24 = swift_allocObject();
  v25 = v22;
  v26 = sub_185763684(v18, v19, (uint64_t)v21, v25, v24);

  v27 = sub_1855E23E4();
  v30[3] = v23;
  v30[4] = &protocol witness table for UITextEffectView.ReplacementTextEffect;
  v30[0] = v26;
  swift_retain();
  sub_1856BD114(v30, (uint64_t)v8);

  swift_release();
  swift_release();

  sub_1855E5A1C((uint64_t)v8);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v30);
}

uint64_t sub_1855E2FB8(void *a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  id v7;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____UITextViewAnimatedPlaceholderSupport_activePlaceholders);
  swift_beginAccess();
  v4 = *v3;
  v5 = a1;
  v6 = sub_18575FB98(v5, v4);

  if (!v6)
    return swift_endAccess();
  swift_endAccess();
  v7 = sub_1855E23E4();
  sub_1856BD4D8(v6+ OBJC_IVAR____TtCE5UIKitCSo37_UITextViewAnimatedPlaceholderSupportP33_5BBAEA65D78BEF4D602D567ACAD13A4017ActivePlaceholder_effectID);

  swift_beginAccess();
  sub_1856BE9D0(v5);
  swift_endAccess();
  swift_release();
  return swift_release();
}

void sub_1855E31B4()
{
  uint64_t v0;

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCE5UIKitCSo37_UITextViewAnimatedPlaceholderSupportP33_5BBAEA65D78BEF4D602D567ACAD13A4016PlaceholderChunk_type));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCE5UIKitCSo37_UITextViewAnimatedPlaceholderSupportP33_5BBAEA65D78BEF4D602D567ACAD13A4016PlaceholderChunk_identifier));
}

id sub_1855E31E0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s16PlaceholderChunkCMa();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1855E324C()
{
  uint64_t v0;

  sub_1855E5A1C(v0+ OBJC_IVAR____TtCE5UIKitCSo37_UITextViewAnimatedPlaceholderSupportP33_5BBAEA65D78BEF4D602D567ACAD13A4017ActivePlaceholder_effectID);
  return swift_deallocClassInstance();
}

id _sSo40_UITextViewAnimatedPlaceholderIdentifierC5UIKitEABycfC_0()
{
  return objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void _UITextViewAnimatedPlaceholderSupport.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1855E335C()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v1 = objc_msgSend(v0, sel_colorWithAlphaComponent_, 0.3);

  qword_1EDD85CD8 = (uint64_t)v1;
}

unint64_t sub_1855E33C8()
{
  uint64_t inited;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85DF0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_186669900;
  v1 = *(void **)off_1E1678D90;
  *(_QWORD *)(inited + 32) = *(_QWORD *)off_1E1678D90;
  v2 = (void *)objc_opt_self();
  v3 = v1;
  v4 = objc_msgSend(v2, sel_preferredFontForTextStyle_, CFSTR("UICTFontTextStyleTitle3"));
  v5 = sub_1851F9080(0, (unint64_t *)&qword_1ECD74A30);
  *(_QWORD *)(inited + 40) = v4;
  v6 = *(void **)off_1E1678D98;
  *(_QWORD *)(inited + 64) = v5;
  *(_QWORD *)(inited + 72) = v6;
  v7 = qword_1EDD83B68;
  v8 = v6;
  if (v7 != -1)
    swift_once();
  v9 = (void *)qword_1EDD85CD8;
  *(_QWORD *)(inited + 104) = sub_1851F9080(0, (unint64_t *)&qword_1ECD74900);
  *(_QWORD *)(inited + 80) = v9;
  v10 = v9;
  result = sub_1856A1C98(inited);
  qword_1EDD85CE0 = result;
  return result;
}

uint64_t sub_1855E3500()
{
  uint64_t v0;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A80);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_186669F50;
  *(_QWORD *)(v0 + 32) = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithRed_green_blue_alpha_, 0.804, 0.612, 0.867, 1.0);
  *(_QWORD *)(v0 + 40) = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithRed_green_blue_alpha_, 1.0, 0.796, 1.0, 1.0);
  *(_QWORD *)(v0 + 48) = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithRed_green_blue_alpha_, 0.682, 0.51, 0.796, 0.0);
  result = sub_18650766C();
  qword_1EDD85CE8 = v0;
  return result;
}

uint64_t sub_1855E3600()
{
  id v0;
  uint64_t v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  if (qword_1EDD83B68 != -1)
    swift_once();
  v1 = qword_1EDD83B78;
  v2 = (id)qword_1EDD85CD8;
  if (v1 != -1)
    swift_once();
  qword_1EDD85CF0 = (uint64_t)v0;
  *(_QWORD *)algn_1EDD85CF8 = v2;
  __asm { FMOV            V0.2D, #3.0 }
  xmmword_1EDD85D00 = _Q0;
  *(_OWORD *)&qword_1EDD85D10 = _Q0;
  qword_1EDD85D20 = qword_1EDD85CE8;
  return swift_bridgeObjectRetain();
}

void sub_1855E36C4(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  void *v11;
  _BYTE v12[24];
  uint64_t v13;

  v10 = sub_1855D008C(a1, (uint64_t)v12);
  if (v13)
  {
    type metadata accessor for _UITextViewAnimatedPlaceholderIdentifier(v10);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1851F9080(0, (unint64_t *)&qword_1EDD82C80);
      if ((sub_186507A44() & 1) != 0)
      {
        *(_QWORD *)a6 = a2;
        *(_QWORD *)(a6 + 8) = a3;
        *(_BYTE *)(a6 + 16) = 0;
        *a4 = 1;
      }

    }
  }
  else
  {
    sub_1855BDE94((uint64_t)v12);
  }
}

id sub_1855E3794(void *a1)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  char isEscapingClosureAtFileLocation;
  id result;
  uint64_t v17;
  uint64_t v18;
  char v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  _QWORD aBlock[6];
  uint64_t v25;
  uint64_t v26;
  char v27;

  v2 = v1;
  v4 = objc_msgSend(v2, sel_textView);
  if (!v4)
    return 0;
  v5 = v4;
  v6 = objc_msgSend(v2, sel_textView);
  if (!v6)
  {
LABEL_7:

    return 0;
  }
  v7 = v6;
  v25 = 0;
  v26 = 0;
  v27 = 1;
  v8 = objc_msgSend(v6, sel_textStorage);
  v9 = objc_msgSend(v8, sel_length);
  if (qword_1EDD83B88 != -1)
    swift_once();
  v10 = qword_1EDD85D28;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = &v25;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1855E5AF0;
  *(_QWORD *)(v12 + 24) = v11;
  aBlock[4] = sub_1855E5AF4;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18573ABC4;
  aBlock[3] = &block_descriptor_43;
  v13 = _Block_copy(aBlock);
  v14 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_enumerateAttribute_inRange_options_usingBlock_, v10, 0, v9, 0, v13);

  _Block_release(v13);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = (id)swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v17 = v25;
  v18 = v26;
  v19 = v27;
  swift_release();
  if ((v19 & 1) != 0)
    goto LABEL_7;
  v21 = objc_msgSend(v5, sel_beginningOfDocument);
  result = objc_msgSend(v5, sel_positionFromPosition_offset_, v21, v17);
  if (!result)
    goto LABEL_16;
  if (__OFADD__(v17, v18))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v22 = result;
  result = objc_msgSend(v5, sel_positionFromPosition_offset_, v21, v17 + v18);
  if (result)
  {
    v23 = result;
    v20 = objc_msgSend(v5, sel_textRangeFromPosition_toPosition_, v22, result);

    return v20;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1855E3A54(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[11] = a1;
  v2[12] = v1;
  sub_18650775C();
  v2[13] = sub_186507750();
  sub_186507738();
  return swift_task_switch();
}

uint64_t sub_1855E3AC0()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  char *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t inited;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;

  v1 = *(void **)(v0 + 96);
  swift_release();
  v2 = objc_msgSend(v1, sel_textView);
  if (!v2)
    return sub_186507E04();
  v3 = v2;
  v4 = (char *)objc_msgSend(*(id *)(v0 + 88), sel_placeholderChunk);
  if (!v4)
    return sub_186507E04();
  v5 = v4;
  v6 = *(id *)&v4[OBJC_IVAR____TtCE5UIKitCSo37_UITextViewAnimatedPlaceholderSupportP33_5BBAEA65D78BEF4D602D567ACAD13A4016PlaceholderChunk_identifier];
  v7 = sub_1855E3794(v6);

  if (!v7)
    return sub_186507E04();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85DF0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1866691E0;
  v9 = *(void **)off_1E1678D98;
  *(_QWORD *)(inited + 32) = *(_QWORD *)off_1E1678D98;
  v10 = qword_1EDD83B68;
  v11 = v9;
  if (v10 != -1)
    swift_once();
  v12 = (void *)qword_1EDD85CD8;
  *(_QWORD *)(inited + 64) = sub_1851F9080(0, (unint64_t *)&qword_1ECD74900);
  *(_QWORD *)(inited + 40) = v12;
  v13 = v12;
  sub_1856A1C98(inited);
  type metadata accessor for Key(0);
  sub_1855E59C4();
  v14 = (void *)sub_18650739C();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v3, sel__targetedPreviewForRange_withRenderingAttributes_includeFullDocument_, v7, v14, 1);

  return (*(uint64_t (**)(id))(v0 + 8))(v15);
}

uint64_t sub_1855E3E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  sub_18650775C();
  v3[5] = sub_186507750();
  sub_186507738();
  return swift_task_switch();
}

uint64_t sub_1855E3EC4()
{
  uint64_t *v0;
  void *v1;
  const void *v2;
  void *v3;
  id v4;
  id v5;
  _QWORD *v6;

  v1 = (void *)v0[4];
  v3 = (void *)v0[2];
  v2 = (const void *)v0[3];
  swift_release();
  v0[6] = (uint64_t)_Block_copy(v2);
  v4 = v3;
  v5 = v1;
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = (uint64_t)v6;
  *v6 = v0;
  v6[1] = sub_1855E3F40;
  return sub_1855E3A54(v0[2]);
}

uint64_t sub_1855E3F40(void *a1)
{
  uint64_t *v1;
  void (**v3)(_QWORD, _QWORD);
  void *v4;
  void *v5;
  uint64_t v7;

  v3 = *(void (***)(_QWORD, _QWORD))(*v1 + 48);
  v4 = *(void **)(*v1 + 32);
  v5 = *(void **)(*v1 + 16);
  v7 = *v1;
  swift_task_dealloc();

  ((void (**)(_QWORD, void *))v3)[2](v3, a1);
  _Block_release(v3);

  return (*(uint64_t (**)(void))(v7 + 8))();
}

uint64_t sub_1855E3FC0(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 81) = a2;
  *(_QWORD *)(v3 + 88) = a1;
  *(_QWORD *)(v3 + 96) = v2;
  sub_18650775C();
  *(_QWORD *)(v3 + 104) = sub_186507750();
  sub_186507738();
  return swift_task_switch();
}

uint64_t sub_1855E4030()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  char *v4;
  char *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  char isEscapingClosureAtFileLocation;
  char v16;
  id v17;
  id v19;
  uint64_t v20;
  id v21;
  char *v22;
  id v23;

  v1 = *(void **)(v0 + 96);
  swift_release();
  v2 = objc_msgSend(v1, sel_textView);
  if (!v2)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v3 = v2;
  v4 = (char *)objc_msgSend(*(id *)(v0 + 88), sel_placeholderChunk);
  if (!v4)
    return sub_186507E04();
  v5 = v4;
  v6 = *(void **)(v0 + 96);
  v7 = *(id *)&v4[OBJC_IVAR____TtCE5UIKitCSo37_UITextViewAnimatedPlaceholderSupportP33_5BBAEA65D78BEF4D602D567ACAD13A4016PlaceholderChunk_identifier];
  v8 = objc_msgSend(v6, sel_textView);
  if (!v8)
    goto LABEL_16;
  v9 = v8;
  v22 = v5;
  *(_QWORD *)(v0 + 64) = 0;
  *(_QWORD *)(v0 + 72) = 0;
  *(_BYTE *)(v0 + 80) = 1;
  v10 = objc_msgSend(v8, sel_textStorage);
  v23 = objc_msgSend(v10, sel_length);
  if (qword_1EDD83B88 != -1)
    swift_once();
  v5 = (char *)qword_1EDD85D28;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v7;
  *(_QWORD *)(v11 + 24) = v0 + 64;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1855E5804;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v0 + 48) = sub_1855E581C;
  *(_QWORD *)(v0 + 56) = v12;
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_18573ABC4;
  *(_QWORD *)(v0 + 40) = &block_descriptor_12;
  v13 = _Block_copy((const void *)(v0 + 16));
  v14 = v7;
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_enumerateAttribute_inRange_options_usingBlock_, v5, 0, v23, 0, v13);

  _Block_release(v13);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(void **)(v0 + 64);
  v10 = *(id *)(v0 + 72);
  v16 = *(_BYTE *)(v0 + 80);
  swift_release();

  v5 = v22;
  if ((v16 & 1) == 0)
  {
    if ((*(_BYTE *)(v0 + 81) & 1) == 0)
    {
      v17 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
      goto LABEL_15;
    }
    if (*(_QWORD *)&v22[OBJC_IVAR____TtCE5UIKitCSo37_UITextViewAnimatedPlaceholderSupportP33_5BBAEA65D78BEF4D602D567ACAD13A4016PlaceholderChunk_type])
    {
      v17 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
LABEL_15:
      v7 = v17;
      v19 = objc_msgSend(v3, sel_textStorage);
      v20 = *(_QWORD *)off_1E1678D98;
      objc_msgSend(v19, sel_removeAttribute_range_, *(_QWORD *)off_1E1678D98, v9, v10);

      v21 = objc_msgSend(v3, sel_textStorage);
      objc_msgSend(v21, sel_addAttribute_value_range_, v20, v7, v9, v10);

LABEL_16:
      goto LABEL_17;
    }
    if (qword_1EDD83B68 == -1)
    {
LABEL_14:
      v17 = (id)qword_1EDD85CD8;
      goto LABEL_15;
    }
LABEL_20:
    swift_once();
    goto LABEL_14;
  }
LABEL_17:

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1855E4548(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a3;
  *(_QWORD *)(v4 + 32) = a4;
  *(_BYTE *)(v4 + 64) = a2;
  *(_QWORD *)(v4 + 16) = a1;
  sub_18650775C();
  *(_QWORD *)(v4 + 40) = sub_186507750();
  sub_186507738();
  return swift_task_switch();
}

uint64_t sub_1855E45BC()
{
  uint64_t v0;
  void *v1;
  const void *v2;
  void *v3;
  id v4;
  id v5;
  _QWORD *v6;

  v1 = *(void **)(v0 + 32);
  v3 = *(void **)(v0 + 16);
  v2 = *(const void **)(v0 + 24);
  swift_release();
  *(_QWORD *)(v0 + 48) = _Block_copy(v2);
  v4 = v3;
  v5 = v1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v6;
  *v6 = v0;
  v6[1] = sub_1855E463C;
  return sub_1855E3FC0(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 64));
}

uint64_t sub_1855E463C()
{
  uint64_t *v0;
  void (**v1)(_QWORD);
  void *v2;
  void *v3;
  uint64_t v5;

  v1 = *(void (***)(_QWORD))(*v0 + 48);
  v2 = *(void **)(*v0 + 32);
  v3 = *(void **)(*v0 + 16);
  v5 = *v0;
  swift_task_dealloc();

  v1[2](v1);
  _Block_release(v1);
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t protocol witness for UITextEffectView.ReplacementTextEffect.Delegate.performReplacementAndGeneratePreview(for:effect:animation:) in conformance _UITextViewAnimatedPlaceholderSupport(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EDD85D38 + dword_1EDD85D38);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1855E4724;
  return v5(a1);
}

uint64_t sub_1855E4724(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

id _UITextViewAnimatedPlaceholderIdentifier.init()()
{
  objc_super v1;

  v1.super_class = (Class)_UITextViewAnimatedPlaceholderIdentifier;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t sub_1855E47E0()
{
  uint64_t result;

  result = sub_1865074D4();
  qword_1EDD85D28 = result;
  return result;
}

uint64_t sub_1855E4820(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  _OWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  void *i;
  _OWORD *v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  _OWORD v42[2];
  _OWORD v43[2];
  void *v44;
  _OWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v46 = a1;
  v47 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v48 = v8;
  v49 = 0;
  v50 = v11 & v9;
  v51 = a2;
  v52 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1856D6110((uint64_t)&v44);
  v12 = v44;
  if (!v44)
    goto LABEL_27;
  sub_1850F6908(v45, v43);
  v13 = *(_QWORD **)a5;
  v15 = sub_1850F6BB4(v12);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v19 = v14;
  if (v13[3] >= v18)
  {
    if ((a4 & 1) != 0)
    {
      if ((v14 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_185684DCC();
      if ((v19 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v23 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(_QWORD *)(v23[6] + 8 * v15) = v12;
    sub_1850F6908(v43, (_OWORD *)(v23[7] + 32 * v15));
    v24 = v23[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v23[2] = v26;
LABEL_16:
    sub_1856D6110((uint64_t)&v44);
    for (i = v44; v44; i = v44)
    {
      sub_1850F6908(v45, v43);
      v29 = *(_QWORD **)a5;
      v31 = sub_1850F6BB4(i);
      v32 = v29[2];
      v33 = (v30 & 1) == 0;
      v34 = v32 + v33;
      if (__OFADD__(v32, v33))
        goto LABEL_28;
      v35 = v30;
      if (v29[3] < v34)
      {
        sub_1856D1844(v34, 1);
        v36 = sub_1850F6BB4(i);
        if ((v35 & 1) != (v37 & 1))
          goto LABEL_30;
        v31 = v36;
      }
      if ((v35 & 1) != 0)
      {
        sub_1850F69D4((uint64_t)v43, (uint64_t)v42);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v43);

        v28 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v31);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
        sub_1850F6908(v42, v28);
      }
      else
      {
        v38 = *(_QWORD **)a5;
        *(_QWORD *)(*(_QWORD *)a5 + 8 * (v31 >> 6) + 64) |= 1 << v31;
        *(_QWORD *)(v38[6] + 8 * v31) = i;
        sub_1850F6908(v43, (_OWORD *)(v38[7] + 32 * v31));
        v39 = v38[2];
        v25 = __OFADD__(v39, 1);
        v40 = v39 + 1;
        if (v25)
          goto LABEL_29;
        v38[2] = v40;
      }
      sub_1856D6110((uint64_t)&v44);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1855BDB68();
    return swift_release();
  }
  sub_1856D1844(v18, a4 & 1);
  v20 = sub_1850F6BB4(v12);
  if ((v19 & 1) == (v21 & 1))
  {
    v15 = v20;
    if ((v19 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_1850F69D4((uint64_t)v43, (uint64_t)v42);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v43);

    v22 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v15);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v22);
    sub_1850F6908(v42, v22);
    goto LABEL_16;
  }
LABEL_30:
  type metadata accessor for Key(0);
  result = sub_186508074();
  __break(1u);
  return result;
}

void sub_1855E4B48(double a1, double a2)
{
  double v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  id v11;
  void *v12;
  void *v13;

  if (a2 == 0.0)
    v3 = 2.5;
  else
    v3 = a2;
  v4 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  v5 = (void *)sub_1865074D4();
  v6 = objc_msgSend(v4, sel_initWithString_, v5);

  type metadata accessor for Key(0);
  sub_1855E59C4();
  v7 = (void *)sub_18650739C();
  objc_msgSend(v6, sel_sizeWithAttributes_, v7);
  v9 = v8;

  v10 = floor(v3 * a1 / v9);
  if ((~*(_QWORD *)&v10 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v10 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v10 < 9.22337204e18)
  {
    MEMORY[0x186DC45DC](3081666804, 0xA400000000000000, (uint64_t)v10);
    v11 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    swift_bridgeObjectRetain();
    v12 = (void *)sub_1865074D4();
    swift_bridgeObjectRelease();
    v13 = (void *)sub_18650739C();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_initWithString_attributes_, v12, v13);

    return;
  }
LABEL_10:
  __break(1u);
}

uint64_t sub_1855E4D10(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[20] = a1;
  v2[21] = v1;
  sub_18650775C();
  v2[22] = sub_186507750();
  sub_186507738();
  return swift_task_switch();
}

void sub_1855E4D7C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  char *v4;
  char *v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  char isEscapingClosureAtFileLocation;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  uint64_t inited;
  id v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  uint64_t v42;
  id v43;
  char *v44;

  v1 = *(void **)(v0 + 168);
  swift_release();
  v2 = objc_msgSend(v1, sel_textView);
  if (!v2)
    goto LABEL_17;
  v3 = v2;
  v4 = (char *)objc_msgSend(*(id *)(v0 + 160), sel_placeholderChunk);
  if (!v4)
    goto LABEL_17;
  v5 = v4;
  v6 = *(void **)(v0 + 168);
  v7 = OBJC_IVAR____TtCE5UIKitCSo37_UITextViewAnimatedPlaceholderSupportP33_5BBAEA65D78BEF4D602D567ACAD13A4016PlaceholderChunk_identifier;
  v8 = *(id *)&v4[OBJC_IVAR____TtCE5UIKitCSo37_UITextViewAnimatedPlaceholderSupportP33_5BBAEA65D78BEF4D602D567ACAD13A4016PlaceholderChunk_identifier];
  v9 = objc_msgSend(v6, sel_textView);
  if (!v9)
  {

    goto LABEL_17;
  }
  v10 = v9;
  v42 = v7;
  v43 = v3;
  v44 = v5;
  *(_QWORD *)(v0 + 136) = 0;
  *(_QWORD *)(v0 + 144) = 0;
  *(_BYTE *)(v0 + 152) = 1;
  v11 = objc_msgSend(v9, sel_textStorage);
  v12 = objc_msgSend(v11, sel_length);
  if (qword_1EDD83B88 != -1)
    swift_once();
  v13 = qword_1EDD85D28;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v8;
  *(_QWORD *)(v14 + 24) = v0 + 136;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1855E5AF0;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v0 + 120) = sub_1855E5AF4;
  *(_QWORD *)(v0 + 128) = v15;
  *(_QWORD *)(v0 + 88) = MEMORY[0x1E0C809B0];
  *(_QWORD *)(v0 + 96) = 1107296256;
  *(_QWORD *)(v0 + 104) = sub_18573ABC4;
  *(_QWORD *)(v0 + 112) = &block_descriptor_54_0;
  v16 = _Block_copy((const void *)(v0 + 88));
  v17 = v8;
  swift_retain();
  swift_release();
  objc_msgSend(v11, sel_enumerateAttribute_inRange_options_usingBlock_, v13, 0, v12, 0, v16);

  _Block_release(v16);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  v19 = *(_QWORD *)(v0 + 136);
  v20 = *(_QWORD *)(v0 + 144);
  v21 = *(_BYTE *)(v0 + 152);
  swift_release();

  if ((v21 & 1) != 0
    || (v22 = *(void **)&v44[OBJC_IVAR____TtCE5UIKitCSo37_UITextViewAnimatedPlaceholderSupportP33_5BBAEA65D78BEF4D602D567ACAD13A4016PlaceholderChunk_type]) == 0)
  {
LABEL_17:
    sub_186507E04();
    return;
  }
  v23 = v22;
  v24 = objc_msgSend(v23, sel_length);
  v41 = v23;
  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_initWithAttributedString_, v23);
  v26 = *(void **)off_1E1678D98;
  objc_msgSend(v25, sel_removeAttribute_range_, *(_QWORD *)off_1E1678D98, 0, v24);
  v27 = (void *)objc_opt_self();
  v28 = objc_msgSend(v27, sel_clearColor);
  objc_msgSend(v25, sel_addAttribute_value_range_, v26, v28, 0, v24);

  objc_msgSend(v25, sel_addAttribute_value_range_, qword_1EDD85D28, *(_QWORD *)&v44[v42], 0, v24);
  v29 = objc_msgSend(v43, sel_beginningOfDocument);
  v30 = objc_msgSend(v43, sel_positionFromPosition_offset_, v29, v19);
  if (!v30)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (__OFADD__(v19, v20))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v31 = v30;
  v32 = objc_msgSend(v43, sel_positionFromPosition_offset_, v29, v19 + v20);
  if (v32)
  {
    v33 = v32;
    v34 = objc_msgSend(v43, sel_textRangeFromPosition_toPosition_, v31, v32);

    if (v34)
    {
      v35 = objc_msgSend(v43, sel__replaceRange_withAttributedText_updatingSelection_, v34, v25, 0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85DF0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1866691E0;
      *(_QWORD *)(inited + 32) = v26;
      v37 = v26;
      v38 = objc_msgSend(v27, sel_labelColor);
      *(_QWORD *)(inited + 64) = sub_1851F9080(0, (unint64_t *)&qword_1ECD74900);
      *(_QWORD *)(inited + 40) = v38;
      sub_1856A1C98(inited);
      type metadata accessor for Key(0);
      sub_1855E59C4();
      v39 = (void *)sub_18650739C();
      swift_bridgeObjectRelease();
      v40 = objc_msgSend(v43, sel__targetedPreviewForRange_withRenderingAttributes_includeFullDocument_, v35, v39, 1);

      (*(void (**)(id))(v0 + 8))(v40);
      return;
    }
    goto LABEL_23;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
}

uint64_t _s16PlaceholderChunkCMa()
{
  return objc_opt_self();
}

uint64_t sub_1855E53F8()
{
  return _s17ActivePlaceholderCMa();
}

uint64_t _s17ActivePlaceholderCMa()
{
  uint64_t result;

  result = qword_1EDD85D58;
  if (!qword_1EDD85D58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1855E543C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_186506BBC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for _UITextViewAnimatedPlaceholderSupport(uint64_t a1)
{
  return sub_1851F9080(a1, &qword_1EDD85D88);
}

uint64_t type metadata accessor for _UITextViewAnimatedPlaceholderIdentifier(uint64_t a1)
{
  return sub_1851F9080(a1, &qword_1EDD85D90);
}

void **_s16PlaceholderChunkC9ChunkTypeOwCP(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void _s16PlaceholderChunkC9ChunkTypeOwxx(id *a1)
{

}

void **_s16PlaceholderChunkC9ChunkTypeOwca(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

void **_s16PlaceholderChunkC9ChunkTypeOwta(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t _s16PlaceholderChunkC9ChunkTypeOwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t _s16PlaceholderChunkC9ChunkTypeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *_s16PlaceholderChunkC9ChunkTypeOMa()
{
  return &_s16PlaceholderChunkC9ChunkTypeON;
}

uint64_t sub_1855E562C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_1855E5660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_BYTE *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1855E5AFC;
  return ((uint64_t (*)(uint64_t, char, uint64_t, uint64_t))((char *)&dword_1EDD85DA0 + dword_1EDD85DA0))(v2, v3, v5, v4);
}

uint64_t sub_1855E56E0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1855E5AFC;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EDD8A6B8 + dword_1EDD8A6B8))(v2, v3, v4);
}

uint64_t sub_1855E575C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1855E5AFC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EDD8A6C0 + dword_1EDD8A6C0))(a1, v4, v5, v6);
}

uint64_t sub_1855E57E0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1855E5804(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v4;

  sub_1855E36C4(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

uint64_t sub_1855E580C()
{
  return swift_deallocObject();
}

uint64_t sub_1855E581C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_18573ABA4(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_1855E5824()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_1855E5858()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1855E5AFC;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EDD85DC8 + dword_1EDD85DC8))(v2, v3, v4);
}

uint64_t objectdestroy_4Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1855E58F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1855E597C;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EDD8A6C0 + dword_1EDD8A6C0))(a1, v4, v5, v6);
}

uint64_t sub_1855E597C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

unint64_t sub_1855E59C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDD82C50;
  if (!qword_1EDD82C50)
  {
    type metadata accessor for Key(255);
    result = MEMORY[0x186DC9F28](&unk_186667474, v1);
    atomic_store(result, (unint64_t *)&qword_1EDD82C50);
  }
  return result;
}

uint64_t sub_1855E5A0C()
{
  return swift_deallocObject();
}

uint64_t sub_1855E5A1C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UITextEffectView.EffectID();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1855E5A58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UITextEffectView.EffectID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1855E5A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UITextEffectView.EffectID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1855E5AE0()
{
  return swift_deallocObject();
}

void sub_1855E5B18(double a1)
{
  char *v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  v2 = v1;
  *(double *)&v1[OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask_radius] = a1;
  sub_186507564();
  sub_186507D74();
  sub_186507564();
  sub_18650778C();
  sub_186507564();
  swift_bridgeObjectRelease();
  v3 = sub_1855E652C();
  v4 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_removeObjectForKey_, v4);

  v5 = objc_msgSend(v2, sel_layer);
  objc_msgSend(v5, sel_setNeedsDisplay);

}

uint64_t sub_1855E5C4C()
{
  uint64_t result;

  sub_1865074F8();
  sub_186507564();
  result = swift_bridgeObjectRelease();
  qword_1EDD85DF8 = 0xD000000000000015;
  unk_1EDD85E00 = 0x80000001866888A0;
  return result;
}

id sub_1855E5CBC()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask____lazy_storage___blurredPortal;
  v2 = *(void **)&v0[OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask____lazy_storage___blurredPortal];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask____lazy_storage___blurredPortal];
  }
  else
  {
    v4 = sub_1855E744C(v0);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1855E5D1C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask____lazy_storage___punchPortal;
  v2 = *(void **)&v0[OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask____lazy_storage___punchPortal];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask____lazy_storage___punchPortal];
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)_UIPortalView), sel_initWithSourceView_, *(_QWORD *)&v0[OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask_sourceView]);
    objc_msgSend(v4, sel_setAutoresizingMask_, 18);
    v5 = v4;
    objc_msgSend(v0, sel_bounds);
    objc_msgSend(v5, sel_setFrame_);

    objc_msgSend(v0, sel_addSubview_, v5);
    v6 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v5;
    v3 = v5;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

id sub_1855E5DF0(char a1, void *a2, double a3)
{
  _BYTE *v3;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t inited;
  id v13;
  objc_super v15;

  *(_QWORD *)&v3[OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask____lazy_storage___blurredPortal] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask____lazy_storage___punchPortal] = 0;
  v3[OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask_region] = a1 & 1;
  *(double *)&v3[OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask_radius] = a3;
  *(_QWORD *)&v3[OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask_sourceView] = a2;
  v15.receiver = v3;
  v15.super_class = (Class)_s15BlurredEdgeMaskCMa();
  v5 = a2;
  v6 = objc_msgSendSuper2(&v15, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v7 = objc_msgSend(v6, sel_layer);
  objc_msgSend(v7, sel_setContentsGravity_, *MEMORY[0x1E0CD2F78]);

  v8 = objc_msgSend(v6, sel_layer);
  objc_msgSend(v8, sel_setNeedsDisplayOnBoundsChange_, 1);

  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v10 = v6;
  v11 = objc_msgSend(v5, sel_superview);
  objc_msgSend(v9, sel_addObserver_selector_name_object_, v10, sel__contentViewDidUpdate, CFSTR("_UIVisualEffectContentViewDidUpdateNotification"), v11);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD82B00);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1866691E0;
  *(_QWORD *)(inited + 32) = &type metadata for _UIVisualEffectIsContentStaticTrait;
  *(_QWORD *)(inited + 40) = &off_1EDD7F7D0;
  v13 = v10;
  UIView.registerForTraitChanges(_:action:)(inited, (uint64_t)sel__contentViewDidUpdate);

  swift_setDeallocating();
  swift_unknownObjectRelease();

  return v13;
}

id sub_1855E5FF8()
{
  void *v0;
  id v1;
  objc_super v3;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v1, sel_removeObserver_, v0);

  v3.receiver = v0;
  v3.super_class = (Class)_s15BlurredEdgeMaskCMa();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1855E61A4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t result;
  _QWORD v8[6];

  v2 = objc_opt_self();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = a1;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_1855E7834;
  *(_QWORD *)(v4 + 24) = v3;
  v8[4] = sub_1855A65EC;
  v8[5] = v4;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1855D8DF4;
  v8[3] = &block_descriptor_18;
  v5 = _Block_copy(v8);
  v6 = a1;
  swift_retain();
  swift_release();
  objc_msgSend((id)v2, sel_performWithoutAnimation_, v5);
  _Block_release(v5);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v2 & 1) != 0)
    __break(1u);
  return result;
}

void sub_1855E6328()
{
  char *v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t i;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;

  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask_sourceView], sel_superview);
  if (v1)
  {
    v2 = v1;
    objc_opt_self();
    v3 = (void *)swift_dynamicCastObjCClass();
    if (v3)
      v4 = objc_msgSend(v3, sel__isContentViewStatic);
    else
      v4 = 0;

  }
  else
  {
    v4 = 0;
  }
  v5 = objc_msgSend(v0, sel_subviews);
  sub_1851F9080(0, (unint64_t *)&qword_1EDD82CE0);
  v6 = sub_186507654();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_186507E58();
    swift_bridgeObjectRelease();
    if (!v7)
      goto LABEL_16;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      goto LABEL_16;
  }
  if (v7 < 1)
  {
    __break(1u);
    return;
  }
  for (i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0)
      v9 = (id)MEMORY[0x186DC4CB4](i, v6);
    else
      v9 = *(id *)(v6 + 8 * i + 32);
    v10 = v9;
    objc_msgSend(v9, sel_setHidden_, v4);

  }
LABEL_16:
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v0, sel_layer);
  v12 = v11;
  if ((_DWORD)v4)
  {
    v13 = sub_1855E6B08();
    objc_msgSend(v12, sel_setContents_, v13);

  }
  else
  {
    objc_msgSend(v11, sel_setContents_, 0);

    sub_1855E722C();
  }
}

id sub_1855E652C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  uint64_t v6;
  _OWORD v7[2];
  _BYTE v8[24];
  uint64_t v9;

  v1 = *(void **)(v0
                + OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask_sourceView);
  swift_beginAccess();
  v2 = objc_getAssociatedObject(v1, &unk_1EDD85E08);
  swift_endAccess();
  if (v2)
  {
    sub_186507B1C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_1855B00F4((uint64_t)v7, (uint64_t)v8);
  if (!v9)
  {
    sub_1855BDE94((uint64_t)v8);
    goto LABEL_8;
  }
  sub_1851F9080(0, &qword_1EDD85E58);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E08]), sel_init);
    swift_beginAccess();
    v3 = v4;
    objc_setAssociatedObject(v1, &unk_1EDD85E08, v3, (void *)1);
    swift_endAccess();

    return v3;
  }
  return (id)v6;
}

uint64_t sub_1855E6684()
{
  char *v0;
  id v1;
  id v2;
  const void *v3;
  CFTypeID v4;
  id v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  id v16;
  uint64_t result;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  __int128 aBlock;
  void (*v24)(uint64_t, void *);
  void *v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  _OWORD v28[2];

  v1 = sub_1855E652C();
  *(_QWORD *)&v28[0] = 1802723693;
  *((_QWORD *)&v28[0] + 1) = 0xE400000000000000;
  v2 = objc_msgSend(v1, sel___swift_objectForKeyedSubscript_, sub_186508050());
  swift_unknownObjectRelease();

  if (v2)
  {
    sub_186507B1C();
    swift_unknownObjectRelease();
    sub_1850F6908(v28, &aBlock);
    __swift_project_boxed_opaque_existential_0Tm(&aBlock, (uint64_t)v25);
    v3 = (const void *)sub_186507FB4();
    v4 = CFGetTypeID(v3);
    swift_unknownObjectRelease();
    if (v4 == CGImageGetTypeID())
    {
      sub_1850F6908(&aBlock, v28);
      type metadata accessor for CGImage(0);
      swift_dynamicCast();
      return v22;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&aBlock);
  }
  sub_1851F9080(0, &qword_1EDD85E50);
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_preferredFormat);
  objc_msgSend(v6, sel_setPreferredRange_, 0x7FFFLL);
  objc_msgSend(v6, sel_setOpaque_, 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask_sourceView], sel_bounds);
  v11 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), sel_initWithBounds_format_, v6, v7, v8, v9, v10);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v0;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_1855E7434;
  *(_QWORD *)(v13 + 24) = v12;
  v26 = sub_1855D0084;
  v27 = v13;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v24 = sub_185665194;
  v25 = &block_descriptor_13;
  v14 = _Block_copy(&aBlock);
  v15 = v0;
  swift_retain();
  swift_release();
  v16 = objc_msgSend(v11, sel_imageWithActions_, v14);

  _Block_release(v14);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v11 & 1) == 0)
  {
    v18 = objc_msgSend(v16, sel_CGImage);
    v19 = sub_1855E652C();
    v20 = (void *)sub_1865074D4();
    v5 = v18;
    v21 = v20;
    objc_msgSend(v19, sel___swift_setObject_forKeyedSubscript_, v5, v21);
    swift_release();

    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

void sub_1855E69F8(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;

  v2 = *(void **)(a2
                + OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask_sourceView);
  v3 = objc_msgSend(v2, sel_layer);
  v4 = objc_msgSend(v3, sel_shadowPath);

  if (v4)
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
    objc_msgSend(v5, sel_setFill);

    v6 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithCGPath_, v4);
    objc_msgSend(v6, sel_fill);

  }
  else
  {
    objc_msgSend(v2, sel_bounds);
    objc_msgSend(v2, sel_drawViewHierarchyInRect_);
  }
}

id sub_1855E6B08()
{
  char *v0;
  char *v1;
  id v2;
  double v3;
  double v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  const void *v10;
  CFTypeID v11;
  id v12;
  uint64_t v13;
  void *v14;
  CGColorSpaceRef DeviceGray;
  uint64_t inited;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  double v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  void *v38;
  CGColorSpace *v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v47;
  CGColorSpace *v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  _OWORD v53[2];
  __int128 v54;
  uint64_t v55;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_traitCollection);
  objc_msgSend(v2, sel_displayScale);
  v4 = v3;

  v5 = objc_msgSend(v1, sel_layer);
  objc_msgSend(v5, sel_setContentsScale_, v4);

  v6 = OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask_region;
  v7 = OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask_radius;
  *(_QWORD *)&v54 = 0;
  *((_QWORD *)&v54 + 1) = 0xE000000000000000;
  sub_186507564();
  sub_186507D74();
  sub_186507564();
  sub_18650778C();
  sub_186507564();
  swift_bridgeObjectRelease();
  v8 = sub_1855E652C();
  *(_QWORD *)&v53[0] = 0;
  *((_QWORD *)&v53[0] + 1) = 0xE000000000000000;
  swift_bridgeObjectRetain_n();
  v9 = objc_msgSend(v8, sel___swift_objectForKeyedSubscript_, sub_186508050());
  swift_unknownObjectRelease();

  if (v9)
  {
    sub_186507B1C();
    swift_unknownObjectRelease();
    sub_1850F6908(v53, &v54);
    swift_bridgeObjectRelease();
    __swift_project_boxed_opaque_existential_0Tm(&v54, v55);
    v10 = (const void *)sub_186507FB4();
    v11 = CFGetTypeID(v10);
    swift_unknownObjectRelease();
    if (v11 == CGImageGetTypeID())
    {
      swift_bridgeObjectRelease();
      sub_1850F6908(&v54, v53);
      type metadata accessor for CGImage(0);
      swift_dynamicCast();
      return (id)v52;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v54);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v13 = sub_1855E6684();
  if (v13)
  {
    v14 = (void *)v13;
    DeviceGray = CGColorSpaceCreateDeviceGray();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85E38);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1866691E0;
    v17 = (void *)*MEMORY[0x1E0C9E110];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0C9E110];
    type metadata accessor for CGColorSpace(0);
    v49 = v18;
    *(_QWORD *)(inited + 64) = v18;
    *(_QWORD *)(inited + 40) = DeviceGray;
    v19 = v17;
    v48 = DeviceGray;
    v20 = v14;
    sub_1856A1CB4(inited);
    v21 = objc_allocWithZone(MEMORY[0x1E0C9DDC8]);
    type metadata accessor for CIImageOption(0);
    sub_1852478E0(&qword_1EDD84BD0, (uint64_t (*)(uint64_t))type metadata accessor for CIImageOption, (uint64_t)&unk_186669004);
    v22 = (void *)sub_18650739C();
    swift_bridgeObjectRelease();
    v23 = objc_msgSend(v21, sel_initWithCGImage_options_, v20, v22);

    v51 = v20;
    v24 = (void *)sub_1865074D4();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD81EA8);
    v25 = swift_initStackObject();
    *(_OWORD *)(v25 + 16) = xmmword_1866691E0;
    *(_QWORD *)(v25 + 32) = 0x6461527475706E69;
    *(_QWORD *)(v25 + 40) = 0xEB00000000737569;
    v26 = v4 * *(double *)&v1[v7];
    *(_QWORD *)(v25 + 72) = MEMORY[0x1E0DEF040];
    *(double *)(v25 + 48) = v26;
    sub_1856A1408(v25);
    v27 = (void *)sub_18650739C();
    swift_bridgeObjectRelease();
    v28 = objc_msgSend(v23, sel_imageByApplyingFilter_withInputParameters_, v24, v27);

    if (v1[v6])
      v29 = v28;
    else
      v29 = v23;
    v50 = v28;
    if (v1[v6])
      v30 = v23;
    else
      v30 = v28;
    v31 = v29;
    v32 = v30;
    v33 = (void *)sub_1865074D4();
    v34 = swift_initStackObject();
    *(_OWORD *)(v34 + 16) = xmmword_1866691E0;
    *(_QWORD *)(v34 + 32) = 0xD000000000000014;
    *(_QWORD *)(v34 + 40) = 0x80000001866888E0;
    *(_QWORD *)(v34 + 72) = sub_1851F9080(0, &qword_1EDD85E40);
    *(_QWORD *)(v34 + 48) = v32;
    v47 = v32;
    sub_1856A1408(v34);
    v35 = (void *)sub_18650739C();
    swift_bridgeObjectRelease();
    v36 = objc_msgSend(v31, sel_imageByApplyingFilter_withInputParameters_, v33, v35);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85E48);
    v37 = swift_initStackObject();
    *(_OWORD *)(v37 + 16) = xmmword_1866691E0;
    v38 = (void *)*MEMORY[0x1E0C9DFC0];
    *(_QWORD *)(v37 + 64) = v49;
    *(_QWORD *)(v37 + 32) = v38;
    *(_QWORD *)(v37 + 40) = v48;
    v39 = v48;
    v40 = v38;
    sub_1856A1DF8(v37);
    v41 = objc_allocWithZone(MEMORY[0x1E0C9DD90]);
    type metadata accessor for CIContextOption(0);
    sub_1852478E0(&qword_1EDD84BC0, (uint64_t (*)(uint64_t))type metadata accessor for CIContextOption, (uint64_t)&unk_186668FC0);
    v42 = (void *)sub_18650739C();
    swift_bridgeObjectRelease();
    v43 = objc_msgSend(v41, sel_initWithOptions_, v42);

    objc_msgSend(v36, sel_extent);
    v12 = objc_msgSend(v43, sel_createCGImage_fromRect_format_colorSpace_, v36, *MEMORY[0x1E0C9E020], v39);
    if (v12)
    {
      v44 = sub_1855E652C();
      *(_QWORD *)&v54 = 0;
      *((_QWORD *)&v54 + 1) = 0xE000000000000000;
      swift_bridgeObjectRetain();
      v45 = v12;
      objc_msgSend(v44, sel___swift_setObject_forKeyedSubscript_, v45, sub_186508050());
      swift_bridgeObjectRelease();

      swift_unknownObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v12;
}

void sub_1855E722C()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  int v5;
  id v6;
  uint64_t v7;
  id v8;

  v1 = sub_1855E5CBC();
  v2 = objc_msgSend(v1, sel_layer);

  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, *(double *)(v0+ OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask_radius));
  if (qword_1EDD83B90 != -1)
    swift_once();
  v4 = (void *)sub_1865074D4();
  objc_msgSend(v2, sel_setValue_forKeyPath_, v3, v4);

  v5 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask_region);
  v6 = sub_1855E5D1C();
  v8 = v6;
  if (v5)
    v7 = 20;
  else
    v7 = 15;
  objc_msgSend(v6, sel_setCompositingMode_, v7);

}

uint64_t _s15BlurredEdgeMaskCMa()
{
  return objc_opt_self();
}

uint64_t sub_1855E7410()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1855E7434(uint64_t a1)
{
  uint64_t v1;

  sub_1855E69F8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1855E743C()
{
  return swift_deallocObject();
}

id sub_1855E744C(char *a1)
{
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t inited;
  uint64_t v15;
  void *v16;

  v2 = objc_msgSend(objc_allocWithZone((Class)_UIPortalView), sel_initWithSourceView_, *(_QWORD *)&a1[OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews15BlurredEdgeMask_sourceView]);
  objc_msgSend(v2, sel_setAutoresizingMask_, 18);
  v3 = v2;
  objc_msgSend(a1, sel_bounds);
  objc_msgSend(v3, sel_setFrame_);

  objc_msgSend(a1, sel_addSubview_, v3);
  sub_1865074F8();
  v4 = objc_allocWithZone(MEMORY[0x1E0CD2780]);
  v5 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithType_, v5);

  v7 = (id)*MEMORY[0x1E0CD2D88];
  v8 = (void *)sub_1865074D4();
  objc_msgSend(v6, sel_setValue_forKey_, v7, v8);

  v9 = (void *)sub_1865074D4();
  objc_msgSend(v6, sel_setName_, v9);

  v10 = objc_msgSend(v3, sel_layer);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD81EC0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1866691E0;
  *(_QWORD *)(v11 + 56) = sub_1851F9080(0, (unint64_t *)&qword_1EDD81E88);
  *(_QWORD *)(v11 + 32) = v6;
  v12 = v6;
  v13 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_setFilters_, v13);

  __swift_instantiateConcreteTypeFromMangledName(qword_1EDD82FF0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1866691E0;
  if (qword_1EDD83B90 != -1)
    swift_once();
  v15 = unk_1EDD85E00;
  *(_QWORD *)(inited + 32) = qword_1EDD85DF8;
  *(_QWORD *)(inited + 40) = v15;
  swift_bridgeObjectRetain();
  sub_1856A3A48(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v16 = (void *)sub_1865077E0();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel__setAdditionalAnimatableKeypaths_, v16);

  return v3;
}

void sub_1855E775C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  _QWORD v6[6];

  v1 = (void *)UIApp;
  if (UIApp)
  {
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v0;
    v6[4] = sub_1855E782C;
    v6[5] = v2;
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 1107296256;
    v6[2] = sub_18530A69C;
    v6[3] = &block_descriptor_9_0;
    v3 = _Block_copy(v6);
    v4 = v1;
    v5 = v0;
    swift_release();
    objc_msgSend(v4, sel__performBlockAfterCATransactionCommits_, v3);
    _Block_release(v3);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1855E782C()
{
  uint64_t v0;

  return sub_1855E61A4(*(void **)(v0 + 16));
}

void sub_1855E7834()
{
  sub_1855E6328();
}

uint64_t sub_1855E7854()
{
  return swift_deallocObject();
}

float32x4_t sub_1855E787C(float32x4_t *a1, float32x4_t *a2)
{
  float32x4_t v2;
  float32x4_t v3;
  float32x4_t result;

  v2 = vaddq_f32(a1[1], a2[1]);
  *a1 = vaddq_f32(*a1, *a2);
  a1[1] = v2;
  v3 = vaddq_f32(a1[3], a2[3]);
  a1[2] = vaddq_f32(a1[2], a2[2]);
  a1[3] = v3;
  result = vaddq_f32(a1[4], a2[4]);
  a1[4] = result;
  return result;
}

uint64_t sub_1855E78B8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a2;
  v3 = (_QWORD *)result;
  if (*(_QWORD *)result)
  {
    if (a2)
    {
      v4 = *(_QWORD *)(*(_QWORD *)result + 16);
      v5 = *(_QWORD *)(a2 + 16);
      if (v4 == v5)
      {
        swift_bridgeObjectRetain();
        v6 = swift_bridgeObjectRetain();
        v7 = sub_185629EF8(v6, v2);
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease_n();
        v2 = v7;
        goto LABEL_10;
      }
      if (v5 >= v4)
      {
        swift_bridgeObjectRetain();
        result = swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    v2 = *(_QWORD *)result;
    goto LABEL_10;
  }
  if (a2)
    result = swift_bridgeObjectRetain();
LABEL_10:
  *v3 = v2;
  return result;
}

float32x4_t sub_1855E7978(float32x4_t *a1, float32x4_t *a2)
{
  float32x4_t v2;
  float32x4_t v3;
  float32x4_t result;

  v2 = vsubq_f32(a1[1], a2[1]);
  *a1 = vsubq_f32(*a1, *a2);
  a1[1] = v2;
  v3 = vsubq_f32(a1[3], a2[3]);
  a1[2] = vsubq_f32(a1[2], a2[2]);
  a1[3] = v3;
  result = vsubq_f32(a1[4], a2[4]);
  a1[4] = result;
  return result;
}

uint64_t sub_1855E79B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v6;
  char v7;
  uint64_t v8;
  void *v9;
  double v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  double v15;
  uint64_t v16;
  _QWORD *v17;
  char isUniquelyReferenced_nonNull_native;
  id v20;
  _BYTE v21[32];
  _BYTE v22[32];
  _OWORD v23[2];
  __int128 v24;
  uint64_t v25;
  _BYTE v26[32];

  v3 = v2;
  v6 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v2 + 48) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1855C4284(a1, a2);
    if ((v7 & 1) != 0)
    {
      swift_endAccess();
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74D60);
      v8 = swift_dynamicCastClassUnconditional();
      goto LABEL_13;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  v9 = (void *)MEMORY[0x186DCA138](v2 + 24);
  v10 = 0.0;
  if (v9)
  {
    v11 = v9;
    v12 = objc_msgSend(v9, sel_layer);

    v13 = (void *)sub_1865074D4();
    v14 = objc_msgSend(v12, sel_valueForKey_, v13);

    if (v14)
    {
      sub_186507B1C();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v26, 0, sizeof(v26));
    }
    sub_18519F0C4((uint64_t)v26, (uint64_t)&v24, &qword_1ECD75B20);
    if (v25)
    {
      sub_1850F6908(&v24, v23);
      sub_1850F69D4((uint64_t)v23, (uint64_t)v22);
      sub_1850F69D4((uint64_t)v22, (uint64_t)v21);
      sub_1851F9080(0, (unint64_t *)&qword_1ECD75368);
      swift_dynamicCast();
      objc_msgSend(v20, sel_doubleValue);
      v10 = v15;

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v22);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
    }
    sub_18519F088((uint64_t)v26, &qword_1ECD75B20);
  }
  v16 = swift_allocObject();
  swift_weakInit();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v16;
  v17[3] = a1;
  v17[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74D60);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v8 = sub_18579CF40((uint64_t)sub_18562BB5C, (uint64_t)v17, v10);
  swift_release();
  *(_BYTE *)(v8 + 144) = 1;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v24 = *(_QWORD *)(v3 + 48);
  *(_QWORD *)(v3 + 48) = 0x8000000000000000;
  sub_18562A5C0(v8, a1, a2, isUniquelyReferenced_nonNull_native, (_QWORD **)&v24, &qword_1ECD74D58, &qword_1ECD74D60);
  *(_QWORD *)(v3 + 48) = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
LABEL_13:
  sub_185638FF8(&qword_1ECD74D58, &qword_1ECD74D60, (uint64_t)&unk_1866714F8);
  os_unfair_lock_unlock(v6);
  return v8;
}

uint64_t sub_1855E7D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v6;
  char v7;
  uint64_t v8;
  void *v9;
  __int128 v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _QWORD *v20;
  char isUniquelyReferenced_nonNull_native;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  id v28;
  _BYTE v29[32];
  _BYTE v30[32];
  _OWORD v31[2];
  __int128 v32;
  uint64_t v33;
  _BYTE v34[32];
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v3 = v2;
  v6 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v2 + 48) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1855C4284(a1, a2);
    if ((v7 & 1) != 0)
    {
      swift_endAccess();
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD7D4F8);
      v8 = swift_dynamicCastClassUnconditional();
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  v9 = (void *)MEMORY[0x186DCA138](v2 + 24);
  v10 = 0uLL;
  if (v9)
  {
    v11 = v9;
    v12 = objc_msgSend(v9, sel_layer, 0.0);

    v13 = (void *)sub_1865074D4();
    v14 = objc_msgSend(v12, sel_valueForKey_, v13);

    if (v14)
    {
      sub_186507B1C();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v34, 0, sizeof(v34));
    }
    sub_18519F0C4((uint64_t)v34, (uint64_t)&v32, &qword_1ECD75B20);
    if (v33)
    {
      sub_1850F6908(&v32, v31);
      sub_1850F69D4((uint64_t)v31, (uint64_t)v30);
      sub_1850F69D4((uint64_t)v30, (uint64_t)v29);
      sub_1851F9080(0, (unint64_t *)&qword_1EDD82FD0);
      swift_dynamicCast();
      objc_msgSend(v28, sel_CAColorMatrixValue);
      v26 = v36;
      v27 = v35;
      v24 = v38;
      v25 = v37;
      v23 = v39;

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v30);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v31);
      sub_18519F088((uint64_t)v34, &qword_1ECD75B20);
      v18 = v23;
      v17 = v24;
      v16 = v25;
      v15 = v26;
      v10 = v27;
    }
    else
    {
      sub_18519F088((uint64_t)v34, &qword_1ECD75B20);
      v15 = 0uLL;
      v16 = 0uLL;
      v17 = 0uLL;
      v18 = 0uLL;
      v10 = 0uLL;
    }
  }
  else
  {
    v15 = 0uLL;
    v16 = 0uLL;
    v17 = 0uLL;
    v18 = 0uLL;
  }
  v35 = v10;
  v36 = v15;
  v37 = v16;
  v38 = v17;
  v39 = v18;
  v19 = swift_allocObject();
  swift_weakInit();
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = v19;
  v20[3] = a1;
  v20[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD7D4F8);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v8 = sub_18579CF54(&v35, (uint64_t)sub_18563AF1C, (uint64_t)v20);
  swift_release();
  *(_BYTE *)(v8 + 488) = 1;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v32 = *(_QWORD *)(v3 + 48);
  *(_QWORD *)(v3 + 48) = 0x8000000000000000;
  sub_18562A5C0(v8, a1, a2, isUniquelyReferenced_nonNull_native, (_QWORD **)&v32, &qword_1EDD7D4F0, &qword_1EDD7D4F8);
  *(_QWORD *)(v3 + 48) = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
LABEL_14:
  sub_185638FF8(&qword_1EDD7D4F0, &qword_1EDD7D4F8, (uint64_t)&unk_1866714F8);
  os_unfair_lock_unlock(v6);
  return v8;
}

uint64_t sub_1855E8134(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v6;
  char v7;
  uint64_t v8;
  void *v9;
  double v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  _QWORD *v19;
  char isUniquelyReferenced_nonNull_native;
  id v22;
  _BYTE v23[32];
  _BYTE v24[32];
  _OWORD v25[2];
  __int128 v26;
  uint64_t v27;
  _BYTE v28[32];

  v3 = v2;
  v6 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v2 + 48) + 16))
  {
LABEL_5:
    swift_endAccess();
    v9 = (void *)MEMORY[0x186DCA138](v2 + 24);
    v10 = 0.0;
    if (v9)
    {
      v11 = v9;
      v12 = objc_msgSend(v9, sel_layer);

      v13 = (void *)sub_1865074D4();
      v14 = objc_msgSend(v12, sel_valueForKey_, v13);

      if (v14)
      {
        sub_186507B1C();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v28, 0, sizeof(v28));
      }
      sub_18519F0C4((uint64_t)v28, (uint64_t)&v26, &qword_1ECD75B20);
      if (v27)
      {
        sub_1850F6908(&v26, v25);
        sub_1850F69D4((uint64_t)v25, (uint64_t)v24);
        sub_1850F69D4((uint64_t)v24, (uint64_t)v23);
        sub_1851F9080(0, (unint64_t *)&qword_1EDD82FD0);
        swift_dynamicCast();
        objc_msgSend(v22, sel_CGSizeValue);
        v10 = v15;
        v17 = v16;

        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
        sub_18519F088((uint64_t)v28, &qword_1ECD75B20);
LABEL_13:
        v18 = swift_allocObject();
        swift_weakInit();
        v19 = (_QWORD *)swift_allocObject();
        v19[2] = v18;
        v19[3] = a1;
        v19[4] = a2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD81FF0);
        swift_allocObject();
        swift_bridgeObjectRetain();
        v8 = sub_18579D278((uint64_t)sub_18563AF1C, (uint64_t)v19, v10, v17);
        swift_release();
        *(_BYTE *)(v8 + 184) = 1;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v26 = *(_QWORD *)(v3 + 48);
        *(_QWORD *)(v3 + 48) = 0x8000000000000000;
        sub_18562A5C0(v8, a1, a2, isUniquelyReferenced_nonNull_native, (_QWORD **)&v26, &qword_1EDD81FE8, &qword_1EDD81FF0);
        *(_QWORD *)(v3 + 48) = v26;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        goto LABEL_14;
      }
      sub_18519F088((uint64_t)v28, &qword_1ECD75B20);
    }
    v17 = 0.0;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  sub_1855C4284(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  swift_endAccess();
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD81FF0);
  v8 = swift_dynamicCastClassUnconditional();
LABEL_14:
  sub_185638FF8(&qword_1EDD81FE8, &qword_1EDD81FF0, (uint64_t)&unk_1866714F8);
  os_unfair_lock_unlock(v6);
  return v8;
}

uint64_t sub_1855E84DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v6;
  char v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char isUniquelyReferenced_nonNull_native;
  _BYTE v19[32];
  _OWORD v20[2];
  __int128 v21;
  uint64_t v22;
  _OWORD v23[2];

  v3 = v2;
  v6 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v2 + 48) + 16))
  {
LABEL_5:
    swift_endAccess();
    v9 = (void *)MEMORY[0x186DCA138](v2 + 24);
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, sel_layer);

      v12 = (void *)sub_1865074D4();
      v13 = objc_msgSend(v11, sel_valueForKey_, v12);

      if (v13)
      {
        sub_186507B1C();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v23, 0, sizeof(v23));
      }
      sub_18519F0C4((uint64_t)v23, (uint64_t)&v21, &qword_1ECD75B20);
      if (v22)
      {
        sub_1850F6908(&v21, v20);
        sub_1850F69D4((uint64_t)v20, (uint64_t)v19);
        v14 = sub_1857385F0((uint64_t)v19);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v20);
        sub_18519F088((uint64_t)v23, &qword_1ECD75B20);
LABEL_13:
        v15 = swift_allocObject();
        swift_weakInit();
        v16 = (_QWORD *)swift_allocObject();
        v16[2] = v15;
        v16[3] = a1;
        v16[4] = a2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85E88);
        swift_allocObject();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v8 = sub_18579BA94(v14, (uint64_t)sub_18563AF1C, (uint64_t)v16);
        *(_BYTE *)(v8 + 112) = 1;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v21 = *(_QWORD *)(v3 + 48);
        *(_QWORD *)(v3 + 48) = 0x8000000000000000;
        sub_18562A5C0(v8, a1, a2, isUniquelyReferenced_nonNull_native, (_QWORD **)&v21, &qword_1EDD85E90, &qword_1EDD85E88);
        *(_QWORD *)(v3 + 48) = v21;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
      sub_18519F088((uint64_t)v23, &qword_1ECD75B20);
    }
    v14 = 0;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  sub_1855C4284(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  swift_endAccess();
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85E88);
  v8 = swift_dynamicCastClassUnconditional();
LABEL_14:
  sub_185638FF8(&qword_1EDD85E90, &qword_1EDD85E88, (uint64_t)&unk_1866714F8);
  os_unfair_lock_unlock(v6);
  return v8;
}

uint64_t sub_1855E881C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v6;
  char v7;
  uint64_t v8;
  void *v9;
  __int128 v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _QWORD *v19;
  char isUniquelyReferenced_nonNull_native;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  id v26;
  _BYTE v27[32];
  _BYTE v28[32];
  _OWORD v29[2];
  __int128 v30;
  uint64_t v31;
  _BYTE v32[32];
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  v3 = v2;
  v6 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v2 + 48) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1855C4284(a1, a2);
    if ((v7 & 1) != 0)
    {
      swift_endAccess();
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD828E0);
      v8 = swift_dynamicCastClassUnconditional();
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  v9 = (void *)MEMORY[0x186DCA138](v2 + 24);
  v10 = 0uLL;
  if (v9)
  {
    v11 = v9;
    v12 = objc_msgSend(v9, sel_layer, 0.0);

    v13 = (void *)sub_1865074D4();
    v14 = objc_msgSend(v12, sel_valueForKey_, v13);

    if (v14)
    {
      sub_186507B1C();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v32, 0, sizeof(v32));
    }
    sub_18519F0C4((uint64_t)v32, (uint64_t)&v30, &qword_1ECD75B20);
    if (v31)
    {
      sub_1850F6908(&v30, v29);
      sub_1850F69D4((uint64_t)v29, (uint64_t)v28);
      sub_1850F69D4((uint64_t)v28, (uint64_t)v27);
      sub_1851F9080(0, (unint64_t *)&qword_1EDD82FD0);
      swift_dynamicCast();
      objc_msgSend(v26, sel_CACornerRadiiValue);
      v24 = v34;
      v25 = v33;
      v22 = v36;
      v23 = v35;

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v29);
      sub_18519F088((uint64_t)v32, &qword_1ECD75B20);
      v17 = v22;
      v16 = v23;
      v15 = v24;
      v10 = v25;
    }
    else
    {
      sub_18519F088((uint64_t)v32, &qword_1ECD75B20);
      v15 = 0uLL;
      v16 = 0uLL;
      v17 = 0uLL;
      v10 = 0uLL;
    }
  }
  else
  {
    v15 = 0uLL;
    v16 = 0uLL;
    v17 = 0uLL;
  }
  v33 = v10;
  v34 = v15;
  v35 = v16;
  v36 = v17;
  v18 = swift_allocObject();
  swift_weakInit();
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v18;
  v19[3] = a1;
  v19[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD828E0);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v8 = sub_18579D28C((uint64_t *)&v33, (uint64_t)sub_18563AF1C, (uint64_t)v19);
  swift_release();
  *(_BYTE *)(v8 + 424) = 1;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v30 = *(_QWORD *)(v3 + 48);
  *(_QWORD *)(v3 + 48) = 0x8000000000000000;
  sub_18562A5C0(v8, a1, a2, isUniquelyReferenced_nonNull_native, (_QWORD **)&v30, &qword_1EDD828D8, &qword_1EDD828E0);
  *(_QWORD *)(v3 + 48) = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
LABEL_14:
  sub_185638FF8(&qword_1EDD828D8, &qword_1EDD828E0, (uint64_t)&unk_1866714F8);
  os_unfair_lock_unlock(v6);
  return v8;
}

uint64_t sub_1855E8BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v6;
  char v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  _BYTE v19[32];
  _OWORD v20[2];
  __int128 v21;
  uint64_t v22;
  _OWORD v23[2];

  v3 = v2;
  v6 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v2 + 48) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1855C4284(a1, a2);
    if ((v7 & 1) != 0)
    {
      swift_endAccess();
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82030);
      v8 = swift_dynamicCastClassUnconditional();
      goto LABEL_13;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  v9 = (void *)MEMORY[0x186DCA138](v2 + 24);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend(v9, sel_layer);

    v12 = (void *)sub_1865074D4();
    v13 = objc_msgSend(v11, sel_valueForKey_, v12);

    if (v13)
    {
      sub_186507B1C();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v23, 0, sizeof(v23));
    }
    sub_18519F0C4((uint64_t)v23, (uint64_t)&v21, &qword_1ECD75B20);
    if (v22)
    {
      sub_1850F6908(&v21, v20);
      sub_1850F69D4((uint64_t)v20, (uint64_t)v19);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82038);
      swift_dynamicCast();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v20);
      sub_18519F088((uint64_t)v23, &qword_1ECD75B20);
    }
    else
    {
      sub_18519F088((uint64_t)v23, &qword_1ECD75B20);
    }
  }
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v14;
  v15[3] = a1;
  v15[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82030);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v16 = swift_bridgeObjectRetain();
  v8 = sub_18579BCE0(v16, (uint64_t)sub_18563AF1C, (uint64_t)v15);
  *(_BYTE *)(v8 + 112) = 1;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v21 = *(_QWORD *)(v3 + 48);
  *(_QWORD *)(v3 + 48) = 0x8000000000000000;
  sub_18562A5C0(v8, a1, a2, isUniquelyReferenced_nonNull_native, (_QWORD **)&v21, (unint64_t *)&unk_1EDD82020, &qword_1EDD82030);
  *(_QWORD *)(v3 + 48) = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_bridgeObjectRelease();
LABEL_13:
  sub_185638FF8((unint64_t *)&unk_1EDD82020, &qword_1EDD82030, (uint64_t)&unk_1866714F8);
  os_unfair_lock_unlock(v6);
  return v8;
}

uint64_t sub_1855E8F60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v6;
  char v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char isUniquelyReferenced_nonNull_native;
  os_unfair_lock_s *v26;
  void *v27;
  _BYTE v28[32];
  _BYTE v29[32];
  _OWORD v30[2];
  __int128 v31;
  uint64_t v32;
  _QWORD v33[4];
  unsigned int v34;
  unsigned __int8 v35;
  __int128 v36;
  __int128 v37;
  int v38;
  char v39;

  v3 = v2;
  v6 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v2 + 48) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1855C4284(a1, a2);
    if ((v7 & 1) != 0)
    {
      swift_endAccess();
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD7D508);
      v8 = swift_dynamicCastClassUnconditional();
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  v9 = (void *)MEMORY[0x186DCA138](v2 + 24);
  v10 = v9;
  v26 = v6;
  if (v9)
  {
    v11 = objc_msgSend(v9, sel_layer);

    v12 = (void *)sub_1865074D4();
    v13 = objc_msgSend(v11, sel_valueForKey_, v12);

    if (v13)
    {
      sub_186507B1C();
      swift_unknownObjectRelease();
    }
    else
    {
      v36 = 0u;
      v37 = 0u;
    }
    v14 = a1;
    sub_18519F0C4((uint64_t)&v36, (uint64_t)&v31, &qword_1ECD75B20);
    if (v32)
    {
      sub_1850F6908(&v31, v30);
      sub_1850F69D4((uint64_t)v30, (uint64_t)v29);
      sub_1850F69D4((uint64_t)v29, (uint64_t)v28);
      sub_1851F9080(0, &qword_1EDD7D578);
      swift_dynamicCast();
      sub_1856F9640(v27, (uint64_t)v33);
      v15 = v33[0];
      v16 = v33[1];
      v17 = v33[2];
      v18 = v33[3];
      v19 = v34;
      v20 = v35;

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v29);
      v21 = 0x100000000;
      if (!v20)
        v21 = 0;
      v10 = (void *)(v21 | v19);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v30);
      sub_18519F088((uint64_t)&v36, &qword_1ECD75B20);
    }
    else
    {
      sub_18519F088((uint64_t)&v36, &qword_1ECD75B20);
      v15 = 0;
      v16 = 0;
      v17 = 0;
      v18 = 0;
      v10 = 0;
    }
  }
  else
  {
    v14 = a1;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
  }
  *(_QWORD *)&v36 = v15;
  *((_QWORD *)&v36 + 1) = v16;
  *(_QWORD *)&v37 = v17;
  *((_QWORD *)&v37 + 1) = v18;
  v38 = (int)v10;
  v39 = BYTE4(v10);
  v22 = swift_allocObject();
  swift_weakInit();
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v22;
  v23[3] = v14;
  v23[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD7D508);
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_18562BDE4(v15);
  v8 = sub_18579BF24((uint64_t)&v36, (uint64_t)sub_18563AF1C, (uint64_t)v23);
  *(_BYTE *)(v8 + 264) = 1;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v30[0] = *(_QWORD *)(v3 + 48);
  *(_QWORD *)(v3 + 48) = 0x8000000000000000;
  sub_18562A5C0(v8, v14, a2, isUniquelyReferenced_nonNull_native, (_QWORD **)v30, &qword_1EDD7D500, &qword_1EDD7D508);
  *(_QWORD *)(v3 + 48) = *(_QWORD *)&v30[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_18562BE1C(v15);
  v6 = v26;
LABEL_16:
  sub_185638FF8(&qword_1EDD7D500, &qword_1EDD7D508, (uint64_t)&unk_1866714F8);
  os_unfair_lock_unlock(v6);
  return v8;
}

uint64_t sub_1855E9380(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v6;
  char v7;
  uint64_t v8;
  void *v9;
  double v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  _QWORD *v19;
  char isUniquelyReferenced_nonNull_native;
  id v22;
  _BYTE v23[32];
  _BYTE v24[32];
  _OWORD v25[2];
  __int128 v26;
  uint64_t v27;
  _BYTE v28[32];

  v3 = v2;
  v6 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v2 + 48) + 16))
  {
LABEL_5:
    swift_endAccess();
    v9 = (void *)MEMORY[0x186DCA138](v2 + 24);
    v10 = 0.0;
    if (v9)
    {
      v11 = v9;
      v12 = objc_msgSend(v9, sel_layer);

      v13 = (void *)sub_1865074D4();
      v14 = objc_msgSend(v12, sel_valueForKey_, v13);

      if (v14)
      {
        sub_186507B1C();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v28, 0, sizeof(v28));
      }
      sub_18519F0C4((uint64_t)v28, (uint64_t)&v26, &qword_1ECD75B20);
      if (v27)
      {
        sub_1850F6908(&v26, v25);
        sub_1850F69D4((uint64_t)v25, (uint64_t)v24);
        sub_1850F69D4((uint64_t)v24, (uint64_t)v23);
        sub_1851F9080(0, (unint64_t *)&qword_1EDD82FD0);
        swift_dynamicCast();
        objc_msgSend(v22, sel_CGPointValue);
        v10 = v15;
        v17 = v16;

        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
        sub_18519F088((uint64_t)v28, &qword_1ECD75B20);
LABEL_13:
        v18 = swift_allocObject();
        swift_weakInit();
        v19 = (_QWORD *)swift_allocObject();
        v19[2] = v18;
        v19[3] = a1;
        v19[4] = a2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD7D518);
        swift_allocObject();
        swift_bridgeObjectRetain();
        v8 = sub_18579D574((uint64_t)sub_18563AF1C, (uint64_t)v19, v10, v17);
        swift_release();
        *(_BYTE *)(v8 + 184) = 1;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v26 = *(_QWORD *)(v3 + 48);
        *(_QWORD *)(v3 + 48) = 0x8000000000000000;
        sub_18562A5C0(v8, a1, a2, isUniquelyReferenced_nonNull_native, (_QWORD **)&v26, &qword_1EDD7D510, &qword_1EDD7D518);
        *(_QWORD *)(v3 + 48) = v26;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        goto LABEL_14;
      }
      sub_18519F088((uint64_t)v28, &qword_1ECD75B20);
    }
    v17 = 0.0;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  sub_1855C4284(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  swift_endAccess();
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD7D518);
  v8 = swift_dynamicCastClassUnconditional();
LABEL_14:
  sub_185638FF8(&qword_1EDD7D510, &qword_1EDD7D518, (uint64_t)&unk_1866714F8);
  os_unfair_lock_unlock(v6);
  return v8;
}

uint64_t sub_1855E9728(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v6;
  char v7;
  uint64_t v8;
  void *v9;
  double v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  _QWORD *v22;
  char isUniquelyReferenced_nonNull_native;
  _BYTE v25[32];
  _OWORD v26[2];
  __int128 v27;
  uint64_t v28;
  _OWORD v29[2];

  v3 = v2;
  v6 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v2 + 48) + 16))
  {
LABEL_5:
    swift_endAccess();
    v9 = (void *)MEMORY[0x186DCA138](v2 + 24);
    v10 = 0.0;
    if (v9)
    {
      v11 = v9;
      v12 = objc_msgSend(v9, sel_layer);

      v13 = (void *)sub_1865074D4();
      v14 = objc_msgSend(v12, sel_valueForKey_, v13);

      if (v14)
      {
        sub_186507B1C();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v29, 0, sizeof(v29));
      }
      sub_18519F0C4((uint64_t)v29, (uint64_t)&v27, &qword_1ECD75B20);
      if (v28)
      {
        sub_1850F6908(&v27, v26);
        sub_1850F69D4((uint64_t)v26, (uint64_t)v25);
        v10 = sub_18577AAC0((uint64_t)v25);
        v16 = v15;
        v18 = v17;
        v20 = v19;
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v26);
        sub_18519F088((uint64_t)v29, &qword_1ECD75B20);
LABEL_13:
        v21 = swift_allocObject();
        swift_weakInit();
        v22 = (_QWORD *)swift_allocObject();
        v22[2] = v21;
        v22[3] = a1;
        v22[4] = a2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD828F0);
        swift_allocObject();
        swift_bridgeObjectRetain();
        v8 = sub_18579D588((uint64_t)sub_18563AF1C, (uint64_t)v22, v10, v16, v18, v20);
        swift_release();
        *(_BYTE *)(v8 + 264) = 1;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v27 = *(_QWORD *)(v3 + 48);
        *(_QWORD *)(v3 + 48) = 0x8000000000000000;
        sub_18562A5C0(v8, a1, a2, isUniquelyReferenced_nonNull_native, (_QWORD **)&v27, &qword_1EDD828E8, &qword_1EDD828F0);
        *(_QWORD *)(v3 + 48) = v27;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        goto LABEL_14;
      }
      sub_18519F088((uint64_t)v29, &qword_1ECD75B20);
    }
    v16 = 0.0;
    v18 = 0.0;
    v20 = 0.0;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  sub_1855C4284(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  swift_endAccess();
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD828F0);
  v8 = swift_dynamicCastClassUnconditional();
LABEL_14:
  sub_185638FF8(&qword_1EDD828E8, &qword_1EDD828F0, (uint64_t)&unk_1866714F8);
  os_unfair_lock_unlock(v6);
  return v8;
}

uint64_t sub_1855E9A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v6;
  char v7;
  uint64_t v8;
  void *v9;
  double v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  double v15;
  uint64_t v16;
  _QWORD *v17;
  char isUniquelyReferenced_nonNull_native;
  id v20;
  _BYTE v21[32];
  _BYTE v22[32];
  _OWORD v23[2];
  __int128 v24;
  uint64_t v25;
  _BYTE v26[32];

  v3 = v2;
  v6 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v2 + 48) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1855C4284(a1, a2);
    if ((v7 & 1) != 0)
    {
      swift_endAccess();
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD82A48);
      v8 = swift_dynamicCastClassUnconditional();
      goto LABEL_13;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  v9 = (void *)MEMORY[0x186DCA138](v2 + 24);
  v10 = 0.0;
  if (v9)
  {
    v11 = v9;
    v12 = objc_msgSend(v9, sel_layer);

    v13 = (void *)sub_1865074D4();
    v14 = objc_msgSend(v12, sel_valueForKey_, v13);

    if (v14)
    {
      sub_186507B1C();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v26, 0, sizeof(v26));
    }
    sub_18519F0C4((uint64_t)v26, (uint64_t)&v24, &qword_1ECD75B20);
    if (v25)
    {
      sub_1850F6908(&v24, v23);
      sub_1850F69D4((uint64_t)v23, (uint64_t)v22);
      sub_1850F69D4((uint64_t)v22, (uint64_t)v21);
      sub_1851F9080(0, (unint64_t *)&qword_1ECD75368);
      swift_dynamicCast();
      objc_msgSend(v20, sel_doubleValue);
      v10 = v15;

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v22);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
    }
    sub_18519F088((uint64_t)v26, &qword_1ECD75B20);
  }
  v16 = swift_allocObject();
  swift_weakInit();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v16;
  v17[3] = a1;
  v17[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD82A48);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v8 = sub_18579D59C((uint64_t)sub_18563AF1C, (uint64_t)v17, v10);
  swift_release();
  *(_BYTE *)(v8 + 144) = 1;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v24 = *(_QWORD *)(v3 + 48);
  *(_QWORD *)(v3 + 48) = 0x8000000000000000;
  sub_18562A5C0(v8, a1, a2, isUniquelyReferenced_nonNull_native, (_QWORD **)&v24, &qword_1EDD82A40, (uint64_t *)&unk_1EDD82A48);
  *(_QWORD *)(v3 + 48) = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
LABEL_13:
  sub_185638FF8(&qword_1EDD82A40, (uint64_t *)&unk_1EDD82A48, (uint64_t)&unk_1866714F8);
  os_unfair_lock_unlock(v6);
  return v8;
}

uint64_t sub_1855E9E14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v6;
  char v7;
  uint64_t v8;
  void *v9;
  double v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  _QWORD *v23;
  char isUniquelyReferenced_nonNull_native;
  id v26;
  _BYTE v27[32];
  _BYTE v28[32];
  _OWORD v29[2];
  __int128 v30;
  uint64_t v31;
  _BYTE v32[32];

  v3 = v2;
  v6 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v2 + 48) + 16))
  {
LABEL_5:
    swift_endAccess();
    v9 = (void *)MEMORY[0x186DCA138](v2 + 24);
    v10 = 0.0;
    if (v9)
    {
      v11 = v9;
      v12 = objc_msgSend(v9, sel_layer);

      v13 = (void *)sub_1865074D4();
      v14 = objc_msgSend(v12, sel_valueForKey_, v13);

      if (v14)
      {
        sub_186507B1C();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v32, 0, sizeof(v32));
      }
      sub_18519F0C4((uint64_t)v32, (uint64_t)&v30, &qword_1ECD75B20);
      if (v31)
      {
        sub_1850F6908(&v30, v29);
        sub_1850F69D4((uint64_t)v29, (uint64_t)v28);
        sub_1850F69D4((uint64_t)v28, (uint64_t)v27);
        sub_1851F9080(0, (unint64_t *)&qword_1EDD82FD0);
        swift_dynamicCast();
        objc_msgSend(v26, sel_CGRectValue);
        v10 = v15;
        v17 = v16;
        v19 = v18;
        v21 = v20;

        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v29);
        sub_18519F088((uint64_t)v32, &qword_1ECD75B20);
LABEL_13:
        v22 = swift_allocObject();
        swift_weakInit();
        v23 = (_QWORD *)swift_allocObject();
        v23[2] = v22;
        v23[3] = a1;
        v23[4] = a2;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD82D78);
        swift_allocObject();
        swift_bridgeObjectRetain();
        v8 = sub_18579D7F4((uint64_t)sub_18563AF1C, (uint64_t)v23, v10, v17, v19, v21);
        swift_release();
        *(_BYTE *)(v8 + 264) = 1;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v30 = *(_QWORD *)(v3 + 48);
        *(_QWORD *)(v3 + 48) = 0x8000000000000000;
        sub_18562A5C0(v8, a1, a2, isUniquelyReferenced_nonNull_native, (_QWORD **)&v30, &qword_1EDD82D70, (uint64_t *)&unk_1EDD82D78);
        *(_QWORD *)(v3 + 48) = v30;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        goto LABEL_14;
      }
      sub_18519F088((uint64_t)v32, &qword_1ECD75B20);
    }
    v17 = 0.0;
    v19 = 0.0;
    v21 = 0.0;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  sub_1855C4284(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  swift_endAccess();
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD82D78);
  v8 = swift_dynamicCastClassUnconditional();
LABEL_14:
  sub_185638FF8(&qword_1EDD82D70, (uint64_t *)&unk_1EDD82D78, (uint64_t)&unk_1866714F8);
  os_unfair_lock_unlock(v6);
  return v8;
}

uint64_t sub_1855EA1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v6;
  char v7;
  uint64_t v8;
  void *v9;
  double v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  _QWORD *v23;
  char isUniquelyReferenced_nonNull_native;
  id v26;
  _BYTE v27[32];
  _BYTE v28[32];
  _OWORD v29[2];
  __int128 v30;
  uint64_t v31;
  _BYTE v32[32];

  v3 = v2;
  v6 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v2 + 48) + 16))
  {
LABEL_5:
    swift_endAccess();
    v9 = (void *)MEMORY[0x186DCA138](v2 + 24);
    v10 = 0.0;
    if (v9)
    {
      v11 = v9;
      v12 = objc_msgSend(v9, sel_layer);

      v13 = (void *)sub_1865074D4();
      v14 = objc_msgSend(v12, sel_valueForKey_, v13);

      if (v14)
      {
        sub_186507B1C();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v32, 0, sizeof(v32));
      }
      sub_18519F0C4((uint64_t)v32, (uint64_t)&v30, &qword_1ECD75B20);
      if (v31)
      {
        sub_1850F6908(&v30, v29);
        sub_1850F69D4((uint64_t)v29, (uint64_t)v28);
        sub_1850F69D4((uint64_t)v28, (uint64_t)v27);
        sub_1851F9080(0, (unint64_t *)&qword_1EDD82FD0);
        swift_dynamicCast();
        objc_msgSend(v26, sel_CGRectValue);
        v10 = v15;
        v17 = v16;
        v19 = v18;
        v21 = v20;

        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v29);
        sub_18519F088((uint64_t)v32, &qword_1ECD75B20);
LABEL_13:
        v22 = swift_allocObject();
        swift_weakInit();
        v23 = (_QWORD *)swift_allocObject();
        v23[2] = v22;
        v23[3] = a1;
        v23[4] = a2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD816F8);
        swift_allocObject();
        swift_bridgeObjectRetain();
        v8 = sub_18579D808((uint64_t)sub_18563AF1C, (uint64_t)v23, v10, v17, v19, v21);
        swift_release();
        *(_BYTE *)(v8 + 264) = 1;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v30 = *(_QWORD *)(v3 + 48);
        *(_QWORD *)(v3 + 48) = 0x8000000000000000;
        sub_18562A5C0(v8, a1, a2, isUniquelyReferenced_nonNull_native, (_QWORD **)&v30, &qword_1EDD816F0, &qword_1EDD816F8);
        *(_QWORD *)(v3 + 48) = v30;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        goto LABEL_14;
      }
      sub_18519F088((uint64_t)v32, &qword_1ECD75B20);
    }
    v17 = 0.0;
    v19 = 0.0;
    v21 = 0.0;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  sub_1855C4284(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  swift_endAccess();
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD816F8);
  v8 = swift_dynamicCastClassUnconditional();
LABEL_14:
  sub_185638FF8(&qword_1EDD816F0, &qword_1EDD816F8, (uint64_t)&unk_1866714F8);
  os_unfair_lock_unlock(v6);
  return v8;
}

uint64_t sub_1855EA5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v6;
  char v7;
  uint64_t v8;
  void *v9;
  void *v10;
  __int128 v11;
  id v12;
  void *v13;
  id v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;
  char isUniquelyReferenced_nonNull_native;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[32];
  _OWORD v35[2];
  __int128 v36;
  uint64_t v37;
  _OWORD v38[8];
  char v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  char v48;

  v3 = v2;
  v6 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v2 + 48) + 16))
  {
    swift_bridgeObjectRetain();
    sub_1855C4284(a1, a2);
    if ((v7 & 1) != 0)
    {
      swift_endAccess();
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82EA8);
      v8 = swift_dynamicCastClassUnconditional();
      goto LABEL_14;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  v9 = (void *)MEMORY[0x186DCA138](v2 + 24);
  v10 = v9;
  v11 = 0uLL;
  if (v9)
  {
    v12 = objc_msgSend(v9, sel_layer, 0.0);

    v13 = (void *)sub_1865074D4();
    v14 = objc_msgSend(v12, sel_valueForKey_, v13);

    if (v14)
    {
      sub_186507B1C();
      swift_unknownObjectRelease();
    }
    else
    {
      v40 = 0u;
      v41 = 0u;
    }
    sub_18519F0C4((uint64_t)&v40, (uint64_t)&v36, &qword_1ECD75B20);
    if (v37)
    {
      sub_1850F6908(&v36, v35);
      sub_1850F69D4((uint64_t)v35, (uint64_t)v34);
      sub_185750D9C((uint64_t)v34, (uint64_t)v38);
      v32 = v38[1];
      v33 = v38[0];
      v30 = v38[3];
      v31 = v38[2];
      v28 = v38[5];
      v29 = v38[4];
      v26 = v38[7];
      v27 = v38[6];
      LOBYTE(v10) = v39;
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v35);
      sub_18519F088((uint64_t)&v40, &qword_1ECD75B20);
      v21 = v26;
      v20 = v27;
      v19 = v28;
      v18 = v29;
      v17 = v30;
      v16 = v31;
      v15 = v32;
      v11 = v33;
    }
    else
    {
      sub_18519F088((uint64_t)&v40, &qword_1ECD75B20);
      LOBYTE(v10) = 0;
      v15 = 0uLL;
      v16 = 0uLL;
      v17 = 0uLL;
      v18 = 0uLL;
      v19 = 0uLL;
      v20 = 0uLL;
      v21 = 0uLL;
      v11 = 0uLL;
    }
  }
  else
  {
    v15 = 0uLL;
    v16 = 0uLL;
    v17 = 0uLL;
    v18 = 0uLL;
    v19 = 0uLL;
    v20 = 0uLL;
    v21 = 0uLL;
  }
  v40 = v11;
  v41 = v15;
  v42 = v16;
  v43 = v17;
  v44 = v18;
  v45 = v19;
  v46 = v20;
  v47 = v21;
  v48 = (char)v10;
  v22 = swift_allocObject();
  swift_weakInit();
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = v22;
  v23[3] = a1;
  v23[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82EA8);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v8 = sub_18579DAB0(&v40, (uint64_t)sub_18563AF1C, (uint64_t)v23);
  swift_release();
  *(_BYTE *)(v8 + 744) = 1;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v35[0] = *(_QWORD *)(v3 + 48);
  *(_QWORD *)(v3 + 48) = 0x8000000000000000;
  sub_18562A5C0(v8, a1, a2, isUniquelyReferenced_nonNull_native, (_QWORD **)v35, &qword_1EDD82EA0, &qword_1EDD82EA8);
  *(_QWORD *)(v3 + 48) = *(_QWORD *)&v35[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
LABEL_14:
  sub_185638FF8(&qword_1EDD82EA0, &qword_1EDD82EA8, (uint64_t)&unk_1866714F8);
  os_unfair_lock_unlock(v6);
  return v8;
}

uint64_t sub_1855EA97C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v6;
  char v7;
  uint64_t v8;
  void *v9;
  double v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  double v15;
  double v16;
  double v17;
  uint64_t v18;
  _QWORD *v19;
  char isUniquelyReferenced_nonNull_native;
  id v22;
  _BYTE v23[32];
  _BYTE v24[32];
  _OWORD v25[2];
  __int128 v26;
  uint64_t v27;
  _BYTE v28[32];

  v3 = v2;
  v6 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v2 + 48) + 16))
  {
LABEL_5:
    swift_endAccess();
    v9 = (void *)MEMORY[0x186DCA138](v2 + 24);
    v10 = 0.0;
    if (v9)
    {
      v11 = v9;
      v12 = objc_msgSend(v9, sel_layer);

      v13 = (void *)sub_1865074D4();
      v14 = objc_msgSend(v12, sel_valueForKey_, v13);

      if (v14)
      {
        sub_186507B1C();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v28, 0, sizeof(v28));
      }
      sub_18519F0C4((uint64_t)v28, (uint64_t)&v26, &qword_1ECD75B20);
      if (v27)
      {
        sub_1850F6908(&v26, v25);
        sub_1850F69D4((uint64_t)v25, (uint64_t)v24);
        sub_1850F69D4((uint64_t)v24, (uint64_t)v23);
        sub_1851F9080(0, (unint64_t *)&qword_1EDD82FD0);
        swift_dynamicCast();
        objc_msgSend(v22, sel_CGPointValue);
        v10 = v15;
        v17 = v16;

        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
        sub_18519F088((uint64_t)v28, &qword_1ECD75B20);
LABEL_13:
        v18 = swift_allocObject();
        swift_weakInit();
        v19 = (_QWORD *)swift_allocObject();
        v19[2] = v18;
        v19[3] = a1;
        v19[4] = a2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82E28);
        swift_allocObject();
        swift_bridgeObjectRetain();
        v8 = sub_18579DDD0((uint64_t)sub_18563AF1C, (uint64_t)v19, v10, v17);
        swift_release();
        *(_BYTE *)(v8 + 184) = 1;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_retain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v26 = *(_QWORD *)(v3 + 48);
        *(_QWORD *)(v3 + 48) = 0x8000000000000000;
        sub_18562A5C0(v8, a1, a2, isUniquelyReferenced_nonNull_native, (_QWORD **)&v26, &qword_1EDD82E20, &qword_1EDD82E28);
        *(_QWORD *)(v3 + 48) = v26;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        goto LABEL_14;
      }
      sub_18519F088((uint64_t)v28, &qword_1ECD75B20);
    }
    v17 = 0.0;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  sub_1855C4284(a1, a2);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  swift_endAccess();
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82E28);
  v8 = swift_dynamicCastClassUnconditional();
LABEL_14:
  sub_185638FF8(&qword_1EDD82E20, &qword_1EDD82E28, (uint64_t)&unk_1866714F8);
  os_unfair_lock_unlock(v6);
  return v8;
}

void sub_1855EAE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, uint64_t a8, double a9, double a10)
{
  void *v10;
  void *v12;
  uint64_t v17;
  void *v18;
  objc_class *v19;
  id v20;
  uint64_t aBlock;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  objc_super v30[2];
  objc_super v31;

  v12 = a7;
  v17 = MEMORY[0x1E0C809B0];
  if (a5)
  {
    v27 = a5;
    v28 = a6;
    aBlock = MEMORY[0x1E0C809B0];
    v24 = 1107296256;
    v25 = sub_18530A69C;
    v26 = &block_descriptor_756;
    v18 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    if (!v12)
      goto LABEL_4;
    goto LABEL_3;
  }
  v18 = 0;
  if (a7)
  {
LABEL_3:
    v27 = v12;
    v28 = a8;
    aBlock = v17;
    v24 = 1107296256;
    v25 = sub_1855D8E30;
    v26 = &block_descriptor_753;
    v12 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
  }
LABEL_4:
  v19 = (objc_class *)_s23InProcessAnimationStateCMa();
  v31.receiver = v10;
  v31.super_class = v19;
  objc_msgSendSuper2(&v31, sel_setupWithDuration_delay_view_options_factory_parentState_start_completion_, a1, a2, a3, a4, v18, v12, a9, a10);
  _Block_release(v12);
  _Block_release(v18);
  if (objc_msgSend(v10, sel_delegate))
  {
    sub_186507B1C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v30, 0, sizeof(v30));
  }
  sub_1850F26F8((uint64_t)v30, (uint64_t)&aBlock, &qword_1ECD75B20);
  if (v26)
  {
    sub_1851F9080(0, (unint64_t *)&unk_1ECD74C78);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v20 = v29;
      objc_msgSend(v29, sel__setForcingImmediateCompletion_, 1);

    }
  }
  else
  {
    sub_18519F088((uint64_t)&aBlock, &qword_1ECD75B20);
  }
}

uint64_t sub_1855EB21C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10, double a11)
{
  unsigned __int8 *v11;
  unsigned __int8 *v12;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  void *v32;
  unsigned __int8 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  _BYTE *v39;
  uint64_t v40;
  unsigned __int8 *v41;
  uint64_t (*v42)();
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 *v47;
  uint64_t result;
  int v49;
  unsigned int v50;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  _BYTE v56[48];

  v12 = v11;
  v23 = (uint64_t)&v11[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_18519F0C4(v23, (uint64_t)&v54, &qword_1ECD74C70);
  if (v55)
  {
    v52 = a3;
    v53 = a5;
    sub_1851E59E0(&v54, (uint64_t)v56);
    v24 = v12[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v12, sel_preferredFrameRateRange);
    v26 = v25;
    v28 = v27;
    v30 = v29;
    v50 = objc_msgSend(v12, sel_updateReason);
    if (v24 == 3)
    {
      v40 = 0;
      v42 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
    }
    else
    {
      objc_msgSend(v12, sel__incrementDidEndCount);
      v31 = MEMORY[0x186DCA138](a7 + 176);
      if (!v31)
        goto LABEL_5;
      v32 = (void *)v31;
      _s23InProcessAnimationStateCMa();
      v33 = v12;
      v49 = v24;
      v34 = a2;
      v35 = a4;
      v36 = a6;
      v37 = v32;
      LOBYTE(v32) = sub_186507A44();

      a6 = v36;
      a4 = v35;
      a2 = v34;
      v24 = v49;

      if ((v32 & 1) == 0)
      {
LABEL_5:
        v38 = (void *)MEMORY[0x186DCA138](a7 + 176);

        if (v38)
        {
          v39 = (_BYTE *)MEMORY[0x186DCA138](a7 + 176);
          if (v39)
          {
            v39[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;

          }
        }
        swift_unknownObjectWeakAssign();
      }
      v40 = swift_allocObject();
      *(_QWORD *)(v40 + 16) = v12;
      v41 = v12;
      v42 = sub_18563AE40;
    }
    v43 = *(_QWORD *)(a7 + 192);
    v44 = __OFADD__(v43, 1);
    v45 = v43 + 1;
    if (v44)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(a7 + 192) = v45;
      if (qword_1EDD831E0 == -1)
      {
LABEL_13:
        sub_1851E75D8((uint64_t)v56, (uint64_t)&v54);
        v46 = swift_allocObject();
        *(_QWORD *)(v46 + 16) = a7;
        *(_QWORD *)(v46 + 24) = v12;
        *(double *)(v46 + 32) = a8;
        *(double *)(v46 + 40) = a9;
        *(double *)(v46 + 48) = a10;
        *(double *)(v46 + 56) = a11;
        sub_1851E59E0(&v54, v46 + 64);
        *(_QWORD *)(v46 + 104) = a1;
        *(_QWORD *)(v46 + 112) = a2;
        *(_QWORD *)(v46 + 120) = v52;
        *(_QWORD *)(v46 + 128) = a4;
        *(_QWORD *)(v46 + 136) = v53;
        *(_QWORD *)(v46 + 144) = a6;
        *(_BYTE *)(v46 + 152) = v24 != 3;
        *(_DWORD *)(v46 + 156) = v50;
        *(_DWORD *)(v46 + 160) = v26;
        *(_DWORD *)(v46 + 164) = v28;
        *(_DWORD *)(v46 + 168) = v30;
        *(_QWORD *)(v46 + 176) = v42;
        *(_QWORD *)(v46 + 184) = v40;
        v47 = v12;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_18577CED4((uint64_t)sub_18563AB20, v46);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v56);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  sub_18519F088((uint64_t)&v54, &qword_1ECD74C70);
  result = sub_186507E04();
  __break(1u);
  return result;
}

uint64_t sub_1855EB598(uint64_t a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  void *v23;
  unsigned __int8 *v24;
  id v25;
  void *v26;
  _BYTE *v27;
  uint64_t v28;
  unsigned __int8 *v29;
  uint64_t (*v30)();
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  unsigned __int8 *v43;
  uint64_t result;
  unsigned int v45;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  _BYTE v54[48];

  v10 = v9;
  v14 = (uint64_t)&v9[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_18519F0C4(v14, (uint64_t)&v52, &qword_1ECD74C70);
  if (v53)
  {
    v51 = a8;
    sub_1851E59E0(&v52, (uint64_t)v54);
    v15 = v10[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v10, sel_preferredFrameRateRange);
    v17 = v16;
    v19 = v18;
    v21 = v20;
    v45 = objc_msgSend(v10, sel_updateReason);
    if (v15 == 3)
    {
      v28 = 0;
      v30 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
    }
    else
    {
      objc_msgSend(v10, sel__incrementDidEndCount);
      v22 = MEMORY[0x186DCA138](a9 + 736);
      if (!v22)
        goto LABEL_5;
      v23 = (void *)v22;
      _s23InProcessAnimationStateCMa();
      v24 = v10;
      v25 = v23;
      LOBYTE(v23) = sub_186507A44();

      if ((v23 & 1) == 0)
      {
LABEL_5:
        v26 = (void *)MEMORY[0x186DCA138](a9 + 736);

        if (v26)
        {
          v27 = (_BYTE *)MEMORY[0x186DCA138](a9 + 736);
          if (v27)
          {
            v27[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;

          }
        }
        swift_unknownObjectWeakAssign();
      }
      v28 = swift_allocObject();
      *(_QWORD *)(v28 + 16) = v10;
      v29 = v10;
      v30 = sub_18563AE40;
    }
    v31 = *(_QWORD *)(a9 + 752);
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(a9 + 752) = v33;
      if (qword_1EDD831E0 == -1)
      {
LABEL_13:
        sub_1851E75D8((uint64_t)v54, (uint64_t)&v52);
        v34 = swift_allocObject();
        v35 = *(_OWORD *)(a1 + 112);
        *(_OWORD *)(v34 + 128) = *(_OWORD *)(a1 + 96);
        *(_OWORD *)(v34 + 144) = v35;
        v36 = *(_OWORD *)(a1 + 48);
        *(_OWORD *)(v34 + 64) = *(_OWORD *)(a1 + 32);
        *(_OWORD *)(v34 + 80) = v36;
        v37 = *(_OWORD *)(a1 + 80);
        *(_OWORD *)(v34 + 96) = *(_OWORD *)(a1 + 64);
        *(_OWORD *)(v34 + 112) = v37;
        v38 = *(_OWORD *)(a1 + 16);
        *(_OWORD *)(v34 + 32) = *(_OWORD *)a1;
        *(_OWORD *)(v34 + 48) = v38;
        v39 = a2[4];
        *(_OWORD *)(v34 + 248) = a2[5];
        v40 = a2[7];
        *(_OWORD *)(v34 + 264) = a2[6];
        *(_OWORD *)(v34 + 280) = v40;
        v41 = *a2;
        *(_OWORD *)(v34 + 184) = a2[1];
        v42 = a2[3];
        *(_OWORD *)(v34 + 200) = a2[2];
        *(_OWORD *)(v34 + 216) = v42;
        *(_OWORD *)(v34 + 232) = v39;
        *(_QWORD *)(v34 + 16) = a9;
        *(_QWORD *)(v34 + 24) = v10;
        *(_BYTE *)(v34 + 160) = *(_BYTE *)(a1 + 128);
        *(_BYTE *)(v34 + 296) = *((_BYTE *)a2 + 128);
        *(_OWORD *)(v34 + 168) = v41;
        sub_1851E59E0(&v52, v34 + 304);
        *(_QWORD *)(v34 + 344) = a3;
        *(_QWORD *)(v34 + 352) = a4;
        *(_QWORD *)(v34 + 360) = a5;
        *(_QWORD *)(v34 + 368) = a6;
        *(_QWORD *)(v34 + 376) = a7;
        *(_QWORD *)(v34 + 384) = v51;
        *(_BYTE *)(v34 + 392) = v15 != 3;
        *(_DWORD *)(v34 + 396) = v45;
        *(_DWORD *)(v34 + 400) = v17;
        *(_DWORD *)(v34 + 404) = v19;
        *(_DWORD *)(v34 + 408) = v21;
        *(_QWORD *)(v34 + 416) = v30;
        *(_QWORD *)(v34 + 424) = v28;
        v43 = v10;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_18577CED4((uint64_t)sub_18563A8C4, v34);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v54);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  sub_18519F088((uint64_t)&v52, &qword_1ECD74C70);
  result = sub_186507E04();
  __break(1u);
  return result;
}

uint64_t sub_1855EB938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15)
{
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  void *v37;
  unsigned __int8 *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  _BYTE *v44;
  uint64_t v45;
  unsigned __int8 *v46;
  uint64_t (*v47)();
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 *v52;
  uint64_t result;
  int v54;
  unsigned int v55;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  _BYTE v64[48];

  v16 = v15;
  v28 = (uint64_t)&v15[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_18519F0C4(v28, (uint64_t)&v62, &qword_1ECD74C70);
  if (v63)
  {
    v60 = a3;
    v61 = a5;
    sub_1851E59E0(&v62, (uint64_t)v64);
    v29 = v16[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v16, sel_preferredFrameRateRange);
    v31 = v30;
    v33 = v32;
    v35 = v34;
    v55 = objc_msgSend(v16, sel_updateReason);
    if (v29 == 3)
    {
      v45 = 0;
      v47 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
    }
    else
    {
      objc_msgSend(v16, sel__incrementDidEndCount);
      v36 = MEMORY[0x186DCA138](a7 + 256);
      if (!v36)
        goto LABEL_5;
      v37 = (void *)v36;
      _s23InProcessAnimationStateCMa();
      v38 = v16;
      v54 = v29;
      v39 = a2;
      v40 = a4;
      v41 = a6;
      v42 = v37;
      LOBYTE(v37) = sub_186507A44();

      a6 = v41;
      a4 = v40;
      a2 = v39;
      v29 = v54;

      if ((v37 & 1) == 0)
      {
LABEL_5:
        v43 = (void *)MEMORY[0x186DCA138](a7 + 256);

        if (v43)
        {
          v44 = (_BYTE *)MEMORY[0x186DCA138](a7 + 256);
          if (v44)
          {
            v44[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;

          }
        }
        swift_unknownObjectWeakAssign();
      }
      v45 = swift_allocObject();
      *(_QWORD *)(v45 + 16) = v16;
      v46 = v16;
      v47 = sub_18563AE40;
    }
    v48 = *(_QWORD *)(a7 + 272);
    v49 = __OFADD__(v48, 1);
    v50 = v48 + 1;
    if (v49)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(a7 + 272) = v50;
      if (qword_1EDD831E0 == -1)
      {
LABEL_13:
        sub_1851E75D8((uint64_t)v64, (uint64_t)&v62);
        v51 = swift_allocObject();
        *(_QWORD *)(v51 + 16) = a7;
        *(_QWORD *)(v51 + 24) = v16;
        *(double *)(v51 + 32) = a8;
        *(double *)(v51 + 40) = a9;
        *(double *)(v51 + 48) = a10;
        *(double *)(v51 + 56) = a11;
        *(double *)(v51 + 64) = a12;
        *(double *)(v51 + 72) = a13;
        *(double *)(v51 + 80) = a14;
        *(double *)(v51 + 88) = a15;
        sub_1851E59E0(&v62, v51 + 96);
        *(_QWORD *)(v51 + 136) = a1;
        *(_QWORD *)(v51 + 144) = a2;
        *(_QWORD *)(v51 + 152) = v60;
        *(_QWORD *)(v51 + 160) = a4;
        *(_QWORD *)(v51 + 168) = v61;
        *(_QWORD *)(v51 + 176) = a6;
        *(_BYTE *)(v51 + 184) = v29 != 3;
        *(_DWORD *)(v51 + 188) = v55;
        *(_DWORD *)(v51 + 192) = v31;
        *(_DWORD *)(v51 + 196) = v33;
        *(_DWORD *)(v51 + 200) = v35;
        *(_QWORD *)(v51 + 208) = v47;
        *(_QWORD *)(v51 + 216) = v45;
        v52 = v16;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_18577CED4((uint64_t)sub_18563A810, v51);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v64);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  sub_18519F088((uint64_t)&v62, &qword_1ECD74C70);
  result = sub_186507E04();
  __break(1u);
  return result;
}

uint64_t sub_1855EBCD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15)
{
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  void *v37;
  unsigned __int8 *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  _BYTE *v44;
  uint64_t v45;
  unsigned __int8 *v46;
  uint64_t (*v47)();
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 *v52;
  uint64_t result;
  int v54;
  unsigned int v55;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  _BYTE v64[48];

  v16 = v15;
  v28 = (uint64_t)&v15[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_18519F0C4(v28, (uint64_t)&v62, &qword_1ECD74C70);
  if (v63)
  {
    v60 = a3;
    v61 = a5;
    sub_1851E59E0(&v62, (uint64_t)v64);
    v29 = v16[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v16, sel_preferredFrameRateRange);
    v31 = v30;
    v33 = v32;
    v35 = v34;
    v55 = objc_msgSend(v16, sel_updateReason);
    if (v29 == 3)
    {
      v45 = 0;
      v47 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
    }
    else
    {
      objc_msgSend(v16, sel__incrementDidEndCount);
      v36 = MEMORY[0x186DCA138](a7 + 256);
      if (!v36)
        goto LABEL_5;
      v37 = (void *)v36;
      _s23InProcessAnimationStateCMa();
      v38 = v16;
      v54 = v29;
      v39 = a2;
      v40 = a4;
      v41 = a6;
      v42 = v37;
      LOBYTE(v37) = sub_186507A44();

      a6 = v41;
      a4 = v40;
      a2 = v39;
      v29 = v54;

      if ((v37 & 1) == 0)
      {
LABEL_5:
        v43 = (void *)MEMORY[0x186DCA138](a7 + 256);

        if (v43)
        {
          v44 = (_BYTE *)MEMORY[0x186DCA138](a7 + 256);
          if (v44)
          {
            v44[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;

          }
        }
        swift_unknownObjectWeakAssign();
      }
      v45 = swift_allocObject();
      *(_QWORD *)(v45 + 16) = v16;
      v46 = v16;
      v47 = sub_18563AE40;
    }
    v48 = *(_QWORD *)(a7 + 272);
    v49 = __OFADD__(v48, 1);
    v50 = v48 + 1;
    if (v49)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(a7 + 272) = v50;
      if (qword_1EDD831E0 == -1)
      {
LABEL_13:
        sub_1851E75D8((uint64_t)v64, (uint64_t)&v62);
        v51 = swift_allocObject();
        *(_QWORD *)(v51 + 16) = a7;
        *(_QWORD *)(v51 + 24) = v16;
        *(double *)(v51 + 32) = a8;
        *(double *)(v51 + 40) = a9;
        *(double *)(v51 + 48) = a10;
        *(double *)(v51 + 56) = a11;
        *(double *)(v51 + 64) = a12;
        *(double *)(v51 + 72) = a13;
        *(double *)(v51 + 80) = a14;
        *(double *)(v51 + 88) = a15;
        sub_1851E59E0(&v62, v51 + 96);
        *(_QWORD *)(v51 + 136) = a1;
        *(_QWORD *)(v51 + 144) = a2;
        *(_QWORD *)(v51 + 152) = v60;
        *(_QWORD *)(v51 + 160) = a4;
        *(_QWORD *)(v51 + 168) = v61;
        *(_QWORD *)(v51 + 176) = a6;
        *(_BYTE *)(v51 + 184) = v29 != 3;
        *(_DWORD *)(v51 + 188) = v55;
        *(_DWORD *)(v51 + 192) = v31;
        *(_DWORD *)(v51 + 196) = v33;
        *(_DWORD *)(v51 + 200) = v35;
        *(_QWORD *)(v51 + 208) = v47;
        *(_QWORD *)(v51 + 216) = v45;
        v52 = v16;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_18577CED4((uint64_t)sub_18563A73C, v51);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v64);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  sub_18519F088((uint64_t)&v62, &qword_1ECD74C70);
  result = sub_186507E04();
  __break(1u);
  return result;
}

uint64_t sub_1855EC070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  void *v28;
  unsigned __int8 *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  _BYTE *v35;
  uint64_t v36;
  unsigned __int8 *v37;
  uint64_t (*v38)();
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 *v43;
  uint64_t result;
  int v45;
  unsigned int v46;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  _BYTE v52[48];

  v10 = v9;
  v19 = (uint64_t)&v9[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_18519F0C4(v19, (uint64_t)&v50, &qword_1ECD74C70);
  if (v51)
  {
    v48 = a3;
    v49 = a5;
    sub_1851E59E0(&v50, (uint64_t)v52);
    v20 = v10[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v10, sel_preferredFrameRateRange);
    v22 = v21;
    v24 = v23;
    v26 = v25;
    v46 = objc_msgSend(v10, sel_updateReason);
    if (v20 == 3)
    {
      v36 = 0;
      v38 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
    }
    else
    {
      objc_msgSend(v10, sel__incrementDidEndCount);
      v27 = MEMORY[0x186DCA138](a7 + 136);
      if (!v27)
        goto LABEL_5;
      v28 = (void *)v27;
      _s23InProcessAnimationStateCMa();
      v29 = v10;
      v45 = v20;
      v30 = a2;
      v31 = a4;
      v32 = a6;
      v33 = v28;
      LOBYTE(v28) = sub_186507A44();

      a6 = v32;
      a4 = v31;
      a2 = v30;
      v20 = v45;

      if ((v28 & 1) == 0)
      {
LABEL_5:
        v34 = (void *)MEMORY[0x186DCA138](a7 + 136);

        if (v34)
        {
          v35 = (_BYTE *)MEMORY[0x186DCA138](a7 + 136);
          if (v35)
          {
            v35[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;

          }
        }
        swift_unknownObjectWeakAssign();
      }
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = v10;
      v37 = v10;
      v38 = sub_18563AE40;
    }
    v39 = *(_QWORD *)(a7 + 152);
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(a7 + 152) = v41;
      if (qword_1EDD831E0 == -1)
      {
LABEL_13:
        sub_1851E75D8((uint64_t)v52, (uint64_t)&v50);
        v42 = swift_allocObject();
        *(_QWORD *)(v42 + 16) = a7;
        *(_QWORD *)(v42 + 24) = v10;
        *(double *)(v42 + 32) = a8;
        *(double *)(v42 + 40) = a9;
        sub_1851E59E0(&v50, v42 + 48);
        *(_QWORD *)(v42 + 88) = a1;
        *(_QWORD *)(v42 + 96) = a2;
        *(_QWORD *)(v42 + 104) = v48;
        *(_QWORD *)(v42 + 112) = a4;
        *(_QWORD *)(v42 + 120) = v49;
        *(_QWORD *)(v42 + 128) = a6;
        *(_BYTE *)(v42 + 136) = v20 != 3;
        *(_DWORD *)(v42 + 140) = v46;
        *(_DWORD *)(v42 + 144) = v22;
        *(_DWORD *)(v42 + 148) = v24;
        *(_DWORD *)(v42 + 152) = v26;
        *(_QWORD *)(v42 + 160) = v38;
        *(_QWORD *)(v42 + 168) = v36;
        v43 = v10;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_18577CED4((uint64_t)sub_18563A5D4, v42);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v52);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  sub_18519F088((uint64_t)&v50, &qword_1ECD74C70);
  result = sub_186507E04();
  __break(1u);
  return result;
}

uint64_t sub_1855EC3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15)
{
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  uint64_t v36;
  void *v37;
  unsigned __int8 *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  _BYTE *v44;
  uint64_t v45;
  unsigned __int8 *v46;
  uint64_t (*v47)();
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 *v52;
  uint64_t result;
  int v54;
  unsigned int v55;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  _BYTE v64[48];

  v16 = v15;
  v28 = (uint64_t)&v15[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_18519F0C4(v28, (uint64_t)&v62, &qword_1ECD74C70);
  if (v63)
  {
    v60 = a3;
    v61 = a5;
    sub_1851E59E0(&v62, (uint64_t)v64);
    v29 = v16[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v16, sel_preferredFrameRateRange);
    v31 = v30;
    v33 = v32;
    v35 = v34;
    v55 = objc_msgSend(v16, sel_updateReason);
    if (v29 == 3)
    {
      v45 = 0;
      v47 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
    }
    else
    {
      objc_msgSend(v16, sel__incrementDidEndCount);
      v36 = MEMORY[0x186DCA138](a7 + 256);
      if (!v36)
        goto LABEL_5;
      v37 = (void *)v36;
      _s23InProcessAnimationStateCMa();
      v38 = v16;
      v54 = v29;
      v39 = a2;
      v40 = a4;
      v41 = a6;
      v42 = v37;
      LOBYTE(v37) = sub_186507A44();

      a6 = v41;
      a4 = v40;
      a2 = v39;
      v29 = v54;

      if ((v37 & 1) == 0)
      {
LABEL_5:
        v43 = (void *)MEMORY[0x186DCA138](a7 + 256);

        if (v43)
        {
          v44 = (_BYTE *)MEMORY[0x186DCA138](a7 + 256);
          if (v44)
          {
            v44[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;

          }
        }
        swift_unknownObjectWeakAssign();
      }
      v45 = swift_allocObject();
      *(_QWORD *)(v45 + 16) = v16;
      v46 = v16;
      v47 = sub_18563AE40;
    }
    v48 = *(_QWORD *)(a7 + 272);
    v49 = __OFADD__(v48, 1);
    v50 = v48 + 1;
    if (v49)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(a7 + 272) = v50;
      if (qword_1EDD831E0 == -1)
      {
LABEL_13:
        sub_1851E75D8((uint64_t)v64, (uint64_t)&v62);
        v51 = swift_allocObject();
        *(_QWORD *)(v51 + 16) = a7;
        *(_QWORD *)(v51 + 24) = v16;
        *(double *)(v51 + 32) = a8;
        *(double *)(v51 + 40) = a9;
        *(double *)(v51 + 48) = a10;
        *(double *)(v51 + 56) = a11;
        *(double *)(v51 + 64) = a12;
        *(double *)(v51 + 72) = a13;
        *(double *)(v51 + 80) = a14;
        *(double *)(v51 + 88) = a15;
        sub_1851E59E0(&v62, v51 + 96);
        *(_QWORD *)(v51 + 136) = a1;
        *(_QWORD *)(v51 + 144) = a2;
        *(_QWORD *)(v51 + 152) = v60;
        *(_QWORD *)(v51 + 160) = a4;
        *(_QWORD *)(v51 + 168) = v61;
        *(_QWORD *)(v51 + 176) = a6;
        *(_BYTE *)(v51 + 184) = v29 != 3;
        *(_DWORD *)(v51 + 188) = v55;
        *(_DWORD *)(v51 + 192) = v31;
        *(_DWORD *)(v51 + 196) = v33;
        *(_DWORD *)(v51 + 200) = v35;
        *(_QWORD *)(v51 + 208) = v47;
        *(_QWORD *)(v51 + 216) = v45;
        v52 = v16;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_18577CED4((uint64_t)sub_18563A48C, v51);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v64);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  sub_18519F088((uint64_t)&v62, &qword_1ECD74C70);
  result = sub_186507E04();
  __break(1u);
  return result;
}

uint64_t sub_1855EC774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10, double a11)
{
  unsigned __int8 *v11;
  unsigned __int8 *v12;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  void *v32;
  unsigned __int8 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  _BYTE *v39;
  uint64_t v40;
  unsigned __int8 *v41;
  uint64_t (*v42)();
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 *v47;
  uint64_t result;
  int v49;
  unsigned int v50;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  _BYTE v56[48];

  v12 = v11;
  v23 = (uint64_t)&v11[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_18519F0C4(v23, (uint64_t)&v54, &qword_1ECD74C70);
  if (v55)
  {
    v52 = a3;
    v53 = a5;
    sub_1851E59E0(&v54, (uint64_t)v56);
    v24 = v12[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v12, sel_preferredFrameRateRange);
    v26 = v25;
    v28 = v27;
    v30 = v29;
    v50 = objc_msgSend(v12, sel_updateReason);
    if (v24 == 3)
    {
      v40 = 0;
      v42 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
    }
    else
    {
      objc_msgSend(v12, sel__incrementDidEndCount);
      v31 = MEMORY[0x186DCA138](a7 + 176);
      if (!v31)
        goto LABEL_5;
      v32 = (void *)v31;
      _s23InProcessAnimationStateCMa();
      v33 = v12;
      v49 = v24;
      v34 = a2;
      v35 = a4;
      v36 = a6;
      v37 = v32;
      LOBYTE(v32) = sub_186507A44();

      a6 = v36;
      a4 = v35;
      a2 = v34;
      v24 = v49;

      if ((v32 & 1) == 0)
      {
LABEL_5:
        v38 = (void *)MEMORY[0x186DCA138](a7 + 176);

        if (v38)
        {
          v39 = (_BYTE *)MEMORY[0x186DCA138](a7 + 176);
          if (v39)
          {
            v39[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;

          }
        }
        swift_unknownObjectWeakAssign();
      }
      v40 = swift_allocObject();
      *(_QWORD *)(v40 + 16) = v12;
      v41 = v12;
      v42 = sub_18563AE40;
    }
    v43 = *(_QWORD *)(a7 + 192);
    v44 = __OFADD__(v43, 1);
    v45 = v43 + 1;
    if (v44)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(a7 + 192) = v45;
      if (qword_1EDD831E0 == -1)
      {
LABEL_13:
        sub_1851E75D8((uint64_t)v56, (uint64_t)&v54);
        v46 = swift_allocObject();
        *(_QWORD *)(v46 + 16) = a7;
        *(_QWORD *)(v46 + 24) = v12;
        *(double *)(v46 + 32) = a8;
        *(double *)(v46 + 40) = a9;
        *(double *)(v46 + 48) = a10;
        *(double *)(v46 + 56) = a11;
        sub_1851E59E0(&v54, v46 + 64);
        *(_QWORD *)(v46 + 104) = a1;
        *(_QWORD *)(v46 + 112) = a2;
        *(_QWORD *)(v46 + 120) = v52;
        *(_QWORD *)(v46 + 128) = a4;
        *(_QWORD *)(v46 + 136) = v53;
        *(_QWORD *)(v46 + 144) = a6;
        *(_BYTE *)(v46 + 152) = v24 != 3;
        *(_DWORD *)(v46 + 156) = v50;
        *(_DWORD *)(v46 + 160) = v26;
        *(_DWORD *)(v46 + 164) = v28;
        *(_DWORD *)(v46 + 168) = v30;
        *(_QWORD *)(v46 + 176) = v42;
        *(_QWORD *)(v46 + 184) = v40;
        v47 = v12;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_18577CED4((uint64_t)sub_18563A428, v46);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v56);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  sub_18519F088((uint64_t)&v54, &qword_1ECD74C70);
  result = sub_186507E04();
  __break(1u);
  return result;
}

uint64_t sub_1855ECAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9)
{
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  void *v28;
  unsigned __int8 *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  _BYTE *v35;
  uint64_t v36;
  unsigned __int8 *v37;
  uint64_t (*v38)();
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 *v43;
  uint64_t result;
  int v45;
  unsigned int v46;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  _BYTE v52[48];

  v10 = v9;
  v19 = (uint64_t)&v9[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_18519F0C4(v19, (uint64_t)&v50, &qword_1ECD74C70);
  if (v51)
  {
    v48 = a3;
    v49 = a5;
    sub_1851E59E0(&v50, (uint64_t)v52);
    v20 = v10[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v10, sel_preferredFrameRateRange);
    v22 = v21;
    v24 = v23;
    v26 = v25;
    v46 = objc_msgSend(v10, sel_updateReason);
    if (v20 == 3)
    {
      v36 = 0;
      v38 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
    }
    else
    {
      objc_msgSend(v10, sel__incrementDidEndCount);
      v27 = MEMORY[0x186DCA138](a7 + 136);
      if (!v27)
        goto LABEL_5;
      v28 = (void *)v27;
      _s23InProcessAnimationStateCMa();
      v29 = v10;
      v45 = v20;
      v30 = a2;
      v31 = a4;
      v32 = a6;
      v33 = v28;
      LOBYTE(v28) = sub_186507A44();

      a6 = v32;
      a4 = v31;
      a2 = v30;
      v20 = v45;

      if ((v28 & 1) == 0)
      {
LABEL_5:
        v34 = (void *)MEMORY[0x186DCA138](a7 + 136);

        if (v34)
        {
          v35 = (_BYTE *)MEMORY[0x186DCA138](a7 + 136);
          if (v35)
          {
            v35[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;

          }
        }
        swift_unknownObjectWeakAssign();
      }
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = v10;
      v37 = v10;
      v38 = sub_18563AE40;
    }
    v39 = *(_QWORD *)(a7 + 152);
    v40 = __OFADD__(v39, 1);
    v41 = v39 + 1;
    if (v40)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(a7 + 152) = v41;
      if (qword_1EDD831E0 == -1)
      {
LABEL_13:
        sub_1851E75D8((uint64_t)v52, (uint64_t)&v50);
        v42 = swift_allocObject();
        *(_QWORD *)(v42 + 16) = a7;
        *(_QWORD *)(v42 + 24) = v10;
        *(double *)(v42 + 32) = a8;
        *(double *)(v42 + 40) = a9;
        sub_1851E59E0(&v50, v42 + 48);
        *(_QWORD *)(v42 + 88) = a1;
        *(_QWORD *)(v42 + 96) = a2;
        *(_QWORD *)(v42 + 104) = v48;
        *(_QWORD *)(v42 + 112) = a4;
        *(_QWORD *)(v42 + 120) = v49;
        *(_QWORD *)(v42 + 128) = a6;
        *(_BYTE *)(v42 + 136) = v20 != 3;
        *(_DWORD *)(v42 + 140) = v46;
        *(_DWORD *)(v42 + 144) = v22;
        *(_DWORD *)(v42 + 148) = v24;
        *(_DWORD *)(v42 + 152) = v26;
        *(_QWORD *)(v42 + 160) = v38;
        *(_QWORD *)(v42 + 168) = v36;
        v43 = v10;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_18577CED4((uint64_t)sub_18563A320, v42);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v52);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  sub_18519F088((uint64_t)&v50, &qword_1ECD74C70);
  result = sub_186507E04();
  __break(1u);
  return result;
}

uint64_t sub_1855ECE58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)())
{
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v16;
  uint64_t (*v17)();
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  unsigned __int8 *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  _BYTE *v33;
  uint64_t v34;
  unsigned __int8 *v35;
  uint64_t (*v36)();
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 *v41;
  uint64_t result;
  uint64_t (*v43)();
  int v44;
  unsigned int v45;
  uint64_t v49;
  __int128 v50;
  _BYTE v51[21];
  __int128 v52;
  _BYTE v53[21];
  __int128 v54;
  uint64_t v55;
  _BYTE v56[48];

  v10 = v9;
  v16 = (uint64_t)&v9[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_18519F0C4(v16, (uint64_t)&v54, &qword_1ECD74C70);
  if (v55)
  {
    v49 = a8;
    v17 = a9;
    sub_1851E59E0(&v54, (uint64_t)v56);
    v18 = v10[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v10, sel_preferredFrameRateRange);
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v45 = objc_msgSend(v10, sel_updateReason);
    if (v18 == 3)
    {
      v34 = 0;
      v36 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
    }
    else
    {
      v44 = v18;
      objc_msgSend(v10, sel__incrementDidEndCount);
      v25 = (uint64_t)a9 + 256;
      v26 = MEMORY[0x186DCA138]((char *)a9 + 256);
      if (!v26)
        goto LABEL_5;
      v27 = (void *)v26;
      _s23InProcessAnimationStateCMa();
      v28 = v10;
      v43 = a9;
      v29 = a3;
      v30 = a5;
      v31 = v27;
      LOBYTE(v27) = sub_186507A44();

      a5 = v30;
      a3 = v29;
      v17 = a9;

      if ((v27 & 1) == 0)
      {
LABEL_5:
        v32 = (void *)MEMORY[0x186DCA138](v25);

        if (v32)
        {
          v33 = (_BYTE *)MEMORY[0x186DCA138](v25);
          if (v33)
          {
            v33[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;

          }
        }
        swift_unknownObjectWeakAssign();
      }
      v34 = swift_allocObject();
      *(_QWORD *)(v34 + 16) = v10;
      v35 = v10;
      v36 = sub_18563AE40;
      v18 = v44;
    }
    v37 = *((_QWORD *)v17 + 34);
    v38 = __OFADD__(v37, 1);
    v39 = v37 + 1;
    if (v38)
    {
      __break(1u);
    }
    else
    {
      v43 = v36;
      *((_QWORD *)v17 + 34) = v39;
      if (qword_1EDD831E0 == -1)
      {
LABEL_13:
        v52 = *(_OWORD *)a1;
        *(_OWORD *)v53 = *(_OWORD *)(a1 + 16);
        *(_QWORD *)&v53[13] = *(_QWORD *)(a1 + 29);
        v50 = *(_OWORD *)a2;
        *(_OWORD *)v51 = *(_OWORD *)(a2 + 16);
        *(_QWORD *)&v51[13] = *(_QWORD *)(a2 + 29);
        sub_1851E75D8((uint64_t)v56, (uint64_t)&v54);
        v40 = swift_allocObject();
        *(_OWORD *)(v40 + 32) = v52;
        *(_OWORD *)(v40 + 48) = *(_OWORD *)v53;
        *(_OWORD *)(v40 + 88) = *(_OWORD *)v51;
        *(_QWORD *)(v40 + 16) = v17;
        *(_QWORD *)(v40 + 24) = v10;
        *(_QWORD *)(v40 + 61) = *(_QWORD *)&v53[13];
        *(_QWORD *)(v40 + 101) = *(_QWORD *)&v51[13];
        *(_OWORD *)(v40 + 72) = v50;
        sub_1851E59E0(&v54, v40 + 112);
        *(_QWORD *)(v40 + 152) = a3;
        *(_QWORD *)(v40 + 160) = a4;
        *(_QWORD *)(v40 + 168) = a5;
        *(_QWORD *)(v40 + 176) = a6;
        *(_QWORD *)(v40 + 184) = a7;
        *(_QWORD *)(v40 + 192) = v49;
        *(_BYTE *)(v40 + 200) = v18 != 3;
        *(_DWORD *)(v40 + 204) = v45;
        *(_DWORD *)(v40 + 208) = v20;
        *(_DWORD *)(v40 + 212) = v22;
        *(_DWORD *)(v40 + 216) = v24;
        *(_QWORD *)(v40 + 224) = v43;
        *(_QWORD *)(v40 + 232) = v34;
        v41 = v10;
        swift_retain();
        sub_18563A2DC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_18562BDE4);
        sub_18563A2DC(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t))sub_18562BDE4);
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_18577CED4((uint64_t)sub_185639DE8, v40);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v56);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  sub_18519F088((uint64_t)&v54, &qword_1ECD74C70);
  result = sub_186507E04();
  __break(1u);
  return result;
}

uint64_t sub_1855ED230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  unsigned __int8 *v33;
  id v34;
  void *v35;
  _BYTE *v36;
  uint64_t v37;
  unsigned __int8 *v38;
  uint64_t (*v39)();
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 *v44;
  uint64_t result;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  _BYTE v55[48];

  v10 = v9;
  v19 = (uint64_t)&v9[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_18519F0C4(v19, (uint64_t)&v53, &qword_1ECD74C70);
  if (v54)
  {
    v48 = a3;
    v49 = a5;
    v50 = a7;
    v51 = a6;
    v20 = a1;
    v21 = a4;
    v52 = a8;
    v22 = a9;
    sub_1851E59E0(&v53, (uint64_t)v55);
    v23 = v10[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v10, sel_preferredFrameRateRange);
    v25 = v24;
    v27 = v26;
    v29 = v28;
    v47 = objc_msgSend(v10, sel_updateReason);
    if (v23 == 3)
    {
      v37 = 0;
      v39 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
    }
    else
    {
      objc_msgSend(v10, sel__incrementDidEndCount);
      v46 = a9;
      v30 = a9 + 104;
      v31 = MEMORY[0x186DCA138](a9 + 104);
      if (!v31)
        goto LABEL_5;
      v32 = (void *)v31;
      _s23InProcessAnimationStateCMa();
      v33 = v10;
      v34 = v32;
      LOBYTE(v32) = sub_186507A44();

      if ((v32 & 1) == 0)
      {
LABEL_5:
        v35 = (void *)MEMORY[0x186DCA138](v30);

        if (v35)
        {
          v36 = (_BYTE *)MEMORY[0x186DCA138](v30);
          if (v36)
          {
            v36[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;

          }
        }
        swift_unknownObjectWeakAssign();
      }
      v37 = swift_allocObject();
      *(_QWORD *)(v37 + 16) = v10;
      v38 = v10;
      v39 = sub_18563AE40;
      v22 = a9;
    }
    v40 = *(_QWORD *)(v22 + 120);
    v41 = __OFADD__(v40, 1);
    v42 = v40 + 1;
    if (v41)
    {
      __break(1u);
    }
    else
    {
      v46 = v37;
      *(_QWORD *)(v22 + 120) = v42;
      if (qword_1EDD831E0 == -1)
      {
LABEL_13:
        sub_1851E75D8((uint64_t)v55, (uint64_t)&v53);
        v43 = swift_allocObject();
        *(_QWORD *)(v43 + 16) = v22;
        *(_QWORD *)(v43 + 24) = v10;
        *(_QWORD *)(v43 + 32) = v20;
        *(_QWORD *)(v43 + 40) = a2;
        sub_1851E59E0(&v53, v43 + 48);
        *(_QWORD *)(v43 + 88) = v48;
        *(_QWORD *)(v43 + 96) = v21;
        *(_QWORD *)(v43 + 104) = v49;
        *(_QWORD *)(v43 + 112) = v51;
        *(_QWORD *)(v43 + 120) = v50;
        *(_QWORD *)(v43 + 128) = v52;
        *(_BYTE *)(v43 + 136) = v23 != 3;
        *(_DWORD *)(v43 + 140) = v47;
        *(_DWORD *)(v43 + 144) = v25;
        *(_DWORD *)(v43 + 148) = v27;
        *(_DWORD *)(v43 + 152) = v29;
        *(_QWORD *)(v43 + 160) = v39;
        *(_QWORD *)(v43 + 168) = v46;
        v44 = v10;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_18577CED4((uint64_t)sub_18563998C, v43);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v55);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  sub_18519F088((uint64_t)&v53, &qword_1ECD74C70);
  result = sub_186507E04();
  __break(1u);
  return result;
}

uint64_t sub_1855ED5B0(_OWORD *a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  void *v27;
  unsigned __int8 *v28;
  id v29;
  void *v30;
  _BYTE *v31;
  uint64_t v32;
  unsigned __int8 *v33;
  uint64_t (*v34)();
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  unsigned __int8 *v43;
  uint64_t result;
  unsigned int v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  _BYTE v54[48];

  v10 = v9;
  v18 = (uint64_t)&v9[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_18519F0C4(v18, (uint64_t)&v52, &qword_1ECD74C70);
  if (v53)
  {
    v47 = a5;
    v48 = a7;
    v49 = a4;
    v50 = a6;
    v51 = a8;
    sub_1851E59E0(&v52, (uint64_t)v54);
    v19 = v10[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v10, sel_preferredFrameRateRange);
    v21 = v20;
    v23 = v22;
    v25 = v24;
    v45 = objc_msgSend(v10, sel_updateReason);
    if (v19 == 3)
    {
      v32 = 0;
      v34 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
    }
    else
    {
      objc_msgSend(v10, sel__incrementDidEndCount);
      v26 = MEMORY[0x186DCA138](a9 + 416);
      if (!v26)
        goto LABEL_5;
      v27 = (void *)v26;
      _s23InProcessAnimationStateCMa();
      v28 = v10;
      v29 = v27;
      LOBYTE(v27) = sub_186507A44();

      if ((v27 & 1) == 0)
      {
LABEL_5:
        v30 = (void *)MEMORY[0x186DCA138](a9 + 416);

        if (v30)
        {
          v31 = (_BYTE *)MEMORY[0x186DCA138](a9 + 416);
          if (v31)
          {
            v31[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;

          }
        }
        swift_unknownObjectWeakAssign();
      }
      v32 = swift_allocObject();
      *(_QWORD *)(v32 + 16) = v10;
      v33 = v10;
      v34 = sub_18563AE40;
    }
    v35 = *(_QWORD *)(a9 + 432);
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(a9 + 432) = v37;
      if (qword_1EDD831E0 == -1)
      {
LABEL_13:
        sub_1851E75D8((uint64_t)v54, (uint64_t)&v52);
        v38 = swift_allocObject();
        *(_QWORD *)(v38 + 16) = a9;
        *(_QWORD *)(v38 + 24) = v10;
        v39 = a1[1];
        *(_OWORD *)(v38 + 32) = *a1;
        *(_OWORD *)(v38 + 48) = v39;
        v40 = a1[3];
        *(_OWORD *)(v38 + 64) = a1[2];
        *(_OWORD *)(v38 + 80) = v40;
        v41 = a2[1];
        *(_OWORD *)(v38 + 96) = *a2;
        *(_OWORD *)(v38 + 112) = v41;
        v42 = a2[3];
        *(_OWORD *)(v38 + 128) = a2[2];
        *(_OWORD *)(v38 + 144) = v42;
        sub_1851E59E0(&v52, v38 + 160);
        *(_QWORD *)(v38 + 200) = a3;
        *(_QWORD *)(v38 + 208) = v49;
        *(_QWORD *)(v38 + 216) = v47;
        *(_QWORD *)(v38 + 224) = v50;
        *(_QWORD *)(v38 + 232) = v48;
        *(_QWORD *)(v38 + 240) = v51;
        *(_BYTE *)(v38 + 248) = v19 != 3;
        *(_DWORD *)(v38 + 252) = v45;
        *(_DWORD *)(v38 + 256) = v21;
        *(_DWORD *)(v38 + 260) = v23;
        *(_DWORD *)(v38 + 264) = v25;
        *(_QWORD *)(v38 + 272) = v34;
        *(_QWORD *)(v38 + 280) = v32;
        v43 = v10;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_18577CED4((uint64_t)sub_185639804, v38);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v54);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  sub_18519F088((uint64_t)&v52, &qword_1ECD74C70);
  result = sub_186507E04();
  __break(1u);
  return result;
}

uint64_t sub_1855ED920(uint64_t a1, uint64_t a2, uint64_t (*a3)(), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  void *v26;
  unsigned __int8 *v27;
  id v28;
  void *v29;
  _BYTE *v30;
  uint64_t v31;
  unsigned __int8 *v32;
  uint64_t (*v33)();
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 *v38;
  uint64_t result;
  uint64_t (*v40)();
  unsigned int v41;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  _BYTE v49[48];

  v10 = v9;
  v17 = (uint64_t)&v9[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_18519F0C4(v17, (uint64_t)&v47, &qword_1ECD74C70);
  if (v48)
  {
    v44 = a6;
    v45 = a8;
    v46 = a1;
    sub_1851E59E0(&v47, (uint64_t)v49);
    v18 = v10[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v10, sel_preferredFrameRateRange);
    v20 = v19;
    v22 = v21;
    v24 = v23;
    v41 = objc_msgSend(v10, sel_updateReason);
    if (v18 == 3)
    {
      v31 = 0;
      v33 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
    }
    else
    {
      v40 = a3;
      objc_msgSend(v10, sel__incrementDidEndCount);
      v25 = MEMORY[0x186DCA138](a9 + 104);
      if (!v25)
        goto LABEL_5;
      v26 = (void *)v25;
      _s23InProcessAnimationStateCMa();
      v27 = v10;
      v28 = v26;
      LOBYTE(v26) = sub_186507A44();

      if ((v26 & 1) == 0)
      {
LABEL_5:
        v29 = (void *)MEMORY[0x186DCA138](a9 + 104);

        if (v29)
        {
          v30 = (_BYTE *)MEMORY[0x186DCA138](a9 + 104);
          if (v30)
          {
            v30[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;

          }
        }
        swift_unknownObjectWeakAssign();
      }
      v31 = swift_allocObject();
      *(_QWORD *)(v31 + 16) = v10;
      v32 = v10;
      v33 = sub_18563AE40;
    }
    v34 = *(_QWORD *)(a9 + 120);
    v35 = __OFADD__(v34, 1);
    v36 = v34 + 1;
    if (v35)
    {
      __break(1u);
    }
    else
    {
      v40 = v33;
      *(_QWORD *)(a9 + 120) = v36;
      if (qword_1EDD831E0 == -1)
      {
LABEL_13:
        sub_1851E75D8((uint64_t)v49, (uint64_t)&v47);
        v37 = swift_allocObject();
        *(_QWORD *)(v37 + 16) = a9;
        *(_QWORD *)(v37 + 24) = v10;
        *(_QWORD *)(v37 + 32) = v46;
        *(_QWORD *)(v37 + 40) = a2;
        sub_1851E59E0(&v47, v37 + 48);
        *(_QWORD *)(v37 + 88) = a3;
        *(_QWORD *)(v37 + 96) = a4;
        *(_QWORD *)(v37 + 104) = a5;
        *(_QWORD *)(v37 + 112) = v44;
        *(_QWORD *)(v37 + 120) = a7;
        *(_QWORD *)(v37 + 128) = v45;
        *(_BYTE *)(v37 + 136) = v18 != 3;
        *(_DWORD *)(v37 + 140) = v41;
        *(_DWORD *)(v37 + 144) = v20;
        *(_DWORD *)(v37 + 148) = v22;
        *(_DWORD *)(v37 + 152) = v24;
        *(_QWORD *)(v37 + 160) = v40;
        *(_QWORD *)(v37 + 168) = v31;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        v38 = v10;
        swift_retain();
        swift_bridgeObjectRetain();
        sub_18577CED4((uint64_t)sub_18563919C, v37);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v49);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  sub_18519F088((uint64_t)&v47, &qword_1ECD74C70);
  result = sub_186507E04();
  __break(1u);
  return result;
}

uint64_t sub_1855EDC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8, double a9, double a10, double a11)
{
  unsigned __int8 *v11;
  unsigned __int8 *v12;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  void *v32;
  unsigned __int8 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  _BYTE *v39;
  uint64_t v40;
  unsigned __int8 *v41;
  uint64_t (*v42)();
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 *v47;
  uint64_t result;
  int v49;
  unsigned int v50;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  _BYTE v56[48];

  v12 = v11;
  v23 = (uint64_t)&v11[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_18519F0C4(v23, (uint64_t)&v54, &qword_1ECD74C70);
  if (v55)
  {
    v52 = a3;
    v53 = a5;
    sub_1851E59E0(&v54, (uint64_t)v56);
    v24 = v12[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v12, sel_preferredFrameRateRange);
    v26 = v25;
    v28 = v27;
    v30 = v29;
    v50 = objc_msgSend(v12, sel_updateReason);
    if (v24 == 3)
    {
      v40 = 0;
      v42 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
    }
    else
    {
      objc_msgSend(v12, sel__incrementDidEndCount);
      v31 = MEMORY[0x186DCA138](a7 + 176);
      if (!v31)
        goto LABEL_5;
      v32 = (void *)v31;
      _s23InProcessAnimationStateCMa();
      v33 = v12;
      v49 = v24;
      v34 = a2;
      v35 = a4;
      v36 = a6;
      v37 = v32;
      LOBYTE(v32) = sub_186507A44();

      a6 = v36;
      a4 = v35;
      a2 = v34;
      v24 = v49;

      if ((v32 & 1) == 0)
      {
LABEL_5:
        v38 = (void *)MEMORY[0x186DCA138](a7 + 176);

        if (v38)
        {
          v39 = (_BYTE *)MEMORY[0x186DCA138](a7 + 176);
          if (v39)
          {
            v39[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;

          }
        }
        swift_unknownObjectWeakAssign();
      }
      v40 = swift_allocObject();
      *(_QWORD *)(v40 + 16) = v12;
      v41 = v12;
      v42 = sub_18563AE40;
    }
    v43 = *(_QWORD *)(a7 + 192);
    v44 = __OFADD__(v43, 1);
    v45 = v43 + 1;
    if (v44)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(a7 + 192) = v45;
      if (qword_1EDD831E0 == -1)
      {
LABEL_13:
        sub_1851E75D8((uint64_t)v56, (uint64_t)&v54);
        v46 = swift_allocObject();
        *(_QWORD *)(v46 + 16) = a7;
        *(_QWORD *)(v46 + 24) = v12;
        *(double *)(v46 + 32) = a8;
        *(double *)(v46 + 40) = a9;
        *(double *)(v46 + 48) = a10;
        *(double *)(v46 + 56) = a11;
        sub_1851E59E0(&v54, v46 + 64);
        *(_QWORD *)(v46 + 104) = a1;
        *(_QWORD *)(v46 + 112) = a2;
        *(_QWORD *)(v46 + 120) = v52;
        *(_QWORD *)(v46 + 128) = a4;
        *(_QWORD *)(v46 + 136) = v53;
        *(_QWORD *)(v46 + 144) = a6;
        *(_BYTE *)(v46 + 152) = v24 != 3;
        *(_DWORD *)(v46 + 156) = v50;
        *(_DWORD *)(v46 + 160) = v26;
        *(_DWORD *)(v46 + 164) = v28;
        *(_DWORD *)(v46 + 168) = v30;
        *(_QWORD *)(v46 + 176) = v42;
        *(_QWORD *)(v46 + 184) = v40;
        v47 = v12;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_18577CED4((uint64_t)sub_1856390E8, v46);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v56);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  sub_18519F088((uint64_t)&v54, &qword_1ECD74C70);
  result = sub_186507E04();
  __break(1u);
  return result;
}

uint64_t sub_1855EE014(_OWORD *a1, __int128 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  void *v23;
  unsigned __int8 *v24;
  id v25;
  void *v26;
  _BYTE *v27;
  uint64_t v28;
  unsigned __int8 *v29;
  uint64_t (*v30)();
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  unsigned __int8 *v41;
  uint64_t result;
  unsigned int v43;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  _BYTE v52[48];

  v10 = v9;
  v14 = (uint64_t)&v9[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_18519F0C4(v14, (uint64_t)&v50, &qword_1ECD74C70);
  if (v51)
  {
    v49 = a8;
    sub_1851E59E0(&v50, (uint64_t)v52);
    v15 = v10[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v10, sel_preferredFrameRateRange);
    v17 = v16;
    v19 = v18;
    v21 = v20;
    v43 = objc_msgSend(v10, sel_updateReason);
    if (v15 == 3)
    {
      v28 = 0;
      v30 = (uint64_t (*)())signpost_c2_removePresentationModifier_end;
    }
    else
    {
      objc_msgSend(v10, sel__incrementDidEndCount);
      v22 = MEMORY[0x186DCA138](a9 + 480);
      if (!v22)
        goto LABEL_5;
      v23 = (void *)v22;
      _s23InProcessAnimationStateCMa();
      v24 = v10;
      v25 = v23;
      LOBYTE(v23) = sub_186507A44();

      if ((v23 & 1) == 0)
      {
LABEL_5:
        v26 = (void *)MEMORY[0x186DCA138](a9 + 480);

        if (v26)
        {
          v27 = (_BYTE *)MEMORY[0x186DCA138](a9 + 480);
          if (v27)
          {
            v27[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;

          }
        }
        swift_unknownObjectWeakAssign();
      }
      v28 = swift_allocObject();
      *(_QWORD *)(v28 + 16) = v10;
      v29 = v10;
      v30 = sub_18563AE40;
    }
    v31 = *(_QWORD *)(a9 + 496);
    v32 = __OFADD__(v31, 1);
    v33 = v31 + 1;
    if (v32)
    {
      __break(1u);
    }
    else
    {
      *(_QWORD *)(a9 + 496) = v33;
      if (qword_1EDD831E0 == -1)
      {
LABEL_13:
        sub_1851E75D8((uint64_t)v52, (uint64_t)&v50);
        v34 = swift_allocObject();
        *(_QWORD *)(v34 + 16) = a9;
        *(_QWORD *)(v34 + 24) = v10;
        v35 = a1[3];
        *(_OWORD *)(v34 + 64) = a1[2];
        *(_OWORD *)(v34 + 80) = v35;
        v36 = a1[1];
        *(_OWORD *)(v34 + 32) = *a1;
        *(_OWORD *)(v34 + 48) = v36;
        v37 = a2[2];
        v38 = a2[3];
        v39 = *a2;
        *(_OWORD *)(v34 + 128) = a2[1];
        *(_OWORD *)(v34 + 144) = v37;
        v40 = a2[4];
        *(_OWORD *)(v34 + 160) = v38;
        *(_OWORD *)(v34 + 176) = v40;
        *(_OWORD *)(v34 + 96) = a1[4];
        *(_OWORD *)(v34 + 112) = v39;
        sub_1851E59E0(&v50, v34 + 192);
        *(_QWORD *)(v34 + 232) = a3;
        *(_QWORD *)(v34 + 240) = a4;
        *(_QWORD *)(v34 + 248) = a5;
        *(_QWORD *)(v34 + 256) = a6;
        *(_QWORD *)(v34 + 264) = a7;
        *(_QWORD *)(v34 + 272) = v49;
        *(_BYTE *)(v34 + 280) = v15 != 3;
        *(_DWORD *)(v34 + 284) = v43;
        *(_DWORD *)(v34 + 288) = v17;
        *(_DWORD *)(v34 + 292) = v19;
        *(_DWORD *)(v34 + 296) = v21;
        *(_QWORD *)(v34 + 304) = v30;
        *(_QWORD *)(v34 + 312) = v28;
        v41 = v10;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_18577CED4((uint64_t)sub_18562CCF0, v34);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v52);
      }
    }
    swift_once();
    goto LABEL_13;
  }
  sub_18519F088((uint64_t)&v50, &qword_1ECD74C70);
  result = sub_186507E04();
  __break(1u);
  return result;
}

uint64_t sub_1855EE380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  unsigned __int8 *v9;
  uint64_t v12;
  ValueMetadata *v13;
  _QWORD *Description;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)();
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  char *v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  uint64_t v34;
  void *v35;
  id v36;
  void *v37;
  _BYTE *v38;
  id v39;
  id v40;
  uint64_t (*v41)(char);
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t result;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, ValueMetadata *);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)();
  id v73;
  char *v74;
  void (*v75)(char *, char *, ValueMetadata *);
  uint64_t (**v76)();
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  _DWORD *v82;
  char *v83;
  uint64_t v84;
  id v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t (*v93)(char);
  uint64_t v94;
  unsigned int v95;
  uint64_t (*v96)();
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unsigned __int8 *v102;
  id v103;
  uint64_t (*v104)();
  __int128 v105;
  _OWORD v106[2];
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  char v111;
  __int128 v112[8];
  char v113;

  v12 = *a9;
  v13 = *(ValueMetadata **)(*a9 + 80);
  Description = v13[-1].Description;
  v15 = Description[8];
  MEMORY[0x1E0C80A78](a1);
  v16 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v27 = (char *)&v86 - v26;
  if (v13 == &type metadata for UIAnimatableColorMatrix)
  {
    v42 = *(_OWORD *)(a1 + 48);
    v106[1] = *(_OWORD *)(a1 + 32);
    v107 = v42;
    v108 = *(_OWORD *)(a1 + 64);
    v43 = *(_OWORD *)(a1 + 16);
    v105 = *(_OWORD *)a1;
    v106[0] = v43;
    v44 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(v24 + 176) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v24 + 192) = v44;
    *(_OWORD *)(v24 + 208) = *(_OWORD *)(a2 + 64);
    v45 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v24 + 144) = *(_OWORD *)a2;
    *(_OWORD *)(v24 + 160) = v45;
    return sub_1855EE014(&v105, v112, (uint64_t)v18, v19, v20, v21, v22, v23, (uint64_t)v25);
  }
  if (v13 == &type metadata for UIAnimatableSize)
    return sub_1855EDC98((uint64_t)v18, v19, v20, v21, v22, v23, (uint64_t)v25, *(double *)a1, *(double *)(a1 + 8), *(double *)a2, *(double *)(a2 + 8));
  if (v13 == &type metadata for UIAnimatableColorArray)
    return sub_1855ED920(*(_QWORD *)a1, *(_QWORD *)a2, v18, v19, v20, v21, v22, v23, (uint64_t)v25);
  if (v13 == &type metadata for UIAnimatableCornerRadii)
  {
    v47 = *(_OWORD *)(a1 + 16);
    v105 = *(_OWORD *)a1;
    v106[0] = v47;
    v48 = *(_OWORD *)(a1 + 48);
    v106[1] = *(_OWORD *)(a1 + 32);
    v107 = v48;
    v49 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v24 + 144) = *(_OWORD *)a2;
    *(_OWORD *)(v24 + 160) = v49;
    v50 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(v24 + 176) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v24 + 192) = v50;
    return sub_1855ED5B0(&v105, v112, (uint64_t)v18, v19, v20, v21, v22, v23, (uint64_t)v25);
  }
  if (v13 == &type metadata for UIAnimatableVector)
    return sub_1855ED230(*(_QWORD *)a1, *(_QWORD *)a2, (uint64_t)v18, v19, v20, v21, v22, v23, (uint64_t)v25);
  if (v13 == &type metadata for UIAnimatableMeshTransform)
  {
    v51 = *(_OWORD *)(a1 + 16);
    v105 = *(_OWORD *)a1;
    v106[0] = v51;
    *(_QWORD *)((char *)v106 + 13) = *(_QWORD *)(a1 + 29);
    v52 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v24 + 144) = *(_OWORD *)a2;
    *(_OWORD *)(v24 + 160) = v52;
    *(_QWORD *)(v24 + 173) = *(_QWORD *)(a2 + 29);
    return sub_1855ECE58((uint64_t)&v105, (uint64_t)v112, (uint64_t)v18, v19, v20, v21, v22, v23, v25);
  }
  if (v13 == &type metadata for UIAnimatableFloat)
    return sub_1855ECAF0((uint64_t)v18, v19, v20, v21, v22, v23, (uint64_t)v25, *(double *)a1, *(double *)a2);
  if (v13 == &type metadata for UIAnimatableNormalizedPoint)
    return sub_1855EC774((uint64_t)v18, v19, v20, v21, v22, v23, (uint64_t)v25, *(double *)a1, *(double *)(a1 + 8), *(double *)a2, *(double *)(a2 + 8));
  if (v13 == &type metadata for UIAnimatableColor)
    return sub_1855EC3D8((uint64_t)v18, v19, v20, v21, v22, v23, (uint64_t)v25, *(double *)a1, *(double *)(a1 + 8), *(double *)(a1 + 16), *(double *)(a1 + 24), *(double *)a2, *(double *)(a2 + 8), *(double *)(a2 + 16), *(double *)(a2 + 24));
  if (v13 == &type metadata for UIAnimatableScaledFloat)
    return sub_1855EC070((uint64_t)v18, v19, v20, v21, v22, v23, (uint64_t)v25, *(double *)a1, *(double *)a2);
  if (v13 == &type metadata for UIAnimatableRect)
    return sub_1855EBCD4((uint64_t)v18, v19, v20, v21, v22, v23, (uint64_t)v25, *(double *)a1, *(double *)(a1 + 8), *(double *)(a1 + 16), *(double *)(a1 + 24), *(double *)a2, *(double *)(a2 + 8), *(double *)(a2 + 16), *(double *)(a2 + 24));
  if (v13 == &type metadata for UIAnimatableNormalizedRect)
    return sub_1855EB938((uint64_t)v18, v19, v20, v21, v22, v23, (uint64_t)v25, *(double *)a1, *(double *)(a1 + 8), *(double *)(a1 + 16), *(double *)(a1 + 24), *(double *)a2, *(double *)(a2 + 8), *(double *)(a2 + 16), *(double *)(a2 + 24));
  if (v13 == &type metadata for UIAnimatableTransform)
  {
    v53 = *(_OWORD *)(a1 + 96);
    *(_OWORD *)(v24 + 112) = *(_OWORD *)(a1 + 112);
    v111 = *(_BYTE *)(a1 + 128);
    v54 = *(_OWORD *)(a1 + 48);
    v106[1] = *(_OWORD *)(a1 + 32);
    v107 = v54;
    v55 = *(_OWORD *)(a1 + 64);
    v109 = *(_OWORD *)(a1 + 80);
    v110 = v53;
    v108 = v55;
    v56 = *(_OWORD *)(a1 + 16);
    v105 = *(_OWORD *)a1;
    v106[0] = v56;
    v57 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(v24 + 240) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(v24 + 256) = v57;
    v113 = *(_BYTE *)(a2 + 128);
    v58 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(v24 + 176) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v24 + 192) = v58;
    v59 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(v24 + 208) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(v24 + 224) = v59;
    v60 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v24 + 144) = *(_OWORD *)a2;
    *(_OWORD *)(v24 + 160) = v60;
    return sub_1855EB598((uint64_t)&v105, v112, (uint64_t)v18, v19, v20, v21, v22, v23, (uint64_t)v25);
  }
  if (v13 == &type metadata for UIAnimatablePoint)
    return sub_1855EB21C((uint64_t)v18, v19, v20, v21, v22, v23, (uint64_t)v25, *(double *)a1, *(double *)(a1 + 8), *(double *)a2, *(double *)(a2 + 8));
  v96 = v18;
  v97 = v20;
  v104 = v25;
  v98 = v19;
  v99 = v22;
  v100 = v21;
  v101 = v23;
  v102 = &v9[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_animationAndComposerGetter];
  swift_beginAccess();
  sub_18519F0C4((uint64_t)v102, (uint64_t)&v105, &qword_1ECD74C70);
  if (*((_QWORD *)&v106[0] + 1))
  {
    sub_1851E59E0(&v105, (uint64_t)v112);
    LODWORD(v102) = v9[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_updateType];
    objc_msgSend(v9, sel_preferredFrameRateRange);
    v29 = v28;
    v31 = v30;
    v33 = v32;
    v95 = objc_msgSend(v9, sel_updateReason);
    v103 = v9;
    if ((_DWORD)v102 == 3)
    {
      v94 = 0;
      v41 = (uint64_t (*)(char))signpost_c2_removePresentationModifier_end;
    }
    else
    {
      objc_msgSend(v9, sel__incrementDidEndCount);
      v94 = (uint64_t)v104 + *(_QWORD *)(*(_QWORD *)v104 + 152);
      v34 = MEMORY[0x186DCA138]();
      if (!v34)
        goto LABEL_19;
      v35 = (void *)v34;
      v92 = _s23InProcessAnimationStateCMa();
      v93 = (uint64_t (*)(char))v103;
      v91 = v35;
      LODWORD(v92) = sub_186507A44();
      v36 = v91;

      if ((v92 & 1) == 0)
      {
LABEL_19:
        v37 = (void *)MEMORY[0x186DCA138](v94);

        if (v37)
        {
          v38 = (_BYTE *)MEMORY[0x186DCA138](v94);
          if (v38)
          {
            v38[OBJC_IVAR____TtCE5UIKitCSo6UIView23InProcessAnimationState_retargeted] = 1;

          }
        }
        swift_unknownObjectWeakAssign();
      }
      v94 = swift_allocObject();
      v39 = v103;
      *(_QWORD *)(v94 + 16) = v103;
      v40 = v39;
      v41 = sub_18562CAA0;
    }
    v61 = *(_QWORD *)(*(_QWORD *)v104 + 168);
    v62 = *(_QWORD *)((char *)v104 + v61);
    v63 = __OFADD__(v62, 1);
    v64 = v62 + 1;
    if (v63)
    {
      __break(1u);
    }
    else
    {
      v93 = v41;
      *(_QWORD *)((char *)v104 + v61) = v64;
      if (qword_1EDD831E0 == -1)
      {
LABEL_41:
        LODWORD(v92) = (_DWORD)v102 != 3;
        v102 = (unsigned __int8 *)qword_1EDDA8748;
        v65 = (void (*)(char *, uint64_t, ValueMetadata *))Description[2];
        v65(v27, a1, v13);
        v65(v16, a2, v13);
        sub_1851E75D8((uint64_t)v112, (uint64_t)&v105);
        v66 = *((unsigned __int8 *)Description + 80);
        v67 = (v66 + 48) & ~v66;
        v68 = (v15 + v66 + v67) & ~v66;
        v69 = (v15 + v68 + 7) & 0xFFFFFFFFFFFFFFF8;
        v87 = (v69 + 47) & 0xFFFFFFFFFFFFFFF8;
        v88 = (v87 + 23) & 0xFFFFFFFFFFFFFFF8;
        v89 = (v88 + 23) & 0xFFFFFFFFFFFFFFF8;
        v90 = (v89 + 27) & 0xFFFFFFFFFFFFFFF8;
        v91 = (char *)((v90 + 19) & 0xFFFFFFFFFFFFFFF8);
        v70 = swift_allocObject();
        *(_QWORD *)(v70 + 16) = v13;
        v71 = *(_QWORD *)(v12 + 88);
        v73 = v103;
        v72 = v104;
        *(_QWORD *)(v70 + 24) = v71;
        *(_QWORD *)(v70 + 32) = v72;
        *(_QWORD *)(v70 + 40) = v73;
        v74 = (char *)(v70 + v67);
        v75 = (void (*)(char *, char *, ValueMetadata *))Description[4];
        v75(v74, v27, v13);
        v75((char *)(v70 + v68), v16, v13);
        sub_1851E59E0(&v105, v70 + v69);
        v76 = (uint64_t (**)())(v70 + v87);
        v77 = v98;
        *v76 = v96;
        v76[1] = (uint64_t (*)())v77;
        v78 = (uint64_t *)(v70 + v88);
        v80 = v100;
        v79 = v101;
        *v78 = v97;
        v78[1] = v80;
        v81 = (char *)(v70 + v89);
        *(_QWORD *)v81 = v99;
        *((_QWORD *)v81 + 1) = v79;
        v81[16] = v92;
        *((_DWORD *)v81 + 5) = v95;
        v82 = (_DWORD *)(v70 + v90);
        *v82 = v29;
        v82[1] = v31;
        v82[2] = v33;
        v83 = &v91[v70];
        v84 = v94;
        *(_QWORD *)v83 = v93;
        *((_QWORD *)v83 + 1) = v84;
        v85 = v73;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_18577CED4((uint64_t)sub_18562CBB8, v70);
        swift_release();
        swift_release();
        return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v112);
      }
    }
    swift_once();
    goto LABEL_41;
  }
  sub_18519F088((uint64_t)&v105, &qword_1ECD74C70);
  result = sub_186507E04();
  __break(1u);
  return result;
}

uint64_t sub_1855EED1C(char a1, void *a2)
{
  uint64_t v4;
  id v5;

  if (qword_1EDD831E0 != -1)
    swift_once();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  *(_BYTE *)(v4 + 24) = a1 & 1;
  v5 = a2;
  sub_18577CC40((uint64_t)sub_18563AD80, v4);
  return swift_release();
}

uint64_t sub_1855EEDB0(float a1, float a2, float a3, uint64_t a4, float32x4_t *a5, float32x4_t *a6, char a7, _QWORD *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, int a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  float32x4_t v23;
  float32x4_t v24;
  float32x4_t v25;
  float32x4_t v26;
  float32x4_t v27;
  float32x4_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_unfair_lock_s *v33;
  uint64_t v34;
  void (*v35)(_QWORD *__return_ptr, uint64_t, float32x4_t *, float32x4_t *, float32x4_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_QWORD);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  int v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t result;
  uint64_t v56;
  NSObject *queuea;
  os_unfair_lock_s *lock;
  uint64_t v62;
  _QWORD aBlock[78];
  unsigned __int8 v64;
  float32x4_t v65[39];
  char v66;
  _QWORD v67[11];
  float32x4_t v68;
  float32x4_t v69;
  float32x4_t v70;
  float32x4_t v71;
  float32x4_t v72;
  float32x4_t v73;
  float32x4_t v74;
  float32x4_t v75;
  float32x4_t v76;
  float32x4_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  float32x4_t v83[5];
  float32x4_t v84[6];

  v19 = v18;
  v23 = a5[2];
  v24 = a5[3];
  v25 = *a5;
  v74 = a5[1];
  v75 = v23;
  v26 = a5[4];
  v76 = v24;
  v77 = v26;
  v27 = a6[3];
  v70 = a6[2];
  v71 = v27;
  v72 = a6[4];
  v73 = v25;
  v28 = a6[1];
  v68 = *a6;
  v69 = v28;
  v30 = a8[3];
  v29 = a8[4];
  __swift_project_boxed_opaque_existential_0Tm(a8, v30);
  swift_beginAccess();
  v31 = *(unsigned __int8 *)(v18 + 389);
  v32 = *(_QWORD *)(v18 + 32);
  v33 = (os_unfair_lock_s *)(v32 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v32 + 24));
  v62 = v32;
  v34 = *(_QWORD *)(v32 + 16);
  swift_retain();
  os_unfair_lock_unlock(v33);
  lock = v33;
  if (v34)
  {
    swift_beginAccess();
    sub_18519F0C4(v34 + 24, (uint64_t)v65, &qword_1EDD7D4A8);
    swift_release();
  }
  else
  {
    bzero(v65, 0x270uLL);
    v66 = -1;
  }
  v35 = *(void (**)(_QWORD *__return_ptr, uint64_t, float32x4_t *, float32x4_t *, float32x4_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v29 + 16);
  v36 = sub_1855C79B0();
  v35(v67, v31, v65, &v73, &v68, &type metadata for UIAnimatableColorMatrix, v36, v30, v29);
  sub_18519F088((uint64_t)v65, &qword_1EDD7D4B0);
  os_unfair_lock_lock(v33);
  v37 = *(_QWORD *)(v62 + 16);
  swift_retain();
  os_unfair_lock_unlock(v33);
  if (v37)
  {
    swift_beginAccess();
    sub_18519F0C4(v37 + 24, (uint64_t)aBlock, &qword_1EDD7D4A8);
    swift_release();
  }
  else
  {
    bzero(aBlock, 0x270uLL);
    v64 = -1;
  }
  swift_beginAccess();
  v83[2] = v75;
  v83[3] = v76;
  v83[0] = v73;
  v83[1] = v74;
  v84[1] = v69;
  v84[2] = v70;
  v84[3] = v71;
  v84[4] = v72;
  v83[4] = v77;
  v84[0] = v68;
  sub_185614E34((uint64_t)aBlock, (uint64_t)v67, a7 & 1, v83, v84, v65);
  swift_endAccess();
  sub_18519F088((uint64_t)aBlock, &qword_1EDD7D4B0);
  os_unfair_lock_lock(v33);
  v38 = *(_QWORD *)(v62 + 16);
  swift_retain();
  os_unfair_lock_unlock(v33);
  if (v38)
  {
    v39 = *(void (**)(_QWORD))(v38 + 656);
    if (v39)
    {
      *(_QWORD *)(v38 + 656) = 0;
      *(_QWORD *)(v38 + 664) = 0;
      swift_retain();
      sub_18518D718((uint64_t)v39);
      v39(0);
      sub_18518D718((uint64_t)v39);
    }
    *(_BYTE *)(v38 + 672) = 1;
    swift_release();
  }
  sub_18519F0C4((uint64_t)v65, (uint64_t)aBlock, &qword_1EDD7D4A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD7D4D8);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 656) = 0u;
  swift_unknownObjectWeakInit();
  sub_1850F26F8((uint64_t)aBlock, v40 + 24, &qword_1EDD7D4A8);
  *(_WORD *)(v40 + 672) = 0;
  v41 = *(_QWORD *)(v40 + 656);
  *(_QWORD *)(v40 + 656) = a17;
  *(_QWORD *)(v40 + 664) = a18;
  swift_retain();
  sub_18518D718(v41);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83250);
  v42 = swift_allocObject();
  *(_DWORD *)(v42 + 16) = 0;
  *(_QWORD *)(v40 + 16) = v42;
  if ((a15 & 1) != 0)
    swift_unknownObjectWeakAssign();
  swift_beginAccess();
  if ((*(_BYTE *)(v19 + 204) & 1) == 0)
  {
    v43 = *(_OWORD *)(v19 + 140);
    v78 = *(_OWORD *)(v19 + 124);
    v79 = v43;
    v44 = *(_OWORD *)(v19 + 172);
    v80 = *(_OWORD *)(v19 + 156);
    v81 = v44;
    v82 = *(_OWORD *)(v19 + 188);
    sub_18561E1C0();
  }
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = 0u;
  *(_OWORD *)(v45 + 32) = 0u;
  *(_OWORD *)(v45 + 48) = 0u;
  *(_OWORD *)(v45 + 64) = 0u;
  *(_OWORD *)(v45 + 80) = 0u;
  *(_BYTE *)(v45 + 96) = 1;
  if (qword_1EDD831E0 != -1)
    swift_once();
  v56 = qword_1EDDA8748;
  v46 = *(_BYTE *)(v19 + 488);
  sub_18519F0C4((uint64_t)v65, (uint64_t)aBlock, &qword_1EDD7D4A8);
  v47 = v64;
  if (v64 == 2)
    sub_18519F088((uint64_t)aBlock, &qword_1EDD7D4A8);
  v48 = v47 == 2;
  v49 = swift_allocObject();
  *(_QWORD *)(v49 + 16) = v40;
  *(_QWORD *)(v49 + 24) = a9;
  *(_QWORD *)(v49 + 32) = a10;
  *(_QWORD *)(v49 + 40) = v19;
  *(_QWORD *)(v49 + 48) = v45;
  *(_QWORD *)(v49 + 56) = a11;
  *(_QWORD *)(v49 + 64) = a12;
  *(_QWORD *)(v49 + 72) = a13;
  *(_QWORD *)(v49 + 80) = a14;
  type metadata accessor for InProcessAnimationManager.TickEntry();
  v50 = swift_allocObject();
  *(float *)(v50 + 16) = a1;
  *(float *)(v50 + 20) = a2;
  *(float *)(v50 + 24) = a3;
  *(_DWORD *)(v50 + 28) = a16;
  *(_BYTE *)(v50 + 32) = v46;
  *(_BYTE *)(v50 + 33) = v48;
  *(_QWORD *)(v50 + 40) = sub_18562CDB4;
  *(_QWORD *)(v50 + 48) = v49;
  queuea = *(NSObject **)(v56 + 264);
  v51 = swift_allocObject();
  *(_QWORD *)(v51 + 16) = v56;
  *(_QWORD *)(v51 + 24) = v50;
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = sub_18562CDC4;
  *(_QWORD *)(v52 + 24) = v51;
  aBlock[4] = sub_1855A65EC;
  aBlock[5] = v52;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1855D8DF4;
  aBlock[3] = &block_descriptor_14;
  v53 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(queuea, v53);
  _Block_release(v53);
  LOBYTE(v49) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v49 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock(lock);
    swift_release();
    *(_QWORD *)(v62 + 16) = v40;
    swift_retain();
    os_unfair_lock_unlock(lock);
    swift_release_n();
    sub_18519F088((uint64_t)v65, &qword_1EDD7D4A8);
    sub_1855DEB40((uint64_t)v67);
    return swift_release();
  }
  return result;
}

uint64_t sub_1855EF46C(double a1, double a2, double a3, double a4, float a5, float a6, float a7, uint64_t a8, char a9, _QWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, int a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_unfair_lock_s *v29;
  uint64_t v30;
  void (*v31)(_QWORD *__return_ptr, uint64_t, _OWORD *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_QWORD);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  int v42;
  BOOL v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t result;
  NSObject *queuea;
  os_unfair_lock_s *lock;
  uint64_t v58;
  uint64_t v59;
  __int128 aBlock;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  unsigned __int8 v75;
  _OWORD v76[15];
  char v77;
  _QWORD v78[11];
  double v79;
  double v80;
  double v81;
  double v82;

  v81 = a1;
  v82 = a2;
  v79 = a3;
  v80 = a4;
  v25 = a10[3];
  v26 = a10[4];
  __swift_project_boxed_opaque_existential_0Tm(a10, v25);
  swift_beginAccess();
  v27 = *(unsigned __int8 *)(v20 + 145);
  v58 = v20;
  v28 = *(_QWORD *)(v20 + 32);
  v29 = (os_unfair_lock_s *)(v28 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v28 + 24));
  v59 = v28;
  v30 = *(_QWORD *)(v28 + 16);
  swift_retain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v28 + 24));
  lock = (os_unfair_lock_s *)(v28 + 24);
  if (v30)
  {
    swift_beginAccess();
    v29 = (os_unfair_lock_s *)(v28 + 24);
    sub_18519F0C4(v30 + 24, (uint64_t)v76, &qword_1EDD81FD0);
    swift_release();
  }
  else
  {
    memset(v76, 0, sizeof(v76));
    v77 = -1;
  }
  v31 = *(void (**)(_QWORD *__return_ptr, uint64_t, _OWORD *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v26 + 16);
  v32 = sub_1855C7B48();
  v31(v78, v27, v76, &v81, &v79, &type metadata for UIAnimatableSize, v32, v25, v26);
  sub_18519F088((uint64_t)v76, &qword_1EDD81FD8);
  os_unfair_lock_lock(v29);
  v33 = *(_QWORD *)(v59 + 16);
  swift_retain();
  os_unfair_lock_unlock(v29);
  if (v33)
  {
    swift_beginAccess();
    sub_18519F0C4(v33 + 24, (uint64_t)&aBlock, &qword_1EDD81FD0);
    swift_release();
  }
  else
  {
    v73 = 0u;
    v74 = 0u;
    v71 = 0u;
    v72 = 0u;
    v69 = 0u;
    v70 = 0u;
    v67 = 0u;
    v68 = 0u;
    v65 = 0u;
    v66 = 0u;
    v63 = 0u;
    v64 = 0u;
    v61 = 0u;
    v62 = 0u;
    aBlock = 0u;
    v75 = -1;
  }
  swift_beginAccess();
  sub_18561D7B4((uint64_t)&aBlock, (uint64_t)v78, a9 & 1, &qword_1EDD81FD8, &qword_1EDD85EB0, &qword_1EDD85EB8, &qword_1EDD81FD0, (uint64_t)v76, v81, v82, v79, v80);
  swift_endAccess();
  sub_18519F088((uint64_t)&aBlock, &qword_1EDD81FD8);
  os_unfair_lock_lock(v29);
  v34 = *(_QWORD *)(v59 + 16);
  swift_retain();
  os_unfair_lock_unlock(v29);
  if (v34)
  {
    v35 = *(void (**)(_QWORD))(v34 + 272);
    if (v35)
    {
      *(_QWORD *)(v34 + 272) = 0;
      *(_QWORD *)(v34 + 280) = 0;
      swift_retain();
      sub_18518D718((uint64_t)v35);
      v35(0);
      sub_18518D718((uint64_t)v35);
    }
    *(_BYTE *)(v34 + 288) = 1;
    swift_release();
  }
  sub_18519F0C4((uint64_t)v76, (uint64_t)&aBlock, &qword_1EDD81FD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD81FE0);
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 272) = 0;
  *(_QWORD *)(v36 + 280) = 0;
  swift_unknownObjectWeakInit();
  sub_1850F26F8((uint64_t)&aBlock, v36 + 24, &qword_1EDD81FD0);
  *(_WORD *)(v36 + 288) = 0;
  v37 = *(_QWORD *)(v36 + 272);
  *(_QWORD *)(v36 + 272) = a19;
  *(_QWORD *)(v36 + 280) = a20;
  swift_retain();
  sub_18518D718(v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83250);
  v38 = swift_allocObject();
  *(_DWORD *)(v38 + 16) = 0;
  *(_QWORD *)(v36 + 16) = v38;
  if ((a17 & 1) != 0)
    swift_unknownObjectWeakAssign();
  swift_beginAccess();
  if ((*(_BYTE *)(v58 + 80) & 1) == 0)
    sub_18561EDFC(&qword_1EDD81FD0);
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = 0;
  *(_QWORD *)(v39 + 24) = 0;
  *(_BYTE *)(v39 + 32) = 1;
  if (qword_1EDD831E0 != -1)
    swift_once();
  v40 = qword_1EDDA8748;
  v41 = *(_BYTE *)(v58 + 184);
  sub_18519F0C4((uint64_t)v76, (uint64_t)&aBlock, &qword_1EDD81FD0);
  v42 = v75;
  if (v75 == 2)
    sub_18519F088((uint64_t)&aBlock, &qword_1EDD81FD0);
  v43 = v42 == 2;
  v44 = (_QWORD *)swift_allocObject();
  v44[2] = v36;
  v44[3] = a11;
  v44[4] = a12;
  v44[5] = v58;
  v44[6] = v39;
  v44[7] = a13;
  v44[8] = a14;
  v44[9] = a15;
  v44[10] = a16;
  type metadata accessor for InProcessAnimationManager.TickEntry();
  v45 = swift_allocObject();
  *(float *)(v45 + 16) = a5;
  *(float *)(v45 + 20) = a6;
  *(float *)(v45 + 24) = a7;
  *(_DWORD *)(v45 + 28) = a18;
  *(_BYTE *)(v45 + 32) = v41;
  *(_BYTE *)(v45 + 33) = v43;
  *(_QWORD *)(v45 + 40) = sub_185639108;
  *(_QWORD *)(v45 + 48) = v44;
  queuea = *(NSObject **)(v40 + 264);
  v46 = v40;
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = v46;
  *(_QWORD *)(v47 + 24) = v45;
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = sub_18563AE3C;
  *(_QWORD *)(v48 + 24) = v47;
  *(_QWORD *)&v62 = sub_1855A6A1C;
  *((_QWORD *)&v62 + 1) = v48;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v61 = sub_1855D8DF4;
  *((_QWORD *)&v61 + 1) = &block_descriptor_353;
  v49 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(queuea, v49);
  _Block_release(v49);
  LOBYTE(v49) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v49 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock(lock);
    swift_release();
    *(_QWORD *)(v59 + 16) = v36;
    swift_retain();
    os_unfair_lock_unlock(lock);
    swift_release_n();
    sub_18519F088((uint64_t)v76, &qword_1EDD81FD0);
    sub_1855DEB40((uint64_t)v78);
    return swift_release();
  }
  return result;
}

uint64_t sub_1855EFB08(float a1, float a2, float a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, _QWORD *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, int a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  os_unfair_lock_s *v26;
  uint64_t v27;
  void (*v28)(_QWORD *__return_ptr, uint64_t, _OWORD *, uint64_t *, uint64_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t result;
  os_unfair_lock_s *lock;
  NSObject *queuea;
  uint64_t v52;
  uint64_t v54;
  __int128 aBlock;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  char v67;
  _OWORD v68[12];
  char v69;
  _QWORD v70[11];
  uint64_t v71;
  uint64_t v72;

  v71 = a6;
  v72 = a5;
  v23 = a8[3];
  v22 = a8[4];
  __swift_project_boxed_opaque_existential_0Tm(a8, v23);
  swift_beginAccess();
  v24 = *(unsigned __int8 *)(v18 + 88);
  v54 = v18;
  v25 = *(_QWORD *)(v18 + 32);
  v26 = (os_unfair_lock_s *)(v25 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v25 + 24));
  v27 = *(_QWORD *)(v25 + 16);
  swift_retain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v25 + 24));
  v52 = v25;
  if (v27)
  {
    swift_beginAccess();
    sub_18519F0C4(v27 + 24, (uint64_t)v68, &qword_1EDD85F98);
    swift_release();
  }
  else
  {
    memset(v68, 0, sizeof(v68));
    v69 = -1;
  }
  v28 = *(void (**)(_QWORD *__return_ptr, uint64_t, _OWORD *, uint64_t *, uint64_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v22 + 16);
  v29 = sub_1855C7A38();
  v28(v70, v24, v68, &v72, &v71, &type metadata for UIAnimatableColorArray, v29, v23, v22);
  sub_18519F088((uint64_t)v68, &qword_1EDD85FA0);
  os_unfair_lock_lock(v26);
  v30 = *(_QWORD *)(v25 + 16);
  swift_retain();
  os_unfair_lock_unlock(v26);
  if (v30)
  {
    swift_beginAccess();
    sub_18519F0C4(v30 + 24, (uint64_t)&aBlock, &qword_1EDD85F98);
    swift_release();
  }
  else
  {
    v65 = 0u;
    v66 = 0u;
    v63 = 0u;
    v64 = 0u;
    v61 = 0u;
    v62 = 0u;
    v59 = 0u;
    v60 = 0u;
    v57 = 0u;
    v58 = 0u;
    aBlock = 0u;
    v56 = 0u;
    v67 = -1;
  }
  swift_beginAccess();
  sub_1856162A8((uint64_t)&aBlock, (uint64_t)v70, a7 & 1, v72, v71, (uint64_t)v68);
  swift_endAccess();
  sub_18519F088((uint64_t)&aBlock, &qword_1EDD85FA0);
  os_unfair_lock_lock(v26);
  v31 = *(_QWORD *)(v25 + 16);
  swift_retain();
  os_unfair_lock_unlock(v26);
  if (v31)
  {
    v32 = *(void (**)(_QWORD))(v31 + 224);
    if (v32)
    {
      *(_QWORD *)(v31 + 224) = 0;
      *(_QWORD *)(v31 + 232) = 0;
      swift_retain();
      sub_18518D718((uint64_t)v32);
      v32(0);
      sub_18518D718((uint64_t)v32);
    }
    *(_BYTE *)(v31 + 240) = 1;
    swift_release();
  }
  sub_18519F0C4((uint64_t)v68, (uint64_t)&aBlock, &qword_1EDD85F98);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD85FA8);
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 224) = 0;
  *(_QWORD *)(v33 + 232) = 0;
  swift_unknownObjectWeakInit();
  sub_1850F26F8((uint64_t)&aBlock, v33 + 24, &qword_1EDD85F98);
  *(_WORD *)(v33 + 240) = 0;
  v34 = *(_QWORD *)(v33 + 224);
  *(_QWORD *)(v33 + 224) = a17;
  *(_QWORD *)(v33 + 232) = a18;
  swift_retain();
  sub_18518D718(v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83250);
  v35 = swift_allocObject();
  *(_DWORD *)(v35 + 16) = 0;
  *(_QWORD *)(v33 + 16) = v35;
  if ((a15 & 1) != 0)
    swift_unknownObjectWeakAssign();
  swift_beginAccess();
  v36 = *(_QWORD *)(v54 + 48);
  if (v36 != 1)
  {
    sub_1856389E0(v36);
    swift_bridgeObjectRetain();
    sub_18561E3C8();
    sub_1856389D0(v36);
  }
  lock = (os_unfair_lock_s *)(v25 + 24);
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = 1;
  if (qword_1EDD831E0 != -1)
    swift_once();
  v38 = qword_1EDDA8748;
  v39 = *(_BYTE *)(v54 + 112);
  sub_18519F0C4((uint64_t)v68, (uint64_t)&aBlock, &qword_1EDD85F98);
  v40 = v67 == 2;
  sub_18519F088((uint64_t)&aBlock, &qword_1EDD85F98);
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = v33;
  *(_QWORD *)(v41 + 24) = a9;
  *(_QWORD *)(v41 + 32) = a10;
  *(_QWORD *)(v41 + 40) = v54;
  *(_QWORD *)(v41 + 48) = v37;
  *(_QWORD *)(v41 + 56) = a11;
  *(_QWORD *)(v41 + 64) = a12;
  *(_QWORD *)(v41 + 72) = a13;
  *(_QWORD *)(v41 + 80) = a14;
  type metadata accessor for InProcessAnimationManager.TickEntry();
  v42 = swift_allocObject();
  *(float *)(v42 + 16) = a1;
  *(float *)(v42 + 20) = a2;
  *(float *)(v42 + 24) = a3;
  *(_DWORD *)(v42 + 28) = a16;
  *(_BYTE *)(v42 + 32) = v39;
  *(_BYTE *)(v42 + 33) = v40;
  *(_QWORD *)(v42 + 40) = sub_1856391D8;
  *(_QWORD *)(v42 + 48) = v41;
  queuea = *(NSObject **)(v38 + 264);
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = v38;
  *(_QWORD *)(v43 + 24) = v42;
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = sub_18563AE3C;
  *(_QWORD *)(v44 + 24) = v43;
  *(_QWORD *)&v57 = sub_1855A6A1C;
  *((_QWORD *)&v57 + 1) = v44;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v56 = sub_1855D8DF4;
  *((_QWORD *)&v56 + 1) = &block_descriptor_385;
  v45 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(queuea, v45);
  _Block_release(v45);
  LOBYTE(v41) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v41 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock(lock);
    swift_release();
    *(_QWORD *)(v52 + 16) = v33;
    swift_retain();
    os_unfair_lock_unlock(lock);
    swift_release_n();
    sub_18519F088((uint64_t)v68, &qword_1EDD85F98);
    sub_1855DEB40((uint64_t)v70);
    return swift_release();
  }
  return result;
}

uint64_t sub_1855F0160(float a1, float a2, float a3, uint64_t a4, __int128 *a5, float64x2_t *a6, char a7, _QWORD *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, int a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  __int128 v22;
  __int128 v23;
  float64x2_t v24;
  float64x2_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  os_unfair_lock_s *v31;
  uint64_t v32;
  void (*v33)(_QWORD *__return_ptr, uint64_t, _BYTE *, __int128 *, float64x2_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  int v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  uint64_t result;
  uint64_t v54;
  NSObject *queuea;
  os_unfair_lock_s *lock;
  uint64_t v60;
  _QWORD aBlock[66];
  unsigned __int8 v62;
  _BYTE v63[536];
  _QWORD v64[11];
  float64x2_t v65;
  float64x2_t v66;
  float64x2_t v67;
  float64x2_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  _OWORD v77[4];
  float64x2_t v78[5];

  v22 = a5[1];
  v69 = *a5;
  v70 = v22;
  v23 = a5[3];
  v71 = a5[2];
  v72 = v23;
  v24 = a6[1];
  v65 = *a6;
  v66 = v24;
  v25 = a6[3];
  v67 = a6[2];
  v68 = v25;
  v27 = a8[3];
  v26 = a8[4];
  __swift_project_boxed_opaque_existential_0Tm(a8, v27);
  swift_beginAccess();
  v28 = *(unsigned __int8 *)(v18 + 337);
  v29 = v18;
  v30 = *(_QWORD *)(v18 + 32);
  v31 = (os_unfair_lock_s *)(v30 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v30 + 24));
  v60 = v30;
  v32 = *(_QWORD *)(v30 + 16);
  swift_retain();
  os_unfair_lock_unlock(v31);
  lock = v31;
  if (v32)
  {
    swift_beginAccess();
    sub_18519F0C4(v32 + 24, (uint64_t)v63, &qword_1EDD828B8);
    swift_release();
  }
  else
  {
    bzero(v63, 0x210uLL);
    v63[528] = -1;
  }
  v33 = *(void (**)(_QWORD *__return_ptr, uint64_t, _BYTE *, __int128 *, float64x2_t *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v26 + 16);
  v34 = sub_1855C7B04();
  v33(v64, v28, v63, &v69, &v65, &type metadata for UIAnimatableCornerRadii, v34, v27, v26);
  sub_18519F088((uint64_t)v63, &qword_1EDD828C0);
  os_unfair_lock_lock(v31);
  v35 = *(_QWORD *)(v60 + 16);
  swift_retain();
  os_unfair_lock_unlock(v31);
  if (v35)
  {
    swift_beginAccess();
    sub_18519F0C4(v35 + 24, (uint64_t)aBlock, &qword_1EDD828B8);
    swift_release();
  }
  else
  {
    bzero(aBlock, 0x210uLL);
    v62 = -1;
  }
  swift_beginAccess();
  v77[0] = v69;
  v77[1] = v70;
  v77[2] = v71;
  v77[3] = v72;
  v78[0] = v65;
  v78[1] = v66;
  v78[2] = v67;
  v78[3] = v68;
  sub_185617170((uint64_t)aBlock, (uint64_t)v64, a7 & 1, (uint64_t *)v77, v78, (uint64_t)v63);
  swift_endAccess();
  sub_18519F088((uint64_t)aBlock, &qword_1EDD828C0);
  os_unfair_lock_lock(v31);
  v36 = *(_QWORD *)(v60 + 16);
  swift_retain();
  os_unfair_lock_unlock(v31);
  if (v36)
  {
    v37 = *(void (**)(_QWORD))(v36 + 560);
    if (v37)
    {
      *(_QWORD *)(v36 + 560) = 0;
      *(_QWORD *)(v36 + 568) = 0;
      swift_retain();
      sub_18518D718((uint64_t)v37);
      v37(0);
      sub_18518D718((uint64_t)v37);
    }
    *(_BYTE *)(v36 + 576) = 1;
    swift_release();
  }
  sub_18519F0C4((uint64_t)v63, (uint64_t)aBlock, &qword_1EDD828B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD828C8);
  v38 = swift_allocObject();
  *(_OWORD *)(v38 + 560) = 0u;
  swift_unknownObjectWeakInit();
  sub_1850F26F8((uint64_t)aBlock, v38 + 24, &qword_1EDD828B8);
  *(_WORD *)(v38 + 576) = 0;
  v39 = *(_QWORD *)(v38 + 560);
  *(_QWORD *)(v38 + 560) = a17;
  *(_QWORD *)(v38 + 568) = a18;
  swift_retain();
  sub_18518D718(v39);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83250);
  v40 = swift_allocObject();
  *(_DWORD *)(v40 + 16) = 0;
  *(_QWORD *)(v38 + 16) = v40;
  if ((a15 & 1) != 0)
    swift_unknownObjectWeakAssign();
  swift_beginAccess();
  if ((*(_BYTE *)(v29 + 176) & 1) == 0)
  {
    v41 = *(_OWORD *)(v29 + 128);
    v73 = *(_OWORD *)(v29 + 112);
    v74 = v41;
    v42 = *(_OWORD *)(v29 + 160);
    v75 = *(_OWORD *)(v29 + 144);
    v76 = v42;
    sub_18561E5F0();
  }
  v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = 0u;
  *(_OWORD *)(v43 + 32) = 0u;
  *(_OWORD *)(v43 + 48) = 0u;
  *(_OWORD *)(v43 + 64) = 0u;
  *(_BYTE *)(v43 + 80) = 1;
  if (qword_1EDD831E0 != -1)
    swift_once();
  v54 = qword_1EDDA8748;
  v44 = *(_BYTE *)(v29 + 424);
  sub_18519F0C4((uint64_t)v63, (uint64_t)aBlock, &qword_1EDD828B8);
  v45 = v62;
  if (v62 == 2)
    sub_18519F088((uint64_t)aBlock, &qword_1EDD828B8);
  v46 = v45 == 2;
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = v38;
  *(_QWORD *)(v47 + 24) = a9;
  *(_QWORD *)(v47 + 32) = a10;
  *(_QWORD *)(v47 + 40) = v29;
  *(_QWORD *)(v47 + 48) = v43;
  *(_QWORD *)(v47 + 56) = a11;
  *(_QWORD *)(v47 + 64) = a12;
  *(_QWORD *)(v47 + 72) = a13;
  *(_QWORD *)(v47 + 80) = a14;
  type metadata accessor for InProcessAnimationManager.TickEntry();
  v48 = swift_allocObject();
  *(float *)(v48 + 16) = a1;
  *(float *)(v48 + 20) = a2;
  *(float *)(v48 + 24) = a3;
  *(_DWORD *)(v48 + 28) = a16;
  *(_BYTE *)(v48 + 32) = v44;
  *(_BYTE *)(v48 + 33) = v46;
  *(_QWORD *)(v48 + 40) = sub_1856398B8;
  *(_QWORD *)(v48 + 48) = v47;
  queuea = *(NSObject **)(v54 + 264);
  v49 = swift_allocObject();
  *(_QWORD *)(v49 + 16) = v54;
  *(_QWORD *)(v49 + 24) = v48;
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = sub_18563AE3C;
  *(_QWORD *)(v50 + 24) = v49;
  aBlock[4] = sub_1855A6A1C;
  aBlock[5] = v50;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1855D8DF4;
  aBlock[3] = &block_descriptor_417;
  v51 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(queuea, v51);
  _Block_release(v51);
  LOBYTE(v47) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v47 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock(lock);
    swift_release();
    *(_QWORD *)(v60 + 16) = v38;
    swift_retain();
    os_unfair_lock_unlock(lock);
    swift_release_n();
    sub_18519F088((uint64_t)v63, &qword_1EDD828B8);
    sub_1855DEB40((uint64_t)v64);
    return swift_release();
  }
  return result;
}

uint64_t sub_1855F07F8(float a1, float a2, float a3, uint64_t a4, unint64_t a5, __int128 *a6, char a7, _QWORD *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, int a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  os_unfair_lock_s *v26;
  uint64_t v27;
  void (*v28)(_QWORD *__return_ptr, uint64_t, _OWORD *, unint64_t *, __int128 **, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t result;
  os_unfair_lock_s *lock;
  NSObject *queuea;
  uint64_t v51;
  uint64_t v53;
  __int128 aBlock;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  char v66;
  _OWORD v67[12];
  char v68;
  _QWORD v69[11];
  __int128 *v70;
  unint64_t v71;

  v70 = a6;
  v71 = a5;
  v23 = a8[3];
  v22 = a8[4];
  __swift_project_boxed_opaque_existential_0Tm(a8, v23);
  swift_beginAccess();
  v24 = *(unsigned __int8 *)(v18 + 88);
  v53 = v18;
  v25 = *(_QWORD *)(v18 + 32);
  v26 = (os_unfair_lock_s *)(v25 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v25 + 24));
  v27 = *(_QWORD *)(v25 + 16);
  swift_retain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v25 + 24));
  v51 = v25;
  if (v27)
  {
    swift_beginAccess();
    sub_18519F0C4(v27 + 24, (uint64_t)v67, &qword_1EDD82468);
    swift_release();
  }
  else
  {
    memset(v67, 0, sizeof(v67));
    v68 = -1;
  }
  v28 = *(void (**)(_QWORD *__return_ptr, uint64_t, _OWORD *, unint64_t *, __int128 **, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v22 + 16);
  v29 = sub_185639A14();
  v28(v69, v24, v67, &v71, &v70, &type metadata for UIAnimatableVector, v29, v23, v22);
  sub_18519F088((uint64_t)v67, &qword_1EDD82470);
  os_unfair_lock_lock(v26);
  v30 = *(_QWORD *)(v25 + 16);
  swift_retain();
  os_unfair_lock_unlock(v26);
  if (v30)
  {
    swift_beginAccess();
    sub_18519F0C4(v30 + 24, (uint64_t)&aBlock, &qword_1EDD82468);
    swift_release();
  }
  else
  {
    v64 = 0u;
    v65 = 0u;
    v62 = 0u;
    v63 = 0u;
    v60 = 0u;
    v61 = 0u;
    v58 = 0u;
    v59 = 0u;
    v56 = 0u;
    v57 = 0u;
    aBlock = 0u;
    v55 = 0u;
    v66 = -1;
  }
  swift_beginAccess();
  sub_185617DC0((uint64_t)&aBlock, (uint64_t)v69, a7 & 1, v71, v70, (uint64_t)v67);
  swift_endAccess();
  sub_18519F088((uint64_t)&aBlock, &qword_1EDD82470);
  os_unfair_lock_lock(v26);
  v31 = *(_QWORD *)(v25 + 16);
  swift_retain();
  os_unfair_lock_unlock(v26);
  if (v31)
  {
    v32 = *(void (**)(_QWORD))(v31 + 224);
    if (v32)
    {
      *(_QWORD *)(v31 + 224) = 0;
      *(_QWORD *)(v31 + 232) = 0;
      swift_retain();
      sub_18518D718((uint64_t)v32);
      v32(0);
      sub_18518D718((uint64_t)v32);
    }
    *(_BYTE *)(v31 + 240) = 1;
    swift_release();
  }
  sub_18519F0C4((uint64_t)v67, (uint64_t)&aBlock, &qword_1EDD82468);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82488);
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 224) = 0;
  *(_QWORD *)(v33 + 232) = 0;
  swift_unknownObjectWeakInit();
  sub_1850F26F8((uint64_t)&aBlock, v33 + 24, &qword_1EDD82468);
  *(_WORD *)(v33 + 240) = 0;
  v34 = *(_QWORD *)(v33 + 224);
  *(_QWORD *)(v33 + 224) = a17;
  *(_QWORD *)(v33 + 232) = a18;
  swift_retain();
  sub_18518D718(v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83250);
  v35 = swift_allocObject();
  *(_DWORD *)(v35 + 16) = 0;
  *(_QWORD *)(v33 + 16) = v35;
  if ((a15 & 1) != 0)
    swift_unknownObjectWeakAssign();
  swift_beginAccess();
  if (*(_QWORD *)(v53 + 48))
  {
    swift_bridgeObjectRetain_n();
    sub_18561E7F8();
    swift_bridgeObjectRelease();
  }
  lock = (os_unfair_lock_s *)(v25 + 24);
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = 0;
  if (qword_1EDD831E0 != -1)
    swift_once();
  v37 = qword_1EDDA8748;
  v38 = *(_BYTE *)(v53 + 112);
  sub_18519F0C4((uint64_t)v67, (uint64_t)&aBlock, &qword_1EDD82468);
  v39 = v66 == 2;
  sub_18519F088((uint64_t)&aBlock, &qword_1EDD82468);
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = v33;
  *(_QWORD *)(v40 + 24) = a9;
  *(_QWORD *)(v40 + 32) = a10;
  *(_QWORD *)(v40 + 40) = v53;
  *(_QWORD *)(v40 + 48) = v36;
  *(_QWORD *)(v40 + 56) = a11;
  *(_QWORD *)(v40 + 64) = a12;
  *(_QWORD *)(v40 + 72) = a13;
  *(_QWORD *)(v40 + 80) = a14;
  type metadata accessor for InProcessAnimationManager.TickEntry();
  v41 = swift_allocObject();
  *(float *)(v41 + 16) = a1;
  *(float *)(v41 + 20) = a2;
  *(float *)(v41 + 24) = a3;
  *(_DWORD *)(v41 + 28) = a16;
  *(_BYTE *)(v41 + 32) = v38;
  *(_BYTE *)(v41 + 33) = v39;
  *(_QWORD *)(v41 + 40) = sub_185639A80;
  *(_QWORD *)(v41 + 48) = v40;
  queuea = *(NSObject **)(v37 + 264);
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v37;
  *(_QWORD *)(v42 + 24) = v41;
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = sub_18563AE3C;
  *(_QWORD *)(v43 + 24) = v42;
  *(_QWORD *)&v56 = sub_1855A6A1C;
  *((_QWORD *)&v56 + 1) = v43;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v55 = sub_1855D8DF4;
  *((_QWORD *)&v55 + 1) = &block_descriptor_449;
  v44 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(queuea, v44);
  _Block_release(v44);
  LOBYTE(v40) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v40 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock(lock);
    swift_release();
    *(_QWORD *)(v51 + 16) = v33;
    swift_retain();
    os_unfair_lock_unlock(lock);
    swift_release_n();
    sub_18519F088((uint64_t)v67, &qword_1EDD82468);
    sub_1855DEB40((uint64_t)v69);
    return swift_release();
  }
  return result;
}

uint64_t sub_1855F0E48(float a1, float a2, float a3, uint64_t a4, __int128 *a5, __int128 *a6, char a7, _QWORD *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, int a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_unfair_lock_s *v29;
  uint64_t v30;
  void (*v31)(_QWORD *__return_ptr, uint64_t, _OWORD *, __int128 *, __int128 *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_QWORD);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t result;
  os_unfair_lock_s *lock;
  NSObject *queuea;
  uint64_t v61;
  __int128 aBlock;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  int v86;
  __int16 v87;
  _OWORD v88[23];
  uint64_t v89;
  int v90;
  __int16 v91;
  _QWORD v92[11];
  __int128 v93;
  _OWORD v94[2];
  __int128 v95;
  _BYTE v96[21];
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  char v102;
  __int128 v103;
  _OWORD v104[2];
  __int128 v105;
  _OWORD v106[3];

  v19 = v18;
  v23 = a5[1];
  v95 = *a5;
  *(_OWORD *)v96 = v23;
  *(_QWORD *)&v96[13] = *(_QWORD *)((char *)a5 + 29);
  v24 = a6[1];
  v93 = *a6;
  v94[0] = v24;
  *(_QWORD *)((char *)v94 + 13) = *(_QWORD *)((char *)a6 + 29);
  v26 = a8[3];
  v25 = a8[4];
  __swift_project_boxed_opaque_existential_0Tm(a8, v26);
  swift_beginAccess();
  v27 = *(unsigned __int8 *)(v18 + 213);
  v28 = *(_QWORD *)(v18 + 32);
  v29 = (os_unfair_lock_s *)(v28 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v28 + 24));
  v61 = v28;
  v30 = *(_QWORD *)(v28 + 16);
  swift_retain();
  os_unfair_lock_unlock(v29);
  if (v30)
  {
    swift_beginAccess();
    sub_18519F0C4(v30 + 24, (uint64_t)v88, &qword_1EDD7D4B8);
    swift_release();
  }
  else
  {
    v89 = 0;
    memset(v88, 0, sizeof(v88));
    v90 = 0;
    v91 = -256;
  }
  v31 = *(void (**)(_QWORD *__return_ptr, uint64_t, _OWORD *, __int128 *, __int128 *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v25 + 16);
  v32 = sub_1855C796C();
  v31(v92, v27, v88, &v95, &v93, &type metadata for UIAnimatableMeshTransform, v32, v26, v25);
  sub_18519F088((uint64_t)v88, &qword_1EDD7D4C0);
  os_unfair_lock_lock(v29);
  v33 = *(_QWORD *)(v61 + 16);
  swift_retain();
  os_unfair_lock_unlock(v29);
  if (v33)
  {
    swift_beginAccess();
    sub_18519F0C4(v33 + 24, (uint64_t)&aBlock, &qword_1EDD7D4B8);
    swift_release();
  }
  else
  {
    v85 = 0;
    v83 = 0u;
    v84 = 0u;
    v81 = 0u;
    v82 = 0u;
    v79 = 0u;
    v80 = 0u;
    v77 = 0u;
    v78 = 0u;
    v75 = 0u;
    v76 = 0u;
    v73 = 0u;
    v74 = 0u;
    v71 = 0u;
    v72 = 0u;
    v69 = 0u;
    v70 = 0u;
    v67 = 0u;
    v68 = 0u;
    v65 = 0u;
    v66 = 0u;
    v63 = 0u;
    v64 = 0u;
    aBlock = 0u;
    v86 = 0;
    v87 = -256;
  }
  swift_beginAccess();
  v103 = v95;
  v104[0] = *(_OWORD *)v96;
  *(_QWORD *)((char *)v104 + 13) = *(_QWORD *)&v96[13];
  v105 = v93;
  v106[0] = v94[0];
  *(_QWORD *)((char *)v106 + 13) = *(_QWORD *)((char *)v94 + 13);
  sub_185618CC0((uint64_t)&aBlock, (uint64_t)v92, a7 & 1, (uint64_t)&v103, (uint64_t)&v105, (uint64_t)v88);
  swift_endAccess();
  sub_18519F088((uint64_t)&aBlock, &qword_1EDD7D4C0);
  os_unfair_lock_lock(v29);
  v34 = *(_QWORD *)(v61 + 16);
  swift_retain();
  lock = v29;
  os_unfair_lock_unlock(v29);
  if (v34)
  {
    v35 = *(void (**)(_QWORD))(v34 + 408);
    if (v35)
    {
      *(_QWORD *)(v34 + 408) = 0;
      *(_QWORD *)(v34 + 416) = 0;
      swift_retain();
      sub_18518D718((uint64_t)v35);
      v35(0);
      sub_18518D718((uint64_t)v35);
    }
    *(_BYTE *)(v34 + 424) = 1;
    swift_release();
  }
  sub_18519F0C4((uint64_t)v88, (uint64_t)&aBlock, &qword_1EDD7D4B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD7D4E0);
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 408) = 0;
  *(_QWORD *)(v36 + 416) = 0;
  swift_unknownObjectWeakInit();
  sub_1850F26F8((uint64_t)&aBlock, v36 + 24, &qword_1EDD7D4B8);
  *(_WORD *)(v36 + 424) = 0;
  v37 = *(_QWORD *)(v36 + 408);
  *(_QWORD *)(v36 + 408) = a17;
  *(_QWORD *)(v36 + 416) = a18;
  swift_retain();
  sub_18518D718(v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83250);
  v38 = swift_allocObject();
  *(_DWORD *)(v38 + 16) = 0;
  *(_QWORD *)(v36 + 16) = v38;
  if ((a15 & 1) != 0)
    swift_unknownObjectWeakAssign();
  swift_beginAccess();
  v39 = *(_QWORD *)(v19 + 80);
  if (v39 != 1)
  {
    v40 = *(_BYTE *)(v19 + 116);
    v41 = *(_DWORD *)(v19 + 112);
    v43 = *(_QWORD *)(v19 + 96);
    v42 = *(_QWORD *)(v19 + 104);
    v44 = *(_QWORD *)(v19 + 88);
    v97 = *(_QWORD *)(v19 + 80);
    v98 = v44;
    v99 = v43;
    v100 = v42;
    v102 = v40;
    v101 = v41;
    sub_185639EE8(v39);
    sub_18562BDE4(v39);
    sub_18561EA20();
    sub_185638FD4(v39);
  }
  v45 = (_QWORD *)swift_allocObject();
  v45[2] = 1;
  v45[3] = 0;
  v45[4] = 0;
  v45[5] = 0;
  *(_QWORD *)((char *)v45 + 45) = 0;
  if (qword_1EDD831E0 != -1)
    swift_once();
  v46 = qword_1EDDA8748;
  v47 = *(_BYTE *)(v19 + 264);
  sub_18519F0C4((uint64_t)v88, (uint64_t)&aBlock, &qword_1EDD7D4B8);
  v48 = HIBYTE(v87) == 2;
  sub_18519F088((uint64_t)&aBlock, &qword_1EDD7D4B8);
  v49 = swift_allocObject();
  *(_QWORD *)(v49 + 16) = v36;
  *(_QWORD *)(v49 + 24) = a9;
  *(_QWORD *)(v49 + 32) = a10;
  *(_QWORD *)(v49 + 40) = v19;
  *(_QWORD *)(v49 + 48) = v45;
  *(_QWORD *)(v49 + 56) = a11;
  *(_QWORD *)(v49 + 64) = a12;
  *(_QWORD *)(v49 + 72) = a13;
  *(_QWORD *)(v49 + 80) = a14;
  type metadata accessor for InProcessAnimationManager.TickEntry();
  v50 = swift_allocObject();
  *(float *)(v50 + 16) = a1;
  *(float *)(v50 + 20) = a2;
  *(float *)(v50 + 24) = a3;
  *(_DWORD *)(v50 + 28) = a16;
  *(_BYTE *)(v50 + 32) = v47;
  *(_BYTE *)(v50 + 33) = v48;
  *(_QWORD *)(v50 + 40) = sub_185639EC8;
  *(_QWORD *)(v50 + 48) = v49;
  queuea = *(NSObject **)(v46 + 264);
  v51 = swift_allocObject();
  *(_QWORD *)(v51 + 16) = v46;
  *(_QWORD *)(v51 + 24) = v50;
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = sub_18563AE3C;
  *(_QWORD *)(v52 + 24) = v51;
  *(_QWORD *)&v64 = sub_1855A6A1C;
  *((_QWORD *)&v64 + 1) = v52;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v63 = sub_1855D8DF4;
  *((_QWORD *)&v63 + 1) = &block_descriptor_481;
  v53 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(queuea, v53);
  _Block_release(v53);
  LOBYTE(v49) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v49 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock(lock);
    swift_release();
    *(_QWORD *)(v61 + 16) = v36;
    swift_retain();
    os_unfair_lock_unlock(lock);
    swift_release_n();
    sub_18519F088((uint64_t)v88, &qword_1EDD7D4B8);
    sub_1855DEB40((uint64_t)v92);
    return swift_release();
  }
  return result;
}

uint64_t sub_1855F15A4(double a1, double a2, float a3, float a4, float a5, uint64_t a6, char a7, _QWORD *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, int a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_unfair_lock_s *v27;
  uint64_t v28;
  void (*v29)(_QWORD *__return_ptr, uint64_t, _OWORD *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  int v40;
  BOOL v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t result;
  NSObject *queuea;
  os_unfair_lock_s *lock;
  uint64_t v56;
  uint64_t v57;
  __int128 aBlock;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  unsigned __int8 v70;
  _OWORD v71[12];
  char v72;
  _QWORD v73[11];
  double v74;
  double v75[2];

  v74 = a2;
  v75[0] = a1;
  v23 = a8[3];
  v24 = a8[4];
  __swift_project_boxed_opaque_existential_0Tm(a8, v23);
  swift_beginAccess();
  v25 = *(unsigned __int8 *)(v18 + 113);
  v56 = v18;
  v26 = *(_QWORD *)(v18 + 32);
  v27 = (os_unfair_lock_s *)(v26 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v26 + 24));
  v57 = v26;
  v28 = *(_QWORD *)(v26 + 16);
  swift_retain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v26 + 24));
  lock = (os_unfair_lock_s *)(v26 + 24);
  if (v28)
  {
    swift_beginAccess();
    v27 = (os_unfair_lock_s *)(v26 + 24);
    sub_18519F0C4(v28 + 24, (uint64_t)v71, &qword_1EDD831C0);
    swift_release();
  }
  else
  {
    memset(v71, 0, sizeof(v71));
    v72 = -1;
  }
  v29 = *(void (**)(_QWORD *__return_ptr, uint64_t, _OWORD *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v24 + 16);
  v30 = sub_1855C7C14();
  v29(v73, v25, v71, v75, &v74, &type metadata for UIAnimatableFloat, v30, v23, v24);
  sub_18519F088((uint64_t)v71, &qword_1EDD831C8);
  os_unfair_lock_lock(v27);
  v31 = *(_QWORD *)(v57 + 16);
  swift_retain();
  os_unfair_lock_unlock(v27);
  if (v31)
  {
    swift_beginAccess();
    sub_18519F0C4(v31 + 24, (uint64_t)&aBlock, &qword_1EDD831C0);
    swift_release();
  }
  else
  {
    v68 = 0u;
    v69 = 0u;
    v66 = 0u;
    v67 = 0u;
    v64 = 0u;
    v65 = 0u;
    v62 = 0u;
    v63 = 0u;
    v60 = 0u;
    v61 = 0u;
    aBlock = 0u;
    v59 = 0u;
    v70 = -1;
  }
  swift_beginAccess();
  sub_18561AB7C((uint64_t)&aBlock, (uint64_t)v73, a7 & 1, &qword_1EDD831C8, &qword_1EDD85F00, &qword_1EDD85F08, &qword_1EDD831C0, (uint64_t)v71, v75[0], v74);
  swift_endAccess();
  sub_18519F088((uint64_t)&aBlock, &qword_1EDD831C8);
  os_unfair_lock_lock(v27);
  v32 = *(_QWORD *)(v57 + 16);
  swift_retain();
  os_unfair_lock_unlock(v27);
  if (v32)
  {
    v33 = *(void (**)(_QWORD))(v32 + 224);
    if (v33)
    {
      *(_QWORD *)(v32 + 224) = 0;
      *(_QWORD *)(v32 + 232) = 0;
      swift_retain();
      sub_18518D718((uint64_t)v33);
      v33(0);
      sub_18518D718((uint64_t)v33);
    }
    *(_BYTE *)(v32 + 240) = 1;
    swift_release();
  }
  sub_18519F0C4((uint64_t)v71, (uint64_t)&aBlock, &qword_1EDD831C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD831D0);
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 224) = 0;
  *(_QWORD *)(v34 + 232) = 0;
  swift_unknownObjectWeakInit();
  sub_1850F26F8((uint64_t)&aBlock, v34 + 24, &qword_1EDD831C0);
  *(_WORD *)(v34 + 240) = 0;
  v35 = *(_QWORD *)(v34 + 224);
  *(_QWORD *)(v34 + 224) = a17;
  *(_QWORD *)(v34 + 232) = a18;
  swift_retain();
  sub_18518D718(v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83250);
  v36 = swift_allocObject();
  *(_DWORD *)(v36 + 16) = 0;
  *(_QWORD *)(v34 + 16) = v36;
  if ((a15 & 1) != 0)
    swift_unknownObjectWeakAssign();
  swift_beginAccess();
  if ((*(_BYTE *)(v56 + 64) & 1) == 0)
    sub_18561EFA8(&qword_1EDD831C0);
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = 0;
  *(_BYTE *)(v37 + 24) = 1;
  if (qword_1EDD831E0 != -1)
    swift_once();
  v38 = qword_1EDDA8748;
  v39 = *(_BYTE *)(v56 + 144);
  sub_18519F0C4((uint64_t)v71, (uint64_t)&aBlock, &qword_1EDD831C0);
  v40 = v70;
  if (v70 == 2)
    sub_18519F088((uint64_t)&aBlock, &qword_1EDD831C0);
  v41 = v40 == 2;
  v42 = (_QWORD *)swift_allocObject();
  v42[2] = v34;
  v42[3] = a9;
  v42[4] = a10;
  v42[5] = v56;
  v42[6] = v37;
  v42[7] = a11;
  v42[8] = a12;
  v42[9] = a13;
  v42[10] = a14;
  type metadata accessor for InProcessAnimationManager.TickEntry();
  v43 = swift_allocObject();
  *(float *)(v43 + 16) = a3;
  *(float *)(v43 + 20) = a4;
  *(float *)(v43 + 24) = a5;
  *(_DWORD *)(v43 + 28) = a16;
  *(_BYTE *)(v43 + 32) = v39;
  *(_BYTE *)(v43 + 33) = v41;
  *(_QWORD *)(v43 + 40) = sub_18563A340;
  *(_QWORD *)(v43 + 48) = v42;
  queuea = *(NSObject **)(v38 + 264);
  v44 = v38;
  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = v44;
  *(_QWORD *)(v45 + 24) = v43;
  v46 = swift_allocObject();
  *(_QWORD *)(v46 + 16) = sub_18563AE3C;
  *(_QWORD *)(v46 + 24) = v45;
  *(_QWORD *)&v60 = sub_1855A6A1C;
  *((_QWORD *)&v60 + 1) = v46;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v59 = sub_1855D8DF4;
  *((_QWORD *)&v59 + 1) = &block_descriptor_513;
  v47 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(queuea, v47);
  _Block_release(v47);
  LOBYTE(v47) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v47 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock(lock);
    swift_release();
    *(_QWORD *)(v57 + 16) = v34;
    swift_retain();
    os_unfair_lock_unlock(lock);
    swift_release_n();
    sub_18519F088((uint64_t)v71, &qword_1EDD831C0);
    sub_1855DEB40((uint64_t)v73);
    return swift_release();
  }
  return result;
}

uint64_t sub_1855F1C30(double a1, double a2, double a3, double a4, float a5, float a6, float a7, uint64_t a8, char a9, _QWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, int a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_unfair_lock_s *v29;
  uint64_t v30;
  void (*v31)(_QWORD *__return_ptr, uint64_t, _OWORD *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_QWORD);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  int v42;
  BOOL v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t result;
  NSObject *queuea;
  os_unfair_lock_s *lock;
  uint64_t v58;
  uint64_t v59;
  __int128 aBlock;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  unsigned __int8 v75;
  _OWORD v76[15];
  char v77;
  _QWORD v78[11];
  double v79;
  double v80;
  double v81;
  double v82;

  v81 = a1;
  v82 = a2;
  v79 = a3;
  v80 = a4;
  v25 = a10[3];
  v26 = a10[4];
  __swift_project_boxed_opaque_existential_0Tm(a10, v25);
  swift_beginAccess();
  v27 = *(unsigned __int8 *)(v20 + 145);
  v58 = v20;
  v28 = *(_QWORD *)(v20 + 32);
  v29 = (os_unfair_lock_s *)(v28 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v28 + 24));
  v59 = v28;
  v30 = *(_QWORD *)(v28 + 16);
  swift_retain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v28 + 24));
  lock = (os_unfair_lock_s *)(v28 + 24);
  if (v30)
  {
    swift_beginAccess();
    v29 = (os_unfair_lock_s *)(v28 + 24);
    sub_18519F0C4(v30 + 24, (uint64_t)v76, &qword_1EDD7D4C8);
    swift_release();
  }
  else
  {
    memset(v76, 0, sizeof(v76));
    v77 = -1;
  }
  v31 = *(void (**)(_QWORD *__return_ptr, uint64_t, _OWORD *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v26 + 16);
  v32 = sub_1855C7A7C();
  v31(v78, v27, v76, &v81, &v79, &type metadata for UIAnimatableNormalizedPoint, v32, v25, v26);
  sub_18519F088((uint64_t)v76, &qword_1EDD7D4D0);
  os_unfair_lock_lock(v29);
  v33 = *(_QWORD *)(v59 + 16);
  swift_retain();
  os_unfair_lock_unlock(v29);
  if (v33)
  {
    swift_beginAccess();
    sub_18519F0C4(v33 + 24, (uint64_t)&aBlock, &qword_1EDD7D4C8);
    swift_release();
  }
  else
  {
    v73 = 0u;
    v74 = 0u;
    v71 = 0u;
    v72 = 0u;
    v69 = 0u;
    v70 = 0u;
    v67 = 0u;
    v68 = 0u;
    v65 = 0u;
    v66 = 0u;
    v63 = 0u;
    v64 = 0u;
    v61 = 0u;
    v62 = 0u;
    aBlock = 0u;
    v75 = -1;
  }
  swift_beginAccess();
  sub_18561D7B4((uint64_t)&aBlock, (uint64_t)v78, a9 & 1, &qword_1EDD7D4D0, &qword_1EDD85F10, &qword_1EDD85F18, &qword_1EDD7D4C8, (uint64_t)v76, v81, v82, v79, v80);
  swift_endAccess();
  sub_18519F088((uint64_t)&aBlock, &qword_1EDD7D4D0);
  os_unfair_lock_lock(v29);
  v34 = *(_QWORD *)(v59 + 16);
  swift_retain();
  os_unfair_lock_unlock(v29);
  if (v34)
  {
    v35 = *(void (**)(_QWORD))(v34 + 272);
    if (v35)
    {
      *(_QWORD *)(v34 + 272) = 0;
      *(_QWORD *)(v34 + 280) = 0;
      swift_retain();
      sub_18518D718((uint64_t)v35);
      v35(0);
      sub_18518D718((uint64_t)v35);
    }
    *(_BYTE *)(v34 + 288) = 1;
    swift_release();
  }
  sub_18519F0C4((uint64_t)v76, (uint64_t)&aBlock, &qword_1EDD7D4C8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD7D4E8);
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 272) = 0;
  *(_QWORD *)(v36 + 280) = 0;
  swift_unknownObjectWeakInit();
  sub_1850F26F8((uint64_t)&aBlock, v36 + 24, &qword_1EDD7D4C8);
  *(_WORD *)(v36 + 288) = 0;
  v37 = *(_QWORD *)(v36 + 272);
  *(_QWORD *)(v36 + 272) = a19;
  *(_QWORD *)(v36 + 280) = a20;
  swift_retain();
  sub_18518D718(v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83250);
  v38 = swift_allocObject();
  *(_DWORD *)(v38 + 16) = 0;
  *(_QWORD *)(v36 + 16) = v38;
  if ((a17 & 1) != 0)
    swift_unknownObjectWeakAssign();
  swift_beginAccess();
  if ((*(_BYTE *)(v58 + 80) & 1) == 0)
    sub_18561EDFC(&qword_1EDD7D4C8);
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = 0;
  *(_QWORD *)(v39 + 24) = 0;
  *(_BYTE *)(v39 + 32) = 1;
  if (qword_1EDD831E0 != -1)
    swift_once();
  v40 = qword_1EDDA8748;
  v41 = *(_BYTE *)(v58 + 184);
  sub_18519F0C4((uint64_t)v76, (uint64_t)&aBlock, &qword_1EDD7D4C8);
  v42 = v75;
  if (v75 == 2)
    sub_18519F088((uint64_t)&aBlock, &qword_1EDD7D4C8);
  v43 = v42 == 2;
  v44 = (_QWORD *)swift_allocObject();
  v44[2] = v36;
  v44[3] = a11;
  v44[4] = a12;
  v44[5] = v58;
  v44[6] = v39;
  v44[7] = a13;
  v44[8] = a14;
  v44[9] = a15;
  v44[10] = a16;
  type metadata accessor for InProcessAnimationManager.TickEntry();
  v45 = swift_allocObject();
  *(float *)(v45 + 16) = a5;
  *(float *)(v45 + 20) = a6;
  *(float *)(v45 + 24) = a7;
  *(_DWORD *)(v45 + 28) = a18;
  *(_BYTE *)(v45 + 32) = v41;
  *(_BYTE *)(v45 + 33) = v43;
  *(_QWORD *)(v45 + 40) = sub_18563A438;
  *(_QWORD *)(v45 + 48) = v44;
  queuea = *(NSObject **)(v40 + 264);
  v46 = v40;
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = v46;
  *(_QWORD *)(v47 + 24) = v45;
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = sub_18563AE3C;
  *(_QWORD *)(v48 + 24) = v47;
  *(_QWORD *)&v62 = sub_1855A6A1C;
  *((_QWORD *)&v62 + 1) = v48;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v61 = sub_1855D8DF4;
  *((_QWORD *)&v61 + 1) = &block_descriptor_543;
  v49 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(queuea, v49);
  _Block_release(v49);
  LOBYTE(v49) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v49 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock(lock);
    swift_release();
    *(_QWORD *)(v59 + 16) = v36;
    swift_retain();
    os_unfair_lock_unlock(lock);
    swift_release_n();
    sub_18519F088((uint64_t)v76, &qword_1EDD7D4C8);
    sub_1855DEB40((uint64_t)v78);
    return swift_release();
  }
  return result;
}

uint64_t sub_1855F22CC(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, char a10, _QWORD *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, int a19, int a20,int a21,int a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_unfair_lock_s *v30;
  uint64_t v31;
  void (*v32)(_QWORD *__return_ptr, uint64_t, _OWORD *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  int v43;
  BOOL v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t result;
  NSObject *queuea;
  os_unfair_lock_s *lock;
  uint64_t v58;
  uint64_t v59;
  __int128 aBlock;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  unsigned __int8 v81;
  _OWORD v82[21];
  char v83;
  _QWORD v84[11];
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;

  v89 = a1;
  v90 = a2;
  v91 = a3;
  v92 = a4;
  v85 = a5;
  v86 = a6;
  v87 = a7;
  v88 = a8;
  v26 = a11[3];
  v27 = a11[4];
  __swift_project_boxed_opaque_existential_0Tm(a11, v26);
  swift_beginAccess();
  v28 = *(unsigned __int8 *)(v24 + 209);
  v58 = v24;
  v29 = *(_QWORD *)(v24 + 32);
  v30 = (os_unfair_lock_s *)(v29 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v29 + 24));
  v59 = v29;
  v31 = *(_QWORD *)(v29 + 16);
  swift_retain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v29 + 24));
  lock = (os_unfair_lock_s *)(v29 + 24);
  if (v31)
  {
    swift_beginAccess();
    v30 = (os_unfair_lock_s *)(v29 + 24);
    sub_18519F0C4(v31 + 24, (uint64_t)v82, &qword_1EDD828A8);
    swift_release();
  }
  else
  {
    memset(v82, 0, sizeof(v82));
    v83 = -1;
  }
  v32 = *(void (**)(_QWORD *__return_ptr, uint64_t, _OWORD *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v27 + 16);
  v33 = sub_1855C7C58();
  v32(v84, v28, v82, &v89, &v85, &type metadata for UIAnimatableColor, v33, v26, v27);
  sub_18519F088((uint64_t)v82, &qword_1EDD828B0);
  os_unfair_lock_lock(v30);
  v34 = *(_QWORD *)(v59 + 16);
  swift_retain();
  os_unfair_lock_unlock(v30);
  if (v34)
  {
    swift_beginAccess();
    sub_18519F0C4(v34 + 24, (uint64_t)&aBlock, &qword_1EDD828A8);
    swift_release();
  }
  else
  {
    v79 = 0u;
    v80 = 0u;
    v77 = 0u;
    v78 = 0u;
    v75 = 0u;
    v76 = 0u;
    v73 = 0u;
    v74 = 0u;
    v71 = 0u;
    v72 = 0u;
    v69 = 0u;
    v70 = 0u;
    v67 = 0u;
    v68 = 0u;
    v65 = 0u;
    v66 = 0u;
    v63 = 0u;
    v64 = 0u;
    v61 = 0u;
    v62 = 0u;
    aBlock = 0u;
    v81 = -1;
  }
  swift_beginAccess();
  sub_18561A1A8((uint64_t)&aBlock, (uint64_t)v84, a10 & 1, (uint64_t)v82, v89, v90, v91, v92, v85, v86, v87, v88);
  swift_endAccess();
  sub_18519F088((uint64_t)&aBlock, &qword_1EDD828B0);
  os_unfair_lock_lock(v30);
  v35 = *(_QWORD *)(v59 + 16);
  swift_retain();
  os_unfair_lock_unlock(v30);
  if (v35)
  {
    v36 = *(void (**)(_QWORD))(v35 + 368);
    if (v36)
    {
      *(_QWORD *)(v35 + 368) = 0;
      *(_QWORD *)(v35 + 376) = 0;
      swift_retain();
      sub_18518D718((uint64_t)v36);
      v36(0);
      sub_18518D718((uint64_t)v36);
    }
    *(_BYTE *)(v35 + 384) = 1;
    swift_release();
  }
  sub_18519F0C4((uint64_t)v82, (uint64_t)&aBlock, &qword_1EDD828A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD828D0);
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 368) = 0;
  *(_QWORD *)(v37 + 376) = 0;
  swift_unknownObjectWeakInit();
  sub_1850F26F8((uint64_t)&aBlock, v37 + 24, &qword_1EDD828A8);
  *(_WORD *)(v37 + 384) = 0;
  v38 = *(_QWORD *)(v37 + 368);
  *(_QWORD *)(v37 + 368) = a23;
  *(_QWORD *)(v37 + 376) = a24;
  swift_retain();
  sub_18518D718(v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83250);
  v39 = swift_allocObject();
  *(_DWORD *)(v39 + 16) = 0;
  *(_QWORD *)(v37 + 16) = v39;
  if ((a18 & 1) != 0)
    swift_unknownObjectWeakAssign();
  swift_beginAccess();
  if ((*(_BYTE *)(v58 + 112) & 1) == 0)
    sub_18561F138(&qword_1EDD828A8);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = 0u;
  *(_OWORD *)(v40 + 32) = 0u;
  *(_BYTE *)(v40 + 48) = 1;
  if (qword_1EDD831E0 != -1)
    swift_once();
  v41 = qword_1EDDA8748;
  v42 = *(_BYTE *)(v58 + 264);
  sub_18519F0C4((uint64_t)v82, (uint64_t)&aBlock, &qword_1EDD828A8);
  v43 = v81;
  if (v81 == 2)
    sub_18519F088((uint64_t)&aBlock, &qword_1EDD828A8);
  v44 = v43 == 2;
  v45 = (_QWORD *)swift_allocObject();
  v45[2] = v37;
  v45[3] = a12;
  v45[4] = a13;
  v45[5] = v58;
  v45[6] = v40;
  v45[7] = a14;
  v45[8] = a15;
  v45[9] = a16;
  v45[10] = a17;
  type metadata accessor for InProcessAnimationManager.TickEntry();
  v46 = swift_allocObject();
  *(_DWORD *)(v46 + 16) = a20;
  *(_DWORD *)(v46 + 20) = a21;
  *(_DWORD *)(v46 + 24) = a22;
  *(_DWORD *)(v46 + 28) = a19;
  *(_BYTE *)(v46 + 32) = v42;
  *(_BYTE *)(v46 + 33) = v44;
  *(_QWORD *)(v46 + 40) = sub_18563A4AC;
  *(_QWORD *)(v46 + 48) = v45;
  queuea = *(NSObject **)(v41 + 264);
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = v41;
  *(_QWORD *)(v47 + 24) = v46;
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = sub_18563AE3C;
  *(_QWORD *)(v48 + 24) = v47;
  *(_QWORD *)&v62 = sub_1855A6A1C;
  *((_QWORD *)&v62 + 1) = v48;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v61 = sub_1855D8DF4;
  *((_QWORD *)&v61 + 1) = &block_descriptor_575;
  v49 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(queuea, v49);
  _Block_release(v49);
  LOBYTE(v49) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v49 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock(lock);
    swift_release();
    *(_QWORD *)(v59 + 16) = v37;
    swift_retain();
    os_unfair_lock_unlock(lock);
    swift_release_n();
    sub_18519F088((uint64_t)v82, &qword_1EDD828A8);
    sub_1855DEB40((uint64_t)v84);
    return swift_release();
  }
  return result;
}

uint64_t sub_1855F2964(double a1, double a2, float a3, float a4, float a5, uint64_t a6, char a7, _QWORD *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, int a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_unfair_lock_s *v27;
  uint64_t v28;
  void (*v29)(_QWORD *__return_ptr, uint64_t, _OWORD *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  int v40;
  BOOL v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t result;
  NSObject *queuea;
  os_unfair_lock_s *lock;
  uint64_t v56;
  uint64_t v57;
  __int128 aBlock;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  unsigned __int8 v70;
  _OWORD v71[12];
  char v72;
  _QWORD v73[11];
  double v74;
  double v75[2];

  v74 = a2;
  v75[0] = a1;
  v23 = a8[3];
  v24 = a8[4];
  __swift_project_boxed_opaque_existential_0Tm(a8, v23);
  swift_beginAccess();
  v25 = *(unsigned __int8 *)(v18 + 113);
  v56 = v18;
  v26 = *(_QWORD *)(v18 + 32);
  v27 = (os_unfair_lock_s *)(v26 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v26 + 24));
  v57 = v26;
  v28 = *(_QWORD *)(v26 + 16);
  swift_retain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v26 + 24));
  lock = (os_unfair_lock_s *)(v26 + 24);
  if (v28)
  {
    swift_beginAccess();
    v27 = (os_unfair_lock_s *)(v26 + 24);
    sub_18519F0C4(v28 + 24, (uint64_t)v71, &qword_1EDD82A28);
    swift_release();
  }
  else
  {
    memset(v71, 0, sizeof(v71));
    v72 = -1;
  }
  v29 = *(void (**)(_QWORD *__return_ptr, uint64_t, _OWORD *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v24 + 16);
  v30 = sub_1855C7AC0();
  v29(v73, v25, v71, v75, &v74, &type metadata for UIAnimatableScaledFloat, v30, v23, v24);
  sub_18519F088((uint64_t)v71, &qword_1EDD82A30);
  os_unfair_lock_lock(v27);
  v31 = *(_QWORD *)(v57 + 16);
  swift_retain();
  os_unfair_lock_unlock(v27);
  if (v31)
  {
    swift_beginAccess();
    sub_18519F0C4(v31 + 24, (uint64_t)&aBlock, &qword_1EDD82A28);
    swift_release();
  }
  else
  {
    v68 = 0u;
    v69 = 0u;
    v66 = 0u;
    v67 = 0u;
    v64 = 0u;
    v65 = 0u;
    v62 = 0u;
    v63 = 0u;
    v60 = 0u;
    v61 = 0u;
    aBlock = 0u;
    v59 = 0u;
    v70 = -1;
  }
  swift_beginAccess();
  sub_18561AB7C((uint64_t)&aBlock, (uint64_t)v73, a7 & 1, &qword_1EDD82A30, &qword_1EDD85F30, &qword_1EDD85F38, &qword_1EDD82A28, (uint64_t)v71, v75[0], v74);
  swift_endAccess();
  sub_18519F088((uint64_t)&aBlock, &qword_1EDD82A30);
  os_unfair_lock_lock(v27);
  v32 = *(_QWORD *)(v57 + 16);
  swift_retain();
  os_unfair_lock_unlock(v27);
  if (v32)
  {
    v33 = *(void (**)(_QWORD))(v32 + 224);
    if (v33)
    {
      *(_QWORD *)(v32 + 224) = 0;
      *(_QWORD *)(v32 + 232) = 0;
      swift_retain();
      sub_18518D718((uint64_t)v33);
      v33(0);
      sub_18518D718((uint64_t)v33);
    }
    *(_BYTE *)(v32 + 240) = 1;
    swift_release();
  }
  sub_18519F0C4((uint64_t)v71, (uint64_t)&aBlock, &qword_1EDD82A28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82A38);
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 224) = 0;
  *(_QWORD *)(v34 + 232) = 0;
  swift_unknownObjectWeakInit();
  sub_1850F26F8((uint64_t)&aBlock, v34 + 24, &qword_1EDD82A28);
  *(_WORD *)(v34 + 240) = 0;
  v35 = *(_QWORD *)(v34 + 224);
  *(_QWORD *)(v34 + 224) = a17;
  *(_QWORD *)(v34 + 232) = a18;
  swift_retain();
  sub_18518D718(v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83250);
  v36 = swift_allocObject();
  *(_DWORD *)(v36 + 16) = 0;
  *(_QWORD *)(v34 + 16) = v36;
  if ((a15 & 1) != 0)
    swift_unknownObjectWeakAssign();
  swift_beginAccess();
  if ((*(_BYTE *)(v56 + 64) & 1) == 0)
    sub_18561EFA8(&qword_1EDD82A28);
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = 0;
  *(_BYTE *)(v37 + 24) = 1;
  if (qword_1EDD831E0 != -1)
    swift_once();
  v38 = qword_1EDDA8748;
  v39 = *(_BYTE *)(v56 + 144);
  sub_18519F0C4((uint64_t)v71, (uint64_t)&aBlock, &qword_1EDD82A28);
  v40 = v70;
  if (v70 == 2)
    sub_18519F088((uint64_t)&aBlock, &qword_1EDD82A28);
  v41 = v40 == 2;
  v42 = (_QWORD *)swift_allocObject();
  v42[2] = v34;
  v42[3] = a9;
  v42[4] = a10;
  v42[5] = v56;
  v42[6] = v37;
  v42[7] = a11;
  v42[8] = a12;
  v42[9] = a13;
  v42[10] = a14;
  type metadata accessor for InProcessAnimationManager.TickEntry();
  v43 = swift_allocObject();
  *(float *)(v43 + 16) = a3;
  *(float *)(v43 + 20) = a4;
  *(float *)(v43 + 24) = a5;
  *(_DWORD *)(v43 + 28) = a16;
  *(_BYTE *)(v43 + 32) = v39;
  *(_BYTE *)(v43 + 33) = v41;
  *(_QWORD *)(v43 + 40) = sub_18563A658;
  *(_QWORD *)(v43 + 48) = v42;
  queuea = *(NSObject **)(v38 + 264);
  v44 = v38;
  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = v44;
  *(_QWORD *)(v45 + 24) = v43;
  v46 = swift_allocObject();
  *(_QWORD *)(v46 + 16) = sub_18563AE3C;
  *(_QWORD *)(v46 + 24) = v45;
  *(_QWORD *)&v60 = sub_1855A6A1C;
  *((_QWORD *)&v60 + 1) = v46;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v59 = sub_1855D8DF4;
  *((_QWORD *)&v59 + 1) = &block_descriptor_605;
  v47 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(queuea, v47);
  _Block_release(v47);
  LOBYTE(v47) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v47 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock(lock);
    swift_release();
    *(_QWORD *)(v57 + 16) = v34;
    swift_retain();
    os_unfair_lock_unlock(lock);
    swift_release_n();
    sub_18519F088((uint64_t)v71, &qword_1EDD82A28);
    sub_1855DEB40((uint64_t)v73);
    return swift_release();
  }
  return result;
}

uint64_t sub_1855F2FF0(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, char a10, _QWORD *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, int a19, int a20,int a21,int a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_unfair_lock_s *v30;
  uint64_t v31;
  void (*v32)(_QWORD *__return_ptr, uint64_t, _OWORD *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  int v43;
  BOOL v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t result;
  NSObject *queuea;
  os_unfair_lock_s *lock;
  uint64_t v58;
  uint64_t v59;
  __int128 aBlock;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  unsigned __int8 v81;
  _OWORD v82[21];
  char v83;
  _QWORD v84[11];
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;

  v89 = a1;
  v90 = a2;
  v91 = a3;
  v92 = a4;
  v85 = a5;
  v86 = a6;
  v87 = a7;
  v88 = a8;
  v26 = a11[3];
  v27 = a11[4];
  __swift_project_boxed_opaque_existential_0Tm(a11, v26);
  swift_beginAccess();
  v28 = *(unsigned __int8 *)(v24 + 209);
  v58 = v24;
  v29 = *(_QWORD *)(v24 + 32);
  v30 = (os_unfair_lock_s *)(v29 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v29 + 24));
  v59 = v29;
  v31 = *(_QWORD *)(v29 + 16);
  swift_retain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v29 + 24));
  lock = (os_unfair_lock_s *)(v29 + 24);
  if (v31)
  {
    swift_beginAccess();
    v30 = (os_unfair_lock_s *)(v29 + 24);
    sub_18519F0C4(v31 + 24, (uint64_t)v82, &qword_1EDD82D58);
    swift_release();
  }
  else
  {
    memset(v82, 0, sizeof(v82));
    v83 = -1;
  }
  v32 = *(void (**)(_QWORD *__return_ptr, uint64_t, _OWORD *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v27 + 16);
  v33 = sub_1855C7BD0();
  v32(v84, v28, v82, &v89, &v85, &type metadata for UIAnimatableRect, v33, v26, v27);
  sub_18519F088((uint64_t)v82, &qword_1EDD82D60);
  os_unfair_lock_lock(v30);
  v34 = *(_QWORD *)(v59 + 16);
  swift_retain();
  os_unfair_lock_unlock(v30);
  if (v34)
  {
    swift_beginAccess();
    sub_18519F0C4(v34 + 24, (uint64_t)&aBlock, &qword_1EDD82D58);
    swift_release();
  }
  else
  {
    v79 = 0u;
    v80 = 0u;
    v77 = 0u;
    v78 = 0u;
    v75 = 0u;
    v76 = 0u;
    v73 = 0u;
    v74 = 0u;
    v71 = 0u;
    v72 = 0u;
    v69 = 0u;
    v70 = 0u;
    v67 = 0u;
    v68 = 0u;
    v65 = 0u;
    v66 = 0u;
    v63 = 0u;
    v64 = 0u;
    v61 = 0u;
    v62 = 0u;
    aBlock = 0u;
    v81 = -1;
  }
  swift_beginAccess();
  sub_18561B5B0((uint64_t)&aBlock, (uint64_t)v84, a10 & 1, &qword_1EDD82D60, &qword_1EDD85F40, &qword_1EDD85F48, &qword_1EDD82D58, (uint64_t)v82, v89, v90, v91, v92, v85, v86, v87, v88, &qword_1EDD82D50);
  swift_endAccess();
  sub_18519F088((uint64_t)&aBlock, &qword_1EDD82D60);
  os_unfair_lock_lock(v30);
  v35 = *(_QWORD *)(v59 + 16);
  swift_retain();
  os_unfair_lock_unlock(v30);
  if (v35)
  {
    v36 = *(void (**)(_QWORD))(v35 + 368);
    if (v36)
    {
      *(_QWORD *)(v35 + 368) = 0;
      *(_QWORD *)(v35 + 376) = 0;
      swift_retain();
      sub_18518D718((uint64_t)v36);
      v36(0);
      sub_18518D718((uint64_t)v36);
    }
    *(_BYTE *)(v35 + 384) = 1;
    swift_release();
  }
  sub_18519F0C4((uint64_t)v82, (uint64_t)&aBlock, &qword_1EDD82D58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82D68);
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 368) = 0;
  *(_QWORD *)(v37 + 376) = 0;
  swift_unknownObjectWeakInit();
  sub_1850F26F8((uint64_t)&aBlock, v37 + 24, &qword_1EDD82D58);
  *(_WORD *)(v37 + 384) = 0;
  v38 = *(_QWORD *)(v37 + 368);
  *(_QWORD *)(v37 + 368) = a23;
  *(_QWORD *)(v37 + 376) = a24;
  swift_retain();
  sub_18518D718(v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83250);
  v39 = swift_allocObject();
  *(_DWORD *)(v39 + 16) = 0;
  *(_QWORD *)(v37 + 16) = v39;
  if ((a18 & 1) != 0)
    swift_unknownObjectWeakAssign();
  swift_beginAccess();
  if ((*(_BYTE *)(v58 + 112) & 1) == 0)
    sub_18561F138(&qword_1EDD82D58);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = 0u;
  *(_OWORD *)(v40 + 32) = 0u;
  *(_BYTE *)(v40 + 48) = 1;
  if (qword_1EDD831E0 != -1)
    swift_once();
  v41 = qword_1EDDA8748;
  v42 = *(_BYTE *)(v58 + 264);
  sub_18519F0C4((uint64_t)v82, (uint64_t)&aBlock, &qword_1EDD82D58);
  v43 = v81;
  if (v81 == 2)
    sub_18519F088((uint64_t)&aBlock, &qword_1EDD82D58);
  v44 = v43 == 2;
  v45 = (_QWORD *)swift_allocObject();
  v45[2] = v37;
  v45[3] = a12;
  v45[4] = a13;
  v45[5] = v58;
  v45[6] = v40;
  v45[7] = a14;
  v45[8] = a15;
  v45[9] = a16;
  v45[10] = a17;
  type metadata accessor for InProcessAnimationManager.TickEntry();
  v46 = swift_allocObject();
  *(_DWORD *)(v46 + 16) = a20;
  *(_DWORD *)(v46 + 20) = a21;
  *(_DWORD *)(v46 + 24) = a22;
  *(_DWORD *)(v46 + 28) = a19;
  *(_BYTE *)(v46 + 32) = v42;
  *(_BYTE *)(v46 + 33) = v44;
  *(_QWORD *)(v46 + 40) = sub_18563A7B8;
  *(_QWORD *)(v46 + 48) = v45;
  queuea = *(NSObject **)(v41 + 264);
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = v41;
  *(_QWORD *)(v47 + 24) = v46;
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = sub_18563AE3C;
  *(_QWORD *)(v48 + 24) = v47;
  *(_QWORD *)&v62 = sub_1855A6A1C;
  *((_QWORD *)&v62 + 1) = v48;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v61 = sub_1855D8DF4;
  *((_QWORD *)&v61 + 1) = &block_descriptor_635;
  v49 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(queuea, v49);
  _Block_release(v49);
  LOBYTE(v49) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v49 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock(lock);
    swift_release();
    *(_QWORD *)(v59 + 16) = v37;
    swift_retain();
    os_unfair_lock_unlock(lock);
    swift_release_n();
    sub_18519F088((uint64_t)v82, &qword_1EDD82D58);
    sub_1855DEB40((uint64_t)v84);
    return swift_release();
  }
  return result;
}

uint64_t sub_1855F36C4(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, uint64_t a9, char a10, _QWORD *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, int a19, int a20,int a21,int a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_unfair_lock_s *v30;
  uint64_t v31;
  void (*v32)(_QWORD *__return_ptr, uint64_t, _OWORD *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  int v43;
  BOOL v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t result;
  NSObject *queuea;
  os_unfair_lock_s *lock;
  uint64_t v58;
  uint64_t v59;
  __int128 aBlock;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  unsigned __int8 v81;
  _OWORD v82[21];
  char v83;
  _QWORD v84[11];
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;

  v89 = a1;
  v90 = a2;
  v91 = a3;
  v92 = a4;
  v85 = a5;
  v86 = a6;
  v87 = a7;
  v88 = a8;
  v26 = a11[3];
  v27 = a11[4];
  __swift_project_boxed_opaque_existential_0Tm(a11, v26);
  swift_beginAccess();
  v28 = *(unsigned __int8 *)(v24 + 209);
  v58 = v24;
  v29 = *(_QWORD *)(v24 + 32);
  v30 = (os_unfair_lock_s *)(v29 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v29 + 24));
  v59 = v29;
  v31 = *(_QWORD *)(v29 + 16);
  swift_retain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v29 + 24));
  lock = (os_unfair_lock_s *)(v29 + 24);
  if (v31)
  {
    swift_beginAccess();
    v30 = (os_unfair_lock_s *)(v29 + 24);
    sub_18519F0C4(v31 + 24, (uint64_t)v82, &qword_1EDD816D8);
    swift_release();
  }
  else
  {
    memset(v82, 0, sizeof(v82));
    v83 = -1;
  }
  v32 = *(void (**)(_QWORD *__return_ptr, uint64_t, _OWORD *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v27 + 16);
  v33 = sub_1855C79F4();
  v32(v84, v28, v82, &v89, &v85, &type metadata for UIAnimatableNormalizedRect, v33, v26, v27);
  sub_18519F088((uint64_t)v82, &qword_1EDD816E0);
  os_unfair_lock_lock(v30);
  v34 = *(_QWORD *)(v59 + 16);
  swift_retain();
  os_unfair_lock_unlock(v30);
  if (v34)
  {
    swift_beginAccess();
    sub_18519F0C4(v34 + 24, (uint64_t)&aBlock, &qword_1EDD816D8);
    swift_release();
  }
  else
  {
    v79 = 0u;
    v80 = 0u;
    v77 = 0u;
    v78 = 0u;
    v75 = 0u;
    v76 = 0u;
    v73 = 0u;
    v74 = 0u;
    v71 = 0u;
    v72 = 0u;
    v69 = 0u;
    v70 = 0u;
    v67 = 0u;
    v68 = 0u;
    v65 = 0u;
    v66 = 0u;
    v63 = 0u;
    v64 = 0u;
    v61 = 0u;
    v62 = 0u;
    aBlock = 0u;
    v81 = -1;
  }
  swift_beginAccess();
  sub_18561B5B0((uint64_t)&aBlock, (uint64_t)v84, a10 & 1, &qword_1EDD816E0, &qword_1EDD85F50, &qword_1EDD85F58, &qword_1EDD816D8, (uint64_t)v82, v89, v90, v91, v92, v85, v86, v87, v88, (uint64_t *)&unk_1EDD81718);
  swift_endAccess();
  sub_18519F088((uint64_t)&aBlock, &qword_1EDD816E0);
  os_unfair_lock_lock(v30);
  v35 = *(_QWORD *)(v59 + 16);
  swift_retain();
  os_unfair_lock_unlock(v30);
  if (v35)
  {
    v36 = *(void (**)(_QWORD))(v35 + 368);
    if (v36)
    {
      *(_QWORD *)(v35 + 368) = 0;
      *(_QWORD *)(v35 + 376) = 0;
      swift_retain();
      sub_18518D718((uint64_t)v36);
      v36(0);
      sub_18518D718((uint64_t)v36);
    }
    *(_BYTE *)(v35 + 384) = 1;
    swift_release();
  }
  sub_18519F0C4((uint64_t)v82, (uint64_t)&aBlock, &qword_1EDD816D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD816E8);
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 368) = 0;
  *(_QWORD *)(v37 + 376) = 0;
  swift_unknownObjectWeakInit();
  sub_1850F26F8((uint64_t)&aBlock, v37 + 24, &qword_1EDD816D8);
  *(_WORD *)(v37 + 384) = 0;
  v38 = *(_QWORD *)(v37 + 368);
  *(_QWORD *)(v37 + 368) = a23;
  *(_QWORD *)(v37 + 376) = a24;
  swift_retain();
  sub_18518D718(v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83250);
  v39 = swift_allocObject();
  *(_DWORD *)(v39 + 16) = 0;
  *(_QWORD *)(v37 + 16) = v39;
  if ((a18 & 1) != 0)
    swift_unknownObjectWeakAssign();
  swift_beginAccess();
  if ((*(_BYTE *)(v58 + 112) & 1) == 0)
    sub_18561F138(&qword_1EDD816D8);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = 0u;
  *(_OWORD *)(v40 + 32) = 0u;
  *(_BYTE *)(v40 + 48) = 1;
  if (qword_1EDD831E0 != -1)
    swift_once();
  v41 = qword_1EDDA8748;
  v42 = *(_BYTE *)(v58 + 264);
  sub_18519F0C4((uint64_t)v82, (uint64_t)&aBlock, &qword_1EDD816D8);
  v43 = v81;
  if (v81 == 2)
    sub_18519F088((uint64_t)&aBlock, &qword_1EDD816D8);
  v44 = v43 == 2;
  v45 = (_QWORD *)swift_allocObject();
  v45[2] = v37;
  v45[3] = a12;
  v45[4] = a13;
  v45[5] = v58;
  v45[6] = v40;
  v45[7] = a14;
  v45[8] = a15;
  v45[9] = a16;
  v45[10] = a17;
  type metadata accessor for InProcessAnimationManager.TickEntry();
  v46 = swift_allocObject();
  *(_DWORD *)(v46 + 16) = a20;
  *(_DWORD *)(v46 + 20) = a21;
  *(_DWORD *)(v46 + 24) = a22;
  *(_DWORD *)(v46 + 28) = a19;
  *(_BYTE *)(v46 + 32) = v42;
  *(_BYTE *)(v46 + 33) = v44;
  *(_QWORD *)(v46 + 40) = sub_18563A820;
  *(_QWORD *)(v46 + 48) = v45;
  queuea = *(NSObject **)(v41 + 264);
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = v41;
  *(_QWORD *)(v47 + 24) = v46;
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = sub_18563AE3C;
  *(_QWORD *)(v48 + 24) = v47;
  *(_QWORD *)&v62 = sub_1855A6A1C;
  *((_QWORD *)&v62 + 1) = v48;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v61 = sub_1855D8DF4;
  *((_QWORD *)&v61 + 1) = &block_descriptor_665;
  v49 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(queuea, v49);
  _Block_release(v49);
  LOBYTE(v49) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v49 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock(lock);
    swift_release();
    *(_QWORD *)(v59 + 16) = v37;
    swift_retain();
    os_unfair_lock_unlock(lock);
    swift_release_n();
    sub_18519F088((uint64_t)v82, &qword_1EDD816D8);
    sub_1855DEB40((uint64_t)v84);
    return swift_release();
  }
  return result;
}

uint64_t sub_1855F3D98(float a1, float a2, float a3, uint64_t a4, __int128 *a5, __int128 *a6, uint64_t a7, _QWORD *a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, int a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  os_unfair_lock_s *v34;
  uint64_t v35;
  void (*v36)(_QWORD *__return_ptr, uint64_t, _BYTE *, __int128 *, __int128 *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(_QWORD);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  int v46;
  BOOL v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t result;
  uint64_t v54;
  NSObject *queuea;
  uint64_t v59;
  uint64_t v60;
  os_unfair_lock_s *lock;
  _BYTE v62[136];
  _BYTE v63[136];
  _BYTE v64[136];
  __int128 aBlock;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  char v73;
  __int16 v74;
  _BYTE v75[952];
  __int16 v76;
  _QWORD v77[11];
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  char v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  char v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  char v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  char v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  char v122;

  v22 = a5[7];
  v93 = a5[6];
  v94 = v22;
  v95 = *((_BYTE *)a5 + 128);
  v23 = a5[3];
  v89 = a5[2];
  v90 = v23;
  v24 = a5[4];
  v92 = a5[5];
  v91 = v24;
  v25 = *a5;
  v88 = a5[1];
  v87 = v25;
  v26 = a6[7];
  v84 = a6[6];
  v85 = v26;
  v86 = *((_BYTE *)a6 + 128);
  v27 = a6[3];
  v80 = a6[2];
  v81 = v27;
  v28 = a6[4];
  v83 = a6[5];
  v82 = v28;
  v29 = *a6;
  v79 = a6[1];
  v78 = v29;
  v31 = a8[3];
  v30 = a8[4];
  __swift_project_boxed_opaque_existential_0Tm(a8, v31);
  swift_beginAccess();
  v32 = *(unsigned __int8 *)(v18 + 593);
  v59 = v18;
  v33 = *(_QWORD *)(v18 + 32);
  v34 = (os_unfair_lock_s *)(v33 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v33 + 24));
  v60 = v33;
  v35 = *(_QWORD *)(v33 + 16);
  swift_retain();
  lock = v34;
  os_unfair_lock_unlock(v34);
  if (v35)
  {
    swift_beginAccess();
    sub_18519F0C4(v35 + 24, (uint64_t)v75, &qword_1EDD82E88);
    swift_release();
  }
  else
  {
    bzero(v75, 0x3B8uLL);
    v76 = -256;
  }
  v36 = *(void (**)(_QWORD *__return_ptr, uint64_t, _BYTE *, __int128 *, __int128 *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v30 + 16);
  v37 = sub_1855C7C9C();
  v36(v77, v32, v75, &v87, &v78, &type metadata for UIAnimatableTransform, v37, v31, v30);
  sub_18519F088((uint64_t)v75, &qword_1EDD82E90);
  os_unfair_lock_lock(lock);
  v38 = *(_QWORD *)(v60 + 16);
  swift_retain();
  os_unfair_lock_unlock(lock);
  if (v38)
  {
    swift_beginAccess();
    sub_18519F0C4(v38 + 24, (uint64_t)&aBlock, &qword_1EDD82E88);
    swift_release();
  }
  else
  {
    bzero(&aBlock, 0x3B8uLL);
    v74 = -256;
  }
  swift_beginAccess();
  v111 = v93;
  v112 = v94;
  v113 = v95;
  v107 = v89;
  v108 = v90;
  v110 = v92;
  v109 = v91;
  v106 = v88;
  v105 = v87;
  v120 = v84;
  v121 = v85;
  v122 = v86;
  v116 = v80;
  v117 = v81;
  v119 = v83;
  v118 = v82;
  v115 = v79;
  v114 = v78;
  sub_18561BF94((uint64_t)&aBlock);
  swift_endAccess();
  sub_18519F088((uint64_t)&aBlock, &qword_1EDD82E90);
  os_unfair_lock_lock(lock);
  v39 = *(_QWORD *)(v60 + 16);
  swift_retain();
  os_unfair_lock_unlock(lock);
  if (v39)
  {
    v40 = *(void (**)(_QWORD))(v39 + 984);
    if (v40)
    {
      *(_QWORD *)(v39 + 984) = 0;
      *(_QWORD *)(v39 + 992) = 0;
      swift_retain();
      sub_18518D718((uint64_t)v40);
      v40(0);
      sub_18518D718((uint64_t)v40);
    }
    *(_BYTE *)(v39 + 1000) = 1;
    swift_release();
  }
  sub_18519F0C4((uint64_t)v75, (uint64_t)&aBlock, &qword_1EDD82E88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82E98);
  v41 = swift_allocObject();
  *(_OWORD *)(v41 + 984) = 0u;
  swift_unknownObjectWeakInit();
  sub_1850F26F8((uint64_t)&aBlock, v41 + 24, &qword_1EDD82E88);
  *(_WORD *)(v41 + 1000) = 0;
  v42 = *(_QWORD *)(v41 + 984);
  *(_QWORD *)(v41 + 984) = a17;
  *(_QWORD *)(v41 + 992) = a18;
  swift_retain();
  sub_18518D718(v42);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83250);
  v43 = swift_allocObject();
  *(_DWORD *)(v43 + 16) = 0;
  *(_QWORD *)(v41 + 16) = v43;
  if ((a15 & 1) != 0)
    swift_unknownObjectWeakAssign();
  swift_beginAccess();
  sub_1850F26F8(v59 + 176, (uint64_t)v63, &qword_1EDD82ED8);
  sub_1850F26F8((uint64_t)v63, (uint64_t)v64, &qword_1EDD82ED8);
  if (sub_185638FE4((uint64_t)v64) != 1)
  {
    sub_1850F26F8((uint64_t)v63, (uint64_t)&aBlock, &qword_1EDD82ED8);
    v102 = v71;
    v103 = v72;
    v104 = v73;
    v98 = v67;
    v99 = v68;
    v101 = v70;
    v100 = v69;
    v97 = v66;
    v96 = aBlock;
    sub_18561F328();
  }
  v44 = swift_allocObject();
  sub_18563A9B8((uint64_t)v62);
  sub_1850F26F8((uint64_t)v62, v44 + 16, &qword_1EDD82ED8);
  if (qword_1EDD831E0 != -1)
    swift_once();
  v54 = qword_1EDDA8748;
  v45 = *(_BYTE *)(v59 + 744);
  sub_18519F0C4((uint64_t)v75, (uint64_t)&aBlock, &qword_1EDD82E88);
  v46 = HIBYTE(v74);
  if (HIBYTE(v74) == 2)
    sub_18519F088((uint64_t)&aBlock, &qword_1EDD82E88);
  v47 = v46 == 2;
  v48 = (_QWORD *)swift_allocObject();
  v48[2] = v41;
  v48[3] = a9;
  v48[4] = a10;
  v48[5] = v59;
  v48[6] = v44;
  v48[7] = a11;
  v48[8] = a12;
  v48[9] = a13;
  v48[10] = a14;
  type metadata accessor for InProcessAnimationManager.TickEntry();
  v49 = swift_allocObject();
  *(float *)(v49 + 16) = a1;
  *(float *)(v49 + 20) = a2;
  *(float *)(v49 + 24) = a3;
  *(_DWORD *)(v49 + 28) = a16;
  *(_BYTE *)(v49 + 32) = v45;
  *(_BYTE *)(v49 + 33) = v47;
  *(_QWORD *)(v49 + 40) = sub_18563A9DC;
  *(_QWORD *)(v49 + 48) = v48;
  queuea = *(NSObject **)(v54 + 264);
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = v54;
  *(_QWORD *)(v50 + 24) = v49;
  v51 = swift_allocObject();
  *(_QWORD *)(v51 + 16) = sub_18563AE3C;
  *(_QWORD *)(v51 + 24) = v50;
  *(_QWORD *)&v67 = sub_1855A6A1C;
  *((_QWORD *)&v67 + 1) = v51;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v66 = sub_1855D8DF4;
  *((_QWORD *)&v66 + 1) = &block_descriptor_697;
  v52 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(queuea, v52);
  _Block_release(v52);
  LOBYTE(v52) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v52 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock(lock);
    swift_release();
    *(_QWORD *)(v60 + 16) = v41;
    swift_retain();
    os_unfair_lock_unlock(lock);
    swift_release_n();
    sub_18519F088((uint64_t)v75, &qword_1EDD82E88);
    sub_1855DEB40((uint64_t)v77);
    return swift_release();
  }
  return result;
}

uint64_t sub_1855F4578(double a1, double a2, double a3, double a4, float a5, float a6, float a7, uint64_t a8, char a9, _QWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, int a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_unfair_lock_s *v29;
  uint64_t v30;
  void (*v31)(_QWORD *__return_ptr, uint64_t, _OWORD *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t);
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(_QWORD);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  int v42;
  BOOL v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t result;
  NSObject *queuea;
  os_unfair_lock_s *lock;
  uint64_t v58;
  uint64_t v59;
  __int128 aBlock;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  unsigned __int8 v75;
  _OWORD v76[15];
  char v77;
  _QWORD v78[11];
  double v79;
  double v80;
  double v81;
  double v82;

  v81 = a1;
  v82 = a2;
  v79 = a3;
  v80 = a4;
  v25 = a10[3];
  v26 = a10[4];
  __swift_project_boxed_opaque_existential_0Tm(a10, v25);
  swift_beginAccess();
  v27 = *(unsigned __int8 *)(v20 + 145);
  v58 = v20;
  v28 = *(_QWORD *)(v20 + 32);
  v29 = (os_unfair_lock_s *)(v28 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v28 + 24));
  v59 = v28;
  v30 = *(_QWORD *)(v28 + 16);
  swift_retain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v28 + 24));
  lock = (os_unfair_lock_s *)(v28 + 24);
  if (v30)
  {
    swift_beginAccess();
    v29 = (os_unfair_lock_s *)(v28 + 24);
    sub_18519F0C4(v30 + 24, (uint64_t)v76, &qword_1EDD82E08);
    swift_release();
  }
  else
  {
    memset(v76, 0, sizeof(v76));
    v77 = -1;
  }
  v31 = *(void (**)(_QWORD *__return_ptr, uint64_t, _OWORD *, double *, double *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v26 + 16);
  v32 = sub_1855C7B8C();
  v31(v78, v27, v76, &v81, &v79, &type metadata for UIAnimatablePoint, v32, v25, v26);
  sub_18519F088((uint64_t)v76, &qword_1EDD82E10);
  os_unfair_lock_lock(v29);
  v33 = *(_QWORD *)(v59 + 16);
  swift_retain();
  os_unfair_lock_unlock(v29);
  if (v33)
  {
    swift_beginAccess();
    sub_18519F0C4(v33 + 24, (uint64_t)&aBlock, &qword_1EDD82E08);
    swift_release();
  }
  else
  {
    v73 = 0u;
    v74 = 0u;
    v71 = 0u;
    v72 = 0u;
    v69 = 0u;
    v70 = 0u;
    v67 = 0u;
    v68 = 0u;
    v65 = 0u;
    v66 = 0u;
    v63 = 0u;
    v64 = 0u;
    v61 = 0u;
    v62 = 0u;
    aBlock = 0u;
    v75 = -1;
  }
  swift_beginAccess();
  sub_18561D7B4((uint64_t)&aBlock, (uint64_t)v78, a9 & 1, &qword_1EDD82E10, &qword_1EDD85F78, &qword_1EDD85F80, &qword_1EDD82E08, (uint64_t)v76, v81, v82, v79, v80);
  swift_endAccess();
  sub_18519F088((uint64_t)&aBlock, &qword_1EDD82E10);
  os_unfair_lock_lock(v29);
  v34 = *(_QWORD *)(v59 + 16);
  swift_retain();
  os_unfair_lock_unlock(v29);
  if (v34)
  {
    v35 = *(void (**)(_QWORD))(v34 + 272);
    if (v35)
    {
      *(_QWORD *)(v34 + 272) = 0;
      *(_QWORD *)(v34 + 280) = 0;
      swift_retain();
      sub_18518D718((uint64_t)v35);
      v35(0);
      sub_18518D718((uint64_t)v35);
    }
    *(_BYTE *)(v34 + 288) = 1;
    swift_release();
  }
  sub_18519F0C4((uint64_t)v76, (uint64_t)&aBlock, &qword_1EDD82E08);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82E18);
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 272) = 0;
  *(_QWORD *)(v36 + 280) = 0;
  swift_unknownObjectWeakInit();
  sub_1850F26F8((uint64_t)&aBlock, v36 + 24, &qword_1EDD82E08);
  *(_WORD *)(v36 + 288) = 0;
  v37 = *(_QWORD *)(v36 + 272);
  *(_QWORD *)(v36 + 272) = a19;
  *(_QWORD *)(v36 + 280) = a20;
  swift_retain();
  sub_18518D718(v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83250);
  v38 = swift_allocObject();
  *(_DWORD *)(v38 + 16) = 0;
  *(_QWORD *)(v36 + 16) = v38;
  if ((a17 & 1) != 0)
    swift_unknownObjectWeakAssign();
  swift_beginAccess();
  if ((*(_BYTE *)(v58 + 80) & 1) == 0)
    sub_18561EDFC(&qword_1EDD82E08);
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = 0;
  *(_QWORD *)(v39 + 24) = 0;
  *(_BYTE *)(v39 + 32) = 1;
  if (qword_1EDD831E0 != -1)
    swift_once();
  v40 = qword_1EDDA8748;
  v41 = *(_BYTE *)(v58 + 184);
  sub_18519F0C4((uint64_t)v76, (uint64_t)&aBlock, &qword_1EDD82E08);
  v42 = v75;
  if (v75 == 2)
    sub_18519F088((uint64_t)&aBlock, &qword_1EDD82E08);
  v43 = v42 == 2;
  v44 = (_QWORD *)swift_allocObject();
  v44[2] = v36;
  v44[3] = a11;
  v44[4] = a12;
  v44[5] = v58;
  v44[6] = v39;
  v44[7] = a13;
  v44[8] = a14;
  v44[9] = a15;
  v44[10] = a16;
  type metadata accessor for InProcessAnimationManager.TickEntry();
  v45 = swift_allocObject();
  *(float *)(v45 + 16) = a5;
  *(float *)(v45 + 20) = a6;
  *(float *)(v45 + 24) = a7;
  *(_DWORD *)(v45 + 28) = a18;
  *(_BYTE *)(v45 + 32) = v41;
  *(_BYTE *)(v45 + 33) = v43;
  *(_QWORD *)(v45 + 40) = sub_18563ABF4;
  *(_QWORD *)(v45 + 48) = v44;
  queuea = *(NSObject **)(v40 + 264);
  v46 = v40;
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = v46;
  *(_QWORD *)(v47 + 24) = v45;
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = sub_18563AE3C;
  *(_QWORD *)(v48 + 24) = v47;
  *(_QWORD *)&v62 = sub_1855A6A1C;
  *((_QWORD *)&v62 + 1) = v48;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v61 = sub_1855D8DF4;
  *((_QWORD *)&v61 + 1) = &block_descriptor_727;
  v49 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(queuea, v49);
  _Block_release(v49);
  LOBYTE(v49) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  result = swift_release();
  if ((v49 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock(lock);
    swift_release();
    *(_QWORD *)(v59 + 16) = v36;
    swift_retain();
    os_unfair_lock_unlock(lock);
    swift_release_n();
    sub_18519F088((uint64_t)v76, &qword_1EDD82E08);
    sub_1855DEB40((uint64_t)v78);
    return swift_release();
  }
  return result;
}

