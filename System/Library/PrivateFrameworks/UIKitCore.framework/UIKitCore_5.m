void sub_18576DD64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x186DCA138](v1);
  if (v2)
  {
    v3 = (char *)v2;
    if (*(_BYTE *)(v2 + qword_1EDD87118) == 1)
    {
      v4 = *(void **)(v2 + qword_1EDD87120);
      objc_msgSend(v4, sel_setHidden_, 1);
      if (*((_BYTE *)v4
           + OBJC_IVAR____TtCOE5UIKitCSo24_UIVisualEffectViewEntry19LightEffectSubviews19DirectionalMaskView_mode) == 1)
        objc_msgSend(*(id *)&v3[qword_1EDD87110], sel_setHidden_, 1);
    }

  }
}

uint64_t sub_18576DE20()
{
  char *v0;
  uint64_t result;
  id v2;
  id v3;
  BOOL v4;
  unsigned int v5;
  unsigned int v6;
  id v7;
  id v8;

  result = 1;
  switch(*(_QWORD *)&v0[qword_1EDD87128])
  {
    case 1:
      return result;
    case 2:
      result = 3;
      break;
    case 3:
      result = 4;
      break;
    case 4:
      result = 2;
      break;
    case 5:
      v2 = objc_msgSend(v0, sel_traitCollection);
      v3 = objc_msgSend(v2, sel_layoutDirection);

      v4 = v3 == (id)1;
      v5 = 4;
      v6 = 2;
      goto LABEL_8;
    case 6:
      v7 = objc_msgSend(v0, sel_traitCollection);
      v8 = objc_msgSend(v7, sel_layoutDirection);

      v4 = v8 == (id)1;
      v5 = 2;
      v6 = 4;
LABEL_8:
      if (v4)
        result = v6;
      else
        result = v5;
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t sub_18576DF24()
{
  char *v0;
  uint64_t result;
  id v2;
  id v3;
  BOOL v4;
  unsigned int v5;
  unsigned int v6;
  id v7;
  id v8;

  result = 3;
  switch(*(_QWORD *)&v0[qword_1EDD87130])
  {
    case 1:
      return result;
    case 2:
      result = 1;
      break;
    case 3:
      result = 2;
      break;
    case 4:
      result = 4;
      break;
    case 5:
      v2 = objc_msgSend(v0, sel_traitCollection);
      v3 = objc_msgSend(v2, sel_layoutDirection);

      v4 = v3 == (id)1;
      v5 = 2;
      v6 = 4;
      goto LABEL_8;
    case 6:
      v7 = objc_msgSend(v0, sel_traitCollection);
      v8 = objc_msgSend(v7, sel_layoutDirection);

      v4 = v8 == (id)1;
      v5 = 4;
      v6 = 2;
LABEL_8:
      if (v4)
        result = v6;
      else
        result = v5;
      break;
    default:
      result = 0;
      break;
  }
  return result;
}

id sub_18576E028()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;

  v1 = v0
     + OBJC_IVAR____TtCE5UIKitCSo24_UIVisualEffectViewEntryP33_148879D7C674D29C8868AA63A63123C414LightViewEntry____lazy_storage___transitionView;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtCE5UIKitCSo24_UIVisualEffectViewEntryP33_148879D7C674D29C8868AA63A63123C414LightViewEntry____lazy_storage___transitionView);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtCE5UIKitCSo24_UIVisualEffectViewEntryP33_148879D7C674D29C8868AA63A63123C414LightViewEntry____lazy_storage___transitionView);
  }
  else
  {
    v4 = (void *)sub_18576E098(v0);
    v5 = *(void **)v1;
    *(_QWORD *)v1 = v4;
    *(_QWORD *)(v1 + 8) = v6;
    v3 = v4;

    v2 = 0;
  }
  v7 = v2;
  return v3;
}

uint64_t sub_18576E098(uint64_t a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  objc_super v17;

  v2 = objc_msgSend(*(id *)(a1+ OBJC_IVAR____TtCE5UIKitCSo24_UIVisualEffectViewEntryP33_148879D7C674D29C8868AA63A63123C414LightViewEntry_descriptor), sel__createLightSourceViewWithFrame_usage_, 4, 0.0, 0.0, 0.0, 0.0);
  _s24_CornerMatchingAssertionCMa();
  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 32) = 0x3FF0000000000000;
  swift_unknownObjectWeakAssign();
  v4 = v2;
  v5 = sub_185697FC4(v4);

  *(_QWORD *)(v3 + 24) = v5;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1
            + OBJC_IVAR____TtCE5UIKitCSo24_UIVisualEffectViewEntryP33_148879D7C674D29C8868AA63A63123C414LightViewEntry_cornerMatchingAssertion) = v3;
  swift_release();
  v6 = a1
     + OBJC_IVAR____TtCE5UIKitCSo24_UIVisualEffectViewEntryP33_148879D7C674D29C8868AA63A63123C414LightViewEntry_transitionInfo;
  v7 = *(_QWORD *)(a1
                 + OBJC_IVAR____TtCE5UIKitCSo24_UIVisualEffectViewEntryP33_148879D7C674D29C8868AA63A63123C414LightViewEntry_transitionInfo);
  v8 = *(_QWORD *)(v6 + 8);
  if (v7 | v8)
  {
    v15 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EDD8AA60));
    return sub_18576CC14(v4, v7, v8);
  }
  else
  {
    v9 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EDD8AA68);
    v10 = (char *)objc_allocWithZone(v9);
    *(_QWORD *)&v10[qword_1EDD88420] = v4;
    *(_QWORD *)&v10[qword_1EDD88428] = 0x3FF0000000000000;
    v11 = v4;
    objc_msgSend(v11, sel_frame);
    v17.receiver = v10;
    v17.super_class = v9;
    v12 = objc_msgSendSuper2(&v17, sel_initWithFrame_);
    v13 = v11;
    v14 = v12;
    objc_msgSend(v14, sel_bounds);
    objc_msgSend(v13, sel_setFrame_);

    objc_msgSend(v13, sel_setAutoresizingMask_, 18);
    objc_msgSend(v14, sel_addSubview_, v13);

  }
  return (uint64_t)v14;
}

void sub_18576E28C(void *a1)
{
  id v2;
  id v3;
  id v4;
  id v5;

  v2 = sub_18576E028();
  objc_msgSend(a1, sel_bounds);
  objc_msgSend(v2, sel_setFrame_);

  v3 = sub_18576E028();
  objc_msgSend(v3, sel_setAutoresizingMask_, 18);

  v4 = sub_18576E028();
  objc_msgSend(v4, sel_setTag_, 101);

  v5 = sub_18576E028();
  objc_msgSend(a1, sel_addSubview_, v5);

}

void sub_18576E3E4(void *a1, uint64_t a2, void *a3, char a4)
{
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t ObjectType;
  id v13;

  v6 = a3;
  v7 = a1;
  v8 = objc_msgSend(v6, sel_viewWithTag_, 101);
  if (v8)
  {
    v13 = v8;
    swift_getObjectType();
    v9 = swift_conformsToProtocol2();
    if (v9)
      v10 = v9;
    else
      v10 = 0;
    if (v9)
      v11 = v13;
    else
      v11 = 0;
    if (v11)
    {
      ObjectType = swift_getObjectType();
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v10 + 16))(a4 & 1, ObjectType, v10);
    }

    v6 = v7;
  }
  else
  {
    v13 = v7;
  }

}

id sub_18576E4D8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)_s14LightViewEntryCMa();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s14LightViewEntryCMa()
{
  return objc_opt_self();
}

uint64_t sub_18576E574()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_18576E598()
{
  return sub_18576D8C4();
}

uint64_t sub_18576E5B8()
{
  return swift_deallocObject();
}

uint64_t sub_18576E5CC()
{
  return swift_deallocObject();
}

uint64_t sub_18576E5DC()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_18576E600()
{
  uint64_t v0;

  sub_18576DD64(v0);
}

uint64_t sub_18576E618()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18576E63C()
{
  return swift_deallocObject();
}

uint64_t sub_18576E64C()
{
  return sub_18576D424();
}

uint64_t sub_18576E66C()
{
  return swift_deallocObject();
}

uint64_t sub_18576E67C()
{
  return swift_deallocObject();
}

uint64_t sub_18576E68C()
{
  return swift_deallocObject();
}

uint64_t sub_18576E69C()
{
  return sub_18576CF84();
}

uint64_t sub_18576E6BC()
{
  return swift_deallocObject();
}

uint64_t sub_18576E6CC()
{
  return swift_deallocObject();
}

id sub_18576E6DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  objc_msgSend(*(id *)(v1 + qword_1EDD87120), sel_setHidden_, 0);
  return objc_msgSend(*(id *)(v1 + qword_1EDD87110), sel_setHidden_, 0);
}

uint64_t sub_18576E72C()
{
  return swift_deallocObject();
}

uint64_t sub_18576E7B0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return UITransitionComponentEvent.init(_:)(a1, a2);
}

uint64_t UITransitionComponentEvent.init(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v13;

  v4 = sub_186507AA4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v13 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD8AA70);
  v8 = swift_dynamicCast();
  v9 = *(_QWORD *)(a1 - 8);
  v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  if ((v8 & 1) != 0)
  {
    v10(v7, 0, 1, a1);
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v7, a1);
    v11 = 0;
  }
  else
  {
    v11 = 1;
    v10(v7, 1, 1, a1);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v10)(a2, v11, 1, a1);
}

uint64_t sub_18576E8D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;
  __int128 v4;
  char v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD8AA70);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    *(_OWORD *)a1 = v4;
    v3 = v5 & 1;
  }
  else
  {
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    v3 = -1;
  }
  *(_BYTE *)(a1 + 16) = v3;
  return result;
}

id sub_18576E950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a1;
  v2 = *(void **)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_BYTE *)(a2 + 16) = v4;
  return sub_185692CE0(v3, v2, v4);
}

id static UITransitionComponentEvent<>.common(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a1;
  v2 = *(void **)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_BYTE *)(a2 + 16) = v4;
  return sub_185692CE0(v3, v2, v4);
}

uint64_t static UICommonTransitionComponentEvent.OutputModelUpdateInfo.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a2 + 8);
  sub_18576E9C0(*(_QWORD *)a1, *(_QWORD *)a2);
  return v4 & ~(v2 ^ v3) & 1;
}

void sub_18576E9C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t, __n128);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = sub_186506BBC();
  v40 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - v8;
  v12 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v33 - v11;
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v34 = a1;
  v35 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  v39 = a2 + 56;
  v33 = (char *)&v33 - v11;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v37 = (v18 - 1) & v18;
  v38 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = v40;
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v40 + 16);
    v26(v13, *(_QWORD *)(a1 + 48) + v25 * i, v4, v12);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v9, v13, v4);
    sub_185692CA0(qword_1EDD813D0, MEMORY[0x1E0CB09C8]);
    v27 = sub_186507444();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v4);
      return;
    }
    v30 = ~v28;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v26)(v6, *(_QWORD *)(a2 + 48) + v29 * v25, v4);
      sub_185692CA0(&qword_1EDD87830, MEMORY[0x1E0CB09D0]);
      v31 = sub_1865074C8();
      v32 = *(void (**)(char *, uint64_t))(v40 + 8);
      v32(v6, v4);
      if ((v31 & 1) != 0)
        break;
      v29 = (v29 + 1) & v30;
      if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v32(v9, v4);
        return;
      }
    }
    v32(v9, v4);
    v13 = v33;
    a1 = v34;
    v18 = v37;
    v14 = v38;
    if (v37)
      goto LABEL_7;
LABEL_9:
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v20 >= v36)
      return;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v36)
        return;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v36)
          return;
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v36)
            return;
          v21 = *(_QWORD *)(v35 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v37 = (v21 - 1) & v21;
    v38 = v22;
  }
  v23 = v20 + 4;
  if (v23 >= v36)
    return;
  v21 = *(_QWORD *)(v35 + 8 * v23);
  if (v21)
  {
    v22 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v36)
      return;
    v21 = *(_QWORD *)(v35 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_34:
  __break(1u);
}

void sub_18576ED20(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  id v25;
  char v26;
  uint64_t v27;
  int64_t v28;
  int64_t v29;

  v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v5 = a1;
    else
      v5 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v4)
    {
      sub_186507B7C();
      return;
    }
    v6 = v5;
    v7 = a2;
    goto LABEL_13;
  }
  if (v4)
  {
    if (a2 < 0)
      v6 = a2;
    else
      v6 = a2 & 0xFFFFFFFFFFFFFF8;
    v7 = a1;
LABEL_13:
    sub_18576F354(v6, v7);
    return;
  }
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v27 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(a1 + 56);
  sub_1855E2168();
  v11 = 0;
  v28 = (unint64_t)(v8 + 63) >> 6;
  v12 = a2 + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_39;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    if (v15 >= v28)
      return;
    v16 = *(_QWORD *)(v27 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v28)
        return;
      v16 = *(_QWORD *)(v27 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v28)
          return;
        v16 = *(_QWORD *)(v27 + 8 * v11);
        if (!v16)
        {
          v11 = v15 + 3;
          if (v15 + 3 >= v28)
            return;
          v16 = *(_QWORD *)(v27 + 8 * v11);
          if (!v16)
            break;
        }
      }
    }
LABEL_38:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_39:
    v18 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v14);
    v19 = sub_186507A38();
    v20 = -1 << *(_BYTE *)(a2 + 32);
    v21 = v19 & ~v20;
    if (((*(_QWORD *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
      goto LABEL_46;
    v29 = v11;
    v22 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v21);
    v23 = sub_186507A44();

    if ((v23 & 1) == 0)
    {
      v24 = ~v20;
      while (1)
      {
        v21 = (v21 + 1) & v24;
        if (((*(_QWORD *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        v25 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v21);
        v26 = sub_186507A44();

        if ((v26 & 1) != 0)
          goto LABEL_20;
      }
LABEL_46:

      return;
    }
LABEL_20:

    v11 = v29;
  }
  v17 = v15 + 4;
  if (v17 >= v28)
    return;
  v16 = *(_QWORD *)(v27 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_38;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v28)
      return;
    v16 = *(_QWORD *)(v27 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_38;
  }
LABEL_49:
  __break(1u);
}

uint64_t sub_18576F024(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a2 + 8);
  sub_18576E9C0(*(_QWORD *)a1, *(_QWORD *)a2);
  return v4 & ~(v2 ^ v3) & 1;
}

uint64_t UICommonTransitionComponentEventHandling.receive(event:responder:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v5 = *a1;
  v4 = a1[1];
  if (*((_BYTE *)a1 + 16) == 1)
  {
    v7 = a1[1];
    v8 = v5;
    return (*(uint64_t (**)(uint64_t *, uint64_t *))(a4 + 16))(&v8, &v7);
  }
  else
  {
    v8 = *a1;
    v9 = v4 & 1;
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a4 + 8))(&v8, a3, a4);
  }
}

uint64_t dispatch thunk of UITransitionComponentEvent.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of static UITransitionComponentEvent.common(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

void destroy for UICommonTransitionComponentEvent(uint64_t a1)
{
  sub_1856930E0(*(_QWORD *)a1, *(void **)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s5UIKit32UICommonTransitionComponentEventOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_185692CE0(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for UICommonTransitionComponentEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  char v5;
  uint64_t v6;
  void *v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_185692CE0(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(void **)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1856930E0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for UICommonTransitionComponentEvent(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(void **)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1856930E0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for UICommonTransitionComponentEvent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UICommonTransitionComponentEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_18576F25C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for UICommonTransitionComponentEvent()
{
  return &type metadata for UICommonTransitionComponentEvent;
}

uint64_t initializeBufferWithCopyOfBuffer for UICommonTransitionComponentEvent.OutputModelUpdateInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UICommonTransitionComponentEvent.OutputModelUpdateInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for UICommonTransitionComponentEvent.OutputModelUpdateInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

ValueMetadata *type metadata accessor for UICommonTransitionComponentEvent.OutputModelUpdateInfo()
{
  return &type metadata for UICommonTransitionComponentEvent.OutputModelUpdateInfo;
}

uint64_t dispatch thunk of UICommonTransitionComponentEventHandling.didUpdateOutputModel(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of UICommonTransitionComponentEventHandling.didObtainPropertyAnchor(for:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

void sub_18576F354(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  char v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3 != sub_186507B64())
    return;
  v4 = 0;
  v5 = a2 + 56;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_6:
    v12 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v11);
    v13 = sub_186507B94();

    if ((v13 & 1) == 0)
      return;
  }
  v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v14);
  ++v4;
  if (v15)
    goto LABEL_19;
  v4 = v14 + 1;
  if (v14 + 1 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_19:
    v8 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_6;
  }
  v16 = v14 + 2;
  if (v16 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
  {
    v4 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v9)
      return;
    v15 = *(_QWORD *)(v5 + 8 * v4);
    ++v16;
    if (v15)
      goto LABEL_19;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_18576F4A8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x1E0DEE9D8];
    if (!v2)
      return v3;
    v19 = MEMORY[0x1E0DEE9D8];
    result = sub_1855B382C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v19;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x186DC4CB4](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      objc_msgSend(v6, sel_CGRectValue);
      v9 = v8;
      v11 = v10;
      v13 = v12;
      v15 = v14;

      v17 = *(_QWORD *)(v19 + 16);
      v16 = *(_QWORD *)(v19 + 24);
      if (v17 >= v16 >> 1)
        sub_1855B382C(v16 > 1, v17 + 1, 1);
      ++v5;
      *(_QWORD *)(v19 + 16) = v17 + 1;
      v18 = (_QWORD *)(v19 + 32 * v17);
      v18[4] = v9;
      v18[5] = v11;
      v18[6] = v13;
      v18[7] = v15;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_186507E58();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_18576F618(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  double v12;
  double v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  _QWORD v22[6];

  v3 = v2;
  *(_QWORD *)(v3 + 32) = 0;
  *(_QWORD *)(v3 + 40) = objc_msgSend(objc_allocWithZone((Class)UIViewFloatAnimatableProperty), sel_init);
  *(_OWORD *)(v3 + 48) = xmmword_186675A20;
  *(_QWORD *)(v3 + 64) = 0;
  *(_QWORD *)(v3 + 72) = 0;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a2;
  v6 = a1;
  v7 = a2;
  v8 = objc_msgSend(v7, sel_layer);
  v9 = objc_msgSend(v6, sel_target);
  v10 = objc_msgSend(v9, sel_container);

  v11 = objc_msgSend(v10, sel_traitCollection);
  objc_msgSend(v11, sel_displayScale);
  v13 = v12;

  objc_msgSend(v8, sel_setRasterizationScale_, v13);
  v14 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1866691F0;
  v16 = *(void **)(v3 + 40);
  *(_QWORD *)(v15 + 32) = v16;
  sub_18650766C();
  sub_1851F9080(0, (unint64_t *)&qword_1ECD74C18);
  v17 = v16;
  v18 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  v19 = swift_allocObject();
  swift_weakInit();
  v22[4] = sub_185770744;
  v22[5] = v19;
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 1107296256;
  v22[2] = sub_18530A69C;
  v22[3] = &block_descriptor_70;
  v20 = _Block_copy(v22);
  swift_release();
  objc_msgSend(v14, sel__createTransformerWithInputAnimatableProperties_presentationValueChangedCallback_, v18, v20);

  _Block_release(v20);
  return v3;
}

uint64_t sub_18576F86C()
{
  uint64_t result;
  uint64_t v1;
  double v2;
  double v3;
  CGFloat Height;
  CGRect v5;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    objc_msgSend(*(id *)(result + 40), sel_presentationValue);
    v3 = v2;
    v5.origin.x = sub_18576FC10();
    Height = CGRectGetHeight(v5);
    sub_18576F8F8(v3 * (Height + *(double *)(v1 + 48) + *(double *)(v1 + 48)) - *(double *)(v1 + 48));
    return swift_release();
  }
  return result;
}

void sub_18576F8F8(double a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double (*v26)(uint64_t, double);
  uint64_t v27;
  double v28;
  double v29;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat *v34;
  uint64_t v35;
  void *v36;
  id v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  id v43;
  id v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;

  v2 = v1;
  v43 = objc_msgSend(*(id *)(v1 + 16), sel_parameters);
  v3 = objc_msgSend(v43, sel__textLineRects);
  if (v3)
  {
    v4 = v3;
    sub_1851F9080(0, (unint64_t *)&qword_1EDD82FD0);
    v5 = sub_186507654();

    v6 = sub_18576F4A8(v5);
    swift_bridgeObjectRelease();
    v7 = sub_18576FC10();
    v40 = v8;
    v41 = v7;
    v38 = v10;
    v39 = v9;
    v11 = *(_QWORD *)(v6 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain();
      v12 = 0;
      v13 = 56;
      v14 = (_QWORD *)v6;
      while (1)
      {
        v15 = *(double *)(v6 + v13 - 16);
        v44 = *(id *)(v6 + v13 - 24);
        v16 = *(double *)(v6 + v13 - 8);
        v17 = *(double *)(v6 + v13);
        v45.origin.x = v41;
        v45.origin.y = v40;
        v45.size.width = v39;
        v45.size.height = v38;
        v18 = -CGRectGetMinX(v45);
        v46.origin.x = v41;
        v46.origin.y = v40;
        v46.size.width = v39;
        v46.size.height = v38;
        v19 = -CGRectGetMinY(v46);
        *(_QWORD *)&v47.origin.x = v44;
        v47.origin.y = v15;
        v47.size.width = v16;
        v47.size.height = v17;
        v48 = CGRectOffset(v47, v18, v19);
        UIRectGetCenter(v48.origin.x, v48.origin.y, v48.size.width);
        v21 = vabdd_f64(v20, a1);
        v22 = *(double *)(v2 + 48);
        v23 = *(double *)(v2 + 56);
        v24 = v22 > v21 ? *(double *)(v2 + 48) : v21;
        v25 = (v24 - v21) / v22;
        v26 = *(double (**)(uint64_t, double))(v2 + 64);
        if (v26)
        {
          v27 = swift_retain();
          v28 = v26(v27, v25);
          sub_18518D718((uint64_t)v26);
        }
        else
        {
          v29 = v25 + v25;
          v28 = v25 >= 0.5 ? (2.0 - v29) * (2.0 - v29) * -0.5 + 1.0 : v25 * v29;
        }
        if (v12 >= v14[2])
          break;
        v49 = CGRectOffset(*(CGRect *)&v14[(unint64_t)v13 / 8 - 3], 0.0, v23 * v28);
        x = v49.origin.x;
        y = v49.origin.y;
        width = v49.size.width;
        height = v49.size.height;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v14 = sub_1857854C0(v14);
        if (v12 >= v14[2])
          goto LABEL_21;
        ++v12;
        v34 = (CGFloat *)&v14[(unint64_t)v13 / 8];
        *(v34 - 3) = x;
        *(v34 - 2) = y;
        *(v34 - 1) = width;
        *v34 = height;
        v13 += 32;
        if (v11 == v12)
        {
          swift_bridgeObjectRelease();
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_21:
      __break(1u);
    }
    else
    {
LABEL_19:
      v35 = swift_bridgeObjectRetain();
      v36 = (void *)sub_18576FD50(v35);
      swift_bridgeObjectRelease();
      v37 = objc_msgSend(*(id *)(v2 + 24), sel_layer);
      objc_msgSend(v37, sel_setMeshTransform_, v36);
      swift_bridgeObjectRelease();

    }
  }
  else
  {

  }
}

double sub_18576FC10()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;
  double x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  uint64_t v10;
  uint64_t v11;
  CGRect v13;
  CGRect v14;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_parameters);
  v2 = objc_msgSend(v1, sel__textLineRects);
  if (v2)
  {
    v3 = v2;
    sub_1851F9080(0, (unint64_t *)&qword_1EDD82FD0);
    v4 = sub_186507654();

    v5 = sub_18576F4A8(v4);
    swift_bridgeObjectRelease();
    x = *MEMORY[0x1E0C9D628];
    y = *(double *)(MEMORY[0x1E0C9D628] + 8);
    width = *(double *)(MEMORY[0x1E0C9D628] + 16);
    height = *(double *)(MEMORY[0x1E0C9D628] + 24);
    v10 = *(_QWORD *)(v5 + 16);
    if (v10)
    {
      v11 = v5 + 56;
      do
      {
        v13.origin.x = x;
        v13.origin.y = y;
        v13.size.width = width;
        v13.size.height = height;
        v14 = CGRectUnion(v13, *(CGRect *)(v11 - 24));
        x = v14.origin.x;
        y = v14.origin.y;
        width = v14.size.width;
        height = v14.size.height;
        v11 += 32;
        --v10;
      }
      while (v10);
    }
    swift_bridgeObjectRelease();
  }
  else
  {

    return 0.0;
  }
  return x;
}

uint64_t sub_18576FD50(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  id v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  CGFloat *v12;
  CGFloat *v13;
  uint64_t v14;
  _QWORD *v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v26;
  CGFloat MinY;
  CGFloat v28;
  double v29;
  double v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  double v41;
  CGFloat v42;
  double v43;
  unint64_t v44;
  unint64_t v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double *v50;
  double v51;
  double v52;
  double v53;
  unint64_t v54;
  unint64_t v55;
  CGFloat *v56;
  double v57;
  double v58;
  unint64_t v59;
  unint64_t v60;
  CGFloat *v61;
  CGFloat v62;
  CGFloat v63;
  CGFloat v64;
  unint64_t v65;
  unint64_t v66;
  CGFloat *v67;
  unint64_t v68;
  unint64_t v69;
  int v70;
  _QWORD *v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  void *v77;
  id v78;
  uint64_t result;
  CGFloat v80;
  CGFloat v81;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  double v94;
  CGFloat v95;
  CGFloat v96;
  double v97;
  CGFloat v98;
  CGFloat MaxY;
  double MinX;
  CGFloat MaxX;
  CGFloat v102;
  CGFloat v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;
  CGRect v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;
  CGRect v112;
  CGRect v113;
  CGRect v114;
  CGRect v115;
  CGRect v116;
  CGRect v117;
  CGRect v118;
  CGRect v119;
  CGRect v120;
  CGRect v121;
  CGRect v122;
  CGRect v123;
  CGRect v124;
  CGRect v125;
  CGRect v126;
  CGRect v127;
  CGRect v128;
  CGRect v129;
  CGRect v130;
  CGRect v131;
  CGRect v132;
  CGRect v133;
  CGRect v134;
  CGRect v135;
  CGRect v136;
  CGRect v137;

  v3 = objc_msgSend(*(id *)(v1 + 16), sel_parameters);
  v4 = objc_msgSend(v3, sel__textLineRects);
  if (!v4)
  {
LABEL_26:

    result = sub_186507E04();
    __break(1u);
    return result;
  }
  v5 = v4;
  sub_1851F9080(0, (unint64_t *)&qword_1EDD82FD0);
  v6 = sub_186507654();

  v7 = sub_18576F4A8(v6);
  swift_bridgeObjectRelease();
  sub_18576FC10();
  v10 = *(_QWORD *)(v7 + 16);
  if (v10)
  {
    v80 = v9;
    v81 = v8;
    v11 = 0;
    v12 = (CGFloat *)(a1 + 56);
    v13 = (CGFloat *)(v7 + 56);
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v14 = *(_QWORD *)(a1 + 16);
    v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v17 = *(v13 - 1);
      v16 = *v13;
      v19 = *(v13 - 3);
      v18 = *(v13 - 2);
      v104.origin.x = sub_18576FC10();
      v20 = -CGRectGetMinX(v104);
      v105.origin.x = sub_18576FC10();
      v21 = -CGRectGetMinY(v105);
      v106.origin.x = v19;
      v106.origin.y = v18;
      v106.size.width = v17;
      v106.size.height = v16;
      v107 = CGRectOffset(v106, v20, v21);
      x = v107.origin.x;
      y = v107.origin.y;
      width = v107.size.width;
      height = v107.size.height;
      MinX = CGRectGetMinX(v107);
      v108.origin.x = 0.0;
      v108.origin.y = 0.0;
      v108.size.width = v81;
      v108.size.height = v80;
      v26 = CGRectGetWidth(v108);
      v109.origin.x = x;
      v109.origin.y = y;
      v109.size.width = width;
      v109.size.height = height;
      MinY = CGRectGetMinY(v109);
      v110.origin.x = 0.0;
      v110.origin.y = 0.0;
      v110.size.width = v81;
      v110.size.height = v80;
      v97 = CGRectGetHeight(v110);
      v111.origin.x = x;
      v111.origin.y = y;
      v111.size.width = width;
      v111.size.height = height;
      v94 = CGRectGetWidth(v111);
      v112.origin.x = 0.0;
      v112.origin.y = 0.0;
      v112.size.width = v81;
      v112.size.height = v80;
      v91 = CGRectGetWidth(v112);
      v113.origin.x = x;
      v113.origin.y = y;
      v113.size.width = width;
      v113.size.height = height;
      v28 = CGRectGetHeight(v113);
      v114.origin.x = 0.0;
      v114.origin.y = 0.0;
      v114.size.width = v81;
      v114.size.height = v80;
      v29 = CGRectGetHeight(v114);
      if (!v14)
        break;
      v30 = v29;
      v88 = v28;
      v89 = MinY;
      v90 = v26;
      v31 = *(v12 - 3);
      v32 = *(v12 - 2);
      v33 = *(v12 - 1);
      v34 = *v12;
      v115.origin.x = sub_18576FC10();
      v35 = -CGRectGetMinX(v115);
      v116.origin.x = sub_18576FC10();
      v36 = -CGRectGetMinY(v116);
      v117.origin.x = v31;
      v117.origin.y = v32;
      v117.size.width = v33;
      v117.size.height = v34;
      v118 = CGRectOffset(v117, v35, v36);
      v37 = v118.origin.x;
      v38 = v118.origin.y;
      v39 = v118.size.width;
      v40 = v118.size.height;
      v87 = CGRectGetMinX(v118);
      v119.origin.x = 0.0;
      v119.origin.y = 0.0;
      v119.size.width = v81;
      v119.size.height = v80;
      v86 = CGRectGetWidth(v119);
      v120.origin.x = v37;
      v120.origin.y = v38;
      v120.size.width = v39;
      v120.size.height = v40;
      v85 = CGRectGetMinY(v120);
      v121.origin.x = 0.0;
      v121.origin.y = 0.0;
      v121.size.width = v81;
      v121.size.height = v80;
      v84 = CGRectGetHeight(v121);
      v122.origin.x = v37;
      v122.origin.y = v38;
      v122.size.width = v39;
      v122.size.height = v40;
      v83 = CGRectGetWidth(v122);
      v123.origin.x = 0.0;
      v123.origin.y = 0.0;
      v123.size.width = v81;
      v123.size.height = v80;
      v41 = CGRectGetWidth(v123);
      v124.origin.x = v37;
      v124.origin.y = v38;
      v124.size.width = v39;
      v124.size.height = v40;
      v42 = CGRectGetHeight(v124);
      v125.origin.x = 0.0;
      v125.origin.y = 0.0;
      v125.size.width = v81;
      v125.size.height = v80;
      v43 = CGRectGetHeight(v125);
      v82 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = sub_185646EF8(0, v15[2] + 1, 1, v15);
      v45 = v15[2];
      v44 = v15[3];
      if (v45 >= v44 >> 1)
        v15 = sub_185646EF8((_QWORD *)(v44 > 1), v45 + 1, 1, v15);
      v46 = MinX / v90;
      v47 = v89 / v97;
      v48 = v94 / v91;
      v49 = v83 / v41;
      v15[2] = v45 + 1;
      v50 = (double *)&v15[5 * v45];
      v50[4] = MinX / v90;
      v50[5] = v89 / v97;
      v50[6] = v87 / v86;
      v50[7] = v85 / v84;
      v50[8] = 0.0;
      v51 = v82 / v43;
      v126.origin.x = MinX / v90;
      v126.origin.y = v89 / v97;
      v126.size.width = v94 / v91;
      v126.size.height = v88 / v30;
      MaxX = CGRectGetMaxX(v126);
      v127.origin.x = v46;
      v127.origin.y = v89 / v97;
      v127.size.width = v94 / v91;
      v127.size.height = v88 / v30;
      v98 = CGRectGetMinY(v127);
      v128.origin.x = v87 / v86;
      v128.origin.y = v85 / v84;
      v128.size.width = v49;
      v128.size.height = v51;
      v95 = CGRectGetMaxX(v128);
      v129.origin.x = v87 / v86;
      v129.origin.y = v85 / v84;
      v129.size.width = v49;
      v129.size.height = v51;
      v52 = CGRectGetMinY(v129);
      v53 = v52;
      v55 = v15[2];
      v54 = v15[3];
      if (v55 >= v54 >> 1)
      {
        v92 = v52;
        v72 = sub_185646EF8((_QWORD *)(v54 > 1), v55 + 1, 1, v15);
        v53 = v92;
        v15 = v72;
      }
      v15[2] = v55 + 1;
      v56 = (CGFloat *)&v15[5 * v55];
      v56[4] = MaxX;
      v56[5] = v98;
      v56[6] = v95;
      v56[7] = v53;
      v56[8] = 0.0;
      v130.origin.x = v46;
      v130.origin.y = v47;
      v130.size.width = v48;
      v130.size.height = v88 / v30;
      v102 = CGRectGetMaxX(v130);
      v131.origin.x = v46;
      v131.origin.y = v47;
      v131.size.width = v48;
      v131.size.height = v88 / v30;
      MaxY = CGRectGetMaxY(v131);
      v132.origin.x = v87 / v86;
      v132.origin.y = v85 / v84;
      v132.size.width = v49;
      v132.size.height = v51;
      v96 = CGRectGetMaxX(v132);
      v133.origin.x = v87 / v86;
      v133.origin.y = v85 / v84;
      v133.size.width = v49;
      v133.size.height = v51;
      v57 = CGRectGetMaxY(v133);
      v58 = v57;
      v60 = v15[2];
      v59 = v15[3];
      if (v60 >= v59 >> 1)
      {
        v93 = v57;
        v73 = sub_185646EF8((_QWORD *)(v59 > 1), v60 + 1, 1, v15);
        v58 = v93;
        v15 = v73;
      }
      v15[2] = v60 + 1;
      v61 = (CGFloat *)&v15[5 * v60];
      v61[4] = v102;
      v61[5] = MaxY;
      v61[6] = v96;
      v61[7] = v58;
      v61[8] = 0.0;
      v134.origin.x = v46;
      v134.origin.y = v47;
      v134.size.width = v48;
      v134.size.height = v88 / v30;
      v103 = CGRectGetMinX(v134);
      v135.origin.x = v46;
      v135.origin.y = v47;
      v135.size.width = v48;
      v135.size.height = v88 / v30;
      v62 = CGRectGetMaxY(v135);
      v136.origin.x = v87 / v86;
      v136.origin.y = v85 / v84;
      v136.size.width = v49;
      v136.size.height = v51;
      v63 = CGRectGetMinX(v136);
      v137.origin.x = v87 / v86;
      v137.origin.y = v85 / v84;
      v137.size.width = v49;
      v137.size.height = v51;
      v64 = CGRectGetMaxY(v137);
      v66 = v15[2];
      v65 = v15[3];
      if (v66 >= v65 >> 1)
        v15 = sub_185646EF8((_QWORD *)(v65 > 1), v66 + 1, 1, v15);
      v15[2] = v66 + 1;
      v67 = (CGFloat *)&v15[5 * v66];
      v67[4] = v103;
      v67[5] = v62;
      v67[6] = v63;
      v67[7] = v64;
      v67[8] = 0.0;
      if (v11 == 0x100000000)
        goto LABEL_25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_18564702C(0, v3[2] + 1, 1, v3);
      v69 = v3[2];
      v68 = v3[3];
      if (v69 >= v68 >> 1)
        v3 = sub_18564702C((_QWORD *)(v68 > 1), v69 + 1, 1, v3);
      v70 = v11 + 3;
      v3[2] = v69 + 1;
      v71 = &v3[4 * v69];
      *((_DWORD *)v71 + 8) = v11;
      *(int8x8_t *)((char *)v71 + 36) = vorr_s8((int8x8_t)vdup_n_s32(v11), (int8x8_t)0x200000001);
      v11 += 4;
      *((_DWORD *)v71 + 11) = v70;
      *((int32x4_t *)v71 + 3) = vdupq_n_s32(0x447A0000u);
      --v14;
      v12 += 4;
      v13 += 4;
      if (!--v10)
        goto LABEL_23;
    }
    __break(1u);
LABEL_25:
    sub_186507DF8();
    __break(1u);
    goto LABEL_26;
  }
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_23:
  swift_bridgeObjectRelease();
  v74 = v15[2];
  v75 = v3[2];
  sub_1865074F8();
  v76 = objc_allocWithZone(MEMORY[0x1E0CD27D8]);
  v77 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  v78 = objc_msgSend(v76, sel_initWithVertexCount_vertices_faceCount_faces_depthNormalization_, v74, v15 + 4, v75, v3 + 4, v77);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return (uint64_t)v78;
}

uint64_t sub_185770540()
{
  uint64_t v0;

  sub_18518D718(*(_QWORD *)(v0 + 64));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TextLineWaveAnimator()
{
  return objc_opt_self();
}

_QWORD *destroy for TextLineWaveAnimator.EasingFunction(_QWORD *result)
{
  if (*result >= 0xFFFFFFFFuLL)
    return (_QWORD *)swift_release();
  return result;
}

uint64_t _s5UIKit20TextLineWaveAnimatorC14EasingFunctionOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_retain();
  }
  return a1;
}

unint64_t *assignWithCopy for TextLineWaveAnimator.EasingFunction(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

unint64_t *assignWithTake for TextLineWaveAnimator.EasingFunction(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TextLineWaveAnimator.EasingFunction()
{
  return &type metadata for TextLineWaveAnimator.EasingFunction;
}

uint64_t sub_185770720()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_185770744()
{
  return sub_18576F86C();
}

BOOL static UILayoutComponentResponse.UpdateOutputModelCallbackStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t UILayoutComponentResponse.UpdateOutputModelCallbackInfo.init(id:callbackStyle:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t result;

  v5 = *a2;
  v6 = sub_186506BBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(0);
  *(_BYTE *)(a3 + *(int *)(result + 20)) = v5;
  return result;
}

uint64_t type metadata accessor for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(uint64_t a1)
{
  return sub_1856DE74C(a1, (uint64_t *)&unk_1EDD8AAB8);
}

uint64_t sub_1857707D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t updated;

  v0 = type metadata accessor for UILayoutComponentResponse(0);
  __swift_allocate_value_buffer(v0, qword_1EDD8AA78);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EDD8AA78);
  updated = type metadata accessor for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 56))(v1, 1, 1, updated);
  return swift_storeEnumTagMultiPayload();
}

uint64_t static UILayoutComponentResponse.updateOutputModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EDD83D08 != -1)
    swift_once();
  v2 = type metadata accessor for UILayoutComponentResponse(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EDD8AA78);
  return sub_1856F1800(v3, a1);
}

uint64_t type metadata accessor for UILayoutComponentResponse(uint64_t a1)
{
  return sub_1856DE74C(a1, (uint64_t *)&unk_1EDD8AAA0);
}

uint64_t static UILayoutComponentResponse.updateOutputModel(callbackID:style:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v5;
  uint64_t v6;
  uint64_t updated;

  v5 = *a2;
  v6 = sub_186506BBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a1, v6);
  updated = type metadata accessor for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(0);
  *(_BYTE *)(a3 + *(int *)(updated + 20)) = v5;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 56))(a3, 0, 1, updated);
  type metadata accessor for UILayoutComponentResponse(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t UILayoutComponentResponse.UpdateOutputModelCallbackStyle.hash(into:)()
{
  return sub_1865080F8();
}

uint64_t UILayoutComponentResponse.UpdateOutputModelCallbackStyle.hashValue.getter()
{
  sub_1865080EC();
  sub_1865080F8();
  return sub_186508134();
}

uint64_t UILayoutComponentResponse.UpdateOutputModelCallbackInfo.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_186506BBC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t UILayoutComponentResponse.UpdateOutputModelCallbackInfo.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_186506BBC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*UILayoutComponentResponse.UpdateOutputModelCallbackInfo.id.modify())(_QWORD, _QWORD)
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t UILayoutComponentResponse.UpdateOutputModelCallbackInfo.callbackStyle.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t UILayoutComponentResponse.UpdateOutputModelCallbackInfo.callbackStyle.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(0);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t (*UILayoutComponentResponse.UpdateOutputModelCallbackInfo.callbackStyle.modify())(_QWORD, _QWORD)
{
  type metadata accessor for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(0);
  return signpost_c2_removePresentationModifier_end;
}

uint64_t UILayoutComponentResponse.UpdateOutputModelCallbackInfo.hash(into:)()
{
  sub_186506BBC();
  sub_1852478E0(qword_1EDD813D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_186507450();
  type metadata accessor for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(0);
  return sub_1865080F8();
}

uint64_t static UILayoutComponentResponse.UpdateOutputModelCallbackInfo.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t updated;
  char v5;

  if ((_s5UIKit16UITextEffectViewC0C2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
  {
    updated = type metadata accessor for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(0);
    v5 = *(_BYTE *)(a1 + *(int *)(updated + 20)) ^ *(_BYTE *)(a2 + *(int *)(updated + 20)) ^ 1;
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t UILayoutComponentResponse.UpdateOutputModelCallbackInfo.hashValue.getter()
{
  sub_1865080EC();
  sub_186506BBC();
  sub_1852478E0(qword_1EDD813D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_186507450();
  type metadata accessor for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(0);
  sub_1865080F8();
  return sub_186508134();
}

uint64_t sub_185770C04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_186506BBC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_185770C3C()
{
  sub_1865080EC();
  sub_186506BBC();
  sub_1852478E0(qword_1EDD813D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_186507450();
  sub_1865080F8();
  return sub_186508134();
}

uint64_t sub_185770CC4()
{
  sub_186506BBC();
  sub_1852478E0(qword_1EDD813D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_186507450();
  return sub_1865080F8();
}

uint64_t sub_185770D34()
{
  sub_1865080EC();
  sub_186506BBC();
  sub_1852478E0(qword_1EDD813D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_186507450();
  sub_1865080F8();
  return sub_186508134();
}

unint64_t sub_185770DBC()
{
  unint64_t result;

  result = qword_1EDD8AA90;
  if (!qword_1EDD8AA90)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UILayoutComponentResponse.UpdateOutputModelCallbackStyle, &type metadata for UILayoutComponentResponse.UpdateOutputModelCallbackStyle);
    atomic_store(result, (unint64_t *)&qword_1EDD8AA90);
  }
  return result;
}

uint64_t sub_185770E00()
{
  return sub_1852478E0(qword_1EDD813D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
}

uint64_t sub_185770E2C()
{
  return sub_1852478E0(&qword_1EDD8AA98, type metadata accessor for UILayoutComponentResponse.UpdateOutputModelCallbackInfo, (uint64_t)&protocol conformance descriptor for UILayoutComponentResponse.UpdateOutputModelCallbackInfo);
}

uint64_t sub_185770E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;

  if ((_s5UIKit16UITextEffectViewC0C2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
    v6 = *(_BYTE *)(a1 + *(int *)(a3 + 20)) ^ *(_BYTE *)(a2 + *(int *)(a3 + 20)) ^ 1;
  else
    v6 = 0;
  return v6 & 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for UILayoutComponentResponse(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t updated;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v12 = sub_186506BBC();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      updated = type metadata accessor for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(0);
      v9 = *(_QWORD *)(updated - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, updated))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD87850);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        v13 = sub_186506BBC();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        *((_BYTE *)a1 + *(int *)(updated + 20)) = *((_BYTE *)a2 + *(int *)(updated + 20));
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, updated);
      }
      goto LABEL_10;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for UILayoutComponentResponse(uint64_t a1)
{
  uint64_t result;
  uint64_t updated;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1
    || !(_DWORD)result
    && (updated = type metadata accessor for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(0),
        result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 48))(a1, 1, updated), !(_DWORD)result))
  {
    v4 = sub_186506BBC();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *initializeWithCopy for UILayoutComponentResponse(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t updated;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v10 = sub_186506BBC();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    updated = type metadata accessor for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(0);
    v8 = *(_QWORD *)(updated - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, updated))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD87850);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = sub_186506BBC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      *((_BYTE *)a1 + *(int *)(updated + 20)) = *((_BYTE *)a2 + *(int *)(updated + 20));
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, updated);
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void *assignWithCopy for UILayoutComponentResponse(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t updated;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1856F06B4((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = sub_186506BBC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      updated = type metadata accessor for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(0);
      v8 = *(_QWORD *)(updated - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, updated))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD87850);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        v11 = sub_186506BBC();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        *((_BYTE *)a1 + *(int *)(updated + 20)) = *((_BYTE *)a2 + *(int *)(updated + 20));
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, updated);
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *initializeWithTake for UILayoutComponentResponse(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t updated;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v10 = sub_186506BBC();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    updated = type metadata accessor for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(0);
    v8 = *(_QWORD *)(updated - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, updated))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD87850);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = sub_186506BBC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      *((_BYTE *)a1 + *(int *)(updated + 20)) = *((_BYTE *)a2 + *(int *)(updated + 20));
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, updated);
    }
    goto LABEL_8;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void *assignWithTake for UILayoutComponentResponse(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t updated;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1856F06B4((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = sub_186506BBC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      updated = type metadata accessor for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(0);
      v8 = *(_QWORD *)(updated - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, updated))
      {
        v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD87850);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        v11 = sub_186506BBC();
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        *((_BYTE *)a1 + *(int *)(updated + 20)) = *((_BYTE *)a2 + *(int *)(updated + 20));
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, updated);
      }
      goto LABEL_9;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_18577158C()
{
  unint64_t v0;
  unint64_t v1;

  sub_18577161C();
  if (v0 <= 0x3F)
  {
    sub_186506BBC();
    if (v1 <= 0x3F)
      swift_initEnumMetadataMultiPayload();
  }
}

void sub_18577161C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EDD8AAB0)
  {
    type metadata accessor for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(255);
    v0 = sub_186507AA4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EDD8AAB0);
  }
}

uint64_t storeEnumTagSinglePayload for UILayoutComponentResponse.UpdateOutputModelCallbackStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1857716BC + 4 * byte_186675AB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1857716F0 + 4 * asc_186675AB0[v4]))();
}

uint64_t sub_1857716F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1857716F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x185771700);
  return result;
}

uint64_t sub_18577170C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x185771714);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_185771718(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_185771720(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UILayoutComponentResponse.UpdateOutputModelCallbackStyle()
{
  return &type metadata for UILayoutComponentResponse.UpdateOutputModelCallbackStyle;
}

_QWORD *initializeBufferWithCopyOfBuffer for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_186506BBC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t initializeWithCopy for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_186506BBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_186506BBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_186506BBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for UILayoutComponentResponse.UpdateOutputModelCallbackInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_186506BBC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for UILayoutComponentResponse.UpdateOutputModelCallbackInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_185771940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_186506BBC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return v9 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for UILayoutComponentResponse.UpdateOutputModelCallbackInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1857719C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_186506BBC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_185771A3C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_186506BBC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t UILabel._intelligenceBaseClass.getter()
{
  return sub_1851F9080(0, &qword_1EDD8AAC8);
}

id sub_185771B00@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t KeyPath;
  uint64_t v14;
  id result;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v3 = sub_1865069AC();
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_186506910();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD82838);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_185771DA0(v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1)
  {
    v7 = v10;
    return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v7, v4);
  }
  sub_18519F088((uint64_t)v10, (uint64_t *)&unk_1EDD82838);
  v11 = objc_msgSend(v1, sel_text);
  if (v11)
  {
    v12 = v11;
    sub_1865074F8();

  }
  sub_1865069A0();
  sub_18650691C();
  KeyPath = swift_getKeyPath();
  MEMORY[0x1E0C80A78](KeyPath);
  *(&v19 - 2) = v14;
  swift_getKeyPath();
  result = objc_msgSend(v1, sel_font);
  if (result)
  {
    v16 = result;
    objc_msgSend(result, sel_pointSize);
    v18 = v17;

    v19 = v18;
    v20 = 0;
    sub_1852478E0(&qword_1EDD81480, MEMORY[0x1E0DC15E8], MEMORY[0x1E0DC15E0]);
    sub_1865068A4();
    return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v7, v4);
  }
  __break(1u);
  return result;
}

id sub_185771DA0@<X0>(char *a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id result;
  void *v13;
  unsigned int v14;
  id v15;
  void *v16;
  id v17;
  void (*v18)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char isEscapingClosureAtFileLocation;
  uint64_t v23;
  id v24;
  uint64_t v25;
  _QWORD aBlock[7];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD82838);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_186506910();
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)&v9 = MEMORY[0x1E0C80A78](v7).n128_u64[0];
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(v2, sel__content, v9);
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  v13 = result;
  v14 = objc_msgSend(result, sel_isAttributed);

  if (!v14)
    return (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, 1, 1, v7);
  v15 = objc_msgSend(v2, sel__synthesizedAttributedText);
  if (!v15)
    return (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, 1, 1, v7);
  v16 = v15;
  swift_getKeyPath();
  sub_186506F94();
  sub_1852478E0(&qword_1EDD81488, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1620], MEMORY[0x1E0DC15D8]);
  v17 = v16;
  sub_186506934();
  v18 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56);
  v18(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v6, v7);
    v25 = *(_QWORD *)off_1E1678D90;
    v24 = objc_msgSend(v17, sel_length);
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v11;
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = sub_1857726DC;
    *(_QWORD *)(v20 + 24) = v19;
    aBlock[4] = sub_1855E581C;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18573ABC4;
    aBlock[3] = &block_descriptor_71;
    v21 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v17, sel_enumerateAttribute_inRange_options_usingBlock_, v25, 0, v24, 0, v21);

    _Block_release(v21);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    result = (id)swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, v11, v7);
      v18(a1, 0, 1, v7);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      return (id)swift_release();
    }
    __break(1u);
    goto LABEL_11;
  }

  sub_18519F088((uint64_t)v6, (uint64_t *)&unk_1EDD82838);
  return (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(a1, 1, 1, v7);
}

uint64_t sub_18577210C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  void *v22;
  uint64_t *v23;
  char *v24;
  uint64_t KeyPath;
  uint64_t v26;
  void *v27;
  void (*v28)(_BYTE *, _QWORD);
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char v32;
  _BYTE v33[24];
  uint64_t v34;

  v29 = a2;
  v30 = a3;
  v7 = sub_186506910();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD814A8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD814A0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v29 - v19;
  sub_18519F0C4(a1, (uint64_t)v33, &qword_1ECD75B20);
  if (v34)
  {
    sub_1851F9080(0, (unint64_t *)&qword_1ECD74A30);
    result = swift_dynamicCast();
    if ((result & 1) == 0)
      return result;
    v22 = v31;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a5, v7);
    sub_1852478E0(&qword_1EDD81478, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF240], MEMORY[0x1E0CAF230]);
    sub_1865078A0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {

      v23 = &qword_1EDD814A8;
      v24 = v13;
    }
    else
    {
      sub_1856C3B5C((uint64_t)v13, (uint64_t)v20);
      sub_18519F0C4((uint64_t)v20, (uint64_t)v17, &qword_1EDD814A0);
      KeyPath = swift_getKeyPath();
      MEMORY[0x1E0C80A78](KeyPath);
      *(&v29 - 2) = v26;
      swift_getKeyPath();
      objc_msgSend(v22, sel_pointSize, v29, v30);
      v31 = v27;
      v32 = 0;
      sub_1856C3C0C();
      v28 = (void (*)(_BYTE *, _QWORD))sub_18650694C();
      sub_1852478E0(&qword_1EDD81480, MEMORY[0x1E0DC15E8], MEMORY[0x1E0DC15E0]);
      sub_186506A00();
      v28(v33, 0);

      sub_18519F088((uint64_t)v17, &qword_1EDD814A0);
      v24 = v20;
      v23 = &qword_1EDD814A0;
    }
  }
  else
  {
    v23 = &qword_1ECD75B20;
    v24 = v33;
  }
  return sub_18519F088((uint64_t)v24, v23);
}

uint64_t _sSo7UILabelC5UIKitE27_intelligenceCollectContent2in9collectorySo6CGRectV_21UIIntelligenceSupport0I16ElementCollectorCtF_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a1;
  v1 = sub_186507024();
  v27 = *(_QWORD *)(v1 - 8);
  v28 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD81498);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD81490);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_186506FB8();
  v10 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_186506910();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v26 - v18;
  sub_185771B00((uint64_t)&v26 - v18);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
  v20 = sub_186506FAC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 1, 1, v20);
  v21 = sub_186507060();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v6, 1, 1, v21);
  sub_186506F70();
  v22 = v26;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v3, v12, v26);
  v24 = v27;
  v23 = v28;
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v3, *MEMORY[0x1E0DC16B8], v28);
  sub_186506E2C();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v3, v23);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
}

uint64_t sub_185772664()
{
  return sub_1852478E0(&qword_1EDD81480, MEMORY[0x1E0DC15E8], MEMORY[0x1E0DC15E0]);
}

uint64_t sub_185772694()
{
  return 8;
}

uint64_t sub_1857726A0()
{
  return swift_release();
}

uint64_t sub_1857726A8(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_1857726BC(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1857726CC()
{
  return swift_deallocObject();
}

uint64_t sub_1857726DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_18577210C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_1857726E4()
{
  return swift_deallocObject();
}

char *sub_1857726F4(void *a1, double a2, double a3, double a4, double a5)
{
  char *v5;
  char *v11;
  id v12;
  char *v13;
  id v14;
  id v15;
  char *v16;
  id v17;
  objc_super v19;

  v11 = &v5[OBJC_IVAR____TtC5UIKit23_UIGradientCarouselView_animationKey];
  *(_QWORD *)v11 = 0xD000000000000010;
  *((_QWORD *)v11 + 1) = 0x8000000186691600;
  *(_QWORD *)&v5[OBJC_IVAR____TtC5UIKit23_UIGradientCarouselView_configuration] = a1;
  v12 = objc_allocWithZone(MEMORY[0x1E0CD2790]);
  v13 = v5;
  v14 = a1;
  v15 = objc_msgSend(v12, sel_init);
  *(_QWORD *)&v13[OBJC_IVAR____TtC5UIKit23_UIGradientCarouselView_gradientLayer] = v15;

  v19.receiver = v13;
  v19.super_class = (Class)type metadata accessor for _UIGradientCarouselView();
  v16 = (char *)objc_msgSendSuper2(&v19, sel_initWithFrame_, a2, a3, a4, a5);
  v17 = objc_msgSend(v16, sel_layer);
  objc_msgSend(v17, sel_addSublayer_, *(_QWORD *)&v16[OBJC_IVAR____TtC5UIKit23_UIGradientCarouselView_gradientLayer]);

  objc_msgSend(v16, sel_setClipsToBounds_, 1);
  sub_185773860();
  sub_185772978();

  return v16;
}

void sub_185772978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  _BOOL4 v25;
  double v26;
  double v27;
  double v28;
  id v29;
  uint64_t v30;
  id v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;

  v1 = v0;
  v2 = OBJC_IVAR____TtC5UIKit23_UIGradientCarouselView_configuration;
  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC5UIKit23_UIGradientCarouselView_configuration), sel_colorPalette));
  v4 = sub_185772D34();

  v5 = OBJC_IVAR____TtC5UIKit23_UIGradientCarouselView_gradientLayer;
  v6 = *(id *)(v1 + OBJC_IVAR____TtC5UIKit23_UIGradientCarouselView_gradientLayer);
  v7 = objc_msgSend(v4, sel_colors);
  sub_1851F9080(0, (unint64_t *)&qword_1ECD74900);
  v8 = sub_186507654();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_186507E58();
    swift_bridgeObjectRelease();
    if (v9)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v9)
    goto LABEL_13;
LABEL_3:
  v34 = MEMORY[0x1E0DEE9D8];
  sub_1855B37D8(0, v9 & ~(v9 >> 63), 0);
  if (v9 < 0)
  {
    __break(1u);
    return;
  }
  v29 = v6;
  v30 = v2;
  v31 = v4;
  v10 = 0;
  v11 = v34;
  do
  {
    if ((v8 & 0xC000000000000001) != 0)
      v12 = (id)MEMORY[0x186DC4CB4](v10, v8);
    else
      v12 = *(id *)(v8 + 8 * v10 + 32);
    v13 = v12;
    v14 = objc_msgSend(v12, sel_CGColor, v29, v30, v31, (_QWORD)v32);
    type metadata accessor for CGColor(0);
    v33 = v15;

    *(_QWORD *)&v32 = v14;
    v34 = v11;
    v17 = *(_QWORD *)(v11 + 16);
    v16 = *(_QWORD *)(v11 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_1855B37D8(v16 > 1, v17 + 1, 1);
      v11 = v34;
    }
    ++v10;
    *(_QWORD *)(v11 + 16) = v17 + 1;
    sub_1850F6908(&v32, (_OWORD *)(v11 + 32 * v17 + 32));
  }
  while (v9 != v10);
  swift_bridgeObjectRelease();
  v2 = v30;
  v4 = v31;
  v6 = v29;
LABEL_14:
  v18 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setColors_, v18);

  v19 = *(id *)(v1 + v5);
  v20 = objc_msgSend(v4, sel_locations);
  objc_msgSend(v19, sel_setLocations_, v20);

  objc_msgSend(*(id *)(v1 + v5), sel_setType_, *MEMORY[0x1E0CD2F50]);
  objc_msgSend(*(id *)(v1 + v5), sel_setStartPoint_, 0.5, 0.5);
  objc_msgSend(*(id *)(v1 + v5), sel_setEndPoint_, 0.5, 1.0);
  sub_185773564();
  v21 = *(id *)(v1 + v5);
  v22 = (void *)sub_1865074D4();
  v23 = objc_msgSend(v21, sel_animationForKey_, v22);

  if (v23)
  {
    objc_opt_self();
    v24 = (void *)swift_dynamicCastObjCClass();
    v25 = v24 != 0;
    if (v24)
    {
      objc_msgSend(v24, sel_duration);
      v27 = v26;
    }
    else
    {
      v27 = 0.0;
    }

  }
  else
  {
    v25 = 0;
    v27 = 0.0;
  }
  objc_msgSend(*(id *)(v1 + v2), sel_duration);
  if (!v25 || v27 != v28)
    sub_185773860();

}

id sub_185772D34()
{
  id v0;
  unint64_t v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  char v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  uint64_t v29;
  id result;
  uint64_t v31;
  id v32;
  void *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  void *v46;
  void *v47;
  id v48;
  uint64_t v49;
  unint64_t v50;

  swift_getObjectType();
  v0 = objc_msgSend(v48, sel_colors);
  sub_1851F9080(0, (unint64_t *)&qword_1ECD74900);
  v1 = sub_186507654();

  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_186507E58();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v2 < 2)
    return v48;
  v3 = objc_msgSend(v48, sel_colors);
  v4 = sub_186507654();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = (void *)sub_186507E58();
    v5 = swift_bridgeObjectRelease();
    if (!v6)
      goto LABEL_10;
  }
  else
  {
    v6 = *(void **)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v6)
      goto LABEL_10;
  }
  if ((v4 & 0xC000000000000001) != 0)
  {
    v7 = (id)MEMORY[0x186DC4CB4](0, v4);
  }
  else
  {
    if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_64;
    }
    v7 = *(id *)(v4 + 32);
  }
  v6 = v7;
LABEL_10:
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v48, sel_colors);
  v4 = sub_186507654();

  if (!(v4 >> 62))
  {
    v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_12;
LABEL_27:
    swift_bridgeObjectRelease();
    if (!v6)
      return v48;
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  v9 = sub_186507E58();
  swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_27;
LABEL_12:
  v5 = v9 - 1;
  if (__OFSUB__(v9, 1))
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if ((v4 & 0xC000000000000001) != 0)
  {
LABEL_65:
    v10 = (id)MEMORY[0x186DC4CB4](v5, v4);
    goto LABEL_17;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_67;
  }
  if (v5 >= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  v10 = *(id *)(v4 + 8 * v5 + 32);
LABEL_17:
  v11 = v10;
  swift_bridgeObjectRelease();
  if (!v6)
  {
    if (!v11)
      return v48;
    goto LABEL_29;
  }
  if (v11)
  {
    v12 = v6;
    v13 = sub_186507A44();

    if ((v13 & 1) != 0)
      return v48;
    goto LABEL_30;
  }
LABEL_28:
  v11 = v6;
LABEL_29:

LABEL_30:
  v14 = objc_msgSend(v48, sel_colors);
  v15 = sub_186507654();

  v50 = v15;
  if ((v15 & 0xC000000000000001) != 0)
    goto LABEL_61;
  if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v16 = *(id *)(v15 + 32);
    goto LABEL_33;
  }
LABEL_68:
  __break(1u);
LABEL_69:
  sub_186507690();
LABEL_34:
  sub_1865076D8();
  sub_18650766C();
  if (v50 >> 62)
  {
    swift_bridgeObjectRetain();
    v31 = sub_186507E58();
    swift_bridgeObjectRelease();
    if (!v31)
      goto LABEL_74;
    swift_bridgeObjectRetain();
    v17 = sub_186507E58();
    swift_bridgeObjectRelease();
    v18 = v17 - 1;
    if (!__OFSUB__(v17, 1))
      goto LABEL_37;
  }
  else
  {
    v17 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v17)
      goto LABEL_74;
    v18 = v17 - 1;
    if (!__OFSUB__(v17, 1))
    {
LABEL_37:
      if (v18 < 1)
        goto LABEL_74;
      v19 = 0;
      v20 = v17 + 0x7FFFFFFFFFFFFFFFLL;
      while (1)
      {
        v21 = v17 - 1;
        v15 = v50;
        if ((v50 & 0xC000000000000001) != 0)
        {
          v24 = MEMORY[0x186DC4CB4](v19, v50);
          v25 = (id)MEMORY[0x186DC4CB4](v17 - 1, v15);
        }
        else
        {
          v22 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v19 >= v22)
          {
            __break(1u);
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            swift_bridgeObjectRetain();
            MEMORY[0x186DC4CB4](0, v15);
            v16 = (id)swift_bridgeObjectRelease();
LABEL_33:
            MEMORY[0x186DC4654](v16);
            if (*(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              goto LABEL_69;
            goto LABEL_34;
          }
          v23 = *(id *)(v50 + 8 * v19 + 32);
          if (v21 >= v22)
            goto LABEL_58;
          v24 = (uint64_t)v23;
          v25 = *(id *)(v15 + 8 * v17 + 24);
        }
        v26 = v25;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v15 < 0
          || (v15 & 0x4000000000000000) != 0)
        {
          sub_1857854A8(v15);
        }
        v27 = *(void **)((v15 & 0xFFFFFFFFFFFFFF8) + 8 * v19 + 0x20);
        *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 8 * v19 + 0x20) = v26;

        sub_18650766C();
        v15 = v50;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v15 < 0
          || (v15 & 0x4000000000000000) != 0)
        {
          sub_1857854A8(v15);
        }
        if (v21 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_59;
        v28 = *(void **)((v15 & 0xFFFFFFFFFFFFFF8) + 8 * v17 + 0x18);
        *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 8 * v17 + 0x18) = v24;

        v15 = (uint64_t)&v50;
        sub_18650766C();
        if (v20 == v19)
          goto LABEL_60;
        ++v19;
        v29 = v17 - 2;
        --v17;
        if (v19 >= v29)
          goto LABEL_74;
      }
    }
  }
  __break(1u);
LABEL_74:
  v32 = objc_msgSend(v48, sel_locations);
  if (!v32)
  {
    v40 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    v41 = (void *)sub_18650763C();
    swift_bridgeObjectRelease();
    v42 = objc_msgSend(v40, sel_initWithColors_, v41);

    return v42;
  }
  v33 = v32;
  sub_1851F9080(0, (unint64_t *)&qword_1ECD75368);
  v34 = sub_186507654();

  if (!(v34 >> 62))
  {
    v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!__OFADD__(v35, 1))
      goto LABEL_77;
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  swift_bridgeObjectRetain();
  v35 = sub_186507E58();
  if (__OFADD__(v35, 1))
    goto LABEL_92;
LABEL_77:
  if (!v35)
  {
    swift_bridgeObjectRelease();
    v39 = MEMORY[0x1E0DEE9D8];
    goto LABEL_87;
  }
  v49 = MEMORY[0x1E0DEE9D8];
  result = (id)sub_186507CFC();
  if ((v35 & 0x8000000000000000) == 0)
  {
    v36 = 0;
    do
    {
      if ((v34 & 0xC000000000000001) != 0)
        v37 = (id)MEMORY[0x186DC4CB4](v36, v34);
      else
        v37 = *(id *)(v34 + 8 * v36 + 32);
      v38 = v37;
      ++v36;
      objc_msgSend(v37, sel_doubleValue);
      sub_186506CC4();

      sub_186507CD8();
      sub_186507D08();
      sub_186507D14();
      sub_186507CE4();
    }
    while (v35 != v36);
    v39 = v49;
    swift_bridgeObjectRelease();
LABEL_87:
    swift_bridgeObjectRelease();
    sub_186507A2C();
    MEMORY[0x186DC4654]();
    if (*(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(_QWORD *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_88:
      sub_1865076D8();
      sub_18650766C();
      v43 = objc_msgSend(v48, sel_colorSpaceName);
      sub_1865074F8();

      v44 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      v45 = (void *)sub_18650763C();
      swift_bridgeObjectRelease();
      v46 = (void *)sub_18650763C();
      swift_bridgeObjectRelease();
      v47 = (void *)sub_1865074D4();
      swift_bridgeObjectRelease();
      v42 = objc_msgSend(v44, sel_initWithColors_locations_colorSpaceName_, v45, v46, v47);

      return v42;
    }
LABEL_93:
    sub_186507690();
    goto LABEL_88;
  }
  __break(1u);
  return result;
}

void sub_185773564()
{
  char *v0;
  uint64_t v1;
  double Width;
  double Height;
  double v4;
  id v5;
  id v6;
  BOOL v7;
  uint64_t v8;
  unsigned int v9;
  char v10;
  CGFloat MidX;
  double v12;
  uint64_t v13;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  double v24;
  double v25;
  CGFloat MidY;
  double v27;
  uint64_t v28;
  id v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;

  v1 = OBJC_IVAR____TtC5UIKit23_UIGradientCarouselView_gradientLayer;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5UIKit23_UIGradientCarouselView_gradientLayer], sel_bounds);
  Width = CGRectGetWidth(v33);
  objc_msgSend(*(id *)&v0[v1], sel_bounds);
  Height = CGRectGetHeight(v34);
  if (Width > Height)
    Height = Width;
  v4 = Height * 0.5;
  if (Height * 0.5 > 0.0)
  {
    v5 = objc_msgSend(v0, sel_traitCollection);
    v6 = objc_msgSend(v5, sel_layoutDirection);

    v7 = v6 != (id)1;
    v8 = OBJC_IVAR____TtC5UIKit23_UIGradientCarouselView_configuration;
    LOBYTE(v6) = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5UIKit23_UIGradientCarouselView_configuration], sel_reverse);
    v9 = objc_msgSend(*(id *)&v0[v8], sel_reverse);
    v10 = v7 ^ v6;
    switch((unint64_t)objc_msgSend(*(id *)&v0[v8], sel_direction))
    {
      case 0uLL:
        objc_msgSend(v0, sel_bounds);
        MidX = CGRectGetMidX(v35);
        v12 = sqrt(v4 * v4 - MidX * MidX);
        objc_msgSend(v0, sel_bounds);
        if ((v10 & 1) != 0)
          v17 = v12 + CGRectGetMinY(*(CGRect *)&v13);
        else
          v17 = CGRectGetMaxY(*(CGRect *)&v13) - v12;
        v32 = *(id *)&v0[v1];
        objc_msgSend(v0, sel_bounds);
        objc_msgSend(v32, sel_setPosition_, CGRectGetMidX(v40), v17);
        goto LABEL_22;
      case 1uLL:
        objc_msgSend(v0, sel_bounds);
        MidY = CGRectGetMidY(v39);
        v27 = sqrt(v4 * v4 - MidY * MidY);
        objc_msgSend(v0, sel_bounds);
        if (v9)
          v25 = v27 + CGRectGetMinX(*(CGRect *)&v28);
        else
          v25 = CGRectGetMaxX(*(CGRect *)&v28) - v27;
        v32 = *(id *)&v0[v1];
        goto LABEL_21;
      case 2uLL:
        v18 = v4 / 1.41421356;
        objc_msgSend(v0, sel_bounds);
        v19 = v4 / 1.41421356 + CGRectGetMinX(v36);
        goto LABEL_10;
      case 3uLL:
        v18 = v4 / 1.41421356;
        objc_msgSend(v0, sel_bounds);
        v19 = CGRectGetMaxX(v37) - v4 / 1.41421356;
LABEL_10:
        objc_msgSend(v0, sel_bounds);
        if ((v10 & 1) != 0)
          v24 = v18 + CGRectGetMinY(*(CGRect *)&v20);
        else
          v24 = CGRectGetMaxY(*(CGRect *)&v20) - v18;
        objc_msgSend(*(id *)&v0[v1], sel_setPosition_, v19, v24);
        break;
      default:
        v32 = *(id *)&v0[v1];
        objc_msgSend(v0, sel_bounds);
        v25 = CGRectGetMidX(v38);
LABEL_21:
        objc_msgSend(v0, sel_bounds);
        objc_msgSend(v32, sel_setPosition_, v25, CGRectGetMidY(v41));
LABEL_22:

        break;
    }
  }
}

void sub_185773860()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  double v11;
  void *v12;
  id v13;
  id v14;
  id v15;

  v1 = (void *)sub_1865074D4();
  v2 = objc_msgSend((id)objc_opt_self(), sel_animationWithKeyPath_, v1);

  v3 = *MEMORY[0x1E0CD31C0];
  v4 = (void *)objc_opt_self();
  v5 = v2;
  v6 = objc_msgSend(v4, sel_functionWithName_, v3);
  objc_msgSend(v5, sel_setValueFunction_, v6);

  v7 = (void *)sub_186507810();
  objc_msgSend(v5, sel_setFromValue_, v7);

  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, 6.28318531);
  objc_msgSend(v5, sel_setToValue_, v8);

  v9 = *(void **)(v0 + OBJC_IVAR____TtC5UIKit23_UIGradientCarouselView_configuration);
  v10 = v5;
  objc_msgSend(v9, sel_duration);
  objc_msgSend(v10, sel_setDuration_);

  LODWORD(v11) = 2139095040;
  objc_msgSend(v10, sel_setRepeatCount_, v11);
  objc_msgSend(v10, sel_setFillMode_, *MEMORY[0x1E0CD2B60]);
  objc_msgSend(v10, sel_setRemovedOnCompletion_, 0);
  v12 = *(void **)(v0 + OBJC_IVAR____TtC5UIKit23_UIGradientCarouselView_gradientLayer);
  v13 = v10;
  v14 = v12;
  v15 = (id)sub_1865074D4();
  objc_msgSend(v14, sel_addAnimation_forKey_, v13, v15);

}

id sub_185773AAC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _UIGradientCarouselView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for _UIGradientCarouselView()
{
  return objc_opt_self();
}

void sub_185773B48(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[192];
  uint64_t v8;
  unsigned __int8 v9;

  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v4);
  swift_unknownObjectWeakInit();
  v7[8] = 0;
  (*(void (**)(uint64_t *__return_ptr, _BYTE *, uint64_t, uint64_t))(v5 + 8))(&v8, v7, v4, v5);
  sub_18563E558((uint64_t)v7);
  v6 = v9;
  objc_msgSend(objc_allocWithZone((Class)UITargetedPreview), sel_initWithView_, a3);
  __asm { BR              X10 }
}

id sub_185773C38()
{
  void *v0;
  unsigned int v1;
  uint64_t v2;
  void *v3;
  void *v4;
  int v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  double v25;
  __int128 v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Class isa;
  id v38;
  id v39;
  uint64_t v41;
  int v42;
  id v43;
  unsigned int v44;
  void *v45;
  void *v46;
  uint64_t v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  _QWORD v56[7];
  char v57;
  char v58;
  _OWORD v59[6];
  _BYTE v60[25];
  _OWORD v61[4];
  __int128 v62;
  __int128 v63;
  _BYTE v64[25];
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  _BYTE v71[25];
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  _BYTE v86[25];

  v7 = v3;
  v55 = v3;
  v46 = v4;
  v47 = v2;
  v45 = v0;
  v44 = v1;
  v48 = v3;
  if (v5 == 255)
  {
    v18 = 0;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    v19 = 0;
    v20 = 0;
    v24 = -1;
  }
  else
  {
    v72 = v49;
    v73 = v50;
    v74 = v51;
    v75 = v52;
    v76 = v53;
    v77 = v54;
    v41 = v6;
    v78 = v6;
    v42 = v5;
    v79 = v5;
    v43 = v4;
    v8 = objc_msgSend(v43, sel__outermostLayer);
    if (!v8)
    {
      __break(1u);
      JUMPOUT(0x185774190);
    }
    v9 = v8;
    sub_1855BA434((uint64_t)v56);
    v10 = (void *)v56[0];
    v11 = v56[1];
    v12 = v56[2];
    v13 = v56[3];
    v15 = v56[4];
    v14 = v56[5];
    v16 = v56[6];
    v17 = v57;
    objc_msgSend(v9, sel_bounds);
    v58 = 0;
    UIShape.resolve(in:)();
    sub_185228168(v10, v11, v12, v13, v15, v14, v16, v17);

    v59[4] = v69;
    v59[5] = v70;
    *(_OWORD *)v60 = *(_OWORD *)v71;
    *(_OWORD *)&v60[9] = *(_OWORD *)&v71[9];
    v59[0] = v65;
    v59[1] = v66;
    v59[2] = v67;
    v59[3] = v68;
    UIShape.resolve(in:)();
    sub_18570CE14((uint64_t)v59);
    v62 = v84;
    v63 = v85;
    *(_OWORD *)v64 = *(_OWORD *)v86;
    *(_OWORD *)&v64[9] = *(_OWORD *)&v86[9];
    v61[0] = v80;
    v61[1] = v81;
    v61[2] = v82;
    v61[3] = v83;
    v18 = (void *)v84;
    v19 = *(_QWORD *)v86;
    if ((v86[24] & 1) != 0)
    {
      v20 = 1;
      sub_1855B8D98((id)v62, *((uint64_t *)&v84 + 1), v85, *((uint64_t *)&v85 + 1), *(uint64_t *)v64, *(uint64_t *)&v64[8], *(uint64_t *)&v64[16], 1);
      v5 = v42;
      sub_185223490(v49, v50, v51, v52, v53, v54, v41, v42);
      sub_18570CE14((uint64_t)v61);
      v21 = 0;
      v22 = 0;
      v23 = 0;
      v19 = 0;
      v24 = 0;
    }
    else
    {
      v25 = *((double *)&v62 + 1);
      v26 = v63;
      v27 = objc_msgSend(v48, sel_target);
      v28 = objc_msgSend(v27, sel_container);

      objc_msgSend(v43, sel_convertRect_toCoordinateSpace_, v28, *(double *)&v18, v25, v26);
      v30 = v29;
      v32 = v31;
      v34 = v33;
      v36 = v35;

      v5 = v42;
      sub_185223490(v49, v50, v51, v52, v53, v54, v41, v42);
      sub_18570CE14((uint64_t)v61);
      v20 = 0;
      v18 = v30;
      v21 = v32;
      v22 = v34;
      v23 = v36;
      v24 = 1;
    }
  }
  *(_QWORD *)&v80 = v55;
  WORD4(v80) = 0;
  BYTE10(v80) = 64;
  sub_1857742B0(v18, v21, v22, v23, v19, v24);
  isa = UIPointerEffect._bridgeToObjectiveC()().super.isa;
  if (v5 == 255)
  {
    v38 = 0;
  }
  else if (v20)
  {
    v38 = objc_msgSend((id)objc_opt_self(), sel_shapeWithPath_, v18);
    sub_1856A7A74(v18, v21, v22, v23, v19, v24);
  }
  else
  {
    v38 = objc_msgSend((id)objc_opt_self(), sel_shapeWithRoundedRect_cornerRadius_, *(double *)&v18, *(double *)&v21, *(double *)&v22, *(double *)&v23, *(double *)&v19);
  }
  v39 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_styleWithEffect_shape_, isa, v38);

  sub_1856A7A74(v18, v21, v22, v23, v19, v24);
  sub_1856E2B9C(v45, v44);

  __swift_destroy_boxed_opaque_existential_0Tm(v47);
  return v39;
}

id sub_1857742B0(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 != -1)
    return sub_1856A7F44(result, a2, a3, a4, a5, a6);
  return result;
}

uint64_t UIWindowSceneStandardPlacement.init()@<X0>(uint64_t *a1@<X8>)
{
  id v2;
  uint64_t result;

  v2 = objc_msgSend((id)objc_opt_self(), sel_standardPlacement);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD8AAE8);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v2;
  *a1 = result;
  return result;
}

void UIWindowSceneStandardPlacement.hash(into:)()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)v0 + 16);
  swift_retain();
  v2 = v1;
  sub_186507A50();
  swift_release();

}

id static UIWindowSceneStandardPlacement.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_isEqual_, *(_QWORD *)(*(_QWORD *)a2 + 16));
}

uint64_t UIWindowSceneStandardPlacement.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *v0;
  sub_1865080EC();
  v2 = *(void **)(v1 + 16);
  swift_retain();
  v3 = v2;
  sub_186507A50();
  swift_release();

  return sub_186508134();
}

uint64_t static UIWindowScenePlacement<>.standard()@<X0>(uint64_t *a1@<X8>)
{
  id v2;
  uint64_t result;

  v2 = objc_msgSend((id)objc_opt_self(), sel_standardPlacement);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD8AAE8);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v2;
  *a1 = result;
  return result;
}

unint64_t sub_185774470(uint64_t a1)
{
  unint64_t result;

  result = sub_185774494();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_185774494()
{
  unint64_t result;

  result = qword_1EDD8AAF0;
  if (!qword_1EDD8AAF0)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UIWindowSceneStandardPlacement, &type metadata for UIWindowSceneStandardPlacement);
    atomic_store(result, (unint64_t *)&qword_1EDD8AAF0);
  }
  return result;
}

unint64_t sub_1857744DC()
{
  unint64_t result;

  result = qword_1EDD8AAF8;
  if (!qword_1EDD8AAF8)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UIWindowSceneStandardPlacement, &type metadata for UIWindowSceneStandardPlacement);
    atomic_store(result, (unint64_t *)&qword_1EDD8AAF8);
  }
  return result;
}

unint64_t sub_185774524()
{
  unint64_t result;

  result = qword_1EDD8AB00;
  if (!qword_1EDD8AB00)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UIWindowSceneStandardPlacement, &type metadata for UIWindowSceneStandardPlacement);
    atomic_store(result, (unint64_t *)&qword_1EDD8AB00);
  }
  return result;
}

ValueMetadata *type metadata accessor for UIWindowSceneStandardPlacement()
{
  return &type metadata for UIWindowSceneStandardPlacement;
}

void sub_185774578(double a1, double a2, double a3, double a4)
{
  double *v4;
  double v5;
  double v6;
  double v7;
  double v8;

  v5 = *v4;
  if (*v4 >= a1)
    a3 = a4;
  if ((*(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL) != 0)
    v6 = *v4;
  else
    v6 = a2;
  if ((~*(_QWORD *)&a2 & 0x7FF0000000000000) != 0)
    v6 = a2;
  if (v5 > a2)
    v7 = v6;
  else
    v7 = *v4;
  if ((*(_QWORD *)&v7 & 0xFFFFFFFFFFFFFLL) != 0)
    v8 = a1;
  else
    v8 = v7;
  if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) != 0)
    v8 = v7;
  if (v7 >= a1)
    a1 = v8;
  if (a3 != 0.0)
    a1 = a1 + a3 * (1.0 - 1.0 / ((v5 - a1) / a3 * 0.55 + 1.0));
  *v4 = a1;
}

void sub_185774600(double a1, double a2)
{
  double *v2;
  double v3;

  v3 = *v2;
  if (*v2 > a2)
  {
    if ((*(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL) == 0)
      v3 = a2;
    if ((~*(_QWORD *)&a2 & 0x7FF0000000000000) != 0)
      v3 = a2;
  }
  if (v3 < a1)
    goto LABEL_12;
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) != 0)
  {
    a1 = v3;
LABEL_12:
    *v2 = a1;
    return;
  }
  if ((*(_QWORD *)&v3 & 0xFFFFFFFFFFFFFLL) == 0)
    a1 = v3;
  *v2 = a1;
}

uint64_t sub_185774658@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_1857746AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_185776ADC(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

id UIShadowProperties.color.getter()
{
  id *v0;

  return *v0;
}

void sub_1857746F0(id *a1, id *location)
{
  unint64_t v3;

  objc_storeStrong(location, *a1);
  v3 = (unint64_t)location[6];
  if ((v3 & 1) == 0)
    location[6] = (id)(v3 | 1);
}

void UIShadowProperties.color.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)v1 = a1;
  v3 = *(_QWORD *)(v1 + 48);
  if ((v3 & 1) == 0)
    *(_QWORD *)(v1 + 48) = v3 | 1;
}

void (*UIShadowProperties.color.modify(void **a1))(uint64_t a1, char a2)
{
  void **v1;
  void *v2;
  id v3;

  v2 = *v1;
  *a1 = *v1;
  a1[1] = v1;
  v3 = v2;
  return sub_185774798;
}

void sub_185774798(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v3 = *(void **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(void **)v2;
  if ((a2 & 1) != 0)
  {
    v7 = v3;

    *(_QWORD *)v2 = v7;
    v5 = *(_QWORD *)(v2 + 48);
    if ((v5 & 1) == 0)
      *(_QWORD *)(v2 + 48) = v5 | 1;

  }
  else
  {

    *(_QWORD *)v2 = v3;
    v6 = *(_QWORD *)(v2 + 48);
    if ((v6 & 1) == 0)
      *(_QWORD *)(v2 + 48) = v6 | 1;
  }
}

double UIShadowProperties.opacity.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void UIShadowProperties.opacity.setter(double a1)
{
  uint64_t v1;
  uint64_t v2;

  *(double *)(v1 + 8) = a1;
  v2 = *(_QWORD *)(v1 + 48);
  if ((v2 & 2) == 0)
    *(_QWORD *)(v1 + 48) = v2 | 2;
}

_QWORD *(*UIShadowProperties.opacity.modify(_QWORD *a1))(_QWORD *result)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = *(_QWORD *)(v1 + 8);
  return sub_185774858;
}

_QWORD *sub_185774858(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;

  v1 = result[1];
  *(_QWORD *)(v1 + 8) = *result;
  v2 = *(_QWORD *)(v1 + 48);
  if ((v2 & 2) == 0)
    *(_QWORD *)(v1 + 48) = v2 | 2;
  return result;
}

double UIShadowProperties.radius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void UIShadowProperties.radius.setter(double a1)
{
  uint64_t v1;
  uint64_t v2;

  *(double *)(v1 + 16) = a1;
  v2 = *(_QWORD *)(v1 + 48);
  if ((v2 & 4) == 0)
    *(_QWORD *)(v1 + 48) = v2 | 4;
}

_QWORD *(*UIShadowProperties.radius.modify(_QWORD *a1))(_QWORD *result)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = *(_QWORD *)(v1 + 16);
  return sub_1857748B4;
}

_QWORD *sub_1857748B4(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;

  v1 = result[1];
  *(_QWORD *)(v1 + 16) = *result;
  v2 = *(_QWORD *)(v1 + 48);
  if ((v2 & 4) == 0)
    *(_QWORD *)(v1 + 48) = v2 | 4;
  return result;
}

double UIShadowProperties.offset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void UIShadowProperties.offset.setter(double a1, double a2)
{
  uint64_t v2;
  uint64_t v3;

  *(double *)(v2 + 24) = a1;
  *(double *)(v2 + 32) = a2;
  v3 = *(_QWORD *)(v2 + 48);
  if ((v3 & 8) == 0)
    *(_QWORD *)(v2 + 48) = v3 | 8;
}

uint64_t (*UIShadowProperties.offset.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 24);
  return sub_185774910;
}

uint64_t sub_185774910(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(result + 16);
  *(_OWORD *)(v1 + 24) = *(_OWORD *)result;
  v2 = *(_QWORD *)(v1 + 48);
  if ((v2 & 8) == 0)
    *(_QWORD *)(v1 + 48) = v2 | 8;
  return result;
}

void *UIShadowProperties.path.getter()
{
  uint64_t v0;
  void *result;
  uint64_t v2;

  result = *(void **)(v0 + 40);
  if (result)
  {
    objc_msgSend(result, sel_copy);
    sub_186507B1C();
    swift_unknownObjectRelease();
    sub_1851F9080(0, (unint64_t *)&unk_1EDD8AB10);
    if (swift_dynamicCast())
      return (void *)v2;
    else
      return 0;
  }
  return result;
}

void *sub_1857749BC@<X0>(_QWORD *a1@<X8>)
{
  void *result;

  result = UIShadowProperties.path.getter();
  *a1 = result;
  return result;
}

void UIShadowProperties.path.setter(id a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  if (a1)
  {
    objc_msgSend(a1, sel_copy);
    sub_186507B1C();
    swift_unknownObjectRelease();
    sub_1851F9080(0, (unint64_t *)&unk_1EDD8AB10);
    if (swift_dynamicCast())
      v3 = v6;
    else
      v3 = 0;
  }
  else
  {
    v3 = 0;
  }
  v4 = *(void **)(v1 + 40);

  *(_QWORD *)(v1 + 40) = v3;
  v5 = *(_QWORD *)(v1 + 48);
  if ((v5 & 0x10) == 0)
    *(_QWORD *)(v1 + 48) = v5 | 0x10;
}

void (*UIShadowProperties.path.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  void *v4;
  int v5;
  uint64_t v6;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[6] = v1;
  v4 = *(void **)(v1 + 40);
  if (v4)
  {
    objc_msgSend(v4, sel_copy);
    sub_186507B1C();
    swift_unknownObjectRelease();
    sub_1851F9080(0, (unint64_t *)&unk_1EDD8AB10);
    v5 = swift_dynamicCast();
    v6 = v3[5];
    if (!v5)
      v6 = 0;
  }
  else
  {
    v6 = 0;
  }
  v3[4] = v6;
  return sub_185774B98;
}

void sub_185774B98(uint64_t a1, char a2)
{
  void *v2;
  id v3;
  id *v4;
  id v5;

  v2 = *(void **)a1;
  v4 = (id *)(*(_QWORD *)a1 + 32);
  v3 = *v4;
  if ((a2 & 1) != 0)
  {
    v5 = v3;
    UIShadowProperties.path.setter(v3);

  }
  else
  {
    UIShadowProperties.path.setter(*(id *)(*(_QWORD *)a1 + 32));
  }
  free(v2);
}

void sub_185774BF0(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v2 = *(void **)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v5 = *(_OWORD *)(a1 + 24);
  v6 = *(void **)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(v1 + 48);
  if ((v8 & 1) != 0)
  {
    if ((v8 & 2) != 0)
      goto LABEL_3;
  }
  else
  {
    v12 = *(_OWORD *)(a1 + 24);
    objc_storeStrong((id *)v1, v2);
    v5 = v12;
    if ((v8 & 2) != 0)
    {
LABEL_3:
      if ((v8 & 4) != 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  *(_QWORD *)(v1 + 8) = v4;
  if ((v8 & 4) != 0)
  {
LABEL_4:
    if ((v8 & 8) != 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  *(_QWORD *)(v1 + 16) = v3;
  if ((v8 & 8) != 0)
  {
LABEL_5:
    if ((v8 & 0x10) != 0)
      goto LABEL_17;
LABEL_11:
    if (v6)
    {
      v9 = v2;
      v10 = v6;
      objc_msgSend(v10, sel_copy);
      sub_186507B1C();
      swift_unknownObjectRelease();
      sub_1851F9080(0, (unint64_t *)&unk_1EDD8AB10);
      if (swift_dynamicCast())
      {
        v11 = v13;

LABEL_16:
        *(_QWORD *)(v1 + 40) = v11;
        goto LABEL_17;
      }

    }
    v11 = 0;
    goto LABEL_16;
  }
LABEL_10:
  *(_OWORD *)(v1 + 24) = v5;
  if ((v8 & 0x10) == 0)
    goto LABEL_11;
LABEL_17:
  *(_QWORD *)(v1 + 56) = v7;
}

uint64_t UIShadowProperties.hash(into:)()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 40);
  sub_18650811C();
  sub_18650811C();
  v3 = v1;
  sub_186507A50();

  sub_186508104();
  if (v2)
  {
    v4 = v2;
    sub_186507A50();

  }
  return sub_1865080F8();
}

uint64_t UIShadowProperties.hashValue.getter()
{
  sub_1865080EC();
  UIShadowProperties.hash(into:)();
  return sub_186508134();
}

uint64_t sub_185774E3C()
{
  sub_1865080EC();
  UIShadowProperties.hash(into:)();
  return sub_186508134();
}

uint64_t sub_185774EA8()
{
  sub_1865080EC();
  UIShadowProperties.hash(into:)();
  return sub_186508134();
}

uint64_t sub_185774F10()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  id v18;
  id v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;

  v1 = *(void **)(v0 + 24);
  v2 = *(void **)(v0 + 40);
  v3 = *(id *)v0;
  v4 = objc_msgSend(v3, sel_description);
  sub_1865074F8();

  sub_186507564();
  swift_bridgeObjectRelease();
  sub_186507564();
  v5 = sub_185646CA4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v7 = v5[2];
  v6 = v5[3];
  if (v7 >= v6 >> 1)
    v5 = sub_185646CA4((_QWORD *)(v6 > 1), v7 + 1, 1, v5);
  v5[2] = v7 + 1;
  v8 = &v5[2 * v7];
  v8[4] = 0x203D20726F6C6F63;
  v8[5] = 0xE800000000000000;
  sub_18650778C();
  sub_186507564();
  swift_bridgeObjectRelease();
  v10 = v5[2];
  v9 = v5[3];
  if (v10 >= v9 >> 1)
    v5 = sub_185646CA4((_QWORD *)(v9 > 1), v10 + 1, 1, v5);
  v5[2] = v10 + 1;
  v11 = &v5[2 * v10];
  v11[4] = 0x207974696361706FLL;
  v11[5] = 0xEA0000000000203DLL;
  sub_18650778C();
  sub_186507564();
  swift_bridgeObjectRelease();
  v13 = v5[2];
  v12 = v5[3];
  if (v13 >= v12 >> 1)
    v5 = sub_185646CA4((_QWORD *)(v12 > 1), v13 + 1, 1, v5);
  v5[2] = v13 + 1;
  v14 = &v5[2 * v13];
  v14[4] = 0x3D20737569646172;
  v14[5] = 0xE900000000000020;
  sub_186507564();
  type metadata accessor for CGSize(0);
  sub_186507D74();
  v16 = v5[2];
  v15 = v5[3];
  if (v16 >= v15 >> 1)
    v5 = sub_185646CA4((_QWORD *)(v15 > 1), v16 + 1, 1, v5);
  v5[2] = v16 + 1;
  v17 = &v5[2 * v16];
  v17[4] = 0;
  v17[5] = 0xE000000000000000;
  if (v2)
  {
    v18 = v3;
    v19 = v2;
    objc_msgSend(v19, sel_copy);
    sub_186507B1C();
    swift_unknownObjectRelease();
    sub_1851F9080(0, (unint64_t *)&unk_1EDD8AB10);
    if ((swift_dynamicCast() & 1) != 0)
    {

      v20 = objc_msgSend(v1, sel_description);
      sub_1865074F8();

      sub_186507564();
      swift_bridgeObjectRelease();
      v22 = v5[2];
      v21 = v5[3];
      if (v22 >= v21 >> 1)
        v5 = sub_185646CA4((_QWORD *)(v21 > 1), v22 + 1, 1, v5);
      v5[2] = v22 + 1;
      v23 = &v5[2 * v22];
      v23[4] = 0x203D2068746170;
      v23[5] = 0xE700000000000000;

    }
    else
    {

    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD8AB80);
  sub_185638FF8(&qword_1EDD87108, &qword_1EDD8AB80, MEMORY[0x1E0DEAF20]);
  v24 = sub_186507498();
  swift_bridgeObjectRelease();
  return v24;
}

unint64_t UIShadowProperties.description.getter()
{
  sub_186507C30();
  swift_bridgeObjectRelease();
  sub_185774F10();
  sub_186507564();
  swift_bridgeObjectRelease();
  sub_186507564();
  return 0xD000000000000013;
}

unint64_t UIShadowProperties.debugDescription.getter()
{
  void **v0;
  void *v1;
  id v2;
  id v3;

  v1 = *v0;
  v2 = v0[5];
  v3 = v1;
  sub_186507C30();
  swift_bridgeObjectRelease();
  sub_185774F10();
  sub_186507564();
  swift_bridgeObjectRelease();
  sub_186507564();

  return 0xD000000000000013;
}

uint64_t UIShadowProperties.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  __int128 v14;
  uint64_t v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v1 = sub_186508158();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD83E30);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v0 + 56);
  v16 = *(void **)v0;
  v8 = v16;
  v17 = *(_OWORD *)(v0 + 8);
  v18 = *(_OWORD *)(v0 + 24);
  v14 = *(_OWORD *)(v0 + 40);
  v19 = v14;
  v20 = v9;
  v15 = MEMORY[0x1E0DEE9D8];
  v10 = sub_18650814C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEDFE8], v1);
  v11 = (id)v14;
  v12 = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD8AB20);
  sub_185638FF8((unint64_t *)&qword_1EDD83E40, (uint64_t *)&unk_1EDD8AB20, MEMORY[0x1E0DEAF50]);
  return sub_186508164();
}

uint64_t sub_185775680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  __int128 v14;
  uint64_t v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v1 = sub_186508158();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD83E30);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v0 + 56);
  v16 = *(void **)v0;
  v8 = v16;
  v17 = *(_OWORD *)(v0 + 8);
  v18 = *(_OWORD *)(v0 + 24);
  v14 = *(_OWORD *)(v0 + 40);
  v19 = v14;
  v20 = v9;
  v15 = MEMORY[0x1E0DEE9D8];
  v10 = sub_18650814C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEDFE8], v1);
  v11 = (id)v14;
  v12 = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD8AB20);
  sub_185638FF8((unint64_t *)&qword_1EDD83E40, (uint64_t *)&unk_1EDD8AB20, MEMORY[0x1E0DEAF50]);
  return sub_186508164();
}

void __swiftcall UIShadowProperties.init()(UIShadowProperties *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id UIShadowProperties.init()()
{
  void *v0;
  void *v1;
  char *v2;
  id v3;
  char *v4;
  objc_super v6;

  v1 = (void *)objc_opt_self();
  v2 = v0;
  v3 = objc_msgSend(v1, sel_blackColor);
  v4 = &v2[OBJC_IVAR___UIShadowProperties__backingProperties];
  *(_QWORD *)v4 = v3;
  *(_OWORD *)(v4 + 8) = 0u;
  *(_OWORD *)(v4 + 24) = 0u;
  *(_OWORD *)(v4 + 40) = 0u;
  *((_QWORD *)v4 + 7) = 0;

  v6.receiver = v2;
  v6.super_class = (Class)UIShadowProperties;
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t sub_185775DA8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v5;

  v1 = v0 + OBJC_IVAR___UIShadowProperties__backingProperties;
  swift_beginAccess();
  v2 = *(void **)(v1 + 40);
  if (v2)
  {
    objc_msgSend(v2, sel_copy);
    sub_186507B1C();
    swift_unknownObjectRelease();
    sub_1851F9080(0, (unint64_t *)&unk_1EDD8AB10);
    if (swift_dynamicCast())
      v3 = v5;
    else
      v3 = 0;
  }
  else
  {
    v3 = 0;
  }
  swift_endAccess();
  return v3;
}

uint64_t sub_185775EB0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = v1 + OBJC_IVAR___UIShadowProperties__backingProperties;
  swift_beginAccess();
  if (a1)
  {
    objc_msgSend(a1, sel_copy);
    sub_186507B1C();
    swift_unknownObjectRelease();
    sub_1851F9080(0, (unint64_t *)&unk_1EDD8AB10);
    if (swift_dynamicCast())
      v4 = v8;
    else
      v4 = 0;
  }
  else
  {
    v4 = 0;
  }
  v5 = *(void **)(v3 + 40);

  *(_QWORD *)(v3 + 40) = v4;
  v6 = *(_QWORD *)(v3 + 48);
  if ((v6 & 0x10) == 0)
    *(_QWORD *)(v3 + 48) = v6 | 0x10;
  return swift_endAccess();
}

BOOL UIShadowProperties.isEqual(_:)(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  void *v3;
  char *v4;
  uint64_t v5;
  __int128 v6;
  char *v7;
  uint64_t v8;
  id v9;
  id v10;
  char *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v2 = sub_1855D008C(a1, (uint64_t)&v17);
  if ((_QWORD)v19)
  {
    type metadata accessor for UIShadowProperties(v2);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v3 = v12;
      v4 = &v1[OBJC_IVAR___UIShadowProperties__backingProperties];
      swift_beginAccess();
      v5 = *((_QWORD *)v4 + 7);
      v17 = *(_QWORD *)v4;
      v6 = *(_OWORD *)(v4 + 24);
      v18 = *(_OWORD *)(v4 + 8);
      v19 = v6;
      v20 = *(_OWORD *)(v4 + 40);
      v7 = &v12[OBJC_IVAR___UIShadowProperties__backingProperties];
      v21 = v5;
      swift_beginAccess();
      v8 = *((_QWORD *)v7 + 7);
      v12 = *(char **)v7;
      v13 = *(_OWORD *)(v7 + 8);
      v14 = *(_OWORD *)(v7 + 24);
      v15 = *(_OWORD *)(v7 + 40);
      v16 = v8;
      if (_s5UIKit18UIShadowPropertiesV2eeoiySbAC_ACtFZ_0((uint64_t)&v17, (uint64_t)&v12))
      {
        v9 = objc_msgSend(v1, sel__backgroundConfigurationShadowType);
        v10 = objc_msgSend(v3, sel__backgroundConfigurationShadowType);

        return v9 == v10;
      }

    }
  }
  else
  {
    sub_1855BDE94((uint64_t)&v17);
  }
  return 0;
}

uint64_t UIShadowProperties.description.getter()
{
  sub_186507C30();
  sub_186507564();
  sub_186507D74();
  sub_186507564();
  swift_beginAccess();
  sub_185774F10();
  sub_186507564();
  swift_bridgeObjectRelease();
  sub_186507564();
  return 0;
}

void __swiftcall UIShadowProperties.init(coder:)(UIShadowProperties_optional *__return_ptr retstr, NSCoder coder)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCoder_, coder.super.isa);

}

id UIShadowProperties.init(coder:)(void *a1)
{
  id v2;

  v2 = sub_185776B14(a1);

  return v2;
}

void sub_185776678(void *a1)
{
  char *v1;
  id v3;
  void *v4;
  double v5;
  double v6;
  void *v7;
  double v8;
  double v9;
  void *v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  char *v16;
  uint64_t v17;
  void *v18;

  v3 = objc_msgSend(v1, sel_color);
  v4 = (void *)sub_1865074D4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  objc_msgSend(v1, sel_opacity);
  v6 = v5;
  v7 = (void *)sub_1865074D4();
  objc_msgSend(a1, sel_encodeDouble_forKey_, v7, v6);

  objc_msgSend(v1, sel_radius);
  v9 = v8;
  v10 = (void *)sub_1865074D4();
  objc_msgSend(a1, sel_encodeDouble_forKey_, v10, v9);

  objc_msgSend(v1, sel_offset);
  v11 = (char *)sub_1865074D4();
  _UIEncodeCGSizeForKey(a1, v11);

  v12 = objc_msgSend(v1, sel_path);
  v13 = (void *)sub_1865074D4();
  objc_msgSend(a1, sel_encodeObject_forKey_, v12, v13);

  v14 = objc_msgSend(v1, sel__backgroundConfigurationShadowType);
  v15 = (void *)sub_1865074D4();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v14, v15);

  v16 = &v1[OBJC_IVAR___UIShadowProperties__backingProperties];
  swift_beginAccess();
  v17 = *((_QWORD *)v16 + 6);
  v18 = (void *)sub_1865074D4();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v17, v18);

}

BOOL _s5UIKit18UIShadowPropertiesV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  id v11;
  id v12;
  char v13;

  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 8), *(float64x2_t *)(a2 + 8)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 24), *(float64x2_t *)(a2 + 24)))), 0xFuLL))) & 1) != 0)
  {
    v2 = *(void **)(a1 + 40);
    v3 = *(_QWORD *)(a1 + 56);
    v4 = *(void **)(a2 + 40);
    v5 = *(_QWORD *)(a2 + 56);
    v6 = *(void **)a2;
    v7 = *(void **)a1;
    sub_1851F9080(0, (unint64_t *)&qword_1EDD82C80);
    v8 = v7;
    v9 = v6;
    v10 = sub_186507A44();

    if ((v10 & 1) != 0)
    {
      if (v2)
      {
        if (v4)
        {
          sub_1851F9080(0, (unint64_t *)&unk_1EDD8AB10);
          v11 = v4;
          v12 = v2;
          v13 = sub_186507A44();

          if ((v13 & 1) != 0)
            return v3 == v5;
        }
      }
      else if (!v4)
      {
        return v3 == v5;
      }
    }
  }
  return 0;
}

uint64_t type metadata accessor for UIShadowProperties(uint64_t a1)
{
  return sub_1851F9080(a1, &qword_1EDD8AB50);
}

uint64_t sub_185776AA4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  int v4;
  int v5;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return 0;
  v2 = result;
  LODWORD(result) = 0;
  v3 = (int *)(v2 + 32);
  do
  {
    v5 = *v3++;
    v4 = v5;
    if ((v5 & ~(_DWORD)result) == 0)
      v4 = 0;
    result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_185776ADC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

id sub_185776B14(void *a1)
{
  void *v1;
  char *v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  char *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  objc_super v26;

  sub_1851F9080(0, (unint64_t *)&qword_1ECD74900);
  v3 = v1;
  v4 = (id)sub_186507A14();
  if (!v4)
    v4 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
  v5 = v4;
  v6 = (void *)sub_1865074D4();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v6);
  v8 = v7;

  v9 = (void *)sub_1865074D4();
  objc_msgSend(a1, sel_decodeDoubleForKey_, v9);
  v11 = v10;

  v12 = (void *)sub_1865074D4();
  objc_msgSend(a1, sel_decodeCGSizeForKey_, v12);
  v14 = v13;
  v16 = v15;

  sub_1851F9080(0, (unint64_t *)&unk_1EDD8AB10);
  v17 = (void *)sub_186507A14();
  v18 = (void *)sub_1865074D4();
  v19 = objc_msgSend(a1, sel_decodeIntegerForKey_, v18);

  v20 = &v3[OBJC_IVAR___UIShadowProperties__backingProperties];
  *(_QWORD *)v20 = v5;
  *((_QWORD *)v20 + 1) = v8;
  *((_QWORD *)v20 + 2) = v11;
  *((_QWORD *)v20 + 3) = v14;
  *((_QWORD *)v20 + 4) = v16;
  *((_QWORD *)v20 + 6) = 0;
  *((_QWORD *)v20 + 7) = 0;
  *((_QWORD *)v20 + 5) = v17;
  swift_beginAccess();
  *((_QWORD *)v20 + 7) = v19;
  v21 = v17;
  v22 = v5;
  v23 = (void *)sub_1865074D4();
  v24 = objc_msgSend(a1, sel_decodeIntegerForKey_, v23);

  *((_QWORD *)v20 + 6) = v24;
  v26.receiver = v3;
  v26.super_class = (Class)UIShadowProperties;
  return objc_msgSendSuper2(&v26, sel_init);
}

unint64_t sub_185776D90()
{
  unint64_t result;

  result = qword_1EDD8AB40;
  if (!qword_1EDD8AB40)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UIShadowProperties, &type metadata for UIShadowProperties);
    atomic_store(result, (unint64_t *)&qword_1EDD8AB40);
  }
  return result;
}

id sub_185776DD4@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *a2 = v2;
  return v2;
}

double sub_185776DE4@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 8);
  *a2 = result;
  return result;
}

_QWORD *sub_185776DF0(_QWORD *result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(a2 + 8) = *result;
  v2 = *(_QWORD *)(a2 + 48);
  if ((v2 & 2) == 0)
    *(_QWORD *)(a2 + 48) = v2 | 2;
  return result;
}

double sub_185776E0C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 16);
  *a2 = result;
  return result;
}

_QWORD *sub_185776E18(_QWORD *result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(a2 + 16) = *result;
  v2 = *(_QWORD *)(a2 + 48);
  if ((v2 & 4) == 0)
    *(_QWORD *)(a2 + 48) = v2 | 4;
  return result;
}

__n128 sub_185776E34@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result;

  result = *(__n128 *)(a1 + 24);
  *a2 = result;
  return result;
}

_OWORD *sub_185776E40(_OWORD *result, uint64_t a2)
{
  uint64_t v2;

  *(_OWORD *)(a2 + 24) = *result;
  v2 = *(_QWORD *)(a2 + 48);
  if ((v2 & 8) == 0)
    *(_QWORD *)(a2 + 48) = v2 | 8;
  return result;
}

void sub_185776E60(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  UIShadowProperties.path.setter(v1);
}

void destroy for UIShadowProperties(id *a1)
{

}

uint64_t initializeWithCopy for UIShadowProperties(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v5 = v3;
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for UIShadowProperties(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(void **)(a1 + 40);
  v8 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = v8;

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  return a1;
}

uint64_t assignWithTake for UIShadowProperties(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v5 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for UIShadowProperties()
{
  return &type metadata for UIShadowProperties;
}

ValueMetadata *type metadata accessor for UIShadowProperties.CustomizedProperties()
{
  return &type metadata for UIShadowProperties.CustomizedProperties;
}

unint64_t sub_185777008()
{
  unint64_t result;

  result = qword_1EDD8AB58;
  if (!qword_1EDD8AB58)
  {
    result = MEMORY[0x186DC9F28](&unk_186675FA8, &type metadata for UIShadowProperties.CustomizedProperties);
    atomic_store(result, (unint64_t *)&qword_1EDD8AB58);
  }
  return result;
}

unint64_t sub_185777050()
{
  unint64_t result;

  result = qword_1EDD8AB60;
  if (!qword_1EDD8AB60)
  {
    result = MEMORY[0x186DC9F28](&unk_186675F78, &type metadata for UIShadowProperties.CustomizedProperties);
    atomic_store(result, (unint64_t *)&qword_1EDD8AB60);
  }
  return result;
}

unint64_t sub_185777098()
{
  unint64_t result;

  result = qword_1EDD8AB68;
  if (!qword_1EDD8AB68)
  {
    result = MEMORY[0x186DC9F28](&unk_186675FD0, &type metadata for UIShadowProperties.CustomizedProperties);
    atomic_store(result, (unint64_t *)&qword_1EDD8AB68);
  }
  return result;
}

unint64_t sub_1857770E0()
{
  unint64_t result;

  result = qword_1EDD8AB70;
  if (!qword_1EDD8AB70)
  {
    result = MEMORY[0x186DC9F28](&unk_186676008, &type metadata for UIShadowProperties.CustomizedProperties);
    atomic_store(result, (unint64_t *)&qword_1EDD8AB70);
  }
  return result;
}

uint64_t sub_185777130@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  int v13;
  _OWORD v15[2];
  uint64_t v16[4];

  static UISceneConnectionOptionDefinition.definitionID.getter(v16);
  v6 = v16[0];
  v5 = v16[1];
  v8 = v16[2];
  v7 = v16[3];
  v9 = (uint64_t *)(v2 + OBJC_IVAR____UISceneConnectionOptionDefinitionPayloadStorage_values);
  swift_beginAccess();
  v10 = *v9;
  if (*(_QWORD *)(v10 + 16) && (v11 = sub_1855C45C0(v6, v5, v8, v7), (v12 & 1) != 0))
    sub_1850F69D4(*(_QWORD *)(v10 + 56) + 32 * v11, (uint64_t)v15);
  else
    memset(v15, 0, sizeof(v15));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  v13 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, v13 ^ 1u, 1, a1);
}

uint64_t sub_185777248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v12[4];
  uint64_t v13[4];

  static UISceneConnectionOptionDefinition.definitionID.getter(v13);
  v6 = v13[0];
  v7 = v13[1];
  v8 = v13[2];
  v9 = v13[3];
  v12[3] = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_0, a1, a4);
  swift_beginAccess();
  sub_1855C2564((uint64_t)v12, v6, v7, v8, v9);
  return swift_endAccess();
}

uint64_t sub_18577736C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;

  v2 = (uint64_t *)(a1 + OBJC_IVAR____UISceneConnectionOptionDefinitionPayloadStorage_values);
  swift_beginAccess();
  v3 = *v2;
  v4 = (uint64_t *)(v1 + OBJC_IVAR____UISceneConnectionOptionDefinitionPayloadStorage_values);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v4;
  *v4 = 0x8000000000000000;
  sub_185777510(v3, (uint64_t)sub_1857774CC, 0, isUniquelyReferenced_nonNull_native, &v7);
  *v4 = v7;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

unint64_t type metadata accessor for _UISceneConnectionOptionDefinitionPayloadStorage()
{
  unint64_t result;

  result = qword_1EDD8AB90;
  if (!qword_1EDD8AB90)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDD8AB90);
  }
  return result;
}

uint64_t sub_1857774CC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  sub_1850F69D4((uint64_t)(a1 + 4), (uint64_t)(a2 + 4));
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_185777510(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t result;
  _OWORD v32[2];
  _OWORD v33[2];
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[12];
  _OWORD *v38;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v37[4] = a1;
  v37[5] = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v37[6] = v8;
  v37[7] = 0;
  v37[8] = v11 & v9;
  v37[9] = a2;
  v37[10] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1856D6680(&v34);
  v12 = *((_QWORD *)&v34 + 1);
  if (!*((_QWORD *)&v34 + 1))
  {
LABEL_19:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1855BDB68();
    return swift_release();
  }
  v38 = v37;
  while (1)
  {
    v14 = v34;
    v15 = v35;
    v16 = v36;
    sub_1850F6908(v38, v33);
    v17 = *a5;
    v19 = sub_1855C45C0(v14, v12, v15, v16);
    v20 = *(_QWORD *)(v17 + 16);
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
      break;
    v23 = v18;
    if (*(_QWORD *)(v17 + 24) >= v22)
    {
      if ((a4 & 1) != 0)
      {
        if ((v18 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        sub_185686DF4();
        if ((v23 & 1) != 0)
          goto LABEL_6;
      }
    }
    else
    {
      sub_1856D4B1C(v22, a4 & 1);
      v24 = sub_1855C45C0(v14, v12, v15, v16);
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_22;
      v19 = v24;
      if ((v23 & 1) != 0)
      {
LABEL_6:
        sub_1850F69D4((uint64_t)v33, (uint64_t)v32);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = (_OWORD *)(*(_QWORD *)(*a5 + 56) + 32 * v19);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
        sub_1850F6908(v32, v13);
        goto LABEL_7;
      }
    }
    v26 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v19 >> 6) + 64) |= 1 << v19;
    v27 = (uint64_t *)(v26[6] + 32 * v19);
    *v27 = v14;
    v27[1] = v12;
    v27[2] = v15;
    v27[3] = v16;
    sub_1850F6908(v33, (_OWORD *)(v26[7] + 32 * v19));
    v28 = v26[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_21;
    v26[2] = v30;
LABEL_7:
    sub_1856D6680(&v34);
    v12 = *((_QWORD *)&v34 + 1);
    a4 = 1;
    if (!*((_QWORD *)&v34 + 1))
      goto LABEL_19;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_186508074();
  __break(1u);
  return result;
}

uint64_t sub_185777778()
{
  _BYTE *v0;
  _BYTE *v1;
  void *v2;
  double v3;
  double v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  _BYTE *v12;
  double v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t (*v18)(double);
  _BYTE *v19;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_propertyAnimator];
  if (objc_msgSend(v2, sel_state) != (id)1)
  {
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_progressValue], sel_presentationValue);
    v4 = v1[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_isProgressValueReversed] ? 1.0 - v3 : v3;
    objc_msgSend(v2, sel_setFractionComplete_, v4);
    if (v1[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isRunning] == 1)
    {
      v5 = (uint64_t *)&v1[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_keyframes];
      swift_beginAccess();
      v6 = *v5;
      if ((unint64_t)*v5 >> 62)
      {
        swift_bridgeObjectRetain();
        v7 = sub_186507E58();
        if (v7)
          goto LABEL_8;
      }
      else
      {
        v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v7)
        {
LABEL_8:
          if (v7 < 1)
          {
            __break(1u);
            goto LABEL_27;
          }
          v8 = 0;
          do
          {
            if ((v6 & 0xC000000000000001) != 0)
            {
              v9 = MEMORY[0x186DC4CB4](v8, v6);
            }
            else
            {
              v9 = *(_QWORD *)(v6 + 8 * v8 + 32);
              swift_retain();
            }
            ++v8;
            v10 = *(double *)(v9 + 24);
            v11 = swift_allocObject();
            *(_QWORD *)(v11 + 16) = v1;
            *(double *)(v11 + 24) = v4;
            *(_QWORD *)(v11 + 32) = v9;
            v12 = v1;
            swift_retain();
            sub_1857788E0((uint64_t)sub_185779EF8, v11, 0, 0, v10);
            swift_release();
            swift_release();
          }
          while (v7 != v8);
        }
      }
      swift_bridgeObjectRelease();
    }
  }
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_progressValue], sel_presentationValue);
  if (v1[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_isProgressValueReversed])
    v13 = 1.0 - v13;
  *(double *)&v1[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__fractionComplete] = v13;
  *(_QWORD *)&v1[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_springBehaviorWhenContinued] = 0;
  result = swift_unknownObjectRelease();
  v15 = *(_QWORD *)&v1[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__state];
  if (!v15)
  {
    *(_QWORD *)&v1[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__state] = 1;
    v1[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isRunning] = 0;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v1;
    v19 = v1;
    v18 = sub_1855A66C0;
    goto LABEL_24;
  }
  if (v15 == 2)
    return result;
  if (v15 != 1)
  {
LABEL_27:
    result = sub_186507E04();
    __break(1u);
    return result;
  }
  if (v1[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isRunning] != 1)
    return result;
  v1[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isRunning] = 0;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v1;
  v17 = v1;
  v18 = sub_18577A184;
LABEL_24:
  sub_1857788E0((uint64_t)v18, v16, 0, 0, 1.0);
  return swift_release();
}

void sub_185777ABC()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;

  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__state];
  if (!v1)
    goto LABEL_6;
  if (v1 != 2)
  {
    if (v1 != 1)
    {
      sub_186507E04();
      __break(1u);
      return;
    }
    if ((v0[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isRunning] & 1) == 0)
    {
LABEL_6:
      *(_QWORD *)&v0[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__state] = 1;
      v0[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isRunning] = 1;
      *(_QWORD *)&v0[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_springBehaviorWhenContinued] = 0;
      swift_unknownObjectRelease();
      v2 = v0[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isReversed];
      *(_QWORD *)&v0[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_completionPosition] = v2;
      v3 = 1.0;
      if ((_DWORD)v2)
        v3 = 0.0;
      *(double *)&v0[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__fractionComplete] = v3;
      sub_185778D50();
      v4 = swift_allocObject();
      *(_QWORD *)(v4 + 16) = v0;
      v5 = swift_allocObject();
      *(_QWORD *)(v5 + 16) = v0;
      v6 = v0;
      sub_1857788E0((uint64_t)sub_18577A000, v4, (uint64_t)sub_18577A018, v5, 1.0);
      swift_release();
      swift_release();
    }
  }
}

void sub_185777C34(double a1)
{
  char *v1;
  uint64_t v2;
  char *v3;

  *(double *)&v1[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__fractionComplete] = a1;
  if (*(_QWORD *)&v1[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__state] == 1
    && (v1[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isRunning] & 1) == 0)
  {
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v1;
    v3 = v1;
    sub_1857788E0((uint64_t)sub_18577A184, v2, 0, 0, 1.0);
    swift_release();
  }
}

id sub_185777CCC(id result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  char v5;

  v2 = OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__state;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__state);
  if (v3)
    v4 = v3 == 2;
  else
    v4 = 1;
  if (!v4)
  {
    if (v3 == 1)
    {
      v5 = (char)result;
      *(_BYTE *)(v1 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isRunning) = 0;
      *(_QWORD *)(v1 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_springBehaviorWhenContinued) = 0;
      swift_unknownObjectRelease();
      result = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_propertyAnimator), sel_stopAnimation_, v5 & 1);
      if ((v5 & 1) != 0)
        return (id)sub_185778B40();
      else
        *(_QWORD *)(v1 + v2) = 2;
    }
    else
    {
      result = (id)sub_186507E04();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_185777DB4(uint64_t result)
{
  uint64_t v1;
  double v2;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__state) == 2)
  {
    *(_QWORD *)(v1 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_completionPosition) = result;
    v2 = 0.0;
    if (!result)
      v2 = 1.0;
    *(double *)(v1 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__fractionComplete) = v2;
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_propertyAnimator), sel_finishAnimationAtPosition_, result);
    return sub_185778B40();
  }
  return result;
}

void sub_185777ED0(double a1)
{
  uint64_t v1;
  double v2;
  char v3;
  double v4;
  double v5;
  double v6;
  double v9;
  void (*v10)(uint64_t, double);
  uint64_t v11;

  v2 = *(double *)(v1 + 48);
  v3 = *(_BYTE *)(v1 + 56);
  v4 = *(double *)(v1 + 16);
  v5 = v4 + *(double *)(v1 + 24);
  v6 = _UIMap(a1, v4, v5);
  if (v6 < 0.0 && v4 > 0.0)
    v6 = 0.0;
  if (v6 > 1.0 && v5 < 1.0)
    v9 = 1.0;
  else
    v9 = v6;
  if ((v3 & 1) != 0 || v2 != v9)
  {
    *(double *)(v1 + 48) = v9;
    *(_BYTE *)(v1 + 56) = 0;
    v10 = *(void (**)(uint64_t, double))(v1 + 32);
    v11 = swift_retain();
    v10(v11, v9);
    swift_release();
  }
}

uint64_t sub_185777F74()
{
  swift_release();
  return swift_deallocClassInstance();
}

char *sub_18577802C(void *a1, char a2, int a3, uint64_t a4, double a5)
{
  _BYTE *v5;
  objc_class *ObjectType;
  uint64_t v12;
  _BYTE *v13;
  id v14;
  id v15;
  _BYTE *v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  void *v21;
  char *v22;
  id v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  id v35;
  _QWORD v37[6];
  objc_super v38;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v5[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_springBehaviorWhenContinued] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_completionPosition] = 2;
  v12 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v5[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_c2Animations] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v5[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_completionHandlers] = v12;
  *(_QWORD *)&v5[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_keyframes] = v12;
  v5[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_isC2Finished] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__fractionComplete] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__state] = 0;
  v5[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isRunning] = 0;
  v5[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isReversed] = 0;
  v5[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__pausesOnCompletion] = 0;
  if (a1)
  {
    v13 = v5;
    v14 = a1;
  }
  else
  {
    v15 = objc_allocWithZone((Class)UIViewFloatAnimatableProperty);
    v16 = v5;
    v14 = objc_msgSend(v15, sel_init);
  }
  *(_QWORD *)&v5[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_progressValue] = v14;
  v5[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_isProgressValueReversed] = a2 & 1;
  v17 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  v18 = a1;
  v19 = objc_msgSend(v17, sel_initWithDuration_curve_animations_, 3, 0, a5);
  *(_QWORD *)&v5[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_propertyAnimator] = v19;
  *(_QWORD *)&v5[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_springBehavior] = a4;
  swift_unknownObjectRetain();

  v38.receiver = v5;
  v38.super_class = ObjectType;
  v20 = (char *)objc_msgSendSuper2(&v38, sel_init);
  v21 = *(void **)&v20[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_propertyAnimator];
  v22 = v20;
  objc_msgSend(v21, sel_setPausesOnCompletion_, 1);
  objc_msgSend(v21, sel_setScrubsLinearly_, 0);
  objc_msgSend(v21, sel__setShouldLayoutSubviews_, 0);
  objc_msgSend(v21, sel__setShouldBeginFromCurrentState_, 0);
  v23 = v21;
  v24 = (void *)sub_1865074D4();
  objc_msgSend(v23, sel_set_name_, v24);

  v25 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A80);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1866691F0;
  v27 = OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_progressValue;
  v28 = *(void **)&v22[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_progressValue];
  *(_QWORD *)(v26 + 32) = v28;
  sub_18650766C();
  sub_18563E514();
  v29 = v28;
  v30 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  v31 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v37[4] = sub_18577A054;
  v37[5] = v31;
  v37[0] = MEMORY[0x1E0C809B0];
  v37[1] = 1107296256;
  v37[2] = sub_18530A69C;
  v37[3] = &block_descriptor_95;
  v32 = _Block_copy(v37);
  swift_release();
  objc_msgSend(v25, sel__createTransformerWithInputAnimatableProperties_presentationValueChangedCallback_, v30, v32);
  _Block_release(v32);

  v33 = *(void **)&v22[v27];
  LOBYTE(v32) = v22[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_isProgressValueReversed];
  v34 = swift_allocObject();
  *(_QWORD *)(v34 + 16) = v33;
  *(_BYTE *)(v34 + 24) = (_BYTE)v32;
  *(_DWORD *)(v34 + 28) = a3;
  v35 = v33;
  sub_1857787A8((uint64_t)sub_18577A080, v34);

  swift_release();
  swift_unknownObjectRelease();
  return v22;
}

void sub_1857783F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  double v4;
  double v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _BYTE *v13;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x186DCA138](v1);
  if (v2)
  {
    v3 = (_BYTE *)v2;
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_progressValue), sel_presentationValue);
    if (v3[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_isProgressValueReversed])
      v5 = 1.0 - v4;
    else
      v5 = v4;
    objc_msgSend(*(id *)&v3[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_propertyAnimator], sel_setFractionComplete_, v5);
    if (v3[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isRunning] != 1)
    {

      return;
    }
    v6 = (uint64_t *)&v3[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_keyframes];
    swift_beginAccess();
    v7 = *v6;
    if ((unint64_t)*v6 >> 62)
    {
      swift_bridgeObjectRetain();
      v8 = sub_186507E58();
      if (v8)
        goto LABEL_8;
    }
    else
    {
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v8)
      {
LABEL_8:
        if (v8 < 1)
        {
          __break(1u);
          return;
        }
        v9 = 0;
        do
        {
          if ((v7 & 0xC000000000000001) != 0)
          {
            v10 = MEMORY[0x186DC4CB4](v9, v7);
          }
          else
          {
            v10 = *(_QWORD *)(v7 + 8 * v9 + 32);
            swift_retain();
          }
          ++v9;
          v11 = *(double *)(v10 + 24);
          v12 = swift_allocObject();
          *(_QWORD *)(v12 + 16) = v3;
          *(double *)(v12 + 24) = v5;
          *(_QWORD *)(v12 + 32) = v10;
          v13 = v3;
          swift_retain();
          sub_1857788E0((uint64_t)sub_185779EF8, v12, 0, 0, v11);
          swift_release();
          swift_release();
        }
        while (v8 != v9);

        goto LABEL_18;
      }
    }

LABEL_18:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_185778600(void *a1, char a2, uint64_t a3, double a4)
{
  uint64_t v8;
  void *v9;
  id v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  id (*v18)();
  void *v19;
  double v20;
  double v21;
  double v22;
  _QWORD v24[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(double *)(v8 + 24) = a4;
  *(_BYTE *)(v8 + 32) = a2;
  if ((_DWORD)a3)
  {
    v9 = (void *)objc_opt_self();
    v10 = a1;
    sub_18650790C();
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v17 = swift_allocObject();
    v18 = sub_18577A0B4;
    *(_QWORD *)(v17 + 16) = sub_18577A0B4;
    *(_QWORD *)(v17 + 24) = v8;
    v24[4] = sub_1855A6A1C;
    v24[5] = v17;
    v24[0] = MEMORY[0x1E0C809B0];
    v24[1] = 1107296256;
    v24[2] = sub_1855D8DF4;
    v24[3] = &block_descriptor_108_1;
    v19 = _Block_copy(v24);
    swift_retain();
    swift_release();
    LODWORD(v20) = v12;
    LODWORD(v21) = v14;
    LODWORD(v22) = v16;
    objc_msgSend(v9, sel__modifyAnimationsWithPreferredFrameRateRange_updateReason_animations_, a3, v19, v20, v21, v22);
    _Block_release(v19);
    swift_release();
  }
  else
  {
    if ((a2 & 1) != 0)
      a4 = 1.0 - a4;
    objc_msgSend(a1, sel_setValue_, a4);
    swift_release();
    v18 = 0;
  }
  return sub_18518D718((uint64_t)v18);
}

uint64_t sub_1857787A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD **v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t result;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = (_QWORD **)(v2 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_c2Animations);
  swift_beginAccess();
  v7 = *v6;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v6 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_185646A58(0, v7[2] + 1, 1, v7);
    *v6 = v7;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    v7 = sub_185646A58((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
    *v6 = v7;
  }
  v7[2] = v10 + 1;
  v11 = &v7[2 * v10];
  v11[4] = sub_185779F74;
  v11[5] = v5;
  result = swift_endAccess();
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__state) == 1)
    return sub_1857788E0(a1, a2, 0, 0, 1.0);
  return result;
}

uint64_t sub_1857788E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  unsigned __int8 *v5;
  int v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  UIResponseFactorViewSpringAnimationBehavior *v16;
  void *v17;
  _QWORD *v18;
  uint64_t v19;
  void *v20;
  unsigned __int8 *v21;
  uint64_t v22;
  void *v23;
  uint64_t aBlock;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  _QWORD *v31;

  v10 = v5[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isRunning];
  if (*(_QWORD *)&v5[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_springBehaviorWhenContinued])
  {
    v11 = *(id *)&v5[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_springBehaviorWhenContinued];
  }
  else
  {
    v11 = *(id *)&v5[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_springBehavior];
    if (v11)
    {
      swift_unknownObjectRetain();
    }
    else
    {
      v12 = objc_msgSend((id)objc_opt_self(), sel_parallaxSettings);
      v13 = v12;
      if ((v10 & 1) != 0)
        v14 = objc_msgSend(v12, sel_noninteractiveSpring);
      else
        v14 = objc_msgSend(v12, sel_interactiveSpring);
      v11 = v14;

    }
  }
  v15 = v10 ^ 1u;
  swift_unknownObjectRetain();
  v16 = UIViewSpringAnimationBehaviorDescribingWithResponseFactor(v11, a5);
  v17 = (void *)objc_opt_self();
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a1;
  v18[3] = a2;
  v18[4] = v5;
  v30 = sub_185779E64;
  v31 = v18;
  v19 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v27 = 1107296256;
  v28 = sub_18530A69C;
  v29 = &block_descriptor_72;
  v20 = _Block_copy(&aBlock);
  swift_unknownObjectRetain();
  swift_retain();
  v21 = v5;
  swift_release();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a3;
  *(_QWORD *)(v22 + 24) = a4;
  v30 = sub_185779EC4;
  v31 = (_QWORD *)v22;
  aBlock = v19;
  v27 = 1107296256;
  v28 = sub_1856DA9E8;
  v29 = &block_descriptor_13_4;
  v23 = _Block_copy(&aBlock);
  sub_18518D708(a3);
  swift_release();
  objc_msgSend(v17, sel__animateUsingSpringBehavior_tracking_animations_completion_, v16, v15, v20, v23);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  _Block_release(v23);
  _Block_release(v20);
  return swift_unknownObjectRelease();
}

uint64_t sub_185778B40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t *);
  uint64_t result;
  uint64_t v12;

  v1 = v0;
  v2 = OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__state;
  if ((unint64_t)(*(_QWORD *)(v0 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__state) - 1) > 1)
  {
    sub_186507C30();
    sub_186507564();
    type metadata accessor for UIViewAnimatingState(0);
    sub_186507D74();
    sub_186507564();
    result = sub_186507E04();
    __break(1u);
  }
  else
  {
    v3 = (uint64_t *)(v0 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_completionHandlers);
    swift_beginAccess();
    v4 = *v3;
    *v3 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v1 + v2) = 0;
    v5 = *(void **)(v1 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_propertyAnimator);
    v6 = 1.0;
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isReversed))
      v6 = 0.0;
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_propertyAnimator), sel_setFractionComplete_, v6);
    if (objc_msgSend(v5, sel_state) == (id)1)
    {
      objc_msgSend(v5, sel_stopAnimation_, 0);
      objc_msgSend(v5, sel_finishAnimationAtPosition_, *(_QWORD *)(v1 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_completionPosition));
    }
    v7 = *(_QWORD *)(v4 + 16);
    if (v7)
    {
      v8 = OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_completionPosition;
      v9 = v4 + 40;
      do
      {
        v10 = *(void (**)(uint64_t *))(v9 - 8);
        v12 = *(_QWORD *)(v1 + v8);
        swift_retain();
        v10(&v12);
        swift_release();
        v9 += 16;
        --v7;
      }
      while (v7);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_185778D50()
{
  char *v0;
  id result;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char *v6;
  _QWORD v7[6];

  result = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_propertyAnimator], sel_state);
  if (result != (id)1)
  {
    v2 = (void *)objc_opt_self();
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v0;
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = sub_185779EFC;
    *(_QWORD *)(v4 + 24) = v3;
    v7[4] = sub_1855A65EC;
    v7[5] = v4;
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 1107296256;
    v7[2] = sub_1855D8DF4;
    v7[3] = &block_descriptor_32_3;
    v5 = _Block_copy(v7);
    v6 = v0;
    swift_retain();
    swift_release();
    objc_msgSend(v2, sel__performWithInProcessProgressAnimating_block_, v6, v5);
    _Block_release(v5);
    LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = (id)swift_release();
    if ((v6 & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_185778FF0(uint64_t a1, double a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(double *);
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t i;
  void (*v14)(uint64_t, double);
  uint64_t v15;
  uint64_t v16;
  double v17;
  char v18;
  double v19;
  double v20;
  double v21;
  double v24;
  double v25[3];

  v4 = (uint64_t *)(a1 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_c2Animations);
  swift_beginAccess();
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = v5 + 40;
    do
    {
      v8 = *(void (**)(double *))(v7 - 8);
      v25[0] = a2;
      swift_retain();
      v8(v25);
      swift_release();
      v7 += 16;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  v9 = (unint64_t *)(a1 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_keyframes);
  swift_beginAccess();
  v10 = *v9;
  if (!(v10 >> 62))
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v11)
      goto LABEL_7;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_186507E58();
  v11 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_7:
  if (v11 >= 1)
  {
    for (i = 0; i != v11; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0)
      {
        v16 = MEMORY[0x186DC4CB4](i, v10);
      }
      else
      {
        v16 = *(_QWORD *)(v10 + 8 * i + 32);
        swift_retain();
      }
      v17 = *(double *)(v16 + 48);
      v18 = *(_BYTE *)(v16 + 56);
      v19 = *(double *)(v16 + 16);
      v20 = v19 + *(double *)(v16 + 24);
      v21 = _UIMap(a2, v19, v20);
      if (v21 < 0.0 && v19 > 0.0)
        v21 = 0.0;
      if (v21 > 1.0 && v20 < 1.0)
        v24 = 1.0;
      else
        v24 = v21;
      if ((v18 & 1) != 0 || v17 != v24)
      {
        *(double *)(v16 + 48) = v24;
        *(_BYTE *)(v16 + 56) = 0;
        v14 = *(void (**)(uint64_t, double))(v16 + 32);
        v15 = swift_retain();
        v14(v15, v24);
        swift_release();
      }
      swift_release();
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_185779328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t Strong;
  uint64_t v7;
  void *v8;
  uint64_t result;
  _QWORD v10[6];

  v5 = (void *)objc_opt_self();
  Strong = swift_unknownObjectUnownedLoadStrong();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v10[4] = sub_1855A6A1C;
  v10[5] = v7;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1855D8DF4;
  v10[3] = &block_descriptor_67_1;
  v8 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(v5, sel__performWithInProcessProgressAnimating_block_, Strong, v8);

  _Block_release(v8);
  LOBYTE(Strong) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((Strong & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_18577982C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  v5 = v4;
  _s22HybridPropertyAnimatorC8KeyframeCMa();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 40) = a2;
  *(_QWORD *)(v10 + 48) = 0;
  *(_BYTE *)(v10 + 56) = 1;
  *(double *)(v10 + 16) = a3;
  *(double *)(v10 + 24) = a4;
  *(_QWORD *)(v10 + 32) = a1;
  v11 = (_QWORD *)(v5 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_keyframes);
  swift_beginAccess();
  swift_retain();
  v12 = swift_retain();
  MEMORY[0x186DC4654](v12);
  if (*(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_186507690();
  sub_1865076D8();
  sub_18650766C();
  swift_endAccess();
  if (*(_QWORD *)(v5 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__state) == 1
    && (*(_BYTE *)(v5 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isRunning) & 1) == 0)
  {
    swift_retain();
    sub_1857788E0((uint64_t)sub_185779F4C, v10, 0, 0, 1.0);
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1857799F8(uint64_t a1, double a2)
{
  uint64_t *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(double *);
  double v9;

  v3 = (uint64_t *)(a1 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_c2Animations);
  result = swift_beginAccess();
  v5 = *v3;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = v5 + 40;
    do
    {
      v8 = *(void (**)(double *))(v7 - 8);
      v9 = a2;
      swift_retain();
      v8(&v9);
      swift_release();
      v7 += 16;
      --v6;
    }
    while (v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_185779AA4(uint64_t result, char a2, uint64_t a3)
{
  if ((result & 1) != 0
    && (a2 & 1) == 0
    && (*(_BYTE *)(a3 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_isC2Finished) & 1) == 0
    && *(_BYTE *)(a3 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isRunning) == 1)
  {
    *(_BYTE *)(a3 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_isC2Finished) = 1;
    if (*(_QWORD *)(a3 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__state) == 1)
    {
      if (*(_BYTE *)(a3 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__pausesOnCompletion) == 1)
        return sub_185777778();
      else
        return sub_185778B40();
    }
  }
  return result;
}

uint64_t _s22HybridPropertyAnimatorCMa()
{
  return objc_opt_self();
}

uint64_t _s22HybridPropertyAnimatorC8KeyframeCMa()
{
  return objc_opt_self();
}

double _UIMap(double a1, double a2, double a3)
{
  return (a1 - a2) / (a3 - a2) + 0.0;
}

uint64_t sub_185779C98(uint64_t result, _BYTE *a2)
{
  uint64_t v2;
  BOOL v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;

  v2 = *(_QWORD *)&a2[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__state];
  if (v2)
    v3 = v2 == 2;
  else
    v3 = 1;
  if (!v3)
  {
    if (v2 == 1)
    {
      v5 = OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isRunning;
      if ((a2[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isRunning] & 1) == 0)
      {
        v6 = result;
        v7 = a2[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isReversed];
        *(_QWORD *)&a2[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_completionPosition] = v7;
        v8 = 1.0;
        if ((_DWORD)v7)
          v8 = 0.0;
        *(double *)&a2[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__fractionComplete] = v8;
        sub_185778D50();
        a2[v5] = 1;
        *(_QWORD *)&a2[OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_springBehaviorWhenContinued] = v6;
        swift_unknownObjectRelease();
        v9 = swift_allocObject();
        *(_QWORD *)(v9 + 16) = a2;
        v10 = swift_allocObject();
        *(_QWORD *)(v10 + 16) = a2;
        v11 = a2;
        swift_unknownObjectRetain();
        sub_1857788E0((uint64_t)sub_18577A188, v9, (uint64_t)sub_18577A180, v10, 1.0);
        swift_release();
        return swift_release();
      }
    }
    else
    {
      result = sub_186507E04();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_185779E14()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_185779E38()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_185779E64()
{
  uint64_t v0;

  return (*(uint64_t (**)(double))(v0 + 16))(*(double *)(*(_QWORD *)(v0 + 32)
                                                                 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__fractionComplete));
}

uint64_t sub_185779E98()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_185779EC4(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, _QWORD);

  v3 = *(uint64_t (**)(uint64_t, _QWORD))(v2 + 16);
  if (v3)
    return v3(result & 1, a2 & 1);
  return result;
}

id sub_185779EFC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator_propertyAnimator), sel_pauseAnimation);
}

uint64_t sub_185779F18()
{
  return swift_deallocObject();
}

uint64_t sub_185779F28()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_185779F50()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_185779F74(double *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(double))(v1 + 16))(*a1);
}

uint64_t sub_185779F98()
{
  swift_unknownObjectUnownedDestroy();
  return swift_deallocObject();
}

uint64_t sub_185779FC0()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_56Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18577A000(double a1)
{
  uint64_t v1;

  return sub_1857799F8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_18577A018(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_185779AA4(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_18577A030()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_18577A054()
{
  uint64_t v0;

  sub_1857783F4(v0);
}

uint64_t sub_18577A05C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_18577A080(double a1)
{
  uint64_t v1;

  return sub_185778600(*(void **)(v1 + 16), *(_BYTE *)(v1 + 24), *(unsigned int *)(v1 + 28), a1);
}

uint64_t sub_18577A090()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_18577A0B4()
{
  uint64_t v0;
  double v1;

  v1 = *(double *)(v0 + 24);
  if (*(_BYTE *)(v0 + 32))
    v1 = 1.0 - v1;
  return objc_msgSend(*(id *)(v0 + 16), sel_setValue_, v1);
}

uint64_t sub_18577A0DC()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_22Tm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_18577A11C()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  uint64_t v3;
  double v4;
  double v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(double *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(double *)(v3 + 16);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtCE5UIKitCSo6UIView22HybridPropertyAnimator__isReversed) != 1)
  {
    v5 = 1.0;
    if (v4 > v2)
      return;
    goto LABEL_5;
  }
  v5 = 0.0;
  if (v4 + *(double *)(v3 + 24) >= v2)
LABEL_5:
    sub_185777ED0(v5);
}

uint64_t sub_18577A1F0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  void (*v14)(uint64_t, uint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32);
  v14(a5, a1, AssociatedTypeWitness);
  v12 = a5 + *(int *)(type metadata accessor for UITypedKeyDiff(0, a3, a4, v11) + 36);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v14)(v12, a2, AssociatedTypeWitness);
}

uint64_t UITypedKeyDiff.oldValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a1, v1, AssociatedTypeWitness);
}

uint64_t UITypedKeyDiff.newValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;

  v4 = v2 + *(int *)(a1 + 36);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, v4, AssociatedTypeWitness);
}

uint64_t dispatch thunk of static UITypedKey.defaultValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_18577A33C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_18577A3B8(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t *, uint64_t *, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  v8 = ~v7;
  v9 = v6 + v7;
  v10 = ((v6 + v7) & ~v7) + v6;
  if (v7 > 7 || (*(_DWORD *)(v5 + 80) & 0x100000) != 0 || v10 > 0x18)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v7 + 16) & v8));
    swift_retain();
  }
  else
  {
    v14 = AssociatedTypeWitness;
    v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16);
    v15(a1, a2, AssociatedTypeWitness);
    v15((uint64_t *)(((unint64_t)a1 + v9) & v8), (uint64_t *)(((unint64_t)a2 + v9) & v8), v14);
  }
  return a1;
}

uint64_t sub_18577A488(unint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t (*v5)(unint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = *(uint64_t (**)(unint64_t, uint64_t))(v3 + 8);
  v5(a1, AssociatedTypeWitness);
  return v5((*(_QWORD *)(v3 + 64) + a1 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80), AssociatedTypeWitness);
}

unint64_t sub_18577A510(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(unint64_t, unint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
  v6(a1, a2, AssociatedTypeWitness);
  v6((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

unint64_t sub_18577A5A0(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(unint64_t, unint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24);
  v6(a1, a2, AssociatedTypeWitness);
  v6((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

unint64_t sub_18577A630(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(unint64_t, unint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32);
  v6(a1, a2, AssociatedTypeWitness);
  v6((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

unint64_t sub_18577A6C0(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(unint64_t, unint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40);
  v6(a1, a2, AssociatedTypeWitness);
  v6((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_18577A750(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (!a2)
    return 0;
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (a2 <= v6)
    goto LABEL_18;
  v7 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((a2 - v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if ((_DWORD)v6)
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, v6, AssociatedTypeWitness);
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if ((_DWORD)v7)
  {
    if (v7 > 3)
      LODWORD(v7) = 4;
    __asm { BR              X11 }
  }
  return (v6 + v11 + 1);
}

void sub_18577A8A0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 <= v7)
  {
    v9 = 0u;
  }
  else if (v8 <= 3)
  {
    v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *(_WORD *)a1 = v12;
          a1[2] = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *(_WORD *)a1 = v12;
        }
        else
        {
          *a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for UITypedKeyDiff(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UITypedKeyDiff);
}

uint64_t dispatch thunk of UITypedKeyObservable.observe<A>(_:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

void sub_18577AA98(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(double *)a2 = sub_18577AAC0(a1);
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v5;
}

double sub_18577AAC0(uint64_t a1)
{
  id v2;
  void *v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  _BYTE v9[32];
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v7 = 0;
  v8 = 0.0;
  v5 = 0.0;
  v6 = 0;
  sub_1850F69D4(a1, (uint64_t)v9);
  type metadata accessor for CGColor(0);
  swift_dynamicCast();
  v2 = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithCGColor_, v4);

  objc_msgSend(v2, sel_getRed_green_blue_alpha_, &v8, &v7, &v6, &v5);
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  return v5 * v8;
}

ValueMetadata *type metadata accessor for UIAnimatableColor()
{
  return &type metadata for UIAnimatableColor;
}

unint64_t sub_18577ABCC()
{
  unint64_t result;

  result = qword_1EDD82A08;
  if (!qword_1EDD82A08)
  {
    result = MEMORY[0x186DC9F28](&unk_1866762E8, &type metadata for UIAnimatableColor);
    atomic_store(result, (unint64_t *)&qword_1EDD82A08);
  }
  return result;
}

unint64_t sub_18577AC14()
{
  unint64_t result;

  result = qword_1EDD82A10;
  if (!qword_1EDD82A10)
  {
    result = MEMORY[0x186DC9F28](&unk_186676244, &type metadata for UIAnimatableColor);
    atomic_store(result, (unint64_t *)&qword_1EDD82A10);
  }
  return result;
}

unint64_t sub_18577AC58(uint64_t a1)
{
  unint64_t result;

  result = sub_18577AC7C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_18577AC7C()
{
  unint64_t result;

  result = qword_1EDD82AC0;
  if (!qword_1EDD82AC0)
  {
    result = MEMORY[0x186DC9F28](&unk_186676294, &type metadata for UIAnimatableColor);
    atomic_store(result, (unint64_t *)&qword_1EDD82AC0);
  }
  return result;
}

unint64_t sub_18577ACC0(uint64_t a1)
{
  unint64_t result;

  result = sub_18577ACE4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_18577ACE4()
{
  unint64_t result;

  result = qword_1EDD82A20;
  if (!qword_1EDD82A20)
  {
    result = MEMORY[0x186DC9F28](&unk_1866762CC, &type metadata for UIAnimatableColor);
    atomic_store(result, (unint64_t *)&qword_1EDD82A20);
  }
  return result;
}

uint64_t sub_18577AD28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18573F970(a1, a2, a3, &qword_1EDD8AE08);
}

uint64_t sub_18577AD34(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_1EDD8AE08);
}

uint64_t sub_18577AD40()
{
  sub_1852478E0(&qword_1EDD88130, MEMORY[0x1E0DC1600], MEMORY[0x1E0DC15F8]);
  return sub_186506A60();
}

uint64_t sub_18577AD88()
{
  return sub_186506F88();
}

uint64_t sub_18577ADA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18573F970(a1, a2, a3, &qword_1EDD8AE10);
}

uint64_t sub_18577ADB4(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_1EDD8AE10);
}

uint64_t sub_18577ADC0()
{
  sub_1852478E0(&qword_1EDD81480, MEMORY[0x1E0DC15E8], MEMORY[0x1E0DC15E0]);
  return sub_186506A60();
}

uint64_t sub_18577AE08()
{
  return sub_186506F7C();
}

uint64_t sub_18577AE28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_186506880();
  result = sub_186506F94();
  *a1 = result;
  return result;
}

uint64_t UITextView._intelligenceBaseClass.getter()
{
  return sub_1851F9080(0, &qword_1EDD8AE00);
}

uint64_t sub_18577AEA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  void *v4;
  void *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  id v31;
  void *v32;
  char *v33;
  char v34;
  id v35;
  void *v36;
  uint64_t KeyPath;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  int v45;
  _QWORD v46[2];
  id v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  int v55;
  char *v56;
  uint64_t aBlock;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  void *v60;
  uint64_t (*v61)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v62;

  v5 = v4;
  v53 = a1;
  v9 = sub_1865069AC();
  MEMORY[0x1E0C80A78](v9);
  v54 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_186506910();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v49 = (char *)v46 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD82838);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v21 = MEMORY[0x1E0C80A78](v20).n128_u64[0];
  v23 = (char *)v46 - v22;
  v24 = objc_msgSend(v5, sel_attributedText, v21);
  v56 = v14;
  v52 = a2;
  v55 = a3;
  if (v24)
  {
    v25 = v24;
    v50 = a4;
    v51 = v5;
    if ((a3 & 1) == 0)
    {
      v26 = objc_msgSend(v24, sel_attributedSubstringFromRange_, v53, a2);

      v25 = v26;
    }
    swift_getKeyPath();
    sub_186506F94();
    sub_1852478E0(&qword_1EDD81488, (uint64_t (*)(uint64_t))MEMORY[0x1E0DC1620], MEMORY[0x1E0DC15D8]);
    v27 = v25;
    sub_186506934();
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v28(v19, 0, 1, v11);
    v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
    v30 = v29(v19, 1, v11);
    if (v30 == 1)
    {
      v5 = v51;

      sub_18519F088((uint64_t)v19, (uint64_t *)&unk_1EDD82838);
      a4 = v50;
      v28(v23, 1, 1, v11);
    }
    else
    {
      v41 = v49;
      v46[0] = *(_QWORD *)(v12 + 32);
      ((void (*)(char *, char *, uint64_t))v46[0])(v49, v19, v11);
      v48 = *(_QWORD *)off_1E1678D90;
      v47 = objc_msgSend(v27, sel_length);
      v42 = swift_allocObject();
      *(_QWORD *)(v42 + 16) = v41;
      v43 = swift_allocObject();
      *(_QWORD *)(v43 + 16) = sub_18577C208;
      *(_QWORD *)(v43 + 24) = v42;
      v46[1] = v42;
      v61 = sub_1855E581C;
      v62 = v43;
      aBlock = MEMORY[0x1E0C809B0];
      v58 = 1107296256;
      v59 = sub_18573ABC4;
      v60 = &block_descriptor_73;
      v44 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v27, sel_enumerateAttribute_inRange_options_usingBlock_, v48, 0, v47, 0, v44);
      _Block_release(v44);

      LOBYTE(v44) = swift_isEscapingClosureAtFileLocation();
      result = swift_release();
      if ((v44 & 1) != 0)
      {
        __break(1u);
        return result;
      }
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v23, v41, v11);
      v28(v23, 0, 1, v11);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v41, v11);
      swift_release();
      v45 = v29(v23, 1, v11);
      a4 = v50;
      v5 = v51;
      if (v45 != 1)
        return ((uint64_t (*)(uint64_t, char *, uint64_t))v46[0])(v50, v23, v11);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v23, 1, 1, v11);
  }
  sub_18519F088((uint64_t)v23, (uint64_t *)&unk_1EDD82838);
  v31 = objc_msgSend(v5, sel_text);
  if (v31)
  {
    v32 = v31;
    sub_1865074F8();

  }
  v33 = v56;
  if ((v55 & 1) != 0 || (sub_1865078AC(), (v34 & 1) != 0))
  {
    sub_1865069A0();
    sub_18650691C();
  }
  else
  {
    sub_1865075D0();
    swift_bridgeObjectRelease();
    sub_1865069A0();
    sub_186506928();
  }
  v35 = objc_msgSend(v5, sel_font);
  if (v35)
  {
    v36 = v35;
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    v46[-2] = v38;
    swift_getKeyPath();
    objc_msgSend(v36, sel_pointSize);
    aBlock = v39;
    LOBYTE(v58) = 0;
    sub_1852478E0(&qword_1EDD81480, MEMORY[0x1E0DC15E8], MEMORY[0x1E0DC15E0]);
    sub_1865068A4();

  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a4, v33, v11);
}

uint64_t sub_18577B4F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  void *v22;
  uint64_t *v23;
  char *v24;
  uint64_t KeyPath;
  uint64_t v26;
  void *v27;
  void (*v28)(_BYTE *, _QWORD);
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char v32;
  _BYTE v33[24];
  uint64_t v34;

  v29 = a2;
  v30 = a3;
  v7 = sub_186506910();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD814A8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD814A0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v29 - v19;
  sub_18519F0C4(a1, (uint64_t)v33, &qword_1ECD75B20);
  if (v34)
  {
    sub_1851F9080(0, (unint64_t *)&qword_1ECD74A30);
    result = swift_dynamicCast();
    if ((result & 1) == 0)
      return result;
    v22 = v31;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a5, v7);
    sub_1852478E0(&qword_1EDD81478, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF240], MEMORY[0x1E0CAF230]);
    sub_1865078A0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {

      v23 = &qword_1EDD814A8;
      v24 = v13;
    }
    else
    {
      sub_1850F26F8((uint64_t)v13, (uint64_t)v20, &qword_1EDD814A0);
      sub_18519F0C4((uint64_t)v20, (uint64_t)v17, &qword_1EDD814A0);
      KeyPath = swift_getKeyPath();
      MEMORY[0x1E0C80A78](KeyPath);
      *(&v29 - 2) = v26;
      swift_getKeyPath();
      objc_msgSend(v22, sel_pointSize, v29, v30);
      v31 = v27;
      v32 = 0;
      sub_1856C3C0C();
      v28 = (void (*)(_BYTE *, _QWORD))sub_18650694C();
      sub_1852478E0(&qword_1EDD81480, MEMORY[0x1E0DC15E8], MEMORY[0x1E0DC15E0]);
      sub_186506A00();
      v28(v33, 0);

      sub_18519F088((uint64_t)v17, &qword_1EDD814A0);
      v24 = v20;
      v23 = &qword_1EDD814A0;
    }
  }
  else
  {
    v23 = &qword_1ECD75B20;
    v24 = v33;
  }
  return sub_18519F088((uint64_t)v24, v23);
}

char *_sSo10UITextViewC5UIKitE27_intelligenceCollectContent2in9collectorySo6CGRectV_21UIIntelligenceSupport0J16ElementCollectorCtF_0(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  char *v31;
  unsigned int v32;
  char *result;
  void *v34;
  unsigned __int8 v35;
  id v36;
  char v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t KeyPath;
  uint64_t v71;
  void (*v72)(_QWORD *, _QWORD);
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  unsigned int v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  _QWORD v97[4];

  v2 = v1;
  v91 = a1;
  v3 = sub_186507024();
  v89 = *(_QWORD *)(v3 - 8);
  v90 = v3;
  MEMORY[0x1E0C80A78](v3);
  v88 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD81498);
  MEMORY[0x1E0C80A78](v5);
  v84 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_186506FB8();
  v86 = *(_QWORD *)(v7 - 8);
  v87 = v7;
  MEMORY[0x1E0C80A78](v7);
  v85 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD81490);
  MEMORY[0x1E0C80A78](v9);
  v83 = (uint64_t)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v73 - v12;
  MEMORY[0x1E0C80A78](v14);
  v95 = (uint64_t)&v73 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD814A8);
  MEMORY[0x1E0C80A78](v16);
  v81 = (char *)&v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD814A0);
  v79 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v78 = (uint64_t)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v77 = (uint64_t)&v73 - v20;
  v21 = sub_186507144();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_186506910();
  v25 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v27 = (char *)&v73 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v29 = MEMORY[0x1E0C80A78](v28).n128_u64[0];
  v31 = (char *)&v73 - v30;
  v32 = objc_msgSend(v1, sel_isSecureTextEntry, v29);
  v93 = objc_msgSend(v2, sel_textContentType);
  v82 = v32;
  if ((v32 & 1) != 0)
    goto LABEL_6;
  result = (char *)objc_msgSend(v2, sel_textInputTraits);
  if (result)
  {
    v34 = result;
    v35 = objc_msgSend(result, sel_wasEverSecureTextEntry);

    if ((v35 & 1) != 0 || v93 && (v36 = v93, v37 = sub_185665E50(), v36, (v37 & 1) != 0))
    {
LABEL_6:
      sub_186506904();
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v31, v27, v94);
      goto LABEL_7;
    }
    v76 = v13;
    v74 = (char *)objc_msgSend(v2, sel_selectedRange);
    v75 = v58;
    sub_186506E50();
    __swift_project_boxed_opaque_existential_0Tm(v97, v97[3]);
    sub_186507054();
    v59 = sub_186507120();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v97);
    if ((v59 & 1) == 0)
      goto LABEL_25;
    result = (char *)objc_msgSend(v2, sel__visibleRangeWithLayout_, 0);
    v61 = &result[v60];
    v62 = (uint64_t)v81;
    if (__OFADD__(result, v60))
    {
      __break(1u);
    }
    else
    {
      v63 = v75;
      v13 = v76;
      v64 = v80;
      if (!__OFADD__(v74, v75))
      {
        if ((uint64_t)v61 <= (uint64_t)&v74[v75])
          v61 = &v74[v75];
        if ((uint64_t)result >= (uint64_t)v74)
          result = v74;
        v65 = v61 - result;
        if (!__OFSUB__(v61, result))
        {
          if (!__OFSUB__(v74, result))
          {
LABEL_26:
            sub_18577AEA8((uint64_t)result, v65, (v59 & 1) == 0, (uint64_t)v27);
            (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v31, v27, v94);
            if (v63 >= 1)
            {
              (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v31, v94);
              sub_1852478E0(&qword_1EDD81478, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF240], MEMORY[0x1E0CAF230]);
              sub_1865078A0();
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v62, 1, v64) == 1)
              {
                v66 = &qword_1EDD814A8;
                v67 = v62;
              }
              else
              {
                v68 = v77;
                sub_1850F26F8(v62, v77, &qword_1EDD814A0);
                v69 = v78;
                sub_18519F0C4(v68, v78, &qword_1EDD814A0);
                KeyPath = swift_getKeyPath();
                MEMORY[0x1E0C80A78](KeyPath);
                *(&v73 - 2) = v71;
                swift_getKeyPath();
                v96 = 1;
                sub_1856C3C0C();
                v72 = (void (*)(_QWORD *, _QWORD))sub_18650694C();
                sub_1852478E0(&qword_1EDD88130, MEMORY[0x1E0DC1600], MEMORY[0x1E0DC15F8]);
                sub_186506A00();
                v72(v97, 0);
                v13 = v76;
                sub_18519F088(v69, &qword_1EDD814A0);
                v67 = v68;
                v66 = &qword_1EDD814A0;
              }
              sub_18519F088(v67, v66);
            }
LABEL_7:
            v38 = sub_186506FAC();
            v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56);
            v39(v95, 1, 1, v38);
            v40 = objc_msgSend(v2, sel_isEditable);
            v92 = v31;
            if (!v40)
            {
LABEL_13:
              v46 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
              v47 = v31;
              v48 = v25;
              v49 = v94;
              v50 = v95;
              v46(v27, v47, v94);
              sub_18519F0C4(v50, v83, &qword_1EDD81490);
              v51 = sub_186507060();
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v84, 1, 1, v51);
              v52 = v85;
              sub_186506F70();
              v54 = v86;
              v53 = v87;
              v55 = v88;
              (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v88, v52, v87);
              v56 = v89;
              v57 = v90;
              (*(void (**)(char *, _QWORD, uint64_t))(v89 + 104))(v55, *MEMORY[0x1E0DC16B8], v90);
              sub_186506E2C();

              (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v57);
              (*(void (**)(char *, uint64_t))(v54 + 8))(v52, v53);
              sub_18519F088(v50, &qword_1EDD81490);
              return (char *)(*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v92, v49);
            }
            v41 = (uint64_t)v13;
            v42 = -[UITextView _attributedPlaceholder]((uint64_t)v2);
            if (v42)
            {
              v43 = v42;
              v44 = objc_msgSend(v42, sel_string);

              sub_1865074F8();
              if (!v93)
              {
LABEL_12:
                objc_msgSend(v2, sel_isFirstResponder);
                sub_186506FA0();
                v45 = v95;
                sub_18519F088(v95, &qword_1EDD81490);
                v39(v41, 0, 1, v38);
                sub_1850F26F8(v41, v45, &qword_1EDD81490);
                v31 = v92;
                goto LABEL_13;
              }
            }
            else if (!v93)
            {
              goto LABEL_12;
            }
            sub_1865074F8();
            goto LABEL_12;
          }
          __break(1u);
LABEL_25:
          result = 0;
          v65 = 0;
          v13 = v76;
          v64 = v80;
          v62 = (uint64_t)v81;
          v63 = v75;
          goto LABEL_26;
        }
        goto LABEL_33;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_18577C06C()
{
  return sub_186506F88();
}

uint64_t sub_18577C08C()
{
  sub_1852478E0(&qword_1EDD88130, MEMORY[0x1E0DC1600], MEMORY[0x1E0DC15F8]);
  return sub_186506A60();
}

uint64_t sub_18577C0D4()
{
  return 8;
}

uint64_t sub_18577C0E0()
{
  return swift_release();
}

uint64_t sub_18577C0E8(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_18577C0F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18573F970(a1, a2, a3, &qword_1EDD8AE08) & 1;
}

uint64_t sub_18577C114(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_1EDD8AE08);
}

_QWORD *sub_18577C120(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_18577C12C()
{
  return sub_186506F7C();
}

uint64_t sub_18577C14C()
{
  sub_1852478E0(&qword_1EDD81480, MEMORY[0x1E0DC15E8], MEMORY[0x1E0DC15E0]);
  return sub_186506A60();
}

uint64_t sub_18577C194()
{
  return 8;
}

uint64_t sub_18577C1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_18573F970(a1, a2, a3, &qword_1EDD8AE10) & 1;
}

uint64_t sub_18577C1C0(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_1EDD8AE10);
}

uint64_t sub_18577C1CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_186506880();
  result = sub_186506F94();
  *a1 = result;
  return result;
}

uint64_t sub_18577C1F8()
{
  return swift_deallocObject();
}

uint64_t sub_18577C208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_18577B4F4(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_18577C210()
{
  return swift_deallocObject();
}

uint64_t sub_18577C22C(uint64_t a1)
{
  return sub_18577C260(a1, (uint64_t (*)(void))sub_185646DC4, (uint64_t (*)(_QWORD))MEMORY[0x1E0DC16F0]);
}

uint64_t sub_18577C240(unint64_t a1)
{
  return sub_18577C3F0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_185785D70);
}

uint64_t sub_18577C24C(uint64_t a1)
{
  return sub_18577C260(a1, (uint64_t (*)(void))sub_18564792C, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998]);
}

uint64_t sub_18577C260(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_18577C3D8(unint64_t a1)
{
  return sub_18577C3F0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_185785F8C);
}

uint64_t sub_18577C3E4(unint64_t a1)
{
  return sub_18577C3F0(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1857861A8);
}

uint64_t sub_18577C3F0(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_186507E58();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_186507E58();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x186DC4CC0](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_186507E58();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_18650766C();
  }
  __break(1u);
  return result;
}

uint64_t sub_18577C5AC(uint64_t a1)
{
  unint64_t *v1;
  unint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  int64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  int64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t);
  void (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;

  v2 = v1;
  v55 = sub_186506CA0();
  v4 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v57 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD864D0);
  MEMORY[0x1E0C80A78](v6);
  v58 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v54 = (uint64_t)&v49 - v9;
  MEMORY[0x1E0C80A78](v10);
  v56 = (uint64_t)&v49 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD89570);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD864D8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v2;
  v19 = *(_QWORD *)(*v2 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v18;
  if (!isUniquelyReferenced_nonNull_native || (v21 = *(_QWORD *)(v18 + 24) >> 1, v21 <= v19))
  {
    v18 = sub_185647BF0(isUniquelyReferenced_nonNull_native, v19 + 1, 1, v18);
    *v2 = v18;
    v21 = *(_QWORD *)(v18 + 24) >> 1;
  }
  v22 = *(_QWORD *)(v18 + 16);
  v23 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v24 = *(_QWORD *)(v4 + 72);
  v25 = v21 - v22;
  v26 = v18 + v23 + v24 * v22;
  sub_18519F0C4(a1, (uint64_t)v14, &qword_1EDD89570);
  v27 = sub_185643C28((uint64_t)v17, v26, v25);
  sub_18519F088(a1, &qword_1EDD89570);
  if (v27 < 1)
  {
    __break(1u);
    goto LABEL_10;
  }
  v28 = *(_QWORD *)(*v2 + 16);
  v29 = __OFADD__(v28, v27);
  v30 = v28 + v27;
  if (v29)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  *(_QWORD *)(*v2 + 16) = v30;
  if (v27 != v25)
  {
    v31 = &qword_1EDD864D8;
    v32 = (uint64_t)v17;
    return sub_18519F088(v32, v31);
  }
LABEL_11:
  v34 = *(_QWORD *)(*v2 + 16);
  v35 = v56;
  sub_1850F26F8((uint64_t)v17, v56, &qword_1EDD864D0);
  v36 = v55;
  v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v50(v17, 1, 1, v55);
  v37 = v35;
  v38 = v54;
  sub_18519F0C4(v37, v54, &qword_1EDD864D0);
  v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v39 = v52(v38, 1, v36);
  v40 = v58;
  if (v39 != 1)
  {
    do
    {
      sub_18519F088(v38, &qword_1EDD864D0);
      v41 = *v2;
      v42 = *(_QWORD *)(*v2 + 24);
      v43 = v42 >> 1;
      if ((uint64_t)(v42 >> 1) < v34 + 1)
      {
        v41 = sub_185647BF0(v42 > 1, v34 + 1, 1, *v2);
        *v2 = v41;
        v43 = *(_QWORD *)(v41 + 24) >> 1;
      }
      sub_18519F0C4(v56, v40, &qword_1EDD864D0);
      if (v52(v40, 1, v36) == 1)
      {
        v36 = v55;
LABEL_25:
        v40 = v58;
        sub_18519F088(v58, &qword_1EDD864D0);
        v43 = v34;
      }
      else
      {
        v53 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 32);
        if (v34 > v43)
          v43 = v34;
        v44 = v41 + v23 + v24 * v34;
        v36 = v55;
        v51 = v43;
        while (1)
        {
          v53(v57, v58, v36);
          if (v43 == v34)
            break;
          v45 = v56;
          sub_18519F088(v56, &qword_1EDD864D0);
          v53((char *)v44, (uint64_t)v57, v36);
          sub_1850F26F8((uint64_t)v17, v45, &qword_1EDD864D0);
          v50(v17, 1, 1, v36);
          v46 = v45;
          v43 = v51;
          v47 = v58;
          ++v34;
          sub_18519F0C4(v46, v58, &qword_1EDD864D0);
          v48 = v47;
          v36 = v55;
          v44 += v24;
          if (v52(v48, 1, v55) == 1)
            goto LABEL_25;
        }
        (*(void (**)(char *, uint64_t))(v4 + 8))(v57, v36);
        v34 = v43;
        v40 = v58;
      }
      *(_QWORD *)(*v2 + 16) = v43;
      v38 = v54;
      sub_18519F0C4(v56, v54, &qword_1EDD864D0);
    }
    while (v52(v38, 1, v36) != 1);
  }
  sub_18519F088(v56, &qword_1EDD864D0);
  sub_18519F088((uint64_t)v17, &qword_1EDD864D8);
  v32 = v38;
  v31 = &qword_1EDD864D0;
  return sub_18519F088(v32, v31);
}

uint64_t sub_18577CA80(unint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_186507E58();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_186507E58();
    swift_bridgeObjectRelease();
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_23;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1;
    if (v9 >= v6)
      goto LABEL_15;
    v5 = 1;
  }
  if (v4 >> 62)
    goto LABEL_25;
  v10 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v10 <= v6)
      v10 = v6;
    swift_bridgeObjectRetain();
    v4 = MEMORY[0x186DC4CC0](v5, v10, 1, v4);
    swift_bridgeObjectRelease();
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1;
LABEL_15:
    result = sub_1857867FC(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, v9 - *(_QWORD *)(v8 + 16), a1);
    if (v12 >= v3)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v10 = sub_186507E58();
    swift_bridgeObjectRelease();
  }
  if (v12 < 1)
    goto LABEL_19;
  v13 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v14 = __OFADD__(v13, v12);
  v15 = v13 + v12;
  if (!v14)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v15;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_18650766C();
  }
  __break(1u);
  return result;
}

uint64_t sub_18577CC40(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  NSObject *v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  uint64_t result;
  _QWORD v11[6];

  v5 = *v2;
  if (qword_1EDD83200 != -1)
    swift_once();
  v6 = qword_1EDDA8750;
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v5;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1857884E4;
  *(_QWORD *)(v8 + 24) = v7;
  v11[4] = sub_1855A6A1C;
  v11[5] = v8;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1855D8DF4;
  v11[3] = &block_descriptor_206;
  v9 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  _Block_release(v9);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v9 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_18577CDA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t result;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = (_QWORD *)(v2 + 112);
  swift_beginAccess();
  v7 = *(_QWORD **)(v2 + 112);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v2 + 112) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_185646DB0(0, v7[2] + 1, 1, v7);
    *v6 = v7;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    v7 = sub_185646DB0((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
    *v6 = v7;
  }
  v7[2] = v10 + 1;
  v11 = &v7[2 * v10];
  v11[4] = sub_185281934;
  v11[5] = v5;
  swift_endAccess();
  v12 = MEMORY[0x186DCA138](v2 + 208);
  result = swift_unknownObjectRelease();
  if (!v12)
  {
    *(_QWORD *)(v2 + 216) = &off_1E1684930;
    result = swift_unknownObjectWeakAssign();
    *(_BYTE *)(v2 + 297) = 1;
  }
  return result;
}

void sub_18577CED4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  void *v12;
  void *v13;
  unsigned int v14;
  void *v15;
  void *v16;
  char **v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  void *v22;
  uint64_t (*v23)();
  uint64_t v24;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = (_QWORD *)(v2 + 88);
  swift_beginAccess();
  v7 = *(_QWORD **)(v2 + 88);
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v2 + 88) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_185646DB0(0, v7[2] + 1, 1, v7);
    *v6 = v7;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    v7 = sub_185646DB0((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
    *v6 = v7;
  }
  v7[2] = v10 + 1;
  v11 = &v7[2 * v10];
  v11[4] = sub_185228348;
  v11[5] = v5;
  swift_endAccess();
  if ((*(_BYTE *)(v2 + 296) & 1) == 0)
  {
    v12 = (void *)MEMORY[0x186DCA138](v2 + 304);

    if (!v12)
    {
      v13 = (void *)objc_opt_self();
      swift_retain();
      v14 = objc_msgSend(v13, sel_currentPhase);
      v15 = (void *)objc_opt_self();
      if (v14 == -1)
      {
        v23 = sub_185787C3C;
        v24 = v2;
        v19 = MEMORY[0x1E0C809B0];
        v20 = 1107296256;
        v21 = sub_18530A69C;
        v22 = &block_descriptor_95_0;
        v16 = _Block_copy(&v19);
        swift_retain();
        swift_release();
        v17 = &selRef_scheduledPreCommitFuture_;
      }
      else
      {
        v23 = sub_185787C3C;
        v24 = v2;
        v19 = MEMORY[0x1E0C809B0];
        v20 = 1107296256;
        v21 = sub_18530A69C;
        v22 = &block_descriptor_92_0;
        v16 = _Block_copy(&v19);
        swift_retain();
        swift_release();
        v17 = &selRef_scheduledPostCommitFuture_;
      }
      v18 = objc_msgSend(v15, *v17, v16);
      swift_release();
      _Block_release(v16);
      swift_unknownObjectWeakAssign();

    }
  }
}

uint64_t sub_18577D12C(uint64_t result, float a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;

  v2 = 0;
  v3 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (v6)
  {
    v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v9 = v8 | (v2 << 6);
LABEL_5:
    v10 = *(_QWORD *)(result + 48);
    if (a2 <= *(float *)(v10 + 4 * v9))
      a2 = *(float *)(v10 + 4 * v9);
  }
  v11 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v11 >= v7)
    return result;
  v12 = *(_QWORD *)(v3 + 8 * v11);
  ++v2;
  if (v12)
    goto LABEL_25;
  v2 = v11 + 1;
  if (v11 + 1 >= v7)
    return result;
  v12 = *(_QWORD *)(v3 + 8 * v2);
  if (v12)
    goto LABEL_25;
  v2 = v11 + 2;
  if (v11 + 2 >= v7)
    return result;
  v12 = *(_QWORD *)(v3 + 8 * v2);
  if (v12)
    goto LABEL_25;
  v2 = v11 + 3;
  if (v11 + 3 >= v7)
    return result;
  v12 = *(_QWORD *)(v3 + 8 * v2);
  if (v12)
    goto LABEL_25;
  v2 = v11 + 4;
  if (v11 + 4 >= v7)
    return result;
  v12 = *(_QWORD *)(v3 + 8 * v2);
  if (v12)
  {
LABEL_25:
    v6 = (v12 - 1) & v12;
    v9 = __clz(__rbit64(v12)) + (v2 << 6);
    goto LABEL_5;
  }
  v13 = v11 + 5;
  if (v13 >= v7)
    return result;
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v2 = v13;
    goto LABEL_25;
  }
  while (1)
  {
    v2 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v2 >= v7)
      return result;
    v12 = *(_QWORD *)(v3 + 8 * v2);
    ++v13;
    if (v12)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_18577D3DC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InProcessAnimationManager.FixedRateLinksObserver();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_18577D420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  void *v22;
  void *ObjCClassFromObject;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (**v31)();
  uint64_t v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  _QWORD v43[2];
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v1 = v0;
  v50 = sub_18650796C();
  v2 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v4 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_186507954();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v5);
  v7 = sub_186507330();
  MEMORY[0x1E0C80A78](v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD831D8);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 16777218;
  *(_QWORD *)(v1 + 16) = v8;
  *(_BYTE *)(v1 + 24) = 1;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v1 + 56) = 0;
  v9 = *(_DWORD *)(MEMORY[0x1E0CD23C0] + 8);
  *(_QWORD *)(v1 + 64) = *MEMORY[0x1E0CD23C0];
  *(_DWORD *)(v1 + 72) = v9;
  v10 = MEMORY[0x1E0DEE9D8];
  v11 = sub_185786C2C(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v1 + 80) = sub_185786D94(v11);
  *(_QWORD *)(v1 + 88) = v10;
  *(_QWORD *)(v1 + 96) = v10;
  *(_QWORD *)(v1 + 104) = v10;
  *(_QWORD *)(v1 + 112) = v10;
  *(_QWORD *)(v1 + 120) = v10;
  *(_QWORD *)(v1 + 128) = v10;
  *(_QWORD *)(v1 + 136) = sub_185786ECC(v10);
  *(_QWORD *)(v1 + 144) = sub_185786ECC(v10);
  *(_QWORD *)(v1 + 152) = sub_185786ECC(v10);
  *(_QWORD *)(v1 + 160) = sub_185786C2C(v10);
  *(_QWORD *)(v1 + 168) = 0;
  *(_DWORD *)(v1 + 176) = 5;
  *(_QWORD *)(v1 + 216) = 0;
  *(_QWORD *)(v1 + 180) = 0;
  *(_QWORD *)(v1 + 196) = 0;
  *(_QWORD *)(v1 + 188) = 0;
  *(_DWORD *)(v1 + 204) = 0;
  swift_unknownObjectWeakInit();
  v46 = sub_1851F9080(0, (unint64_t *)&qword_1ECD75338);
  *(_QWORD *)(v1 + 232) = 0;
  *(_QWORD *)(v1 + 240) = 0;
  *(_QWORD *)(v1 + 224) = 0;
  sub_186507324();
  v51 = v10;
  v12 = sub_1852478E0(&qword_1ECD74D78, v6, MEMORY[0x1E0DEF828]);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74D68);
  v45 = sub_185638FF8(&qword_1ECD74D70, &qword_1ECD74D68, MEMORY[0x1E0DEAF38]);
  v49 = v5;
  v43[1] = v12;
  sub_186507B34();
  v14 = *MEMORY[0x1E0DEF8D0];
  v47 = *(void (**)(char *))(v2 + 104);
  v43[0] = v4;
  v15 = v4;
  v16 = v14;
  v44 = v14;
  v17 = v50;
  v47(v15);
  *(_QWORD *)(v1 + 248) = sub_18650799C();
  sub_186507324();
  v51 = MEMORY[0x1E0DEE9D8];
  v48 = v13;
  sub_186507B34();
  v18 = v43[0];
  ((void (*)(_QWORD, uint64_t, uint64_t))v47)(v43[0], v16, v17);
  *(_QWORD *)(v1 + 256) = sub_18650799C();
  sub_186507324();
  v51 = MEMORY[0x1E0DEE9D8];
  sub_186507B34();
  v19 = v44;
  v20 = (void (*)(uint64_t, uint64_t, uint64_t))v47;
  ((void (*)(uint64_t, _QWORD, uint64_t))v47)(v18, v44, v50);
  *(_QWORD *)(v1 + 264) = sub_18650799C();
  sub_186507324();
  v51 = MEMORY[0x1E0DEE9D8];
  sub_186507B34();
  v21 = v50;
  v20(v18, v19, v50);
  *(_QWORD *)(v1 + 272) = sub_18650799C();
  sub_186507324();
  v51 = MEMORY[0x1E0DEE9D8];
  sub_186507B34();
  v20(v18, v44, v21);
  *(_QWORD *)(v1 + 280) = sub_18650799C();
  *(_QWORD *)(v1 + 288) = 0;
  *(_WORD *)(v1 + 296) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v1 + 336) = 0;
  *(_QWORD *)(v1 + 312) = 0;
  *(_QWORD *)(v1 + 320) = 0;
  *(_BYTE *)(v1 + 328) = 0;
  *(_QWORD *)(v1 + 344) = sub_1856A3234(MEMORY[0x1E0DEE9D8]);
  *(_BYTE *)(v1 + 352) = 0;
  *(_QWORD *)(v1 + 360) = MEMORY[0x1E0DEE9E8];
  *(_WORD *)(v1 + 368) = 257;
  *(_QWORD *)(v1 + 376) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for InProcessAnimationManager.FixedRateLinksObserver()), sel_init);
  v22 = (void *)UIApp;
  if (UIApp)
  {
    ObjCClassFromObject = (void *)swift_getObjCClassFromObject();
    v24 = v22;
    if (objc_msgSend(ObjCClassFromObject, sel__isSystemUIService)
      && (_UIApplicationIsExtension() & 1) == 0)
    {
      v25 = (void *)objc_opt_self();
      v26 = objc_msgSend(v25, sel_defaultCenter);
      objc_msgSend(v26, sel_addObserver_selector_name_object_, v1, sel_applicationDidEnterBackground, CFSTR("UIApplicationDidEnterBackgroundNotification"), v24);

      v27 = objc_msgSend(v25, sel_defaultCenter);
      objc_msgSend(v27, sel_addObserver_selector_name_object_, v1, sel_applicationBecameActive, CFSTR("UIApplicationDidBecomeActiveNotification"), v24);

      v28 = objc_msgSend(v25, sel_defaultCenter);
      objc_msgSend(v28, sel_addObserver_selector_name_object_, v1, sel_screenBasedSceneWillAttachWindow_, CFSTR("_UIScreenBasedWindowSceneDidAttachWindowNotification"), 0);

      v24 = v28;
    }

  }
  sub_18577DC0C();
  sub_18577DCEC(256);
  v29 = *(_QWORD *)(v1 + 376);
  v30 = swift_allocObject();
  swift_weakInit();
  v31 = (uint64_t (**)())(v29 + OBJC_IVAR____TtCC5UIKit25InProcessAnimationManager22FixedRateLinksObserver_handler);
  v32 = *(_QWORD *)(v29 + OBJC_IVAR____TtCC5UIKit25InProcessAnimationManager22FixedRateLinksObserver_handler);
  *v31 = sub_185787064;
  v31[1] = (uint64_t (*)())v30;
  sub_18518D718(v32);
  v33 = (void *)objc_opt_self();
  v34 = objc_msgSend(v33, sel_mainDisplay);
  if (v34)
  {
    v35 = v34;
    v36 = *(id *)(v1 + 376);
    v37 = (void *)sub_1865074D4();
    objc_msgSend(v35, sel_addObserver_forKeyPath_options_context_, v36, v37, 4, 0);

  }
  v38 = objc_msgSend(v33, sel_mainDisplay);
  if (v38)
  {
    v39 = v38;
    v40 = *(id *)(v1 + 376);
    v41 = (void *)sub_1865074D4();
    objc_msgSend(v39, sel_addObserver_forKeyPath_options_context_, v40, v41, 4, 0);

  }
  return v1;
}

void sub_18577DC0C()
{
  int *v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  void *v4;
  _QWORD v5[6];

  v1 = *(_QWORD *)v0;
  v2 = *((_QWORD *)v0 + 35);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v0;
  *(_QWORD *)(v3 + 24) = v1;
  v5[4] = sub_185787C34;
  v5[5] = v3;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 1107296256;
  v5[2] = sub_1855D8E30;
  v5[3] = &block_descriptor_86;
  v4 = _Block_copy(v5);
  swift_retain();
  swift_release();
  swift_beginAccess();
  notify_register_dispatch("com.apple.backboardd.backlight.changed", v0 + 80, v2, v4);
  swift_endAccess();
  _Block_release(v4);
}

void sub_18577DCEC(__int16 a1)
{
  uint64_t v1;
  uint64_t v3;
  __int16 v4;
  char v5;

  v3 = *(_QWORD *)(v1 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 20));
  *(_WORD *)(v3 + 16) = a1 & 0x101;
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 20));
  sub_186507984();
  if (v5 == 1)
  {
    os_unfair_lock_lock((os_unfair_lock_t)(v3 + 20));
    v4 = *(_WORD *)(v3 + 16);
    if (v4 != 2)
    {
      *(_BYTE *)(v3 + 18) = v4 & 1;
      *(_BYTE *)(v3 + 19) = HIBYTE(v4) & 1;
      *(_WORD *)(v3 + 16) = 2;
    }
    os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 20));
  }
}

uint64_t sub_18577DDAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD aBlock[6];

  v2 = sub_186507318();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_186507330();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = *(id *)(result + 280);
    swift_release();
    aBlock[4] = sub_18578706C;
    aBlock[5] = a1;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18530A69C;
    aBlock[3] = &block_descriptor_74;
    v12 = _Block_copy(aBlock);
    swift_retain();
    sub_186507324();
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1852478E0((unint64_t *)&qword_1EDD83228, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    v14 = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83230);
    sub_185638FF8((unint64_t *)&qword_1EDD83238, &qword_1EDD83230, MEMORY[0x1E0DEAF38]);
    sub_186507B34();
    MEMORY[0x186DC49B4](0, v9, v5, v12);
    _Block_release(v12);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_18577DFBC()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_18577E010();
    return swift_release();
  }
  return result;
}

uint64_t sub_18577E010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  char v16;
  uint64_t result;
  id v18;
  void *v19;
  unsigned __int8 v20;
  char v21;
  int v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t aBlock;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  void *v38;
  uint64_t (*v39)();
  uint64_t v40;

  v1 = v0;
  v2 = sub_186507318();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_186507330();
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_186507360();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (uint64_t *)((char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(v1 + 280);
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, __n128))(v10 + 104))(v13, *MEMORY[0x1E0DEF740], v9, v11);
  v15 = v14;
  v16 = sub_186507384();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v13, v9);
  if ((v16 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  v18 = objc_msgSend((id)objc_opt_self(), sel_mainDisplay);
  v31 = v3;
  v32 = v2;
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend(v18, sel_isForceFixedRateLinksEnabled);

    v21 = v20 ^ 1;
  }
  else
  {
    v21 = 1;
  }
  v22 = (*(_BYTE *)(v1 + 328) & v21);
  v23 = *(NSObject **)(v1 + 256);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v1;
  *(_BYTE *)(v24 + 24) = v22;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = sub_185787098;
  *(_QWORD *)(v25 + 24) = v24;
  v39 = sub_1855A65EC;
  v40 = v25;
  v26 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v36 = 1107296256;
  v37 = sub_1855D8DF4;
  v38 = &block_descriptor_9_5;
  v27 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v23, v27);
  _Block_release(v27);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v23 & 1) != 0)
    goto LABEL_10;
  if (v22)
  {
    sub_1851F9080(0, (unint64_t *)&qword_1ECD75338);
    v28 = (void *)sub_186507978();
    v39 = sub_1857870B8;
    v40 = v1;
    aBlock = v26;
    v36 = 1107296256;
    v37 = sub_18530A69C;
    v38 = &block_descriptor_12_9;
    v29 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    sub_186507324();
    aBlock = MEMORY[0x1E0DEE9D8];
    sub_1852478E0((unint64_t *)&qword_1EDD83228, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83230);
    sub_185638FF8((unint64_t *)&qword_1EDD83238, &qword_1EDD83230, MEMORY[0x1E0DEAF38]);
    v30 = v32;
    sub_186507B34();
    MEMORY[0x186DC49B4](0, v8, v5, v29);
    _Block_release(v29);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v30);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v34);
  }
  return swift_release();
}

uint64_t sub_18577E3D8()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  __CFString *v3;
  __CFString *v4;
  __CFString *v5;
  __CFString *v6;
  void *v7;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD8AF60);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_186669910;
  *(_QWORD *)(v2 + 32) = CFSTR("UIApplicationDidEnterBackgroundNotification");
  *(_QWORD *)(v2 + 40) = CFSTR("UIApplicationDidBecomeActiveNotification");
  *(_QWORD *)(v2 + 48) = CFSTR("UISceneDidDisconnectNotification");
  *(_QWORD *)(v2 + 56) = CFSTR("_UIScreenBasedWindowSceneDidAttachWindowNotification");
  type metadata accessor for Name(0);
  v3 = CFSTR("UIApplicationDidEnterBackgroundNotification");
  v4 = CFSTR("UIApplicationDidBecomeActiveNotification");
  v5 = CFSTR("UISceneDidDisconnectNotification");
  v6 = CFSTR("_UIScreenBasedWindowSceneDidAttachWindowNotification");
  v7 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  -[NSNotificationCenter _uiRemoveObserver:names:](v1, (void *)v0, v7);

  swift_beginAccess();
  notify_cancel(*(_DWORD *)(v0 + 320));
  swift_release();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_18563E558(v0 + 208);

  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_18577E5E0()
{
  sub_18577E3D8();
  return swift_deallocClassInstance();
}

uint64_t sub_18577E600(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t state64[5];

  state64[4] = *MEMORY[0x1E0C80C00];
  state64[0] = 0;
  swift_beginAccess();
  result = notify_get_state(*(_DWORD *)(a2 + 320), state64);
  if (*(_BYTE *)(a2 + 328) != (state64[0] == 0))
  {
    *(_BYTE *)(a2 + 328) = state64[0] == 0;
    return sub_18577E010();
  }
  return result;
}

uint64_t sub_18577E69C(uint64_t a1)
{
  void *v2;
  void *v3;

  signpost_c2_cancel();
  v2 = (void *)MEMORY[0x186DCA138](a1 + 304);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, sel_invalidate);

  }
  swift_unknownObjectWeakAssign();
  return sub_185787270(1, 1, (uint64_t)sub_1857870C0, a1, (uint64_t)signpost_c2_removePresentationModifier_end, 0, 0.0, 0.0);
}

float sub_18577E720()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  float v9;
  float v10;
  uint64_t v11;
  int v12;
  int v13;

  if ((*(_BYTE *)(v0 + 368) & 1) == 0)
  {
    if (*(uint64_t *)(v0 + 168) < 1)
    {
      swift_beginAccess();
      v8 = swift_bridgeObjectRetain();
      sub_18577D12C(v8, 0.0);
      v10 = v9;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      *(float *)(v0 + 64) = fminf(v10, 48.0);
      swift_beginAccess();
      v11 = swift_bridgeObjectRetain();
      sub_18577D12C(v11, 0.0);
      v13 = v12;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      *(_DWORD *)(v0 + 68) = v13;
    }
    else
    {
      swift_beginAccess();
      v1 = swift_bridgeObjectRetain();
      sub_18577D12C(v1, 0.0);
      v3 = v2;
      swift_bridgeObjectRelease();
      swift_beginAccess();
      *(_DWORD *)(v0 + 64) = v3;
      swift_beginAccess();
      v4 = swift_bridgeObjectRetain();
      sub_18577D12C(v4, 0.0);
      v6 = v5;
      swift_bridgeObjectRelease();
      *(_DWORD *)(v0 + 68) = v6;
      swift_beginAccess();
      v7 = swift_bridgeObjectRetain();
      sub_18577D12C(v7, 0.0);
      swift_bridgeObjectRelease();
      swift_beginAccess();
    }
    sub_186507924();
    swift_endAccess();
    *(_BYTE *)(v0 + 368) = 1;
  }
  swift_beginAccess();
  return *(float *)(v0 + 64);
}

void sub_18577E93C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  char v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  id v23;
  uint64_t v24;
  _QWORD v25[2];
  uint64_t v26[12];
  _QWORD v27[2];

  v1 = v0;
  sub_18650682C();
  if (!v26[3])
  {
    sub_18519F088((uint64_t)v26, &qword_1ECD75B20);
    return;
  }
  sub_1851F9080(0, &qword_1EDD829D8);
  if ((swift_dynamicCast() & 1) == 0)
    return;
  v2 = (void *)objc_opt_self();
  v3 = (id)v26[9];
  v4 = objc_msgSend(v3, sel_screen);
  v5 = objc_msgSend(v2, sel__unassociatedWindowSceneForScreen_create_, v4, 0);

  if (!v5)
  {

LABEL_20:
    return;
  }
  v3 = v3;
  v6 = sub_186507A44();

  if ((v6 & 1) == 0 || objc_msgSend(v3, sel_activationState))
    goto LABEL_20;
  swift_unknownObjectWeakInit();
  v26[0] = (uint64_t)v3;
  swift_unknownObjectWeakAssign();
  sub_185692B98(v26, v27);
  v7 = (uint64_t *)(v1 + 360);
  swift_beginAccess();
  v8 = *(_QWORD *)(v1 + 360);
  if (*(_QWORD *)(v8 + 16))
  {
    sub_1865080EC();
    sub_1865080F8();
    v9 = sub_186508134();
    v10 = -1 << *(_BYTE *)(v8 + 32);
    v11 = v9 & ~v10;
    if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
    {
      v12 = ~v10;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_185692B5C((_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v11), v26);
        v13 = v26[0];
        v14 = v27[0];
        sub_185692BD4((uint64_t)v26);
        if (v13 == v14)
          break;
        v11 = (v11 + 1) & v12;
        if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRelease();
      sub_185692BD4((uint64_t)v27);
      goto LABEL_20;
    }
  }
LABEL_12:
  sub_185692B5C(v27, v25);
  swift_beginAccess();
  v15 = *v7;
  sub_1865080EC();
  sub_1865080F8();
  v16 = sub_186508134();
  v17 = -1 << *(_BYTE *)(v15 + 32);
  v18 = v16 & ~v17;
  if (((*(_QWORD *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
  {
    v19 = ~v17;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_185692B5C((_QWORD *)(*(_QWORD *)(v15 + 48) + 16 * v18), v26);
      v20 = v26[0];
      v21 = v25[0];
      sub_185692BD4((uint64_t)v26);
      if (v20 == v21)
        break;
      v18 = (v18 + 1) & v19;
      if (((*(_QWORD *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
  }
  else
  {
LABEL_17:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_185692B5C(v25, v26);
    v24 = *v7;
    *v7 = 0x8000000000000000;
    sub_18568E4D4(v26, v18, isUniquelyReferenced_nonNull_native);
    *v7 = v24;
  }
  swift_bridgeObjectRelease();
  sub_185692BD4((uint64_t)v25);
  swift_endAccess();
  v23 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  objc_msgSend(v23, sel_addObserver_selector_name_object_, v1, sel_screenBasedSceneDidDisconnect_, CFSTR("UISceneDidDisconnectNotification"), v3);

  sub_18577ED18();
  sub_185692BD4((uint64_t)v27);
}

void sub_18577ED18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;

  v16 = *(unsigned __int8 *)(v0 + 352);
  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 360);
  v2 = v1 + 56;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v5)
    {
      v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v9 = v8 | (v7 << 6);
      goto LABEL_20;
    }
    v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v10 >= v6)
      goto LABEL_23;
    v11 = *(_QWORD *)(v2 + 8 * v10);
    ++v7;
    if (!v11)
    {
      v7 = v10 + 1;
      if (v10 + 1 >= v6)
        goto LABEL_23;
      v11 = *(_QWORD *)(v2 + 8 * v7);
      if (!v11)
      {
        v7 = v10 + 2;
        if (v10 + 2 >= v6)
          goto LABEL_23;
        v11 = *(_QWORD *)(v2 + 8 * v7);
        if (!v11)
          break;
      }
    }
LABEL_19:
    v5 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v7 << 6);
LABEL_20:
    sub_185692B5C((_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * v9), &v17);
    v13 = (void *)MEMORY[0x186DCA138](&v18);
    sub_185692BD4((uint64_t)&v17);
    if (v13)
    {
      v14 = objc_msgSend(v13, sel_activationState);

      if (!v14)
      {
        v15 = 0;
LABEL_24:
        swift_release();
        sub_18577F3A4(v15);
        return;
      }
    }
  }
  v12 = v10 + 3;
  if (v12 >= v6)
  {
LABEL_23:
    v15 = v16;
    goto LABEL_24;
  }
  v11 = *(_QWORD *)(v2 + 8 * v12);
  if (v11)
  {
    v7 = v12;
    goto LABEL_19;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v6)
      goto LABEL_23;
    v11 = *(_QWORD *)(v2 + 8 * v7);
    ++v12;
    if (v11)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_18577EEDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  void *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD v23[9];
  void *v24;
  _QWORD v25[2];

  v1 = v0;
  sub_18650682C();
  if (!v23[3])
    return sub_18519F088((uint64_t)v23, &qword_1ECD75B20);
  sub_1851F9080(0, &qword_1EDD829D8);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v3 = v24;
    swift_unknownObjectWeakInit();
    v23[0] = v24;
    swift_unknownObjectWeakAssign();
    sub_185692B98(v23, v25);
    v4 = (uint64_t *)(v0 + 360);
    swift_beginAccess();
    v5 = *(_QWORD *)(v0 + 360);
    if (*(_QWORD *)(v5 + 16))
    {
      sub_1865080EC();
      sub_1865080F8();
      v6 = sub_186508134();
      v7 = -1 << *(_BYTE *)(v5 + 32);
      v8 = v6 & ~v7;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
      {
        v9 = ~v7;
        swift_bridgeObjectRetain();
        while (1)
        {
          sub_185692B5C((_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v8), v23);
          v10 = v23[0];
          v11 = v25[0];
          sub_185692BD4((uint64_t)v23);
          if (v10 == v11)
            break;
          v8 = (v8 + 1) & v9;
          if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            goto LABEL_20;
          }
        }
        swift_bridgeObjectRelease();
        swift_beginAccess();
        v12 = *v4;
        sub_1865080EC();
        sub_1865080F8();
        v13 = sub_186508134();
        v14 = -1 << *(_BYTE *)(v12 + 32);
        v15 = v13 & ~v14;
        if (((*(_QWORD *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
        {
          v16 = ~v14;
          swift_bridgeObjectRetain();
          while (1)
          {
            sub_185692B5C((_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v15), v23);
            v17 = v23[0];
            v18 = v25[0];
            sub_185692BD4((uint64_t)v23);
            if (v17 == v18)
              break;
            v15 = (v15 + 1) & v16;
            if (((*(_QWORD *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            {
              swift_bridgeObjectRelease();
              goto LABEL_15;
            }
          }
          swift_bridgeObjectRelease();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v20 = *v4;
          v22 = *v4;
          *v4 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_18568F92C();
            v20 = v22;
          }
          sub_185692B98((_QWORD *)(*(_QWORD *)(v20 + 48) + 16 * v15), v23);
          sub_185792AF0(v15);
          *v4 = v22;
          swift_bridgeObjectRelease();
        }
        else
        {
LABEL_15:
          v23[0] = 0;
          v23[1] = 0;
        }
        swift_endAccess();
        sub_18519F088((uint64_t)v23, &qword_1EDD7D460);
        v21 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
        objc_msgSend(v21, sel_removeObserver_name_object_, v1, CFSTR("UISceneDidDisconnectNotification"), v3);

        sub_18577ED18();
      }
    }
LABEL_20:

    return sub_185692BD4((uint64_t)v25);
  }
  return result;
}

uint64_t sub_18577F220(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = sub_186506844();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_186506820();
  swift_retain();
  a4(v8);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_18577F2C8()
{
  uint64_t v0;
  void *v1;
  void *v2;

  *(_BYTE *)(v0 + 352) = 1;
  sub_18577ED18();
  signpost_c2_cancel();
  v1 = (void *)MEMORY[0x186DCA138](v0 + 304);
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, sel_invalidate);

  }
  swift_unknownObjectWeakAssign();
  return sub_185787270(1, 1, (uint64_t)sub_1857870C0, v0, (uint64_t)signpost_c2_removePresentationModifier_end, 0, 0.0, 0.0);
}

uint64_t sub_18577F3A4(uint64_t result)
{
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  void *v13;
  uint64_t (*v14)();
  uint64_t v15;

  if (*(_BYTE *)(v1 + 324) != (result & 1))
  {
    if ((result & 1) != 0)
    {
      v2 = *(NSObject **)(v1 + 256);
      v3 = swift_allocObject();
      *(_QWORD *)(v3 + 16) = sub_185788498;
      *(_QWORD *)(v3 + 24) = v1;
      v14 = sub_1855A6A1C;
      v15 = v3;
      v10 = MEMORY[0x1E0C809B0];
      v11 = 1107296256;
      v12 = sub_1855D8DF4;
      v13 = &block_descriptor_187;
      v4 = _Block_copy(&v10);
      swift_retain();
      swift_retain();
      swift_release();
      dispatch_sync(v2, v4);
      _Block_release(v4);
      LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      result = swift_release();
      if ((v2 & 1) == 0)
        return result;
      __break(1u);
    }
    signpost_c2_cancel();
    v5 = (void *)MEMORY[0x186DCA138](v1 + 304);
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, sel_invalidate);

    }
    swift_unknownObjectWeakAssign();
    sub_185787270(1, 1, (uint64_t)sub_1857870C0, v1, (uint64_t)signpost_c2_removePresentationModifier_end, 0, 0.0, 0.0);
    v7 = *(NSObject **)(v1 + 256);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = sub_185788480;
    *(_QWORD *)(v8 + 24) = v1;
    v14 = sub_1855A6A1C;
    v15 = v8;
    v10 = MEMORY[0x1E0C809B0];
    v11 = 1107296256;
    v12 = sub_1855D8DF4;
    v13 = &block_descriptor_180;
    v9 = _Block_copy(&v10);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v7, v9);
    _Block_release(v9);
    LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((v7 & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_18577F5F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  uint64_t result;
  _QWORD v8[6];

  *(_BYTE *)(a1 + 324) = 1;
  if ((*(_BYTE *)(a1 + 297) & 1) != 0)
    goto LABEL_4;
  v2 = MEMORY[0x186DCA138](a1 + 208);
  if (!v2)
    goto LABEL_4;
  v3 = v2;
  v4 = *(NSObject **)(v2 + 272);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_18578888C;
  *(_QWORD *)(v5 + 24) = v3;
  v8[4] = sub_1855A6A1C;
  v8[5] = v5;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1855D8DF4;
  v8[3] = &block_descriptor_195;
  v6 = _Block_copy(v8);
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v6);
  _Block_release(v6);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release_n();
  result = swift_release();
  if ((v4 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
LABEL_4:
    *(_QWORD *)(a1 + 216) = 0;
    result = swift_unknownObjectWeakAssign();
    *(_BYTE *)(a1 + 297) = 0;
  }
  return result;
}

void sub_18577F73C(uint64_t a1)
{
  void *v2;
  dispatch_semaphore_t v3;
  void *v4;
  id v5;

  if (pthread_main_np() == 1)
  {
    v2 = *(void **)(a1 + 288);
    if (v2)
    {
      v5 = v2;
      sub_1865079F0();

    }
  }
  else
  {
    v3 = dispatch_semaphore_create(0);
    v4 = *(void **)(a1 + 288);
    *(_QWORD *)(a1 + 288) = v3;

  }
}

uint64_t sub_18577F7AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 88) = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = v1 + 40;
    v4 = *(_QWORD *)(v1 + 16);
    while (1)
    {
      v5 = *(void (**)(uint64_t))(v3 - 8);
      v6 = swift_retain();
      v5(v6);
      v7 = swift_release();
      if (*(_QWORD *)(*(_QWORD *)(v0 + 88) + 16))
      {
        v8 = sub_18577F7AC(v7);
        v9 = __OFADD__(v4, v8);
        v4 += v8;
        if (v9)
          break;
      }
      v3 += 16;
      if (!--v2)
        goto LABEL_9;
    }
    __break(1u);
  }
  v4 = 0;
LABEL_9:
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_18577F878(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v6 = (_QWORD *)(a2 + 104);
  swift_beginAccess();
  v7 = *(_QWORD *)(a2 + 104);
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_186507E58();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *a1 = v8;
  swift_beginAccess();
  v9 = swift_bridgeObjectRetain();
  sub_18577CA80(v9);
  swift_endAccess();
  v10 = *(_QWORD *)(a2 + 96);
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_186507E58();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *a3 = v11;
  *v6 = MEMORY[0x1E0DEE9D8];
  return swift_bridgeObjectRelease();
}

void sub_18577F99C(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double v15;
  void *v16;
  double v17;
  double v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  double v25;
  id v26;
  double v27;
  void *v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  double v33;
  double v34;
  double v35;
  void (*v36)(char *, uint64_t);
  NSObject *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  _QWORD aBlock[6];

  v2 = v1;
  v4 = sub_18650730C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_186507354();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v40 - v13;
  if (pthread_main_np() != 1)
  {
    v15 = CACurrentMediaTime();
    v16 = *(void **)(v2 + 288);
    if (v16)
    {
      v17 = v15 - a1;
      v18 = *(double *)(v2 + 240);
      v40 = v8;
      v41 = v16;
      if (v18 == 0.0)
      {
        v19 = (void *)objc_opt_self();
        v20 = v41;
        v21 = objc_msgSend(v19, sel_mainScreen);
        v22 = objc_msgSend(v21, sel_maximumFramesPerSecond);

        if ((uint64_t)v22 <= 0)
        {
          v25 = 60.06;
        }
        else
        {
          v23 = objc_msgSend(v19, sel_mainScreen);
          v24 = objc_msgSend(v23, sel_maximumFramesPerSecond);

          v25 = (double)(uint64_t)v24 * 1.001;
        }
        v18 = 1.0 / v25;
        *(double *)(v2 + 240) = 1.0 / v25;
        v8 = v40;
      }
      else
      {
        v26 = v16;
      }
      v27 = v18 * 0.4;
      if (v17 >= v18 * 0.4)
      {

        return;
      }
      if (v18 == 0.0)
      {
        v28 = (void *)objc_opt_self();
        v29 = objc_msgSend(v28, sel_mainScreen);
        v30 = (uint64_t)objc_msgSend(v29, sel_maximumFramesPerSecond);

        if (v30 < 1)
        {
          v33 = 60.06;
        }
        else
        {
          v31 = objc_msgSend(v28, sel_mainScreen);
          v32 = objc_msgSend(v31, sel_maximumFramesPerSecond);

          v33 = (double)(uint64_t)v32 * 1.001;
        }
        v34 = 1.0 / v33;
        *(double *)(v2 + 240) = v34;
        v27 = v34 * 0.4;
        v8 = v40;
      }
      v35 = (v27 - v17) * 1000000000.0;
      sub_18650733C();
      if ((~*(_QWORD *)&v35 & 0x7FF0000000000000) != 0)
      {
        if (v35 > -9.22337204e18)
        {
          if (v35 < 9.22337204e18)
          {
            *v7 = (uint64_t)v35;
            (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF480], v4);
            sub_186507348();
            (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
            v36 = *(void (**)(char *, uint64_t))(v9 + 8);
            v36(v11, v8);
            sub_1865079D8();
            v37 = *(NSObject **)(v2 + 248);
            v38 = swift_allocObject();
            *(_QWORD *)(v38 + 16) = sub_185787BDC;
            *(_QWORD *)(v38 + 24) = v2;
            aBlock[4] = sub_1855A6A1C;
            aBlock[5] = v38;
            aBlock[0] = MEMORY[0x1E0C809B0];
            aBlock[1] = 1107296256;
            aBlock[2] = sub_1855D8DF4;
            aBlock[3] = &block_descriptor_80;
            v39 = _Block_copy(aBlock);
            swift_retain();
            swift_retain();
            swift_release();
            dispatch_sync(v37, v39);
            _Block_release(v39);

            v36(v14, v8);
            LOBYTE(v36) = swift_isEscapingClosureAtFileLocation();
            swift_release();
            swift_release();
            if ((v36 & 1) == 0)
              return;
LABEL_24:
            __break(1u);
            return;
          }
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_23;
    }
  }
}

uint64_t sub_18577FDF0(int a1, double a2)
{
  _QWORD *v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(id *);
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t i;
  id v17;
  void *v18;
  _QWORD *v19;
  id v20[3];

  if ((uint64_t)v2[42] >= 1)
  {
    signpost_c2_tick_allocatedModifiers_start();
    v5 = objc_msgSend((id)objc_opt_self(), sel_groupWithCapacity_, v2[42]);
    objc_msgSend(v5, sel_setUpdatesAsynchronously_, (a1 & 1) == 0);
    swift_beginAccess();
    v6 = swift_unknownObjectWeakInit();
    sub_1855C27BC(v6, (uint64_t)v5);
    swift_endAccess();
    swift_beginAccess();
    v7 = v2[16];
    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      v9 = v7 + 40;
      do
      {
        v10 = *(void (**)(id *))(v9 - 8);
        v20[0] = v5;
        swift_retain();
        v10(v20);
        swift_release();
        v9 += 16;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
    }
    v2[42] = 0;
    v2[16] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRelease();
    signpost_c2_tick_allocatedModifiers_end();

  }
  result = swift_beginAccess();
  if (*(_QWORD *)(v2[43] + 16))
  {
    v12 = signpost_c2_tick_flush_start();
    v19 = v2 + 43;
    MEMORY[0x1E0C80A78](v12);
    sub_1851F9080(0, (unint64_t *)&unk_1EDD83090);
    swift_getKeyPath();
    swift_retain();
    v13 = swift_bridgeObjectRetain();
    v14 = sub_185786A04(v13);
    swift_bridgeObjectRelease();
    result = swift_release_n();
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      v15 = sub_186507E58();
      result = swift_bridgeObjectRelease();
      if (v15)
        goto LABEL_10;
    }
    else
    {
      v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v15)
      {
LABEL_10:
        if (v15 < 1)
        {
          __break(1u);
          return result;
        }
        for (i = 0; i != v15; ++i)
        {
          if ((v14 & 0xC000000000000001) != 0)
            v17 = (id)MEMORY[0x186DC4CB4](i, v14);
          else
            v17 = *(id *)(v14 + 8 * i + 32);
          v18 = v17;
          objc_msgSend(v17, sel_setUpdatesAsynchronously_, (a1 ^ 1) & 1, v19);
          if ((a1 & 1) != 0)
            objc_msgSend(v18, sel_flushWithTransactionAndTargetTime_, a2);
          else
            objc_msgSend(v18, sel_flush);

        }
      }
    }
    swift_bridgeObjectRelease();
    return signpost_c2_tick_flush_end();
  }
  return result;
}

uint64_t sub_1857800F4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  type metadata accessor for WeakReferenceTable.WeakReference(0, a1, a2, a3);
  swift_getKeyPath();
  v5 = sub_186507408();
  swift_bridgeObjectRetain();
  MEMORY[0x186DC9F28](MEMORY[0x1E0DE9F98], v5);
  v6 = sub_1865075DC();
  swift_release();
  result = swift_bridgeObjectRelease();
  *a4 = v6;
  a4[1] = 0;
  return result;
}

void sub_1857801D0(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  float v24;
  float v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  _QWORD *v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  _BOOL8 v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  float v70;
  _QWORD *v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  _QWORD *v75;
  char v76;
  _QWORD *v77;
  char v78;
  uint64_t v79;
  _BOOL8 v80;
  uint64_t v81;
  char v82;
  unint64_t v83;
  char v84;
  unint64_t v85;
  char v86;
  unint64_t v87;
  uint64_t *v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  char v98;
  _QWORD *v99;
  char v100;
  uint64_t v101;
  _BOOL8 v102;
  uint64_t v103;
  char v104;
  unint64_t v105;
  char v106;
  unint64_t v107;
  char v108;
  unint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  float v119;
  int v120;
  int v121;
  int v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  NSObject *v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  void *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  NSObject *v140;
  uint64_t v141;
  void *v142;
  uint64_t v143;
  __int16 v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  _QWORD *v154;
  unint64_t v155;
  uint64_t v156;
  unint64_t v157;
  uint64_t *v158;
  uint64_t aBlock;
  uint64_t v160;
  uint64_t (*v161)(uint64_t);
  void *v162;
  uint64_t (*v163)();
  uint64_t v164;
  _QWORD *v165;

  v6 = sub_186507318();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v145 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_186507330();
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)(a2 >> 62);
  v152 = v9;
  v151 = v13;
  v150 = v14;
  v149 = (char *)&v145 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 62)
  {
LABEL_118:
    swift_bridgeObjectRetain();
    v15 = sub_186507E58();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  *a1 = v15;
  v16 = (_QWORD *)(a3 + 96);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v17 = sub_18578759C((unint64_t *)(a3 + 96), a2);
  v155 = a2;
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a3 + 96);
  if (!(v18 >> 62))
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v19 >= v17)
      goto LABEL_5;
LABEL_120:
    __break(1u);
LABEL_121:
    swift_bridgeObjectRetain();
    v136 = sub_186507E58();
    swift_bridgeObjectRelease();
    v20 = a3 + 297;
    if (v136)
      goto LABEL_110;
    goto LABEL_108;
  }
  swift_bridgeObjectRetain();
  v19 = sub_186507E58();
  swift_bridgeObjectRelease();
  if (v19 < v17)
    goto LABEL_120;
LABEL_5:
  sub_1855B0ED0(v17, v19);
  swift_endAccess();
  if (!*a1)
    goto LABEL_106;
  v148 = v6;
  v147 = v7;
  v146 = (_QWORD *)(a3 + 96);
  if (!v12)
  {
    v20 = v155;
    v21 = *(_QWORD *)((v155 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v21)
      goto LABEL_105;
    goto LABEL_10;
  }
  v20 = v155;
  swift_bridgeObjectRetain();
  v21 = sub_186507E58();
  if (v21)
  {
LABEL_10:
    if (v21 < 1)
      goto LABEL_131;
    v7 = 0;
    v12 = (uint64_t *)(a3 + 136);
    a1 = (uint64_t *)(a3 + 144);
    v154 = (_QWORD *)(a3 + 152);
    v22 = (uint64_t *)(a3 + 160);
    v23 = v20 & 0xC000000000000001;
    v153 = a3;
    v156 = v21;
    v157 = v20 & 0xC000000000000001;
    v158 = (uint64_t *)(a3 + 136);
    while (1)
    {
      if (v23)
      {
        v6 = MEMORY[0x186DC4CB4](v7, v20);
      }
      else
      {
        v6 = *(_QWORD *)(v20 + 8 * v7 + 32);
        swift_retain();
      }
      v24 = *(float *)(v6 + 16);
      v25 = *(float *)(v6 + 20);
      if ((sub_186507900() & 1) == 0)
        break;
      swift_release();
LABEL_13:
      if (v21 == ++v7)
        goto LABEL_105;
    }
    swift_beginAccess();
    v26 = *v12;
    if (*(_QWORD *)(*v12 + 16))
    {
      v27 = sub_1855C4378(v24);
      if ((v28 & 1) != 0)
      {
        v29 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v27);
        if (v29 >= 2)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v165 = (_QWORD *)*v12;
          v31 = v165;
          *v12 = 0x8000000000000000;
          v33 = sub_1855C4378(v24);
          v34 = v31[2];
          v35 = (v32 & 1) == 0;
          v36 = v34 + v35;
          if (__OFADD__(v34, v35))
          {
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
            goto LABEL_126;
          }
          v20 = v32;
          if (v31[3] < v36)
          {
            sub_1856CFCDC(v36, isUniquelyReferenced_nonNull_native);
            v31 = v165;
            v37 = sub_1855C4378(v24);
            if ((v20 & 1) != (v38 & 1))
              goto LABEL_141;
            v33 = v37;
            v39 = v29 - 1;
            if ((v20 & 1) == 0)
              goto LABEL_25;
LABEL_33:
            *(_QWORD *)(v31[7] + 8 * v33) = v39;
            v21 = v156;
LABEL_34:
            *v158 = (uint64_t)v31;
            swift_bridgeObjectRelease();
            v20 = v155;
            goto LABEL_35;
          }
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v39 = v29 - 1;
            if ((v32 & 1) != 0)
              goto LABEL_33;
          }
          else
          {
            sub_185683DF4();
            v31 = v165;
            v39 = v29 - 1;
            if ((v20 & 1) != 0)
              goto LABEL_33;
          }
LABEL_25:
          v31[(v33 >> 6) + 8] |= 1 << v33;
          *(float *)(v31[6] + 4 * v33) = v24;
          *(_QWORD *)(v31[7] + 8 * v33) = v39;
          v40 = v31[2];
          v41 = __OFADD__(v40, 1);
          v42 = v40 + 1;
          v21 = v156;
          if (v41)
            goto LABEL_128;
          v31[2] = v42;
          goto LABEL_34;
        }
        v43 = sub_1855C4378(v24);
        v21 = v156;
        if ((v44 & 1) != 0)
        {
          v45 = v43;
          v46 = swift_isUniquelyReferenced_nonNull_native();
          v47 = *v12;
          v165 = (_QWORD *)*v12;
          *v12 = 0x8000000000000000;
          if ((v46 & 1) == 0)
          {
            sub_185683DF4();
            v47 = (uint64_t)v165;
          }
          sub_185683904(v45, v47);
          *v12 = v47;
          swift_bridgeObjectRelease();
        }
      }
    }
LABEL_35:
    swift_endAccess();
    swift_beginAccess();
    v48 = *a1;
    if (*(_QWORD *)(*a1 + 16))
    {
      v49 = sub_1855C4378(v25);
      if ((v50 & 1) != 0)
      {
        v51 = *(_QWORD *)(*(_QWORD *)(v48 + 56) + 8 * v49);
        if (v51 >= 2)
        {
          v52 = swift_isUniquelyReferenced_nonNull_native();
          v165 = (_QWORD *)*a1;
          v53 = v165;
          *a1 = 0x8000000000000000;
          v55 = sub_1855C4378(v25);
          v56 = v53[2];
          v57 = (v54 & 1) == 0;
          v58 = v56 + v57;
          if (__OFADD__(v56, v57))
            goto LABEL_124;
          v20 = v54;
          if (v53[3] < v58)
          {
            sub_1856CFCDC(v58, v52);
            v53 = v165;
            v59 = sub_1855C4378(v25);
            if ((v20 & 1) != (v60 & 1))
              goto LABEL_141;
            v55 = v59;
            v61 = v51 - 1;
            if ((v20 & 1) == 0)
              goto LABEL_42;
LABEL_50:
            *(_QWORD *)(v53[7] + 8 * v55) = v61;
            v21 = v156;
LABEL_51:
            *a1 = (uint64_t)v53;
            swift_bridgeObjectRelease();
            v20 = v155;
            goto LABEL_52;
          }
          if ((v52 & 1) != 0)
          {
            v61 = v51 - 1;
            if ((v54 & 1) != 0)
              goto LABEL_50;
          }
          else
          {
            sub_185683DF4();
            v53 = v165;
            v61 = v51 - 1;
            if ((v20 & 1) != 0)
              goto LABEL_50;
          }
LABEL_42:
          v53[(v55 >> 6) + 8] |= 1 << v55;
          *(float *)(v53[6] + 4 * v55) = v25;
          *(_QWORD *)(v53[7] + 8 * v55) = v61;
          v62 = v53[2];
          v41 = __OFADD__(v62, 1);
          v63 = v62 + 1;
          v21 = v156;
          if (v41)
            goto LABEL_129;
          v53[2] = v63;
          goto LABEL_51;
        }
        v64 = sub_1855C4378(v25);
        v21 = v156;
        if ((v65 & 1) != 0)
        {
          v66 = v64;
          v67 = swift_isUniquelyReferenced_nonNull_native();
          v68 = *a1;
          v165 = (_QWORD *)*a1;
          *a1 = 0x8000000000000000;
          if ((v67 & 1) == 0)
          {
            sub_185683DF4();
            v68 = (uint64_t)v165;
          }
          sub_185683904(v66, v68);
          *a1 = v68;
          swift_bridgeObjectRelease();
        }
      }
    }
LABEL_52:
    swift_endAccess();
    v69 = sub_186507918();
    if ((v69 & 0x100000000) != 0)
    {
LABEL_73:
      v94 = *(_DWORD *)(v6 + 28);
      swift_beginAccess();
      v95 = *v22;
      if (*(_QWORD *)(*v22 + 16))
      {
        v96 = sub_1855C43B0(v94);
        if ((v97 & 1) != 0)
        {
          a3 = *(_QWORD *)(*(_QWORD *)(v95 + 56) + 8 * v96);
          if (a3 < 2)
          {
            v107 = sub_1855C43B0(v94);
            a3 = v153;
            if ((v108 & 1) != 0)
            {
              v109 = v107;
              v110 = swift_isUniquelyReferenced_nonNull_native();
              v111 = *v22;
              v165 = (_QWORD *)*v22;
              *v22 = 0x8000000000000000;
              if ((v110 & 1) == 0)
              {
                sub_185683F84();
                v111 = (uint64_t)v165;
              }
              sub_18568376C(v109, v111);
              *v22 = v111;
              swift_bridgeObjectRelease();
            }
          }
          else
          {
            v98 = swift_isUniquelyReferenced_nonNull_native();
            v165 = (_QWORD *)*v22;
            v99 = v165;
            *v22 = 0x8000000000000000;
            v20 = sub_1855C43B0(v94);
            v101 = v99[2];
            v102 = (v100 & 1) == 0;
            v103 = v101 + v102;
            if (__OFADD__(v101, v102))
              goto LABEL_125;
            v104 = v100;
            if (v99[3] >= v103)
            {
              if ((v98 & 1) == 0)
              {
                sub_185683F84();
                v99 = v165;
              }
            }
            else
            {
              sub_1856CFF80(v103, v98);
              v99 = v165;
              v105 = sub_1855C43B0(v94);
              if ((v104 & 1) != (v106 & 1))
                goto LABEL_142;
              v20 = v105;
            }
            v21 = v156;
            v112 = a3 - 1;
            if ((v104 & 1) != 0)
            {
              *(_QWORD *)(v99[7] + 8 * v20) = v112;
              a3 = v153;
            }
            else
            {
              v99[(v20 >> 6) + 8] |= 1 << v20;
              *(_DWORD *)(v99[6] + 4 * v20) = v94;
              *(_QWORD *)(v99[7] + 8 * v20) = v112;
              v113 = v99[2];
              v41 = __OFADD__(v113, 1);
              v114 = v113 + 1;
              a3 = v153;
              if (v41)
                goto LABEL_130;
              v99[2] = v114;
            }
            *v22 = (uint64_t)v99;
            swift_bridgeObjectRelease();
            v20 = v155;
          }
        }
      }
      swift_endAccess();
      if ((*(_BYTE *)(v6 + 32) & 1) != 0)
      {
        swift_release();
        v12 = v158;
LABEL_100:
        *(_WORD *)(a3 + 368) = 0;
        v23 = v157;
        goto LABEL_13;
      }
      v115 = sub_186507918();
      a2 = sub_186507918();
      swift_release();
      v12 = v158;
      if ((v115 & 0x100000000) != 0)
      {
        if ((a2 & 0x100000000) != 0)
          goto LABEL_100;
      }
      else if ((a2 & 0x100000000) == 0 && *(float *)&v115 == *(float *)&a2)
      {
        goto LABEL_100;
      }
      v116 = *(_QWORD *)(a3 + 168);
      v41 = __OFSUB__(v116, 1);
      v117 = v116 - 1;
      if (v41)
      {
        __break(1u);
        goto LABEL_118;
      }
      *(_QWORD *)(a3 + 168) = v117;
      goto LABEL_100;
    }
    v70 = *(float *)&v69;
    v71 = v154;
    swift_beginAccess();
    v72 = *v71;
    if (*(_QWORD *)(*v71 + 16))
    {
      v73 = sub_1855C4378(v70);
      if ((v74 & 1) != 0)
      {
        a3 = *(_QWORD *)(*(_QWORD *)(v72 + 56) + 8 * v73);
        if (a3 >= 2)
        {
          v75 = v154;
          v76 = swift_isUniquelyReferenced_nonNull_native();
          v165 = (_QWORD *)*v75;
          v77 = v165;
          *v75 = 0x8000000000000000;
          v20 = sub_1855C4378(v70);
          v79 = v77[2];
          v80 = (v78 & 1) == 0;
          v81 = v79 + v80;
          if (__OFADD__(v79, v80))
            goto LABEL_127;
          v82 = v78;
          if (v77[3] >= v81)
          {
            if ((v76 & 1) == 0)
            {
              sub_185683DF4();
              v77 = v165;
            }
          }
          else
          {
            sub_1856CFCDC(v81, v76);
            v77 = v165;
            v83 = sub_1855C4378(v70);
            if ((v82 & 1) != (v84 & 1))
              goto LABEL_141;
            v20 = v83;
          }
          v21 = v156;
          v91 = a3 - 1;
          if ((v82 & 1) != 0)
          {
            *(_QWORD *)(v77[7] + 8 * v20) = v91;
            a3 = v153;
          }
          else
          {
            v77[(v20 >> 6) + 8] |= 1 << v20;
            *(float *)(v77[6] + 4 * v20) = v70;
            *(_QWORD *)(v77[7] + 8 * v20) = v91;
            v92 = v77[2];
            v41 = __OFADD__(v92, 1);
            v93 = v92 + 1;
            a3 = v153;
            if (v41)
            {
              __break(1u);
              goto LABEL_140;
            }
            v77[2] = v93;
          }
          v20 = v155;
          *v154 = v77;
          goto LABEL_71;
        }
        v85 = sub_1855C4378(v70);
        a3 = v153;
        if ((v86 & 1) != 0)
        {
          v87 = v85;
          v88 = v154;
          v89 = swift_isUniquelyReferenced_nonNull_native();
          v90 = *v88;
          v165 = (_QWORD *)*v88;
          *v88 = 0x8000000000000000;
          if ((v89 & 1) == 0)
          {
            sub_185683DF4();
            v90 = (uint64_t)v165;
          }
          sub_185683904(v87, v90);
          *v88 = v90;
LABEL_71:
          swift_bridgeObjectRelease();
        }
      }
    }
    swift_endAccess();
    goto LABEL_73;
  }
LABEL_105:
  swift_bridgeObjectRelease();
  v6 = v148;
  v7 = v147;
  v16 = v146;
LABEL_106:
  if (*v16 >> 62)
    goto LABEL_121;
  v20 = a3 + 297;
  if (*(_QWORD *)((*v16 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_110;
LABEL_108:
  swift_beginAccess();
  v118 = *(_QWORD *)(a3 + 104);
  if (v118 >> 62)
    goto LABEL_132;
  if (*(_QWORD *)((v118 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_110:
    while (*(_BYTE *)(v20 + 71) != 1 || (*(_BYTE *)(v20 + 72) & 1) == 0)
    {
      v119 = sub_18577E720();
      v121 = v120;
      v123 = v122;
      if ((*(_BYTE *)(v20 + 72) & 1) == 0)
      {
        swift_beginAccess();
        v124 = swift_bridgeObjectRetain();
        *(_QWORD *)(a3 + 80) = sub_185786D94(v124);
        swift_bridgeObjectRelease();
        *(_BYTE *)(a3 + 369) = 1;
      }
      v125 = *(_QWORD *)(a3 + 80);
      v126 = *(NSObject **)(a3 + 272);
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = a3;
      *(float *)(v20 + 24) = v119;
      *(_DWORD *)(v20 + 28) = v121;
      *(_DWORD *)(v20 + 32) = v123;
      *(_QWORD *)(v20 + 40) = v125;
      v127 = swift_allocObject();
      *(_QWORD *)(v127 + 16) = sub_185787B08;
      *(_QWORD *)(v127 + 24) = v20;
      v163 = sub_1855A6A1C;
      v164 = v127;
      v128 = MEMORY[0x1E0C809B0];
      aBlock = MEMORY[0x1E0C809B0];
      v160 = 1107296256;
      v161 = sub_1855D8DF4;
      v162 = &block_descriptor_59_2;
      v129 = _Block_copy(&aBlock);
      v130 = a3;
      a3 = v164;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_release();
      dispatch_sync(v126, v129);
      _Block_release(v129);
      LOBYTE(v126) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v126 & 1) == 0)
      {
        sub_1851F9080(0, (unint64_t *)&qword_1ECD75338);
        v131 = (void *)sub_186507978();
        v132 = swift_allocObject();
        *(_QWORD *)(v132 + 16) = v130;
        *(float *)(v132 + 24) = v119;
        *(_DWORD *)(v132 + 28) = v121;
        *(_DWORD *)(v132 + 32) = v123;
        v163 = sub_185787B50;
        v164 = v132;
        aBlock = v128;
        v160 = 1107296256;
        v161 = sub_18530A69C;
        v162 = &block_descriptor_65_0;
        v133 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        v134 = v149;
        sub_186507324();
        aBlock = MEMORY[0x1E0DEE9D8];
        sub_1852478E0((unint64_t *)&qword_1EDD83228, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83230);
        sub_185638FF8((unint64_t *)&qword_1EDD83238, &qword_1EDD83230, MEMORY[0x1E0DEAF38]);
        v135 = v152;
        sub_186507B34();
        MEMORY[0x186DC49B4](0, v134, v135, v133);
        _Block_release(v133);

        (*(void (**)(char *, uint64_t))(v7 + 8))(v135, v6);
        (*(void (**)(char *, uint64_t))(v150 + 8))(v134, v151);
        swift_release();
        return;
      }
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      swift_bridgeObjectRetain();
      v137 = sub_186507E58();
      swift_bridgeObjectRelease();
      if (!v137)
        goto LABEL_133;
    }
  }
  else
  {
LABEL_133:
    swift_beginAccess();
    *(_QWORD *)(a3 + 344) = MEMORY[0x1E0DEE9E0];
    swift_bridgeObjectRelease();
    if ((*(_BYTE *)v20 & 1) != 0)
      goto LABEL_136;
    v138 = MEMORY[0x186DCA138](a3 + 208);
    if (!v138)
      goto LABEL_136;
    v139 = v138;
    v140 = *(NSObject **)(v138 + 272);
    v141 = swift_allocObject();
    *(_QWORD *)(v141 + 16) = sub_185787B60;
    *(_QWORD *)(v141 + 24) = v139;
    v163 = sub_1855A6A1C;
    v164 = v141;
    aBlock = MEMORY[0x1E0C809B0];
    v160 = 1107296256;
    v161 = sub_1855D8DF4;
    v162 = &block_descriptor_72_3;
    v142 = _Block_copy(&aBlock);
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    dispatch_sync(v140, v142);
    _Block_release(v142);
    LOBYTE(v140) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release_n();
    if ((v140 & 1) != 0)
    {
LABEL_140:
      __break(1u);
LABEL_141:
      sub_186508074();
      __break(1u);
LABEL_142:
      sub_186508074();
      __break(1u);
    }
    else
    {
LABEL_136:
      *(_QWORD *)(a3 + 216) = 0;
      swift_unknownObjectWeakAssign();
      *(_BYTE *)(a3 + 297) = 0;
      v143 = *(_QWORD *)(a3 + 16);
      os_unfair_lock_lock((os_unfair_lock_t)(v143 + 20));
      v144 = *(_WORD *)(v143 + 16);
      if (v144 != 2)
      {
        *(_BYTE *)(v143 + 18) = v144 & 1;
        *(_BYTE *)(v143 + 19) = HIBYTE(v144) & 1;
        *(_WORD *)(v143 + 16) = 2;
      }
      os_unfair_lock_unlock((os_unfair_lock_t)(v143 + 20));
    }
  }
}

void sub_1857811C0(uint64_t a1, uint64_t a2, float a3, float a4, float a5)
{
  void *v5;
  double v10;
  double v11;
  double v12;
  id v13;

  v5 = *(void **)(a1 + 312);
  if (v5)
  {
    v13 = v5;
    *(float *)&v10 = a3;
    *(float *)&v11 = a4;
    *(float *)&v12 = a5;
    objc_msgSend(v13, sel_setPreferredFrameRateRange_, v10, v11, v12);
    sub_185781254(v13, a2);

  }
}

_DWORD *sub_185781254(id isStackAllocationSafe, uint64_t a2)
{
  id v2;
  unint64_t v3;
  uint64_t v5;
  _DWORD *v7;
  _QWORD v8[2];

  v2 = isStackAllocationSafe;
  v8[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)(a2 + 16);
  if (!v3)
    return objc_msgSend(isStackAllocationSafe, sel_setHighFrameRateReasons_count_, 0, 0);
  if (v3 >> 61)
    __break(1u);
  if ((uint64_t)(4 * v3) > 1024)
  {
    isStackAllocationSafe = (id)swift_stdlib_isStackAllocationSafe();
    if (!(_DWORD)isStackAllocationSafe)
    {
      v7 = (_DWORD *)swift_slowAlloc();
      sub_185784284(v7, v3, a2, v2);
      JUMPOUT(0x186DCA030);
    }
  }
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  return sub_185784284((_QWORD *)((char *)v8 - v5), v3, a2, v2);
}

uint64_t sub_185781408(uint64_t a1, float a2, float a3, float a4)
{
  _DWORD *v7;

  v7 = (_DWORD *)(a1 + 176);
  swift_beginAccess();
  _C2UpdateRequestSetRateRange(v7, a2, a3, a4);
  swift_endAccess();
  swift_beginAccess();
  _UIUpdateRequestChanged(v7);
  return swift_endAccess();
}

void sub_18578149C(uint64_t a1, char a2, void (*a3)(uint64_t), unint64_t a4, char a5, void (*a6)(uint64_t), double a7, double a8)
{
  void *v16;

  v16 = (void *)MEMORY[0x186DC8A4C]();
  sub_185781538(a1, a2, a3, a4, a5, a6, a7, a8);
  objc_autoreleasePoolPop(v16);
}

void sub_185781538(uint64_t a1, char a2, void (*a3)(uint64_t), unint64_t a4, char a5, void (*a6)(uint64_t), double a7, double a8)
{
  uint64_t v8;
  uint64_t v9;
  id v15;
  os_unfair_lock_s *v16;
  uint64_t isEscapingClosureAtFileLocation;
  unsigned __int8 v18;
  unsigned __int8 v19;
  _BYTE *v20;
  uint64_t v21;
  unint64_t v22;
  double v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  NSObject *v33;
  uint64_t v34;
  char v35;
  uint64_t *v36;
  NSObject *v37;
  Class v38;
  BOOL v39;
  Class isa;
  void (*v41)(uint64_t);
  uint64_t v42;
  uint64_t *v43;
  NSObject *v44;
  Class v45;
  Class v46;
  void (*v47)(uint64_t);
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  NSObject *queue;
  unsigned __int8 v56;
  char v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t aBlock;
  uint64_t v65;
  uint64_t (*v66)(uint64_t);
  void *v67;
  uint64_t (*v68)();
  uint64_t v69;
  _QWORD v70[2];

  v9 = v8;
  v15 = objc_msgSend((id)objc_opt_self(), sel_currentThread);
  swift_unknownObjectWeakAssign();

  v16 = *(os_unfair_lock_s **)(a1 + 16);
  swift_getKeyPath();
  isEscapingClosureAtFileLocation = (uint64_t)&v16[5];
  swift_retain();
  os_unfair_lock_lock(v16 + 5);
  v18 = sub_18578826C();
  if (v9)
    goto LABEL_67;
  v19 = v18;
  v61 = a1;
  v20 = (_BYTE *)(a1 + 324);
  os_unfair_lock_unlock((os_unfair_lock_t)isEscapingClosureAtFileLocation);
  v21 = swift_release_n();
  if ((v19 & 1) != 0 && (v21 = pthread_main_np(), (_DWORD)v21 != 1))
  {
    LODWORD(v22) = 1;
    v21 = (uint64_t)objc_msgSend((id)objc_opt_self(), sel_activateBackground_, 1);
  }
  else
  {
    LODWORD(v22) = 0;
  }
  if (*v20 == 1 && (a2 & 1) == 0 && v20[1] != 1)
  {
    signpost_c2_tick_enter_end();
    goto LABEL_57;
  }
  a3(v21);
  if (a7 <= 0.0)
  {
    *(_QWORD *)(v61 + 232) = 0;
    v24 = a5;
  }
  else
  {
    v23 = a7 - *(double *)(v61 + 224);
    *(double *)(v61 + 232) = v23;
    v24 = a5;
    if (v23 <= 0.0)
      *(_QWORD *)(v61 + 232) = 0;
    else
      *(double *)(v61 + 224) = a7;
  }
  signpost_c2_tick_enter_end();
  v56 = v19;
  if ((v24 & 1) != 0)
    v25 = 1;
  else
    v25 = v20[1];
  v26 = v61;
  v27 = MEMORY[0x1E0DEE9D8];
  v63 = MEMORY[0x1E0DEE9D8];
  v62 = 0;
  v70[0] = 0;
  signpost_c2_tick_solver_start();
  v28 = *(_QWORD *)(v61 + 264);
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = v70;
  v29[3] = v61;
  v29[4] = &v62;
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = sub_185787538;
  *(_QWORD *)(v30 + 24) = v29;
  v68 = sub_1855A6A1C;
  v69 = v30;
  aBlock = MEMORY[0x1E0C809B0];
  v65 = 1107296256;
  v66 = sub_1855D8DF4;
  v67 = &block_descriptor_39_2;
  v31 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync((dispatch_queue_t)v28, v31);
  _Block_release(v31);
  LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v31 & 1) != 0)
    goto LABEL_64;
  swift_beginAccess();
  a4 = *(_QWORD *)(v61 + 96);
  if (a4 >> 62)
    goto LABEL_65;
  v32 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    queue = v28;
    v54 = v22;
    if (v32)
    {
      v59 = 0;
      v28 = 0;
      v22 = a4 & 0xC000000000000001;
      while (1)
      {
        if (v22)
        {
          v27 = MEMORY[0x186DC4CB4](v28, a4);
          v33 = (v28 + 1);
          if (__OFADD__(v28, 1))
            goto LABEL_60;
        }
        else
        {
          if (v28 >= *(_QWORD *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_63;
          v27 = *(_QWORD *)(a4 + 8 * v28 + 32);
          swift_retain();
          v33 = (v28 + 1);
          if (__OFADD__(v28, 1))
          {
LABEL_60:
            __break(1u);
            goto LABEL_61;
          }
        }
        if (((*(uint64_t (**)(uint64_t, double))(v27 + 40))(v25, *(double *)(v26 + 232)) & 1) != 0)
        {
          v34 = swift_retain();
          MEMORY[0x186DC4654](v34);
          if (*(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v63 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_186507690();
          sub_1865076D8();
          sub_18650766C();
          swift_release();
          v26 = v61;
        }
        else
        {
          v35 = *(_BYTE *)(v27 + 33);
          swift_release();
          if ((v35 & 1) != 0)
          {
            v59 = 1;
            v28 = (unint64_t)v33;
            goto LABEL_35;
          }
        }
        ++v28;
LABEL_35:
        v27 = MEMORY[0x1E0DEE9D8];
        if (v33 == v32)
          goto LABEL_39;
      }
    }
    v59 = 0;
LABEL_39:
    swift_bridgeObjectRelease();
    signpost_c2_tick_solver_end();
    v25 = v63;
    swift_release();
    sub_18577F99C(a7);
    signpost_c2_tick_post_start();
    v36 = (uint64_t *)(v26 + 112);
    swift_beginAccess();
    v28 = *(_QWORD *)(v26 + 112);
    v37 = (v28 + 16);
    v38 = *(Class *)(v28 + 16);
    if (v38)
    {
      v22 = 0;
      while (1)
      {
        v39 = __OFADD__(v22, v38);
        v22 += (unint64_t)v38;
        if (v39)
          break;
        *v36 = v27;
        isa = v37->isa;
        if (v37->isa)
        {
          a4 = v28 + 40;
          do
          {
            v41 = *(void (**)(uint64_t))(a4 - 8);
            v42 = swift_retain();
            v41(v42);
            swift_release();
            a4 += 16;
            isa = (Class)((char *)isa - 1);
          }
          while (isa);
        }
        swift_bridgeObjectRelease();
        v28 = *v36;
        v37 = (*v36 + 16);
        v38 = v37->isa;
        if (!v37->isa)
          goto LABEL_47;
      }
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
LABEL_47:
    signpost_c2_tick_post_end();
    sub_18577FDF0((v56 | v59) & 1, a8);
    v70[0] = 0;
    signpost_c2_tick_exit_start();
    v43 = (uint64_t *)(v26 + 120);
    swift_beginAccess();
    v28 = *(_QWORD *)(v26 + 120);
    v44 = (v28 + 16);
    v45 = *(Class *)(v28 + 16);
    if (!v45)
      break;
    v22 = 0;
    while (1)
    {
      v39 = __OFADD__(v22, v45);
      v22 += (unint64_t)v45;
      if (v39)
        break;
      *v43 = v27;
      v46 = v44->isa;
      if (v44->isa)
      {
        a4 = v28 + 40;
        do
        {
          v47 = *(void (**)(uint64_t))(a4 - 8);
          v48 = swift_retain();
          v47(v48);
          swift_release();
          a4 += 16;
          v46 = (Class)((char *)v46 - 1);
        }
        while (v46);
      }
      swift_bridgeObjectRelease();
      v28 = *v43;
      v44 = (*v43 + 16);
      v45 = v44->isa;
      if (!v44->isa)
        goto LABEL_55;
    }
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    swift_bridgeObjectRetain();
    v32 = sub_186507E58();
  }
LABEL_55:
  v49 = (_QWORD *)swift_allocObject();
  v49[2] = v70;
  v49[3] = v25;
  v49[4] = v26;
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = sub_185787580;
  *(_QWORD *)(v50 + 24) = v49;
  v68 = sub_1855A6A1C;
  v69 = v50;
  aBlock = MEMORY[0x1E0C809B0];
  v65 = 1107296256;
  v66 = sub_1855D8DF4;
  v67 = &block_descriptor_49_1;
  v51 = _Block_copy(&aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(queue, v51);
  _Block_release(v51);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_67:
    os_unfair_lock_unlock((os_unfair_lock_t)isEscapingClosureAtFileLocation);
    __break(1u);
    return;
  }
  signpost_c2_tick_exit_end();
  swift_release();
  v52 = swift_bridgeObjectRelease();
  a6(v52);
  LODWORD(v22) = v54;
LABEL_57:
  swift_beginAccess();
  v53 = swift_bridgeObjectRetain();
  *(_QWORD *)(v61 + 344) = sub_18578553C(v53);
  swift_endAccess();
  swift_bridgeObjectRelease_n();
  if ((_DWORD)v22)
    objc_msgSend((id)objc_opt_self(), sel_flush);
  swift_unknownObjectWeakAssign();
}

uint64_t sub_185781CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  float v5;
  float v6;
  uint64_t v7;
  float v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;

  swift_beginAccess();
  v4 = swift_retain();
  MEMORY[0x186DC4654](v4);
  if (*(_QWORD *)((*(_QWORD *)(a1 + 104) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a1 + 104) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_186507690();
  sub_1865076D8();
  sub_18650766C();
  swift_endAccess();
  v5 = *(float *)(a2 + 16);
  v6 = *(float *)(a2 + 20);
  if ((sub_186507900() & 1) != 0)
    goto LABEL_15;
  swift_beginAccess();
  sub_185781F18(v5);
  swift_endAccess();
  swift_beginAccess();
  sub_185781F18(v6);
  swift_endAccess();
  v7 = sub_186507918();
  if ((v7 & 0x100000000) == 0)
  {
    v8 = *(float *)&v7;
    swift_beginAccess();
    sub_185781F18(v8);
    swift_endAccess();
  }
  v9 = *(_DWORD *)(a2 + 28);
  swift_beginAccess();
  sub_185782068(v9);
  swift_endAccess();
  if ((*(_BYTE *)(a2 + 32) & 1) == 0)
  {
    v10 = sub_186507918();
    result = sub_186507918();
    if ((v10 & 0x100000000) != 0)
    {
      if ((result & 0x100000000) == 0)
      {
LABEL_12:
        v12 = *(_QWORD *)(a1 + 168);
        v13 = __OFADD__(v12, 1);
        v14 = v12 + 1;
        if (v13)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(a1 + 168) = v14;
      }
    }
    else if ((result & 0x100000000) != 0 || *(float *)&v10 != *(float *)&result)
    {
      goto LABEL_12;
    }
  }
  *(_WORD *)(a1 + 368) = 0;
LABEL_15:
  v15 = MEMORY[0x186DCA138](a1 + 208);
  result = swift_unknownObjectRelease();
  if (!v15)
  {
    *(_QWORD *)(a1 + 216) = &off_1E1684930;
    result = swift_unknownObjectWeakAssign();
    *(_BYTE *)(a1 + 297) = 1;
  }
  return result;
}

uint64_t sub_185781F18(float a1)
{
  _QWORD *v1;
  char v2;
  _QWORD *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  _BOOL8 v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6 = *v1;
  v22 = v6;
  *v3 = 0x8000000000000000;
  v8 = sub_1855C4378(a1);
  v9 = *(_QWORD *)(v6 + 16);
  v10 = (v7 & 1) == 0;
  v11 = v9 + v10;
  if (__OFADD__(v9, v10))
  {
    __break(1u);
    goto LABEL_12;
  }
  v2 = v7;
  if (*(_QWORD *)(v6 + 24) < v11)
  {
    sub_1856CFCDC(v11, isUniquelyReferenced_nonNull_native);
    v12 = sub_1855C4378(a1);
    if ((v2 & 1) == (v13 & 1))
    {
      v8 = v12;
      goto LABEL_6;
    }
    goto LABEL_15;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_13;
  while (1)
  {
LABEL_6:
    *v3 = v6;
    result = swift_bridgeObjectRelease();
    v15 = (_QWORD *)*v3;
    if ((v2 & 1) != 0)
      goto LABEL_9;
    v15[(v8 >> 6) + 8] |= 1 << v8;
    *(float *)(v15[6] + 4 * v8) = a1;
    *(_QWORD *)(v15[7] + 8 * v8) = 0;
    v16 = v15[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      break;
    v15[2] = v18;
LABEL_9:
    v19 = v15[7];
    v20 = *(_QWORD *)(v19 + 8 * v8);
    v17 = __OFADD__(v20, 1);
    v21 = v20 + 1;
    if (!v17)
    {
      *(_QWORD *)(v19 + 8 * v8) = v21;
      return result;
    }
LABEL_12:
    __break(1u);
LABEL_13:
    sub_185683DF4();
    v6 = v22;
  }
  __break(1u);
LABEL_15:
  result = sub_186508074();
  __break(1u);
  return result;
}

uint64_t sub_185782068(unsigned int a1)
{
  _QWORD *v1;
  char v2;
  _QWORD *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  _BOOL8 v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6 = *v1;
  v22 = v6;
  *v3 = 0x8000000000000000;
  v8 = sub_1855C43B0(a1);
  v9 = *(_QWORD *)(v6 + 16);
  v10 = (v7 & 1) == 0;
  v11 = v9 + v10;
  if (__OFADD__(v9, v10))
  {
    __break(1u);
    goto LABEL_12;
  }
  v2 = v7;
  if (*(_QWORD *)(v6 + 24) < v11)
  {
    sub_1856CFF80(v11, isUniquelyReferenced_nonNull_native);
    v12 = sub_1855C43B0(a1);
    if ((v2 & 1) == (v13 & 1))
    {
      v8 = v12;
      goto LABEL_6;
    }
    goto LABEL_15;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_13;
  while (1)
  {
LABEL_6:
    *v3 = v6;
    result = swift_bridgeObjectRelease();
    v15 = (_QWORD *)*v3;
    if ((v2 & 1) != 0)
      goto LABEL_9;
    v15[(v8 >> 6) + 8] |= 1 << v8;
    *(_DWORD *)(v15[6] + 4 * v8) = a1;
    *(_QWORD *)(v15[7] + 8 * v8) = 0;
    v16 = v15[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      break;
    v15[2] = v18;
LABEL_9:
    v19 = v15[7];
    v20 = *(_QWORD *)(v19 + 8 * v8);
    v17 = __OFADD__(v20, 1);
    v21 = v20 + 1;
    if (!v17)
    {
      *(_QWORD *)(v19 + 8 * v8) = v21;
      return result;
    }
LABEL_12:
    __break(1u);
LABEL_13:
    sub_185683F84();
    v6 = v22;
  }
  __break(1u);
LABEL_15:
  result = sub_186508074();
  __break(1u);
  return result;
}

uint64_t sub_1857821B0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  void (*v29)(char *, __n128);
  char *v30;
  uint64_t v31;

  v3 = v2;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v30 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v28 - v10;
  v29 = *(void (**)(char *, __n128))(v6 + 16);
  v29((char *)&v28 - v10, v9);
  swift_isUniquelyReferenced_nonNull_native();
  v12 = *v2;
  v31 = v12;
  *v3 = 0x8000000000000000;
  v13 = *(_QWORD *)(a2 + 24);
  v14 = sub_185784678((uint64_t)v11, v5, v13);
  if (__OFADD__(*(_QWORD *)(v12 + 16), (v15 & 1) == 0))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v16 = v14;
  v17 = v15;
  sub_186507DBC();
  v18 = sub_186507D98();
  v19 = v31;
  if ((v18 & 1) == 0)
  {
LABEL_5:
    *v3 = v19;
    swift_bridgeObjectRelease();
    v22 = *v3;
    if ((v17 & 1) != 0)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v31 = 0;
      ((void (*)(char *, char *, uint64_t))v29)(v30, v11, v5);
      swift_bridgeObjectRetain();
      sub_186507DB0();
    }
    v23 = *(_QWORD *)(v22 + 56);
    swift_bridgeObjectRelease();
    v24 = *(_QWORD *)(v23 + 8 * v16);
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      *(_QWORD *)(v23 + 8 * v16) = v26;
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    }
    goto LABEL_11;
  }
  v20 = sub_185784678((uint64_t)v11, v5, v13);
  if ((v17 & 1) == (v21 & 1))
  {
    v16 = v20;
    goto LABEL_5;
  }
LABEL_12:
  result = sub_186508074();
  __break(1u);
  return result;
}

void sub_1857823A8()
{
  uint64_t v0;
  double v1;
  double v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  double v8;
  uint64_t v9;
  _QWORD *v10;

  if (*(_BYTE *)(v0 + 297) == 1)
  {
    *(_BYTE *)(v0 + 297) = 0;
    v1 = CACurrentMediaTime();
    v2 = *(double *)(v0 + 240);
    if (v2 == 0.0)
    {
      v3 = (void *)objc_opt_self();
      v4 = objc_msgSend(v3, sel_mainScreen);
      v5 = (uint64_t)objc_msgSend(v4, sel_maximumFramesPerSecond);

      if (v5 < 1)
      {
        v8 = 60.06;
      }
      else
      {
        v6 = objc_msgSend(v3, sel_mainScreen);
        v7 = objc_msgSend(v6, sel_maximumFramesPerSecond);

        v8 = (double)(uint64_t)v7 * 1.001;
      }
      v2 = 1.0 / v8;
      *(double *)(v0 + 240) = v2;
    }
    *(double *)(v0 + 224) = v1 + v2 * -0.4;
    *(_QWORD *)(v0 + 232) = 0;
    v9 = MEMORY[0x186DCA138](v0 + 208);
    if (v9)
    {
      v10 = (_QWORD *)v9;
      swift_retain();
      sub_185787C54(v10);
      swift_release();
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1857824EC()
{
  uint64_t v0;
  double v1;
  double v2;
  double v3;
  double v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  double v10;
  double v11;
  void *v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  double v17;

  v1 = 0.0;
  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    v2 = 0.0;
    return sub_185787270(0, 1, (uint64_t)sub_1857870C0, v0, (uint64_t)sub_185787C50, v0, v2, v1);
  }
  v3 = *(double *)(v0 + 224);
  v4 = *(double *)(v0 + 240);
  if (v4 == 0.0)
  {
    v5 = (void *)objc_opt_self();
    v6 = objc_msgSend(v5, sel_mainScreen);
    v7 = (uint64_t)objc_msgSend(v6, sel_maximumFramesPerSecond);

    if (v7 < 1)
    {
      v10 = 60.06;
    }
    else
    {
      v8 = objc_msgSend(v5, sel_mainScreen);
      v9 = objc_msgSend(v8, sel_maximumFramesPerSecond);

      v10 = (double)(uint64_t)v9 * 1.001;
    }
    v4 = 1.0 / v10;
    *(double *)(v0 + 240) = v4;
    v2 = v3 + v4 * 0.25;
    if ((*(_BYTE *)(v0 + 24) & 1) != 0)
      return sub_185787270(0, 1, (uint64_t)sub_1857870C0, v0, (uint64_t)sub_185787C50, v0, v2, v1);
  }
  else
  {
    v2 = v3 + v4 * 0.25;
  }
  v11 = *(double *)(v0 + 224);
  if (v4 == 0.0)
  {
    v12 = (void *)objc_opt_self();
    v13 = objc_msgSend(v12, sel_mainScreen);
    v14 = (uint64_t)objc_msgSend(v13, sel_maximumFramesPerSecond);

    if (v14 < 1)
    {
      v17 = 60.06;
    }
    else
    {
      v15 = objc_msgSend(v12, sel_mainScreen);
      v16 = objc_msgSend(v15, sel_maximumFramesPerSecond);

      v17 = (double)(uint64_t)v16 * 1.001;
    }
    v4 = 1.0 / v17;
    *(double *)(v0 + 240) = v4;
  }
  v1 = v11 + v4;
  return sub_185787270(0, 1, (uint64_t)sub_1857870C0, v0, (uint64_t)sub_185787C50, v0, v2, v1);
}

uint64_t sub_1857826BC(uint64_t a1)
{
  uint64_t result;

  *(_BYTE *)(a1 + 296) = 1;
  signpost_c2_tick_pre_start();
  sub_18577F7AC();
  result = signpost_c2_tick_pre_end();
  *(_BYTE *)(a1 + 296) = 0;
  return result;
}

void sub_1857826F0(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;

  v4 = MEMORY[0x186DCA138](a1 + 208);
  swift_unknownObjectRelease();
  if (v4)
    goto LABEL_6;
  swift_beginAccess();
  v5 = *(_QWORD *)(a1 + 96);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_186507E58();
    swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_6;
  }
  else if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_6;
  }
  v6 = (void *)MEMORY[0x186DCA138](a1 + 304);
  if (!v6)
  {
    v7 = 1;
    goto LABEL_7;
  }

LABEL_6:
  v7 = 0;
LABEL_7:
  *a2 = v7;
}

uint64_t sub_1857827C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;

  v7 = *(_QWORD *)(v3 + 336);
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 336) = v9;
    v5 = (_QWORD *)(v3 + 128);
    swift_beginAccess();
    v2 = *(_QWORD *)(*(_QWORD *)(v3 + 128) + 16);
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = a1;
    *(_QWORD *)(v4 + 24) = a2;
    swift_beginAccess();
    v6 = *(_QWORD **)(v3 + 128);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v3 + 128) = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_3;
  }
  v6 = sub_185647018(0, v6[2] + 1, 1, v6);
  *v5 = v6;
LABEL_3:
  v14 = v6[2];
  v13 = v6[3];
  if (v14 >= v13 >> 1)
  {
    v6 = sub_185647018((_QWORD *)(v13 > 1), v14 + 1, 1, v6);
    *v5 = v6;
  }
  v6[2] = v14 + 1;
  v15 = &v6[2 * v14];
  v15[4] = sub_1856DC45C;
  v15[5] = v4;
  swift_endAccess();
  return v2;
}

uint64_t sub_1857828F0(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t result;
  _QWORD *v9;

  v5 = *(_QWORD *)(v2 + 336);
  v6 = __OFSUB__(v5, 1);
  v7 = v5 - 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    v1 = a1;
    *(_QWORD *)(v2 + 336) = v7;
    v4 = (uint64_t *)(v2 + 128);
    swift_beginAccess();
    v3 = *(_QWORD **)(v2 + 128);
    result = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v2 + 128) = v3;
    if ((result & 1) != 0)
    {
      if ((v1 & 0x8000000000000000) == 0)
        goto LABEL_4;
LABEL_8:
      __break(1u);
      goto LABEL_9;
    }
  }
  result = (uint64_t)sub_1857854AC(v3);
  v3 = (_QWORD *)result;
  *v4 = result;
  if ((v1 & 0x8000000000000000) != 0)
    goto LABEL_8;
LABEL_4:
  if (v3[2] > v1)
  {
    v9 = &v3[2 * v1];
    v9[4] = signpost_c2_removePresentationModifier_end;
    v9[5] = 0;
    swift_endAccess();
    return swift_release();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1857829AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_18650796C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_186507954();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_186507330();
  MEMORY[0x1E0C80A78](v6);
  sub_1851F9080(0, (unint64_t *)&qword_1ECD75338);
  sub_186507324();
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_1852478E0(&qword_1ECD74D78, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74D68);
  sub_185638FF8(&qword_1ECD74D70, &qword_1ECD74D68, MEMORY[0x1E0DEAF38]);
  sub_186507B34();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v0);
  result = sub_18650799C();
  qword_1EDDA8750 = result;
  return result;
}

void sub_185782B80()
{
  qword_1EDDA8740 = MEMORY[0x1E0DEE9D8];
}

uint64_t sub_185782B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;

  if (qword_1EDD83208 != -1)
    swift_once();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_beginAccess();
  v7 = (_QWORD *)qword_1EDDA8740;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  qword_1EDDA8740 = (uint64_t)v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_185646DB0(0, v7[2] + 1, 1, v7);
    qword_1EDDA8740 = (uint64_t)v7;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    v7 = sub_185646DB0((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
    qword_1EDDA8740 = (uint64_t)v7;
  }
  v7[2] = v10 + 1;
  v11 = &v7[2 * v10];
  v11[4] = sub_185281934;
  v11[5] = v6;
  result = swift_endAccess();
  if (byte_1EDD82C70 == 1)
  {
    if (qword_1EDD831E0 != -1)
      swift_once();
    v13 = qword_1EDDA8748;
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = a3;
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = sub_185788510;
    *(_QWORD *)(v15 + 24) = v14;
    v16 = (_QWORD *)(v13 + 120);
    swift_beginAccess();
    v17 = *(_QWORD **)(v13 + 120);
    swift_retain();
    v18 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v13 + 120) = v17;
    if ((v18 & 1) == 0)
    {
      v17 = sub_185646DB0(0, v17[2] + 1, 1, v17);
      *v16 = v17;
    }
    v20 = v17[2];
    v19 = v17[3];
    if (v20 >= v19 >> 1)
    {
      v17 = sub_185646DB0((_QWORD *)(v19 > 1), v20 + 1, 1, v17);
      *v16 = v17;
    }
    v17[2] = v20 + 1;
    v21 = &v17[2 * v20];
    v21[4] = sub_185281934;
    v21[5] = v15;
    swift_endAccess();
    result = swift_release();
    byte_1EDD82C70 = 0;
  }
  return result;
}

uint64_t sub_185782E04(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;
  uint64_t v15;
  _QWORD aBlock[6];

  v2 = sub_186507318();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v15 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_186507330();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1851F9080(0, (unint64_t *)&qword_1ECD75338);
  v10 = (void *)sub_186507978();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  aBlock[4] = sub_185788528;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_18530A69C;
  aBlock[3] = &block_descriptor_223;
  v12 = _Block_copy(aBlock);
  swift_release();
  sub_186507324();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1852478E0((unint64_t *)&qword_1EDD83228, v3, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83230);
  sub_185638FF8((unint64_t *)&qword_1EDD83238, &qword_1EDD83230, MEMORY[0x1E0DEAF38]);
  sub_186507B34();
  MEMORY[0x186DC49B4](0, v9, v5, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_185783010(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v6;

  if (qword_1EDD83200 != -1)
    a1 = swift_once();
  MEMORY[0x1E0C80A78](a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83240);
  sub_186507984();
  v1 = *(_QWORD *)(v6 + 16);
  if (v1)
  {
    v2 = v6 + 40;
    do
    {
      v3 = *(void (**)(uint64_t))(v2 - 8);
      v4 = swift_retain();
      v3(v4);
      swift_release();
      v2 += 16;
      --v1;
    }
    while (v1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_185783100@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  if (qword_1EDD83208 != -1)
    swift_once();
  result = swift_beginAccess();
  v3 = qword_1EDDA8740;
  qword_1EDDA8740 = MEMORY[0x1E0DEE9D8];
  byte_1EDD82C70 = 1;
  *a1 = v3;
  return result;
}

uint64_t sub_185783198(void *a1)
{
  uint64_t v1;
  NSObject *v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t result;
  double v9;
  double v10;
  double v11;
  _QWORD aBlock[6];
  char v13;

  v13 = 0;
  v3 = *(NSObject **)(v1 + 272);
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = v1;
  v4[3] = a1;
  v4[4] = &v13;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_18578845C;
  *(_QWORD *)(v5 + 24) = v4;
  aBlock[4] = sub_1855A6A1C;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1855D8DF4;
  aBlock[3] = &block_descriptor_169;
  v6 = _Block_copy(aBlock);
  swift_retain();
  v7 = a1;
  swift_retain();
  swift_release();
  dispatch_sync(v3, v6);
  _Block_release(v6);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v3 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((v13 & 1) == 0)
    {
      signpost_c2_animatorFired();
      objc_msgSend(v7, sel_timestamp);
      v10 = v9;
      objc_msgSend(v7, sel_targetTimestamp);
      sub_185787270(0, 0, (uint64_t)signpost_c2_removePresentationModifier_end, 0, (uint64_t)signpost_c2_removePresentationModifier_end, 0, v10, v11);
    }
    return swift_release();
  }
  return result;
}

void sub_185783340(uint64_t a1, void *a2, _BYTE *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v6 = sub_186507318();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_186507330();
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)&v12 = MEMORY[0x1E0C80A78](v10).n128_u64[0];
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 327) == 1)
  {
    objc_msgSend(a2, sel_invalidate, v12);
    v15 = *(void **)(a1 + 312);
    *(_QWORD *)(a1 + 312) = 0;

    *a3 = 1;
    sub_1851F9080(0, (unint64_t *)&qword_1ECD75338);
    v16 = (void *)sub_186507978();
    aBlock[4] = sub_185788478;
    aBlock[5] = a1;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_18530A69C;
    aBlock[3] = &block_descriptor_172;
    v17 = _Block_copy(aBlock);
    v20 = v7;
    v18 = v17;
    swift_retain();
    swift_release();
    sub_186507324();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1852478E0((unint64_t *)&qword_1EDD83228, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD83230);
    sub_185638FF8((unint64_t *)&qword_1EDD83238, &qword_1EDD83230, MEMORY[0x1E0DEAF38]);
    sub_186507B34();
    MEMORY[0x186DC49B4](0, v14, v9, v18);
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v6);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
}

uint64_t sub_185783574(uint64_t a1)
{
  _DWORD *v1;

  v1 = (_DWORD *)(a1 + 176);
  swift_beginAccess();
  _UIUpdateRequestDeactivate(v1, 0x100036u);
  return swift_endAccess();
}

uint64_t type metadata accessor for InProcessAnimationManager()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for InProcessAnimationManager.FixedRateLinksObserver()
{
  return objc_opt_self();
}

uint64_t sub_18578364C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  int v6;
  int v7;
  uint64_t v8;

  *(float *)a1 = sub_18577E720();
  *(_DWORD *)(a1 + 4) = v6;
  *(_DWORD *)(a1 + 8) = v7;
  if ((*(_BYTE *)(a2 + 369) & 1) == 0)
  {
    swift_beginAccess();
    v8 = swift_bridgeObjectRetain();
    *(_QWORD *)(a2 + 80) = sub_185786D94(v8);
    swift_bridgeObjectRelease();
    *(_BYTE *)(a2 + 369) = 1;
  }
  *a3 = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

id sub_1857836E4(void *a1)
{
  id v2;
  double v3;
  double v4;
  void *v5;

  v2 = objc_msgSend((id)objc_opt_self(), sel_mainThread);
  objc_msgSend(v2, sel_threadPriority);
  v4 = v3;

  objc_msgSend(a1, sel_setThreadPriority_, fmax(v4, 0.85));
  v5 = (void *)sub_1865074D4();
  objc_msgSend(a1, sel_setName_, v5);

  return objc_msgSend(a1, sel_start);
}

void sub_1857837A4(uint64_t a1)
{
  void *v2;
  id v3;
  dispatch_semaphore_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  inProcessAnimationManagerSetFixedPriority(53);
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_currentRunLoop);
  swift_unknownObjectWeakAssign();

  v4 = dispatch_semaphore_create(0);
  v5 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v4;

  sub_1865079F0();
  while (1)
  {
    do
    {
      v6 = objc_msgSend(v2, sel_currentRunLoop);
      objc_msgSend(v6, "run");

      v7 = *(void **)(a1 + 56);
    }
    while (!v7);
    v8 = v7;
    sub_1865079E4();

  }
}

void sub_18578385C(uint64_t a1, float *a2, uint64_t *a3)
{
  id v6;
  void *v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  float v21;
  float v22;
  float v23;
  _QWORD v24[6];

  *(_BYTE *)(a1 + 327) = 0;
  if (!*(_QWORD *)(a1 + 312))
  {
    v6 = objc_msgSend((id)objc_opt_self(), sel_displayLinkWithTarget_selector_, a1, sel_displayLinkFire_);
    v7 = *(void **)(a1 + 312);
    *(_QWORD *)(a1 + 312) = v6;
    v8 = v6;

    v9 = (void *)MEMORY[0x186DCA138](a1 + 48);
    if (v9)
    {
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = v8;
      *(_QWORD *)(v13 + 24) = v9;
      v24[4] = sub_1857883A4;
      v24[5] = v13;
      v24[0] = MEMORY[0x1E0C809B0];
      v24[1] = 1107296256;
      v24[2] = sub_18530A69C;
      v24[3] = &block_descriptor_149_0;
      v14 = _Block_copy(v24);
      v15 = v9;
      v16 = v8;
      v17 = v15;
      swift_release();
      objc_msgSend(v17, sel_performBlock_, v14);
      _Block_release(v14);

    }
    v18 = *(void **)(a1 + 56);
    if (v18)
    {
      v19 = v18;
      sub_1865079F0();

    }
    *(float *)&v10 = *a2;
    *(float *)&v11 = a2[1];
    *(float *)&v12 = a2[2];
    objc_msgSend(v8, sel_setPreferredFrameRateRange_, v10, v11, v12);
    v20 = *a3;
    swift_bridgeObjectRetain();
    sub_185781254(v8, v20);
    swift_bridgeObjectRelease();
    v21 = *a2;
    v22 = a2[1];
    v23 = a2[2];
    swift_beginAccess();
    _C2UpdateRequestSetRateRange((_DWORD *)(a1 + 176), v21, v22, v23);
    swift_endAccess();
    swift_beginAccess();
    _UIUpdateRequestActivate((int *)(a1 + 176), 0x100036u);
    swift_endAccess();

  }
}

void sub_185783A6C(uint64_t a1, __n128 (*a2)(id), uint64_t a3, unsigned __int32 *a4, uint64_t *a5)
{
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  __n128 v17;
  double v18;
  double v19;
  uint64_t v20;
  unsigned __int32 v21;
  float v22;
  float v23;
  _QWORD v24[6];

  *(_BYTE *)(a1 + 327) = 0;
  if (!*(_QWORD *)(a1 + 312))
  {
    v9 = objc_msgSend((id)objc_opt_self(), sel_displayLinkWithTarget_selector_, a1, sel_displayLinkFire_);
    v10 = *(void **)(a1 + 312);
    *(_QWORD *)(a1 + 312) = v9;
    v11 = v9;

    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v11;
    v13 = objc_allocWithZone(MEMORY[0x1E0CB3978]);
    v24[4] = sub_1857883F0;
    v24[5] = v12;
    v24[0] = MEMORY[0x1E0C809B0];
    v24[1] = 1107296256;
    v24[2] = sub_18530A69C;
    v24[3] = &block_descriptor_155;
    v14 = _Block_copy(v24);
    v15 = v11;
    v16 = objc_msgSend(v13, sel_initWithBlock_, v14);
    _Block_release(v14);
    swift_release();
    v17 = a2(v16);
    v17.n128_u32[0] = *a4;
    LODWORD(v18) = a4[1];
    LODWORD(v19) = a4[2];
    objc_msgSend(v15, sel_setPreferredFrameRateRange_, v17.n128_f64[0], v18, v19);
    v20 = *a5;
    swift_bridgeObjectRetain();
    sub_185781254(v15, v20);
    swift_bridgeObjectRelease();
    v21 = *a4;
    v22 = *((float *)a4 + 1);
    v23 = *((float *)a4 + 2);
    swift_beginAccess();
    _C2UpdateRequestSetRateRange((_DWORD *)(a1 + 176), *(float *)&v21, v22, v23);
    swift_endAccess();
    swift_beginAccess();
    _UIUpdateRequestActivate((int *)(a1 + 176), 0x100036u);
    swift_endAccess();

  }
}

void sub_185783C70(void *a1)
{
  void *v2;
  id v3;
  id v4;

  inProcessAnimationManagerSetFixedPriority(53);
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_currentRunLoop);
  objc_msgSend(a1, sel_addToRunLoop_forMode_, v3, *MEMORY[0x1E0C99860]);

  v4 = objc_msgSend(v2, sel_currentRunLoop);
  objc_msgSend(v4, "run");

}

void sub_185783D18(uint64_t a1, float *a2, uint64_t *a3)
{
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  float v16;
  float v17;
  float v18;

  *(_BYTE *)(a1 + 327) = 0;
  if (!*(_QWORD *)(a1 + 312))
  {
    v5 = a1;
    v6 = objc_msgSend((id)objc_opt_self(), sel_displayLinkWithTarget_selector_, a1, sel_displayLinkFire_);
    v7 = *(void **)(v5 + 312);
    *(_QWORD *)(v5 + 312) = v6;
    v8 = v6;

    v9 = (void *)objc_opt_self();
    v10 = objc_msgSend(v9, sel_mainRunLoop);
    objc_msgSend(v8, sel_addToRunLoop_forMode_, v10, *MEMORY[0x1E0C99860]);

    v11 = objc_msgSend(v9, sel_mainRunLoop);
    objc_msgSend(v8, sel_addToRunLoop_forMode_, v11, CFSTR("UITrackingRunLoopMode"));

    *(float *)&v12 = *a2;
    *(float *)&v13 = a2[1];
    *(float *)&v14 = a2[2];
    objc_msgSend(v8, sel_setPreferredFrameRateRange_, v12, v13, v14);
    v15 = *a3;
    swift_bridgeObjectRetain();
    sub_185781254(v8, v15);
    swift_bridgeObjectRelease();
    v16 = *a2;
    v17 = a2[1];
    v5 += 176;
    v18 = a2[2];
    swift_beginAccess();
    _C2UpdateRequestSetRateRange((_DWORD *)v5, v16, v17, v18);
    swift_endAccess();
    swift_beginAccess();
    _UIUpdateRequestActivate((int *)v5, 0x100036u);
    swift_endAccess();

  }
}

uint64_t sub_185783EE4()
{
  sub_1865080EC();
  sub_1865080F8();
  return sub_186508134();
}

uint64_t sub_185783F24()
{
  sub_1865080EC();
  sub_1865080F8();
  return sub_186508134();
}

uint64_t sub_185783F60()
{
  uint64_t result;

  type metadata accessor for InProcessAnimationManager();
  swift_allocObject();
  result = sub_18577D420();
  qword_1EDDA8748 = result;
  return result;
}

uint64_t sub_185783F98()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for InProcessAnimationManager.TickEntry()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for InProcessAnimationManager.Clean()
{
  return &type metadata for InProcessAnimationManager.Clean;
}

uint64_t destroy for InProcessAnimationManager.ObservedWindowScene()
{
  return swift_unknownObjectWeakDestroy();
}

_QWORD *initializeWithCopy for InProcessAnimationManager.ObservedWindowScene(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectWeakCopyInit();
  return a1;
}

_QWORD *assignWithCopy for InProcessAnimationManager.ObservedWindowScene(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectWeakCopyAssign();
  return a1;
}

_QWORD *initializeWithTake for InProcessAnimationManager.ObservedWindowScene(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectWeakTakeInit();
  return a1;
}

_QWORD *assignWithTake for InProcessAnimationManager.ObservedWindowScene(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectWeakTakeAssign();
  return a1;
}

uint64_t getEnumTagSinglePayload for InProcessAnimationManager.ObservedWindowScene(uint64_t a1, int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 != 1 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2);
  if (*(_QWORD *)a1)
    v3 = -1;
  else
    v3 = 0;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for InProcessAnimationManager.ObservedWindowScene(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for InProcessAnimationManager.ObservedWindowScene()
{
  return &type metadata for InProcessAnimationManager.ObservedWindowScene;
}

uint64_t type metadata accessor for WeakReferenceTable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WeakReferenceTable);
}

uint64_t type metadata accessor for CountedSet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CountedSet);
}

ValueMetadata *type metadata accessor for InProcessAnimationManager.ReasonArray()
{
  return &type metadata for InProcessAnimationManager.ReasonArray;
}

_DWORD *__swift_memcpy4_1(_DWORD *result, _DWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for InProcessAnimationManager.ConfigurationState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 2);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for InProcessAnimationManager.ConfigurationState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 4) = 0;
    if (a2)
      *(_BYTE *)(result + 2) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for InProcessAnimationManager.ConfigurationState()
{
  return &type metadata for InProcessAnimationManager.ConfigurationState;
}

ValueMetadata *type metadata accessor for InProcessAnimationManager.ModifierGroupRequestID()
{
  return &type metadata for InProcessAnimationManager.ModifierGroupRequestID;
}

double sub_185784224@<D0>(uint64_t a1@<X8>)
{
  double result;
  __int128 v3;
  __int128 v4;
  uint64_t v5;

  swift_bridgeObjectRetain();
  sub_186507DA4();
  result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  return result;
}

_DWORD *sub_185784284(_DWORD *result, int a2, uint64_t a3, id a4)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v4 = 0;
  v5 = 0;
  v6 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  do
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
    }
    else
    {
      v14 = v5 + 1;
      if (__OFADD__(v5, 1))
        goto LABEL_23;
      if (v14 >= v10)
        return objc_msgSend(a4, sel_setHighFrameRateReasons_count_, result, *(_QWORD *)(a3 + 16));
      v15 = *(_QWORD *)(v6 + 8 * v14);
      ++v5;
      if (!v15)
      {
        v5 = v14 + 1;
        if (v14 + 1 >= v10)
          return objc_msgSend(a4, sel_setHighFrameRateReasons_count_, result, *(_QWORD *)(a3 + 16));
        v15 = *(_QWORD *)(v6 + 8 * v5);
        if (!v15)
        {
          v5 = v14 + 2;
          if (v14 + 2 >= v10)
            return objc_msgSend(a4, sel_setHighFrameRateReasons_count_, result, *(_QWORD *)(a3 + 16));
          v15 = *(_QWORD *)(v6 + 8 * v5);
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v10)
              return objc_msgSend(a4, sel_setHighFrameRateReasons_count_, result, *(_QWORD *)(a3 + 16));
            v15 = *(_QWORD *)(v6 + 8 * v16);
            if (!v15)
            {
              while (1)
              {
                v5 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_24;
                if (v5 >= v10)
                  return objc_msgSend(a4, sel_setHighFrameRateReasons_count_, result, *(_QWORD *)(a3 + 16));
                v15 = *(_QWORD *)(v6 + 8 * v5);
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v5 = v16;
          }
        }
      }
LABEL_20:
      v9 = (v15 - 1) & v15;
      v12 = __clz(__rbit64(v15)) + (v5 << 6);
    }
    result[v4] = *(_DWORD *)(*(_QWORD *)(a3 + 48) + 4 * v12);
  }
  while (!__OFADD__(v4++, 1));
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1857843CC()
{
  swift_getTupleTypeMetadata2();
  sub_1865076B4();
  return sub_1865073F0();
}

uint64_t sub_18578442C@<X0>(uint64_t a1@<X8>)
{
  sub_185784224(a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_185784458()
{
  uint64_t v0;

  v0 = sub_185786C28();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_185784494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1857870D8(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  result = swift_bridgeObjectRelease();
  *a3 = v4;
  return result;
}

uint64_t sub_1857844D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[8];

  v7 = type metadata accessor for WeakReferenceTable.WeakReference(0, *(_QWORD *)(a3 + a2 - 8), a3, a4);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  v9 = MEMORY[0x186DCA138](v11);
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
  *a5 = v9;
  return result;
}

uint64_t sub_185784554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  sub_1857800F4(*(_QWORD *)(a1 + 16), a2, a3, a4);
  return swift_bridgeObjectRelease();
}

unint64_t sub_185784584()
{
  unint64_t result;

  result = qword_1EDD8AF48;
  if (!qword_1EDD8AF48)
  {
    result = MEMORY[0x186DC9F28](&unk_186676778, &type metadata for InProcessAnimationManager.ModifierGroupRequestID);
    atomic_store(result, (unint64_t *)&qword_1EDD8AF48);
  }
  return result;
}

uint64_t sub_1857845C8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_185784600()
{
  unint64_t result;

  result = qword_1EDD81698;
  if (!qword_1EDD81698)
  {
    result = MEMORY[0x186DC9F28](&unk_186676848, &type metadata for InProcessAnimationManager.ObservedWindowScene);
    atomic_store(result, (unint64_t *)&qword_1EDD81698);
  }
  return result;
}

uint64_t sub_185784644()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_185784678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_186507444();
  return sub_1857846C0(a1, v6, a2, a3);
}

unint64_t sub_1857846C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t, __n128);
  char v17;
  _QWORD v19[2];

  v5 = v4;
  v19[0] = a1;
  v19[1] = a4;
  v7 = *(_QWORD *)(a3 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = -1 << *(_BYTE *)(v5 + 32);
  v13 = v12 & ~v11;
  if (((*(_QWORD *)(v5 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v11;
    v15 = *(_QWORD *)(v7 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16);
    do
    {
      v16(v10, *(_QWORD *)(v5 + 48) + v15 * v13, a3, v8);
      v17 = sub_1865074C8();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, a3);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v5 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

uint64_t (*sub_1857847D8(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1857848D4(v6, a2, a3);
  return sub_185590E70;
}

uint64_t (*sub_18578482C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_185784940(v6, a2, a3);
  return sub_185590E70;
}

uint64_t (*sub_185784880(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1857849AC(v6, a2, a3);
  return sub_185590E70;
}

void (*sub_1857848D4(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x186DC4CB4](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for UIHoverHighlightEffect;
  }
  __break(1u);
  return result;
}

void (*sub_185784940(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x186DC4CB4](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return _s16PlaceholderChunkC9ChunkTypeOwxx;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1857849AC(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x186DC4CB4](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_1856BADB4;
  }
  __break(1u);
  return result;
}

unint64_t sub_185784A18(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a5[6] + 8 * result) = a2;
  v5 = (_QWORD *)(a5[7] + 16 * result);
  *v5 = a3;
  v5[1] = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_185784A64(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5, _QWORD *a6)
{
  _QWORD *v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 24 * result);
  *v6 = a2;
  v6[1] = a3;
  v6[2] = a4;
  v7 = (_OWORD *)(a6[7] + 80 * result);
  v8 = a5[4];
  v9 = a5[2];
  v7[3] = a5[3];
  v7[4] = v8;
  v10 = a5[1];
  *v7 = *a5;
  v7[1] = v10;
  v7[2] = v9;
  v11 = a6[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a6[2] = v13;
  return result;
}

unint64_t sub_185784AD0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_185784B18(unint64_t a1, uint64_t a2, __int128 *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for UITextEffectView.EffectID();
  sub_1855C6F8C(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for UITextEffectView.EffectID);
  result = sub_1851E59E0(a3, a4[7] + 40 * a1);
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_185784BC4(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

uint64_t sub_185784C0C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_186506BBC();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_185784CA4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t result;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = a5(a3, a4[7] + 40 * a1);
  v7 = a4[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
    __break(1u);
  else
    a4[2] = v9;
  return result;
}

_OWORD *sub_185784D0C(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1850F6908(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_185784D70(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a4[6] + 8 * result) = a2;
  v4 = a4[7] + 40 * result;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a3;
  *(_OWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(a3 + 32);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_185784DC8(unint64_t a1, uint64_t a2, __int128 *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_1851E59E0(a3, a4[7] + 40 * a1);
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

uint64_t sub_185784E44(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for IntelligenceUI.PromptAmbiguityID();
  sub_1855C6F8C(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceUI.PromptAmbiguityID);
  result = sub_1855C6FD0(a3, a4[7] + 72 * a1);
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_185784EE8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a5[6];
  v11 = type metadata accessor for IntelligenceUI.PromptAmbiguityID();
  result = sub_1855C6F8C(a2, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceUI.PromptAmbiguityID);
  v13 = (_QWORD *)(a5[7] + 16 * a1);
  *v13 = a3;
  v13[1] = a4;
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

uint64_t sub_185784F88(unint64_t a1, uint64_t a2, __int16 a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for IntelligenceUI.PromptAmbiguityID();
  result = sub_1855C6F8C(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceUI.PromptAmbiguityID);
  v11 = (_BYTE *)(a4[7] + 2 * a1);
  *v11 = a3 & 1;
  v11[1] = HIBYTE(a3) & 1;
  v12 = a4[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a4[2] = v14;
  return result;
}

uint64_t sub_185785030(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for IntelligenceUI.PromptAmbiguityID();
  sub_1855C6F8C(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceUI.PromptAmbiguityID);
  v10 = a4[7];
  v11 = type metadata accessor for IntelligenceUI.PromptEntryView.AmbiguityAppearanceConfiguration(0);
  result = sub_1855C6F8C(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, type metadata accessor for IntelligenceUI.PromptEntryView.AmbiguityAppearanceConfiguration);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_1857850E8(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = sub_186507030();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

unint64_t sub_185785174(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a8[(result >> 6) + 8] |= 1 << result;
  v8 = (_QWORD *)(a8[6] + 32 * result);
  *v8 = a2;
  v8[1] = a3;
  v8[2] = a4;
  v8[3] = a5;
  v9 = (_QWORD *)(a8[7] + 16 * result);
  *v9 = a6;
  v9[1] = a7;
  v10 = a8[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a8[2] = v12;
  return result;
}

_OWORD *sub_1857851C4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _OWORD *a6, _QWORD *a7)
{
  _QWORD *v8;
  _OWORD *result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a7[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a7[6] + 32 * a1);
  *v8 = a2;
  v8[1] = a3;
  v8[2] = a4;
  v8[3] = a5;
  result = sub_1850F6908(a6, (_OWORD *)(a7[7] + 32 * a1));
  v10 = a7[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a7[2] = v12;
  return result;
}

uint64_t sub_185785234(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = type metadata accessor for UITextEffectView.EffectID();
  result = sub_1855C6F8C(a3, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for UITextEffectView.EffectID);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

unint64_t sub_1857852C4(unint64_t result, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a4[6] + result) = a2 & 1;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

uint64_t sub_18578530C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a5[6];
  v11 = sub_186506BBC();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a2, v11);
  v13 = (_QWORD *)(a5[7] + 16 * a1);
  *v13 = a3;
  v13[1] = a4;
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

unint64_t sub_1857853AC(unint64_t result, char a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a5[6] + result) = a2 & 1;
  v5 = (_QWORD *)(a5[7] + 16 * result);
  *v5 = a3;
  v5[1] = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_1857853F8(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1850F26F8(a3, a4[7] + 8 * a1, &qword_1EDD83080);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

_QWORD *sub_18578546C(_QWORD *a1)
{
  return sub_185646B84(0, a1[2], 0, a1);
}

_QWORD *sub_185785480(_QWORD *a1)
{
  return sub_185646DEC(0, a1[2], 0, a1);
}

_QWORD *sub_185785494(_QWORD *a1)
{
  return sub_185646EF8(0, a1[2], 0, a1);
}

_QWORD *sub_1857854AC(_QWORD *a1)
{
  return sub_185647018(0, a1[2], 0, a1);
}

_QWORD *sub_1857854C0(_QWORD *a1)
{
  return sub_185647138(0, a1[2], 0, a1);
}

void sub_1857854D4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_186507E58();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x186DC4CC0);
}

uint64_t sub_18578553C(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  size_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[2];

  v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_18578568C((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    if (v1)
      swift_willThrow();
    else
      return v6;
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v2 = sub_18578568C((uint64_t)v7, v4, v2);
    MEMORY[0x186DCA030](v7, -1, -1);
  }
  return v2;
}

uint64_t sub_18578568C(uint64_t result, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  void *v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t *v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[8];

  v18 = (unint64_t *)result;
  v19 = 0;
  v4 = 0;
  v5 = a3 + 64;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 64);
  v20 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v9 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v10 = v9 | (v4 << 6);
LABEL_5:
    v11 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v10);
    sub_18519F0C4(*(_QWORD *)(a3 + 56) + 8 * v10, (uint64_t)v24, &qword_1EDD83080);
    v22 = v11;
    sub_18519F0C4((uint64_t)v24, (uint64_t)&v23, &qword_1EDD83080);
    sub_18519F0C4((uint64_t)&v23, (uint64_t)&v21, &qword_1EDD83080);
    v12 = (void *)MEMORY[0x186DCA138](&v21);
    sub_18519F088((uint64_t)&v22, &qword_1EDD83088);
    sub_18519F088((uint64_t)&v21, &qword_1EDD83080);
    if (v12)
    {

      result = sub_18519F088((uint64_t)v24, &qword_1EDD83080);
      *(unint64_t *)((char *)v18 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      if (__OFADD__(v19++, 1))
      {
        __break(1u);
        return sub_1857858C8(v18, a2, v19, a3);
      }
    }
    else
    {
      result = sub_18519F088((uint64_t)v24, &qword_1EDD83080);
    }
  }
  v13 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v13 >= v20)
    return sub_1857858C8(v18, a2, v19, a3);
  v14 = *(_QWORD *)(v5 + 8 * v13);
  ++v4;
  if (v14)
    goto LABEL_21;
  v4 = v13 + 1;
  if (v13 + 1 >= v20)
    return sub_1857858C8(v18, a2, v19, a3);
  v14 = *(_QWORD *)(v5 + 8 * v4);
  if (v14)
    goto LABEL_21;
  v4 = v13 + 2;
  if (v13 + 2 >= v20)
    return sub_1857858C8(v18, a2, v19, a3);
  v14 = *(_QWORD *)(v5 + 8 * v4);
  if (v14)
  {
LABEL_21:
    v8 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + (v4 << 6);
    goto LABEL_5;
  }
  v15 = v13 + 3;
  if (v15 >= v20)
    return sub_1857858C8(v18, a2, v19, a3);
  v14 = *(_QWORD *)(v5 + 8 * v15);
  if (v14)
  {
    v4 = v15;
    goto LABEL_21;
  }
  while (1)
  {
    v4 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v4 >= v20)
      return sub_1857858C8(v18, a2, v19, a3);
    v14 = *(_QWORD *)(v5 + 8 * v4);
    ++v15;
    if (v14)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1857858C8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v30;
  char v31[8];
  char v32[8];

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD830A0);
  result = sub_186507E94();
  v9 = result;
  v30 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= a2)
        return v9;
      v16 = v30[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= a2)
          return v9;
        v16 = v30[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= a2)
            return v9;
          v16 = v30[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= a2)
              return v9;
            v16 = v30[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= a2)
                  return v9;
                v16 = v30[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = 8 * v14;
    v19 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + v18);
    sub_18519F0C4(*(_QWORD *)(v4 + 56) + v18, (uint64_t)v32, &qword_1EDD83080);
    sub_1850F26F8((uint64_t)v32, (uint64_t)v31, &qword_1EDD83080);
    result = sub_1865080E0();
    v20 = -1 << *(_BYTE *)(v9 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = 8 * v23;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + v28) = v19;
    result = sub_1850F26F8((uint64_t)v31, *(_QWORD *)(v9 + 56) + v28, &qword_1EDD83080);
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_185785B64(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_186507E58();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_186507E58();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_185638FF8(&qword_1EDD8AF78, &qword_1EDD89818, MEMORY[0x1E0DEAF50]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD89818);
          v12 = sub_18578482C(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for CGColor(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_185785D70(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_186507E58();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_186507E58();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_185638FF8(&qword_1EDD8AF70, &qword_1EDD8AF68, MEMORY[0x1E0DEAF50]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD8AF68);
          v12 = sub_1857847D8(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1851F9080(0, &qword_1EDD870E8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_185785F8C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_186507E58();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_186507E58();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_185638FF8(&qword_1EDD8AF98, &qword_1EDD8AF90, MEMORY[0x1E0DEAF50]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD8AF90);
          v12 = sub_1857847D8(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1851F9080(0, (unint64_t *)&qword_1ECD74A70);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_1857861A8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_186507E58();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_186507E58();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_185638FF8(&qword_1EDD87F50, &qword_1EDD87F48, MEMORY[0x1E0DEAF50]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD87F48);
          v12 = sub_1857847D8(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1851F9080(0, &qword_1EDD813C0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_1857863C4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_186507E58();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_186507E58();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_185638FF8(&qword_1EDD8AF88, &qword_1EDD8AF80, MEMORY[0x1E0DEAF50]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD8AF80);
          v12 = sub_1857847D8(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1851F9080(0, qword_1EDD7D690);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_1857865E0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_186507E58();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_186507E58();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_185638FF8(&qword_1EDD81F18, &qword_1EDD81F10, MEMORY[0x1E0DEAF50]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD81F10);
          v12 = sub_1857847D8(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1851F9080(0, (unint64_t *)&qword_1EDD81F30);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_1857867FC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  uint64_t (*v12)();
  uint64_t *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_186507E58();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_186507E58();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_185638FF8(&qword_1EDD8AF58, &qword_1EDD8AF50, MEMORY[0x1E0DEAF50]);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD8AF50);
          v12 = sub_185784880(v16, i, a3);
          v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for InProcessAnimationManager.TickEntry();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_186507EA0();
  __break(1u);
  return result;
}

uint64_t sub_185786A04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  uint64_t result;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[8];
  _BYTE v16[8];
  uint64_t v17;

  v17 = MEMORY[0x1E0DEE9D8];
  v13 = a1 + 64;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (v4)
  {
    v8 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v9 = v8 | (v7 << 6);
LABEL_22:
    sub_18519F0C4(*(_QWORD *)(a1 + 56) + 8 * v9, (uint64_t)v16, &qword_1EDD83080);
    sub_1850F26F8((uint64_t)v16, (uint64_t)v15, &qword_1EDD83080);
    swift_getAtKeyPath();
    result = sub_18519F088((uint64_t)v15, &qword_1EDD83080);
    if (v14)
    {
      MEMORY[0x186DC4654](result);
      if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_186507690();
      sub_1865076D8();
      result = sub_18650766C();
    }
  }
  v10 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v10 >= v5)
    goto LABEL_26;
  v11 = *(_QWORD *)(v13 + 8 * v10);
  ++v7;
  if (v11)
    goto LABEL_21;
  v7 = v10 + 1;
  if (v10 + 1 >= v5)
    goto LABEL_26;
  v11 = *(_QWORD *)(v13 + 8 * v7);
  if (v11)
    goto LABEL_21;
  v7 = v10 + 2;
  if (v10 + 2 >= v5)
    goto LABEL_26;
  v11 = *(_QWORD *)(v13 + 8 * v7);
  if (v11)
    goto LABEL_21;
  v7 = v10 + 3;
  if (v10 + 3 >= v5)
    goto LABEL_26;
  v11 = *(_QWORD *)(v13 + 8 * v7);
  if (v11)
  {
LABEL_21:
    v4 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v7 << 6);
    goto LABEL_22;
  }
  v12 = v10 + 4;
  if (v12 >= v5)
  {
LABEL_26:
    swift_release();
    return v17;
  }
  v11 = *(_QWORD *)(v13 + 8 * v12);
  if (v11)
  {
    v7 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    v7 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v7 >= v5)
      goto LABEL_26;
    v11 = *(_QWORD *)(v13 + 8 * v7);
    ++v12;
    if (v11)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_185786C2C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  unsigned int *v4;
  unsigned int v5;
  unsigned int v6;
  char isUniquelyReferenced_nonNull_native;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v2 = (_QWORD *)sub_1856A3324(MEMORY[0x1E0DEE9D8]);
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (uint64_t)v2;
  v4 = (unsigned int *)(a1 + 32);
  while (1)
  {
    v6 = *v4++;
    v5 = v6;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = sub_1855C43B0(v6);
    v10 = v2[2];
    v11 = (v8 & 1) == 0;
    v12 = v10 + v11;
    if (__OFADD__(v10, v11))
      break;
    v13 = v8;
    if (v2[3] >= v12)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_185683F84();
    }
    else
    {
      sub_1856CFF80(v12, isUniquelyReferenced_nonNull_native);
      v14 = sub_1855C43B0(v5);
      if ((v13 & 1) != (v15 & 1))
        goto LABEL_18;
      v9 = v14;
    }
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      v2[(v9 >> 6) + 8] |= 1 << v9;
      *(_DWORD *)(v2[6] + 4 * v9) = v5;
      *(_QWORD *)(v2[7] + 8 * v9) = 0;
      v16 = v2[2];
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
        goto LABEL_17;
      v2[2] = v18;
    }
    v19 = v2[7];
    v20 = *(_QWORD *)(v19 + 8 * v9);
    v17 = __OFADD__(v20, 1);
    v21 = v20 + 1;
    if (v17)
      goto LABEL_16;
    *(_QWORD *)(v19 + 8 * v9) = v21;
    if (!--v3)
      return (uint64_t)v2;
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  result = sub_186508074();
  __break(1u);
  return result;
}

uint64_t sub_185786D94(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int v13;
  uint64_t v14;

  v1 = result;
  v2 = 0;
  v14 = MEMORY[0x1E0DEE9E8];
  v3 = result + 64;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v10 >= v7)
      goto LABEL_19;
    v11 = *(_QWORD *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      v2 = v10 + 1;
      if (v10 + 1 >= v7)
        goto LABEL_19;
      v11 = *(_QWORD *)(v3 + 8 * v2);
      if (!v11)
        break;
    }
LABEL_18:
    v6 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    result = sub_185687B3C(&v13, *(unsigned int *)(*(_QWORD *)(v1 + 48) + 4 * v9));
  }
  v12 = v10 + 2;
  if (v12 >= v7)
  {
LABEL_19:
    swift_release();
    return v14;
  }
  v11 = *(_QWORD *)(v3 + 8 * v12);
  if (v11)
  {
    v2 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    v2 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v2 >= v7)
      goto LABEL_19;
    v11 = *(_QWORD *)(v3 + 8 * v2);
    ++v12;
    if (v11)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_185786ECC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  float *i;
  float v5;
  char isUniquelyReferenced_nonNull_native;
  char v7;
  unint64_t v8;
  uint64_t v9;
  _BOOL8 v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  v2 = (_QWORD *)sub_1856A3250(MEMORY[0x1E0DEE9D8]);
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (uint64_t)v2;
  for (i = (float *)(a1 + 32); ; ++i)
  {
    v5 = *i;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = sub_1855C4378(v5);
    v9 = v2[2];
    v10 = (v7 & 1) == 0;
    v11 = v9 + v10;
    if (__OFADD__(v9, v10))
      break;
    v12 = v7;
    if (v2[3] >= v11)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_185683DF4();
    }
    else
    {
      sub_1856CFCDC(v11, isUniquelyReferenced_nonNull_native);
      v13 = sub_1855C4378(v5);
      if ((v12 & 1) != (v14 & 1))
        goto LABEL_18;
      v8 = v13;
    }
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      v2[(v8 >> 6) + 8] |= 1 << v8;
      *(float *)(v2[6] + 4 * v8) = v5;
      *(_QWORD *)(v2[7] + 8 * v8) = 0;
      v15 = v2[2];
      v16 = __OFADD__(v15, 1);
      v17 = v15 + 1;
      if (v16)
        goto LABEL_17;
      v2[2] = v17;
    }
    v18 = v2[7];
    v19 = *(_QWORD *)(v18 + 8 * v8);
    v16 = __OFADD__(v19, 1);
    v20 = v19 + 1;
    if (v16)
      goto LABEL_16;
    *(_QWORD *)(v18 + 8 * v8) = v20;
    if (!--v3)
      return (uint64_t)v2;
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  result = sub_186508074();
  __break(1u);
  return result;
}

uint64_t sub_185787040()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_185787064()
{
  uint64_t v0;

  return sub_18577DDAC(v0);
}

uint64_t sub_18578706C()
{
  return sub_18577DFBC();
}

uint64_t sub_185787074()
{
  swift_release();
  return swift_deallocObject();
}

void sub_185787098()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 325) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_1857870A8()
{
  return swift_deallocObject();
}

uint64_t sub_1857870B8()
{
  uint64_t v0;

  return sub_18577E69C(v0);
}

uint64_t sub_1857870C0()
{
  uint64_t v0;

  return sub_1857826BC(v0);
}

uint64_t sub_1857870D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](a1);
  v8 = sub_1857843CC();
  v16 = v8;
  if (!MEMORY[0x186DC4720](a1, a2))
    return v8;
  for (i = 0; ; ++i)
  {
    v10 = sub_1865076CC();
    sub_186507684();
    if ((v10 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * i, a2);
      v12 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_10;
      goto LABEL_5;
    }
    result = sub_186507C84();
    if (v7 != 8)
      break;
    v15 = result;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(&v15 - 2, &v15, a2);
    swift_unknownObjectRelease();
    v12 = i + 1;
    if (__OFADD__(i, 1))
    {
LABEL_10:
      __break(1u);
      return v16;
    }
LABEL_5:
    v13 = type metadata accessor for CountedSet(0, a2, a3, v11);
    sub_1857821B0((uint64_t)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
    (*(void (**)(char *, uint64_t))(v6 + 8))((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
    if (v12 == MEMORY[0x186DC4720](a1, a2))
      return v16;
  }
  __break(1u);
  return result;
}

uint64_t sub_185787270(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  uint64_t v8;
  NSObject *v16;
  uint64_t v17;
  void *v18;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char v25;
  uint64_t aBlock;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  void *v30;
  uint64_t (*v31)();
  uint64_t v32;

  signpost_c2_tick_enter_start();
  v16 = *(NSObject **)(v8 + 248);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1857874CC;
  *(_QWORD *)(v17 + 24) = v8;
  v31 = sub_1855A6A1C;
  v32 = v17;
  aBlock = MEMORY[0x1E0C809B0];
  v28 = 1107296256;
  v29 = sub_1855D8DF4;
  v30 = &block_descriptor_19_0;
  v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v16, v18);
  _Block_release(v18);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  v21 = *(NSObject **)(v8 + 256);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v8;
  *(_BYTE *)(v22 + 24) = a2 & 1;
  *(_QWORD *)(v22 + 32) = a3;
  *(_QWORD *)(v22 + 40) = a4;
  *(double *)(v22 + 48) = a7;
  *(_BYTE *)(v22 + 56) = a1 & 1;
  *(double *)(v22 + 64) = a8;
  *(_QWORD *)(v22 + 72) = a5;
  *(_QWORD *)(v22 + 80) = a6;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_185787508;
  *(_QWORD *)(v23 + 24) = v22;
  v31 = sub_1855A6A1C;
  v32 = v23;
  aBlock = MEMORY[0x1E0C809B0];
  v28 = 1107296256;
  v29 = sub_1855D8DF4;
  v30 = &block_descriptor_29_4;
  v24 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v21, v24);
  _Block_release(v24);
  v25 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v25 & 1) != 0)
LABEL_5:
    __break(1u);
  return result;
}

void sub_1857874CC()
{
  uint64_t v0;

  sub_18577F73C(v0);
}

uint64_t sub_1857874D4()
{
  return swift_deallocObject();
}

uint64_t sub_1857874E4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_185787508()
{
  uint64_t v0;

  sub_18578149C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 56), *(void (**)(uint64_t))(v0 + 72), *(double *)(v0 + 48), *(double *)(v0 + 64));
}

uint64_t sub_185787528()
{
  return swift_deallocObject();
}

uint64_t sub_185787538()
{
  uint64_t v0;

  return sub_18577F878(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_185787544()
{
  return swift_deallocObject();
}

uint64_t sub_185787554()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_185787580()
{
  uint64_t v0;

  sub_1857801D0(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_18578758C()
{
  return swift_deallocObject();
}

uint64_t sub_18578759C(unint64_t *a1, unint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  int isUniquelyReferenced_nonNull_bridgeObject;
  unint64_t v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;

  v4 = *a1;
  if (*a1 >> 62)
    goto LABEL_88;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v5)
  {
LABEL_3:
    v6 = 0;
    v7 = a2 & 0xC000000000000001;
    v34 = a2 + 32;
    v33 = a2 >> 62;
    while (1)
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        v8 = MEMORY[0x186DC4CB4](v6, v4);
        if (!v33)
          goto LABEL_6;
      }
      else
      {
        v8 = *(_QWORD *)(v4 + 32 + 8 * v6);
        swift_retain();
        if (!v33)
        {
LABEL_6:
          v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_retain();
          swift_bridgeObjectRetain();
          if (v9)
            break;
          goto LABEL_19;
        }
      }
      swift_retain();
      swift_bridgeObjectRetain();
      v9 = sub_186507E58();
      if (v9)
        break;
LABEL_19:
      swift_bridgeObjectRelease();
      swift_release_n();
      v12 = __OFADD__(v6++, 1);
      if (v12)
        goto LABEL_87;
      if (v6 == v5)
        goto LABEL_21;
    }
    v10 = 0;
    while (v7)
    {
      v11 = MEMORY[0x186DC4CB4](v10, a2);
      v12 = __OFADD__(v10++, 1);
      if (v12)
      {
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        swift_bridgeObjectRetain();
        v5 = sub_186507E58();
        if (!v5)
          goto LABEL_21;
        goto LABEL_3;
      }
      v13 = v11;
      swift_unknownObjectRelease();
      if (v8 == v13)
        goto LABEL_24;
LABEL_11:
      if (v10 == v9)
        goto LABEL_19;
    }
    if (__OFADD__(v10, 1))
      goto LABEL_79;
    v14 = *(_QWORD *)(v34 + 8 * v10++);
    if (v8 != v14)
      goto LABEL_11;
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v4 = v6 + 1;
    if (!__OFADD__(v6, 1))
    {
      v15 = v6;
      while (1)
      {
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          v20 = sub_186507E58();
          swift_bridgeObjectRelease();
          if (v4 == v20)
            return v15;
        }
        else if (v4 == *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          return v15;
        }
        v17 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v18 = MEMORY[0x186DC4CB4](v4);
          if (v33)
            goto LABEL_40;
        }
        else
        {
          if ((v4 & 0x8000000000000000) != 0)
            goto LABEL_76;
          if (v4 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_77;
          v18 = *(_QWORD *)(v17 + 8 * v4 + 32);
          swift_retain();
          if (v33)
          {
LABEL_40:
            swift_bridgeObjectRetain();
            swift_retain();
            v19 = sub_186507E58();
            if (!v19)
              goto LABEL_52;
            goto LABEL_41;
          }
        }
        v19 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        swift_retain();
        if (v19)
        {
LABEL_41:
          v21 = 0;
          while (v7)
          {
            v22 = MEMORY[0x186DC4CB4](v21, a2);
            v12 = __OFADD__(v21++, 1);
            if (v12)
            {
              __break(1u);
LABEL_74:
              __break(1u);
              goto LABEL_75;
            }
            v23 = v22;
            swift_unknownObjectRelease();
            if (v18 == v23)
              goto LABEL_49;
LABEL_42:
            if (v21 == v19)
              goto LABEL_52;
          }
          if (__OFADD__(v21, 1))
            goto LABEL_74;
          v24 = *(_QWORD *)(v34 + 8 * v21++);
          if (v18 != v24)
            goto LABEL_42;
LABEL_49:
          swift_release_n();
          swift_bridgeObjectRelease();
          v12 = __OFADD__(v4++, 1);
          if (v12)
            goto LABEL_78;
        }
        else
        {
LABEL_52:
          swift_bridgeObjectRelease();
          swift_release_n();
          if (v15 != v4)
          {
            v25 = *a1;
            if ((*a1 & 0xC000000000000001) != 0)
            {
              v26 = MEMORY[0x186DC4CB4](v15, *a1);
              v25 = *a1;
              if ((*a1 & 0xC000000000000001) == 0)
                goto LABEL_57;
            }
            else
            {
              if ((v15 & 0x8000000000000000) != 0)
                goto LABEL_81;
              if (v15 >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_82;
              v26 = *(_QWORD *)(v25 + 8 * v15 + 32);
              swift_retain();
              if ((v25 & 0xC000000000000001) == 0)
              {
LABEL_57:
                if ((v4 & 0x8000000000000000) != 0)
                  goto LABEL_83;
                if (v4 >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_84;
                v27 = v15;
                v28 = *(_QWORD *)(v25 + 8 * v4 + 32);
                swift_retain();
                goto LABEL_60;
              }
            }
            v27 = v15;
            v28 = MEMORY[0x186DC4CB4](v4, v25);
            v25 = *a1;
LABEL_60:
            isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
            *a1 = v25;
            if (!isUniquelyReferenced_nonNull_bridgeObject
              || (v25 & 0x8000000000000000) != 0
              || (v25 & 0x4000000000000000) != 0)
            {
              sub_1857854D4(v25);
            }
            *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 8 * v27 + 0x20) = v28;
            swift_release();
            sub_18650766C();
            v30 = *a1;
            v31 = swift_isUniquelyReferenced_nonNull_bridgeObject();
            *a1 = v30;
            if (!v31 || (v30 & 0x8000000000000000) != 0 || (v30 & 0x4000000000000000) != 0)
              sub_1857854D4(v30);
            if ((v4 & 0x8000000000000000) != 0)
              goto LABEL_85;
            if (v4 >= *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_86;
            *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v26;
            swift_release();
            sub_18650766C();
            v15 = v27;
          }
          v12 = __OFADD__(v15++, 1);
          if (v12)
            goto LABEL_80;
          v12 = __OFADD__(v4++, 1);
          if (v12)
            goto LABEL_78;
        }
      }
    }
    __break(1u);
    goto LABEL_91;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  if (*a1 >> 62)
  {
LABEL_91:
    swift_bridgeObjectRetain();
    v32 = sub_186507E58();
    swift_bridgeObjectRelease();
    return v32;
  }
  return *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
}

uint64_t sub_185787ADC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_185787B08()
{
  uint64_t v0;

  sub_1857811C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40), *(float *)(v0 + 24), *(float *)(v0 + 28), *(float *)(v0 + 32));
}

uint64_t sub_185787B1C()
{
  return swift_deallocObject();
}

uint64_t sub_185787B2C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_185787B50()
{
  uint64_t v0;

  return sub_185781408(*(_QWORD *)(v0 + 16), *(float *)(v0 + 24), *(float *)(v0 + 28), *(float *)(v0 + 32));
}

void sub_185787B60()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 327) = 1;
}

uint64_t sub_185787B6C()
{
  return swift_deallocObject();
}

uint64_t sub_185787B80()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_185787B90()
{
  return 8;
}

_QWORD *sub_185787B9C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t type metadata accessor for WeakReferenceTable.WeakReference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WeakReferenceTable.WeakReference);
}

uint64_t sub_185787BB4()
{
  return swift_getAtKeyPath();
}

void sub_185787BDC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 288);
  *(_QWORD *)(v0 + 288) = 0;

}

uint64_t sub_185787BE8()
{
  return swift_deallocObject();
}

void sub_185787BF8(char *a1@<X8>)
{
  uint64_t v1;

  sub_1857826F0(v1, a1);
}

uint64_t sub_185787C10()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_185787C34(uint64_t a1)
{
  uint64_t v1;

  return sub_18577E600(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_185787C3C()
{
  signpost_c2_compose();
  return sub_1857824EC();
}

uint64_t sub_185787C54(_QWORD *a1)
{
  int v2;
  uint64_t v3;
  NSObject *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t result;
  os_unfair_lock_s *v10;
  os_unfair_lock_s *v11;
  NSObject *v12;
  _QWORD *v13;
  uint64_t v14;
  void (*v15)();
  void *v16;
  void (*v17)();
  void (*v18)();
  void *v19;
  dispatch_semaphore_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  NSObject *v24;
  id v25;
  NSObject *v26;
  _QWORD *v27;
  uint64_t v28;
  void *v29;
  NSObject *v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  char isEscapingClosureAtFileLocation;
  uint64_t aBlock;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;

  v2 = *(_DWORD *)(MEMORY[0x1E0CD23C0] + 8);
  v42 = *MEMORY[0x1E0CD23C0];
  v43 = v2;
  v3 = sub_185786C2C(MEMORY[0x1E0DEE9D8]);
  v41 = sub_185786D94(v3);
  v4 = a1[33];
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = &v42;
  v5[3] = a1;
  v5[4] = &v41;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_185788250;
  *(_QWORD *)(v6 + 24) = v5;
  v39 = sub_1855A6A1C;
  v40 = v6;
  v7 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v36 = 1107296256;
  v37 = sub_1855D8DF4;
  v38 = &block_descriptor_105_1;
  v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v8);
  _Block_release(v8);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v4 & 1) != 0)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v10 = (os_unfair_lock_s *)a1[2];
  swift_getKeyPath();
  v11 = v10 + 5;
  swift_retain();
  os_unfair_lock_lock(v10 + 5);
  LOWORD(v10) = sub_18578826C();
  os_unfair_lock_unlock(v11);
  swift_release_n();
  if (((unsigned __int16)v10 & 0x100) == 0)
  {
    v12 = a1[34];
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a1;
    v13[3] = &v42;
    v13[4] = &v41;
    v14 = swift_allocObject();
    v15 = sub_1857882E4;
    *(_QWORD *)(v14 + 16) = sub_1857882E4;
    *(_QWORD *)(v14 + 24) = v13;
    v39 = sub_1855A6A1C;
    v40 = v14;
    aBlock = v7;
    v36 = 1107296256;
    v37 = sub_1855D8DF4;
    v38 = &block_descriptor_117_1;
    v16 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v12, v16);
    _Block_release(v16);
    LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
    result = swift_release();
    if ((v12 & 1) == 0)
    {
      v17 = 0;
      v18 = 0;
LABEL_14:
      swift_release();
      swift_bridgeObjectRelease();
      sub_18518D718((uint64_t)v17);
      sub_18518D718((uint64_t)v18);
      return sub_18518D718((uint64_t)v15);
    }
    goto LABEL_16;
  }
  if (UIApp && (objc_msgSend((id)UIApp, sel__isSpringBoard) & 1) != 0)
  {
    v19 = (void *)MEMORY[0x186DCA138](a1 + 5);

    if (!v19)
    {
      v20 = dispatch_semaphore_create(0);
      v21 = swift_allocObject();
      *(_QWORD *)(v21 + 16) = a1;
      *(_QWORD *)(v21 + 24) = v20;
      v22 = objc_allocWithZone(MEMORY[0x1E0CB3978]);
      v39 = sub_185788370;
      v40 = v21;
      aBlock = v7;
      v36 = 1107296256;
      v37 = sub_18530A69C;
      v38 = &block_descriptor_143;
      v23 = _Block_copy(&aBlock);
      swift_retain();
      v24 = v20;
      v25 = objc_msgSend(v22, sel_initWithBlock_, v23);
      _Block_release(v23);
      swift_release();
      swift_unknownObjectWeakAssign();
      sub_1857836E4(v25);
      sub_1865079E4();

    }
    v26 = a1[34];
    v27 = (_QWORD *)swift_allocObject();
    v27[2] = a1;
    v27[3] = &v42;
    v27[4] = &v41;
    v28 = swift_allocObject();
    v17 = sub_18578834C;
    *(_QWORD *)(v28 + 16) = sub_18578834C;
    *(_QWORD *)(v28 + 24) = v27;
    v39 = sub_1855A6A1C;
    v40 = v28;
    aBlock = v7;
    v36 = 1107296256;
    v37 = sub_1855D8DF4;
    v38 = &block_descriptor_137_1;
    v29 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v26, v29);
    _Block_release(v29);
    LOBYTE(v26) = swift_isEscapingClosureAtFileLocation();
    result = swift_release();
    if ((v26 & 1) != 0)
      goto LABEL_18;
    v18 = 0;
LABEL_13:
    v15 = 0;
    goto LABEL_14;
  }
  v30 = a1[34];
  v31 = (_QWORD *)swift_allocObject();
  v31[2] = a1;
  v31[3] = sub_1857836E4;
  v31[4] = 0;
  v31[5] = &v42;
  v31[6] = &v41;
  v32 = swift_allocObject();
  v18 = sub_18578832C;
  *(_QWORD *)(v32 + 16) = sub_18578832C;
  *(_QWORD *)(v32 + 24) = v31;
  v39 = sub_1855A6A1C;
  v40 = v32;
  aBlock = v7;
  v36 = 1107296256;
  v37 = sub_1855D8DF4;
  v38 = &block_descriptor_127_0;
  v33 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v30, v33);
  _Block_release(v33);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    v17 = 0;
    goto LABEL_13;
  }
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_185788250()
{
  uint64_t v0;

  return sub_18578364C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD **)(v0 + 32));
}

uint64_t sub_18578825C()
{
  return swift_deallocObject();
}

uint64_t sub_18578826C()
{
  int v0;
  unsigned __int8 v2;
  char v3;

  swift_getAtKeyPath();
  if (v3)
    v0 = 256;
  else
    v0 = 0;
  return v0 | v2;
}

uint64_t sub_1857882C0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1857882E4()
{
  uint64_t v0;

  sub_185783D18(*(_QWORD *)(v0 + 16), *(float **)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_1857882F0()
{
  return swift_deallocObject();
}

uint64_t sub_185788300()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_18578832C()
{
  uint64_t v0;

  sub_185783A6C(*(_QWORD *)(v0 + 16), *(__n128 (**)(id))(v0 + 24), *(_QWORD *)(v0 + 32), *(unsigned __int32 **)(v0 + 40), *(uint64_t **)(v0 + 48));
}

uint64_t sub_18578833C()
{
  return swift_deallocObject();
}

void sub_18578834C()
{
  uint64_t v0;

  sub_18578385C(*(_QWORD *)(v0 + 16), *(float **)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_185788358()
{
  return swift_deallocObject();
}

uint64_t sub_185788368()
{
  return objectdestroy_139Tm();
}

void sub_185788370()
{
  uint64_t v0;

  sub_1857837A4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_185788378()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1857883A4()
{
  uint64_t v0;
  uint64_t v1;
  id result;

  v1 = *(_QWORD *)(v0 + 24);
  if (v1)
    return objc_msgSend(*(id *)(v0 + 16), sel_addToRunLoop_forMode_, v1, *MEMORY[0x1E0C99860]);
  __break(1u);
  return result;
}

uint64_t sub_1857883CC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1857883F0()
{
  uint64_t v0;

  sub_185783C70(*(void **)(v0 + 16));
}

uint64_t sub_1857883F8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18578841C()
{
  return objectdestroy_139Tm();
}

uint64_t objectdestroy_139Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_18578845C()
{
  uint64_t v0;

  sub_185783340(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_BYTE **)(v0 + 32));
}

uint64_t sub_185788468()
{
  return swift_deallocObject();
}

uint64_t sub_185788478()
{
  uint64_t v0;

  return sub_185783574(v0);
}

void sub_185788480()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 324) = 0;
}

uint64_t sub_185788488()
{
  return swift_deallocObject();
}

uint64_t sub_185788498()
{
  uint64_t v0;

  return sub_18577F5F8(v0);
}

uint64_t sub_1857884A0()
{
  return swift_deallocObject();
}

uint64_t sub_1857884B0()
{
  return swift_deallocObject();
}

uint64_t sub_1857884C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1857884E4()
{
  uint64_t *v0;

  return sub_185782B94(v0[2], v0[3], v0[4]);
}

uint64_t sub_1857884F0()
{
  return swift_deallocObject();
}

uint64_t sub_185788500()
{
  return swift_deallocObject();
}

uint64_t sub_185788510()
{
  uint64_t v0;

  return sub_185782E04(*(_QWORD *)(v0 + 16));
}

uint64_t sub_185788518()
{
  return swift_deallocObject();
}

uint64_t sub_185788528()
{
  uint64_t v0;

  return sub_185783010(*(_QWORD *)(v0 + 16));
}

uint64_t sub_185788530@<X0>(uint64_t *a1@<X8>)
{
  return sub_185783100(a1);
}

uint64_t _s5UIKit25InProcessAnimationManagerC5CleanVwst_0(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_185788594 + 4 * byte_186676455[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1857885C8 + 4 * byte_186676450[v4]))();
}

uint64_t sub_1857885C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1857885D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1857885D8);
  return result;
}

uint64_t sub_1857885E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1857885ECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1857885F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1857885F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InProcessAnimationManager.Configuration()
{
  return &type metadata for InProcessAnimationManager.Configuration;
}

void sub_185788614()
{
  uint64_t v0;

  v0 = sub_186507708();
  MEMORY[0x186DC9F28](MEMORY[0x1E0DEAF50], v0);
  sub_186507D80();
  JUMPOUT(0x186DC9F28);
}

void sub_185788668()
{
  sub_1865073FC();
  JUMPOUT(0x186DC9F28);
}

uint64_t storeEnumTagSinglePayload for InProcessAnimationManager.ExecutionMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1857886E4 + 4 * byte_18667645F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_185788718 + 4 * byte_18667645A[v4]))();
}

uint64_t sub_185788718(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_185788720(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x185788728);
  return result;
}

uint64_t sub_185788734(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18578873CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_185788740(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_185788748(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InProcessAnimationManager.ExecutionMode()
{
  return &type metadata for InProcessAnimationManager.ExecutionMode;
}

unint64_t sub_185788768()
{
  unint64_t result;

  result = qword_1EDD8AFA0;
  if (!qword_1EDD8AFA0)
  {
    result = MEMORY[0x186DC9F28](&unk_186676A4C, &type metadata for InProcessAnimationManager.ExecutionMode);
    atomic_store(result, (unint64_t *)&qword_1EDD8AFA0);
  }
  return result;
}

id UIHoverStyle.shape.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = v1 + OBJC_IVAR___UIHoverStyle__shape;
  v3 = *(void **)(v1 + OBJC_IVAR___UIHoverStyle__shape);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 8);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 16);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 24);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 32);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 40);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 48);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  v10 = *(_BYTE *)(v2 + 56);
  *(_BYTE *)(a1 + 56) = v10;
  return sub_1852287BC(v3, v4, v5, v6, v7, v8, v9, v10);
}

void UIHoverStyle.shape.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  char v13;
  _QWORD v14[7];
  char v15;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_BYTE *)(a1 + 56);
  v4 = v1 + OBJC_IVAR___UIHoverStyle__shape;
  v5 = *(void **)(v1 + OBJC_IVAR___UIHoverStyle__shape);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 8);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 16);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 24);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 32);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 40);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 48);
  v12 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v12;
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(v4 + 48) = v2;
  v13 = *(_BYTE *)(v4 + 56);
  *(_BYTE *)(v4 + 56) = v3;
  sub_1852287BC(v5, v6, v7, v8, v9, v10, v11, v13);
  sub_185223490(v5, v6, v7, v8, v9, v10, v11, v13);
  v14[0] = v5;
  v14[1] = v6;
  v14[2] = v7;
  v14[3] = v8;
  v14[4] = v9;
  v14[5] = v10;
  v14[6] = v11;
  v15 = v13;
  sub_185788ACC((uint64_t)v14);
  sub_185223490(v5, v6, v7, v8, v9, v10, v11, v13);
}

uint64_t UIHoverStyle.effect.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR___UIHoverStyle__effect;
  swift_beginAccess();
  return sub_1851E75D8(v3, a1);
}

uint64_t UIHoverStyle.effect.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  sub_18578AA24(v5, v1, v3, v4);
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

id UIView.hoverStyle.getter()
{
  void *v0;

  return -[UIView _hoverStyleStorage](v0);
}

uint64_t sub_185788A80(uint64_t *a1, uint64_t a2)
{
  uint64_t v4[5];

  sub_1851E75D8(a2, (uint64_t)v4);
  __swift_assign_boxed_opaque_existential_1(a1, v4);
  sub_1856DC5B0();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v4);
}

void sub_185788ACC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char v19;
  void *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  __int128 v54[4];

  v3 = *(void **)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(unsigned __int8 *)(a1 + 56);
  v10 = v1 + OBJC_IVAR___UIHoverStyle__shape;
  v12 = *(void **)(v1 + OBJC_IVAR___UIHoverStyle__shape);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 8);
  v14 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 16);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 24);
  v16 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 32);
  v15 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 40);
  v17 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 48);
  v18 = *(unsigned __int8 *)(v10 + 56);
  if (v18 != 255)
  {
    v24 = *(void **)a1;
    v25 = *(_QWORD *)(a1 + 8);
    v26 = *(_QWORD *)(a1 + 16);
    v27 = *(_QWORD *)(a1 + 24);
    v28 = *(_QWORD *)(a1 + 32);
    v29 = *(_QWORD *)(a1 + 40);
    v23 = *(_QWORD *)(a1 + 48);
    *(_QWORD *)&v47 = v12;
    *((_QWORD *)&v47 + 1) = v11;
    v48 = v14;
    v49 = v13;
    v50 = v16;
    v51 = v15;
    v52 = v17;
    v53 = v18;
    if (v9 != 255)
    {
      sub_1855B7E0C(&v47, v54);
      v31 = v24;
      v32 = v25;
      v33 = v26;
      v34 = v27;
      v35 = v28;
      v36 = v29;
      v37 = v23;
      v38 = v9;
      sub_1852287BC(v12, v11, v14, v13, v16, v15, v17, v18);
      sub_1852287BC(v12, v11, v14, v13, v16, v15, v17, v18);
      sub_1852287BC(v24, v25, v26, v27, v28, v29, v23, v9);
      sub_1855B75AC(v54);
      v22 = v19;
      sub_185223490(v24, v25, v26, v27, v28, v29, v23, v9);
      sub_1855BCD90((uint64_t)v54, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168);
      sub_185223490(v12, v11, v14, v13, v16, v15, v17, v18);
      if ((v22 & 1) != 0)
        return;
LABEL_9:
      v20 = *(void **)(v30 + OBJC_IVAR___UIHoverStyle__cachedBridgedShape);
      *(_QWORD *)(v30 + OBJC_IVAR___UIHoverStyle__cachedBridgedShape) = 0;

      sub_1850F26F8(v10, (uint64_t)&v47, (uint64_t *)&unk_1EDD813B0);
      v21 = swift_allocObject();
      sub_1850F26F8((uint64_t)&v47, v21 + 16, (uint64_t *)&unk_1EDD813B0);
      sub_1855BCD90((uint64_t)&v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1852287BC);
      sub_1855BCD90((uint64_t)&v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1852287BC);
      sub_185227960(0, (uint64_t)sub_18578AFC0, v21);
      swift_release();
      sub_1855BCD90((uint64_t)&v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185223490);
      return;
    }
    sub_185228314(v12, v11, v14, v13, v16, v15, v17, v18);
    sub_185228314(v12, v11, v14, v13, v16, v15, v17, v18);
    sub_185228168(v12, v11, v14, v13, v16, v15, v17, v18);
    v8 = v23;
    v3 = v24;
    v6 = v28;
    v7 = v29;
    v4 = v26;
    v5 = v27;
    v2 = v25;
LABEL_8:
    v31 = v12;
    v32 = v11;
    v33 = v14;
    v34 = v13;
    v35 = v16;
    v36 = v15;
    v37 = v17;
    v38 = v18;
    v39 = v3;
    v40 = v2;
    v41 = v4;
    v42 = v5;
    v43 = v6;
    v44 = v7;
    v45 = v8;
    v46 = v9;
    sub_1852287BC(v3, v2, v4, v5, v6, v7, v8, v9);
    sub_1855BCD00((uint64_t)&v31);
    goto LABEL_9;
  }
  if (v9 != 255)
    goto LABEL_8;
}

void sub_185788E34(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = a1 + 40;
  v4 = *(void **)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  v9 = *(_QWORD *)(a1 + 80);
  v10 = *(_QWORD *)(a1 + 88);
  v11 = *(_BYTE *)(a1 + 96);
  sub_1855BCD90(a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1852287BC);
  sub_185223490(v4, v5, v6, v7, v8, v9, v10, v11);
  sub_1850F26F8(a2, v3, (uint64_t *)&unk_1EDD813B0);
  sub_1856DC7D4();
}

uint64_t sub_185788EE4(uint64_t a1, char a2)
{
  uint64_t v3;
  void *v4;
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[5];
  char v9;

  *(_BYTE *)(a1 + 128) = a2;
  v3 = *(_QWORD *)(a1 + 136);
  *(_BYTE *)(v3 + OBJC_IVAR____TtC5UIKit25UIPointerHoverStyleDriver_isEnabled) = a2;
  v4 = *(void **)(v3 + OBJC_IVAR____TtC5UIKit25UIPointerHoverStyleDriver_pointerInteraction);
  if (v4)
    objc_msgSend(v4, sel_setEnabled_, a2 & 1);
  KeyPath = swift_getKeyPath();
  v9 = *(_BYTE *)(a1 + 128);
  v8[2] = MEMORY[0x1E0C80A78](KeyPath);
  v8[3] = &v9;
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 144) + 16))
    return swift_release();
  v6 = sub_18578A800(*(_QWORD *)(a1 + 144), (void (*)(__int128 *))sub_18578AC18, (uint64_t)v8);
  swift_release();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = v6;
  return result;
}

uint64_t sub_18578900C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  v1 = OBJC_IVAR___UIHoverStyle__cachedBridgedEffect;
  if (*(_QWORD *)(v0 + OBJC_IVAR___UIHoverStyle__cachedBridgedEffect))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR___UIHoverStyle__cachedBridgedEffect);
  }
  else
  {
    v3 = v0;
    v4 = v0 + OBJC_IVAR___UIHoverStyle__effect;
    swift_beginAccess();
    sub_1851E75D8(v4, (uint64_t)v8);
    v5 = v9;
    v6 = v10;
    __swift_project_boxed_opaque_existential_0Tm(v8, v9);
    v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v8);
    *(_QWORD *)(v3 + v1) = v2;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  return v2;
}

uint64_t sub_185789124(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13[5];

  v2 = v1;
  *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__cachedBridgedEffect) = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  swift_getObjectType();
  v4 = swift_conformsToProtocol2();
  if (v4)
    v5 = v4;
  else
    v5 = 0;
  if (v4)
    v6 = a1;
  else
    v6 = 0;
  if (v6)
  {
    ObjectType = swift_getObjectType();
    v8 = *(void (**)(uint64_t, uint64_t))(v5 + 24);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v13[3] = AssociatedTypeWitness;
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v13[4] = AssociatedConformanceWitness;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v13);
    swift_unknownObjectRetain();
    v8(ObjectType, v5);
    sub_18578AA24((uint64_t)boxed_opaque_existential_0, v2, AssociatedTypeWitness, AssociatedConformanceWitness);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
    return swift_unknownObjectRelease_n();
  }
  else
  {
    sub_18578A554(v2);
    return swift_unknownObjectRelease();
  }
}

char *sub_1857892B4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  char *v22;
  char *v23;
  char v25;
  id v26;
  void *v27;
  uint64_t v28;

  v1 = OBJC_IVAR___UIHoverStyle__cachedBridgedShape;
  v2 = *(char **)(v0 + OBJC_IVAR___UIHoverStyle__cachedBridgedShape);
  v3 = v2;
  if (!v2)
  {
    v4 = v0 + OBJC_IVAR___UIHoverStyle__shape;
    if (*(unsigned __int8 *)(v0 + OBJC_IVAR___UIHoverStyle__shape + 56) == 255)
    {
      v21 = 0;
      v3 = 0;
    }
    else
    {
      v6 = *(_QWORD *)(v4 + 40);
      v5 = *(_QWORD *)(v4 + 48);
      v8 = *(_QWORD *)(v4 + 24);
      v7 = *(_QWORD *)(v4 + 32);
      v9 = *(_QWORD *)(v4 + 8);
      v10 = *(_QWORD *)(v4 + 16);
      v11 = *(void **)v4;
      v27 = *(void **)v4;
      v28 = v9;
      v25 = *(_BYTE *)(v0 + OBJC_IVAR___UIHoverStyle__shape + 56);
      v26 = objc_allocWithZone((Class)UIShape);
      sub_185228314(v11, v9, v10, v8, v7, v6, v5, v25);
      v3 = (char *)objc_msgSend(v26, sel_init);
      v12 = &v3[OBJC_IVAR___UIShape_value];
      v13 = *(void **)&v3[OBJC_IVAR___UIShape_value];
      v14 = *(_QWORD *)&v3[OBJC_IVAR___UIShape_value + 8];
      v15 = *(_QWORD *)&v3[OBJC_IVAR___UIShape_value + 16];
      v16 = *(_QWORD *)&v3[OBJC_IVAR___UIShape_value + 24];
      v17 = *(_QWORD *)&v3[OBJC_IVAR___UIShape_value + 32];
      v18 = *(_QWORD *)&v3[OBJC_IVAR___UIShape_value + 40];
      v19 = *(_QWORD *)&v3[OBJC_IVAR___UIShape_value + 48];
      *(_QWORD *)v12 = v27;
      *((_QWORD *)v12 + 1) = v28;
      *((_QWORD *)v12 + 2) = v10;
      *((_QWORD *)v12 + 3) = v8;
      *((_QWORD *)v12 + 4) = v7;
      *((_QWORD *)v12 + 5) = v6;
      *((_QWORD *)v12 + 6) = v5;
      v20 = v12[56];
      v12[56] = v25;
      sub_185228168(v13, v14, v15, v16, v17, v18, v19, v20);
      v21 = *(void **)(v0 + v1);
    }
    *(_QWORD *)(v0 + v1) = v3;
    v22 = v3;

  }
  v23 = v2;
  return v3;
}

uint64_t UIHoverStyle.isEqual(_:)(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  int v8;
  int v9;
  int v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  int v17;
  int v18;
  int v19;
  char v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char v46;
  unsigned int v47;
  unsigned int v48;
  char v50;
  void *v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int v63;
  unsigned int v64;
  void *v65;
  id v66;
  id v67;
  id v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  __int128 v92[4];

  sub_18519F0C4(a1, (uint64_t)&v76, &qword_1ECD75B20);
  if (v79)
  {
    type metadata accessor for UIHoverStyle();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v2 = *(char **)&v92[0];
      v67 = v1;
      v3 = *(_QWORD *)&v92[0] + OBJC_IVAR___UIHoverStyle__effect;
      swift_beginAccess();
      sub_1851E75D8(v3, (uint64_t)&v76);
      v4 = v79;
      v5 = v80;
      __swift_project_boxed_opaque_existential_0Tm(&v76, v79);
      v6 = swift_unknownObjectWeakInit();
      BYTE8(v92[0]) = 1;
      sub_1856E34FC(v6, (uint64_t)&v69);
      (*(void (**)(__int128 *__return_ptr, __int128 *, uint64_t, uint64_t))(v5 + 8))(v92, &v69, v4, v5);
      sub_18563E558((uint64_t)&v69);
      v7 = *(void **)&v92[0];
      v8 = BYTE10(v92[0]);
      v9 = WORD4(v92[0]);
      v10 = WORD4(v92[0]) | (BYTE10(v92[0]) << 16);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v76);
      v11 = v1;
      v12 = (uint64_t)&v1[OBJC_IVAR___UIHoverStyle__effect];
      swift_beginAccess();
      sub_1851E75D8(v12, (uint64_t)&v76);
      v13 = v79;
      v14 = v80;
      __swift_project_boxed_opaque_existential_0Tm(&v76, v79);
      v15 = swift_unknownObjectWeakInit();
      BYTE8(v92[0]) = 1;
      sub_1856E34FC(v15, (uint64_t)&v69);
      (*(void (**)(__int128 *__return_ptr, __int128 *, uint64_t, uint64_t))(v14 + 8))(v92, &v69, v13, v14);
      sub_18563E558((uint64_t)&v69);
      v16 = *(void **)&v92[0];
      v17 = BYTE10(v92[0]);
      v18 = WORD4(v92[0]);
      v19 = WORD4(v92[0]) | (BYTE10(v92[0]) << 16);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v76);
      v76 = v16;
      BYTE2(v77) = v17;
      LOWORD(v77) = v18;
      *(_QWORD *)&v92[0] = v7;
      BYTE10(v92[0]) = v8;
      WORD4(v92[0]) = v9;
      sub_1856E3184((uint64_t)&v76);
      if ((v20 & 1) != 0)
      {
        v63 = v19;
        v64 = v10;
        v65 = v7;
        v22 = *(void **)&v11[OBJC_IVAR___UIHoverStyle__shape];
        v21 = *(_QWORD *)&v11[OBJC_IVAR___UIHoverStyle__shape + 8];
        v24 = *(_QWORD *)&v11[OBJC_IVAR___UIHoverStyle__shape + 16];
        v23 = *(_QWORD *)&v11[OBJC_IVAR___UIHoverStyle__shape + 24];
        v25 = v2;
        v27 = *(_QWORD *)&v11[OBJC_IVAR___UIHoverStyle__shape + 32];
        v26 = *(_QWORD *)&v11[OBJC_IVAR___UIHoverStyle__shape + 40];
        v28 = *(_QWORD *)&v11[OBJC_IVAR___UIHoverStyle__shape + 48];
        v29 = v11[OBJC_IVAR___UIHoverStyle__shape + 56];
        v66 = v25;
        v30 = *(void **)&v25[OBJC_IVAR___UIHoverStyle__shape];
        v31 = *(_QWORD *)&v25[OBJC_IVAR___UIHoverStyle__shape + 8];
        v32 = *(_QWORD *)&v25[OBJC_IVAR___UIHoverStyle__shape + 16];
        v33 = *(_QWORD *)&v25[OBJC_IVAR___UIHoverStyle__shape + 24];
        v34 = *(_QWORD *)&v25[OBJC_IVAR___UIHoverStyle__shape + 32];
        v35 = *(_QWORD *)&v25[OBJC_IVAR___UIHoverStyle__shape + 40];
        v36 = *(_QWORD *)&v25[OBJC_IVAR___UIHoverStyle__shape + 48];
        v37 = v25[OBJC_IVAR___UIHoverStyle__shape + 56];
        if (v29 == 255)
        {
          if (v37 == 255)
            goto LABEL_11;
        }
        else
        {
          *(_QWORD *)&v69 = v22;
          *((_QWORD *)&v69 + 1) = v21;
          v70 = v24;
          v71 = v23;
          v72 = v27;
          v73 = v26;
          v74 = v28;
          v75 = v29;
          v61 = v35;
          v62 = v36;
          v59 = v33;
          v60 = v34;
          v57 = v31;
          v58 = v32;
          if (v37 != 255)
          {
            v52 = v29;
            v38 = v30;
            v54 = v27;
            v55 = v26;
            v39 = v31;
            v56 = v28;
            v40 = v36;
            v51 = v22;
            v41 = v35;
            v42 = v34;
            v50 = v37;
            v43 = v33;
            v53 = v23;
            v44 = v32;
            sub_1855B7E0C(&v69, v92);
            v76 = v38;
            v77 = v39;
            v78 = v44;
            v79 = v43;
            v80 = v42;
            v81 = v41;
            v82 = v40;
            v83 = v50;
            sub_1852287BC(v51, v21, v24, v53, v54, v55, v56, v52);
            sub_1852287BC(v51, v21, v24, v53, v54, v55, v56, v52);
            v45 = v38;
            sub_1852287BC(v38, v57, v58, v59, v60, v61, v62, v50);
            sub_1855B75AC(v92);
            LOBYTE(v38) = v46;
            sub_185223490(v45, v57, v58, v59, v60, v61, v62, v50);
            sub_1855BCD90((uint64_t)v92, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168);
            sub_185223490(v51, v21, v24, v53, v54, v55, v56, v52);
            if ((v38 & 1) == 0)
              goto LABEL_14;
LABEL_11:
            v47 = objc_msgSend(v67, sel_isEnabled);
            v48 = objc_msgSend(v66, sel_isEnabled);
            sub_1856E2B9C(v16, v63);
            sub_1856E2B9C(v65, v64);

            return v47 ^ v48 ^ 1;
          }
          v68 = v30;
          sub_185228314(v22, v21, v24, v23, v27, v26, v28, v29);
          sub_185228314(v22, v21, v24, v23, v27, v26, v28, v29);
          sub_185228168(v22, v21, v24, v23, v27, v26, v28, v29);
          v30 = v68;
          v31 = v57;
          v32 = v58;
          v33 = v59;
          v34 = v60;
          v35 = v61;
          v36 = v62;
        }
        v76 = v22;
        v77 = v21;
        v78 = v24;
        v79 = v23;
        v80 = v27;
        v81 = v26;
        v82 = v28;
        v83 = v29;
        v84 = v30;
        v85 = v31;
        v86 = v32;
        v87 = v33;
        v88 = v34;
        v89 = v35;
        v90 = v36;
        v91 = v37;
        sub_1852287BC(v30, v31, v32, v33, v34, v35, v36, v37);
        sub_1855BCD00((uint64_t)&v76);
LABEL_14:
        sub_1856E2B9C(v16, v63);
        sub_1856E2B9C(v65, v64);

        return 0;
      }
      sub_1856E2B9C(v16, v18 | (v17 << 16));
      sub_1856E2B9C(v7, v9 | (v8 << 16));

    }
  }
  else
  {
    sub_18519F088((uint64_t)&v76, &qword_1ECD75B20);
  }
  return 0;
}

uint64_t UIHoverStyle.description.getter()
{
  _BYTE *v0;
  _BYTE *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  objc_super v20;
  uint64_t v21;
  unint64_t v22;

  v1 = v0;
  v12 = 0;
  v13 = 0xE000000000000000;
  sub_186507C30();
  v21 = 0;
  v22 = 0xE000000000000000;
  v20.receiver = v0;
  v20.super_class = (Class)UIHoverStyle;
  v2 = objc_msgSendSuper2(&v20, sel_description);
  sub_1865074F8();

  sub_186507564();
  swift_bridgeObjectRelease();
  sub_186507564();
  v3 = (uint64_t)&v1[OBJC_IVAR___UIHoverStyle__effect];
  swift_beginAccess();
  sub_1851E75D8(v3, (uint64_t)&v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD8AFC0);
  sub_186507D74();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v12);
  sub_186507564();
  v4 = *(_QWORD *)&v1[OBJC_IVAR___UIHoverStyle__shape + 8];
  v5 = *(_QWORD *)&v1[OBJC_IVAR___UIHoverStyle__shape + 16];
  v6 = *(_QWORD *)&v1[OBJC_IVAR___UIHoverStyle__shape + 24];
  v7 = *(_QWORD *)&v1[OBJC_IVAR___UIHoverStyle__shape + 32];
  v8 = *(_QWORD *)&v1[OBJC_IVAR___UIHoverStyle__shape + 40];
  v9 = *(_QWORD *)&v1[OBJC_IVAR___UIHoverStyle__shape + 48];
  v10 = v1[OBJC_IVAR___UIHoverStyle__shape + 56];
  v12 = *(id *)&v1[OBJC_IVAR___UIHoverStyle__shape];
  v13 = v4;
  v14 = v5;
  v15 = v6;
  v16 = v7;
  v17 = v8;
  v18 = v9;
  v19 = v10;
  sub_1852287BC(v12, v4, v5, v6, v7, v8, v9, v10);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD813B0);
  sub_18650751C();
  sub_186507564();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_185789DE0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];
  uint64_t v9;
  uint64_t v10;

  sub_1851E75D8(a1, (uint64_t)v8);
  v3 = *a2;
  v4 = v9;
  v5 = v10;
  v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
  sub_18578AA24(v6, v3, v4, v5);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v8);
}

void (*UIHoverStyle.effect.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[13] = v1;
  v4 = v1 + OBJC_IVAR___UIHoverStyle__effect;
  swift_beginAccess();
  sub_1851E75D8(v4, (uint64_t)v3);
  return sub_185789EB0;
}

void sub_185789EB0(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  v2 = (_QWORD *)*a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2[13];
    sub_1851E75D8(*a1, (uint64_t)(v2 + 5));
    v4 = v2[8];
    v5 = v2[9];
    v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v2 + 5), v4);
    sub_18578AA24(v6, v3, v4, v5);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)(v2 + 5));
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v2);
  }
  else
  {
    v7 = v2[13];
    v8 = v2[3];
    v9 = v2[4];
    v10 = __swift_mutable_project_boxed_opaque_existential_1(*a1, v8);
    v11 = *(_QWORD *)(v8 - 8);
    v12 = MEMORY[0x1E0C80A78](v10);
    v14 = (char *)&v15 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v11 + 16))(v14, v12);
    sub_18578AA24((uint64_t)v14, v7, v8, v9);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v8);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v2);
  }
  free(v2);
}

id sub_185789FC4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = *a1 + OBJC_IVAR___UIHoverStyle__shape;
  v3 = *(void **)v2;
  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 40);
  v9 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v5;
  *(_QWORD *)(a2 + 24) = v6;
  *(_QWORD *)(a2 + 32) = v7;
  *(_QWORD *)(a2 + 40) = v8;
  *(_QWORD *)(a2 + 48) = v9;
  v10 = *(_BYTE *)(v2 + 56);
  *(_BYTE *)(a2 + 56) = v10;
  return sub_1852287BC(v3, v4, v5, v6, v7, v8, v9, v10);
}

void sub_18578A000(uint64_t a1, _QWORD *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  _QWORD v19[7];
  char v20;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *a2 + OBJC_IVAR___UIHoverStyle__shape;
  v10 = *(void **)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_QWORD *)(v9 + 16);
  v13 = *(_QWORD *)(v9 + 24);
  v14 = *(_QWORD *)(v9 + 32);
  v15 = *(_QWORD *)(v9 + 40);
  v16 = *(_QWORD *)(v9 + 48);
  v17 = *(_BYTE *)(a1 + 56);
  v18 = *(_BYTE *)(v9 + 56);
  *(_QWORD *)v9 = *(_QWORD *)a1;
  *(_QWORD *)(v9 + 8) = v3;
  *(_QWORD *)(v9 + 16) = v4;
  *(_QWORD *)(v9 + 24) = v5;
  *(_QWORD *)(v9 + 32) = v6;
  *(_QWORD *)(v9 + 40) = v7;
  *(_QWORD *)(v9 + 48) = v8;
  *(_BYTE *)(v9 + 56) = v17;
  sub_1852287BC(v2, v3, v4, v5, v6, v7, v8, v17);
  sub_1852287BC(v10, v11, v12, v13, v14, v15, v16, v18);
  sub_185223490(v10, v11, v12, v13, v14, v15, v16, v18);
  v19[0] = v10;
  v19[1] = v11;
  v19[2] = v12;
  v19[3] = v13;
  v19[4] = v14;
  v19[5] = v15;
  v19[6] = v16;
  v20 = v18;
  sub_185788ACC((uint64_t)v19);
  sub_185223490(v10, v11, v12, v13, v14, v15, v16, v18);
}

void (*UIHoverStyle.shape.modify(_QWORD *a1))(void ***a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v3 = malloc(0x50uLL);
  *a1 = v3;
  v4 = OBJC_IVAR___UIHoverStyle__shape;
  v3[8] = v1;
  v3[9] = v4;
  v5 = v1 + v4;
  v6 = *(void **)v5;
  v7 = *(_QWORD *)(v5 + 8);
  v8 = *(_QWORD *)(v5 + 16);
  v9 = *(_QWORD *)(v5 + 24);
  v10 = *(_QWORD *)(v5 + 32);
  v11 = *(_QWORD *)(v5 + 40);
  v12 = *(_QWORD *)(v5 + 48);
  *v3 = *(_QWORD *)v5;
  v3[1] = v7;
  v3[2] = v8;
  v3[3] = v9;
  v3[4] = v10;
  v3[5] = v11;
  v3[6] = v12;
  v13 = *(_BYTE *)(v5 + 56);
  *((_BYTE *)v3 + 56) = v13;
  sub_1852287BC(v6, v7, v8, v9, v10, v11, v12, v13);
  return sub_18578A198;
}

void sub_18578A198(void ***a1, char a2)
{
  void **v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;

  v3 = *a1;
  v4 = (char *)(*a1)[9] + (_QWORD)(*a1)[8];
  v5 = **a1;
  v6 = (uint64_t)v3[1];
  v7 = (uint64_t)v3[2];
  v8 = (uint64_t)v3[3];
  v9 = (uint64_t)v3[4];
  v10 = (uint64_t)v3[5];
  v11 = (uint64_t)v3[6];
  v12 = *((_BYTE *)v3 + 56);
  v14 = *(void **)v4;
  v13 = *((_QWORD *)v4 + 1);
  v16 = *((_QWORD *)v4 + 2);
  v15 = *((_QWORD *)v4 + 3);
  v18 = *((_QWORD *)v4 + 4);
  v17 = *((_QWORD *)v4 + 5);
  v19 = *((_QWORD *)v4 + 6);
  v20 = v4[56];
  *(_QWORD *)v4 = v5;
  *((_QWORD *)v4 + 1) = v6;
  *((_QWORD *)v4 + 2) = v7;
  *((_QWORD *)v4 + 3) = v8;
  *((_QWORD *)v4 + 4) = v9;
  *((_QWORD *)v4 + 5) = v10;
  *((_QWORD *)v4 + 6) = v11;
  v4[56] = v12;
  if ((a2 & 1) != 0)
  {
    sub_1852287BC(v5, v6, v7, v8, v9, v10, v11, v12);
    sub_1852287BC(v14, v13, v16, v15, v18, v17, v19, v20);
    sub_185223490(v14, v13, v16, v15, v18, v17, v19, v20);
    v29 = v14;
    v30 = v13;
    v31 = v16;
    v32 = v15;
    v33 = v18;
    v34 = v17;
    v35 = v19;
    v36 = v20;
    sub_185788ACC((uint64_t)&v29);
    sub_185223490(v14, v13, v16, v15, v18, v17, v19, v20);
    v21 = *v3;
    v22 = (uint64_t)v3[1];
    v23 = (uint64_t)v3[2];
    v24 = (uint64_t)v3[3];
    v25 = (uint64_t)v3[4];
    v26 = (uint64_t)v3[5];
    v27 = (uint64_t)v3[6];
    v28 = *((_BYTE *)v3 + 56);
  }
  else
  {
    sub_1852287BC(v14, v13, v16, v15, v18, v17, v19, v20);
    sub_185223490(v14, v13, v16, v15, v18, v17, v19, v20);
    v29 = v14;
    v30 = v13;
    v31 = v16;
    v32 = v15;
    v33 = v18;
    v34 = v17;
    v35 = v19;
    v36 = v20;
    sub_185788ACC((uint64_t)&v29);
    v21 = v14;
    v22 = v13;
    v23 = v16;
    v24 = v15;
    v25 = v18;
    v26 = v17;
    v27 = v19;
    v28 = v20;
  }
  sub_185223490(v21, v22, v23, v24, v25, v26, v27, v28);
  free(v3);
}

id sub_18578A36C(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4;
  void *v5;

  v4 = a1;
  a3();

  v5 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_18578A3C4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BYTE v8[24];
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v1 = v0;
  v12 = 0;
  v13 = 0xE000000000000000;
  v2 = (uint64_t)v0 + OBJC_IVAR___UIHoverStyle_driverCoordinator;
  swift_beginAccess();
  sub_18519F0C4(v2, (uint64_t)v8, &qword_1EDD81F98);
  if (v9)
  {
    sub_185227F94((uint64_t)v8, (uint64_t)&v10);
    sub_18650805C();
    sub_1852280CC((uint64_t)v8);
    sub_1852280CC((uint64_t)&v10);
  }
  else
  {
    sub_18519F088((uint64_t)v8, &qword_1EDD81F98);
    v12 = 0x296C696E28;
    v13 = 0xE500000000000000;
  }
  v10 = 0;
  v11 = 0xE000000000000000;
  sub_186507C30();
  v3 = objc_msgSend(v1, sel_description);
  v4 = sub_1865074F8();
  v6 = v5;
  swift_bridgeObjectRelease();

  v10 = v4;
  v11 = v6;
  sub_186507564();
  sub_186507564();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_18578A554(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[5];
  uint64_t v11[5];

  v11[3] = (uint64_t)&type metadata for UIHoverAutomaticEffect;
  v11[4] = (uint64_t)&protocol witness table for UIHoverAutomaticEffect;
  v2 = (uint64_t *)(a1 + OBJC_IVAR___UIHoverStyle__effect);
  swift_beginAccess();
  sub_1851E75D8((uint64_t)v2, (uint64_t)v10);
  swift_beginAccess();
  __swift_assign_boxed_opaque_existential_1(v2, v11);
  swift_endAccess();
  sub_1851E75D8((uint64_t)v2, (uint64_t)&v7);
  v3 = v8;
  v4 = v9;
  __swift_project_boxed_opaque_existential_0Tm(&v7, v8);
  LOBYTE(v3) = sub_1856E1E28(v10, v3, v4);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v7);
  if ((v3 & 1) == 0)
  {
    *(_QWORD *)(a1 + OBJC_IVAR___UIHoverStyle__cachedBridgedEffect) = 0;
    swift_unknownObjectRelease();
    sub_1851E75D8((uint64_t)v2, (uint64_t)&v7);
    v5 = swift_allocObject();
    sub_1851E59E0(&v7, v5 + 16);
    sub_185227960(0, (uint64_t)sub_18578AECC, v5);
    swift_release();
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v10);
}

uint64_t sub_18578A6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[5];
  uint64_t v17[5];

  v17[3] = a3;
  v17[4] = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_0, a1, a3);
  v8 = (uint64_t *)(a2 + OBJC_IVAR___UIHoverStyle__effect);
  swift_beginAccess();
  sub_1851E75D8((uint64_t)v8, (uint64_t)v16);
  swift_beginAccess();
  __swift_assign_boxed_opaque_existential_1(v8, v17);
  swift_endAccess();
  sub_1851E75D8((uint64_t)v8, (uint64_t)&v13);
  v9 = v14;
  v10 = v15;
  __swift_project_boxed_opaque_existential_0Tm(&v13, v14);
  LOBYTE(v9) = sub_1856E1E28(v16, v9, v10);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v13);
  if ((v9 & 1) == 0)
  {
    *(_QWORD *)(a2 + OBJC_IVAR___UIHoverStyle__cachedBridgedEffect) = 0;
    swift_unknownObjectRelease();
    sub_1851E75D8((uint64_t)v8, (uint64_t)&v13);
    v11 = swift_allocObject();
    sub_1851E59E0(&v13, v11 + 16);
    sub_185227960(0, (uint64_t)sub_18578AFC8, v11);
    swift_release();
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v16);
}

uint64_t sub_18578A800(uint64_t a1, void (*a2)(__int128 *), uint64_t a3)
{
  uint64_t result;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  __int128 v27[2];
  _BYTE v28[40];
  uint64_t v29;

  v29 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD816D0);
  result = sub_186507E70();
  v5 = (_QWORD *)result;
  v6 = 0;
  v25 = a1;
  v9 = *(_QWORD *)(a1 + 64);
  v8 = a1 + 64;
  v7 = v9;
  v10 = 1 << *(_BYTE *)(v8 - 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v7;
  v23 = v8;
  v24 = (unint64_t)(v10 + 63) >> 6;
  v13 = result + 64;
  if ((v11 & v7) == 0)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v14 | (v6 << 6); ; i = __clz(__rbit64(v17)) + (v6 << 6))
  {
    v19 = *(_QWORD *)(*(_QWORD *)(v25 + 48) + 8 * i);
    sub_1851E75D8(*(_QWORD *)(v25 + 56) + 40 * i, (uint64_t)v28);
    sub_1851E75D8((uint64_t)v28, (uint64_t)v27);
    a2(v27);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v28);
    *(_QWORD *)(v13 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_QWORD *)(v5[6] + 8 * i) = v19;
    result = sub_1851E59E0(v27, v5[7] + 40 * i);
    v20 = v5[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v5[2] = v22;
    if (v12)
      goto LABEL_4;
LABEL_5:
    v16 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_24;
    if (v16 >= v24)
      return (uint64_t)v5;
    v17 = *(_QWORD *)(v23 + 8 * v16);
    ++v6;
    if (!v17)
    {
      v6 = v16 + 1;
      if (v16 + 1 >= v24)
        return (uint64_t)v5;
      v17 = *(_QWORD *)(v23 + 8 * v6);
      if (!v17)
      {
        v6 = v16 + 2;
        if (v16 + 2 >= v24)
          return (uint64_t)v5;
        v17 = *(_QWORD *)(v23 + 8 * v6);
        if (!v17)
          break;
      }
    }
LABEL_18:
    v12 = (v17 - 1) & v17;
  }
  v18 = v16 + 3;
  if (v18 >= v24)
    return (uint64_t)v5;
  v17 = *(_QWORD *)(v23 + 8 * v18);
  if (v17)
  {
    v6 = v18;
    goto LABEL_18;
  }
  while (1)
  {
    v6 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v6 >= v24)
      return (uint64_t)v5;
    v17 = *(_QWORD *)(v23 + 8 * v6);
    ++v18;
    if (v17)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_18578AA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, __n128))(v10 + 16))(v9, v7);
  return sub_18578A6A0((uint64_t)v9, a2, a3, a4);
}

char *keypath_get_selector_hoverStyle()
{
  return sel_hoverStyle;
}

id sub_18578AAB0@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_hoverStyle);
  *a2 = result;
  return result;
}

id sub_18578AAE8(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setHoverStyle_, *a1);
}

uint64_t sub_18578AAFC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR___UIHoverStyle__effect;
  swift_beginAccess();
  return sub_1851E75D8(v3, a2);
}

uint64_t sub_18578AB5C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18578AB80@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v3);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 104))(v3, v4);
  *a2 = result & 1;
  return result;
}

uint64_t sub_18578ABCC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 112))(v2, v3, v4);
}

uint64_t sub_18578AC1C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v3);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 80))(v3, v4);
  *a2 = result;
  return result;
}

uint64_t sub_18578AC64(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void *, uint64_t, uint64_t);
  id v6;

  v2 = *a1;
  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 32);
  __swift_mutable_project_boxed_opaque_existential_1(a2, v3);
  v5 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v4 + 88);
  v6 = v2;
  return v5(v2, v3, v4);
}

uint64_t sub_18578ACBC()
{
  uint64_t v0;
  id v1;

  v1 = **(id **)(v0 + 24);
  return swift_setAtWritableKeyPath();
}

void sub_18578AD08(void *a1)
{
  uint64_t v1;
  void *v3;
  char *v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD v29[7];
  char v30;

  v3 = *(void **)(v1 + OBJC_IVAR___UIHoverStyle__cachedBridgedShape);
  *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__cachedBridgedShape) = a1;
  v4 = a1;

  if (a1)
  {
    v5 = &v4[OBJC_IVAR___UIShape_value];
    v6 = *(void **)&v4[OBJC_IVAR___UIShape_value];
    v7 = *((_QWORD *)v5 + 1);
    v8 = *((_QWORD *)v5 + 2);
    v9 = *((_QWORD *)v5 + 3);
    v10 = *((_QWORD *)v5 + 4);
    v11 = *((_QWORD *)v5 + 5);
    v12 = *((_QWORD *)v5 + 6);
    v13 = v5[56];
    sub_185228314(v6, v7, v8, v9, v10, v11, v12, v13);
    v14 = v11;
    v15 = v10;
    v16 = v9;
    v17 = v8;
    v18 = v7;
    v19 = v6;
  }
  else
  {
    v19 = 0;
    v18 = 0;
    v17 = 0;
    v16 = 0;
    v15 = 0;
    v14 = 0;
    v12 = 0;
    v13 = -1;
  }
  v20 = v1 + OBJC_IVAR___UIHoverStyle__shape;
  v22 = *(void **)(v1 + OBJC_IVAR___UIHoverStyle__shape);
  v21 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 8);
  v23 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 16);
  v24 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 24);
  v25 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 32);
  v26 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 40);
  v27 = *(_QWORD *)(v1 + OBJC_IVAR___UIHoverStyle__shape + 48);
  *(_QWORD *)v20 = v19;
  *(_QWORD *)(v20 + 8) = v18;
  *(_QWORD *)(v20 + 16) = v17;
  *(_QWORD *)(v20 + 24) = v16;
  *(_QWORD *)(v20 + 32) = v15;
  *(_QWORD *)(v20 + 40) = v14;
  *(_QWORD *)(v20 + 48) = v12;
  v28 = *(_BYTE *)(v20 + 56);
  *(_BYTE *)(v20 + 56) = v13;
  sub_1852287BC(v22, v21, v23, v24, v25, v26, v27, v28);
  sub_185223490(v22, v21, v23, v24, v25, v26, v27, v28);
  v29[0] = v22;
  v29[1] = v21;
  v29[2] = v23;
  v29[3] = v24;
  v29[4] = v25;
  v29[5] = v26;
  v29[6] = v27;
  v30 = v28;
  sub_185788ACC((uint64_t)v29);
  sub_185223490(v22, v21, v23, v24, v25, v26, v27, v28);
}

uint64_t sub_18578AEA8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_18578AECC(uint64_t *a1)
{
  uint64_t v1;

  return sub_185788A80(a1, v1 + 16);
}

uint64_t sub_18578AED4()
{
  return swift_deallocObject();
}

uint64_t sub_18578AEE4(uint64_t a1)
{
  uint64_t v1;

  return sub_185788EE4(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_18578AEEC()
{
  return swift_setAtWritableKeyPath();
}

uint64_t sub_18578AF18()
{
  uint64_t v0;

  if (*(unsigned __int8 *)(v0 + 24) != 255)
    swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_18578AF48(uint64_t a1, uint64_t a2)
{
  initializeWithTake for HoverStyleHost(a2, a1, (uint64_t)&type metadata for HoverStyleHost);
  return a2;
}

uint64_t sub_18578AF84()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 72);
  if (v1 != 255)
    sub_185228168(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v1);
  return swift_deallocObject();
}

void sub_18578AFC0(uint64_t a1)
{
  uint64_t v1;

  sub_185788E34(a1, v1 + 16);
}

uint64_t sub_18578AFD0(uint64_t a1, id a2, uint64_t a3, char a4)
{
  CGFloat *v4;
  __int128 v7;
  double v8;
  int v9;
  CGFloat v10;
  CGFloat v11;
  int v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  CGFloat v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  id v23;
  char v24;
  double v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  id v38;
  double v39;
  double v40;
  double v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  char v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  CGFloat a;
  CGFloat b;
  CGFloat c;
  CGFloat d;
  CGFloat tx;
  CGFloat ty;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  char v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  CGFloat v68;
  CGFloat v69;
  int v70;
  CGAffineTransform v71;
  CGFloat v72;
  int v73;
  double v74;
  double v75;
  char v76;
  int v77;
  CGFloat v78;
  CGFloat v79;
  CGAffineTransform v81;
  CGAffineTransform t2;
  CGAffineTransform t1;
  _OWORD v84[2];
  _OWORD v85[3];

  v7 = *(_OWORD *)(a1 + 16);
  v84[0] = *(_OWORD *)a1;
  v84[1] = v7;
  v85[0] = *(_OWORD *)(a1 + 32);
  *(_OWORD *)((char *)v85 + 9) = *(_OWORD *)(a1 + 41);
  v74 = *(double *)(a1 + 64);
  v75 = *(double *)(a1 + 72);
  v73 = *(unsigned __int8 *)(a1 + 80);
  v78 = *(double *)(a1 + 88);
  v77 = *(unsigned __int8 *)(a1 + 104);
  v8 = *(double *)(a1 + 112);
  v9 = *(unsigned __int8 *)(a1 + 120);
  v11 = *(double *)(a1 + 128);
  v10 = *(double *)(a1 + 136);
  v12 = *(unsigned __int8 *)(a1 + 144);
  v71.a = *(CGFloat *)(a1 + 152);
  v71.b = *(CGFloat *)(a1 + 160);
  v71.c = *(CGFloat *)(a1 + 168);
  v71.d = *(CGFloat *)(a1 + 176);
  v71.tx = *(CGFloat *)(a1 + 184);
  v71.ty = *(CGFloat *)(a1 + 192);
  v72 = *(double *)(a1 + 96);
  v70 = *(unsigned __int8 *)(a1 + 200);
  v68 = *(double *)(a1 + 208);
  v69 = *(double *)(a1 + 216);
  v67 = *(unsigned __int8 *)(a1 + 224);
  v79 = *v4;
  objc_msgSend(a2, sel_alpha);
  v14 = v13;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  result = swift_allocObject();
  v17 = result;
  *(_QWORD *)(result + 16) = sub_18578BBF4;
  *(_QWORD *)(result + 24) = v15;
  *(double *)(result + 32) = v8;
  *(_BYTE *)(result + 40) = v9;
  *(CGFloat *)(result + 48) = v11;
  *(CGFloat *)(result + 56) = v10;
  *(_BYTE *)(result + 64) = v12;
  *(double *)(result + 72) = v14;
  v76 = a4;
  if ((a4 & 1) == 0)
    goto LABEL_6;
  if (!v12)
  {
    v18 = v79;
    t2.a = v79;
    t1.a = v11;
    t1.b = v10;
    v19 = a3;
    v28 = *(_QWORD *)(a3 + 40);
    v21 = __OFADD__(v28, 1);
    v29 = v28 + 1;
    if (!v21)
    {
      *(_QWORD *)(a3 + 40) = v29;
      v23 = a2;
      swift_retain();
      swift_retain();
      v24 = 0;
      goto LABEL_14;
    }
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v12 != 1)
  {
LABEL_6:
    v25 = v8;
    if (v9 != 1)
      v25 = v14;
    if (v9)
      v26 = v25;
    else
      v26 = v14 + v8;
    v27 = a2;
    swift_retain();
    objc_msgSend(v27, sel_setAlpha_, v26);

    swift_release();
    swift_release();
    v18 = v79;
    v19 = a3;
    goto LABEL_15;
  }
  v18 = v79;
  t2.a = v79;
  t1.a = v11;
  t1.b = v10;
  v19 = a3;
  v20 = *(_QWORD *)(a3 + 40);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
  {
    __break(1u);
    goto LABEL_43;
  }
  *(_QWORD *)(a3 + 40) = v22;
  v23 = a2;
  swift_retain();
  swift_retain();
  v24 = 1;
LABEL_14:
  sub_18578BA00(&t1.a, v24, (uint64_t)sub_18578BD50, v17, (uint64_t)sub_18578C0B8, v19);

  swift_release();
  swift_release();
  swift_release();
  a4 = v76;
LABEL_15:
  objc_msgSend(a2, sel_bounds);
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v38 = a2;
  sub_18578BDA8((uint64_t)v84, a4 & 1, *(uint64_t *)&v18, v19, v38, v31, v33, v35, v37);

  objc_msgSend(v38, sel_center);
  v40 = v39;
  v42 = v41;
  v43 = swift_allocObject();
  *(_QWORD *)(v43 + 16) = v38;
  result = swift_allocObject();
  v44 = result;
  *(_QWORD *)(result + 16) = sub_18578BFF8;
  *(_QWORD *)(result + 24) = v43;
  *(double *)(result + 32) = v74;
  *(double *)(result + 40) = v75;
  *(_BYTE *)(result + 48) = v73;
  *(CGFloat *)(result + 56) = v78;
  *(CGFloat *)(result + 64) = v72;
  *(_BYTE *)(result + 72) = v77;
  *(double *)(result + 80) = v40;
  *(double *)(result + 88) = v42;
  if ((a4 & 1) != 0)
  {
    if (!v77)
    {
      t2.a = v18;
      t1.a = v78;
      t1.b = v72;
      v50 = *(_QWORD *)(v19 + 40);
      v21 = __OFADD__(v50, 1);
      v51 = v50 + 1;
      if (!v21)
      {
        *(_QWORD *)(v19 + 40) = v51;
        v47 = v38;
        swift_retain();
        swift_retain();
        v48 = 0;
        goto LABEL_27;
      }
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    if (v77 == 1)
    {
      t2.a = v18;
      t1.a = v78;
      t1.b = v72;
      v45 = *(_QWORD *)(v19 + 40);
      v21 = __OFADD__(v45, 1);
      v46 = v45 + 1;
      if (!v21)
      {
        *(_QWORD *)(v19 + 40) = v46;
        v47 = v38;
        swift_retain();
        swift_retain();
        v48 = 1;
LABEL_27:
        sub_18578BA00(&t1.a, v48, (uint64_t)sub_18578C034, v44, (uint64_t)sub_18578C0B8, v19);

        swift_release();
        goto LABEL_28;
      }
      goto LABEL_44;
    }
  }
  if (v73)
  {
    if (v73 == 1)
    {
      v40 = v74;
      v42 = v75;
    }
  }
  else
  {
    v40 = v40 + v74;
    v42 = v42 + v75;
  }
  v49 = v38;
  swift_retain();
  objc_msgSend(v49, sel_setCenter_, v40, v42);

LABEL_28:
  swift_release();
  swift_release();
  objc_msgSend(v38, sel_transform);
  a = t1.a;
  b = t1.b;
  c = t1.c;
  d = t1.d;
  tx = t1.tx;
  ty = t1.ty;
  v58 = swift_allocObject();
  *(_QWORD *)(v58 + 16) = v38;
  result = swift_allocObject();
  v59 = result;
  *(_QWORD *)(result + 16) = sub_18578C044;
  *(_QWORD *)(result + 24) = v58;
  *(CGFloat *)(result + 32) = v71.a;
  *(CGFloat *)(result + 40) = v71.b;
  *(CGFloat *)(result + 48) = v71.c;
  *(CGFloat *)(result + 56) = v71.d;
  *(CGFloat *)(result + 64) = v71.tx;
  *(CGFloat *)(result + 72) = v71.ty;
  *(_BYTE *)(result + 80) = v70;
  *(CGFloat *)(result + 88) = v68;
  *(CGFloat *)(result + 96) = v69;
  *(_BYTE *)(result + 104) = v67;
  *(CGFloat *)(result + 112) = a;
  *(CGFloat *)(result + 120) = b;
  *(CGFloat *)(result + 128) = c;
  *(CGFloat *)(result + 136) = d;
  *(CGFloat *)(result + 144) = tx;
  *(CGFloat *)(result + 152) = ty;
  if ((a4 & 1) == 0)
    goto LABEL_33;
  if (v67)
  {
    if (v67 == 1)
    {
      t2.a = v18;
      t1.a = v68;
      t1.b = v69;
      v60 = *(_QWORD *)(v19 + 40);
      v21 = __OFADD__(v60, 1);
      v61 = v60 + 1;
      if (!v21)
      {
        *(_QWORD *)(v19 + 40) = v61;
        v62 = v38;
        swift_retain();
        swift_retain();
        v63 = 1;
LABEL_40:
        sub_18578BA00(&t1.a, v63, (uint64_t)sub_18578C0A8, v59, (uint64_t)sub_18578C0B8, v19);

        swift_release();
LABEL_41:
        swift_release();
        return swift_release();
      }
      goto LABEL_46;
    }
LABEL_33:
    if (v70)
    {
      if (v70 == 1)
      {
        a = v71.a;
        b = v71.b;
        c = v71.c;
        d = v71.d;
        tx = v71.tx;
        ty = v71.ty;
      }
    }
    else
    {
      t1.a = a;
      t1.b = b;
      t1.c = c;
      t1.d = d;
      t1.tx = tx;
      t1.ty = ty;
      t2 = v71;
      CGAffineTransformConcat(&v81, &t1, &t2);
      a = v81.a;
      b = v81.b;
      c = v81.c;
      d = v81.d;
      tx = v81.tx;
      ty = v81.ty;
    }
    v64 = v38;
    swift_retain();
    t1.a = a;
    t1.b = b;
    t1.c = c;
    t1.d = d;
    t1.tx = tx;
    t1.ty = ty;
    objc_msgSend(v64, sel_setTransform_, &t1);

    goto LABEL_41;
  }
  t2.a = v18;
  t1.a = v68;
  t1.b = v69;
  v65 = *(_QWORD *)(v19 + 40);
  v21 = __OFADD__(v65, 1);
  v66 = v65 + 1;
  if (!v21)
  {
    *(_QWORD *)(v19 + 40) = v66;
    v62 = v38;
    swift_retain();
    swift_retain();
    v63 = 0;
    goto LABEL_40;
  }
LABEL_47:
  __break(1u);
  return result;
}

void UITransitionEntity.id.getter(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

_QWORD *UITransitionEntity.id.setter(_QWORD *result)
{
  _QWORD *v1;

  *v1 = *result;
  return result;
}

uint64_t (*UITransitionEntity.id.modify())(_QWORD, _QWORD)
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t UITransitionEntity.hash(into:)()
{
  return sub_18650811C();
}

BOOL static UIViewDisplayID.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t UITransitionEntity.hashValue.getter()
{
  sub_1865080EC();
  sub_18650811C();
  return sub_186508134();
}

uint64_t sub_18578B774()
{
  sub_1865080EC();
  sub_18650811C();
  return sub_186508134();
}

uint64_t sub_18578B7B8()
{
  sub_1865080EC();
  sub_18650811C();
  return sub_186508134();
}

unint64_t UIViewDisplayID.debugDescription.getter()
{
  sub_186507C30();
  swift_bridgeObjectRelease();
  sub_186507F54();
  sub_186507564();
  swift_bridgeObjectRelease();
  sub_186507564();
  return 0xD000000000000010;
}

uint64_t UIViewDisplayID.hash(into:)()
{
  return sub_18650811C();
}

uint64_t UIViewDisplayID.hashValue.getter()
{
  sub_1865080EC();
  sub_18650811C();
  return sub_186508134();
}

unint64_t sub_18578B908()
{
  unint64_t result;

  result = qword_1EDD8B000;
  if (!qword_1EDD8B000)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UIViewDisplayID, &type metadata for UIViewDisplayID);
    atomic_store(result, (unint64_t *)&qword_1EDD8B000);
  }
  return result;
}

unint64_t sub_18578B950()
{
  unint64_t result;

  result = qword_1EDD8B008;
  if (!qword_1EDD8B008)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UITransitionEntity, &type metadata for UITransitionEntity);
    atomic_store(result, (unint64_t *)&qword_1EDD8B008);
  }
  return result;
}

unint64_t sub_18578B998()
{
  unint64_t result;

  result = qword_1EDD8B010;
  if (!qword_1EDD8B010)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UIViewDisplayID, &type metadata for UIViewDisplayID);
    atomic_store(result, (unint64_t *)&qword_1EDD8B010);
  }
  return result;
}

ValueMetadata *type metadata accessor for UITransitionEntity()
{
  return &type metadata for UITransitionEntity;
}

ValueMetadata *type metadata accessor for UIViewDisplayID()
{
  return &type metadata for UIViewDisplayID;
}

void sub_18578BA00(double *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;

  v11 = objc_msgSend((id)objc_opt_self(), sel_behaviorWithDampingRatio_response_, *a1, a1[1]);
  v12 = (void *)objc_opt_self();
  v21 = a3;
  v22 = a4;
  v13 = MEMORY[0x1E0C809B0];
  v17 = MEMORY[0x1E0C809B0];
  v18 = 1107296256;
  v19 = sub_18530A69C;
  v20 = &block_descriptor_75;
  v14 = _Block_copy(&v17);
  v15 = v11;
  swift_retain();
  swift_release();
  v21 = a5;
  v22 = a6;
  v17 = v13;
  v18 = 1107296256;
  v19 = sub_1856DA9E8;
  v20 = &block_descriptor_23_7;
  v16 = _Block_copy(&v17);
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel__animateUsingSpringBehavior_tracking_animations_completion_, v15, a2 & 1, v14, v16);
  _Block_release(v16);
  _Block_release(v14);

}

uint64_t sub_18578BB6C(uint64_t (*a1)(_OWORD *), __n128 a2, double a3, float64x2_t a4, float64_t a5, uint64_t a6, uint64_t a7)
{
  _OWORD v8[2];

  a2.n128_f64[1] = a3;
  a4.f64[1] = a5;
  if (*(_BYTE *)(a7 + 32))
  {
    if (*(_BYTE *)(a7 + 32) == 1)
    {
      a2 = *(__n128 *)a7;
      a4 = *(float64x2_t *)(a7 + 16);
    }
  }
  else
  {
    a2 = (__n128)vaddq_f64((float64x2_t)a2, *(float64x2_t *)a7);
    a4 = vaddq_f64(a4, *(float64x2_t *)(a7 + 16));
  }
  v8[0] = a2;
  v8[1] = a4;
  return a1(v8);
}

uint64_t sub_18578BBD0()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_18578BBF4(double *a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), sel_setAlpha_, *a1);
}

uint64_t sub_18578BC0C(uint64_t (*a1)(CGAffineTransform *), uint64_t a2, uint64_t a3, CGFloat *a4)
{
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat a;
  CGFloat b;
  CGFloat c;
  CGFloat d;
  CGFloat tx;
  CGFloat ty;
  CGAffineTransform v18;
  CGAffineTransform t2;
  CGAffineTransform t1;

  v6 = *(double *)a3;
  v5 = *(double *)(a3 + 8);
  v8 = *(double *)(a3 + 16);
  v7 = *(double *)(a3 + 24);
  v10 = *(double *)(a3 + 32);
  v9 = *(double *)(a3 + 40);
  a = *a4;
  b = a4[1];
  c = a4[2];
  d = a4[3];
  tx = a4[4];
  ty = a4[5];
  if (*(_BYTE *)(a3 + 48))
  {
    if (*(_BYTE *)(a3 + 48) == 1)
    {
      a = *(double *)a3;
      b = *(double *)(a3 + 8);
      c = *(double *)(a3 + 16);
      d = *(double *)(a3 + 24);
      tx = *(double *)(a3 + 32);
      ty = *(double *)(a3 + 40);
    }
  }
  else
  {
    t1.a = *a4;
    t1.b = b;
    t1.c = c;
    t1.d = d;
    t1.tx = tx;
    t1.ty = ty;
    t2.a = v6;
    t2.b = v5;
    t2.c = v8;
    t2.d = v7;
    t2.tx = v10;
    t2.ty = v9;
    CGAffineTransformConcat(&v18, &t1, &t2);
    a = v18.a;
    b = v18.b;
    c = v18.c;
    d = v18.d;
    tx = v18.tx;
    ty = v18.ty;
  }
  t1.a = a;
  t1.b = b;
  t1.c = c;
  t1.d = d;
  t1.tx = tx;
  t1.ty = ty;
  return a1(&t1);
}

uint64_t sub_18578BCD4(uint64_t (*a1)(__n128 *, __n128, __n128), uint64_t a2, __n128 *a3, __n128 *a4)
{
  __n128 v4;
  __n128 v5;
  __n128 v7;

  v4 = *a3;
  v5 = *a4;
  if (a3[1].n128_u8[0])
  {
    if (a3[1].n128_u8[0] == 1)
      v5 = *a3;
  }
  else
  {
    v5 = (__n128)vaddq_f64((float64x2_t)v5, (float64x2_t)v4);
  }
  v7 = v5;
  return a1(&v7, v5, v4);
}

uint64_t sub_18578BD2C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18578BD50()
{
  uint64_t v0;
  uint64_t (*v1)(double *);
  double v2;
  double v3;
  double v5;

  v1 = *(uint64_t (**)(double *))(v0 + 16);
  v2 = *(double *)(v0 + 72);
  v3 = v2 + *(double *)(v0 + 32);
  if (*(_BYTE *)(v0 + 40) == 1)
    v2 = *(double *)(v0 + 32);
  if (!*(_BYTE *)(v0 + 40))
    v2 = v3;
  v5 = v2;
  return v1(&v5);
}

__n128 *sub_18578BDA8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, void *a5, double a6, double a7, double a8, double a9)
{
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __n128 *result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  id v25;
  char v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  __n128 v42;
  uint64_t v43;
  __n128 v44;
  __n128 v45;
  char v46;

  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a5;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_18578C0C0;
  *(_QWORD *)(v19 + 24) = v18;
  v20 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v19 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v19 + 48) = v20;
  *(_OWORD *)(v19 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v19 + 73) = *(_OWORD *)(a1 + 41);
  *(double *)(v19 + 96) = a6;
  *(double *)(v19 + 104) = a7;
  *(double *)(v19 + 112) = a8;
  *(double *)(v19 + 120) = a9;
  if ((a2 & 1) == 0)
    goto LABEL_6;
  sub_185679F18((__n128 *)(a1 + 40), &v44);
  result = sub_185679F18(&v44, &v45);
  if (v46)
  {
    if (v46 == 1)
    {
      v43 = a3;
      v42 = v45;
      v22 = *(_QWORD *)(a4 + 40);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (!v23)
      {
        *(_QWORD *)(a4 + 40) = v24;
        v25 = a5;
        swift_retain();
        swift_retain();
        v26 = 1;
LABEL_23:
        sub_18578BA00(v42.n128_f64, v26, (uint64_t)sub_18578C100, v19, (uint64_t)sub_18578C0B8, a4);
        swift_release();
LABEL_24:
        swift_release();
        return (__n128 *)swift_release();
      }
      __break(1u);
      goto LABEL_26;
    }
LABEL_6:
    v27 = *(double *)a1;
    v28 = *(double *)(a1 + 8);
    v29 = *(double *)(a1 + 16);
    v30 = *(double *)(a1 + 24);
    v31 = v28 + a7;
    v32 = v29 + a8;
    v33 = v30 + a9;
    if (*(_BYTE *)(a1 + 32) != 1)
    {
      v27 = a6;
      v28 = a7;
      v29 = a8;
      v30 = a9;
    }
    if (*(_BYTE *)(a1 + 32))
      v34 = v27;
    else
      v34 = *(double *)a1 + a6;
    if (*(_BYTE *)(a1 + 32))
      v35 = v28;
    else
      v35 = v31;
    if (*(_BYTE *)(a1 + 32))
      v36 = v29;
    else
      v36 = v32;
    if (*(_BYTE *)(a1 + 32))
      v37 = v30;
    else
      v37 = v33;
    v38 = a5;
    swift_retain();
    objc_msgSend(v38, sel_setBounds_, v34, v35, v36, v37);
    goto LABEL_24;
  }
  v43 = a3;
  v42 = v45;
  v39 = *(_QWORD *)(a4 + 40);
  v23 = __OFADD__(v39, 1);
  v40 = v39 + 1;
  if (!v23)
  {
    *(_QWORD *)(a4 + 40) = v40;
    v41 = a5;
    swift_retain();
    swift_retain();
    v26 = 0;
    goto LABEL_23;
  }
LABEL_26:
  __break(1u);
  return result;
}

id sub_18578BFF8(double *a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), sel_setCenter_, *a1, a1[1]);
}

uint64_t sub_18578C010()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18578C034()
{
  uint64_t v0;

  return sub_18578BCD4(*(uint64_t (**)(__n128 *, __n128, __n128))(v0 + 16), *(_QWORD *)(v0 + 24), (__n128 *)(v0 + 32), (__n128 *)(v0 + 80));
}

id sub_18578C044(_OWORD *a1)
{
  uint64_t v1;
  void *v2;
  __int128 v3;
  _OWORD v5[3];

  v2 = *(void **)(v1 + 16);
  v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  v5[2] = a1[2];
  return objc_msgSend(v2, sel_setTransform_, v5);
}

uint64_t sub_18578C084()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18578C0A8()
{
  uint64_t v0;

  return sub_18578BC0C(*(uint64_t (**)(CGAffineTransform *))(v0 + 16), *(_QWORD *)(v0 + 24), v0 + 32, (CGFloat *)(v0 + 112));
}

uint64_t sub_18578C0B8(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_18563B244(a1, a2, v2);
}

id sub_18578C0C0(double *a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + 16), sel_setBounds_, *a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_18578C0DC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_18578C100(double a1, double a2, float64x2_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(_OWORD *);
  uint64_t v5;
  __int128 v6;
  __n128 v7;
  _OWORD v9[2];
  _OWORD v10[2];

  v4 = *(uint64_t (**)(_OWORD *))(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  v6 = *(_OWORD *)(v3 + 48);
  v9[0] = *(_OWORD *)(v3 + 32);
  v9[1] = v6;
  v10[0] = *(_OWORD *)(v3 + 64);
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)(v3 + 73);
  v7.n128_u64[1] = *(_QWORD *)((char *)&v10[1] + 1);
  v7.n128_u64[0] = *(_QWORD *)(v3 + 96);
  a3.f64[0] = *(float64_t *)(v3 + 112);
  return sub_18578BB6C(v4, v7, *(double *)(v3 + 104), a3, *(float64_t *)(v3 + 120), v5, (uint64_t)v9);
}

uint64_t sub_18578C154@<X0>(uint64_t *a1@<X8>)
{
  return sub_18578C18C((unint64_t *)&unk_1EDD8B050, &qword_1EDD86B30, a1);
}

uint64_t sub_18578C170@<X0>(uint64_t *a1@<X8>)
{
  return sub_18578C18C((unint64_t *)&qword_1EDD87958, &qword_1EDD87950, a1);
}

uint64_t sub_18578C18C@<X0>(unint64_t *a1@<X2>, uint64_t *a2@<X4>, uint64_t *a3@<X8>)
{
  void *v3;
  void *v6;
  uint64_t result;
  uint64_t v9;

  v6 = v3;
  objc_msgSend(v6, sel_copy);
  sub_186507B1C();
  swift_unknownObjectRelease();
  sub_1851F9080(0, a1);
  swift_dynamicCast();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v9;
  *a3 = result;
  return result;
}

uint64_t sub_18578C240@<X0>(uint64_t *a1@<X8>)
{
  return sub_18578C18C(&qword_1EDD8B048, &qword_1EDD87E58, a1);
}

uint64_t sub_18578C25C@<X0>(uint64_t *a1@<X8>)
{
  return sub_18578C18C(&qword_1EDD8B040, &qword_1EDD88400, a1);
}

uint64_t sub_18578C278@<X0>(uint64_t *a1@<X8>)
{
  return sub_18578C18C(&qword_1EDD8B038, &qword_1EDD884B0, a1);
}

uint64_t sub_18578C294@<X0>(uint64_t *a1@<X8>)
{
  return sub_18578C18C(&qword_1EDD8B030, &qword_1EDD88700, a1);
}

uint64_t sub_18578C2B0@<X0>(uint64_t *a1@<X8>)
{
  return sub_18578C18C(&qword_1EDD8B028, &qword_1EDD89508, a1);
}

uint64_t sub_18578C2CC@<X0>(uint64_t *a1@<X8>)
{
  return sub_18578C18C((unint64_t *)&qword_1EDD89F30, &qword_1EDD89F38, a1);
}

uint64_t sub_18578C2E8@<X0>(uint64_t *a1@<X8>)
{
  return sub_18578C18C(&qword_1EDD8B020, &qword_1EDD89F58, a1);
}

uint64_t sub_18578C304@<X0>(uint64_t *a1@<X8>)
{
  return sub_18578C18C(&qword_1EDD8B018, &qword_1EDD8AAE8, a1);
}

uint64_t UIPasteControlConfiguration.cornerStyle.getter@<X0>(_BYTE *a1@<X8>)
{
  void *v1;

  return sub_1855D4020((uint64_t)objc_msgSend(v1, sel_cornerStyle), a1);
}

id UIPasteControlConfiguration.cornerStyle.setter(unsigned __int8 *a1)
{
  void *v1;

  return objc_msgSend(v1, sel_setCornerStyle_, *a1 - 1);
}

id (*UIPasteControlConfiguration.cornerStyle.modify(uint64_t a1))(uint64_t a1)
{
  void *v1;

  *(_QWORD *)a1 = v1;
  sub_1855D4020((uint64_t)objc_msgSend(v1, sel_cornerStyle), (_BYTE *)(a1 + 8));
  return sub_18578C3AC;
}

id sub_18578C3AC(uint64_t a1)
{
  return objc_msgSend(*(id *)a1, sel_setCornerStyle_, *(unsigned __int8 *)(a1 + 8) - 1);
}

uint64_t sub_18578C3C4@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_1855D4020((uint64_t)objc_msgSend(*a1, sel_cornerStyle), &v4);
  *a2 = v4;
  return result;
}

id sub_18578C408(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCornerStyle_, *a1 - 1);
}

uint64_t sub_18578C420(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  void (*v22)(char *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v27 = a5;
  v28 = a8;
  v33 = a1;
  v34 = a2;
  v26 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v35 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v31 = (char *)&v24 - v12;
  v36 = a4;
  MEMORY[0x1E0C80A78](v13);
  v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - v16;
  v18 = sub_186507834();
  if (!v18)
    return sub_1865076B4();
  v19 = v18;
  v25 = v15;
  v39 = sub_186507390();
  v32 = sub_186507D38();
  sub_186507CF0();
  v36 = v17;
  result = sub_186507828();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v31;
    while (1)
    {
      v22 = (void (*)(char *, _QWORD))sub_18650787C();
      (*(void (**)(char *))(v11 + 16))(v21);
      v22(v38, 0);
      v23 = v37;
      v33(v21, v35);
      if (v23)
        break;
      v37 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
      sub_186507D20();
      sub_186507858();
      if (!--v19)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
        return v39;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v35, v27);
  }
  return result;
}

void static NSDiffableDataSourceSnapshot._unconditionallyBridgeFromObjectiveC(_:)(void *a1)
{
  id v1;
  id v2;

  if (a1)
  {
    v1 = objc_msgSend(a1, sel_impl);
    objc_msgSend(v1, sel_copy);

    v2 = (id)__CVCForceCastToSnapshotImpl();
    swift_unknownObjectRelease();
    type metadata accessor for NSDiffableDataSourceSnapshot.ImplWrapper();
  }
  type metadata accessor for NSDiffableDataSourceSnapshot.ImplWrapper();
}

void sub_18578C7C0()
{
  sub_1852D41E4();
  JUMPOUT(0x18578C7CCLL);
}

BOOL static UIEdgeInsets.== infix(_:_:)(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  _BOOL4 v8;

  v8 = a1 == a5;
  if (a2 != a6)
    v8 = 0;
  if (a3 != a7)
    v8 = 0;
  return a4 == a8 && v8;
}

id UIFocusEnvironment.contains(_:)(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend((id)objc_opt_self(), sel_environment_containsEnvironment_, v1, a1);
}

BOOL static UIFloatRange.== infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return a2 == a4 && a1 == a3;
}

Swift::Bool __swiftcall UIEdgeInsetsEqualToEdgeInsets(_:_:)(UIEdgeInsets a1, UIEdgeInsets a2)
{
  Swift::Bool v2;

  v2 = a1.top == a2.top;
  if (a1.left != a2.left)
    v2 = 0;
  if (a1.bottom != a2.bottom)
    v2 = 0;
  return a1.right == a2.right && v2;
}

Swift::Bool __swiftcall UIFloatRangeIsEqualToRange(_:_:)(UIFloatRange a1, UIFloatRange a2)
{
  return a1.maximum == a2.maximum && a1.minimum == a2.minimum;
}

double UIEdgeInsets.init(from:)(_QWORD *a1)
{
  return sub_18578C908(a1);
}

uint64_t UIEdgeInsets.encode(to:)(_QWORD *a1, double a2, double a3, double a4, double a5)
{
  return sub_18578C944(a1, a2, a3, a4, a5);
}

void sub_18578C8C4(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_18578CAC8(a1, a2);
}

uint64_t sub_18578C8D8(_QWORD *a1)
{
  double *v1;

  return UIEdgeInsets.encode(to:)(a1, *v1, v1[1], v1[2], v1[3]);
}

double NSDirectionalEdgeInsets.init(from:)(_QWORD *a1)
{
  return sub_18578C908(a1);
}

double sub_18578C908(_QWORD *a1)
{
  return sub_185792E80(a1);
}

uint64_t NSDirectionalEdgeInsets.encode(to:)(_QWORD *a1, double a2, double a3, double a4, double a5)
{
  return sub_18578C944(a1, a2, a3, a4, a5);
}

uint64_t sub_18578C944(_QWORD *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  _BYTE v11[24];
  uint64_t v12;
  double v13;

  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1865081D0();
  v13 = a2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
  sub_18575959C();
  sub_186507F84();
  if (!v5)
  {
    v13 = a3;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
    sub_186507F84();
    v13 = a4;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
    sub_186507F84();
    v13 = a5;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
    sub_186507F84();
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
}

void sub_18578CAC8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_185792E80(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
    *(_QWORD *)(a2 + 16) = v6;
    *(_QWORD *)(a2 + 24) = v7;
  }
}

double UIOffset.init(from:)(_QWORD *a1)
{
  return sub_185793044(a1);
}

uint64_t UIOffset.encode(to:)(_QWORD *a1, double a2, double a3)
{
  return sub_18578CB58(a1, a2, a3);
}

void sub_18578CB1C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_18578CC4C(a1, a2);
}

double UIFloatRange.init(from:)(_QWORD *a1)
{
  return sub_185793044(a1);
}

uint64_t UIFloatRange.encode(to:)(_QWORD *a1, double a2, double a3)
{
  return sub_18578CB58(a1, a2, a3);
}

uint64_t sub_18578CB58(_QWORD *a1, double a2, double a3)
{
  uint64_t v3;
  _BYTE v7[24];
  uint64_t v8;
  double v9;

  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1865081D0();
  v9 = a2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v7, v8);
  sub_18575959C();
  sub_186507F84();
  if (!v3)
  {
    v9 = a3;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v7, v8);
    sub_186507F84();
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v7);
}

void sub_18578CC4C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;

  v4 = sub_185793044(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(_QWORD *)(a2 + 8) = v5;
  }
}

uint64_t sub_18578CC74(_QWORD *a1)
{
  double *v1;

  return UIFloatRange.encode(to:)(a1, *v1, v1[1]);
}

uint64_t static _UIKitNumericRawRepresentable.< infix(_:_:)()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  void (*v8)(char *, uint64_t);
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - v5;
  sub_186507618();
  sub_186507618();
  swift_getAssociatedConformanceWitness();
  v7 = sub_1865074B0();
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v3, AssociatedTypeWitness);
  v8(v6, AssociatedTypeWitness);
  return v7 & 1;
}

uint64_t static _UIKitNumericRawRepresentable.+ infix(_:_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_1850E0990(a1, a2, (void (*)(char *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DECC10], a3);
}

uint64_t static _UIKitNumericRawRepresentable.+ infix(_:_:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;

  v14 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_186507AA4();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v13 - v9;
  sub_186507618();
  swift_getAssociatedConformanceWitness();
  sub_186507E1C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
  sub_186507624();
  v11 = *(_QWORD *)(a1 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, a1);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(v14, v10, a1);
  __break(1u);
  return result;
}

uint64_t static _UIKitNumericRawRepresentable.- infix(_:_:)()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - v5;
  sub_186507618();
  sub_186507618();
  swift_getAssociatedConformanceWitness();
  sub_186507E28();
  v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v3, AssociatedTypeWitness);
  return ((uint64_t (*)(char *, uint64_t))v7)(v6, AssociatedTypeWitness);
}

uint64_t static _UIKitNumericRawRepresentable.+= infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18578D0B4(a1, a2, a3, a4, (void (*)(char *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DECC10]);
}

uint64_t static _UIKitNumericRawRepresentable.-= infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_18578D0B4(a1, a2, a3, a4, (void (*)(char *, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0DECC18]);
}

uint64_t sub_18578D0B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *, uint64_t, uint64_t, _QWORD))
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, _QWORD);

  v18 = a2;
  v19 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v12 = sub_186507AA4();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v18 - v13;
  sub_186507618();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v19(v10, v18, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8));
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  sub_186507624();
  v16 = *(_QWORD *)(a3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, a3);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, a3);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a1, v14, a3);
  }
  return result;
}

BOOL sub_18578D260(double *a1, double *a2)
{
  return *a1 < *a2;
}

BOOL sub_18578D274(double *a1, double *a2)
{
  return *a2 >= *a1;
}

BOOL sub_18578D288(double *a1, double *a2)
{
  return *a1 >= *a2;
}

BOOL sub_18578D29C(double *a1, double *a2)
{
  return *a2 < *a1;
}

BOOL sub_18578D2B0(float *a1, float *a2)
{
  return *a1 < *a2;
}

BOOL sub_18578D2C4(float *a1, float *a2)
{
  return *a2 >= *a1;
}

BOOL sub_18578D2D8(float *a1, float *a2)
{
  return *a1 >= *a2;
}

BOOL sub_18578D2EC(float *a1, float *a2)
{
  return *a2 < *a1;
}

Swift::Bool __swiftcall UIDeviceOrientationIsLandscape(_:)(UIDeviceOrientation a1)
{
  return UIDeviceOrientationIsLandscape(a1);
}

Swift::Bool __swiftcall UIDeviceOrientationIsPortrait(_:)(UIDeviceOrientation a1)
{
  return UIInterfaceOrientationIsPortrait(a1);
}

Swift::Bool __swiftcall UIDeviceOrientationIsValidInterfaceOrientation(_:)(UIDeviceOrientation a1)
{
  return (unint64_t)(a1 - 1) < 4;
}

id UIActionSheet.init(title:delegate:cancelButtonTitle:destructiveButtonTitle:otherButtonTitles:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;

  if (a2)
  {
    v13 = (void *)sub_1865074D4();
    swift_bridgeObjectRelease();
    v14 = a10;
    if (a5)
      goto LABEL_3;
LABEL_6:
    v15 = 0;
    if (a7)
      goto LABEL_4;
    goto LABEL_7;
  }
  v13 = 0;
  v14 = a10;
  if (!a5)
    goto LABEL_6;
LABEL_3:
  v15 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  if (a7)
  {
LABEL_4:
    v16 = (void *)sub_1865074D4();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  v16 = 0;
LABEL_8:
  v17 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithTitle_delegate_cancelButtonTitle_destructiveButtonTitle_, v13, a3, v15, v16);

  v18 = v17;
  v19 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_addButtonWithTitle_, v19);

  v20 = *(_QWORD *)(v14 + 16);
  if (v20)
  {
    v21 = v14 + 40;
    do
    {
      swift_bridgeObjectRetain();
      v22 = (void *)sub_1865074D4();
      swift_bridgeObjectRelease();
      objc_msgSend(v18, sel_addButtonWithTitle_, v22);

      v21 += 16;
      --v20;
    }
    while (v20);
  }
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return v18;
}

id UIAlertView.init(title:message:delegate:cancelButtonTitle:otherButtonTitles:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v12 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  v13 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  swift_unknownObjectRetain();
  if (a7)
  {
    v14 = (void *)sub_1865074D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = 0;
  }
  v15 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithTitle_message_delegate_cancelButtonTitle_, v12, v13, a5, v14);

  swift_unknownObjectRelease();
  v16 = v15;
  v17 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_addButtonWithTitle_, v17);

  v18 = *(_QWORD *)(a10 + 16);
  if (v18)
  {
    v19 = a10 + 40;
    do
    {
      swift_bridgeObjectRetain();
      v20 = (void *)sub_1865074D4();
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel_addButtonWithTitle_, v20);

      v19 += 16;
      --v18;
    }
    while (v18);
  }
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return v16;
}

void sub_18578D670()
{
  qword_1EDDA8928 = MEMORY[0x1E0DEE9E8];
}

void UIView._defaultCustomPlaygroundQuickLook.getter(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  char v4;
  id v5;
  double v6;
  double v7;
  id v8;
  CGFloat v9;
  CGFloat v10;
  CGContext *v11;
  id v12;
  CGContext *v13;
  id v14;
  UIImage *v15;
  void *v16;
  id v17;
  CGSize v18;
  CGRect v19;

  if (qword_1EDD83D18 != -1)
    swift_once();
  swift_beginAccess();
  v3 = qword_1EDDA8928;
  swift_bridgeObjectRetain();
  v4 = sub_1856EFA18(v1, v3);
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0
    || (swift_beginAccess(),
        v5 = v1,
        sub_1856895E0(&v17, v5),
        swift_endAccess(),
        v17,
        objc_msgSend(v5, sel_bounds),
        v6 == 0.0)
    || (objc_msgSend(v5, sel_bounds), v7 == 0.0))
  {
    v8 = objc_msgSend(objc_allocWithZone((Class)UIImage), sel_init);
    *(_QWORD *)(a1 + 24) = sub_1851F9080(0, &qword_1EDD878B8);
    *(_QWORD *)a1 = v8;
LABEL_7:
    *(_BYTE *)(a1 + 32) = 15;
    return;
  }
  objc_msgSend(v5, sel_bounds);
  v18.width = v9;
  v18.height = v10;
  UIGraphicsBeginImageContextWithOptions(v18, 0, 0.0);
  v11 = UIGraphicsGetCurrentContext();
  v12 = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithWhite_alpha_, 1.0, 0.0);
  objc_msgSend(v12, "set");

  if (v11)
  {
    v13 = v11;
    objc_msgSend(v5, sel_bounds);
    CGContextFillRect(v13, v19);

    v14 = objc_msgSend(v5, sel_layer);
    objc_msgSend(v14, sel_renderInContext_, v13);

    v15 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    swift_beginAccess();
    v16 = (void *)sub_185791CBC(v5);
    swift_endAccess();

    *(_QWORD *)(a1 + 24) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD8B060);
    *(_QWORD *)a1 = v15;
    goto LABEL_7;
  }
  __break(1u);
}

void sub_18578D8F8(uint64_t a1@<X8>)
{
  UIView._defaultCustomPlaygroundQuickLook.getter(a1);
}

id sub_18578D918@<X0>(_QWORD *a1@<X8>, float a2@<S0>, float a3@<S1>, float a4@<S2>, float a5@<S3>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithRed_green_blue_alpha_, a2, a3, a4, a5);
  *a1 = result;
  return result;
}

uint64_t UIColor.init(resource:)(uint64_t a1)
{
  return sub_18578DAB4(a1, MEMORY[0x1E0CA9B88], (SEL *)&selRef_colorNamed_inBundle_compatibleWithTraitCollection_, MEMORY[0x1E0CA9B90]);
}

void __swiftcall UIImage.init(imageLiteralResourceName:)(UIImage *__return_ptr retstr, Swift::String imageLiteralResourceName)
{
  void *ObjCClassFromMetadata;
  void *v3;
  id v4;

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v3 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(ObjCClassFromMetadata, sel_imageNamed_, v3);

  if (!v4)
    __break(1u);
}

void sub_18578DA18(_QWORD *a1@<X8>)
{
  void *ObjCClassFromMetadata;
  void *v3;
  id v4;

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v3 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(ObjCClassFromMetadata, sel_imageNamed_, v3);

  if (v4)
    *a1 = v4;
  else
    __break(1u);
}

uint64_t UIImage.init(resource:)(uint64_t a1)
{
  return sub_18578DAB4(a1, MEMORY[0x1E0CA9BA0], (SEL *)&selRef_imageNamed_inBundle_compatibleWithTraitCollection_, MEMORY[0x1E0CA9BA8]);
}

uint64_t sub_18578DAB4(uint64_t a1, void (*a2)(__n128), SEL *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  void *ObjCClassFromMetadata;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t result;
  uint64_t (*v21)(_QWORD);
  SEL *v22;

  v21 = a4;
  v22 = a3;
  v6 = sub_186506D48();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_186506D78();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(v12);
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v14, v10) == *MEMORY[0x1E0CA9BE8])
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v14, v10);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v14, v6);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    sub_186506D30();
    v16 = (void *)sub_1865074D4();
    swift_bridgeObjectRelease();
    v17 = (void *)sub_186506D3C();
    v18 = objc_msgSend(ObjCClassFromMetadata, *v22, v16, v17, 0);

    if (v18)
    {
      v19 = v21(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a1, v19);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return (uint64_t)v18;
    }
    __break(1u);
  }
  result = sub_186507FC0();
  __break(1u);
  return result;
}

id UIFontTextStyle.metrics.getter(uint64_t a1)
{
  return objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), sel_initForTextStyle_, a1);
}

id UIFocusItem.isFocused.getter()
{
  uint64_t v0;
  id result;
  void *v2;
  id v3;

  sub_1851F9080(0, &qword_1EDD8B070);
  result = sub_1850E0CB8(v0);
  if (result)
  {
    v2 = result;
    v3 = objc_msgSend(result, sel_focusedItem);

    if (v3)
    {
      swift_unknownObjectRelease();
      return (id)(v3 == (id)v0);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

id UIDragDropSession.canLoadObjects<A>(ofClass:)()
{
  void *v0;

  swift_getAssociatedTypeWitness();
  return objc_msgSend(v0, sel_canLoadObjectsOfClass_, swift_getObjCClassFromMetadata());
}

id UIDropSession.loadObjects<A>(ofClass:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  uint64_t ObjCClassFromMetadata;
  _QWORD *v13;
  void *v14;
  id v15;
  _QWORD v17[6];

  swift_getAssociatedTypeWitness();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a4;
  v13[3] = a5;
  v13[4] = a6;
  v13[5] = a2;
  v13[6] = a3;
  v17[4] = sub_185793194;
  v17[5] = v13;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 1107296256;
  v17[2] = sub_18578DF3C;
  v17[3] = &block_descriptor_3_6;
  v14 = _Block_copy(v17);
  swift_retain();
  swift_release();
  v15 = objc_msgSend(v6, sel_loadObjectsOfClass_completion_, ObjCClassFromMetadata, v14);
  _Block_release(v14);
  return v15;
}

uint64_t sub_18578DE98(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v12[8];

  v12[7] = a1;
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD8B208);
  v9 = sub_185793DEC();
  sub_18578C420((void (*)(char *, char *))sub_185793D8C, (uint64_t)v12, v8, a5, MEMORY[0x1E0DEDCE8], v9, MEMORY[0x1E0DEDD18], v10);
  a2();
  return swift_bridgeObjectRelease();
}

uint64_t sub_18578DF3C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD8B200);
  v2 = sub_186507654();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

id UIPasteConfiguration.init<A>(forAccepting:)()
{
  id v0;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  swift_getAssociatedTypeWitness();
  return objc_msgSend(v0, sel_initWithTypeIdentifiersForAcceptingClass_, swift_getObjCClassFromMetadata());
}

id UIPasteConfiguration.addTypeIdentifiers<A>(forAccepting:)()
{
  void *v0;

  swift_getAssociatedTypeWitness();
  return objc_msgSend(v0, sel_addTypeIdentifiersForAcceptingClass_, swift_getObjCClassFromMetadata());
}

void UIPasteboard.setObjects<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v9[6];

  v9[5] = a1;
  v9[2] = a2;
  v9[3] = a3;
  v4 = sub_186507708();
  v5 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EDD8B078);
  v6 = MEMORY[0x186DC9F28](MEMORY[0x1E0DEAF50], v4);
  sub_18578C420((void (*)(char *, char *))sub_185793E38, (uint64_t)v9, v4, v5, MEMORY[0x1E0DEDCE8], v6, MEMORY[0x1E0DEDD18], v7);
  v8 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setObjects_, v8);

}

void UIPasteboard.setObjects<A>(_:localOnly:expirationDate:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = v5;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD8B080);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v23[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = a1;
  v24 = a4;
  v25 = a5;
  v15 = sub_186507708();
  v16 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EDD8B078);
  v17 = MEMORY[0x186DC9F28](MEMORY[0x1E0DEAF50], v15);
  sub_18578C420((void (*)(char *, char *))sub_1857931A4, (uint64_t)v23, v15, v16, MEMORY[0x1E0DEDCE8], v17, MEMORY[0x1E0DEDD18], v18);
  v19 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  sub_18519F0C4(a3, (uint64_t)v14, (uint64_t *)&unk_1EDD8B080);
  v20 = sub_186506B68();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = 0;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v21 + 48))(v14, 1, v20) != 1)
  {
    v22 = (void *)sub_186506B5C();
    (*(void (**)(_BYTE *, uint64_t))(v21 + 8))(v14, v20);
  }
  objc_msgSend(v6, sel_setObjects_localOnly_expirationDate_, v19, a2 & 1, v22);

}

uint64_t UIPrintingNotAvailableError.getter()
{
  return 1;
}

uint64_t UIPrintNoContentError.getter()
{
  return 2;
}

uint64_t UIPrintUnknownImageFormatError.getter()
{
  return 3;
}

uint64_t UIPrintJobFailedError.getter()
{
  return 4;
}

void UIApplicationMain(_:_:_:_:)(int a1, char **a2, uint64_t a3, uint64_t a4, uint64_t a5, NSString *a6)
{
  NSString *v6;
  NSString *v9;

  if (a2)
  {
    v6 = a6;
    if (a4)
    {
      v9 = (NSString *)sub_1865074D4();
      if (!v6)
        goto LABEL_5;
    }
    else
    {
      v9 = 0;
      if (!a6)
LABEL_5:
        UIApplicationMain(a1, a2, v9, v6);
    }
    v6 = (NSString *)sub_1865074D4();
    goto LABEL_5;
  }
  __break(1u);
}

uint64_t UIStoryboard.instantiateInitialViewController<A>(creator:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD v9[6];

  if (a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = a1;
    *(_QWORD *)(v5 + 24) = a2;
    v9[4] = sub_185228348;
    v9[5] = v5;
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 1107296256;
    v9[2] = sub_18578E44C;
    v9[3] = &block_descriptor_9_6;
    v6 = _Block_copy(v9);
    swift_release();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(v2, sel_instantiateInitialViewControllerWithCreator_, v6);
  _Block_release(v6);
  if (v7)
    return swift_dynamicCastUnknownClassUnconditional();
  else
    return 0;
}

id sub_18578E44C(uint64_t a1, void *a2)
{
  uint64_t (*v2)(void);
  id v3;
  void *v4;

  v2 = *(uint64_t (**)(void))(a1 + 32);
  v3 = a2;
  v4 = (void *)v2();

  return v4;
}

uint64_t UIStoryboard.instantiateViewController<A>(identifier:creator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD v13[6];

  v5 = v4;
  v8 = (void *)sub_1865074D4();
  if (a3)
  {
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a3;
    *(_QWORD *)(v9 + 24) = a4;
    v13[4] = sub_185281934;
    v13[5] = v9;
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 1107296256;
    v13[2] = sub_18578E44C;
    v13[3] = &block_descriptor_16_3;
    v10 = _Block_copy(v13);
    swift_release();
  }
  else
  {
    v10 = 0;
  }
  v11 = objc_msgSend(v5, sel_instantiateViewControllerWithIdentifier_creator_, v8, v10);
  _Block_release(v10);

  return swift_dynamicCastUnknownClassUnconditional();
}

id NSDiffableDataSourceSnapshot.numberOfItems.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_numberOfItems);
}

uint64_t NSDiffableDataSourceSnapshot.reloadedSectionIdentifiers.getter(uint64_t a1)
{
  return sub_1852C5478(a1, (SEL *)&selRef_reloadedSectionIdentifiers);
}

uint64_t NSDiffableDataSourceSnapshot.reloadedItemIdentifiers.getter(uint64_t a1)
{
  return sub_185572E84(a1, (SEL *)&selRef_reloadedItemIdentifiers);
}

uint64_t NSDiffableDataSourceSnapshot.reconfiguredItemIdentifiers.getter(uint64_t a1)
{
  return sub_185572E84(a1, (SEL *)&selRef_reconfiguredItemIdentifiers);
}

id NSDiffableDataSourceSnapshot.indexOfItem(_:)()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = *(id *)(*(_QWORD *)v0 + 16);
  v2 = objc_msgSend(v1, sel_indexOfItemIdentifier_, sub_186507FB4());

  swift_unknownObjectRelease();
  if (v2 == (id)sub_1865067FC())
    return 0;
  else
    return v2;
}

void NSDiffableDataSourceSnapshot.insertItems(_:beforeItem:)()
{
  sub_18578E658();
}

void NSDiffableDataSourceSnapshot.insertItems(_:afterItem:)()
{
  sub_18578E658();
}

void sub_18578E658()
{
  sub_1852AD1BC();
}

uint64_t sub_18578E684(void *a1)
{
  SEL *v1;
  id v2;
  void *v3;

  v2 = a1;
  sub_186507D68();
  v3 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, *v1, v3, sub_186507FB4());

  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.deleteItems(_:)(Swift::OpaquePointer a1)
{
  sub_18578E7F0();
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.deleteAllItems()()
{
  sub_1852AD1BC();
}

id sub_18578E720(void *a1)
{
  return objc_msgSend(a1, sel_deleteAllItems);
}

void NSDiffableDataSourceSnapshot.moveItem(_:beforeItem:)()
{
  sub_18578E748();
}

void NSDiffableDataSourceSnapshot.moveItem(_:afterItem:)()
{
  sub_18578E748();
}

void sub_18578E748()
{
  sub_1852AD1BC();
}

uint64_t sub_18578E774(void *a1)
{
  SEL *v1;
  id v2;
  uint64_t v3;

  v2 = a1;
  v3 = sub_186507FB4();
  objc_msgSend(v2, *v1, v3, sub_186507FB4());

  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.reloadItems(_:)(Swift::OpaquePointer a1)
{
  sub_18578E7F0();
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.reconfigureItems(_:)(Swift::OpaquePointer a1)
{
  sub_18578E7F0();
}

void sub_18578E7F0()
{
  sub_1852AD1BC();
}

void sub_18578E81C(void *a1)
{
  SEL *v1;
  id v2;
  void *v3;

  v2 = a1;
  sub_186507D68();
  v3 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, *v1, v3);

}

void NSDiffableDataSourceSnapshot.insertSections(_:beforeSection:)()
{
  sub_18578E8A4();
}

void NSDiffableDataSourceSnapshot.insertSections(_:afterSection:)()
{
  sub_18578E8A4();
}

void sub_18578E8A4()
{
  sub_1852AD1BC();
}

uint64_t sub_18578E8D0(void *a1)
{
  SEL *v1;
  id v2;
  void *v3;

  v2 = a1;
  sub_186507D68();
  v3 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  objc_msgSend(v2, *v1, v3, sub_186507FB4());

  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.deleteSections(_:)(Swift::OpaquePointer a1)
{
  sub_1852ACFD4();
}

void NSDiffableDataSourceSnapshot.moveSection(_:beforeSection:)()
{
  sub_18578E978();
}

void NSDiffableDataSourceSnapshot.moveSection(_:afterSection:)()
{
  sub_18578E978();
}

void sub_18578E978()
{
  sub_1852AD1BC();
}

uint64_t sub_18578E9A4(void *a1)
{
  SEL *v1;
  id v2;
  uint64_t v3;

  v2 = a1;
  v3 = sub_186507FB4();
  objc_msgSend(v2, *v1, v3, sub_186507FB4());

  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall NSDiffableDataSourceSnapshot.reloadSections(_:)(Swift::OpaquePointer a1)
{
  sub_1852ACFD4();
}

NSDiffableDataSourceSnapshot __swiftcall NSDiffableDataSourceSnapshot._bridgeToObjectiveC()()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_state);
  v2 = objc_msgSend(objc_allocWithZone((Class)off_1E1679A30), sel_initWithState_, v1);

  return (NSDiffableDataSourceSnapshot)v2;
}

void static NSDiffableDataSourceSnapshot._conditionallyBridgeFromObjectiveC(_:result:)(void *a1)
{
  id v2;
  id v3;

  swift_release();
  v2 = objc_msgSend(a1, sel_impl);
  objc_msgSend(v2, sel_copy);

  v3 = (id)__CVCForceCastToSnapshotImpl();
  swift_unknownObjectRelease();
  type metadata accessor for NSDiffableDataSourceSnapshot.ImplWrapper();
}

uint64_t sub_18578EB14()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v1;
  *v0 = v2;
  return 1;
}

void sub_18578EB4C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  static NSDiffableDataSourceSnapshot._forceBridgeFromObjectiveC(_:result:)(a1, a2, a3[2], a3[3], a3[4], a3[5]);
}

void sub_18578EB5C(void *a1)
{
  static NSDiffableDataSourceSnapshot._conditionallyBridgeFromObjectiveC(_:result:)(a1);
}

uint64_t sub_18578EB74()
{
  return 1;
}

void sub_18578EB80(void *a1)
{
  static NSDiffableDataSourceSnapshot._unconditionallyBridgeFromObjectiveC(_:)(a1);
}

uint64_t sub_18578EB90@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)@<X0>(_QWORD *@<X0>, _QWORD *@<X1>, uint64_t@<X2>, uint64_t *@<X8>);

  result = (uint64_t)sub_18578EC74();
  if (result)
  {
    v4 = result;
    v5 = v3;
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v4;
    *(_QWORD *)(result + 24) = v5;
    v6 = sub_185793D14;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = result;
  return result;
}

id sub_18578EBF4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_185793CD0;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_18518D708(v1);
  return sub_185219CBC((uint64_t)v4, v3);
}

id (*sub_18578EC74())(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v0;
  id (*result)(uint64_t, uint64_t, uint64_t, uint64_t);

  result = (id (*)(uint64_t, uint64_t, uint64_t, uint64_t))objc_msgSend(*(id *)(v0 + qword_1EDD8B090[0]), sel_supplementaryViewProvider);
  if (result)
  {
    *(_QWORD *)(swift_allocObject() + 16) = result;
    return sub_185793228;
  }
  return result;
}

id sub_18578ECE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  void *v8;
  id v9;

  v7 = (void *)sub_1865074D4();
  v8 = (void *)sub_186506C1C();
  v9 = (id)(*(uint64_t (**)(uint64_t, uint64_t, void *, void *))(a5 + 16))(a5, a1, v7, v8);

  return v9;
}

id (*sub_18578ED54(id (**a1)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)))(uint64_t *a1, char a2)
{
  id (*v1)(uint64_t, uint64_t, uint64_t, uint64_t);
  id (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);

  a1[2] = v1;
  *a1 = sub_18578EC74();
  a1[1] = v3;
  return sub_18578ED88;
}

id sub_18578ED88(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) == 0)
    return sub_185219CBC(*a1, v3);
  sub_18518D708(*a1);
  sub_185219CBC(v2, v3);
  return (id)sub_18518D718(v2);
}

uint64_t sub_18578EDF0(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 + 136) = a2;
  v4 = *a1;
  *(_QWORD *)(v3 + 80) = v2;
  *(_QWORD *)(v3 + 88) = v4;
  *(_QWORD *)(v3 + 96) = sub_18650775C();
  *(_QWORD *)(v3 + 104) = sub_186507750();
  *(_QWORD *)(v3 + 112) = sub_186507738();
  *(_QWORD *)(v3 + 120) = v5;
  return swift_task_switch();
}

uint64_t sub_18578EE68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_186507750();
  *(_QWORD *)(v0 + 128) = v1;
  if (v1)
  {
    swift_getObjectType();
    sub_186507738();
  }
  return swift_task_switch();
}

uint64_t sub_18578EED0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD **)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(unsigned __int8 *)(v0 + 136);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_18578EF34;
  v4 = swift_continuation_init();
  sub_18578EF80(v4, v2, v1, v3);
  return swift_continuation_await();
}

uint64_t sub_18578EF34()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_18578EF80(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v9;

  v9 = a3;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  (*(void (**)(uint64_t *, uint64_t, uint64_t (*)(), uint64_t))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x98))(&v9, a4, sub_185793E80, v7);
  return swift_release();
}

uint64_t sub_18578F008(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2[10] = v1;
  v2[11] = v3;
  v2[12] = sub_18650775C();
  v2[13] = sub_186507750();
  v2[14] = sub_186507738();
  v2[15] = v4;
  return swift_task_switch();
}

uint64_t sub_18578F07C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_186507750();
  *(_QWORD *)(v0 + 128) = v1;
  if (v1)
  {
    swift_getObjectType();
    sub_186507738();
  }
  return swift_task_switch();
}

uint64_t sub_18578F0E4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)v0[10];
  v1 = v0[11];
  v0[2] = v0;
  v0[3] = sub_18578EF34;
  v3 = swift_continuation_init();
  sub_18578F140(v3, v2, v1);
  return swift_continuation_await();
}

uint64_t sub_18578F140(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v7;

  v7 = a3;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  (*(void (**)(uint64_t *, uint64_t (*)(), uint64_t))((*MEMORY[0x1E0DEEDD8] & *a2) + 0xA8))(&v7, sub_185793E80, v5);
  return swift_release();
}

uint64_t sub_18578F1C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_18578F984(a1, qword_1EDD8B090, a2);
}

id sub_18578F1CC(uint64_t a1)
{
  return sub_18578FA64(a1, qword_1EDD8B090);
}

id sub_18578F1DC(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  id v6;

  v4 = a3;
  v5 = a1;
  v6 = sub_185793254();

  return v6;
}

id sub_18578F224()
{
  return sub_185793280();
}

uint64_t sub_18578F22C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v12;

  v5 = sub_186506C4C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_186506C28();
  v9 = a3;
  v10 = a1;
  LOBYTE(a1) = sub_185793280();

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return a1 & 1;
}

void sub_18578F2E0()
{
  sub_1857932D0();
}

uint64_t sub_18578F2EC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v5 = sub_186506C4C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - v10;
  sub_186506C28();
  sub_186506C28();
  v12 = a3;
  v13 = a1;
  sub_1857932D0();

  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v8, v5);
  return ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
}

id sub_18578F3DC()
{
  return 0;
}

void sub_18578F3E4()
{
  JUMPOUT(0x186DC3C64);
}

void sub_18578F3F0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  id v6;
  id v7;

  v5 = sub_186506C4C();
  MEMORY[0x1E0C80A78](v5);
  sub_1865074F8();
  v6 = a3;
  v7 = a1;
  sub_18578F3E4();
}

id sub_18578F46C()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  swift_bridgeObjectRelease();
  v5 = (void *)sub_186506C1C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  return v5;
}

uint64_t sub_18578F4B4()
{
  return sub_18578FF00(qword_1EDD8B090);
}

uint64_t sub_18578F4C0()
{
  return 1;
}

uint64_t UICollectionViewDiffableDataSource.init()()
{
  return sub_18578FF8C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_185793340);
}

uint64_t sub_18578F4D4(_QWORD *a1, uint64_t a2)
{
  return sub_18578FFBC(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_185793340);
}

void UICollectionViewDiffableDataSource.__deallocating_deinit()
{
  sub_18578FFEC((void (*)(_QWORD, _OWORD *))type metadata accessor for UICollectionViewDiffableDataSource);
}

void sub_18578F4EC(uint64_t a1)
{

}

void UITableViewDiffableDataSource.__allocating_init(tableView:cellProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  UITableViewDiffableDataSource.init(tableView:cellProvider:)(a1, a2, a3);
}

void sub_18578F544()
{
  sub_1853D977C();
}

uint64_t sub_18578F558(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 + 136) = a2;
  v4 = *a1;
  *(_QWORD *)(v3 + 80) = v2;
  *(_QWORD *)(v3 + 88) = v4;
  *(_QWORD *)(v3 + 96) = sub_18650775C();
  *(_QWORD *)(v3 + 104) = sub_186507750();
  *(_QWORD *)(v3 + 112) = sub_186507738();
  *(_QWORD *)(v3 + 120) = v5;
  return swift_task_switch();
}

uint64_t sub_18578F5D0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_186507750();
  *(_QWORD *)(v0 + 128) = v1;
  if (v1)
  {
    swift_getObjectType();
    sub_186507738();
  }
  return swift_task_switch();
}

uint64_t sub_18578F638()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD **)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v3 = *(unsigned __int8 *)(v0 + 136);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_18578F69C;
  v4 = swift_continuation_init();
  sub_18578F718(v4, v2, v1, v3);
  return swift_continuation_await();
}

uint64_t sub_18578F69C()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_18578F6E8()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_18578F718(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v9;

  v9 = a3;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  (*(void (**)(uint64_t *, uint64_t, uint64_t (*)(), uint64_t))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x80))(&v9, a4, sub_185793E80, v7);
  return swift_release();
}

void sub_18578F7A0()
{
  sub_1855727F0();
}

uint64_t sub_18578F7B4(uint64_t *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2[10] = v1;
  v2[11] = v3;
  v2[12] = sub_18650775C();
  v2[13] = sub_186507750();
  v2[14] = sub_186507738();
  v2[15] = v4;
  return swift_task_switch();
}

uint64_t sub_18578F828()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_186507750();
  *(_QWORD *)(v0 + 128) = v1;
  if (v1)
  {
    swift_getObjectType();
    sub_186507738();
  }
  return swift_task_switch();
}

uint64_t sub_18578F890()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)v0[10];
  v1 = v0[11];
  v0[2] = v0;
  v0[3] = sub_18578F69C;
  v3 = swift_continuation_init();
  sub_18578F8EC(v3, v2, v1);
  return swift_continuation_await();
}

uint64_t sub_18578F8EC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v7;

  v7 = a3;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  (*(void (**)(uint64_t *, uint64_t (*)(), uint64_t))((*MEMORY[0x1E0DEEDD8] & *a2) + 0x90))(&v7, sub_1856D7970, v5);
  return swift_release();
}

void sub_18578F96C()
{
  sub_1852AD2A0(qword_1EDD8B0A8);
}

uint64_t sub_18578F978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_18578F984(a1, qword_1EDD8B0A8, a2);
}

uint64_t sub_18578F984@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  __int128 v10;
  _OWORD v11[2];

  v5 = *v3;
  v6 = *MEMORY[0x1E0DEEDD8];
  if (objc_msgSend(*(id *)((char *)v3 + *a2), sel_sectionIdentifierForIndex_, a1))
  {
    sub_186507B1C();
    swift_unknownObjectRelease();
    sub_1850F6908(&v10, v11);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD75B20);
  v7 = *(_QWORD *)((v6 & v5) + 0x50);
  v8 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a3, v8 ^ 1u, 1, v7);
}

id sub_18578FA58(uint64_t a1)
{
  return sub_18578FA64(a1, qword_1EDD8B0A8);
}

id sub_18578FA64(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  id v3;

  v3 = objc_msgSend(*(id *)(v2 + *a2), sel_indexForSectionIdentifier_, sub_186507FB4());
  swift_unknownObjectRelease();
  if (v3 == (id)sub_1865067FC())
    return 0;
  else
    return v3;
}

uint64_t sub_18578FAD4@<X0>(uint64_t a1@<X8>)
{
  return sub_1852CCBF8(qword_1EDD8B0A8, a1);
}

id sub_18578FAE0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + qword_1EDD8B0A8[0]), sel_tableViewDefaultRowAnimation);
}

id sub_18578FAF8(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + qword_1EDD8B0A8[0]), sel_setTableViewDefaultRowAnimation_, a1);
}

id (*sub_18578FB14(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(v1 + qword_1EDD8B0A8[0]), sel_tableViewDefaultRowAnimation);
  return sub_18578FB5C;
}

id sub_18578FB5C(_QWORD *a1)
{
  return objc_msgSend(*(id *)(a1[1] + qword_1EDD8B0A8[0]), sel_setTableViewDefaultRowAnimation_, *a1);
}

id sub_18578FB78(uint64_t a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + qword_1EDD8B0A8[0]), sel__numberOfSectionsForTableView_, a1);
}

id sub_18578FB94(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;
  id v6;

  v4 = a3;
  v5 = a1;
  v6 = sub_18578FB78((uint64_t)v4);

  return v6;
}

id sub_18578FBE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return objc_msgSend(*(id *)(v2 + qword_1EDD8B0A8[0]), sel__numberOfRowsInSection_tableView_, a2, a1);
}

id sub_18578FC00(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;
  id v7;
  id v8;

  v6 = a3;
  v7 = a1;
  v8 = sub_18578FBE0((uint64_t)v6, a4);

  return v8;
}

id sub_18578FC54(uint64_t a1, uint64_t a2)
{
  return sub_1852C8994(a1, a2, qword_1EDD8B0A8, (SEL *)&selRef__cellForRowAtIndexPath_tableView_);
}

id sub_18578FC68(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_1852CD1A0(a1, a2, a3, a4, (uint64_t (*)(id, char *))sub_18578FC54);
}

uint64_t sub_18578FC74()
{
  return 0;
}

id sub_18578FC80()
{
  return 0;
}

id sub_18578FC88()
{
  return 0;
}

uint64_t sub_18578FC90()
{
  return _UIApplicationLinkedOnOrAfter();
}

uint64_t sub_18578FCA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_186506C4C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_186506C28();
  v4 = _UIApplicationLinkedOnOrAfter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_18578FD2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_186506C4C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_186506C28();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_18578FDA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_186506C4C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_186506C28();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return 0;
}

uint64_t sub_18578FE28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t);
  uint64_t v9;

  v0 = sub_186506C4C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - v5;
  sub_186506C28();
  sub_186506C28();
  v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v3, v0);
  return ((uint64_t (*)(char *, uint64_t))v7)(v6, v0);
}

id sub_18578FEE4()
{
  return 0;
}

uint64_t sub_18578FEF4()
{
  return sub_18578FF00(qword_1EDD8B0A8);
}

uint64_t sub_18578FF00(_QWORD *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(*(id *)(v1 + *a1), sel_description);
  v3 = sub_1865074F8();

  return v3;
}

uint64_t sub_18578FF58()
{
  return 1;
}

id UITableViewDiffableDataSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t UITableViewDiffableDataSource.init()()
{
  return sub_18578FF8C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_185793378);
}

uint64_t sub_18578FF8C(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x58), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x60), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x68));
}

uint64_t sub_18578FFB0(_QWORD *a1, uint64_t a2)
{
  return sub_18578FFBC(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_185793378);
}

uint64_t sub_18578FFBC(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  return a3(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0x58), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0x60), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0x68));
}

void UITableViewDiffableDataSource.__deallocating_deinit()
{
  sub_18578FFEC((void (*)(_QWORD, _OWORD *))type metadata accessor for UITableViewDiffableDataSource);
}

void sub_18578FFEC(void (*a1)(_QWORD, _OWORD *))
{
  _QWORD *v1;
  __int128 v2;
  _OWORD v3[3];

  v2 = *(_OWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x60);
  v3[0] = *(_OWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x50);
  v3[1] = v2;
  a1(0, v3);
  JUMPOUT(0x185790024);
}

void sub_185790044(uint64_t a1)
{

}

id UICommand.init(title:image:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  void *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;

  v28 = a4;
  v13 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  v27 = a5;
  sub_18519F0C4(a5, (uint64_t)v29, &qword_1ECD75B20);
  v14 = v30;
  if (v30)
  {
    v15 = __swift_project_boxed_opaque_existential_0Tm(v29, v30);
    v16 = *(_QWORD *)(v14 - 8);
    v17 = MEMORY[0x1E0C80A78](v15);
    v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v16 + 16))(v19, v17);
    v20 = sub_186507FB4();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v14);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v29);
  }
  else
  {
    v20 = 0;
  }
  sub_1851F9080(0, &qword_1EDD824A0);
  v21 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  if (a8)
  {
    v22 = (void *)sub_1865074D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = 0;
  }
  v23 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v24 = objc_msgSend(v23, sel_initWithTitle_image_imageName_action_fallbackAction_propertyList_alternates_discoverabilityTitle_attributes_state_, v13, a3, 0, v28, 0, v20, v21, v22, a9, a10);

  swift_unknownObjectRelease();
  sub_1855BDE94(v27);
  return v24;
}

id UICommand.init(title:subtitle:image:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;

  v31 = a6;
  v32 = a5;
  v30 = a3;
  v14 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  v33 = a7;
  sub_18519F0C4(a7, (uint64_t)v34, &qword_1ECD75B20);
  v15 = v35;
  if (v35)
  {
    v16 = __swift_project_boxed_opaque_existential_0Tm(v34, v35);
    v17 = *(_QWORD *)(v15 - 8);
    v18 = MEMORY[0x1E0C80A78](v16);
    v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v17 + 16))(v20, v18);
    v21 = sub_186507FB4();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v15);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v34);
  }
  else
  {
    v21 = 0;
  }
  sub_1851F9080(0, &qword_1EDD824A0);
  v22 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  if (a10)
  {
    v23 = (void *)sub_1865074D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = 0;
  }
  v24 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v25 = v32;
  v26 = objc_msgSend(v24, sel_initWithTitle_image_imageName_action_fallbackAction_propertyList_alternates_discoverabilityTitle_attributes_state_, v14, v32, 0, v31, 0, v21, v22, v23, a11, a12, v30);

  swift_unknownObjectRelease();
  v27 = v26;
  if (a4)
  {
    v28 = (void *)sub_1865074D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = 0;
  }
  objc_msgSend(v26, sel_setSubtitle_, v28);

  sub_1855BDE94(v33);
  return v26;
}

id UICommand.init(title:subtitle:image:selectedImage:action:propertyList:alternates:discoverabilityTitle:attributes:state:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  _QWORD v32[2];
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;

  v33 = a7;
  v34 = a5;
  v35 = a6;
  v32[1] = a3;
  v15 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  v36 = a8;
  sub_18519F0C4(a8, (uint64_t)v37, &qword_1ECD75B20);
  v16 = v38;
  if (v38)
  {
    v17 = __swift_project_boxed_opaque_existential_0Tm(v37, v38);
    v18 = *(_QWORD *)(v16 - 8);
    v19 = MEMORY[0x1E0C80A78](v17);
    v21 = (char *)v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v18 + 16))(v21, v19);
    v22 = sub_186507FB4();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v16);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v37);
  }
  else
  {
    v22 = 0;
  }
  sub_1851F9080(0, &qword_1EDD824A0);
  v23 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  if (a11)
  {
    v24 = (void *)sub_1865074D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = 0;
  }
  v25 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v26 = v34;
  v27 = objc_msgSend(v25, sel_initWithTitle_image_imageName_action_fallbackAction_propertyList_alternates_discoverabilityTitle_attributes_state_, v15, v34, 0, v33, 0, v22, v23, v24, a12, a13);

  swift_unknownObjectRelease();
  v28 = v27;
  if (a4)
  {
    v29 = (void *)sub_1865074D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = 0;
  }
  objc_msgSend(v27, sel_setSubtitle_, v29);

  v30 = v35;
  objc_msgSend(v27, sel_setSelectedImage_, v35);

  sub_1855BDE94(v36);
  return v27;
}

id UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  void *v15;
  void *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[3];
  uint64_t v34;

  v30 = a4;
  v31 = a7;
  v15 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  v16 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  v32 = a8;
  sub_18519F0C4(a8, (uint64_t)v33, &qword_1ECD75B20);
  v17 = v34;
  if (v34)
  {
    v18 = __swift_project_boxed_opaque_existential_0Tm(v33, v34);
    v19 = *(_QWORD *)(v17 - 8);
    v20 = MEMORY[0x1E0C80A78](v18);
    v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v19 + 16))(v22, v20);
    v23 = sub_186507FB4();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v17);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v33);
  }
  else
  {
    v23 = 0;
  }
  sub_1851F9080(0, &qword_1EDD824A0);
  v24 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  if (a11)
  {
    v25 = (void *)sub_1865074D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = 0;
  }
  v26 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v27 = objc_msgSend(v26, sel_initWithTitle_image_imageName_action_input_modifierFlags_propertyList_alternates_discoverabilityTitle_attributes_state_, v15, a3, 0, v30, v16, v31, v23, v24, v25, a12, a13);

  swift_unknownObjectRelease();
  sub_1855BDE94(v32);
  return v27;
}

id UIAction.init(title:image:identifier:discoverabilityTitle:attributes:state:handler:)(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  _QWORD aBlock[6];

  v14 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  if (a6)
  {
    v15 = (void *)sub_1865074D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 0;
  }
  v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  aBlock[4] = a9;
  aBlock[5] = a10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1855B2B2C;
  aBlock[3] = &block_descriptor_49_2;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v18 = objc_msgSend(v16, sel_initWithTitle_image_identifier_discoverabilityTitle_attributes_state_handler_, v14, a3, a4, v15, a7, a8, v17);

  swift_release();
  _Block_release(v17);

  return v18;
}

id UIAction.init(title:subtitle:image:identifier:discoverabilityTitle:attributes:state:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  _QWORD aBlock[6];

  v14 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  if (a8)
  {
    v15 = (void *)sub_1865074D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 0;
  }
  v16 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  aBlock[4] = a11;
  aBlock[5] = a12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1855B2B2C;
  aBlock[3] = &block_descriptor_52_2;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v18 = objc_msgSend(v16, sel_initWithTitle_image_identifier_discoverabilityTitle_attributes_state_handler_, v14, a5, a6, v15, a9, a10, v17);
  _Block_release(v17);

  v19 = v18;
  if (a4)
  {
    v20 = (void *)sub_1865074D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0;
  }
  objc_msgSend(v18, sel_setSubtitle_, v20);

  swift_release();
  return v18;
}

void __swiftcall UIMenu.init(title:image:identifier:options:children:)(UIMenu *__return_ptr retstr, Swift::String title, UIImage_optional *image, UIMenuIdentifier_optional identifier, UIMenuOptions options, Swift::OpaquePointer children)
{
  id v9;
  void *v10;
  void *v11;

  v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v10 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  sub_1851F9080(0, (unint64_t *)&qword_1ECD74A70);
  v11 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  objc_msgSend(v9, sel_initWithTitle_image_imageName_identifier_options_children_, v10, image, 0, identifier.value, options, v11);

}

void __swiftcall UIMenu.init(title:subtitle:image:identifier:options:children:)(UIMenu *__return_ptr retstr, Swift::String title, Swift::String_optional subtitle, UIImage_optional *image, UIMenuIdentifier_optional identifier, UIMenuOptions options, Swift::OpaquePointer children)
{
  void *object;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;

  object = subtitle.value._object;
  v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v12 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  sub_1851F9080(0, (unint64_t *)&qword_1ECD74A70);
  v13 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v11, sel_initWithTitle_image_imageName_identifier_options_children_, v12, image, 0, identifier.value, options, v13);

  v15 = v14;
  if (object)
  {
    v16 = (void *)sub_1865074D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
  objc_msgSend(v14, sel_setSubtitle_, v16);

}

id UIMenuBuilder.command(for:propertyList:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  _QWORD v13[3];
  uint64_t v14;

  sub_18519F0C4(a2, (uint64_t)v13, &qword_1ECD75B20);
  v4 = v14;
  if (v14)
  {
    v5 = __swift_project_boxed_opaque_existential_0Tm(v13, v14);
    v6 = *(_QWORD *)(v4 - 8);
    v7 = MEMORY[0x1E0C80A78](v5);
    v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v6 + 16))(v9, v7);
    v10 = sub_186507FB4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
  }
  else
  {
    v10 = 0;
  }
  v11 = objc_msgSend(v2, sel_commandForAction_propertyList_, a1, v10);
  swift_unknownObjectRelease();
  return v11;
}

uint64_t UIImage.baselineOffsetFromBottom.getter()
{
  void *v0;
  uint64_t v1;

  if (!objc_msgSend(v0, sel_hasBaseline))
    return 0;
  objc_msgSend(v0, sel_baselineOffsetFromBottom);
  return v1;
}

void __swiftcall UIImage.init(systemName:variableValue:configuration:)(UIImage_optional *__return_ptr retstr, Swift::String systemName, Swift::Double variableValue, UIImageConfiguration_optional *configuration)
{
  void *ObjCClassFromMetadata;
  void *v7;
  id v8;

  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v7 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(ObjCClassFromMetadata, sel_systemImageNamed_variableValue_withConfiguration_, v7, configuration, variableValue);

}

void __swiftcall UIImage.init(named:in:variableValue:configuration:)(UIImage_optional *__return_ptr retstr, Swift::String named, NSBundle_optional in, Swift::Double variableValue, UIImageConfiguration_optional *configuration)
{
  void *v5;
  Class isa;
  void *ObjCClassFromMetadata;
  void *v9;
  id v10;

  v5 = *(void **)&in.is_nil;
  isa = in.value.super.isa;
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v9 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(ObjCClassFromMetadata, sel_imageNamed_inBundle_variableValue_withConfiguration_, v9, isa, v5, variableValue);

}

void __swiftcall UIWindowSceneActivationConfiguration.init(userActivity:options:preview:)(UIWindowSceneActivationConfiguration *__return_ptr retstr, NSUserActivity userActivity, UIWindowSceneActivationRequestOptions_optional *options, UITargetedPreview_optional *preview)
{
  id v7;

  v7 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithUserActivity_, userActivity.super.isa);
  objc_msgSend(v7, sel_setOptions_, options);
  objc_msgSend(v7, sel_setPreview_, preview);

}

id UIWindowSceneActivationAction.init(title:subtitle:image:identifier:discoverabilityTitle:attributes:alternate:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12)
{
  id v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  uint64_t v31;
  _QWORD aBlock[6];

  if (!a2)
  {
    v16 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel__defaultTitle);
    sub_1865074F8();

  }
  v31 = a4;
  v17 = (void *)sub_1865074D4();
  swift_bridgeObjectRelease();
  v18 = a6;
  if (a5)
  {
    v19 = a5;
    v21 = a11;
    v20 = a12;
    if (a8)
    {
LABEL_5:
      v22 = a5;
      v23 = (void *)sub_1865074D4();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
  }
  else
  {
    v19 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel__defaultImage);
    v21 = a11;
    v20 = a12;
    if (a8)
      goto LABEL_5;
  }
  v24 = a5;
  v23 = 0;
LABEL_8:
  v25 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  aBlock[4] = v21;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1852E82F4;
  aBlock[3] = &block_descriptor_55_4;
  v26 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v27 = objc_msgSend(v25, sel_initWithTitle_image_identifier_discoverabilityTitle_attributes_alternateAction_configurationProvider_, v17, v19, v18, v23, a9, a10, v26);

  _Block_release(v26);
  v28 = v27;
  if (v31)
  {
    v29 = (void *)sub_1865074D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = 0;
  }
  objc_msgSend(v27, sel_setSubtitle_, v29);

  swift_release();
  return v27;
}

uint64_t sub_1857912DC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v12;

  v3 = *v1;
  sub_1865080EC();
  sub_1865080F8();
  v4 = sub_186508134();
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v7 = ~v5;
  while (*(_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v6) != a1)
  {
    v6 = (v6 + 1) & v7;
    if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
      return 0;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *v1;
  v12 = *v1;
  *v1 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_18568E7D0();
    v10 = v12;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v6);
  sub_185792028(v6);
  *v1 = v12;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1857913FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  char v13;
  uint64_t v14;

  v5 = *v2;
  sub_1865080EC();
  sub_18650811C();
  result = sub_186508134();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = result & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_9:
    *(_QWORD *)a2 = 0;
    v13 = 1;
    goto LABEL_10;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(_QWORD *)(v9 + 8 * v8) != a1)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_9;
    }
    while (*(_QWORD *)(v9 + 8 * v8) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = *v2;
  v14 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_18568ECD4();
    v12 = v14;
  }
  *(_QWORD *)a2 = *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * v8);
  sub_1857921D4(v8);
  *v2 = v14;
  result = swift_bridgeObjectRelease();
  v13 = 0;
LABEL_10:
  *(_BYTE *)(a2 + 8) = v13;
  return result;
}

uint64_t sub_185791528(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = *v1;
  sub_1865080EC();
  sub_1865080F8();
  v4 = sub_186508134();
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v7 = *(_QWORD *)(v3 + 48);
  if (*(_QWORD *)(v7 + 8 * v6) != a1)
  {
    v8 = ~v5;
    do
    {
      v6 = (v6 + 1) & v8;
      if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
        return 0;
    }
    while (*(_QWORD *)(v7 + 8 * v6) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *v1;
  v13 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_18568F08C();
    v10 = v13;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v6);
  sub_18579237C(v6);
  *v1 = v13;
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_185791644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;
  CGRect *v17;
  uint64_t v18;
  void *v19;
  id v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _BOOL4 v26;
  unsigned int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v33;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;

  v37 = a2;
  v36 = _s22RotaryPlaceholderLabelC11TextSegmentVMa(0);
  v38 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v35 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v35 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (id *)((char *)&v35 - v13);
  MEMORY[0x1E0C80A78](v15);
  v17 = (CGRect *)((char *)&v35 - v16);
  v35 = v2;
  v18 = *v2;
  sub_1865080EC();
  v19 = *(void **)(a1 + 32);
  swift_bridgeObjectRetain();
  v20 = v19;
  sub_186507A50();

  v45 = 0;
  v46 = 0xE000000000000000;
  v21 = *(_OWORD *)(a1 + 16);
  v43 = *(_OWORD *)a1;
  v44 = v21;
  type metadata accessor for CGRect(0);
  sub_186507D74();
  sub_186507540();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_186507540();
  swift_bridgeObjectRelease();
  v22 = sub_186508134();
  v23 = -1 << *(_BYTE *)(v18 + 32);
  v24 = v22 & ~v23;
  v41 = v18 + 56;
  v42 = v18;
  if (((*(_QWORD *)(v18 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    v29 = 1;
    v30 = v37;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v30, v29, 1, v36);
  }
  v39 = ~v23;
  v40 = *(_QWORD *)(v38 + 72);
  while (1)
  {
    v25 = v40 * v24;
    sub_1855C700C(*(_QWORD *)(v42 + 48) + v40 * v24, (uint64_t)v17, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
    v26 = CGRectEqualToRect(*v17, *(CGRect *)a1);
    sub_1855C700C((uint64_t)v17, (uint64_t)v14, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
    sub_1855C700C(a1, (uint64_t)v11, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
    if (!v26)
    {
      sub_1855C7050((uint64_t)v14, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
      sub_1855C7050((uint64_t)v11, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
      sub_1855C700C((uint64_t)v17, (uint64_t)v8, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
      sub_1855C700C(a1, (uint64_t)v5, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
LABEL_4:
      sub_1855C7050((uint64_t)v8, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
      sub_1855C7050((uint64_t)v5, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
      sub_1855C7050((uint64_t)v17, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
      goto LABEL_5;
    }
    v27 = objc_msgSend(v14[4], sel_isEqualToTextRange_, *((_QWORD *)v11 + 4));
    sub_1855C7050((uint64_t)v14, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
    sub_1855C7050((uint64_t)v11, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
    sub_1855C700C((uint64_t)v17, (uint64_t)v8, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
    sub_1855C700C(a1, (uint64_t)v5, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
    if (!v27)
      goto LABEL_4;
    if (*((_QWORD *)v8 + 5) == *((_QWORD *)v5 + 5) && *((_QWORD *)v8 + 6) == *((_QWORD *)v5 + 6))
      break;
    v28 = sub_186507FCC();
    sub_1855C7050((uint64_t)v8, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
    sub_1855C7050((uint64_t)v5, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
    sub_1855C7050((uint64_t)v17, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
    if ((v28 & 1) != 0)
      goto LABEL_14;
LABEL_5:
    v24 = (v24 + 1) & v39;
    if (((*(_QWORD *)(v41 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
      goto LABEL_12;
  }
  sub_1855C7050((uint64_t)v8, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
  sub_1855C7050((uint64_t)v5, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
  sub_1855C7050((uint64_t)v17, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
LABEL_14:
  swift_bridgeObjectRelease();
  v31 = v35;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v33 = *v31;
  v47 = *v31;
  *v31 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_18568F6EC();
    v33 = v47;
  }
  v30 = v37;
  sub_1855C6F8C(*(_QWORD *)(v33 + 48) + v25, v37, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
  sub_185792524(v24);
  *v31 = v47;
  swift_bridgeObjectRelease();
  v29 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v30, v29, 1, v36);
}

uint64_t sub_185791A90@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;

  v3 = type metadata accessor for IntelligenceUI.PromptAmbiguityID();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = v1;
  v7 = *v1;
  sub_1865080EC();
  sub_186506BBC();
  sub_1852478E0(qword_1EDD813D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  swift_bridgeObjectRetain();
  sub_186507450();
  v8 = sub_186508134();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v22 = v3;
    v23 = a1;
    v11 = v4;
    v12 = ~v9;
    v21 = v11;
    v13 = *(_QWORD *)(v11 + 72);
    while (1)
    {
      sub_1855C700C(*(_QWORD *)(v7 + 48) + v13 * v10, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceUI.PromptAmbiguityID);
      v14 = _s5UIKit16UITextEffectViewC0C2IDV2eeoiySbAE_AEtFZ_0();
      sub_1855C7050((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceUI.PromptAmbiguityID);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v12;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v15 = 1;
        a1 = v23;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    v16 = v24;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v16;
    v25 = *v16;
    *v16 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_18568F700();
      v18 = v25;
    }
    a1 = v23;
    sub_1855C6F8C(*(_QWORD *)(v18 + 48) + v13 * v10, v23, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceUI.PromptAmbiguityID);
    sub_18579283C(v10);
    *v16 = v25;
    swift_bridgeObjectRelease();
    v15 = 0;
LABEL_10:
    v4 = v21;
    v3 = v22;
  }
  else
  {
    swift_bridgeObjectRelease();
    v15 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v15, 1, v3);
}

uint64_t sub_185791CBC(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = a1;
    v5 = sub_186507B94();

    if ((v5 & 1) != 0)
    {
      v6 = sub_185791E90();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_186507A38();
  v8 = -1 << *(_BYTE *)(v3 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    goto LABEL_12;
  sub_1851F9080(0, (unint64_t *)&qword_1EDD82CE0);
  v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
  v11 = sub_186507A44();

  if ((v11 & 1) == 0)
  {
    v12 = ~v8;
    do
    {
      v9 = (v9 + 1) & v12;
      if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_12;
      v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
      v14 = sub_186507A44();

    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v1;
  v18 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_18568FAE8();
    v16 = v18;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v9);
  sub_185792CE0(v9);
  *v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_185791E90()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = sub_186507B64();
  v3 = swift_unknownObjectRetain();
  v4 = sub_185689EAC(v3, v2);
  v15 = v4;
  swift_retain();
  v5 = sub_186507A38();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    sub_1851F9080(0, (unint64_t *)&qword_1EDD82CE0);
    v8 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
    v9 = sub_186507A44();

    if ((v9 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v13 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
      sub_185792CE0(v7);
      if ((sub_186507A44() & 1) != 0)
      {
        *v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      v10 = ~v6;
      while (1)
      {
        v7 = (v7 + 1) & v10;
        if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          break;
        v11 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
        v12 = sub_186507A44();

        if ((v12 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_185792028(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_186507B40();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1865080EC();
        sub_1865080F8();
        v10 = sub_186508134() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9)
            goto LABEL_5;
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(v3 + 48);
          v12 = (_OWORD *)(v11 + 16 * v2);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v12 >= v13 + 1))
          {
            *v12 = *v13;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v14 = *(_QWORD *)(v3 + 16);
  v15 = __OFSUB__(v14, 1);
  v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1857921D4(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_186507B40();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1865080EC();
        sub_18650811C();
        v10 = sub_186508134() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9)
            goto LABEL_5;
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(v3 + 48);
          v12 = (_QWORD *)(v11 + 8 * v2);
          v13 = (_QWORD *)(v11 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v12 >= v13 + 1))
          {
            *v12 = *v13;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v14 = *(_QWORD *)(v3 + 16);
  v15 = __OFSUB__(v14, 1);
  v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_18579237C(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_186507B40();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1865080EC();
        sub_1865080F8();
        v10 = sub_186508134() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9)
            goto LABEL_5;
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(v3 + 48);
          v12 = (_QWORD *)(v11 + 8 * v2);
          v13 = (_QWORD *)(v11 + 8 * v6);
          if (v2 != v6 || (v2 = v6, v12 >= v13 + 1))
          {
            *v12 = *v13;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v14 = *(_QWORD *)(v3 + 16);
  v15 = __OFSUB__(v14, 1);
  v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_185792524(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  id v18;
  __int128 v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  unint64_t v34;

  v29 = _s22RotaryPlaceholderLabelC11TextSegmentVMa(0);
  MEMORY[0x1E0C80A78](v29);
  v5 = (id *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *v1;
  v7 = *v1 + 56;
  v8 = -1 << *(_BYTE *)(*v1 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(v7 + 8 * (v9 >> 6))) != 0)
  {
    v27 = v3;
    v28 = v1;
    v10 = ~v8;
    swift_retain();
    v11 = a1;
    v12 = sub_186507B40();
    v30 = v7;
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v13 = (v12 + 1) & v10;
      v14 = *(_QWORD *)(v27 + 72);
      v15 = v10;
      do
      {
        v16 = v14;
        v17 = v14 * v9;
        sub_1855C700C(*(_QWORD *)(v6 + 48) + v14 * v9, (uint64_t)v5, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
        sub_1865080EC();
        v18 = v5[4];
        sub_186507A50();

        v33 = 0;
        v34 = 0xE000000000000000;
        v19 = *((_OWORD *)v5 + 1);
        v31 = *(_OWORD *)v5;
        v32 = v19;
        type metadata accessor for CGRect(0);
        sub_186507D74();
        sub_186507540();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_186507540();
        swift_bridgeObjectRelease();
        v20 = sub_186508134();
        sub_1855C7050((uint64_t)v5, _s22RotaryPlaceholderLabelC11TextSegmentVMa);
        v21 = v20 & v15;
        if (v11 >= (uint64_t)v13)
        {
          if (v21 < v13)
          {
            v14 = v16;
            goto LABEL_6;
          }
          v14 = v16;
          if (v11 < (uint64_t)v21)
            goto LABEL_6;
        }
        else
        {
          v14 = v16;
          if (v21 < v13 && v11 < (uint64_t)v21)
            goto LABEL_6;
        }
        v22 = v14 * v11;
        if (v14 * v11 < v17 || *(_QWORD *)(v6 + 48) + v14 * v11 >= (unint64_t)(*(_QWORD *)(v6 + 48) + v17 + v14))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v11 = v9;
          if (v22 == v17)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        v11 = v9;
LABEL_6:
        v9 = (v9 + 1) & v15;
      }
      while (((*(_QWORD *)(v30 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    *(_QWORD *)(v30 + (((unint64_t)v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v11) - 1;
    swift_release();
    v1 = v28;
  }
  else
  {
    *(_QWORD *)(v7 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v23 = *v1;
  v24 = *(_QWORD *)(*v1 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v23 + 16) = v26;
    ++*(_DWORD *)(v23 + 36);
  }
}

void sub_18579283C(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;

  v24 = type metadata accessor for IntelligenceUI.PromptAmbiguityID();
  v3 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v1;
  v6 = *v1 + 56;
  v7 = -1 << *(_BYTE *)(*v1 + 32);
  v8 = (a1 + 1) & ~v7;
  if (((1 << v8) & *(_QWORD *)(v6 + 8 * (v8 >> 6))) != 0)
  {
    v23 = v1;
    v9 = ~v7;
    swift_retain();
    v10 = sub_186507B40();
    if ((*(_QWORD *)(v6 + 8 * (v8 >> 6)) & (1 << v8)) != 0)
    {
      v25 = v6;
      v26 = (v10 + 1) & v9;
      v11 = *(_QWORD *)(v3 + 72);
      v12 = (uint64_t)v27;
      do
      {
        v13 = v11;
        v14 = v11 * v8;
        sub_1855C700C(*(_QWORD *)(v5 + 48) + v11 * v8, v12, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceUI.PromptAmbiguityID);
        sub_1865080EC();
        sub_186506BBC();
        sub_1852478E0(qword_1EDD813D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        v15 = v9;
        sub_186507450();
        v16 = sub_186508134();
        sub_1855C7050(v12, (uint64_t (*)(_QWORD))type metadata accessor for IntelligenceUI.PromptAmbiguityID);
        v17 = v16 & v15;
        v9 = v15;
        if (a1 >= (uint64_t)v26)
        {
          if (v17 < v26)
          {
            v6 = v25;
            v11 = v13;
            goto LABEL_6;
          }
          v6 = v25;
          v11 = v13;
          if (a1 < (uint64_t)v17)
            goto LABEL_6;
        }
        else
        {
          v6 = v25;
          v11 = v13;
          if (v17 < v26 && a1 < (uint64_t)v17)
            goto LABEL_6;
        }
        v18 = v11 * a1;
        if (v11 * a1 < v14 || *(_QWORD *)(v5 + 48) + v11 * a1 >= (unint64_t)(*(_QWORD *)(v5 + 48) + v14 + v11))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v8;
          if (v18 == v14)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v8;
LABEL_6:
        v8 = (v8 + 1) & v9;
      }
      while (((*(_QWORD *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
    }
    *(_QWORD *)(v6 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release();
    v1 = v23;
  }
  else
  {
    *(_QWORD *)(v6 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v19 = *v1;
  v20 = *(_QWORD *)(*v1 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v19 + 16) = v22;
    ++*(_DWORD *)(v19 + 36);
  }
}

unint64_t sub_185792AF0(unint64_t result)
{
  uint64_t *v1;
  uint64_t *v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _QWORD v18[2];

  v2 = v1;
  v3 = result;
  v4 = *v1;
  v5 = *v1 + 56;
  v6 = -1 << *(_BYTE *)(*v1 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(v5 + 8 * (v7 >> 6))) != 0)
  {
    v8 = ~v6;
    swift_retain();
    v9 = sub_186507B40();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (v9 + 1) & v8;
      while (1)
      {
        sub_185692B5C((_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v7), v18);
        sub_1865080EC();
        sub_1865080F8();
        v11 = sub_186508134();
        sub_185692BD4((uint64_t)v18);
        v12 = v11 & v8;
        if (v3 >= (uint64_t)v10)
          break;
        if (v12 < v10)
          goto LABEL_11;
LABEL_12:
        if (v3 < (uint64_t)v7 || *(_QWORD *)(v4 + 48) + 16 * v3 >= *(_QWORD *)(v4 + 48) + 16 * v7 + 16)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v13 = v3 == v7;
          v3 = v7;
          if (v13)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        v3 = v7;
LABEL_6:
        v7 = (v7 + 1) & v8;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_16;
      }
      if (v12 < v10)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v12)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_16:
    *(_QWORD *)(v5 + (((unint64_t)v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v3) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v14 = *v2;
  v15 = *(_QWORD *)(*v2 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v14 + 16) = v17;
    ++*(_DWORD *)(v14 + 36);
  }
  return result;
}

unint64_t sub_185792CE0(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_186507B40();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v11 = sub_186507A38();

        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

double sub_185792E80(_QWORD *a1)
{
  uint64_t v1;
  double v2;
  double v5;
  _BYTE v6[24];
  uint64_t v7;

  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1865081AC();
  if (!v1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
    sub_1857595E0();
    sub_186507F78();
    v2 = v5;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
    sub_186507F78();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
    sub_186507F78();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
    sub_186507F78();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v6);
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return v2;
}

double sub_185793044(_QWORD *a1)
{
  uint64_t v1;
  double v2;
  double v5;
  _BYTE v6[24];
  uint64_t v7;

  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1865081AC();
  if (!v1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
    sub_1857595E0();
    sub_186507F78();
    v2 = v5;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
    sub_186507F78();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v6);
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  return v2;
}

uint64_t sub_185793170()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_185793194(uint64_t a1)
{
  uint64_t v1;

  return sub_18578DE98(a1, *(void (**)(void))(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 16), *(char **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1857931A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_18650745C();
  *a1 = result;
  return result;
}

uint64_t sub_1857931E4()
{
  return swift_deallocObject();
}

uint64_t sub_1857931F4()
{
  return swift_deallocObject();
}

uint64_t sub_185793204()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

id sub_185793228(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_18578ECE0(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

uint64_t sub_185793230()
{
  swift_release();
  return swift_deallocObject();
}

id sub_185793254()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + qword_1EDD8B090[0]), sel_expandCollapseAnimationContext);
}

id sub_185793280()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + qword_1EDD8B090[0]);
  v2 = (void *)sub_186506C1C();
  v3 = objc_msgSend(v1, sel_canMoveItemAtIndexPath_, v2);

  return v3;
}

void sub_1857932D0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + qword_1EDD8B090[0]);
  v2 = (void *)sub_186506C1C();
  v3 = (id)sub_186506C1C();
  objc_msgSend(v1, sel__commitReorderingForItemAtIndexPath_toDestinationIndexPath_, v2, v3);

}

void sub_185793340()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t _UIApplicationLinkedOnOrAfter()
{
  return dyld_program_sdk_at_least();
}

void sub_185793378()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

unint64_t sub_1857933A8()
{
  unint64_t result;

  result = qword_1EDD8B0C8;
  if (!qword_1EDD8B0C8)
  {
    result = MEMORY[0x186DC9F28](MEMORY[0x1E0DEF068], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1EDD8B0C8);
  }
  return result;
}

unint64_t sub_1857933F0()
{
  unint64_t result;

  result = qword_1EDD8B0D0;
  if (!qword_1EDD8B0D0)
  {
    result = MEMORY[0x186DC9F28](MEMORY[0x1E0DEF080], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1EDD8B0D0);
  }
  return result;
}

uint64_t sub_185793434(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1852478E0((unint64_t *)&unk_1EDD8B0E0, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&protocol conformance descriptor for UIFontWeight);
  result = sub_1852478E0(&qword_1EDD84498, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_186667214);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_185793490()
{
  return sub_1852478E0((unint64_t *)&unk_1EDD8B0F0, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_1866671E8);
}

uint64_t sub_1857934BC(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1852478E0((unint64_t *)&unk_1EDD8B100, (uint64_t (*)(uint64_t))type metadata accessor for Width, (uint64_t)&protocol conformance descriptor for UIFontWidth);
  result = sub_1852478E0(&qword_1EDD844B0, (uint64_t (*)(uint64_t))type metadata accessor for Width, (uint64_t)&unk_1866671AC);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_185793518()
{
  return sub_1852478E0((unint64_t *)&unk_1EDD844C0, (uint64_t (*)(uint64_t))type metadata accessor for Width, (uint64_t)&unk_186667180);
}

uint64_t sub_185793544()
{
  return MEMORY[0x1E0DEB1B0];
}

uint64_t sub_185793550(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1852478E0(&qword_1EDD8B110, (uint64_t (*)(uint64_t))type metadata accessor for Level, (uint64_t)&protocol conformance descriptor for UIWindowLevel);
  result = sub_1852478E0(&qword_1EDD844E0, (uint64_t (*)(uint64_t))type metadata accessor for Level, (uint64_t)&unk_1866670DC);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1857935AC()
{
  return sub_1852478E0((unint64_t *)&unk_1EDD844F0, (uint64_t (*)(uint64_t))type metadata accessor for Level, (uint64_t)&unk_1866670B0);
}

uint64_t sub_1857935D8()
{
  return sub_1852478E0(&qword_1EDD814F8, (uint64_t (*)(uint64_t))type metadata accessor for UIAccessibilityTraits, (uint64_t)&unk_186667074);
}

uint64_t sub_185793604()
{
  return sub_1852478E0(&qword_1EDD81500, (uint64_t (*)(uint64_t))type metadata accessor for UIAccessibilityTraits, (uint64_t)&protocol conformance descriptor for UIAccessibilityTraits);
}

uint64_t sub_185793630()
{
  return sub_1852478E0(&qword_1EDD81998, (uint64_t (*)(uint64_t))type metadata accessor for UIAccessibilityTraits, (uint64_t)&unk_186667048);
}

uint64_t sub_18579365C()
{
  return sub_1852478E0(&qword_1EDD819A0, (uint64_t (*)(uint64_t))type metadata accessor for UIAccessibilityTraits, (uint64_t)&protocol conformance descriptor for UIAccessibilityTraits);
}

uint64_t sub_185793690()
{
  return 32;
}

__n128 sub_18579369C(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

id sub_1857936A8@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_18578FAE0();
  *a1 = result;
  return result;
}

id sub_1857936D0(uint64_t *a1)
{
  return sub_18578FAF8(*a1);
}

uint64_t sub_1857936F4()
{
  return 32;
}

__n128 sub_185793700(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.__allocating_init(collectionView:cellProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v2) + 0xA0);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1855E5AFC;
  return v9(a1, a2);
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.applySnapshotUsingReloadData(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v1) + 0xB0);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1855E5AFC;
  return v7(a1);
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.index(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.collectionView(_:viewForSupplementaryElementOfKind:at:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource._expandCollapseAnimationContext(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.collectionView(_:moveItemAt:to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.indexTitles(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.collectionView(_:indexPathForIndexTitle:at:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.description()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t method lookup function for UITableViewDiffableDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.__allocating_init(tableView:cellProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  int *v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v6 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x88);
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)v6 + *v6);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1855E5AFC;
  return v9(a1, a2);
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.applySnapshotUsingReloadData(_:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.applySnapshotUsingReloadData(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *(int **)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x98);
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1855E597C;
  return v7(a1);
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.snapshot()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.sectionIdentifier(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.index(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.itemIdentifier(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.defaultRowAnimation.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.defaultRowAnimation.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.defaultRowAnimation.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.numberOfSections(in:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.tableView(_:numberOfRowsInSection:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.tableView(_:cellForRowAt:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.tableView(_:titleForHeaderInSection:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.tableView(_:titleForFooterInSection:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.tableView(_:canEditRowAt:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.tableView(_:commit:forRowAt:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.tableView(_:canMoveRowAt:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.tableView(_:moveRowAt:to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.sectionIndexTitles(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.tableView(_:sectionForSectionIndexTitle:at:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of UITableViewDiffableDataSource.description()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t sub_185793CAC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_185793CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void (*v5)(uint64_t *__return_ptr, uint64_t *, _QWORD *, uint64_t);
  uint64_t v7;
  _QWORD v8[2];
  uint64_t v9;

  v5 = *(void (**)(uint64_t *__return_ptr, uint64_t *, _QWORD *, uint64_t))(v4 + 16);
  v8[1] = a3;
  v9 = a1;
  v8[0] = a2;
  v5(&v7, &v9, v8, a4);
  return v7;
}

uint64_t sub_185793D14@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t))(v4 + 16))(*a1, *a2, a2[1], a3);
  *a4 = result;
  return result;
}

uint64_t sub_185793D4C()
{
  return swift_deallocObject();
}

uint64_t sub_185793D5C()
{
  return swift_deallocObject();
}

uint64_t sub_185793D6C()
{
  return swift_deallocObject();
}

uint64_t sub_185793D7C()
{
  return swift_deallocObject();
}

uint64_t sub_185793D8C()
{
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD8B200);
  return swift_dynamicCast();
}

unint64_t sub_185793DEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDD8B210[0];
  if (!qword_1EDD8B210[0])
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EDD8B208);
    result = MEMORY[0x186DC9F28](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, qword_1EDD8B210);
  }
  return result;
}

uint64_t sub_185793E38@<X0>(uint64_t *a1@<X8>)
{
  return sub_1857931A4(a1);
}

uint64_t sub_185793ED0(_QWORD *a1)
{
  return sub_18578C8D8(a1);
}

uint64_t sub_185793EF0(_QWORD *a1)
{
  return sub_18578CC74(a1);
}

uint64_t sub_185793F04()
{
  return swift_initClassMetadata2();
}

void sub_185793F54(uint64_t a1)
{
  swift_allocObject();
  sub_1857941B4(a1);
}

uint64_t sub_185793F94()
{
  uint64_t v0;

  return v0;
}

BOOL sub_185793FA8(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  _BOOL8 v4;
  uint64_t v6[5];

  v3 = (*(uint64_t (**)(void))(a1 + 112))();
  __swift_project_boxed_opaque_existential_0Tm(a2, a2[3]);
  v6[3] = swift_getAssociatedTypeWitness();
  v6[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_0(v6);
  sub_186507618();
  v4 = v3 == sub_18650745C();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v6);
  return v4;
}

uint64_t sub_185794098(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 112) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 152), a1);
  return v2;
}

uint64_t sub_1857940EC()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 112) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 152));
  return swift_deallocClassInstance();
}

unint64_t sub_185794128()
{
  uint64_t v0;
  uint64_t v1;

  sub_186507C30();
  v1 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(v0 + 80))(v1);
  sub_186507564();
  swift_bridgeObjectRelease();
  sub_186507564();
  return 0xD000000000000019;
}

void sub_1857941B4(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  type metadata accessor for UIAnyModifierComponent.Box();
}

_QWORD *sub_185794254()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  *(_QWORD *)(v7 - 288) = v6;
  *(_QWORD *)(v7 - 216) = v5;
  v8(v2, v5, v3);
  *(_QWORD *)(v7 - 272) = v8;
  v9 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v9 + 112) - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)v9 + 152), v2);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v1;
  *(_QWORD *)(v10 + 24) = v9;
  v0[2] = sub_1857954A4;
  v0[3] = v10;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v1;
  *(_QWORD *)(v11 + 24) = v9;
  *(_QWORD *)(v7 - 224) = v1;
  v0[6] = sub_1857954AC;
  v0[7] = v11;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v1;
  *(_QWORD *)(v12 + 24) = v9;
  *(_QWORD *)(v7 - 264) = v9;
  v0[4] = sub_1857954B4;
  v0[5] = v12;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v1;
  *(_QWORD *)(v13 + 24) = v9;
  v0[8] = sub_1857954BC;
  v0[9] = v13;
  v14 = v2;
  *(_QWORD *)(v7 - 296) = v2;
  v8(v2, v5, v3);
  v15 = *(unsigned __int8 *)(v6 + 80);
  v16 = (v15 + 96) & ~v15;
  *(_QWORD *)(v7 - 232) = v16 + v4;
  *(_QWORD *)(v7 - 280) = v16;
  *(_QWORD *)(v7 - 240) = v15 | 7;
  v17 = (_QWORD *)swift_allocObject();
  v19 = *(_QWORD *)(v7 - 208);
  v18 = *(_QWORD *)(v7 - 200);
  v17[2] = v18;
  v17[3] = v19;
  v20 = *(_QWORD *)(v7 - 256);
  v22 = *(_QWORD *)(v7 - 176);
  v21 = *(_QWORD *)(v7 - 168);
  v17[4] = *(_QWORD *)(v7 - 248);
  v17[5] = v21;
  v23 = v3;
  v17[6] = v3;
  v25 = *(_QWORD *)(v7 - 192);
  v24 = *(_QWORD *)(v7 - 184);
  v17[7] = v24;
  v17[8] = v25;
  v17[9] = v20;
  v17[10] = v22;
  v17[11] = *(_QWORD *)(v7 - 224);
  v26 = (char *)v17 + v16;
  v27 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 288) + 32);
  *(_QWORD *)(v7 - 288) = v27;
  v28 = v23;
  v27(v26, v14);
  v0[10] = sub_1857954C8;
  v0[11] = v17;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v7 - 272))(v14, *(_QWORD *)(v7 - 216), v28);
  v29 = (char *)swift_allocObject();
  *((_QWORD *)v29 + 2) = v18;
  *((_QWORD *)v29 + 3) = v19;
  v30 = *(_QWORD *)(v7 - 248);
  v31 = *(_QWORD *)(v7 - 168);
  *((_QWORD *)v29 + 4) = v30;
  *((_QWORD *)v29 + 5) = v31;
  *((_QWORD *)v29 + 6) = v28;
  *((_QWORD *)v29 + 7) = v24;
  *((_QWORD *)v29 + 8) = v25;
  *((_QWORD *)v29 + 9) = v20;
  v32 = *(_QWORD *)(v7 - 280);
  v33 = *(_QWORD *)(v7 - 224);
  *((_QWORD *)v29 + 10) = v22;
  *((_QWORD *)v29 + 11) = v33;
  v34 = *(char **)(v7 - 296);
  v35 = *(void (**)(char *, char *, uint64_t))(v7 - 288);
  v35(&v29[v32], v34, v28);
  v0[12] = sub_18579551C;
  v0[13] = v29;
  v35(v34, *(char **)(v7 - 216), v28);
  v36 = v35;
  v37 = (char *)swift_allocObject();
  v38 = *(_QWORD *)(v7 - 208);
  *((_QWORD *)v37 + 2) = *(_QWORD *)(v7 - 200);
  *((_QWORD *)v37 + 3) = v38;
  *((_QWORD *)v37 + 4) = v30;
  *((_QWORD *)v37 + 5) = v31;
  v39 = *(_QWORD *)(v7 - 184);
  *((_QWORD *)v37 + 6) = v28;
  *((_QWORD *)v37 + 7) = v39;
  *((_QWORD *)v37 + 8) = *(_QWORD *)(v7 - 192);
  *((_QWORD *)v37 + 9) = v20;
  *((_QWORD *)v37 + 10) = *(_QWORD *)(v7 - 176);
  *((_QWORD *)v37 + 11) = v33;
  v36(&v37[v32], v34, v28);
  v0[14] = sub_1857955C8;
  v0[15] = v37;
  swift_retain_n();
  return v0;
}

uint64_t sub_185794524(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *boxed_opaque_existential_0;
  uint64_t AssociatedConformanceWitness;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[3];
  uint64_t v25;
  uint64_t v26;

  v22 = a2;
  v23 = a1;
  v21 = a3;
  v4 = *a3;
  v5 = *(_QWORD *)(a4 + 16);
  v6 = *(_QWORD *)(*a3 + 112);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_186507AA4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - v10;
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v21 - v14;
  v17 = *(_QWORD *)(v4 + 120);
  v25 = *(_QWORD *)(v4 + 80);
  v16 = v25;
  v26 = v17;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(boxed_opaque_existential_0, v23, v16);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(v24, AssociatedTypeWitness, AssociatedConformanceWitness);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, AssociatedTypeWitness) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v11, AssociatedTypeWitness);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v15, v22, v6, v5);
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, AssociatedTypeWitness);
}

uint64_t sub_1857946F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  char v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int v36;
  char *v37;
  int v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  void (*v51)(char *, uint64_t, uint64_t, __n128);
  uint64_t v52;
  uint64_t v53;

  v52 = a4;
  v53 = a1;
  v46 = a2;
  v5 = *a2;
  v6 = *(_QWORD *)(*a2 + 96);
  v7 = sub_186507AA4();
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  MEMORY[0x1E0C80A78](v7);
  v50 = (char *)&v41 - v8;
  v9 = *(_QWORD *)(v5 + 112);
  v47 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v10);
  v45 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v13 = sub_186507AA4();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v41 - v15;
  v17 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v18);
  v48 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v41 - v21;
  v23 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v24);
  v44 = (char *)&v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v41 - v28;
  v51 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16);
  v51(v22, v53, v6, v27);
  v30 = swift_dynamicCast();
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  if ((v30 & 1) != 0)
  {
    v31(v16, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v29, v16, AssociatedTypeWitness);
    v32 = (uint64_t)v46 + *(_QWORD *)(*v46 + 152);
    swift_beginAccess();
    v33 = v47;
    v34 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v45, v32, v9);
    (*(void (**)(char *, uint64_t))(v49 + 40))(v29, v9);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v9);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v29, AssociatedTypeWitness);
    v35 = v50;
    v36 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v35, v36 ^ 1u, 1, v6);
    v37 = v48;
    ((void (*)(char *, uint64_t, uint64_t))v51)(v48, v53, v6);
    v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v35, 1, v6);
    v39 = v52;
    if (v38 == 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v52, v37, v6);
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v35, v43);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v37, v6);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(v39, v35, v6);
    }
  }
  else
  {
    v31(v16, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v51)(v52, v53, v6);
  }
}

uint64_t sub_185794A7C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a2;
  v5 = *a3;
  v6 = *(_QWORD *)(a4 + 16);
  v25 = *(_QWORD *)(*a3 + 112);
  v26 = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_186507AA4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - v10;
  v12 = *(_QWORD *)(v5 + 96);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v25 - v19;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v21 + 16))(v15, a1, v12, v18);
  v22 = swift_dynamicCast();
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  if ((v22 & 1) != 0)
  {
    v23(v11, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v20, v11, AssociatedTypeWitness);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 64))(v20, v27, v25);
    swift_endAccess();
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v20, AssociatedTypeWitness);
  }
  else
  {
    v23(v11, 1, 1, AssociatedTypeWitness);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_185794C50@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  char *v29;
  char v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int v36;
  char *v37;
  int v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  void (*v51)(char *, uint64_t, uint64_t, __n128);
  uint64_t v52;
  uint64_t v53;

  v53 = a4;
  v46 = a2;
  v6 = *a2;
  v7 = *(_QWORD *)(*a2 + 104);
  v8 = sub_186507AA4();
  v41 = *(_QWORD *)(v8 - 8);
  v42 = v8;
  MEMORY[0x1E0C80A78](v8);
  v50 = (char *)&v41 - v9;
  v10 = *(_QWORD *)(v6 + 112);
  v47 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v11);
  v45 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v43 = sub_186507AA4();
  v14 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v16 = (char *)&v41 - v15;
  v17 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v18);
  v48 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v41 - v21;
  v23 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](v24);
  v44 = (char *)&v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v41 - v28;
  v51 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16);
  v52 = a1;
  v51(v22, a1, v7, v27);
  v30 = swift_dynamicCast();
  v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  if ((v30 & 1) != 0)
  {
    v31(v16, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v29, v16, AssociatedTypeWitness);
    v32 = (uint64_t)v46 + *(_QWORD *)(*v46 + 152);
    swift_beginAccess();
    v33 = v47;
    v34 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v45, v32, v10);
    (*(void (**)(char *, uint64_t))(v49 + 48))(v29, v10);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v10);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v29, AssociatedTypeWitness);
    v35 = v50;
    v36 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v35, v36 ^ 1u, 1, v7);
    v37 = v48;
    ((void (*)(char *, uint64_t, uint64_t))v51)(v48, v52, v7);
    v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v35, 1, v7);
    v39 = v53;
    if (v38 == 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v53, v37, v7);
      return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v35, v42);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v37, v7);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(v39, v35, v7);
    }
  }
  else
  {
    v31(v16, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v43);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v51)(v53, v52, v7);
  }
}

uint64_t sub_185794FD8(uint64_t a1)
{
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, __n128))(v3 + 16))((char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  return sub_18650751C();
}

uint64_t sub_185795044@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = swift_getAssociatedTypeWitness();
  a1[4] = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  __swift_allocate_boxed_opaque_existential_0(a1);
  return sub_186507618();
}

uint64_t sub_1857950E4()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v3 = (char *)&v6 - v2;
  sub_186507618();
  swift_getAssociatedConformanceWitness();
  v4 = sub_18650745C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, AssociatedTypeWitness);
  return v4;
}

uint64_t sub_1857951CC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_1857951EC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_18579520C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 64))();
}

uint64_t sub_18579522C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_185795278()
{
  sub_18579522C();
  return swift_deallocClassInstance();
}

void type metadata accessor for UIAnyModifierComponent()
{
  JUMPOUT(0x186DC9E8CLL);
}

uint64_t sub_1857952A4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void type metadata accessor for UIAnyModifierComponent.Box()
{
  JUMPOUT(0x186DC9E8CLL);
}

uint64_t sub_185795320()
{
  return sub_1857951CC();
}

uint64_t sub_185795340()
{
  return sub_18579520C();
}

unint64_t sub_185795360()
{
  return sub_185794128();
}

uint64_t sub_185795380()
{
  return sub_185228348();
}

uint64_t sub_1857953A0()
{
  return sub_1857951EC();
}

void sub_1857953C0()
{
  type metadata accessor for UIAnyModifierComponent();
}

uint64_t sub_1857953FC()
{
  uint64_t *v0;
  uint64_t result;

  result = sub_186507C6C();
  *v0 = result;
  return result;
}

uint64_t sub_18579541C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 136);
}

uint64_t sub_185795424(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = MEMORY[0x186DC9F28](&unk_186677430);
  result = MEMORY[0x186DC9F28](&unk_1866774AC, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_185795468(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 112);
}

uint64_t sub_185795470(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 128);
}

uint64_t sub_185795478(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 120);
}

uint64_t sub_185795480()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1857954A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_185794524(a1, a2, *(uint64_t **)(v2 + 24), *(_QWORD *)(v2 + 16));
}

uint64_t sub_1857954AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1857946F4(a1, *(uint64_t **)(v2 + 24), *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1857954B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_185794A7C(a1, a2, *(uint64_t **)(v2 + 24), *(_QWORD *)(v2 + 16));
}

uint64_t sub_1857954BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_185794C50(a1, *(uint64_t **)(v2 + 24), *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1857954C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 48) - 8) + 80);
  return sub_185794FD8(v0 + ((v1 + 96) & ~v1));
}

uint64_t sub_18579551C@<X0>(uint64_t *a1@<X8>)
{
  return sub_185795044(a1);
}

uint64_t objectdestroy_11Tm()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 48) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 48) - 8) + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 48) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1857955C8()
{
  return sub_1857950E4();
}

uint64_t (*UICollectionViewCell.configurationUpdateHandler.getter())()
{
  void *v0;
  uint64_t (*result)();
  uint64_t (*v2)();
  uint64_t v3;
  uint64_t v4;

  result = (uint64_t (*)())objc_msgSend(v0, sel_configurationUpdateHandler);
  if (result)
  {
    v2 = result;
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = sub_18579A5DC;
    *(_QWORD *)(v4 + 24) = v3;
    return sub_18579A5E0;
  }
  return result;
}

_QWORD *sub_1857956B4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  result = objc_msgSend(*a1, sel_configurationUpdateHandler);
  if (result)
  {
    v4 = result;
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v4;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = sub_18579A5DC;
    *(_QWORD *)(v6 + 24) = v5;
    result = (_QWORD *)swift_allocObject();
    result[2] = sub_18579A5E0;
    result[3] = v6;
    v7 = sub_18579A5C0;
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = result;
  return result;
}

id sub_18579576C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_18579A5EC;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_18518D708(v1);
  return UICollectionViewCell.configurationUpdateHandler.setter((uint64_t)v4, v3);
}

void (*UICollectionViewCell.configurationUpdateHandler.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  void *v1;
  void *v2;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = v1;
  v4 = malloc(0x48uLL);
  *a1 = v4;
  v4[8] = v2;
  v5 = objc_msgSend(v2, sel_configurationUpdateHandler);
  if (v5)
  {
    v6 = v5;
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    v5 = (_QWORD *)swift_allocObject();
    v5[2] = sub_18579A5DC;
    v5[3] = v7;
    v8 = sub_18579A5E0;
  }
  else
  {
    v8 = 0;
  }
  v4[6] = v8;
  v4[7] = v5;
  return sub_1857958A8;
}

void sub_1857958A8(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v4 = *(void **)(*(_QWORD *)a1 + 64);
  if ((a2 & 1) != 0)
  {
    if (v3)
    {
      v5 = v2[7];
      v6 = swift_allocObject();
      *(_QWORD *)(v6 + 16) = v3;
      *(_QWORD *)(v6 + 24) = v5;
      v2[4] = sub_1851C78D4;
      v2[5] = v6;
      *v2 = MEMORY[0x1E0C809B0];
      v2[1] = 1107296256;
      v2[2] = sub_1851C78D0;
      v2[3] = &block_descriptor_13_5;
      v7 = _Block_copy(v2);
      swift_retain_n();
      swift_release();
      objc_msgSend(v4, sel_setConfigurationUpdateHandler_, v7);
      _Block_release(v7);
      sub_18518D718(v3);
    }
    else
    {
      objc_msgSend(*(id *)(*(_QWORD *)a1 + 64), sel_setConfigurationUpdateHandler_, 0);
    }
    v11 = v2[6];
  }
  else
  {
    if (!v3)
    {
      objc_msgSend(*(id *)(*(_QWORD *)a1 + 64), sel_setConfigurationUpdateHandler_, 0);
      goto LABEL_10;
    }
    v8 = v2[7];
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v3;
    *(_QWORD *)(v9 + 24) = v8;
    v2[4] = sub_1851C78D4;
    v2[5] = v9;
    *v2 = MEMORY[0x1E0C809B0];
    v2[1] = 1107296256;
    v2[2] = sub_1851C78D0;
    v2[3] = &block_descriptor_20_5;
    v10 = _Block_copy(v2);
    swift_retain();
    swift_release();
    objc_msgSend(v4, sel_setConfigurationUpdateHandler_, v10);
    _Block_release(v10);
    v11 = v3;
  }
  sub_18518D718(v11);
LABEL_10:
  free(v2);
}

unint64_t _sSo20UICollectionViewCellC5UIKitE18configurationStateAC019UICellConfigurationF0Vvg_0@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  unint64_t result;
  void *v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  unsigned __int16 v28;
  char v29;
  char v30;
  uint64_t v31;
  __int128 v32;
  char v33;

  result = (unint64_t)objc_msgSend(v1, sel__configurationState);
  if (result)
  {
    v4 = (void *)result;
    static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)((void *)result, (uint64_t)&v18);

    v5 = v19;
    v6 = v20;
    v7 = v21;
    v8 = v22;
    v9 = v23;
    v10 = v24;
    v11 = v25;
    v12 = v26;
    v13 = v27;
    result = v28;
    v14 = v29;
    v15 = v30;
    v16 = v31;
    v17 = v33;
    *(_QWORD *)a1 = v18;
    *(_BYTE *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 9) = v6;
    *(_BYTE *)(a1 + 10) = v7;
    *(_BYTE *)(a1 + 11) = v8;
    *(_BYTE *)(a1 + 12) = v9;
    *(_BYTE *)(a1 + 13) = v10;
    *(_BYTE *)(a1 + 14) = v11;
    *(_BYTE *)(a1 + 15) = v12;
    *(_BYTE *)(a1 + 16) = v13;
    *(_WORD *)(a1 + 17) = result;
    *(_BYTE *)(a1 + 19) = v14;
    *(_BYTE *)(a1 + 20) = v15;
    *(_QWORD *)(a1 + 24) = v16;
    *(_OWORD *)(a1 + 32) = v32;
    *(_BYTE *)(a1 + 48) = v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void (*UITableViewCell.configurationUpdateHandler.getter())(uint64_t a1, uint64_t a2)
{
  void *v0;
  void (*result)(uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  result = (void (*)(uint64_t, uint64_t))objc_msgSend(v0, sel_configurationUpdateHandler);
  if (result)
  {
    v2 = result;
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = sub_18579A5DC;
    *(_QWORD *)(v4 + 24) = v3;
    return sub_185798CC8;
  }
  return result;
}

_QWORD *sub_185795BC8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  result = objc_msgSend(*a1, sel_configurationUpdateHandler);
  if (result)
  {
    v4 = result;
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v4;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = sub_18579A5DC;
    *(_QWORD *)(v6 + 24) = v5;
    result = (_QWORD *)swift_allocObject();
    result[2] = sub_18579A5E0;
    result[3] = v6;
    v7 = sub_1856DC45C;
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = result;
  return result;
}

id sub_185795C80(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_1856DC42C;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_18518D708(v1);
  return UITableViewCell.configurationUpdateHandler.setter((uint64_t)v4, v3);
}

id UITableViewCell.configurationUpdateHandler.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  void *v7;
  _QWORD v9[6];

  v3 = v2;
  if (!a1)
    return objc_msgSend(v2, sel_setConfigurationUpdateHandler_, 0);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v9[4] = sub_1852A8DEC;
  v9[5] = v6;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1851C78D0;
  v9[3] = &block_descriptor_40_5;
  v7 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_setConfigurationUpdateHandler_, v7);
  _Block_release(v7);
  return (id)sub_18518D718(a1);
}

void sub_185795E00(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, id))
{
  id v5;

  v5 = (id)sub_1850F22DC();
  a3(a1, v5);

}

void (*UITableViewCell.configurationUpdateHandler.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  void *v1;
  void *v2;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = v1;
  v4 = malloc(0x48uLL);
  *a1 = v4;
  v4[8] = v2;
  v5 = objc_msgSend(v2, sel_configurationUpdateHandler);
  if (v5)
  {
    v6 = v5;
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    v5 = (_QWORD *)swift_allocObject();
    v5[2] = sub_18579A5DC;
    v5[3] = v7;
    v8 = sub_18579A5E0;
  }
  else
  {
    v8 = 0;
  }
  v4[6] = v8;
  v4[7] = v5;
  return sub_185795F90;
}

void sub_185795F90(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v4 = *(void **)(*(_QWORD *)a1 + 64);
  if ((a2 & 1) != 0)
  {
    if (v3)
    {
      v5 = v2[7];
      v6 = swift_allocObject();
      *(_QWORD *)(v6 + 16) = v3;
      *(_QWORD *)(v6 + 24) = v5;
      v2[4] = sub_1851C78D4;
      v2[5] = v6;
      *v2 = MEMORY[0x1E0C809B0];
      v2[1] = 1107296256;
      v2[2] = sub_1851C78D0;
      v2[3] = &block_descriptor_47_0;
      v7 = _Block_copy(v2);
      swift_retain_n();
      swift_release();
      objc_msgSend(v4, sel_setConfigurationUpdateHandler_, v7);
      _Block_release(v7);
      sub_18518D718(v3);
    }
    else
    {
      objc_msgSend(*(id *)(*(_QWORD *)a1 + 64), sel_setConfigurationUpdateHandler_, 0);
    }
    v11 = v2[6];
  }
  else
  {
    if (!v3)
    {
      objc_msgSend(*(id *)(*(_QWORD *)a1 + 64), sel_setConfigurationUpdateHandler_, 0);
      goto LABEL_10;
    }
    v8 = v2[7];
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v3;
    *(_QWORD *)(v9 + 24) = v8;
    v2[4] = sub_1851C78D4;
    v2[5] = v9;
    *v2 = MEMORY[0x1E0C809B0];
    v2[1] = 1107296256;
    v2[2] = sub_1851C78D0;
    v2[3] = &block_descriptor_54_2;
    v10 = _Block_copy(v2);
    swift_retain();
    swift_release();
    objc_msgSend(v4, sel_setConfigurationUpdateHandler_, v10);
    _Block_release(v10);
    v11 = v3;
  }
  sub_18518D718(v11);
LABEL_10:
  free(v2);
}

void UITableViewHeaderFooterView.configurationState.getter(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  __int128 v19;
  char v20;

  v3 = objc_msgSend(v1, sel__configurationState);
  if (v3)
  {
    sub_1851E8F0C(v3, (uint64_t)&v12);
    v4 = v13;
    v5 = v14;
    v6 = v15;
    v7 = v16;
    v8 = v17;
    v9 = v18;
    v10 = v20;
    v11 = v19;
    *(_QWORD *)a1 = v12;
    *(_BYTE *)(a1 + 8) = v4;
    *(_BYTE *)(a1 + 9) = v5;
    *(_BYTE *)(a1 + 10) = v6;
    *(_BYTE *)(a1 + 11) = v7;
    *(_BYTE *)(a1 + 12) = v8;
    *(_QWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 24) = v11;
    *(_BYTE *)(a1 + 40) = v10;
  }
  else
  {
    __break(1u);
  }
}

void __swiftcall UIViewConfigurationState._bridgeToObjectiveC()(UIViewConfigurationState *__return_ptr retstr)
{
  sub_1851E94B8();
}

void static UIViewConfigurationState._unconditionallyBridgeFromObjectiveC(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  __int128 v18;
  char v19;

  if (a1)
  {
    sub_1851E8F0C(a1, (uint64_t)&v11);
    v3 = v12;
    v4 = v13;
    v5 = v14;
    v6 = v15;
    v7 = v16;
    v8 = v17;
    v9 = v19;
    v10 = v18;
    *(_QWORD *)a2 = v11;
    *(_BYTE *)(a2 + 8) = v3;
    *(_BYTE *)(a2 + 9) = v4;
    *(_BYTE *)(a2 + 10) = v5;
    *(_BYTE *)(a2 + 11) = v6;
    *(_BYTE *)(a2 + 12) = v7;
    *(_QWORD *)(a2 + 16) = v8;
    *(_OWORD *)(a2 + 24) = v10;
    *(_BYTE *)(a2 + 40) = v9;
  }
  else
  {
    sub_186507C30();
    swift_bridgeObjectRelease();
    sub_1851F9080(0, &qword_1EDD8B318);
    sub_186508260();
    sub_186507564();
    swift_bridgeObjectRelease();
    sub_186507564();
    sub_186507564();
    sub_186507E04();
    __break(1u);
  }
}

void (*UITableViewHeaderFooterView.configurationUpdateHandler.getter())(uint64_t a1, uint64_t a2)
{
  void *v0;
  void (*result)(uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  result = (void (*)(uint64_t, uint64_t))objc_msgSend(v0, sel_configurationUpdateHandler);
  if (result)
  {
    v2 = result;
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v2;
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = sub_185711FD0;
    *(_QWORD *)(v4 + 24) = v3;
    return sub_185798CE0;
  }
  return result;
}

_QWORD *sub_185796434@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD *);

  result = objc_msgSend(*a1, sel_configurationUpdateHandler);
  if (result)
  {
    v4 = result;
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v4;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = sub_18579A5DC;
    *(_QWORD *)(v6 + 24) = v5;
    result = (_QWORD *)swift_allocObject();
    result[2] = sub_18579A5E8;
    result[3] = v6;
    v7 = sub_1856DC45C;
  }
  else
  {
    v7 = 0;
  }
  *a2 = v7;
  a2[1] = result;
  return result;
}

id sub_1857964EC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_1856DC42C;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_18518D708(v1);
  return UITableViewHeaderFooterView.configurationUpdateHandler.setter((uint64_t)v4, v3);
}

id UITableViewHeaderFooterView.configurationUpdateHandler.setter(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  void *v7;
  _QWORD v9[6];

  v3 = v2;
  if (!a1)
    return objc_msgSend(v2, sel_setConfigurationUpdateHandler_, 0);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v9[4] = sub_185798CE8;
  v9[5] = v6;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1851C78D0;
  v9[3] = &block_descriptor_74;
  v7 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_setConfigurationUpdateHandler_, v7);
  _Block_release(v7);
  return (id)sub_18518D718(a1);
}

void sub_18579666C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, void *))
{
  void *v5;
  id v6;

  sub_1851E94B8();
  v6 = v5;
  a3(a1, v5);

}

void sub_185796708(uint64_t a1, void *a2, void (*a3)(uint64_t, _QWORD *))
{
  void *v5;
  void *v6;
  _QWORD v7[5];

  sub_1851E8F0C(a2, (uint64_t)v7);
  v5 = (void *)v7[0];
  v6 = (void *)v7[3];
  a3(a1, v7);
  swift_bridgeObjectRelease();

}

void (*UITableViewHeaderFooterView.configurationUpdateHandler.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  void *v1;
  void *v2;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  v2 = v1;
  v4 = malloc(0x48uLL);
  *a1 = v4;
  v4[8] = v2;
  v5 = objc_msgSend(v2, sel_configurationUpdateHandler);
  if (v5)
  {
    v6 = v5;
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    v5 = (_QWORD *)swift_allocObject();
    v5[2] = sub_18579A5DC;
    v5[3] = v7;
    v8 = sub_18579A5E8;
  }
  else
  {
    v8 = 0;
  }
  v4[6] = v8;
  v4[7] = v5;
  return sub_185796878;
}

void sub_185796878(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v4 = *(void **)(*(_QWORD *)a1 + 64);
  if ((a2 & 1) != 0)
  {
    if (v3)
    {
      v5 = v2[7];
      v6 = swift_allocObject();
      *(_QWORD *)(v6 + 16) = v3;
      *(_QWORD *)(v6 + 24) = v5;
      v2[4] = sub_18579A5E4;
      v2[5] = v6;
      *v2 = MEMORY[0x1E0C809B0];
      v2[1] = 1107296256;
      v2[2] = sub_1851C78D0;
      v2[3] = &block_descriptor_81;
      v7 = _Block_copy(v2);
      swift_retain_n();
      swift_release();
      objc_msgSend(v4, sel_setConfigurationUpdateHandler_, v7);
      _Block_release(v7);
      sub_18518D718(v3);
    }
    else
    {
      objc_msgSend(*(id *)(*(_QWORD *)a1 + 64), sel_setConfigurationUpdateHandler_, 0);
    }
    v11 = v2[6];
  }
  else
  {
    if (!v3)
    {
      objc_msgSend(*(id *)(*(_QWORD *)a1 + 64), sel_setConfigurationUpdateHandler_, 0);
      goto LABEL_10;
    }
    v8 = v2[7];
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v3;
    *(_QWORD *)(v9 + 24) = v8;
    v2[4] = sub_18579A5E4;
    v2[5] = v9;
    *v2 = MEMORY[0x1E0C809B0];
    v2[1] = 1107296256;
    v2[2] = sub_1851C78D0;
    v2[3] = &block_descriptor_88;
    v10 = _Block_copy(v2);
    swift_retain();
    swift_release();
    objc_msgSend(v4, sel_setConfigurationUpdateHandler_, v10);
    _Block_release(v10);
    v11 = v3;
  }
  sub_18518D718(v11);
LABEL_10:
  free(v2);
}

id UIViewConfigurationState.traitCollection.getter()
{
  id *v0;

  return *v0;
}

void sub_185796A3C(void **a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;

  v3 = *a1;
  v4 = *(void **)a2;
  *(_QWORD *)a2 = *a1;
  sub_1851F9080(0, &qword_1EDD88C68);
  v6 = v3;
  if ((sub_186507A44() & 1) != 0)
  {

  }
  else
  {
    v5 = *(void **)(a2 + 24);

    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_BYTE *)(a2 + 40) = 1;
  }
}

void UIViewConfigurationState.traitCollection.setter(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;

  v2 = v1;
  v4 = *(void **)v2;
  *(_QWORD *)v2 = a1;
  sub_1851F9080(0, &qword_1EDD88C68);
  v6 = a1;
  if ((sub_186507A44() & 1) != 0)
  {

  }
  else
  {
    v5 = *(void **)(v2 + 24);

    *(_QWORD *)(v2 + 24) = 0;
    *(_QWORD *)(v2 + 32) = 0;
    *(_BYTE *)(v2 + 40) = 1;
  }
}

void (*UIViewConfigurationState.traitCollection.modify(void **a1))(uint64_t a1, char a2)
{
  void **v1;
  void *v2;
  id v3;

  v2 = *v1;
  *a1 = *v1;
  a1[1] = v1;
  v3 = v2;
  return sub_185796BCC;
}

void sub_185796BCC(uint64_t a1, char a2)
{
  id *v4;
  id v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;

  v5 = *(id *)a1;
  v4 = *(id **)(a1 + 8);
  v14 = *v4;
  *v4 = *(id *)a1;
  sub_1851F9080(0, &qword_1EDD88C68);
  v6 = v5;
  v7 = v6;
  if ((a2 & 1) != 0)
  {
    v8 = v6;
    if ((sub_186507A44() & 1) != 0)
    {

    }
    else
    {
      v10 = *(_QWORD *)(a1 + 8);
      v11 = *(void **)(v10 + 24);

      *(_QWORD *)(v10 + 24) = 0;
      *(_QWORD *)(v10 + 32) = 0;
      *(_BYTE *)(v10 + 40) = 1;
    }
    v9 = *(id *)a1;
    goto LABEL_8;
  }
  if ((sub_186507A44() & 1) != 0)
  {

    v9 = v14;
LABEL_8:

    return;
  }
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(void **)(v12 + 24);

  *(_QWORD *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = 0;
  *(_BYTE *)(v12 + 40) = 1;
}

uint64_t UIViewConfigurationState.isDisabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

void UIViewConfigurationState.isDisabled.setter(char a1)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + 8);
  *(_BYTE *)(v1 + 8) = a1;
  if (v2 != (a1 & 1))
  {

    *(_QWORD *)(v1 + 24) = 0;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
  }
}

void (*UIViewConfigurationState.isDisabled.modify(uint64_t a1))(unsigned __int8 *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 8);
  return sub_185796D34;
}

void sub_185796D34(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  v1 = *(_QWORD *)a1;
  v2 = a1[8];
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 8);
  *(_BYTE *)(*(_QWORD *)a1 + 8) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(v1 + 24) = 0;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
  }
}

uint64_t UIViewConfigurationState.isHighlighted.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

void UIViewConfigurationState.isHighlighted.setter(char a1)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + 9);
  *(_BYTE *)(v1 + 9) = a1;
  if (v2 != (a1 & 1))
  {

    *(_QWORD *)(v1 + 24) = 0;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
  }
}

void (*UIViewConfigurationState.isHighlighted.modify(uint64_t a1))(unsigned __int8 *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 9);
  return sub_185796DD4;
}

void sub_185796DD4(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  v1 = *(_QWORD *)a1;
  v2 = a1[8];
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 9);
  *(_BYTE *)(*(_QWORD *)a1 + 9) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(v1 + 24) = 0;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
  }
}

uint64_t UIViewConfigurationState.isSelected.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 10);
}

void UIViewConfigurationState.isSelected.setter(char a1)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + 10);
  *(_BYTE *)(v1 + 10) = a1;
  if (v2 != (a1 & 1))
  {

    *(_QWORD *)(v1 + 24) = 0;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
  }
}

void (*UIViewConfigurationState.isSelected.modify(uint64_t a1))(unsigned __int8 *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 10);
  return sub_185796E74;
}

void sub_185796E74(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  v1 = *(_QWORD *)a1;
  v2 = a1[8];
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 10);
  *(_BYTE *)(*(_QWORD *)a1 + 10) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(v1 + 24) = 0;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
  }
}

uint64_t UIViewConfigurationState.isFocused.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 11);
}

void UIViewConfigurationState.isFocused.setter(char a1)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + 11);
  *(_BYTE *)(v1 + 11) = a1;
  if (v2 != (a1 & 1))
  {

    *(_QWORD *)(v1 + 24) = 0;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
  }
}

void (*UIViewConfigurationState.isFocused.modify(uint64_t a1))(unsigned __int8 *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 11);
  return sub_185796F14;
}

void sub_185796F14(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  v1 = *(_QWORD *)a1;
  v2 = a1[8];
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 11);
  *(_BYTE *)(*(_QWORD *)a1 + 11) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(v1 + 24) = 0;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
  }
}

uint64_t UIViewConfigurationState.isPinned.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 12);
}

void UIViewConfigurationState.isPinned.setter(char a1)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + 12);
  *(_BYTE *)(v1 + 12) = a1;
  if (v2 != (a1 & 1))
  {

    *(_QWORD *)(v1 + 24) = 0;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
  }
}

void (*UIViewConfigurationState.isPinned.modify(uint64_t a1))(unsigned __int8 *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 12);
  return sub_185796FB4;
}

void sub_185796FB4(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  v1 = *(_QWORD *)a1;
  v2 = a1[8];
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 12);
  *(_BYTE *)(*(_QWORD *)a1 + 12) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(v1 + 24) = 0;
    *(_QWORD *)(v1 + 32) = 0;
    *(_BYTE *)(v1 + 40) = 1;
  }
}

void UIViewConfigurationState.subscript.getter(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v7;

  v4 = *(_QWORD *)(v2 + 16);
  if (*(_QWORD *)(v4 + 16))
  {
    v7 = a1;
    v5 = sub_1850F6BB4(v7);
    if ((v6 & 1) != 0)
    {
      sub_1850F28CC(*(_QWORD *)(v4 + 56) + 40 * v5, a2);
    }
    else
    {
      *(_QWORD *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
    }

  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
}

void sub_18579707C(void **a1@<X0>, void **a2@<X1>, uint64_t a3@<X8>)
{
  void *v4;
  void *v5;
  id v6;
  id v7;

  v4 = *a1;
  v5 = *a2;
  v6 = a1[3];
  v7 = v4;
  swift_bridgeObjectRetain();
  UIViewConfigurationState.subscript.getter(v5, a3);

  swift_bridgeObjectRelease();
}

uint64_t sub_185797138(uint64_t a1, uint64_t a2, void **a3)
{
  void *v4;
  void *v5;
  id v6;
  _BYTE v8[40];
  _BYTE v9[40];

  v4 = *a3;
  sub_185070E64(a1, (uint64_t)v9);
  v5 = *(void **)(a2 + 24);
  v6 = v4;

  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_BYTE *)(a2 + 40) = 1;
  sub_185070E64((uint64_t)v9, (uint64_t)v8);
  sub_185070EAC((uint64_t)v8, v6);
  return sub_185070E24((uint64_t)v9);
}

uint64_t UIViewConfigurationState.subscript.setter(uint64_t a1, void *a2)
{
  uint64_t v2;
  _BYTE v6[40];

  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 32) = 0;
  *(_BYTE *)(v2 + 40) = 1;
  sub_185070E64(a1, (uint64_t)v6);
  sub_185070EAC((uint64_t)v6, a2);
  return sub_185070E24(a1);
}

void (*UIViewConfigurationState.subscript.modify(_QWORD *a1, void *a2))(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  char v10;

  v5 = malloc(0x88uLL);
  v6 = (uint64_t)v5;
  *a1 = v5;
  v5[15] = a2;
  v5[16] = v2;
  v7 = *(_QWORD *)(v2 + 16);
  if (*(_QWORD *)(v7 + 16))
  {
    v8 = a2;
    v9 = sub_1850F6BB4(v8);
    if ((v10 & 1) != 0)
    {
      sub_1850F28CC(*(_QWORD *)(v7 + 56) + 40 * v9, v6);
    }
    else
    {
      *(_QWORD *)(v6 + 32) = 0;
      *(_OWORD *)v6 = 0u;
      *(_OWORD *)(v6 + 16) = 0u;
    }

  }
  else
  {
    v5[4] = 0;
    *(_OWORD *)v5 = 0u;
    *((_OWORD *)v5 + 1) = 0u;
  }
  return sub_1857972B4;
}

void sub_1857972B4(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;

  v2 = *a1;
  v3 = *a1 + 40;
  if ((a2 & 1) != 0)
  {
    v4 = *(void **)(v2 + 120);
    v5 = *(_QWORD *)(v2 + 128);
    sub_185070E64(*a1, v3);
    v6 = *(void **)(v5 + 24);
    v7 = v4;

    *(_QWORD *)(v5 + 24) = 0;
    *(_QWORD *)(v5 + 32) = 0;
    *(_BYTE *)(v5 + 40) = 1;
    sub_185070E64(v3, v2 + 80);
    sub_185070EAC(v2 + 80, v7);
    sub_185070E24(v3);
  }
  else
  {
    v8 = *(_QWORD *)(v2 + 128);
    v9 = *(void **)(v8 + 24);
    v10 = *(id *)(v2 + 120);

    *(_QWORD *)(v8 + 24) = 0;
    *(_QWORD *)(v8 + 32) = 0;
    *(_BYTE *)(v8 + 40) = 1;
    sub_185070E64(v2, v3);
    sub_185070EAC(v3, v10);
  }
  sub_185070E24(v2);
  free((void *)v2);
}

uint64_t UIViewConfigurationState.init(traitCollection:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a2 = result;
  *(_DWORD *)(a2 + 8) = 0;
  v2 = MEMORY[0x1E0DEE9E0];
  *(_BYTE *)(a2 + 12) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 16) = v2;
  *(_BYTE *)(a2 + 40) = 1;
  return result;
}

uint64_t UIViewConfigurationState.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(id *)v1;
  sub_186507A50();

  sub_186508104();
  sub_186508104();
  sub_186508104();
  sub_186508104();
  sub_186508104();
  swift_bridgeObjectRetain();
  sub_1856F69E0(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t UIViewConfigurationState.hashValue.getter()
{
  uint64_t *v0;
  char v1;
  char v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  __int128 v9[4];
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  __int128 v17;
  char v18;

  v1 = *((_BYTE *)v0 + 8);
  v2 = *((_BYTE *)v0 + 9);
  v3 = *((_BYTE *)v0 + 10);
  v4 = *((_BYTE *)v0 + 11);
  v5 = *((_BYTE *)v0 + 12);
  v6 = v0[2];
  v7 = *((_BYTE *)v0 + 40);
  v10 = *v0;
  v11 = v1;
  v12 = v2;
  v13 = v3;
  v14 = v4;
  v15 = v5;
  v16 = v6;
  v17 = *(_OWORD *)(v0 + 3);
  v18 = v7;
  sub_1865080EC();
  UIViewConfigurationState.hash(into:)(v9);
  return sub_186508134();
}

uint64_t sub_1857974EC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a2 = result;
  *(_DWORD *)(a2 + 8) = 0;
  v2 = MEMORY[0x1E0DEE9E0];
  *(_BYTE *)(a2 + 12) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 16) = v2;
  *(_BYTE *)(a2 + 40) = 1;
  return result;
}

void sub_185797514(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;

  v2 = v1;
  v4 = *(void **)v2;
  *(_QWORD *)v2 = a1;
  sub_1851F9080(0, &qword_1EDD88C68);
  v6 = a1;
  if ((sub_186507A44() & 1) != 0)
  {

  }
  else
  {
    v5 = *(void **)(v2 + 24);

    *(_QWORD *)(v2 + 24) = 0;
    *(_QWORD *)(v2 + 32) = 0;
    *(_BYTE *)(v2 + 40) = 1;
  }
}

uint64_t (*sub_1857975C0(void ***a1))()
{
  void **v2;

  v2 = (void **)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = UIViewConfigurationState.traitCollection.modify(v2);
  return sub_185590E70;
}

uint64_t sub_185797608(uint64_t a1, void *a2)
{
  uint64_t v2;
  _BYTE v6[40];

  *(_QWORD *)(v2 + 24) = 0;
  *(_QWORD *)(v2 + 32) = 0;
  *(_BYTE *)(v2 + 40) = 1;
  sub_185070E64(a1, (uint64_t)v6);
  sub_185070EAC((uint64_t)v6, a2);
  return sub_185070E24(a1);
}

uint64_t (*sub_185797670(_QWORD *a1, void *a2))()
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = UIViewConfigurationState.subscript.modify(v4, a2);
  return sub_185590E70;
}

uint64_t sub_1857976BC()
{
  uint64_t *v0;
  char v1;
  char v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  __int128 v9[4];
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  __int128 v17;
  char v18;

  v1 = *((_BYTE *)v0 + 8);
  v2 = *((_BYTE *)v0 + 9);
  v3 = *((_BYTE *)v0 + 10);
  v4 = *((_BYTE *)v0 + 11);
  v5 = *((_BYTE *)v0 + 12);
  v6 = v0[2];
  v7 = *((_BYTE *)v0 + 40);
  v10 = *v0;
  v11 = v1;
  v12 = v2;
  v13 = v3;
  v14 = v4;
  v15 = v5;
  v16 = v6;
  v17 = *(_OWORD *)(v0 + 3);
  v18 = v7;
  sub_1865080EC();
  UIViewConfigurationState.hash(into:)(v9);
  return sub_186508134();
}

uint64_t sub_185797748()
{
  uint64_t *v0;
  char v1;
  char v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  __int128 v9[4];
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  __int128 v17;
  char v18;

  v1 = *((_BYTE *)v0 + 8);
  v2 = *((_BYTE *)v0 + 9);
  v3 = *((_BYTE *)v0 + 10);
  v4 = *((_BYTE *)v0 + 11);
  v5 = *((_BYTE *)v0 + 12);
  v6 = v0[2];
  v7 = *((_BYTE *)v0 + 40);
  v10 = *v0;
  v11 = v1;
  v12 = v2;
  v13 = v3;
  v14 = v4;
  v15 = v5;
  v16 = v6;
  v17 = *(_OWORD *)(v0 + 3);
  v18 = v7;
  sub_1865080EC();
  UIViewConfigurationState.hash(into:)(v9);
  return sub_186508134();
}

BOOL static UICellConfigurationState.DragState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t UICellConfigurationState.DragState.hash(into:)()
{
  return sub_1865080F8();
}

void UICellConfigurationState.traitCollection.setter(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;

  v2 = v1;
  v4 = *(void **)v2;
  *(_QWORD *)v2 = a1;
  sub_1851F9080(0, &qword_1EDD88C68);
  v6 = a1;
  if ((sub_186507A44() & 1) != 0)
  {

  }
  else
  {
    v5 = *(void **)(v2 + 32);

    *(_QWORD *)(v2 + 32) = 0;
    *(_QWORD *)(v2 + 40) = 0;
    *(_BYTE *)(v2 + 48) = 1;
  }
}

void (*UICellConfigurationState.traitCollection.modify(void **a1))(uint64_t a1, char a2)
{
  void **v1;
  void *v2;
  id v3;

  v2 = *v1;
  *a1 = *v1;
  a1[1] = v1;
  v3 = v2;
  return sub_1856F5714;
}

uint64_t UICellConfigurationState.isDisabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

void UICellConfigurationState.isDisabled.setter(char a1)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + 8);
  *(_BYTE *)(v1 + 8) = a1;
  if (v2 != (a1 & 1))
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

void (*UICellConfigurationState.isDisabled.modify(uint64_t a1))(unsigned __int8 *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 8);
  return sub_185797954;
}

void sub_185797954(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  v1 = *(_QWORD *)a1;
  v2 = a1[8];
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 8);
  *(_BYTE *)(*(_QWORD *)a1 + 8) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

void UICellConfigurationState.isHighlighted.setter(char a1)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + 9);
  *(_BYTE *)(v1 + 9) = a1;
  if (v2 != (a1 & 1))
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

void (*UICellConfigurationState.isHighlighted.modify(uint64_t a1))(unsigned __int8 *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 9);
  return sub_1857979EC;
}

void sub_1857979EC(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  v1 = *(_QWORD *)a1;
  v2 = a1[8];
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 9);
  *(_BYTE *)(*(_QWORD *)a1 + 9) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

void UICellConfigurationState.isSelected.setter(char a1)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + 10);
  *(_BYTE *)(v1 + 10) = a1;
  if (v2 != (a1 & 1))
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

void (*UICellConfigurationState.isSelected.modify(uint64_t a1))(unsigned __int8 *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 10);
  return sub_185797A84;
}

void sub_185797A84(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  v1 = *(_QWORD *)a1;
  v2 = a1[8];
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 10);
  *(_BYTE *)(*(_QWORD *)a1 + 10) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

void UICellConfigurationState.isFocused.setter(char a1)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + 11);
  *(_BYTE *)(v1 + 11) = a1;
  if (v2 != (a1 & 1))
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

void (*UICellConfigurationState.isFocused.modify(uint64_t a1))(unsigned __int8 *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 11);
  return sub_185797B1C;
}

void sub_185797B1C(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  v1 = *(_QWORD *)a1;
  v2 = a1[8];
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 11);
  *(_BYTE *)(*(_QWORD *)a1 + 11) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

void UICellConfigurationState.isPinned.setter(char a1)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + 12);
  *(_BYTE *)(v1 + 12) = a1;
  if (v2 != (a1 & 1))
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

void (*UICellConfigurationState.isPinned.modify(uint64_t a1))(unsigned __int8 *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 12);
  return sub_185797BB4;
}

void sub_185797BB4(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  v1 = *(_QWORD *)a1;
  v2 = a1[8];
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 12);
  *(_BYTE *)(*(_QWORD *)a1 + 12) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

void UICellConfigurationState.isEditing.setter(char a1)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + 13);
  *(_BYTE *)(v1 + 13) = a1;
  if (v2 != (a1 & 1))
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

void (*UICellConfigurationState.isEditing.modify(uint64_t a1))(unsigned __int8 *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 13);
  return sub_185797C4C;
}

void sub_185797C4C(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  v1 = *(_QWORD *)a1;
  v2 = a1[8];
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 13);
  *(_BYTE *)(*(_QWORD *)a1 + 13) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

uint64_t UICellConfigurationState.isExpanded.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 14);
}

void UICellConfigurationState.isExpanded.setter(char a1)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + 14);
  *(_BYTE *)(v1 + 14) = a1;
  if (v2 != (a1 & 1))
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

void (*UICellConfigurationState.isExpanded.modify(uint64_t a1))(unsigned __int8 *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 14);
  return sub_185797CEC;
}

void sub_185797CEC(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  v1 = *(_QWORD *)a1;
  v2 = a1[8];
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 14);
  *(_BYTE *)(*(_QWORD *)a1 + 14) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

void UICellConfigurationState.isSwiped.setter(char a1)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + 15);
  *(_BYTE *)(v1 + 15) = a1;
  if (v2 != (a1 & 1))
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

void (*UICellConfigurationState.isSwiped.modify(uint64_t a1))(unsigned __int8 *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 15);
  return sub_185797D84;
}

void sub_185797D84(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  v1 = *(_QWORD *)a1;
  v2 = a1[8];
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 15);
  *(_BYTE *)(*(_QWORD *)a1 + 15) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

uint64_t UICellConfigurationState.isReordering.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

void UICellConfigurationState.isReordering.setter(char a1)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + 16);
  *(_BYTE *)(v1 + 16) = a1;
  if (v2 != (a1 & 1))
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

void (*UICellConfigurationState.isReordering.modify(uint64_t a1))(unsigned __int8 *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 16);
  return sub_185797E24;
}

void sub_185797E24(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  v1 = *(_QWORD *)a1;
  v2 = a1[8];
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 16);
  *(_BYTE *)(*(_QWORD *)a1 + 16) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

void UICellConfigurationState.cellDragState.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

void UICellConfigurationState.cellDragState.setter(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  v2 = *a1;
  v3 = *(unsigned __int8 *)(v1 + 17);
  *(_BYTE *)(v1 + 17) = v2;
  if (v3 != v2)
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

void (*UICellConfigurationState.cellDragState.modify(uint64_t a1))(unsigned __int8 *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 17);
  return sub_185797EC8;
}

void sub_185797EC8(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  v1 = *(_QWORD *)a1;
  v2 = a1[8];
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 17);
  *(_BYTE *)(*(_QWORD *)a1 + 17) = v2;
  if (v3 != v2)
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

void UICellConfigurationState.cellDropState.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 18);
}

void UICellConfigurationState.cellDropState.setter(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  v2 = *a1;
  v3 = *(unsigned __int8 *)(v1 + 18);
  *(_BYTE *)(v1 + 18) = v2;
  if (v3 != v2)
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

void (*UICellConfigurationState.cellDropState.modify(uint64_t a1))(unsigned __int8 *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 18);
  return sub_185797F6C;
}

void sub_185797F6C(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  int v3;

  v1 = *(_QWORD *)a1;
  v2 = a1[8];
  v3 = *(unsigned __int8 *)(*(_QWORD *)a1 + 18);
  *(_BYTE *)(*(_QWORD *)a1 + 18) = v2;
  if (v3 != v2)
  {

    *(_QWORD *)(v1 + 32) = 0;
    *(_QWORD *)(v1 + 40) = 0;
    *(_BYTE *)(v1 + 48) = 1;
  }
}

void sub_185797FB0(void **a1@<X0>, void **a2@<X1>, uint64_t a3@<X8>)
{
  void *v4;
  void *v5;
  id v6;
  id v7;

  v4 = *a1;
  v5 = *a2;
  v6 = a1[4];
  v7 = v4;
  swift_bridgeObjectRetain();
  UICellConfigurationState.subscript.getter(v5, a3);

  swift_bridgeObjectRelease();
}

uint64_t sub_1857980A4(uint64_t a1, uint64_t a2, void **a3)
{
  void *v4;
  void *v5;
  id v6;
  _BYTE v8[40];
  _BYTE v9[40];

  v4 = *a3;
  sub_185070E64(a1, (uint64_t)v9);
  v5 = *(void **)(a2 + 32);
  v6 = v4;

  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  *(_BYTE *)(a2 + 48) = 1;
  sub_185070E64((uint64_t)v9, (uint64_t)v8);
  sub_185070EAC((uint64_t)v8, v6);
  return sub_185070E24((uint64_t)v9);
}

void (*UICellConfigurationState.subscript.modify(_QWORD *a1, void *a2))(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  char v10;

  v5 = malloc(0x88uLL);
  v6 = (uint64_t)v5;
  *a1 = v5;
  v5[15] = a2;
  v5[16] = v2;
  v7 = *(_QWORD *)(v2 + 24);
  if (*(_QWORD *)(v7 + 16))
  {
    v8 = a2;
    v9 = sub_1850F6BB4(v8);
    if ((v10 & 1) != 0)
    {
      sub_1850F28CC(*(_QWORD *)(v7 + 56) + 40 * v9, v6);
    }
    else
    {
      *(_QWORD *)(v6 + 32) = 0;
      *(_OWORD *)v6 = 0u;
      *(_OWORD *)(v6 + 16) = 0u;
    }

  }
  else
  {
    v5[4] = 0;
    *(_OWORD *)v5 = 0u;
    *((_OWORD *)v5 + 1) = 0u;
  }
  return sub_1857981B8;
}

void sub_1857981B8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;

  v2 = *a1;
  v3 = *a1 + 40;
  if ((a2 & 1) != 0)
  {
    v4 = *(void **)(v2 + 120);
    v5 = *(_QWORD *)(v2 + 128);
    sub_185070E64(*a1, v3);
    v6 = *(void **)(v5 + 32);
    v7 = v4;

    *(_QWORD *)(v5 + 32) = 0;
    *(_QWORD *)(v5 + 40) = 0;
    *(_BYTE *)(v5 + 48) = 1;
    sub_185070E64(v3, v2 + 80);
    sub_185070EAC(v2 + 80, v7);
    sub_185070E24(v3);
  }
  else
  {
    v8 = *(_QWORD *)(v2 + 128);
    v9 = *(void **)(v8 + 32);
    v10 = *(id *)(v2 + 120);

    *(_QWORD *)(v8 + 32) = 0;
    *(_QWORD *)(v8 + 40) = 0;
    *(_BYTE *)(v8 + 48) = 1;
    sub_185070E64(v2, v3);
    sub_185070EAC(v3, v10);
  }
  sub_185070E24(v2);
  free((void *)v2);
}

uint64_t UICellConfigurationState.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;

  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(id *)v1;
  sub_186507A50();

  sub_186508104();
  sub_186508104();
  sub_186508104();
  sub_186508104();
  sub_186508104();
  sub_186508104();
  sub_186508104();
  sub_186508104();
  sub_186508104();
  sub_1865080F8();
  sub_1865080F8();
  sub_186508104();
  sub_186508104();
  swift_bridgeObjectRetain();
  sub_1856F69E0(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t UICellConfigurationState.hashValue.getter()
{
  uint64_t *v0;
  char v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  __int16 v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  __int128 v16[4];
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  __int16 v27;
  char v28;
  char v29;
  uint64_t v30;
  __int128 v31;
  char v32;

  v1 = *((_BYTE *)v0 + 8);
  v2 = *((_BYTE *)v0 + 9);
  v3 = *((_BYTE *)v0 + 10);
  v4 = *((_BYTE *)v0 + 11);
  v5 = *((_BYTE *)v0 + 12);
  v6 = *((_BYTE *)v0 + 13);
  v7 = *((_BYTE *)v0 + 14);
  v8 = *((_BYTE *)v0 + 15);
  v9 = *((_BYTE *)v0 + 16);
  v10 = *(_WORD *)((char *)v0 + 17);
  v11 = *((_BYTE *)v0 + 19);
  v12 = *((_BYTE *)v0 + 20);
  v13 = v0[3];
  v14 = *((_BYTE *)v0 + 48);
  v17 = *v0;
  v18 = v1;
  v19 = v2;
  v20 = v3;
  v21 = v4;
  v22 = v5;
  v23 = v6;
  v24 = v7;
  v25 = v8;
  v26 = v9;
  v27 = v10;
  v28 = v11;
  v29 = v12;
  v30 = v13;
  v31 = *((_OWORD *)v0 + 2);
  v32 = v14;
  sub_1865080EC();
  UICellConfigurationState.hash(into:)(v16);
  return sub_186508134();
}

uint64_t sub_185798480@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = 0;
  v2 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(a2 + 13) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 24) = v2;
  *(_BYTE *)(a2 + 48) = 1;
  return result;
}

uint64_t (*sub_1857984A4(void ***a1))()
{
  void **v2;

  v2 = (void **)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = UICellConfigurationState.traitCollection.modify(v2);
  return sub_185590E70;
}

uint64_t (*sub_1857984E8(_QWORD *a1, void *a2))()
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = UICellConfigurationState.subscript.modify(v4, a2);
  return sub_185590E70;
}

uint64_t sub_185798534()
{
  uint64_t *v0;
  char v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  __int16 v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  __int128 v16[4];
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  __int16 v27;
  char v28;
  char v29;
  uint64_t v30;
  __int128 v31;
  char v32;

  v1 = *((_BYTE *)v0 + 8);
  v2 = *((_BYTE *)v0 + 9);
  v3 = *((_BYTE *)v0 + 10);
  v4 = *((_BYTE *)v0 + 11);
  v5 = *((_BYTE *)v0 + 12);
  v6 = *((_BYTE *)v0 + 13);
  v7 = *((_BYTE *)v0 + 14);
  v8 = *((_BYTE *)v0 + 15);
  v9 = *((_BYTE *)v0 + 16);
  v10 = *(_WORD *)((char *)v0 + 17);
  v11 = *((_BYTE *)v0 + 19);
  v12 = *((_BYTE *)v0 + 20);
  v13 = v0[3];
  v14 = *((_BYTE *)v0 + 48);
  v17 = *v0;
  v18 = v1;
  v19 = v2;
  v20 = v3;
  v21 = v4;
  v22 = v5;
  v23 = v6;
  v24 = v7;
  v25 = v8;
  v26 = v9;
  v27 = v10;
  v28 = v11;
  v29 = v12;
  v30 = v13;
  v31 = *((_OWORD *)v0 + 2);
  v32 = v14;
  sub_1865080EC();
  UICellConfigurationState.hash(into:)(v16);
  return sub_186508134();
}

uint64_t sub_1857985F8()
{
  uint64_t *v0;
  char v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  __int16 v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  __int128 v16[4];
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  __int16 v27;
  char v28;
  char v29;
  uint64_t v30;
  __int128 v31;
  char v32;

  v1 = *((_BYTE *)v0 + 8);
  v2 = *((_BYTE *)v0 + 9);
  v3 = *((_BYTE *)v0 + 10);
  v4 = *((_BYTE *)v0 + 11);
  v5 = *((_BYTE *)v0 + 12);
  v6 = *((_BYTE *)v0 + 13);
  v7 = *((_BYTE *)v0 + 14);
  v8 = *((_BYTE *)v0 + 15);
  v9 = *((_BYTE *)v0 + 16);
  v10 = *(_WORD *)((char *)v0 + 17);
  v11 = *((_BYTE *)v0 + 19);
  v12 = *((_BYTE *)v0 + 20);
  v13 = v0[3];
  v14 = *((_BYTE *)v0 + 48);
  v17 = *v0;
  v18 = v1;
  v19 = v2;
  v20 = v3;
  v21 = v4;
  v22 = v5;
  v23 = v6;
  v24 = v7;
  v25 = v8;
  v26 = v9;
  v27 = v10;
  v28 = v11;
  v29 = v12;
  v30 = v13;
  v31 = *((_OWORD *)v0 + 2);
  v32 = v14;
  sub_1865080EC();
  UICellConfigurationState.hash(into:)(v16);
  return sub_186508134();
}

double static UIViewConfigurationState._forceBridgeFromObjectiveC(_:result:)(void *a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;
  unsigned __int8 v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  char v21;

  sub_1857998FC(*(void **)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(void **)(a2 + 24));
  sub_1851E8F0C(a1, (uint64_t)&v13);
  v4 = v19;
  v5 = v21;
  v6 = 256;
  if (!v15)
    v6 = 0;
  v7 = v6 | v14;
  v8 = 0x10000;
  if (!v16)
    v8 = 0;
  v9 = 0x1000000;
  if (!v17)
    v9 = 0;
  v10 = v7 | v8 | v9;
  v11 = 0x100000000;
  if (!v18)
    v11 = 0;
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v10 | v11;
  *(_QWORD *)(a2 + 16) = v4;
  result = *(double *)&v20;
  *(_OWORD *)(a2 + 24) = v20;
  *(_BYTE *)(a2 + 40) = v5;
  return result;
}

uint64_t static UIViewConfigurationState._conditionallyBridgeFromObjectiveC(_:result:)(void *a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  unsigned __int8 v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  char v21;

  sub_1857998FC(*(void **)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(void **)(a2 + 24));
  sub_1851E8F0C(a1, (uint64_t)&v13);
  v4 = v19;
  v5 = v21;
  v6 = 256;
  if (!v15)
    v6 = 0;
  v7 = v6 | v14;
  v8 = 0x10000;
  if (!v16)
    v8 = 0;
  v9 = 0x1000000;
  if (!v17)
    v9 = 0;
  v10 = v7 | v8 | v9;
  v11 = 0x100000000;
  if (!v18)
    v11 = 0;
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v10 | v11;
  *(_QWORD *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 24) = v20;
  *(_BYTE *)(a2 + 40) = v5;
  return 1;
}

void sub_185798834()
{
  sub_1851E94B8();
}

double sub_1857988A4(void *a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;
  unsigned __int8 v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  char v21;

  sub_1857998FC(*(void **)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(void **)(a2 + 24));
  sub_1851E8F0C(a1, (uint64_t)&v13);
  v4 = v19;
  v5 = v21;
  v6 = 256;
  if (!v15)
    v6 = 0;
  v7 = v6 | v14;
  v8 = 0x10000;
  if (!v16)
    v8 = 0;
  v9 = 0x1000000;
  if (!v17)
    v9 = 0;
  v10 = v7 | v8 | v9;
  v11 = 0x100000000;
  if (!v18)
    v11 = 0;
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v10 | v11;
  *(_QWORD *)(a2 + 16) = v4;
  result = *(double *)&v20;
  *(_OWORD *)(a2 + 24) = v20;
  *(_BYTE *)(a2 + 40) = v5;
  return result;
}

uint64_t sub_185798960(void *a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  unsigned __int8 v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  __int128 v20;
  char v21;

  sub_1857998FC(*(void **)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(void **)(a2 + 24));
  sub_1851E8F0C(a1, (uint64_t)&v13);
  v4 = v19;
  v5 = v21;
  v6 = 256;
  if (!v15)
    v6 = 0;
  v7 = v6 | v14;
  v8 = 0x10000;
  if (!v16)
    v8 = 0;
  v9 = 0x1000000;
  if (!v17)
    v9 = 0;
  v10 = v7 | v8 | v9;
  v11 = 0x100000000;
  if (!v18)
    v11 = 0;
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v10 | v11;
  *(_QWORD *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 24) = v20;
  *(_BYTE *)(a2 + 40) = v5;
  return 1;
}

double static UICellConfigurationState._forceBridgeFromObjectiveC(_:result:)(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  uint64_t v24;
  unsigned __int8 v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  unsigned __int8 v35;
  char v36;
  char v37;
  uint64_t v38;
  __int128 v39;
  char v40;

  sub_1850E0850(*(void **)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(void **)(a2 + 32));
  sub_1850F2A38(a1, (uint64_t)&v24);
  v4 = v33;
  v5 = v34;
  v6 = v35;
  v7 = v38;
  v8 = v40;
  v9 = 256;
  if (!v26)
    v9 = 0;
  v10 = v9 | v25;
  v11 = 0x10000;
  if (!v27)
    v11 = 0;
  v12 = 0x1000000;
  if (v28)
    v13 = 0x1000000;
  else
    v13 = 0;
  v14 = v10 | v11 | v13;
  v15 = 0x100000000;
  if (v29)
    v16 = 0x100000000;
  else
    v16 = 0;
  v17 = 0x10000000000;
  if (!v30)
    v17 = 0;
  v18 = v16 | v17;
  v19 = 0x1000000000000;
  if (!v31)
    v19 = 0;
  v20 = v14 | v18 | v19;
  v21 = 0x100000000000000;
  if (!v32)
    v21 = 0;
  v22 = v20 | v21;
  if (!v36)
    v12 = 0;
  if (!v37)
    v15 = 0;
  *(_QWORD *)a2 = v24;
  *(_QWORD *)(a2 + 8) = v22;
  *(_QWORD *)(a2 + 16) = v4 | (v5 << 8) | (v6 << 16) | v12 | v15;
  *(_QWORD *)(a2 + 24) = v7;
  result = *(double *)&v39;
  *(_OWORD *)(a2 + 32) = v39;
  *(_BYTE *)(a2 + 48) = v8;
  return result;
}

uint64_t static UICellConfigurationState._conditionallyBridgeFromObjectiveC(_:result:)(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  unsigned __int8 v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  unsigned __int8 v35;
  char v36;
  char v37;
  uint64_t v38;
  __int128 v39;
  char v40;

  sub_1850E0850(*(void **)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(void **)(a2 + 32));
  sub_1850F2A38(a1, (uint64_t)&v24);
  v4 = v33;
  v5 = v34;
  v6 = v35;
  v7 = v38;
  v8 = v40;
  v9 = 256;
  if (!v26)
    v9 = 0;
  v10 = v9 | v25;
  v11 = 0x10000;
  if (!v27)
    v11 = 0;
  v12 = 0x1000000;
  if (v28)
    v13 = 0x1000000;
  else
    v13 = 0;
  v14 = v10 | v11 | v13;
  v15 = 0x100000000;
  if (v29)
    v16 = 0x100000000;
  else
    v16 = 0;
  v17 = 0x10000000000;
  if (!v30)
    v17 = 0;
  v18 = v16 | v17;
  v19 = 0x1000000000000;
  if (!v31)
    v19 = 0;
  v20 = v14 | v18 | v19;
  v21 = 0x100000000000000;
  if (!v32)
    v21 = 0;
  v22 = v20 | v21;
  if (!v36)
    v12 = 0;
  if (!v37)
    v15 = 0;
  *(_QWORD *)a2 = v24;
  *(_QWORD *)(a2 + 8) = v22;
  *(_QWORD *)(a2 + 16) = v4 | (v5 << 8) | (v6 << 16) | v12 | v15;
  *(_QWORD *)(a2 + 24) = v7;
  *(_OWORD *)(a2 + 32) = v39;
  *(_BYTE *)(a2 + 48) = v8;
  return 1;
}

uint64_t sub_185798C80()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_185798CA4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_185798CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_185795E00(a1, a2, *(void (**)(uint64_t, id))(v2 + 16));
}

void sub_185798CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_18579666C(a1, a2, *(void (**)(uint64_t, void *))(v2 + 16));
}

void sub_185798CE8(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_185796708(a1, a2, *(void (**)(uint64_t, _QWORD *))(v2 + 16));
}

uint64_t sub_185798CF0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  unsigned __int8 v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  unsigned __int8 v33;
  unsigned __int8 v34;
  unsigned __int8 v35;
  char v36;
  char v37;
  uint64_t v38;
  __int128 v39;
  char v40;

  sub_1850E0850(*(void **)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), *(void **)(a2 + 32));
  sub_1850F2A38(a1, (uint64_t)&v24);
  v4 = v33;
  v5 = v34;
  v6 = v35;
  v7 = v38;
  v8 = v40;
  v9 = 256;
  if (!v26)
    v9 = 0;
  v10 = v9 | v25;
  v11 = 0x10000;
  if (!v27)
    v11 = 0;
  v12 = 0x1000000;
  if (v28)
    v13 = 0x1000000;
  else
    v13 = 0;
  v14 = v10 | v11 | v13;
  v15 = 0x100000000;
  if (v29)
    v16 = 0x100000000;
  else
    v16 = 0;
  v17 = 0x10000000000;
  if (!v30)
    v17 = 0;
  v18 = v16 | v17;
  v19 = 0x1000000000000;
  if (!v31)
    v19 = 0;
  v20 = v14 | v18 | v19;
  v21 = 0x100000000000000;
  if (!v32)
    v21 = 0;
  v22 = v20 | v21;
  if (!v36)
    v12 = 0;
  if (!v37)
    v15 = 0;
  *(_QWORD *)a2 = v24;
  *(_QWORD *)(a2 + 8) = v22;
  *(_QWORD *)(a2 + 16) = v4 | (v5 << 8) | (v6 << 16) | v12 | v15;
  *(_QWORD *)(a2 + 24) = v7;
  *(_OWORD *)(a2 + 32) = v39;
  *(_BYTE *)(a2 + 48) = v8;
  return 1;
}

uint64_t _s5UIKit24UIViewConfigurationStateV11descriptionSSvg_0()
{
  uint64_t *v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v6 = *v0;
  LOWORD(v7) = *((_WORD *)v0 + 4);
  BYTE2(v7) = *((_BYTE *)v0 + 10);
  BYTE3(v7) = *((_BYTE *)v0 + 11);
  BYTE4(v7) = *((_BYTE *)v0 + 12);
  v8 = v0[2];
  v9 = *(_OWORD *)(v0 + 3);
  LOBYTE(v10) = *((_BYTE *)v0 + 40);
  sub_1851E94B8();
  v2 = v1;
  v3 = objc_msgSend(v1, sel_description, v6, v7, v8, v9, v10);

  v4 = sub_1865074F8();
  return v4;
}

uint64_t UIViewConfigurationState.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  char v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  id v16;
  id v17;
  __int128 v19;
  uint64_t v20;
  void *v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  __int128 v28;
  char v29;

  v1 = sub_186508158();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD83E30);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v6) = *(_BYTE *)(v0 + 8);
  v9 = *(_BYTE *)(v0 + 9);
  v10 = *(_BYTE *)(v0 + 10);
  v11 = *(_BYTE *)(v0 + 11);
  v12 = *(_BYTE *)(v0 + 12);
  v13 = *(_QWORD *)(v0 + 16);
  v14 = *(_BYTE *)(v0 + 40);
  v21 = *(void **)v0;
  v8 = v21;
  v22 = v6;
  v23 = v9;
  v24 = v10;
  v25 = v11;
  v26 = v12;
  v27 = v13;
  v19 = *(_OWORD *)(v0 + 24);
  v28 = v19;
  v29 = v14;
  v20 = MEMORY[0x1E0DEE9D8];
  v15 = sub_18650814C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v7, 1, 1, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEDFE8], v1);
  v16 = (id)v19;
  v17 = v8;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD8AB20);
  sub_18559ACC8();
  return sub_186508164();
}

uint64_t sub_18579907C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  char v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  id v16;
  id v17;
  __int128 v19;
  uint64_t v20;
  void *v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  __int128 v28;
  char v29;

  v1 = sub_186508158();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD83E30);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v6) = *(_BYTE *)(v0 + 8);
  v9 = *(_BYTE *)(v0 + 9);
  v10 = *(_BYTE *)(v0 + 10);
  v11 = *(_BYTE *)(v0 + 11);
  v12 = *(_BYTE *)(v0 + 12);
  v13 = *(_QWORD *)(v0 + 16);
  v14 = *(_BYTE *)(v0 + 40);
  v21 = *(void **)v0;
  v8 = v21;
  v22 = v6;
  v23 = v9;
  v24 = v10;
  v25 = v11;
  v26 = v12;
  v27 = v13;
  v19 = *(_OWORD *)(v0 + 24);
  v28 = v19;
  v29 = v14;
  v20 = MEMORY[0x1E0DEE9D8];
  v15 = sub_18650814C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v7, 1, 1, v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEDFE8], v1);
  v16 = (id)v19;
  v17 = v8;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD8AB20);
  sub_18559ACC8();
  return sub_186508164();
}

uint64_t _s5UIKit24UICellConfigurationStateV11descriptionSSvg_0()
{
  void *v0;
  id v1;
  uint64_t v2;

  v0 = (void *)sub_1850F22DC();
  v1 = objc_msgSend(v0, sel_description);

  v2 = sub_1865074F8();
  return v2;
}

uint64_t UICellConfigurationState.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  __int16 v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  id v23;
  id v24;
  __int128 v26;
  uint64_t v27;
  void *v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  __int16 v38;
  char v39;
  char v40;
  uint64_t v41;
  __int128 v42;
  char v43;

  v1 = sub_186508158();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD83E30);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v6) = *(_BYTE *)(v0 + 8);
  v9 = *(_BYTE *)(v0 + 9);
  v10 = *(_BYTE *)(v0 + 10);
  v11 = *(_BYTE *)(v0 + 11);
  v12 = *(_BYTE *)(v0 + 12);
  v13 = *(_BYTE *)(v0 + 13);
  v14 = *(_BYTE *)(v0 + 14);
  v15 = *(_BYTE *)(v0 + 15);
  v16 = *(_BYTE *)(v0 + 16);
  v17 = *(_WORD *)(v0 + 17);
  v18 = *(_BYTE *)(v0 + 19);
  v19 = *(_BYTE *)(v0 + 20);
  v20 = *(_QWORD *)(v0 + 24);
  v21 = *(_BYTE *)(v0 + 48);
  v28 = *(void **)v0;
  v8 = v28;
  v29 = v6;
  v30 = v9;
  v31 = v10;
  v32 = v11;
  v33 = v12;
  v34 = v13;
  v35 = v14;
  v36 = v15;
  v37 = v16;
  v38 = v17;
  v39 = v18;
  v40 = v19;
  v41 = v20;
  v26 = *(_OWORD *)(v0 + 32);
  v42 = v26;
  v43 = v21;
  v27 = MEMORY[0x1E0DEE9D8];
  v22 = sub_18650814C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v7, 1, 1, v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEDFE8], v1);
  v23 = (id)v26;
  v24 = v8;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD8AB20);
  sub_18559ACC8();
  return sub_186508164();
}

uint64_t sub_1857994E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  __int16 v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  id v23;
  id v24;
  __int128 v26;
  uint64_t v27;
  void *v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;
  char v37;
  __int16 v38;
  char v39;
  char v40;
  uint64_t v41;
  __int128 v42;
  char v43;

  v1 = sub_186508158();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD83E30);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v6) = *(_BYTE *)(v0 + 8);
  v9 = *(_BYTE *)(v0 + 9);
  v10 = *(_BYTE *)(v0 + 10);
  v11 = *(_BYTE *)(v0 + 11);
  v12 = *(_BYTE *)(v0 + 12);
  v13 = *(_BYTE *)(v0 + 13);
  v14 = *(_BYTE *)(v0 + 14);
  v15 = *(_BYTE *)(v0 + 15);
  v16 = *(_BYTE *)(v0 + 16);
  v17 = *(_WORD *)(v0 + 17);
  v18 = *(_BYTE *)(v0 + 19);
  v19 = *(_BYTE *)(v0 + 20);
  v20 = *(_QWORD *)(v0 + 24);
  v21 = *(_BYTE *)(v0 + 48);
  v28 = *(void **)v0;
  v8 = v28;
  v29 = v6;
  v30 = v9;
  v31 = v10;
  v32 = v11;
  v33 = v12;
  v34 = v13;
  v35 = v14;
  v36 = v15;
  v37 = v16;
  v38 = v17;
  v39 = v18;
  v40 = v19;
  v41 = v20;
  v26 = *(_OWORD *)(v0 + 32);
  v42 = v26;
  v43 = v21;
  v27 = MEMORY[0x1E0DEE9D8];
  v22 = sub_18650814C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v7, 1, 1, v22);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEDFE8], v1);
  v23 = (id)v26;
  v24 = v8;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD8AB20);
  sub_18559ACC8();
  return sub_186508164();
}

BOOL _s5UIKit24UICellConfigurationStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;
  uint64_t v4;
  uint64_t v5;

  result = 0;
  if (((*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 9) ^ *(unsigned __int8 *)(a2 + 9)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 10) ^ *(unsigned __int8 *)(a2 + 10)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 11) ^ *(unsigned __int8 *)(a2 + 11)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 12) ^ *(unsigned __int8 *)(a2 + 12)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 13) ^ *(unsigned __int8 *)(a2 + 13)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 14) ^ *(unsigned __int8 *)(a2 + 14)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 15) ^ *(unsigned __int8 *)(a2 + 15)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 19) ^ *(unsigned __int8 *)(a2 + 19)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 20) ^ *(unsigned __int8 *)(a2 + 20)) & 1) == 0
    && *(unsigned __int8 *)(a1 + 17) == *(unsigned __int8 *)(a2 + 17)
    && *(unsigned __int8 *)(a1 + 18) == *(unsigned __int8 *)(a2 + 18))
  {
    v4 = *(_QWORD *)(a1 + 24);
    v5 = *(_QWORD *)(a2 + 24);
    sub_1851F9080(0, (unint64_t *)&qword_1EDD82C80);
    return (sub_186507A44() & 1) != 0 && (sub_185679378(v4, v5) & 1) != 0;
  }
  return result;
}

BOOL _s5UIKit24UIViewConfigurationStateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;

  if (*(unsigned __int8 *)(a1 + 8) != *(unsigned __int8 *)(a2 + 8))
    return 0;
  if (((*(unsigned __int8 *)(a1 + 9) ^ *(unsigned __int8 *)(a2 + 9)) & 1) != 0)
    return 0;
  if (((*(unsigned __int8 *)(a1 + 10) ^ *(unsigned __int8 *)(a2 + 10)) & 1) != 0)
    return 0;
  if (((*(unsigned __int8 *)(a1 + 11) ^ *(unsigned __int8 *)(a2 + 11)) & 1) != 0)
    return 0;
  if (((*(unsigned __int8 *)(a1 + 12) ^ *(unsigned __int8 *)(a2 + 12)) & 1) != 0)
    return 0;
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(void **)a2;
  v5 = *(void **)a1;
  sub_1851F9080(0, (unint64_t *)&qword_1EDD82C80);
  v6 = v5;
  v7 = v4;
  v8 = sub_186507A44();

  return (v8 & 1) != 0 && (sub_185679378(v2, v3) & 1) != 0;
}

void sub_1857998FC(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a1)
  {

    swift_bridgeObjectRelease();
  }
}

unint64_t sub_185799940()
{
  unint64_t result;

  result = qword_1EDD8B320;
  if (!qword_1EDD8B320)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UIViewConfigurationState, &type metadata for UIViewConfigurationState);
    atomic_store(result, (unint64_t *)&qword_1EDD8B320);
  }
  return result;
}

unint64_t sub_185799988()
{
  unint64_t result;

  result = qword_1EDD8B328;
  if (!qword_1EDD8B328)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UICellConfigurationState.DragState, &type metadata for UICellConfigurationState.DragState);
    atomic_store(result, (unint64_t *)&qword_1EDD8B328);
  }
  return result;
}

unint64_t sub_1857999D0()
{
  unint64_t result;

  result = qword_1EDD8B330;
  if (!qword_1EDD8B330)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UICellConfigurationState.DropState, &type metadata for UICellConfigurationState.DropState);
    atomic_store(result, (unint64_t *)&qword_1EDD8B330);
  }
  return result;
}

unint64_t sub_185799A18()
{
  unint64_t result;

  result = qword_1EDD8B338;
  if (!qword_1EDD8B338)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UICellConfigurationState, &type metadata for UICellConfigurationState);
    atomic_store(result, (unint64_t *)&qword_1EDD8B338);
  }
  return result;
}

id sub_185799A74@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *a2 = v2;
  return v2;
}

uint64_t sub_185799A84@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 8);
  return result;
}

void sub_185799A90(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *(unsigned __int8 *)(a2 + 8);
  *(_BYTE *)(a2 + 8) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_BYTE *)(a2 + 40) = 1;
  }
}

uint64_t sub_185799AD4@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 9);
  return result;
}

void sub_185799AE0(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *(unsigned __int8 *)(a2 + 9);
  *(_BYTE *)(a2 + 9) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_BYTE *)(a2 + 40) = 1;
  }
}

uint64_t sub_185799B24@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 10);
  return result;
}

void sub_185799B30(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *(unsigned __int8 *)(a2 + 10);
  *(_BYTE *)(a2 + 10) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_BYTE *)(a2 + 40) = 1;
  }
}

uint64_t sub_185799B74@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 11);
  return result;
}

void sub_185799B80(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *(unsigned __int8 *)(a2 + 11);
  *(_BYTE *)(a2 + 11) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_BYTE *)(a2 + 40) = 1;
  }
}

uint64_t sub_185799BC4@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 12);
  return result;
}

void sub_185799BD0(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *(unsigned __int8 *)(a2 + 12);
  *(_BYTE *)(a2 + 12) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_BYTE *)(a2 + 40) = 1;
  }
}

uint64_t sub_185799C1C()
{
  return 0;
}

id sub_185799C2C@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *a2 = v2;
  return v2;
}

uint64_t sub_185799C3C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 8);
  return result;
}

void sub_185799C48(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *(unsigned __int8 *)(a2 + 8);
  *(_BYTE *)(a2 + 8) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 40) = 0;
    *(_BYTE *)(a2 + 48) = 1;
  }
}

uint64_t sub_185799C8C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 9);
  return result;
}

void sub_185799C98(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *(unsigned __int8 *)(a2 + 9);
  *(_BYTE *)(a2 + 9) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 40) = 0;
    *(_BYTE *)(a2 + 48) = 1;
  }
}

uint64_t sub_185799CDC@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 10);
  return result;
}

void sub_185799CE8(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *(unsigned __int8 *)(a2 + 10);
  *(_BYTE *)(a2 + 10) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 40) = 0;
    *(_BYTE *)(a2 + 48) = 1;
  }
}

uint64_t sub_185799D2C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 11);
  return result;
}

void sub_185799D38(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *(unsigned __int8 *)(a2 + 11);
  *(_BYTE *)(a2 + 11) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 40) = 0;
    *(_BYTE *)(a2 + 48) = 1;
  }
}

uint64_t sub_185799D7C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 12);
  return result;
}

void sub_185799D88(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *(unsigned __int8 *)(a2 + 12);
  *(_BYTE *)(a2 + 12) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 40) = 0;
    *(_BYTE *)(a2 + 48) = 1;
  }
}

uint64_t sub_185799DCC@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 13);
  return result;
}

void sub_185799DD8(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *(unsigned __int8 *)(a2 + 13);
  *(_BYTE *)(a2 + 13) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 40) = 0;
    *(_BYTE *)(a2 + 48) = 1;
  }
}

uint64_t sub_185799E1C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 14);
  return result;
}

void sub_185799E28(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *(unsigned __int8 *)(a2 + 14);
  *(_BYTE *)(a2 + 14) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 40) = 0;
    *(_BYTE *)(a2 + 48) = 1;
  }
}

uint64_t sub_185799E6C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 15);
  return result;
}

void sub_185799E78(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *(unsigned __int8 *)(a2 + 15);
  *(_BYTE *)(a2 + 15) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 40) = 0;
    *(_BYTE *)(a2 + 48) = 1;
  }
}

uint64_t sub_185799EBC@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 16);
  return result;
}

void sub_185799EC8(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *(unsigned __int8 *)(a2 + 16);
  *(_BYTE *)(a2 + 16) = v2;
  if (v2 != v3)
  {

    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 40) = 0;
    *(_BYTE *)(a2 + 48) = 1;
  }
}

uint64_t sub_185799F0C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 17);
  return result;
}

void sub_185799F18(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *(unsigned __int8 *)(a2 + 17);
  *(_BYTE *)(a2 + 17) = v2;
  if (v3 != v2)
  {

    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 40) = 0;
    *(_BYTE *)(a2 + 48) = 1;
  }
}

uint64_t sub_185799F5C@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 18);
  return result;
}

void sub_185799F68(unsigned __int8 *a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *(unsigned __int8 *)(a2 + 18);
  *(_BYTE *)(a2 + 18) = v2;
  if (v3 != v2)
  {

    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 40) = 0;
    *(_BYTE *)(a2 + 48) = 1;
  }
}

uint64_t sub_185799FB4()
{
  return 0;
}

uint64_t dispatch thunk of UIConfigurationState.init(traitCollection:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of UIConfigurationState.traitCollection.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of UIConfigurationState.traitCollection.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of UIConfigurationState.subscript.modify(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

void destroy for UIViewConfigurationState(id *a1)
{

  swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UIViewConfigurationState(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v4 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = v3;
  swift_bridgeObjectRetain();
  v6 = v4;
  return a1;
}

uint64_t assignWithCopy for UIViewConfigurationState(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(void **)(a1 + 24);
  v8 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  v9 = v8;

  v10 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v10;
  return a1;
}

uint64_t assignWithTake for UIViewConfigurationState(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for UIViewConfigurationState(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UIViewConfigurationState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t assignWithCopy for UICellConfigurationState(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  *(_BYTE *)(a1 + 14) = *(_BYTE *)(a2 + 14);
  *(_BYTE *)(a1 + 15) = *(_BYTE *)(a2 + 15);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_BYTE *)(a1 + 19) = *(_BYTE *)(a2 + 19);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(void **)(a1 + 32);
  v8 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  v9 = v8;

  v10 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v10;
  return a1;
}

uint64_t assignWithTake for UICellConfigurationState(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  *(_BYTE *)(a1 + 13) = *(_BYTE *)(a2 + 13);
  *(_BYTE *)(a1 + 14) = *(_BYTE *)(a2 + 14);
  *(_BYTE *)(a1 + 15) = *(_BYTE *)(a2 + 15);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_BYTE *)(a1 + 19) = *(_BYTE *)(a2 + 19);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

ValueMetadata *type metadata accessor for UICellConfigurationState.DragState()
{
  return &type metadata for UICellConfigurationState.DragState;
}

uint64_t _s5UIKit24UICellConfigurationStateV9DragStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_18579A440 + 4 * byte_1866774D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_18579A474 + 4 * byte_1866774D0[v4]))();
}

uint64_t sub_18579A474(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_18579A47C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x18579A484);
  return result;
}

uint64_t sub_18579A490(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x18579A498);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_18579A49C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_18579A4A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UICellConfigurationState.DropState()
{
  return &type metadata for UICellConfigurationState.DropState;
}

uint64_t sub_18579A4C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_18579A4F4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

char *sub_18579A680(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  id v12;
  id v13;
  char *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  id v18;
  objc_super v20;

  v9 = OBJC_IVAR____TtC5UIKit25_UIMagicMorphClippingView_transformView;
  type metadata accessor for _UIMagicMorphTransformView();
  v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v11 = v4;
  v12 = objc_msgSend(v10, sel_init);
  *(_QWORD *)&v4[v9] = v12;
  v13 = objc_msgSend(v12, sel_layer);
  *(_QWORD *)&v11[OBJC_IVAR____TtC5UIKit25_UIMagicMorphClippingView_transformViewLayer] = v13;

  v20.receiver = v11;
  v20.super_class = (Class)type metadata accessor for _UIMagicMorphClippingView();
  v14 = (char *)objc_msgSendSuper2(&v20, sel_initWithFrame_, a1, a2, a3, a4);
  v15 = OBJC_IVAR____TtC5UIKit25_UIMagicMorphClippingView_transformView;
  v16 = *(void **)&v14[OBJC_IVAR____TtC5UIKit25_UIMagicMorphClippingView_transformView];
  v17 = v14;
  v18 = v16;
  objc_msgSend(v17, sel_bounds);
  objc_msgSend(v18, sel_setFrame_);

  objc_msgSend(v17, sel_addSubview_, *(_QWORD *)&v14[v15]);
  return v17;
}

id sub_18579A7CC()
{
  return sub_1855B6A7C(type metadata accessor for _UIMagicMorphClippingView);
}

uint64_t type metadata accessor for _UIMagicMorphClippingView()
{
  return objc_opt_self();
}

void sub_18579A8AC(char a1)
{
  char *v1;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for _UIMagicMorphTransformView();
  objc_msgSendSuper2(&v8, sel_setUserInteractionEnabled_, a1 & 1);
  v3 = OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_portalView;
  v4 = *(void **)&v1[OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_portalView];
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v5, sel_setAllowsHitTesting_, objc_msgSend(v1, sel_isUserInteractionEnabled));

    v6 = *(void **)&v1[v3];
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v7, sel_setForwardsClientHitTestingToSourceView_, objc_msgSend(v1, sel_isUserInteractionEnabled));

    }
  }
}

id sub_18579A98C(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  id v9;
  id v10;
  objc_super v12;

  v4[OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_hidesSourceView] = 1;
  v4[OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_matchesAlpha] = 0;
  v4[OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_appliesMinificationFilter] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_sourcePreview] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_portalView] = 0;
  v4[OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_didHostSourceView] = 0;
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for _UIMagicMorphTransformView();
  v9 = objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
  v10 = objc_msgSend(v9, sel_layer);
  objc_msgSend(v10, sel_setAnchorPoint_, 0.5, 0.0);

  objc_msgSend(v9, sel_setUserInteractionEnabled_, 0);
  objc_msgSend(v9, sel_setAutoresizesSubviews_, 0);

  return v9;
}

uint64_t sub_18579AAC8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v8[6];
  objc_super v9;

  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for _UIMagicMorphTransformView();
  objc_msgSendSuper2(&v9, sel_layoutSubviews);
  v1 = (void *)objc_opt_self();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_18579B850;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_1855A65EC;
  v8[5] = v3;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1855D8DF4;
  v8[3] = &block_descriptor_78;
  v4 = _Block_copy(v8);
  v5 = v0;
  swift_retain();
  swift_release();
  objc_msgSend(v1, sel_performWithoutAnimation_, v4);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
  return result;
}

void sub_18579AC14(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double Center;
  double v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  id v36;
  id v37;
  id v38;
  id v39;
  CATransform3D v40;

  v2 = OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_sourcePreview;
  v3 = *(void **)(a1 + OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_sourcePreview);
  if (v3)
  {
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_didHostSourceView) == 1)
    {
      v39 = v3;
      v38 = v3;
      v4 = objc_msgSend(v38, sel_view);
      if (!v4)
      {
        v5 = v38;
LABEL_13:

        return;
      }
    }
    else
    {
      v6 = *(void **)(a1 + OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_portalView);
      if (!v6)
        return;
      v39 = v3;
      v7 = v3;
      v4 = v6;
    }
    objc_msgSend(v39, sel_size);
    v9 = v8;
    v11 = v10;
    objc_msgSend(v4, sel_setBounds_, 0.0, 0.0, v8, v10);
    objc_msgSend(v4, sel_setCenter_, UIRectGetCenter(0.0, 0.0, v9));
    v12 = *(void **)(a1 + OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_portalView);
    if (!v12)
    {

      v5 = v39;
      goto LABEL_13;
    }
    v13 = *(void **)(a1 + v2);
    if (v13)
    {
      v14 = v12;
      v15 = objc_msgSend(v13, sel_view);
      if (v15)
      {
        v16 = v15;
        objc_msgSend(v15, sel__cropInsets);
        v18 = v17;
        v20 = v19;
        v22 = v21;
        v24 = v23;

        v25 = UIRectInset(0.0, 0.0, v9, v11, v18, v24, v22, v20);
        v27 = v26;
        v29 = v28;
        Center = UIRectGetCenter(0.0, 0.0, v9);
        v32 = v31;
        v33 = Center - UIRectGetCenter(v25, v27, v29);
        v35 = v32 - v34;
        v36 = objc_msgSend(v14, sel_layer);
        CATransform3DMakeTranslation(&v40, v33, v35, 0.0);
        objc_msgSend(v36, sel_setSublayerTransform_, &v40);

        return;
      }
    }
    else
    {
      v37 = v12;
    }
    __break(1u);
  }
}

void sub_18579AFA0(void *a1)
{
  _BYTE *v1;
  uint64_t v2;
  int v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t i;
  id v12;
  void *v13;
  void *v14;
  id v15;
  unsigned __int8 v16;
  uint64_t v17;
  void *v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  void *v24;
  id v25;
  uint64_t inited;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t j;
  id v43;
  void *v44;
  id v45;

  if (a1)
  {
    v2 = OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_didHostSourceView;
    v3 = v1[OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_didHostSourceView];
    v4 = a1;
    v5 = v4;
    if (v3 == 1)
    {
      v6 = objc_msgSend(v4, sel_view);
      objc_msgSend(v6, sel_removeFromSuperview);

      v1[v2] = 0;
    }
    v7 = objc_msgSend(v5, sel__overlayViews);
    if (!v7)
    {

      goto LABEL_16;
    }
    v8 = v7;
    sub_185223190();
    v9 = sub_186507654();

    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      v10 = sub_186507E58();
      swift_bridgeObjectRelease();
      if (v10)
        goto LABEL_7;
    }
    else
    {
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v10)
      {
LABEL_7:
        if (v10 < 1)
        {
          __break(1u);
          goto LABEL_37;
        }
        for (i = 0; i != v10; ++i)
        {
          if ((v9 & 0xC000000000000001) != 0)
            v12 = (id)MEMORY[0x186DC4CB4](i, v9);
          else
            v12 = *(id *)(v9 + 8 * i + 32);
          v13 = v12;
          objc_msgSend(v12, sel_removeFromSuperview);

        }
      }
    }

    swift_bridgeObjectRelease();
  }
LABEL_16:
  v14 = *(void **)&v1[OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_sourcePreview];
  if (!v14)
    return;
  v45 = v14;
  v15 = objc_msgSend(v45, sel_view);
  if (!v15)
  {

    return;
  }
  v5 = v15;
  v16 = objc_msgSend(v45, sel__sourceViewIsInViewHierarchy);
  v1[OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_didHostSourceView] = v16 ^ 1;
  v17 = OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_portalView;
  v18 = *(void **)&v1[OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_portalView];
  if ((v16 & 1) != 0)
  {
    if (v18)
    {
      v19 = *(id *)&v1[OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_portalView];
    }
    else
    {
      objc_msgSend(v1, sel_bounds);
      v19 = objc_msgSend(objc_allocWithZone((Class)_UIPortalView), sel_initWithFrame_, v20, v21, v22, v23);
      objc_msgSend(v19, sel_setAllowsBackdropGroups_, 1);
      objc_msgSend(v19, sel_setHidesSourceView_, v1[OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_hidesSourceView]);
      objc_msgSend(v19, sel_setMatchesAlpha_, v1[OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_matchesAlpha]);
      objc_msgSend(v19, sel_setForwardsClientHitTestingToSourceView_, objc_msgSend(v1, sel_isUserInteractionEnabled));
      objc_msgSend(v19, sel_setAllowsHitTesting_, objc_msgSend(v1, sel_isUserInteractionEnabled));
      v24 = (void *)sub_1865074D4();
      objc_msgSend(v19, sel_setName_, v24);

      v25 = objc_msgSend(v19, sel_portalLayer);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD81EA8);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_186669200;
      strcpy((char *)(inited + 32), "cornerRadius");
      *(_BYTE *)(inited + 45) = 0;
      *(_WORD *)(inited + 46) = -5120;
      v27 = MEMORY[0x1E0DEB070];
      *(_QWORD *)(inited + 48) = 0;
      *(_QWORD *)(inited + 72) = v27;
      strcpy((char *)(inited + 80), "shadowOpacity");
      *(_WORD *)(inited + 94) = -4864;
      *(_QWORD *)(inited + 96) = 0;
      *(_QWORD *)(inited + 120) = v27;
      *(_QWORD *)(inited + 128) = 0x6957726564726F62;
      *(_QWORD *)(inited + 136) = 0xEB00000000687464;
      *(_QWORD *)(inited + 144) = 0;
      *(_QWORD *)(inited + 168) = v27;
      strcpy((char *)(inited + 176), "masksToBounds");
      *(_WORD *)(inited + 190) = -4864;
      v28 = MEMORY[0x1E0DEAFA0];
      *(_BYTE *)(inited + 192) = 0;
      *(_QWORD *)(inited + 216) = v28;
      *(_QWORD *)(inited + 224) = 0x756F72676B636162;
      *(_QWORD *)(inited + 232) = 0xEF726F6C6F43646ELL;
      v29 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
      v30 = objc_msgSend(v29, sel_CGColor);

      type metadata accessor for CGColor(0);
      *(_QWORD *)(inited + 264) = v31;
      *(_QWORD *)(inited + 240) = v30;
      sub_1856A1408(inited);
      v32 = (void *)sub_18650739C();
      swift_bridgeObjectRelease();
      objc_msgSend(v25, sel_setOverrides_, v32);

      v33 = *(void **)&v1[v17];
      *(_QWORD *)&v1[v17] = v19;

      v18 = 0;
    }
    v34 = v18;
    v35 = objc_msgSend(v19, sel_layer);
    v36 = objc_msgSend(v45, sel_target);
    v37 = objc_msgSend(v36, sel_container);

    v38 = -[UIView _subviewsNeedAxisFlipping](v37);
    objc_msgSend(v35, sel_setFlipsHorizontalAxis_, v38);

    objc_msgSend(v19, sel_setSourceView_, v5);
    objc_msgSend(v1, sel_addSubview_, v19);

  }
  else
  {
    if (v18)
      objc_msgSend(v18, sel_removeFromSuperview);
    objc_msgSend(v1, sel_addSubview_, v5);
  }
  v39 = objc_msgSend(v45, sel__overlayViews);
  if (v39)
  {
    v40 = v39;
    sub_185223190();
    v9 = sub_186507654();

    if (!(v9 >> 62))
    {
      v41 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v41)
      {
LABEL_30:
        if (v41 < 1)
        {
          __break(1u);
          return;
        }
        for (j = 0; j != v41; ++j)
        {
          if ((v9 & 0xC000000000000001) != 0)
            v43 = (id)MEMORY[0x186DC4CB4](j, v9);
          else
            v43 = *(id *)(v9 + 8 * j + 32);
          v44 = v43;
          objc_msgSend(v1, sel_addSubview_, v43);

        }
      }
LABEL_38:
      swift_bridgeObjectRelease();
      goto LABEL_39;
    }
LABEL_37:
    swift_bridgeObjectRetain();
    v41 = sub_186507E58();
    swift_bridgeObjectRelease();
    if (v41)
      goto LABEL_30;
    goto LABEL_38;
  }
LABEL_39:
  objc_msgSend(v1, sel_sizeToFit);

}

void sub_18579B670()
{
  unsigned __int8 *v0;
  id v1;
  int v2;
  id v3;
  id v4;
  id v5;
  double v6;
  double v7;
  _QWORD *v8;
  id v9;

  v1 = objc_msgSend(v0, sel_window);

  if (v1)
  {
    v2 = v0[OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_appliesMinificationFilter];
    v3 = objc_msgSend(v0, sel_layer);
    v4 = v3;
    if (v2 == 1)
    {
      objc_msgSend(v3, sel_setShouldRasterize_, 1);

      v4 = objc_msgSend(v0, sel_layer);
      v5 = objc_msgSend(v0, sel_traitCollection);
      objc_msgSend(v5, sel_displayScale);
      v7 = v6;

      objc_msgSend(v4, sel_setRasterizationScale_, v7);
      v8 = (_QWORD *)MEMORY[0x1E0CD2B98];
    }
    else
    {
      objc_msgSend(v3, sel_setShouldRasterize_, 0);
      v8 = (_QWORD *)MEMORY[0x1E0CD2DF0];
    }

    v9 = objc_msgSend(v0, sel_layer);
    objc_msgSend(v9, sel_setMinificationFilter_, *v8);

  }
}

id sub_18579B7C8()
{
  return sub_1855B6A7C(type metadata accessor for _UIMagicMorphTransformView);
}

uint64_t type metadata accessor for _UIMagicMorphTransformView()
{
  return objc_opt_self();
}

uint64_t sub_18579B82C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_18579B850()
{
  uint64_t v0;

  sub_18579AC14(*(_QWORD *)(v0 + 16));
}

uint64_t sub_18579B858()
{
  return swift_deallocObject();
}

void sub_18579B868()
{
  _BYTE *v0;

  v0[OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_hidesSourceView] = 1;
  v0[OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_matchesAlpha] = 0;
  v0[OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_appliesMinificationFilter] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_sourcePreview] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_portalView] = 0;
  v0[OBJC_IVAR____TtC5UIKit26_UIMagicMorphTransformView_didHostSourceView] = 0;

  sub_186507E04();
  __break(1u);
}

uint64_t sub_18579B904@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *);
  uint64_t v28;

  v25 = a5;
  v26 = a2;
  v28 = a4;
  v27 = a1;
  v24 = a3;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v10);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v12, v24);
    v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t sub_18579BA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64x2_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v4 = v3;
  v8 = sub_18650796C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_186507330();
  MEMORY[0x1E0C80A78](v12);
  v13 = sub_186507954();
  MEMORY[0x1E0C80A78](v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD8B3F0);
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v4 + 32) = v14;
  v20[1] = v4 + 48;
  v15 = vdupq_n_s64(1uLL);
  *(int64x2_t *)(v4 + 40) = v15;
  *(_QWORD *)(v4 + 56) = 0;
  *(_QWORD *)(v4 + 64) = 0;
  *(int64x2_t *)(v4 + 72) = v15;
  *(_BYTE *)(v4 + 88) = 0;
  *(_QWORD *)(v4 + 96) = 1;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v4 + 128) = 0;
  *(_QWORD *)(v4 + 136) = a2;
  *(_QWORD *)(v4 + 144) = a3;
  sub_1857036DC();
  swift_retain();
  sub_186507948();
  sub_186507324();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF8D0], v8);
  *(_QWORD *)(v4 + 16) = sub_18650799C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD8B3F8);
  v16 = swift_allocObject();
  *(_DWORD *)(v16 + 32) = 0;
  *(_QWORD *)(v16 + 16) = a1;
  *(_QWORD *)(v16 + 24) = a1;
  swift_bridgeObjectRetain();
  swift_release();
  *(_QWORD *)(v4 + 24) = v16;
  swift_beginAccess();
  v17 = *(_QWORD *)(v4 + 48);
  *(_QWORD *)(v4 + 48) = 1;
  sub_1856389D0(v17);
  swift_beginAccess();
  v18 = *(_QWORD *)(v4 + 40);
  *(_QWORD *)(v4 + 40) = 1;
  sub_1856389D0(v18);
  *(_BYTE *)(v4 + 112) = 0;
  *(_QWORD *)(v4 + 120) = 0;
  return v4;
}

uint64_t sub_18579BCE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v4 = v3;
  v8 = sub_18650796C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_186507330();
  MEMORY[0x1E0C80A78](v12);
  v13 = sub_186507954();
  MEMORY[0x1E0C80A78](v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD82048);
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v4 + 32) = v14;
  v17[1] = v4 + 48;
  *(_QWORD *)(v4 + 96) = 0;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_BYTE *)(v4 + 88) = 0;
  *(_OWORD *)(v4 + 40) = 0u;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v4 + 128) = 0;
  *(_QWORD *)(v4 + 136) = a2;
  *(_QWORD *)(v4 + 144) = a3;
  sub_1857036DC();
  swift_retain();
  sub_186507948();
  sub_186507324();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF8D0], v8);
  *(_QWORD *)(v4 + 16) = sub_18650799C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82040);
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + 32) = 0;
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a1;
  swift_bridgeObjectRetain();
  swift_release();
  *(_QWORD *)(v4 + 24) = v15;
  swift_beginAccess();
  *(_QWORD *)(v4 + 48) = 0;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(v4 + 40) = 0;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v4 + 112) = 0;
  *(_QWORD *)(v4 + 120) = 0;
  return v4;
}

uint64_t sub_18579BF24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[5];

  v4 = v3;
  v8 = *(_QWORD *)a1;
  v38 = *(_QWORD *)(a1 + 8);
  v39 = v8;
  v9 = *(_QWORD *)(a1 + 16);
  v36 = *(_QWORD *)(a1 + 24);
  v37 = v9;
  v40 = *(unsigned int *)(a1 + 32);
  v35 = *(unsigned __int8 *)(a1 + 36);
  v34 = sub_18650796C();
  v10 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_186507330();
  MEMORY[0x1E0C80A78](v13);
  v14 = sub_186507954();
  MEMORY[0x1E0C80A78](v14);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD7D5C0);
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + 24) = 0;
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v4 + 40) = 1;
  *(_QWORD *)(v4 + 32) = v15;
  *(_QWORD *)(v4 + 56) = 0;
  *(_QWORD *)(v4 + 64) = 0;
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 69) = 0;
  *(_QWORD *)(v4 + 80) = 1;
  *(_QWORD *)(v4 + 96) = 0;
  *(_QWORD *)(v4 + 104) = 0;
  *(_QWORD *)(v4 + 88) = 0;
  *(_QWORD *)(v4 + 109) = 0;
  *(_QWORD *)(v4 + 120) = 0;
  *(_QWORD *)(v4 + 128) = 0;
  *(_QWORD *)(v4 + 136) = 1;
  *(_QWORD *)(v4 + 144) = 0;
  *(_QWORD *)(v4 + 165) = 0;
  *(_QWORD *)(v4 + 152) = 0;
  *(_QWORD *)(v4 + 160) = 0;
  *(_QWORD *)(v4 + 192) = 0;
  *(_QWORD *)(v4 + 200) = 0;
  *(_QWORD *)(v4 + 206) = 0;
  *(_QWORD *)(v4 + 176) = 1;
  *(_QWORD *)(v4 + 184) = 0;
  *(_QWORD *)(v4 + 232) = 0;
  *(_QWORD *)(v4 + 240) = 0;
  *(_QWORD *)(v4 + 245) = 0;
  *(_QWORD *)(v4 + 216) = 1;
  *(_QWORD *)(v4 + 224) = 0;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v4 + 280) = 0;
  *(_QWORD *)(v4 + 288) = a2;
  *(_QWORD *)(v4 + 296) = a3;
  sub_1857036DC();
  swift_retain();
  sub_186507948();
  sub_186507324();
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF8D0], v34);
  *(_QWORD *)(v4 + 16) = sub_18650799C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD7D598);
  v16 = swift_allocObject();
  *(_DWORD *)(v16 + 96) = 0;
  v18 = v38;
  v17 = v39;
  *(_QWORD *)(v16 + 16) = v39;
  *(_QWORD *)(v16 + 24) = v18;
  v20 = v36;
  v19 = v37;
  *(_QWORD *)(v16 + 32) = v37;
  *(_QWORD *)(v16 + 40) = v20;
  v21 = v35;
  *(_BYTE *)(v16 + 52) = v35;
  v22 = v40;
  *(_DWORD *)(v16 + 48) = v40;
  *(_QWORD *)(v16 + 56) = v17;
  *(_QWORD *)(v16 + 64) = v18;
  *(_QWORD *)(v16 + 72) = v19;
  *(_QWORD *)(v16 + 80) = v20;
  *(_BYTE *)(v16 + 92) = v21;
  *(_DWORD *)(v16 + 88) = v22;
  sub_18562BD40(a1, (uint64_t)v41);
  sub_1856555D4(v41);
  swift_release();
  *(_QWORD *)(v4 + 24) = v16;
  swift_beginAccess();
  v23 = *(_QWORD *)(v4 + 80);
  v24 = *(_QWORD *)(v4 + 88);
  v25 = *(_QWORD *)(v4 + 96);
  v26 = *(_QWORD *)(v4 + 104);
  v27 = *(unsigned int *)(v4 + 112) | ((unint64_t)*(unsigned __int8 *)(v4 + 116) << 32);
  *(_QWORD *)(v4 + 80) = 1;
  *(_QWORD *)(v4 + 96) = 0;
  *(_QWORD *)(v4 + 104) = 0;
  *(_QWORD *)(v4 + 88) = 0;
  *(_QWORD *)(v4 + 109) = 0;
  sub_18563AE44(v23, v24, v25, v26, v27);
  swift_beginAccess();
  v28 = *(_QWORD *)(v4 + 40);
  v29 = *(_QWORD *)(v4 + 48);
  v30 = *(_QWORD *)(v4 + 56);
  v31 = *(_QWORD *)(v4 + 64);
  v32 = *(unsigned int *)(v4 + 72) | ((unint64_t)*(unsigned __int8 *)(v4 + 76) << 32);
  *(_QWORD *)(v4 + 40) = 1;
  *(_QWORD *)(v4 + 56) = 0;
  *(_QWORD *)(v4 + 64) = 0;
  *(_QWORD *)(v4 + 48) = 0;
  *(_QWORD *)(v4 + 69) = 0;
  sub_18563AE44(v28, v29, v30, v31, v32);
  *(_BYTE *)(v4 + 264) = 0;
  *(_QWORD *)(v4 + 272) = 0;
  return v4;
}

uint64_t sub_18579C394(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = (char *)&v11 - v7;
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 88))(a1, a2, v6);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(AssociatedTypeWitness, AssociatedConformanceWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, AssociatedTypeWitness);
}

uint64_t sub_18579C478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  _BYTE *v8;
  uint64_t AssociatedConformanceWitness;
  _BYTE v11[32];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = &v11[-v7];
  sub_1850F69D4(a1, (uint64_t)v11);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(v11, AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(a3 + 96))(v8, a2, a3);
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

uint64_t sub_18579C58C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = (char *)&v11 - v7;
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 136))(a1, a2, v6);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(AssociatedTypeWitness, AssociatedConformanceWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, AssociatedTypeWitness);
}

uint64_t sub_18579C670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  _BYTE *v8;
  uint64_t AssociatedConformanceWitness;
  _BYTE v11[32];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = &v11[-v7];
  sub_1850F69D4(a1, (uint64_t)v11);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(v11, AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(a3 + 144))(v8, a2, a3);
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

id sub_18579C778(char *a1, uint64_t a2, void (*a3)(_QWORD *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t ObjectType;
  char *v7;
  void *v8;
  _QWORD v10[4];

  v5 = *(_QWORD *)&a1[OBJC_IVAR____TtC5UIKit15BridgedProperty_property + 8];
  ObjectType = swift_getObjectType();
  v7 = a1;
  a3(v10, ObjectType, v5);

  __swift_project_boxed_opaque_existential_0Tm(v10, v10[3]);
  v8 = (void *)sub_186507FB4();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v10);
  return v8;
}

void sub_18579C820(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, uint64_t, uint64_t))
{
  char *v6;
  uint64_t v7;
  uint64_t ObjectType;
  _BYTE v9[32];
  _BYTE v10[32];

  swift_unknownObjectRetain();
  v6 = a1;
  sub_186507B1C();
  swift_unknownObjectRelease();
  v7 = *(_QWORD *)&v6[OBJC_IVAR____TtC5UIKit15BridgedProperty_property + 8];
  ObjectType = swift_getObjectType();
  sub_1850F69D4((uint64_t)v10, (uint64_t)v9);
  a4(v9, ObjectType, v7);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v10);

}

uint64_t sub_18579C8C4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = (char *)&v11 - v7;
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 112))(a1, a2, v6);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(AssociatedTypeWitness, AssociatedConformanceWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, AssociatedTypeWitness);
}

uint64_t sub_18579C9A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  _BYTE *v8;
  uint64_t AssociatedConformanceWitness;
  _BYTE v11[32];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = &v11[-v7];
  sub_1850F69D4(a1, (uint64_t)v11);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(v11, AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(a3 + 120))(v8, a2, a3);
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

uint64_t sub_18579CD0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC5UIKit15BridgedProperty_property + 8);
  sub_1855D008C(a1, (uint64_t)&v8);
  if (v9)
  {
    sub_1850F6908(&v8, &v10);
    _s29AnimatablePropertyTransformerCMa();
    swift_dynamicCast();
    v4 = v7;
  }
  else
  {
    sub_1855BDE94((uint64_t)&v8);
    v4 = 0;
  }
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, ObjectType, v3);
  return sub_1855BDE94(a1);
}

uint64_t type metadata accessor for BridgedProperty()
{
  return objc_opt_self();
}

uint64_t sub_18579CF40(uint64_t a1, uint64_t a2, double a3)
{
  return sub_18579D5B0(a1, a2, qword_1ECD74D90, (uint64_t *)&unk_1ECD74D80, a3);
}

uint64_t sub_18579CF54(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  char v30;
  char v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v4 = v3;
  v7 = a1[3];
  v26 = a1[2];
  v27 = v7;
  v28 = a1[4];
  v8 = a1[1];
  v24 = *a1;
  v25 = v8;
  v9 = sub_18650796C();
  v22 = *(_QWORD *)(v9 - 8);
  v23 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_186507330();
  MEMORY[0x1E0C80A78](v12);
  v13 = sub_186507954();
  MEMORY[0x1E0C80A78](v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD7D5B0);
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v4 + 32) = v14;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(_OWORD *)(v4 + 104) = 0u;
  *(_OWORD *)(v4 + 40) = 0u;
  *(_BYTE *)(v4 + 120) = 1;
  *(_OWORD *)(v4 + 140) = 0u;
  *(_OWORD *)(v4 + 156) = 0u;
  *(_OWORD *)(v4 + 172) = 0u;
  *(_OWORD *)(v4 + 188) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_BYTE *)(v4 + 204) = 1;
  *(_QWORD *)(v4 + 208) = 0;
  v31 = 1;
  v30 = 1;
  v29 = 1;
  *(_OWORD *)(v4 + 232) = 0u;
  *(_OWORD *)(v4 + 248) = 0u;
  *(_OWORD *)(v4 + 216) = 0u;
  *(_QWORD *)(v4 + 296) = 0;
  *(_OWORD *)(v4 + 264) = 0u;
  *(_OWORD *)(v4 + 280) = 0u;
  *(_BYTE *)(v4 + 304) = 1;
  *(_OWORD *)(v4 + 308) = 0u;
  *(_OWORD *)(v4 + 324) = 0u;
  *(_OWORD *)(v4 + 340) = 0u;
  *(_OWORD *)(v4 + 356) = 0u;
  *(_OWORD *)(v4 + 372) = 0u;
  *(_OWORD *)(v4 + 392) = 0u;
  *(_OWORD *)(v4 + 408) = 0u;
  *(_OWORD *)(v4 + 424) = 0u;
  *(_OWORD *)(v4 + 440) = 0u;
  *(_OWORD *)(v4 + 456) = 0u;
  *(_BYTE *)(v4 + 472) = 1;
  *(_WORD *)(v4 + 388) = 1;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v4 + 504) = 0;
  *(_QWORD *)(v4 + 512) = a2;
  *(_QWORD *)(v4 + 520) = a3;
  sub_1857036DC();
  swift_retain();
  sub_186507948();
  sub_186507324();
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v11, *MEMORY[0x1E0DEF8D0], v23);
  *(_QWORD *)(v4 + 16) = sub_18650799C();
  v34 = v26;
  v35 = v27;
  v32 = v24;
  v33 = v25;
  v38 = v25;
  v39 = v26;
  v40 = v27;
  v41 = v28;
  v36 = v28;
  v37 = v24;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD7D588);
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + 176) = 0;
  v16 = v39;
  *(_OWORD *)(v15 + 112) = v38;
  *(_OWORD *)(v15 + 128) = v16;
  v17 = v41;
  *(_OWORD *)(v15 + 144) = v40;
  *(_OWORD *)(v15 + 160) = v17;
  v18 = v35;
  *(_OWORD *)(v15 + 48) = v34;
  *(_OWORD *)(v15 + 64) = v18;
  v19 = v37;
  *(_OWORD *)(v15 + 80) = v36;
  *(_OWORD *)(v15 + 96) = v19;
  v20 = v33;
  *(_OWORD *)(v15 + 16) = v32;
  *(_OWORD *)(v15 + 32) = v20;
  *(_QWORD *)(v4 + 24) = v15;
  swift_beginAccess();
  *(_OWORD *)(v4 + 188) = 0u;
  *(_OWORD *)(v4 + 172) = 0u;
  *(_OWORD *)(v4 + 156) = 0u;
  *(_OWORD *)(v4 + 140) = 0u;
  *(_OWORD *)(v4 + 124) = 0u;
  *(_BYTE *)(v4 + 204) = 1;
  swift_beginAccess();
  *(_OWORD *)(v4 + 104) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 40) = 0u;
  *(_BYTE *)(v4 + 120) = 1;
  *(_BYTE *)(v4 + 488) = 0;
  *(_QWORD *)(v4 + 496) = 0;
  return v4;
}

uint64_t sub_18579D278(uint64_t a1, uint64_t a2, double a3, double a4)
{
  return sub_18579DDE4(a1, a2, &qword_1EDD82000, &qword_1EDD81FF8, a3, a4);
}

uint64_t sub_18579D28C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char v24;
  char v25;
  char v26;

  v4 = v3;
  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  v10 = a1[3];
  v11 = a1[4];
  v12 = a1[5];
  v13 = a1[6];
  v14 = a1[7];
  v23 = sub_18650796C();
  v15 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_186507330();
  MEMORY[0x1E0C80A78](v18);
  v19 = sub_186507954();
  MEMORY[0x1E0C80A78](v19);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD82940);
  v20 = swift_allocObject();
  *(_DWORD *)(v20 + 24) = 0;
  *(_QWORD *)(v20 + 16) = 0;
  *(_QWORD *)(v4 + 32) = v20;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 88) = 0u;
  *(_OWORD *)(v4 + 40) = 0u;
  *(_BYTE *)(v4 + 104) = 1;
  *(_OWORD *)(v4 + 128) = 0u;
  *(_OWORD *)(v4 + 144) = 0u;
  *(_OWORD *)(v4 + 160) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_BYTE *)(v4 + 176) = 1;
  *(_QWORD *)(v4 + 184) = 0;
  v26 = 1;
  v25 = 1;
  v24 = 1;
  *(_QWORD *)(v4 + 256) = 0;
  *(_OWORD *)(v4 + 224) = 0u;
  *(_OWORD *)(v4 + 240) = 0u;
  *(_OWORD *)(v4 + 208) = 0u;
  *(_OWORD *)(v4 + 192) = 0u;
  *(_BYTE *)(v4 + 264) = 1;
  *(_OWORD *)(v4 + 272) = 0u;
  *(_OWORD *)(v4 + 288) = 0u;
  *(_OWORD *)(v4 + 304) = 0u;
  *(_OWORD *)(v4 + 320) = 0u;
  *(_OWORD *)(v4 + 344) = 0u;
  *(_OWORD *)(v4 + 360) = 0u;
  *(_OWORD *)(v4 + 376) = 0u;
  *(_OWORD *)(v4 + 392) = 0u;
  *(_BYTE *)(v4 + 408) = 1;
  *(_WORD *)(v4 + 336) = 1;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v4 + 440) = 0;
  *(_QWORD *)(v4 + 448) = a2;
  *(_QWORD *)(v4 + 456) = a3;
  sub_1857036DC();
  swift_retain();
  sub_186507948();
  sub_186507324();
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF8D0], v23);
  *(_QWORD *)(v4 + 16) = sub_18650799C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD82928);
  v21 = swift_allocObject();
  *(_DWORD *)(v21 + 144) = 0;
  *(_QWORD *)(v21 + 16) = v7;
  *(_QWORD *)(v21 + 24) = v8;
  *(_QWORD *)(v21 + 32) = v9;
  *(_QWORD *)(v21 + 40) = v10;
  *(_QWORD *)(v21 + 48) = v11;
  *(_QWORD *)(v21 + 56) = v12;
  *(_QWORD *)(v21 + 64) = v13;
  *(_QWORD *)(v21 + 72) = v14;
  *(_QWORD *)(v21 + 80) = v7;
  *(_QWORD *)(v21 + 88) = v8;
  *(_QWORD *)(v21 + 96) = v9;
  *(_QWORD *)(v21 + 104) = v10;
  *(_QWORD *)(v21 + 112) = v11;
  *(_QWORD *)(v21 + 120) = v12;
  *(_QWORD *)(v21 + 128) = v13;
  *(_QWORD *)(v21 + 136) = v14;
  *(_QWORD *)(v4 + 24) = v21;
  swift_beginAccess();
  *(_OWORD *)(v4 + 144) = 0u;
  *(_OWORD *)(v4 + 160) = 0u;
  *(_OWORD *)(v4 + 128) = 0u;
  *(_OWORD *)(v4 + 112) = 0u;
  *(_BYTE *)(v4 + 176) = 1;
  swift_beginAccess();
  *(_OWORD *)(v4 + 88) = 0u;
  *(_OWORD *)(v4 + 72) = 0u;
  *(_OWORD *)(v4 + 56) = 0u;
  *(_OWORD *)(v4 + 40) = 0u;
  *(_BYTE *)(v4 + 104) = 1;
  *(_BYTE *)(v4 + 424) = 0;
  *(_QWORD *)(v4 + 432) = 0;
  return v4;
}

uint64_t sub_18579D574(uint64_t a1, uint64_t a2, double a3, double a4)
{
  return sub_18579DDE4(a1, a2, qword_1EDD7D5D0, &qword_1EDD7D5A8, a3, a4);
}

uint64_t sub_18579D588(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  return sub_18579D81C(a1, a2, &qword_1EDD82950, &qword_1EDD82938, a3, a4, a5, a6);
}

uint64_t sub_18579D59C(uint64_t a1, uint64_t a2, double a3)
{
  return sub_18579D5B0(a1, a2, &qword_1EDD82AA0, &qword_1EDD82A98, a3);
}

uint64_t sub_18579D5B0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, double a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t *v20;

  v20 = a4;
  v7 = v5;
  v19 = sub_18650796C();
  v11 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_186507330();
  MEMORY[0x1E0C80A78](v14);
  v15 = sub_186507954();
  MEMORY[0x1E0C80A78](v15);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v16 = swift_allocObject();
  *(_DWORD *)(v16 + 24) = 0;
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v7 + 32) = v16;
  *(_QWORD *)(v7 + 40) = 0;
  *(_BYTE *)(v7 + 48) = 1;
  *(_QWORD *)(v7 + 56) = 0;
  *(_BYTE *)(v7 + 64) = 1;
  *(_QWORD *)(v7 + 80) = 0;
  *(_QWORD *)(v7 + 88) = 0;
  *(_QWORD *)(v7 + 72) = 0;
  *(_BYTE *)(v7 + 96) = 1;
  *(_QWORD *)(v7 + 104) = 0;
  *(_WORD *)(v7 + 112) = 1;
  *(_QWORD *)(v7 + 120) = 0;
  *(_BYTE *)(v7 + 128) = 1;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v7 + 160) = 0;
  *(_QWORD *)(v7 + 168) = a1;
  *(_QWORD *)(v7 + 176) = a2;
  sub_1857036DC();
  swift_retain();
  sub_186507948();
  sub_186507324();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF8D0], v19);
  *(_QWORD *)(v7 + 16) = sub_18650799C();
  __swift_instantiateConcreteTypeFromMangledName(v20);
  v17 = swift_allocObject();
  *(_DWORD *)(v17 + 32) = 0;
  *(double *)(v17 + 16) = a5;
  *(double *)(v17 + 24) = a5;
  *(_QWORD *)(v7 + 24) = v17;
  swift_beginAccess();
  *(_QWORD *)(v7 + 56) = 0;
  *(_BYTE *)(v7 + 64) = 1;
  swift_beginAccess();
  *(_QWORD *)(v7 + 40) = 0;
  *(_BYTE *)(v7 + 48) = 1;
  *(_BYTE *)(v7 + 144) = 0;
  *(_QWORD *)(v7 + 152) = 0;
  return v7;
}

uint64_t sub_18579D7F4(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  return sub_18579D81C(a1, a2, &qword_1EDD82D90, &qword_1EDD82D88, a3, a4, a5, a6);
}

uint64_t sub_18579D808(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  return sub_18579D81C(a1, a2, &qword_1EDD81730, &qword_1EDD81728, a3, a4, a5, a6);
}

uint64_t sub_18579D81C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, double a5, double a6, double a7, double a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  char v28;
  char v29;
  char v30;

  v27 = a4;
  v10 = v8;
  v26 = sub_18650796C();
  v17 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_186507330();
  MEMORY[0x1E0C80A78](v20);
  v21 = sub_186507954();
  MEMORY[0x1E0C80A78](v21);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v22 = swift_allocObject();
  *(_DWORD *)(v22 + 24) = 0;
  *(_QWORD *)(v22 + 16) = 0;
  *(_QWORD *)(v10 + 32) = v22;
  *(_OWORD *)(v10 + 56) = 0u;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_BYTE *)(v10 + 72) = 1;
  *(_OWORD *)(v10 + 96) = 0u;
  *(_OWORD *)(v10 + 80) = 0u;
  *(_BYTE *)(v10 + 112) = 1;
  *(_QWORD *)(v10 + 120) = 0;
  v30 = 1;
  v29 = 1;
  v28 = 1;
  *(_OWORD *)(v10 + 128) = 0u;
  *(_OWORD *)(v10 + 144) = 0u;
  *(_QWORD *)(v10 + 160) = 0;
  *(_BYTE *)(v10 + 168) = 1;
  *(_OWORD *)(v10 + 176) = 0u;
  *(_OWORD *)(v10 + 192) = 0u;
  *(_WORD *)(v10 + 208) = 1;
  *(_OWORD *)(v10 + 216) = 0u;
  *(_OWORD *)(v10 + 232) = 0u;
  *(_BYTE *)(v10 + 248) = 1;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v10 + 280) = 0;
  *(_QWORD *)(v10 + 288) = a1;
  *(_QWORD *)(v10 + 296) = a2;
  sub_1857036DC();
  swift_retain();
  sub_186507948();
  sub_186507324();
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E0DEF8D0], v26);
  *(_QWORD *)(v10 + 16) = sub_18650799C();
  __swift_instantiateConcreteTypeFromMangledName(v27);
  v23 = swift_allocObject();
  *(_DWORD *)(v23 + 80) = 0;
  *(double *)(v23 + 16) = a5;
  *(double *)(v23 + 24) = a6;
  *(double *)(v23 + 32) = a7;
  *(double *)(v23 + 40) = a8;
  *(double *)(v23 + 48) = a5;
  *(double *)(v23 + 56) = a6;
  *(double *)(v23 + 64) = a7;
  *(double *)(v23 + 72) = a8;
  *(_QWORD *)(v10 + 24) = v23;
  swift_beginAccess();
  *(_OWORD *)(v10 + 96) = 0u;
  *(_OWORD *)(v10 + 80) = 0u;
  *(_BYTE *)(v10 + 112) = 1;
  swift_beginAccess();
  *(_OWORD *)(v10 + 56) = 0u;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_BYTE *)(v10 + 72) = 1;
  *(_BYTE *)(v10 + 264) = 0;
  *(_QWORD *)(v10 + 272) = 0;
  return v10;
}

uint64_t sub_18579DAB0(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  char v32;
  _BYTE v33[136];
  _QWORD v34[52];
  _OWORD v35[18];

  v4 = v3;
  v22 = a2;
  v23 = a3;
  v5 = a1[7];
  v30 = a1[6];
  v31 = v5;
  v32 = *((_BYTE *)a1 + 128);
  v6 = a1[3];
  v26 = a1[2];
  v27 = v6;
  v7 = a1[5];
  v28 = a1[4];
  v29 = v7;
  v8 = a1[1];
  v24 = *a1;
  v25 = v8;
  v21 = sub_18650796C();
  v9 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_186507330();
  MEMORY[0x1E0C80A78](v12);
  v13 = sub_186507954();
  MEMORY[0x1E0C80A78](v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD82EF0);
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v4 + 32) = v14;
  sub_18563A9B8((uint64_t)v33);
  sub_18579E31C((uint64_t)v33, v4 + 40);
  sub_18579E31C((uint64_t)v33, v4 + 176);
  *(_QWORD *)(v4 + 312) = 0;
  v34[0] = 0;
  sub_18579E31C((uint64_t)v33, (uint64_t)&v34[1]);
  sub_18579E31C((uint64_t)v33, (uint64_t)&v34[18]);
  BYTE1(v34[34]) = 0;
  sub_18579E31C((uint64_t)v33, (uint64_t)&v34[35]);
  memcpy((void *)(v4 + 320), v34, 0x199uLL);
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v4 + 760) = 0;
  v15 = v23;
  *(_QWORD *)(v4 + 768) = v22;
  *(_QWORD *)(v4 + 776) = v15;
  sub_1857036DC();
  swift_retain();
  sub_186507948();
  sub_186507324();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF8D0], v21);
  v16 = sub_18650799C();
  v35[6] = v30;
  v35[7] = v31;
  v35[2] = v26;
  v35[3] = v27;
  v35[4] = v28;
  v35[5] = v29;
  v17 = v24;
  v35[0] = v24;
  v35[1] = v25;
  *(_OWORD *)((char *)&v35[13] + 8) = v29;
  *(_OWORD *)((char *)&v35[14] + 8) = v30;
  *(_OWORD *)((char *)&v35[15] + 8) = v31;
  *(_OWORD *)((char *)&v35[9] + 8) = v25;
  *(_OWORD *)((char *)&v35[10] + 8) = v26;
  *(_OWORD *)((char *)&v35[11] + 8) = v27;
  *(_OWORD *)((char *)&v35[12] + 8) = v28;
  *(_QWORD *)(v4 + 16) = v16;
  LOBYTE(v35[8]) = v32;
  BYTE8(v35[16]) = v32;
  *(_OWORD *)((char *)&v35[8] + 8) = v17;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD82EE0);
  v18 = swift_allocObject();
  *(_DWORD *)(v18 + 284) = 0;
  memcpy((void *)(v18 + 16), v35, 0x109uLL);
  *(_QWORD *)(v4 + 24) = v18;
  swift_beginAccess();
  sub_18579E31C((uint64_t)v33, v4 + 176);
  swift_beginAccess();
  sub_18579E31C((uint64_t)v33, v4 + 40);
  *(_BYTE *)(v4 + 744) = 0;
  *(_QWORD *)(v4 + 752) = 0;
  return v4;
}

uint64_t sub_18579DDD0(uint64_t a1, uint64_t a2, double a3, double a4)
{
  return sub_18579DDE4(a1, a2, (uint64_t *)&unk_1EDD82E48, qword_1EDD82E30, a3, a4);
}

uint64_t sub_18579DDE4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t *v22;

  v22 = a4;
  v8 = v6;
  v21 = sub_18650796C();
  v13 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_186507330();
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_186507954();
  MEMORY[0x1E0C80A78](v17);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v18 = swift_allocObject();
  *(_DWORD *)(v18 + 24) = 0;
  *(_QWORD *)(v18 + 16) = 0;
  *(_QWORD *)(v8 + 32) = v18;
  *(_QWORD *)(v8 + 48) = 0;
  *(_QWORD *)(v8 + 40) = 0;
  *(_BYTE *)(v8 + 56) = 1;
  *(_QWORD *)(v8 + 72) = 0;
  *(_QWORD *)(v8 + 64) = 0;
  *(_BYTE *)(v8 + 80) = 1;
  *(_OWORD *)(v8 + 88) = 0u;
  *(_OWORD *)(v8 + 104) = 0u;
  *(_BYTE *)(v8 + 120) = 1;
  *(_QWORD *)(v8 + 128) = 0;
  *(_QWORD *)(v8 + 136) = 0;
  *(_WORD *)(v8 + 144) = 1;
  *(_QWORD *)(v8 + 152) = 0;
  *(_QWORD *)(v8 + 160) = 0;
  *(_BYTE *)(v8 + 168) = 1;
  swift_unknownObjectWeakInit();
  *(_BYTE *)(v8 + 200) = 0;
  *(_QWORD *)(v8 + 208) = a1;
  *(_QWORD *)(v8 + 216) = a2;
  sub_1857036DC();
  swift_retain();
  sub_186507948();
  sub_186507324();
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF8D0], v21);
  *(_QWORD *)(v8 + 16) = sub_18650799C();
  __swift_instantiateConcreteTypeFromMangledName(v22);
  v19 = swift_allocObject();
  *(_DWORD *)(v19 + 48) = 0;
  *(double *)(v19 + 16) = a5;
  *(double *)(v19 + 24) = a6;
  *(double *)(v19 + 32) = a5;
  *(double *)(v19 + 40) = a6;
  *(_QWORD *)(v8 + 24) = v19;
  swift_beginAccess();
  *(_QWORD *)(v8 + 72) = 0;
  *(_QWORD *)(v8 + 64) = 0;
  *(_BYTE *)(v8 + 80) = 1;
  swift_beginAccess();
  *(_QWORD *)(v8 + 48) = 0;
  *(_QWORD *)(v8 + 40) = 0;
  *(_BYTE *)(v8 + 56) = 1;
  *(_BYTE *)(v8 + 184) = 0;
  *(_QWORD *)(v8 + 192) = 0;
  return v8;
}

id sub_18579E044()
{
  uint64_t v0;
  void *v1;
  double v2;
  double v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  objc_class *v17;
  char *v18;
  uint64_t *v19;
  id result;
  objc_super v21;

  objc_opt_self();
  v0 = swift_dynamicCastObjCClass();
  if (v0)
  {
    v1 = (void *)v0;
    swift_unknownObjectRetain();
    objc_msgSend(v1, sel_value);
    v3 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74D60);
    swift_allocObject();
    v4 = sub_18579D5B0((uint64_t)signpost_c2_removePresentationModifier_end, 0, qword_1ECD74D90, (uint64_t *)&unk_1ECD74D80, v3);
    swift_unknownObjectRelease();
    v5 = &qword_1ECD74D58;
    v6 = &qword_1ECD74D60;
LABEL_15:
    v16 = sub_18579E2DC(v5, v6);
    v17 = (objc_class *)type metadata accessor for BridgedProperty();
    v18 = (char *)objc_allocWithZone(v17);
    v19 = (uint64_t *)&v18[OBJC_IVAR____TtC5UIKit15BridgedProperty_property];
    *v19 = v4;
    v19[1] = v16;
    v21.receiver = v18;
    v21.super_class = v17;
    return objc_msgSendSuper2(&v21, sel_init);
  }
  objc_opt_self();
  v7 = swift_dynamicCastObjCClass();
  if (v7)
  {
    v8 = (void *)v7;
    swift_unknownObjectRetain();
    v9 = (unint64_t)objc_msgSend(v8, sel_length);
    if ((v9 & 0x8000000000000000) == 0)
    {
      v10 = v9;
      if (v9)
      {
        v11 = 0;
        v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        do
        {
          v13 = *((_QWORD *)objc_msgSend(v8, sel_vector) + v11);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v12 = sub_185646DEC(0, v12[2] + 1, 1, v12);
          v15 = v12[2];
          v14 = v12[3];
          if (v15 >= v14 >> 1)
            v12 = sub_185646DEC((_QWORD *)(v14 > 1), v15 + 1, 1, v12);
          ++v11;
          v12[2] = v15 + 1;
          v12[v15 + 4] = v13;
        }
        while (v10 != v11);
      }
      else
      {
        v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82030);
      swift_allocObject();
      v4 = sub_18579BCE0((uint64_t)v12, (uint64_t)signpost_c2_removePresentationModifier_end, 0);
      swift_unknownObjectRelease();
      v5 = (unint64_t *)&unk_1EDD82020;
      v6 = &qword_1EDD82030;
      goto LABEL_15;
    }
    __break(1u);
  }
  result = (id)sub_186507E04();
  __break(1u);
  return result;
}

uint64_t sub_18579E2DC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x186DC9F28](&unk_1866714F8, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_18579E31C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD82ED8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_18579E380()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char *v10;

  v0 = (char *)objc_msgSend(objc_allocWithZone((Class)UIShape), sel_init);
  v1 = &v0[OBJC_IVAR___UIShape_value];
  v2 = *(void **)&v0[OBJC_IVAR___UIShape_value];
  v3 = *(_QWORD *)&v0[OBJC_IVAR___UIShape_value + 8];
  v4 = *(_QWORD *)&v0[OBJC_IVAR___UIShape_value + 16];
  v5 = *(_QWORD *)&v0[OBJC_IVAR___UIShape_value + 24];
  v6 = *(_QWORD *)&v0[OBJC_IVAR___UIShape_value + 32];
  v7 = *(_QWORD *)&v0[OBJC_IVAR___UIShape_value + 40];
  v8 = *(_QWORD *)&v0[OBJC_IVAR___UIShape_value + 48];
  *(_QWORD *)v1 = 1;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  v9 = v1[56];
  v1[56] = 6;
  v10 = v0;
  sub_185228168(v2, v3, v4, v5, v6, v7, v8, v9);

  qword_1EDD82830 = (uint64_t)v10;
}

void sub_18579E464()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char *v10;

  v0 = (char *)objc_msgSend(objc_allocWithZone((Class)UIShape), sel_init);
  v1 = &v0[OBJC_IVAR___UIShape_value];
  v2 = *(void **)&v0[OBJC_IVAR___UIShape_value];
  v3 = *(_QWORD *)&v0[OBJC_IVAR___UIShape_value + 8];
  v4 = *(_QWORD *)&v0[OBJC_IVAR___UIShape_value + 16];
  v5 = *(_QWORD *)&v0[OBJC_IVAR___UIShape_value + 24];
  v6 = *(_QWORD *)&v0[OBJC_IVAR___UIShape_value + 32];
  v7 = *(_QWORD *)&v0[OBJC_IVAR___UIShape_value + 40];
  v8 = *(_QWORD *)&v0[OBJC_IVAR___UIShape_value + 48];
  *(_QWORD *)v1 = 3;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  v9 = v1[56];
  v1[56] = 6;
  v10 = v0;
  sub_185228168(v2, v3, v4, v5, v6, v7, v8, v9);

  qword_1EDD7D488 = (uint64_t)v10;
}

void sub_18579E548()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char *v10;

  v0 = (char *)objc_msgSend(objc_allocWithZone((Class)UIShape), sel_init);
  v1 = &v0[OBJC_IVAR___UIShape_value];
  v2 = *(void **)&v0[OBJC_IVAR___UIShape_value];
  v3 = *(_QWORD *)&v0[OBJC_IVAR___UIShape_value + 8];
  v4 = *(_QWORD *)&v0[OBJC_IVAR___UIShape_value + 16];
  v5 = *(_QWORD *)&v0[OBJC_IVAR___UIShape_value + 24];
  v6 = *(_QWORD *)&v0[OBJC_IVAR___UIShape_value + 32];
  v7 = *(_QWORD *)&v0[OBJC_IVAR___UIShape_value + 40];
  v8 = *(_QWORD *)&v0[OBJC_IVAR___UIShape_value + 48];
  *(_QWORD *)v1 = 2;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  v9 = v1[56];
  v1[56] = 6;
  v10 = v0;
  sub_185228168(v2, v3, v4, v5, v6, v7, v8, v9);

  qword_1EDD8B400 = (uint64_t)v10;
}

char *sub_18579EB3C(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  id v5;
  char *v6;
  char *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD v26[6];
  _OWORD v27[2];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[2];

  v21 = *(_OWORD *)(v1 + OBJC_IVAR___UIShape_value);
  v22 = *(_OWORD *)(v1 + OBJC_IVAR___UIShape_value + 16);
  v23 = *(_OWORD *)(v1 + OBJC_IVAR___UIShape_value + 32);
  v24 = *(_QWORD *)(v1 + OBJC_IVAR___UIShape_value + 48);
  LOBYTE(v25) = *(_BYTE *)(v1 + OBJC_IVAR___UIShape_value + 56);
  v2 = *(_OWORD *)(a1 + OBJC_IVAR___UIShapeResolutionContext_value + 80);
  v32 = *(_OWORD *)(a1 + OBJC_IVAR___UIShapeResolutionContext_value + 64);
  v33 = v2;
  v34[0] = *(_OWORD *)(a1 + OBJC_IVAR___UIShapeResolutionContext_value + 96);
  *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)(a1 + OBJC_IVAR___UIShapeResolutionContext_value + 105);
  v3 = *(_OWORD *)(a1 + OBJC_IVAR___UIShapeResolutionContext_value + 16);
  v28 = *(_OWORD *)(a1 + OBJC_IVAR___UIShapeResolutionContext_value);
  v29 = v3;
  v4 = *(_OWORD *)(a1 + OBJC_IVAR___UIShapeResolutionContext_value + 48);
  v30 = *(_OWORD *)(a1 + OBJC_IVAR___UIShapeResolutionContext_value + 32);
  v31 = v4;
  UIShape.resolve(in:)();
  v5 = objc_allocWithZone((Class)UIResolvedShape);
  sub_1855B8DA4((uint64_t)v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228314, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D98);
  v6 = (char *)objc_msgSend(v5, sel_init, v21, v22, v23, v24, v25);
  v7 = &v6[OBJC_IVAR___UIResolvedShape_value];
  v8 = *(_OWORD *)&v6[OBJC_IVAR___UIResolvedShape_value + 48];
  v10 = *(_OWORD *)&v6[OBJC_IVAR___UIResolvedShape_value];
  v9 = *(_OWORD *)&v6[OBJC_IVAR___UIResolvedShape_value + 16];
  v30 = *(_OWORD *)&v6[OBJC_IVAR___UIResolvedShape_value + 32];
  v31 = v8;
  v28 = v10;
  v29 = v9;
  v12 = *(_OWORD *)&v6[OBJC_IVAR___UIResolvedShape_value + 80];
  v11 = *(_OWORD *)&v6[OBJC_IVAR___UIResolvedShape_value + 96];
  v13 = *(_OWORD *)&v6[OBJC_IVAR___UIResolvedShape_value + 64];
  *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)&v6[OBJC_IVAR___UIResolvedShape_value + 105];
  v33 = v12;
  v34[0] = v11;
  v32 = v13;
  v14 = v26[0];
  v15 = v26[1];
  v16 = v26[3];
  *((_OWORD *)v7 + 2) = v26[2];
  *((_OWORD *)v7 + 3) = v16;
  *(_OWORD *)v7 = v14;
  *((_OWORD *)v7 + 1) = v15;
  v17 = v26[4];
  v18 = v26[5];
  v19 = v27[0];
  *(_OWORD *)(v7 + 105) = *(_OWORD *)((char *)v27 + 9);
  *((_OWORD *)v7 + 5) = v18;
  *((_OWORD *)v7 + 6) = v19;
  *((_OWORD *)v7 + 4) = v17;
  sub_1855B8DA4((uint64_t)&v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
  sub_1855B8DA4((uint64_t)v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
  return v6;
}

char *sub_18579ECF0(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  id v19;
  char *v20;
  char *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v9 = v4 + OBJC_IVAR___UIShape_value;
  v10 = *(void **)(v4 + OBJC_IVAR___UIShape_value);
  v11 = *(_QWORD *)(v4 + OBJC_IVAR___UIShape_value + 8);
  v12 = *(_QWORD *)(v9 + 16);
  v13 = *(_QWORD *)(v9 + 24);
  v14 = *(_QWORD *)(v9 + 32);
  v15 = *(_QWORD *)(v9 + 40);
  v16 = *(_QWORD *)(v9 + 48);
  v17 = *(_BYTE *)(v9 + 56);
  v18 = swift_allocObject();
  *(double *)(v18 + 16) = a1;
  *(double *)(v18 + 24) = a2;
  *(double *)(v18 + 32) = a3;
  *(double *)(v18 + 40) = a4;
  *(_QWORD *)(v18 + 48) = v10;
  *(_QWORD *)(v18 + 56) = v11;
  *(_QWORD *)(v18 + 64) = v12;
  *(_QWORD *)(v18 + 72) = v13;
  *(_QWORD *)(v18 + 80) = v14;
  *(_QWORD *)(v18 + 88) = v15;
  *(_QWORD *)(v18 + 96) = v16;
  *(_BYTE *)(v18 + 104) = v17;
  v19 = objc_allocWithZone((Class)UIShape);
  sub_185228314(v10, v11, v12, v13, v14, v15, v16, v17);
  v20 = (char *)objc_msgSend(v19, sel_init);
  v21 = &v20[OBJC_IVAR___UIShape_value];
  v22 = *(void **)&v20[OBJC_IVAR___UIShape_value];
  v23 = *(_QWORD *)&v20[OBJC_IVAR___UIShape_value + 8];
  v24 = *(_QWORD *)&v20[OBJC_IVAR___UIShape_value + 16];
  v25 = *(_QWORD *)&v20[OBJC_IVAR___UIShape_value + 24];
  v26 = *(_QWORD *)&v20[OBJC_IVAR___UIShape_value + 32];
  v27 = *(_QWORD *)&v20[OBJC_IVAR___UIShape_value + 40];
  v28 = *(_QWORD *)&v20[OBJC_IVAR___UIShape_value + 48];
  *(_QWORD *)v21 = v18;
  *(_OWORD *)(v21 + 8) = 0u;
  *(_OWORD *)(v21 + 24) = 0u;
  *(_OWORD *)(v21 + 40) = 0u;
  v29 = v21[56];
  v21[56] = 4;
  sub_185228168(v22, v23, v24, v25, v26, v27, v28, v29);
  return v20;
}

char *sub_18579EE88(double a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  id v13;
  char *v14;
  char *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v3 = v1 + OBJC_IVAR___UIShape_value;
  v4 = *(void **)(v1 + OBJC_IVAR___UIShape_value);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___UIShape_value + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  v11 = *(_BYTE *)(v3 + 56);
  v12 = swift_allocObject();
  *(double *)(v12 + 16) = a1;
  *(double *)(v12 + 24) = a1;
  *(double *)(v12 + 32) = a1;
  *(double *)(v12 + 40) = a1;
  *(_QWORD *)(v12 + 48) = v4;
  *(_QWORD *)(v12 + 56) = v5;
  *(_QWORD *)(v12 + 64) = v6;
  *(_QWORD *)(v12 + 72) = v7;
  *(_QWORD *)(v12 + 80) = v8;
  *(_QWORD *)(v12 + 88) = v9;
  *(_QWORD *)(v12 + 96) = v10;
  *(_BYTE *)(v12 + 104) = v11;
  v13 = objc_allocWithZone((Class)UIShape);
  sub_185228314(v4, v5, v6, v7, v8, v9, v10, v11);
  v14 = (char *)objc_msgSend(v13, sel_init);
  v15 = &v14[OBJC_IVAR___UIShape_value];
  v16 = *(void **)&v14[OBJC_IVAR___UIShape_value];
  v17 = *(_QWORD *)&v14[OBJC_IVAR___UIShape_value + 8];
  v18 = *(_QWORD *)&v14[OBJC_IVAR___UIShape_value + 16];
  v19 = *(_QWORD *)&v14[OBJC_IVAR___UIShape_value + 24];
  v20 = *(_QWORD *)&v14[OBJC_IVAR___UIShape_value + 32];
  v21 = *(_QWORD *)&v14[OBJC_IVAR___UIShape_value + 40];
  v22 = *(_QWORD *)&v14[OBJC_IVAR___UIShape_value + 48];
  *(_QWORD *)v15 = v12;
  *(_OWORD *)(v15 + 8) = 0u;
  *(_OWORD *)(v15 + 24) = 0u;
  *(_OWORD *)(v15 + 40) = 0u;
  v23 = v15[56];
  v15[56] = 4;
  sub_185228168(v16, v17, v18, v19, v20, v21, v22, v23);
  return v14;
}

uint64_t UIShape.isEqual(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;

  v2 = sub_1855D008C(a1, (uint64_t)v38);
  if (!v39)
  {
    sub_1855BDE94((uint64_t)v38);
    goto LABEL_5;
  }
  type metadata accessor for UIShape(v2);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v21 = 0;
    return v21 & 1;
  }
  v30 = (void *)v31;
  v3 = v1 + OBJC_IVAR___UIShape_value;
  v4 = *(void **)(v1 + OBJC_IVAR___UIShape_value);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR___UIShape_value + 8);
  v6 = *(_QWORD *)(v1 + OBJC_IVAR___UIShape_value + 16);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR___UIShape_value + 24);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR___UIShape_value + 32);
  v9 = *(_QWORD *)(v1 + OBJC_IVAR___UIShape_value + 40);
  v10 = *(_QWORD *)(v1 + OBJC_IVAR___UIShape_value + 48);
  v11 = *(void **)(v31 + OBJC_IVAR___UIShape_value);
  v12 = *(_QWORD *)(v31 + OBJC_IVAR___UIShape_value + 8);
  v13 = *(_QWORD *)(v31 + OBJC_IVAR___UIShape_value + 16);
  v14 = *(_QWORD *)(v31 + OBJC_IVAR___UIShape_value + 24);
  v15 = *(_QWORD *)(v31 + OBJC_IVAR___UIShape_value + 32);
  v16 = *(_QWORD *)(v31 + OBJC_IVAR___UIShape_value + 40);
  v17 = *(_QWORD *)(v31 + OBJC_IVAR___UIShape_value + 48);
  v18 = *(_BYTE *)(v3 + 56);
  v19 = *(_BYTE *)(v31 + OBJC_IVAR___UIShape_value + 56);
  v28 = v5;
  v29 = v4;
  *(_QWORD *)&v31 = v4;
  *((_QWORD *)&v31 + 1) = v5;
  v26 = v7;
  v27 = v6;
  v32 = v6;
  v33 = v7;
  v24 = v9;
  v25 = v8;
  v34 = v8;
  v35 = v9;
  v23 = v10;
  v36 = v10;
  v37 = v18;
  v38[0] = v11;
  v38[1] = v12;
  v38[2] = v13;
  v39 = v14;
  v40 = v15;
  v41 = v16;
  v42 = v17;
  v43 = v19;
  sub_185228314(v4, v5, v6, v7, v8, v9, v10, v18);
  sub_185228314(v11, v12, v13, v14, v15, v16, v17, v19);
  sub_1855B75AC(&v31);
  v21 = v20;

  sub_185228168(v11, v12, v13, v14, v15, v16, v17, v19);
  sub_185228168(v29, v28, v27, v26, v25, v24, v23, v18);
  return v21 & 1;
}

uint64_t type metadata accessor for UIShape(uint64_t a1)
{
  return sub_1851F9080(a1, &qword_1EDD8B490);
}

void __swiftcall UIShape.init()(UIShape *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

id UIShape.init()()
{
  uint64_t v0;
  uint64_t v1;
  objc_super v3;

  v1 = v0 + OBJC_IVAR___UIShape_value;
  *(_QWORD *)v1 = 1;
  *(_OWORD *)(v1 + 8) = 0u;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_BYTE *)(v1 + 56) = 6;
  v3.super_class = (Class)UIShape;
  return objc_msgSendSuper2(&v3, sel_init);
}

char *sub_18579F724(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  char *result;
  char *v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  void *v35;
  void *v36;
  uint64_t v37;
  void *v38;
  _OWORD v39[6];
  _OWORD v40[2];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _OWORD v47[2];
  _BYTE v48[64];
  __int128 v49;
  __int128 v50;
  _BYTE v51[25];
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;

  v2 = v1 + OBJC_IVAR___UIShape_value;
  v3 = *(void **)(v1 + OBJC_IVAR___UIShape_value);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR___UIShape_value + 8);
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 40);
  v9 = *(_QWORD *)(v2 + 48);
  v10 = *(_BYTE *)(v2 + 56);
  v52 = v3;
  v53 = v4;
  v54 = v5;
  v55 = v6;
  v56 = v7;
  v57 = v8;
  v58 = v9;
  v59 = v10;
  v11 = a1;
  v38 = v3;
  v37 = v6;
  sub_185228314(v3, v4, v5, v6, v7, v8, v9, v10);
  v36 = v11;
  result = (char *)objc_msgSend(v11, sel__outermostLayer);
  if (result)
  {
    v13 = result;
    sub_1855BA434((uint64_t)&v41);
    v14 = *((_QWORD *)&v41 + 1);
    v35 = (void *)v41;
    v15 = v42;
    v16 = v43;
    v17 = v44;
    v18 = BYTE8(v44);
    objc_msgSend(v13, sel_bounds);
    *(_QWORD *)v48 = 1;
    memset(&v48[8], 0, 48);
    v48[56] = 6;
    *(_QWORD *)&v49 = v19;
    *((_QWORD *)&v49 + 1) = v20;
    *(_QWORD *)&v50 = v21;
    *((_QWORD *)&v50 + 1) = v22;
    *(_QWORD *)&v51[8] = 0;
    *(_QWORD *)v51 = 0;
    *(_QWORD *)&v51[16] = -1;
    v51[24] = 0;
    UIShape.resolve(in:)();
    sub_185228168(v35, v14, v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, v18);

    v49 = v39[4];
    v50 = v39[5];
    *(_OWORD *)v51 = v40[0];
    *(_OWORD *)&v51[9] = *(_OWORD *)((char *)v40 + 9);
    *(_OWORD *)v48 = v39[0];
    *(_OWORD *)&v48[16] = v39[1];
    *(_OWORD *)&v48[32] = v39[2];
    *(_OWORD *)&v48[48] = v39[3];
    UIShape.resolve(in:)();
    sub_1855B8DA4((uint64_t)v39, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
    sub_185228168(v38, v4, v5, v37, v7, v8, v9, v10);
    v23 = (char *)objc_msgSend(objc_allocWithZone((Class)UIResolvedShape), sel_init);
    v24 = &v23[OBJC_IVAR___UIResolvedShape_value];
    v25 = *(_OWORD *)&v23[OBJC_IVAR___UIResolvedShape_value];
    v26 = *(_OWORD *)&v23[OBJC_IVAR___UIResolvedShape_value + 16];
    v27 = *(_OWORD *)&v23[OBJC_IVAR___UIResolvedShape_value + 48];
    *(_OWORD *)&v48[32] = *(_OWORD *)&v23[OBJC_IVAR___UIResolvedShape_value + 32];
    *(_OWORD *)&v48[48] = v27;
    *(_OWORD *)v48 = v25;
    *(_OWORD *)&v48[16] = v26;
    v28 = *(_OWORD *)&v23[OBJC_IVAR___UIResolvedShape_value + 64];
    v29 = *(_OWORD *)&v23[OBJC_IVAR___UIResolvedShape_value + 80];
    v30 = *(_OWORD *)&v23[OBJC_IVAR___UIResolvedShape_value + 96];
    *(_OWORD *)&v51[9] = *(_OWORD *)&v23[OBJC_IVAR___UIResolvedShape_value + 105];
    v50 = v29;
    *(_OWORD *)v51 = v30;
    v49 = v28;
    v31 = v44;
    *((_OWORD *)v24 + 2) = v43;
    *((_OWORD *)v24 + 3) = v31;
    v32 = v42;
    *(_OWORD *)v24 = v41;
    *((_OWORD *)v24 + 1) = v32;
    *(_OWORD *)(v24 + 105) = *(_OWORD *)((char *)v47 + 9);
    v33 = v47[0];
    v34 = v46;
    *((_OWORD *)v24 + 4) = v45;
    *((_OWORD *)v24 + 5) = v34;
    *((_OWORD *)v24 + 6) = v33;
    sub_1855B8DA4((uint64_t)v48, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
    return v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_18579FC44()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  id result;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  double v10;
  id v11;
  double v12;
  void *v13;
  void *v14;
  id v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  id v20[2];
  __int128 v21;
  _BYTE v22[25];

  *(_OWORD *)&v22[9] = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 105);
  v1 = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 96);
  v21 = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 80);
  *(_OWORD *)v22 = v1;
  v2 = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 64);
  v3 = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 16);
  v16 = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value);
  v17 = v3;
  v4 = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 48);
  v18 = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 32);
  v19 = v4;
  *(_OWORD *)v20 = v2;
  if ((v22[24] & 1) != 0)
    return (id)v2;
  v7 = *(_QWORD *)&v22[8];
  v6 = *(_QWORD *)&v22[16];
  v8 = *((double *)&v21 + 1);
  v9 = *(double *)v22;
  v11 = v20[1];
  v10 = *(double *)&v21;
  v12 = *(double *)&v2;
  v13 = (void *)objc_opt_self();
  v14 = v13;
  if (*(double *)v22 == 0.0)
    return objc_msgSend(v13, sel_bezierPathWithRect_, v12, *(double *)&v20[1], v21, v16, v17, v18, v19, v20[0]);
  sub_1855B8DA4((uint64_t)&v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228314, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D98);
  result = objc_msgSend(v14, sel__roundedRectBezierPath_withRoundedCorners_cornerRadius_segments_legacyCorners_, v6, 16, v7 == 1, v12, *(double *)&v11, v10, v8, v9, v16, v17, v18, v19, v20[0]);
  if (result)
  {
    v15 = result;
    sub_1855B8DA4((uint64_t)&v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
    return v15;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_18579FE00()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char *v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void *v22;
  id v23;
  id v25;
  char v26;

  v1 = OBJC_IVAR___UIResolvedShape_cachedShape;
  v2 = *(void **)(v0 + OBJC_IVAR___UIResolvedShape_cachedShape);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR___UIResolvedShape_cachedShape);
  }
  else
  {
    v4 = *(void **)(v0 + OBJC_IVAR___UIResolvedShape_value);
    v5 = *(_QWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 8);
    v6 = *(_QWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 16);
    v7 = *(_QWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 24);
    v8 = *(_QWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 32);
    v9 = *(_QWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 40);
    v10 = *(_QWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 48);
    v11 = *(_BYTE *)(v0 + OBJC_IVAR___UIResolvedShape_value + 56);
    v26 = v11;
    v25 = objc_allocWithZone((Class)UIShape);
    sub_185228314(v4, v5, v6, v7, v8, v9, v10, v11);
    v12 = (char *)objc_msgSend(v25, sel_init);
    v13 = &v12[OBJC_IVAR___UIShape_value];
    v14 = *(void **)&v12[OBJC_IVAR___UIShape_value];
    v15 = *(_QWORD *)&v12[OBJC_IVAR___UIShape_value + 8];
    v16 = *(_QWORD *)&v12[OBJC_IVAR___UIShape_value + 16];
    v17 = *(_QWORD *)&v12[OBJC_IVAR___UIShape_value + 24];
    v18 = *(_QWORD *)&v12[OBJC_IVAR___UIShape_value + 32];
    v19 = *(_QWORD *)&v12[OBJC_IVAR___UIShape_value + 40];
    v20 = *(_QWORD *)&v12[OBJC_IVAR___UIShape_value + 48];
    *(_QWORD *)v13 = v4;
    *((_QWORD *)v13 + 1) = v5;
    *((_QWORD *)v13 + 2) = v6;
    *((_QWORD *)v13 + 3) = v7;
    *((_QWORD *)v13 + 4) = v8;
    *((_QWORD *)v13 + 5) = v9;
    *((_QWORD *)v13 + 6) = v10;
    v21 = v13[56];
    v13[56] = v26;
    sub_185228168(v14, v15, v16, v17, v18, v19, v20, v21);
    v22 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v12;
    v3 = v12;

    v2 = 0;
  }
  v23 = v2;
  return v3;
}

char *sub_18579FF58(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  char *v39;
  char *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v48;
  uint64_t v49;
  double v50;
  double v51;
  char v52;
  _OWORD v53[6];
  _BYTE v54[25];
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  _BYTE v61[25];

  v9 = *(_OWORD *)(v4 + OBJC_IVAR___UIResolvedShape_value + 80);
  v59 = *(_OWORD *)(v4 + OBJC_IVAR___UIResolvedShape_value + 64);
  v60 = v9;
  *(_OWORD *)v61 = *(_OWORD *)(v4 + OBJC_IVAR___UIResolvedShape_value + 96);
  *(_OWORD *)&v61[9] = *(_OWORD *)(v4 + OBJC_IVAR___UIResolvedShape_value + 105);
  v10 = *(_OWORD *)(v4 + OBJC_IVAR___UIResolvedShape_value + 16);
  v55 = *(_OWORD *)(v4 + OBJC_IVAR___UIResolvedShape_value);
  v56 = v10;
  v11 = *(_OWORD *)(v4 + OBJC_IVAR___UIResolvedShape_value + 48);
  v57 = *(_OWORD *)(v4 + OBJC_IVAR___UIResolvedShape_value + 32);
  v58 = v11;
  v12 = v59;
  v13 = v60;
  v14 = *(_QWORD *)v61;
  v15 = *(_QWORD *)&v61[8];
  v16 = *(_QWORD *)&v61[16];
  v17 = v61[24];
  if ((v61[24] & 1) != 0)
  {
    sub_1855B8DA4((uint64_t)&v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228314, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D98);
    v50 = *(double *)&v12;
    sub_1855B8D98((id)v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, v15, v16, 1);
    v18 = UIRectInset(*((double *)&v12 + 1), *(double *)&v13, *((double *)&v13 + 1), *(double *)&v14, a1, a4, a3, a2);
    v20 = v19;
    v22 = v21;
    v48 = 0;
    v49 = 0;
    v14 = v23;
  }
  else
  {
    v51 = *(double *)v61;
    sub_1855B8DA4((uint64_t)&v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228314, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D98);
    v24 = a4;
    v25 = a4;
    v26 = a3;
    v27 = a2;
    v28 = UIRectInset(*(double *)&v12, *((double *)&v12 + 1), *(double *)&v13, *((double *)&v13 + 1), a1, v25, a3, a2);
    v18 = v29;
    v20 = v30;
    v22 = v31;
    if (v51 > 0.0)
    {
      if (v26 >= a1)
        v32 = a1;
      else
        v32 = v26;
      if (v32 > v27)
        v32 = v27;
      if (v32 > v24)
        v32 = v24;
      v33 = v51 - v32;
      if (v33 < 0.0)
        v33 = 0.0;
      v14 = *(_QWORD *)&v33;
    }
    v50 = v28;
    v48 = v15;
    v49 = v16;
  }
  v34 = v55;
  v35 = v56;
  v36 = v57;
  v37 = v58;
  v38 = BYTE8(v58);
  sub_185228314((id)v55, *((uint64_t *)&v55 + 1), v56, *((uint64_t *)&v56 + 1), v57, *((uint64_t *)&v57 + 1), v58, SBYTE8(v58));
  sub_1855B8DA4((uint64_t)&v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
  v52 = v17;
  v39 = (char *)objc_msgSend(objc_allocWithZone((Class)UIResolvedShape), sel_init);
  v40 = &v39[OBJC_IVAR___UIResolvedShape_value];
  v41 = *(_OWORD *)&v39[OBJC_IVAR___UIResolvedShape_value + 48];
  v43 = *(_OWORD *)&v39[OBJC_IVAR___UIResolvedShape_value];
  v42 = *(_OWORD *)&v39[OBJC_IVAR___UIResolvedShape_value + 16];
  v53[2] = *(_OWORD *)&v39[OBJC_IVAR___UIResolvedShape_value + 32];
  v53[3] = v41;
  v53[0] = v43;
  v53[1] = v42;
  v45 = *(_OWORD *)&v39[OBJC_IVAR___UIResolvedShape_value + 80];
  v44 = *(_OWORD *)&v39[OBJC_IVAR___UIResolvedShape_value + 96];
  v46 = *(_OWORD *)&v39[OBJC_IVAR___UIResolvedShape_value + 64];
  *(_OWORD *)&v54[9] = *(_OWORD *)&v39[OBJC_IVAR___UIResolvedShape_value + 105];
  v53[5] = v45;
  *(_OWORD *)v54 = v44;
  v53[4] = v46;
  *(_OWORD *)v40 = v34;
  *((_OWORD *)v40 + 1) = v35;
  *((_OWORD *)v40 + 2) = v36;
  *((_QWORD *)v40 + 6) = v37;
  v40[56] = v38;
  *((double *)v40 + 8) = v50;
  *((double *)v40 + 9) = v18;
  *((_QWORD *)v40 + 10) = v20;
  *((_QWORD *)v40 + 11) = v22;
  *((_QWORD *)v40 + 12) = v14;
  *((_QWORD *)v40 + 13) = v48;
  *((_QWORD *)v40 + 14) = v49;
  v40[120] = v52;
  sub_1855B8DA4((uint64_t)v53, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
  return v39;
}

char *sub_1857A02AC(double a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  double v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  char v28;
  char *v29;
  char *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v38;
  uint64_t v39;
  char v40;
  _OWORD v41[6];
  _BYTE v42[25];
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _BYTE v49[25];

  v3 = *(_OWORD *)(v1 + OBJC_IVAR___UIResolvedShape_value + 80);
  v47 = *(_OWORD *)(v1 + OBJC_IVAR___UIResolvedShape_value + 64);
  v48 = v3;
  *(_OWORD *)v49 = *(_OWORD *)(v1 + OBJC_IVAR___UIResolvedShape_value + 96);
  *(_OWORD *)&v49[9] = *(_OWORD *)(v1 + OBJC_IVAR___UIResolvedShape_value + 105);
  v4 = *(_OWORD *)(v1 + OBJC_IVAR___UIResolvedShape_value + 16);
  v43 = *(_OWORD *)(v1 + OBJC_IVAR___UIResolvedShape_value);
  v44 = v4;
  v5 = *(_OWORD *)(v1 + OBJC_IVAR___UIResolvedShape_value + 48);
  v45 = *(_OWORD *)(v1 + OBJC_IVAR___UIResolvedShape_value + 32);
  v46 = v5;
  v6 = *((_QWORD *)&v47 + 1);
  v7 = *(double *)&v47;
  v8 = v48;
  v9 = *(uint64_t *)v49;
  v10 = *(_QWORD *)&v49[8];
  v11 = *(_QWORD *)&v49[16];
  v40 = v49[24];
  if ((v49[24] & 1) != 0)
  {
    sub_1855B8DA4((uint64_t)&v43, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228314, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D98);
    sub_1855B8D98(*(id *)&v7, v6, v8, *((uint64_t *)&v8 + 1), v9, v10, v11, 1);
    v12 = UIRectInset(*(double *)&v6, *(double *)&v8, *((double *)&v8 + 1), *(double *)&v9, a1, a1, a1, a1);
    v14 = v13;
    v16 = v15;
    v18 = v17;
    v38 = 0;
    v39 = 0;
  }
  else
  {
    sub_1855B8DA4((uint64_t)&v43, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228314, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D98);
    v19 = UIRectInset(v7, *(double *)&v6, *(double *)&v8, *((double *)&v8 + 1), a1, a1, a1, a1);
    v12 = v20;
    v14 = v21;
    v16 = v22;
    v23 = *(double *)&v9 - a1;
    if (*(double *)&v9 - a1 < 0.0)
      v23 = 0.0;
    if (*(double *)&v9 <= 0.0)
      v18 = *(double *)&v9;
    else
      v18 = v23;
    v7 = v19;
    v38 = v11;
    v39 = v10;
  }
  v24 = v43;
  v25 = v44;
  v26 = v45;
  v27 = v46;
  v28 = BYTE8(v46);
  sub_185228314((id)v43, *((uint64_t *)&v43 + 1), v44, *((uint64_t *)&v44 + 1), v45, *((uint64_t *)&v45 + 1), v46, SBYTE8(v46));
  sub_1855B8DA4((uint64_t)&v43, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
  v29 = (char *)objc_msgSend(objc_allocWithZone((Class)UIResolvedShape), sel_init);
  v30 = &v29[OBJC_IVAR___UIResolvedShape_value];
  v31 = *(_OWORD *)&v29[OBJC_IVAR___UIResolvedShape_value + 48];
  v33 = *(_OWORD *)&v29[OBJC_IVAR___UIResolvedShape_value];
  v32 = *(_OWORD *)&v29[OBJC_IVAR___UIResolvedShape_value + 16];
  v41[2] = *(_OWORD *)&v29[OBJC_IVAR___UIResolvedShape_value + 32];
  v41[3] = v31;
  v41[0] = v33;
  v41[1] = v32;
  v35 = *(_OWORD *)&v29[OBJC_IVAR___UIResolvedShape_value + 80];
  v34 = *(_OWORD *)&v29[OBJC_IVAR___UIResolvedShape_value + 96];
  v36 = *(_OWORD *)&v29[OBJC_IVAR___UIResolvedShape_value + 64];
  *(_OWORD *)&v42[9] = *(_OWORD *)&v29[OBJC_IVAR___UIResolvedShape_value + 105];
  v41[5] = v35;
  *(_OWORD *)v42 = v34;
  v41[4] = v36;
  *(_OWORD *)v30 = v24;
  *((_OWORD *)v30 + 1) = v25;
  *((_OWORD *)v30 + 2) = v26;
  *((_QWORD *)v30 + 6) = v27;
  v30[56] = v28;
  *((double *)v30 + 8) = v7;
  *((double *)v30 + 9) = v12;
  *((_QWORD *)v30 + 10) = v14;
  *((_QWORD *)v30 + 11) = v16;
  *((double *)v30 + 12) = v18;
  *((_QWORD *)v30 + 13) = v39;
  *((_QWORD *)v30 + 14) = v38;
  v30[120] = v40;
  sub_1855B8DA4((uint64_t)v41, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
  return v29;
}

unint64_t UIResolvedShape.description.getter()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  _OWORD v13[5];
  __int128 v14;
  _BYTE v15[25];

  v1 = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 64);
  v2 = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 96);
  v14 = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 80);
  *(_OWORD *)v15 = v2;
  *(_OWORD *)&v15[9] = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 105);
  v3 = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 16);
  v13[0] = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value);
  v13[1] = v3;
  v4 = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 48);
  v13[2] = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 32);
  v13[3] = v4;
  v13[4] = v1;
  v5 = v1;
  v6 = v14;
  v8 = *(_QWORD *)v15;
  v7 = *(_QWORD *)&v15[8];
  v9 = *(_QWORD *)&v15[16];
  v10 = v15[24];
  sub_1855B8DA4((uint64_t)v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228314, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D98);
  sub_186507C30();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    v11 = objc_msgSend((id)v5, sel_description);
    sub_1865074F8();

    sub_186507564();
    swift_bridgeObjectRelease();
    sub_186507564();
    sub_1855B8D8C((id)v5, *((uint64_t *)&v5 + 1), v6, *((uint64_t *)&v6 + 1), v8, v7, v9, 1);
  }
  else
  {
    sub_1855BB944();
    sub_186507564();
    swift_bridgeObjectRelease();
    sub_186507564();
  }
  sub_186507564();
  swift_bridgeObjectRelease();
  sub_1855B8DA4((uint64_t)v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
  return 0xD000000000000011;
}

unint64_t UIResolvedShape.debugDescription.getter()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  _OWORD v13[5];
  __int128 v14;
  _BYTE v15[25];

  v1 = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 64);
  v2 = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 96);
  v14 = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 80);
  *(_OWORD *)v15 = v2;
  *(_OWORD *)&v15[9] = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 105);
  v3 = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 16);
  v13[0] = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value);
  v13[1] = v3;
  v4 = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 48);
  v13[2] = *(_OWORD *)(v0 + OBJC_IVAR___UIResolvedShape_value + 32);
  v13[3] = v4;
  v13[4] = v1;
  v5 = v1;
  v6 = v14;
  v8 = *(_QWORD *)v15;
  v7 = *(_QWORD *)&v15[8];
  v9 = *(_QWORD *)&v15[16];
  v10 = v15[24];
  sub_1855B8DA4((uint64_t)v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228314, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D98);
  sub_186507C30();
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    v11 = objc_msgSend((id)v5, sel_description);
    sub_1865074F8();

    sub_186507564();
    swift_bridgeObjectRelease();
    sub_186507564();
    sub_1855B8D8C((id)v5, *((uint64_t *)&v5 + 1), v6, *((uint64_t *)&v6 + 1), v8, v7, v9, 1);
  }
  else
  {
    sub_1855BB944();
    sub_186507564();
    swift_bridgeObjectRelease();
    sub_186507564();
  }
  sub_186507564();
  swift_bridgeObjectRelease();
  sub_1855B8DA4((uint64_t)v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
  return 0xD000000000000011;
}

uint64_t type metadata accessor for UIResolvedShape(uint64_t a1)
{
  return sub_1851F9080(a1, &qword_1EDD8B4A8);
}

char *sub_1857A0C70(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  char *v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v20[6];
  _OWORD v21[2];
  _OWORD v22[6];
  _OWORD v23[2];
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD v30[2];

  v2 = *(_OWORD *)(v1 + OBJC_IVAR___UIResolvedShape_value + 80);
  v28 = *(_OWORD *)(v1 + OBJC_IVAR___UIResolvedShape_value + 64);
  v29 = v2;
  v30[0] = *(_OWORD *)(v1 + OBJC_IVAR___UIResolvedShape_value + 96);
  *(_OWORD *)((char *)v30 + 9) = *(_OWORD *)(v1 + OBJC_IVAR___UIResolvedShape_value + 105);
  v3 = *(_OWORD *)(v1 + OBJC_IVAR___UIResolvedShape_value + 16);
  v24 = *(_OWORD *)(v1 + OBJC_IVAR___UIResolvedShape_value);
  v25 = v3;
  v4 = *(_OWORD *)(v1 + OBJC_IVAR___UIResolvedShape_value + 48);
  v26 = *(_OWORD *)(v1 + OBJC_IVAR___UIResolvedShape_value + 32);
  v27 = v4;
  v5 = *(_OWORD *)(a1 + OBJC_IVAR___UIResolvedShape_value + 80);
  v20[4] = *(_OWORD *)(a1 + OBJC_IVAR___UIResolvedShape_value + 64);
  v20[5] = v5;
  v21[0] = *(_OWORD *)(a1 + OBJC_IVAR___UIResolvedShape_value + 96);
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)(a1 + OBJC_IVAR___UIResolvedShape_value + 105);
  v6 = *(_OWORD *)(a1 + OBJC_IVAR___UIResolvedShape_value + 16);
  v20[0] = *(_OWORD *)(a1 + OBJC_IVAR___UIResolvedShape_value);
  v20[1] = v6;
  v7 = *(_OWORD *)(a1 + OBJC_IVAR___UIResolvedShape_value + 48);
  v20[2] = *(_OWORD *)(a1 + OBJC_IVAR___UIResolvedShape_value + 32);
  v20[3] = v7;
  sub_1855B9144(v20, (uint64_t)v22);
  v8 = (char *)objc_msgSend(objc_allocWithZone((Class)UIResolvedShape), sel_init);
  v9 = &v8[OBJC_IVAR___UIResolvedShape_value];
  v10 = *(_OWORD *)&v8[OBJC_IVAR___UIResolvedShape_value];
  v11 = *(_OWORD *)&v8[OBJC_IVAR___UIResolvedShape_value + 16];
  v12 = *(_OWORD *)&v8[OBJC_IVAR___UIResolvedShape_value + 48];
  v26 = *(_OWORD *)&v8[OBJC_IVAR___UIResolvedShape_value + 32];
  v27 = v12;
  v24 = v10;
  v25 = v11;
  v13 = *(_OWORD *)&v8[OBJC_IVAR___UIResolvedShape_value + 64];
  v14 = *(_OWORD *)&v8[OBJC_IVAR___UIResolvedShape_value + 80];
  v15 = *(_OWORD *)&v8[OBJC_IVAR___UIResolvedShape_value + 96];
  *(_OWORD *)((char *)v30 + 9) = *(_OWORD *)&v8[OBJC_IVAR___UIResolvedShape_value + 105];
  v29 = v14;
  v30[0] = v15;
  v28 = v13;
  v16 = v22[3];
  *((_OWORD *)v9 + 2) = v22[2];
  *((_OWORD *)v9 + 3) = v16;
  v17 = v22[1];
  *(_OWORD *)v9 = v22[0];
  *((_OWORD *)v9 + 1) = v17;
  *(_OWORD *)(v9 + 105) = *(_OWORD *)((char *)v23 + 9);
  v18 = v23[0];
  *((_OWORD *)v9 + 5) = v22[5];
  *((_OWORD *)v9 + 6) = v18;
  *((_OWORD *)v9 + 4) = v22[4];
  sub_1855B8DA4((uint64_t)&v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
  return v8;
}

char *sub_1857A0DF0(void *a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  double v14;
  __int128 v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char v34;
  char *v35;
  char *v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  char v48;
  _OWORD v49[6];
  _BYTE v50[25];
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _BYTE v57[25];

  v5 = *(_OWORD *)(v2 + OBJC_IVAR___UIResolvedShape_value + 80);
  v55 = *(_OWORD *)(v2 + OBJC_IVAR___UIResolvedShape_value + 64);
  v56 = v5;
  *(_OWORD *)v57 = *(_OWORD *)(v2 + OBJC_IVAR___UIResolvedShape_value + 96);
  *(_OWORD *)&v57[9] = *(_OWORD *)(v2 + OBJC_IVAR___UIResolvedShape_value + 105);
  v6 = *(_OWORD *)(v2 + OBJC_IVAR___UIResolvedShape_value + 16);
  v51 = *(_OWORD *)(v2 + OBJC_IVAR___UIResolvedShape_value);
  v52 = v6;
  v7 = *(_OWORD *)(v2 + OBJC_IVAR___UIResolvedShape_value + 48);
  v53 = *(_OWORD *)(v2 + OBJC_IVAR___UIResolvedShape_value + 32);
  v54 = v7;
  v8 = v55;
  v9 = v56;
  v11 = *(_QWORD *)v57;
  v10 = *(_QWORD *)&v57[8];
  v12 = *(_QWORD *)&v57[16];
  v13 = v57[24];
  v14 = *((double *)&v55 + 1);
  v15 = v56;
  if ((v57[24] & 1) != 0)
  {
    sub_1855B8DA4((uint64_t)&v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228314, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D98);
    sub_1855B8D98((id)v8, *((uint64_t *)&v8 + 1), v9, *((uint64_t *)&v9 + 1), v11, v10, v12, 1);
    v16 = objc_msgSend((id)v8, sel__bezierPathConvertedFromCoordinateSpace_toCoordinateSpace_, a1, a2);
    if (v16)
    {
      v47 = v16;
    }
    else
    {
      v24 = (id)v8;
      v47 = (id)v8;
    }
    objc_msgSend(a1, sel_convertRect_toCoordinateSpace_, a2, v14, v15, *(double *)&v11);
    v18 = v25;
    v20 = v26;
    v22 = v27;
    v29 = v28;
    sub_1855B8D8C((id)v8, *((uint64_t *)&v8 + 1), v9, *((uint64_t *)&v9 + 1), v11, v10, v12, 1);
    v45 = 0;
    v46 = 0;
    v44 = v29;
  }
  else
  {
    sub_1855B8DA4((uint64_t)&v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228314, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D98);
    objc_msgSend(a1, sel_convertRect_toCoordinateSpace_, a2, *(double *)&v8, v14, v15);
    v18 = v17;
    v20 = v19;
    v22 = v21;
    v47 = v23;
    v45 = v10;
    v46 = v12;
    v44 = v11;
  }
  v30 = v51;
  v31 = v52;
  v32 = v53;
  v33 = v54;
  v34 = BYTE8(v54);
  sub_185228314((id)v51, *((uint64_t *)&v51 + 1), v52, *((uint64_t *)&v52 + 1), v53, *((uint64_t *)&v53 + 1), v54, SBYTE8(v54));
  sub_1855B8DA4((uint64_t)&v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
  v48 = v13;
  v35 = (char *)objc_msgSend(objc_allocWithZone((Class)UIResolvedShape), sel_init);
  v36 = &v35[OBJC_IVAR___UIResolvedShape_value];
  v37 = *(_OWORD *)&v35[OBJC_IVAR___UIResolvedShape_value + 48];
  v39 = *(_OWORD *)&v35[OBJC_IVAR___UIResolvedShape_value];
  v38 = *(_OWORD *)&v35[OBJC_IVAR___UIResolvedShape_value + 16];
  v49[2] = *(_OWORD *)&v35[OBJC_IVAR___UIResolvedShape_value + 32];
  v49[3] = v37;
  v49[0] = v39;
  v49[1] = v38;
  v41 = *(_OWORD *)&v35[OBJC_IVAR___UIResolvedShape_value + 80];
  v40 = *(_OWORD *)&v35[OBJC_IVAR___UIResolvedShape_value + 96];
  v42 = *(_OWORD *)&v35[OBJC_IVAR___UIResolvedShape_value + 64];
  *(_OWORD *)&v50[9] = *(_OWORD *)&v35[OBJC_IVAR___UIResolvedShape_value + 105];
  v49[5] = v41;
  *(_OWORD *)v50 = v40;
  v49[4] = v42;
  *(_OWORD *)v36 = v30;
  *((_OWORD *)v36 + 1) = v31;
  *((_OWORD *)v36 + 2) = v32;
  *((_QWORD *)v36 + 6) = v33;
  v36[56] = v34;
  *((_QWORD *)v36 + 8) = v47;
  *((_QWORD *)v36 + 9) = v18;
  *((_QWORD *)v36 + 10) = v20;
  *((_QWORD *)v36 + 11) = v22;
  *((_QWORD *)v36 + 12) = v44;
  *((_QWORD *)v36 + 13) = v45;
  *((_QWORD *)v36 + 14) = v46;
  v36[120] = v48;
  sub_1855B8DA4((uint64_t)v49, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
  return v35;
}

char *sub_1857A1140(void *a1)
{
  void *v1;
  char *result;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char v25;
  char *v27;
  _QWORD v28[7];
  char v29;
  char v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _OWORD v37[2];
  _BYTE v38[64];
  __int128 v39;
  __int128 v40;
  _BYTE v41[25];

  v27 = (char *)objc_msgSend(v1, sel_init);
  result = (char *)objc_msgSend(a1, sel__outermostLayer);
  if (result)
  {
    v3 = result;
    sub_1855BA434((uint64_t)v28);
    v4 = (void *)v28[0];
    v5 = v28[1];
    v6 = v28[2];
    v7 = v28[3];
    v8 = v28[4];
    v9 = v28[5];
    v10 = v28[6];
    v25 = v29;
    objc_msgSend(v3, sel_bounds);
    v30 = 0;
    *(_QWORD *)v38 = 1;
    memset(&v38[8], 0, 48);
    v38[56] = 6;
    *(_QWORD *)&v39 = v11;
    *((_QWORD *)&v39 + 1) = v12;
    *(_QWORD *)&v40 = v13;
    *((_QWORD *)&v40 + 1) = v14;
    *(_QWORD *)v41 = 0;
    *(_QWORD *)&v41[8] = 0;
    *(_QWORD *)&v41[16] = -1;
    v41[24] = 0;
    UIShape.resolve(in:)();
    sub_185228168(v4, v5, v6, v7, v8, v9, v10, v25);

    v15 = &v27[OBJC_IVAR___UIShapeResolutionContext_value];
    v16 = *(_OWORD *)&v27[OBJC_IVAR___UIShapeResolutionContext_value + 48];
    v18 = *(_OWORD *)&v27[OBJC_IVAR___UIShapeResolutionContext_value];
    v17 = *(_OWORD *)&v27[OBJC_IVAR___UIShapeResolutionContext_value + 16];
    *(_OWORD *)&v38[32] = *(_OWORD *)&v27[OBJC_IVAR___UIShapeResolutionContext_value + 32];
    *(_OWORD *)&v38[48] = v16;
    *(_OWORD *)v38 = v18;
    *(_OWORD *)&v38[16] = v17;
    v20 = *(_OWORD *)&v27[OBJC_IVAR___UIShapeResolutionContext_value + 80];
    v19 = *(_OWORD *)&v27[OBJC_IVAR___UIShapeResolutionContext_value + 96];
    v21 = *(_OWORD *)&v27[OBJC_IVAR___UIShapeResolutionContext_value + 64];
    *(_OWORD *)&v41[9] = *(_OWORD *)&v27[OBJC_IVAR___UIShapeResolutionContext_value + 105];
    v40 = v20;
    *(_OWORD *)v41 = v19;
    v39 = v21;
    v22 = v36;
    *((_OWORD *)v15 + 4) = v35;
    *((_OWORD *)v15 + 5) = v22;
    *((_OWORD *)v15 + 6) = v37[0];
    *(_OWORD *)(v15 + 105) = *(_OWORD *)((char *)v37 + 9);
    v23 = v32;
    *(_OWORD *)v15 = v31;
    *((_OWORD *)v15 + 1) = v23;
    v24 = v34;
    *((_OWORD *)v15 + 2) = v33;
    *((_OWORD *)v15 + 3) = v24;
    sub_1855B8DA4((uint64_t)v38, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);

    return v27;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1857A134C(char *a1, uint64_t a2, _QWORD *a3, _QWORD *a4, objc_class **a5)
{
  uint64_t v7;
  char *v8;
  char *v9;
  objc_class *v10;
  objc_super v12;
  _OWORD v13[6];
  _OWORD v14[2];

  *(_QWORD *)&a1[*a3] = 0;
  v7 = qword_1EDD83B20;
  v8 = a1;
  if (v7 != -1)
    swift_once();
  v13[4] = xmmword_1EDDA8810;
  v13[5] = unk_1EDDA8820;
  v14[0] = xmmword_1EDDA8830;
  *(_OWORD *)((char *)v14 + 9) = *(__int128 *)((char *)&xmmword_1EDDA8830 + 9);
  v13[0] = xmmword_1EDDA87D0;
  v13[1] = unk_1EDDA87E0;
  v9 = &v8[*a4];
  v13[2] = xmmword_1EDDA87F0;
  v13[3] = unk_1EDDA8800;
  memmove(v9, &xmmword_1EDDA87D0, 0x79uLL);
  sub_1855B8DA4((uint64_t)v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228314, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D98);

  v10 = *a5;
  v12.receiver = v8;
  v12.super_class = v10;
  return objc_msgSendSuper2(&v12, sel_init);
}

char *sub_1857A1458()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  id v7;
  char *v8;
  char *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  void *v22;
  id v23;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _OWORD v31[2];
  _OWORD v32[6];
  _BYTE v33[25];

  v1 = OBJC_IVAR___UIShapeResolutionContext_cachedContentShape;
  v2 = *(void **)(v0 + OBJC_IVAR___UIShapeResolutionContext_cachedContentShape);
  if (v2)
  {
    v3 = *(char **)(v0 + OBJC_IVAR___UIShapeResolutionContext_cachedContentShape);
  }
  else
  {
    v4 = *(_OWORD *)(v0 + OBJC_IVAR___UIShapeResolutionContext_value + 80);
    v29 = *(_OWORD *)(v0 + OBJC_IVAR___UIShapeResolutionContext_value + 64);
    v30 = v4;
    v31[0] = *(_OWORD *)(v0 + OBJC_IVAR___UIShapeResolutionContext_value + 96);
    *(_OWORD *)((char *)v31 + 9) = *(_OWORD *)(v0 + OBJC_IVAR___UIShapeResolutionContext_value + 105);
    v5 = *(_OWORD *)(v0 + OBJC_IVAR___UIShapeResolutionContext_value + 16);
    v25 = *(_OWORD *)(v0 + OBJC_IVAR___UIShapeResolutionContext_value);
    v26 = v5;
    v6 = *(_OWORD *)(v0 + OBJC_IVAR___UIShapeResolutionContext_value + 48);
    v27 = *(_OWORD *)(v0 + OBJC_IVAR___UIShapeResolutionContext_value + 32);
    v28 = v6;
    v7 = objc_allocWithZone((Class)UIResolvedShape);
    sub_1855B8DA4((uint64_t)&v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228314, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D98);
    v8 = (char *)objc_msgSend(v7, sel_init);
    v9 = &v8[OBJC_IVAR___UIResolvedShape_value];
    v10 = *(_OWORD *)&v8[OBJC_IVAR___UIResolvedShape_value + 48];
    v12 = *(_OWORD *)&v8[OBJC_IVAR___UIResolvedShape_value];
    v11 = *(_OWORD *)&v8[OBJC_IVAR___UIResolvedShape_value + 16];
    v32[2] = *(_OWORD *)&v8[OBJC_IVAR___UIResolvedShape_value + 32];
    v32[3] = v10;
    v32[0] = v12;
    v32[1] = v11;
    v14 = *(_OWORD *)&v8[OBJC_IVAR___UIResolvedShape_value + 80];
    v13 = *(_OWORD *)&v8[OBJC_IVAR___UIResolvedShape_value + 96];
    v15 = *(_OWORD *)&v8[OBJC_IVAR___UIResolvedShape_value + 64];
    *(_OWORD *)&v33[9] = *(_OWORD *)&v8[OBJC_IVAR___UIResolvedShape_value + 105];
    v32[5] = v14;
    *(_OWORD *)v33 = v13;
    v32[4] = v15;
    v16 = v25;
    v17 = v26;
    v18 = v28;
    *((_OWORD *)v9 + 2) = v27;
    *((_OWORD *)v9 + 3) = v18;
    *(_OWORD *)v9 = v16;
    *((_OWORD *)v9 + 1) = v17;
    v19 = v29;
    v20 = v30;
    v21 = v31[0];
    *(_OWORD *)(v9 + 105) = *(_OWORD *)((char *)v31 + 9);
    *((_OWORD *)v9 + 5) = v20;
    *((_OWORD *)v9 + 6) = v21;
    *((_OWORD *)v9 + 4) = v19;
    sub_1855B8DA4((uint64_t)v32, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
    v22 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v8;
    v3 = v8;

    v2 = 0;
  }
  v23 = v2;
  return v3;
}

uint64_t type metadata accessor for UIShapeResolutionContext(uint64_t a1)
{
  return sub_1851F9080(a1, &qword_1EDD8B4C8);
}

void sub_1857A1630(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  id v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  char v22;
  id v23;
  _OWORD v24[6];
  _OWORD v25[2];
  char v26;
  _OWORD v27[6];
  _OWORD v28[2];
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _OWORD v35[2];
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  _BYTE v44[64];
  __int128 v45;
  __int128 v46;
  _BYTE v47[25];

  v2 = *(_QWORD *)(a1 + OBJC_IVAR___UIShape_value + 8);
  v3 = *(_QWORD *)(a1 + OBJC_IVAR___UIShape_value + 16);
  v4 = *(_QWORD *)(a1 + OBJC_IVAR___UIShape_value + 24);
  v5 = *(_QWORD *)(a1 + OBJC_IVAR___UIShape_value + 32);
  v6 = *(_QWORD *)(a1 + OBJC_IVAR___UIShape_value + 40);
  v7 = *(_QWORD *)(a1 + OBJC_IVAR___UIShape_value + 48);
  v8 = *(_BYTE *)(a1 + OBJC_IVAR___UIShape_value + 56);
  v36 = *(id *)(a1 + OBJC_IVAR___UIShape_value);
  v37 = v2;
  v38 = v3;
  v39 = v4;
  v40 = v5;
  v41 = v6;
  v42 = v7;
  v43 = v8;
  v9 = v1;
  v23 = v36;
  v22 = v8;
  sub_185228314(v36, v2, v3, v4, v5, v6, v7, v8);
  v10 = objc_msgSend(v9, sel__outermostLayer);
  if (v10)
  {
    v11 = v10;
    sub_1855BA434((uint64_t)&v29);
    v12 = v29;
    v13 = v30;
    v14 = v31;
    v15 = v32;
    v16 = BYTE8(v32);
    objc_msgSend(v11, sel_bounds);
    v26 = 0;
    *(_QWORD *)v44 = 1;
    memset(&v44[8], 0, 48);
    v44[56] = 6;
    *(_QWORD *)&v45 = v17;
    *((_QWORD *)&v45 + 1) = v18;
    *(_QWORD *)&v46 = v19;
    *((_QWORD *)&v46 + 1) = v20;
    *(_OWORD *)v47 = 0uLL;
    *(_QWORD *)&v47[16] = -1;
    v47[24] = 0;
    UIShape.resolve(in:)();
    sub_185228168((void *)v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, v16);

    v33 = v27[4];
    v34 = v27[5];
    v35[0] = v28[0];
    *(_OWORD *)((char *)v35 + 9) = *(_OWORD *)((char *)v28 + 9);
    v29 = v27[0];
    v30 = v27[1];
    v31 = v27[2];
    v32 = v27[3];
    UIShape.resolve(in:)();
    sub_1855B8DA4((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
    v33 = v45;
    v34 = v46;
    v35[0] = *(_OWORD *)v47;
    *(_OWORD *)((char *)v35 + 9) = *(_OWORD *)&v47[9];
    v29 = *(_OWORD *)v44;
    v30 = *(_OWORD *)&v44[16];
    v31 = *(_OWORD *)&v44[32];
    v32 = *(_OWORD *)&v44[48];
    v21 = objc_msgSend(v9, sel_layer);
    v24[4] = v33;
    v24[5] = v34;
    v25[0] = v35[0];
    *(_OWORD *)((char *)v25 + 9) = *(_OWORD *)((char *)v35 + 9);
    v24[0] = v29;
    v24[1] = v30;
    v24[2] = v31;
    v24[3] = v32;
    sub_1855BA594((uint64_t)v24);

    sub_1855B8DA4((uint64_t)&v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
    sub_185228168(v23, v2, v3, v4, v5, v6, v7, v22);
  }
  else
  {
    __break(1u);
  }
}

char *sub_1857A1CD4(uint64_t a1)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  char v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat tx;
  CGFloat ty;
  uint64_t v11;
  char *v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  CGAffineTransform v28;
  _OWORD v29[3];
  uint64_t v30;
  char v31;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_layer);
  sub_1855BA434((uint64_t)v29);

  v26 = v29[1];
  v27 = v29[0];
  v25 = v29[2];
  v5 = v30;
  v6 = v31;
  objc_msgSend(v2, sel_convertPoint_toCoordinateSpace_, a1, 0.0, 0.0);
  CGAffineTransformMakeTranslation(&v28, v7, v8);
  v23 = *(_OWORD *)&v28.c;
  v24 = *(_OWORD *)&v28.a;
  tx = v28.tx;
  ty = v28.ty;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = v24;
  *(_OWORD *)(v11 + 32) = v23;
  *(CGFloat *)(v11 + 48) = tx;
  *(CGFloat *)(v11 + 56) = ty;
  *(_OWORD *)(v11 + 64) = v27;
  *(_OWORD *)(v11 + 80) = v26;
  *(_OWORD *)(v11 + 96) = v25;
  *(_QWORD *)(v11 + 112) = v5;
  *(_BYTE *)(v11 + 120) = v6;
  v12 = (char *)objc_msgSend(objc_allocWithZone((Class)UIShape), sel_init);
  v13 = &v12[OBJC_IVAR___UIShape_value];
  v14 = *(void **)&v12[OBJC_IVAR___UIShape_value];
  v15 = *(_QWORD *)&v12[OBJC_IVAR___UIShape_value + 8];
  v16 = *(_QWORD *)&v12[OBJC_IVAR___UIShape_value + 16];
  v17 = *(_QWORD *)&v12[OBJC_IVAR___UIShape_value + 24];
  v18 = *(_QWORD *)&v12[OBJC_IVAR___UIShape_value + 32];
  v19 = *(_QWORD *)&v12[OBJC_IVAR___UIShape_value + 40];
  v20 = *(_QWORD *)&v12[OBJC_IVAR___UIShape_value + 48];
  *(_QWORD *)v13 = v11;
  *(_OWORD *)(v13 + 8) = 0u;
  *(_OWORD *)(v13 + 24) = 0u;
  *(_OWORD *)(v13 + 40) = 0u;
  v21 = v13[56];
  v13[56] = 5;
  sub_185228168(v14, v15, v16, v17, v18, v19, v20, v21);
  return v12;
}

uint64_t sub_1857A1E84()
{
  uint64_t v0;

  sub_185228168(*(void **)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 120));
  return swift_deallocObject();
}

void sub_1857A1EB8(__int128 *a1@<X0>, void *a2@<X1>, _OWORD *a3@<X8>)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  void *v8;
  __int128 *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char *v19;
  void *v20;
  id v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  void *v36;
  char *v37;
  char *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _BYTE v57[32];
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  _OWORD v64[2];

  v5 = a1[5];
  v62 = a1[4];
  v63 = v5;
  v64[0] = a1[6];
  *(_OWORD *)((char *)v64 + 9) = *(__int128 *)((char *)a1 + 105);
  v6 = a1[1];
  v58 = *a1;
  v59 = v6;
  v7 = a1[3];
  v60 = a1[2];
  v61 = v7;
  v8 = (void *)qword_1EDD8B408;
  if (qword_1EDD8B408)
  {
    v9 = (__int128 *)(qword_1EDD8B408 + OBJC_IVAR___UIShapeResolutionContext_value);
    v10 = *(_OWORD *)(qword_1EDD8B408 + OBJC_IVAR___UIShapeResolutionContext_value + 48);
    v12 = *(_OWORD *)(qword_1EDD8B408 + OBJC_IVAR___UIShapeResolutionContext_value);
    v11 = *(_OWORD *)(qword_1EDD8B408 + OBJC_IVAR___UIShapeResolutionContext_value + 16);
    v53 = *(_OWORD *)(qword_1EDD8B408 + OBJC_IVAR___UIShapeResolutionContext_value + 32);
    v54 = v10;
    v51 = v12;
    v52 = v11;
    v14 = *(_OWORD *)(qword_1EDD8B408 + OBJC_IVAR___UIShapeResolutionContext_value + 80);
    v13 = *(_OWORD *)(qword_1EDD8B408 + OBJC_IVAR___UIShapeResolutionContext_value + 96);
    v15 = *(_OWORD *)(qword_1EDD8B408 + OBJC_IVAR___UIShapeResolutionContext_value + 64);
    *(_OWORD *)&v57[9] = *(_OWORD *)(qword_1EDD8B408 + OBJC_IVAR___UIShapeResolutionContext_value + 105);
    v56 = v14;
    *(_OWORD *)v57 = v13;
    v55 = v15;
    v16 = a1[5];
    v9[4] = a1[4];
    v9[5] = v16;
    v9[6] = a1[6];
    *(__int128 *)((char *)v9 + 105) = *(__int128 *)((char *)a1 + 105);
    v17 = a1[1];
    *v9 = *a1;
    v9[1] = v17;
    v18 = a1[3];
    v9[2] = a1[2];
    v9[3] = v18;
    v19 = v8;
    sub_1855B8DA4((uint64_t)&v58, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228314, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D98);
    sub_1855B8DA4((uint64_t)&v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
    v20 = *(void **)&v19[OBJC_IVAR___UIShapeResolutionContext_cachedContentShape];
    *(_QWORD *)&v19[OBJC_IVAR___UIShapeResolutionContext_cachedContentShape] = 0;

  }
  else
  {
    v21 = objc_allocWithZone((Class)UIShapeResolutionContext);
    sub_1855B8DA4((uint64_t)&v58, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228314, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D98);
    v22 = (char *)objc_msgSend(v21, sel_init);
    v23 = &v22[OBJC_IVAR___UIShapeResolutionContext_value];
    v24 = *(_OWORD *)&v22[OBJC_IVAR___UIShapeResolutionContext_value + 48];
    v26 = *(_OWORD *)&v22[OBJC_IVAR___UIShapeResolutionContext_value];
    v25 = *(_OWORD *)&v22[OBJC_IVAR___UIShapeResolutionContext_value + 16];
    v53 = *(_OWORD *)&v22[OBJC_IVAR___UIShapeResolutionContext_value + 32];
    v54 = v24;
    v51 = v26;
    v52 = v25;
    v28 = *(_OWORD *)&v22[OBJC_IVAR___UIShapeResolutionContext_value + 80];
    v27 = *(_OWORD *)&v22[OBJC_IVAR___UIShapeResolutionContext_value + 96];
    v29 = *(_OWORD *)&v22[OBJC_IVAR___UIShapeResolutionContext_value + 64];
    *(_OWORD *)&v57[9] = *(_OWORD *)&v22[OBJC_IVAR___UIShapeResolutionContext_value + 105];
    v56 = v28;
    *(_OWORD *)v57 = v27;
    v55 = v29;
    v30 = v58;
    v31 = v59;
    v32 = v61;
    *((_OWORD *)v23 + 2) = v60;
    *((_OWORD *)v23 + 3) = v32;
    *(_OWORD *)v23 = v30;
    *((_OWORD *)v23 + 1) = v31;
    v33 = v62;
    v34 = v63;
    v35 = v64[0];
    *(_OWORD *)(v23 + 105) = *(_OWORD *)((char *)v64 + 9);
    *((_OWORD *)v23 + 5) = v34;
    *((_OWORD *)v23 + 6) = v35;
    *((_OWORD *)v23 + 4) = v33;
    v19 = v22;
    sub_1855B8DA4((uint64_t)&v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228168, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D8C);
    v36 = (void *)qword_1EDD8B408;
    qword_1EDD8B408 = (uint64_t)v19;

  }
  v37 = (char *)objc_msgSend(a2, sel_resolvedShapeInContext_, v19, v51, v52, v53, v54, v55, v56, *(_QWORD *)v57, *(_OWORD *)&v57[8], *(_QWORD *)&v57[24]);

  v38 = &v37[OBJC_IVAR___UIResolvedShape_value];
  v39 = *(_OWORD *)&v37[OBJC_IVAR___UIResolvedShape_value];
  v40 = *(_OWORD *)&v37[OBJC_IVAR___UIResolvedShape_value + 16];
  v41 = *(_OWORD *)&v37[OBJC_IVAR___UIResolvedShape_value + 48];
  v53 = *(_OWORD *)&v37[OBJC_IVAR___UIResolvedShape_value + 32];
  v54 = v41;
  v51 = v39;
  v52 = v40;
  v42 = *(_OWORD *)&v37[OBJC_IVAR___UIResolvedShape_value + 64];
  v43 = *(_OWORD *)&v37[OBJC_IVAR___UIResolvedShape_value + 80];
  v44 = *(_OWORD *)&v37[OBJC_IVAR___UIResolvedShape_value + 96];
  *(_OWORD *)&v57[9] = *(_OWORD *)&v37[OBJC_IVAR___UIResolvedShape_value + 105];
  v56 = v43;
  *(_OWORD *)v57 = v44;
  v55 = v42;
  v45 = *(_OWORD *)&v37[OBJC_IVAR___UIResolvedShape_value];
  v46 = *(_OWORD *)&v37[OBJC_IVAR___UIResolvedShape_value + 16];
  v47 = *(_OWORD *)&v37[OBJC_IVAR___UIResolvedShape_value + 48];
  a3[2] = *(_OWORD *)&v37[OBJC_IVAR___UIResolvedShape_value + 32];
  a3[3] = v47;
  *a3 = v45;
  a3[1] = v46;
  v48 = *((_OWORD *)v38 + 4);
  v49 = *((_OWORD *)v38 + 5);
  v50 = *((_OWORD *)v38 + 6);
  *(_OWORD *)((char *)a3 + 105) = *(_OWORD *)(v38 + 105);
  a3[5] = v49;
  a3[6] = v50;
  a3[4] = v48;
  sub_1855B8DA4((uint64_t)&v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_185228314, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1855B8D98);

}

void sub_1857A2130(__int128 *a1@<X0>, _OWORD *a2@<X8>)
{
  void **v2;

  sub_1857A1EB8(a1, *v2, a2);
}

uint64_t sub_1857A2138()
{
  uint64_t v0;

  sub_185228168(*(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_BYTE *)(v0 + 104));
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for BridgedShapeProvider()
{
  return &type metadata for BridgedShapeProvider;
}

unint64_t sub_1857A217C(uint64_t a1)
{
  unint64_t result;

  result = sub_1857A21A0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1857A21A0()
{
  unint64_t result;

  result = qword_1EDD8B4D8;
  if (!qword_1EDD8B4D8)
  {
    result = MEMORY[0x186DC9F28](&unk_186677930, &type metadata for BridgedShapeProvider);
    atomic_store(result, (unint64_t *)&qword_1EDD8B4D8);
  }
  return result;
}

uint64_t sub_1857A21E4(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  __int128 *v4;
  __int128 v5;
  unint64_t v6;
  unint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1855B3968(0, v2, 0);
    result = v9;
    v4 = (__int128 *)(a1 + 32);
    do
    {
      v5 = *v4;
      v10 = result;
      v7 = *(_QWORD *)(result + 16);
      v6 = *(_QWORD *)(result + 24);
      if (v7 >= v6 >> 1)
      {
        v8 = *v4;
        sub_1855B3968(v6 > 1, v7 + 1, 1);
        v5 = v8;
        result = v10;
      }
      *(_QWORD *)(result + 16) = v7 + 1;
      *(_OWORD *)(result + 16 * v7 + 32) = v5;
      v4 = (__int128 *)((char *)v4 + 24);
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1857A22AC(uint64_t a1)
{
  int64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    sub_1855B394C(0, v2, 0);
    result = v8;
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v5 = *v4;
      v9 = result;
      v7 = *(_QWORD *)(result + 16);
      v6 = *(_QWORD *)(result + 24);
      if (v7 >= v6 >> 1)
      {
        sub_1855B394C(v6 > 1, v7 + 1, 1);
        result = v9;
      }
      *(_QWORD *)(result + 16) = v7 + 1;
      *(_QWORD *)(result + 8 * v7 + 32) = v5;
      v4 += 3;
      --v2;
    }
    while (v2);
  }
  return result;
}

id UIRBDirectionalLightEffectView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id _s5UIKit30UIRBDirectionalLightEffectViewC11ReplacementO08OutgoingD0V9lineWidth0H6Height05totalJ09baseColorAGSd_S2dSo7UIColorCtcfC_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  id result;
  double v11;

  result = objc_msgSend((id)objc_opt_self(), sel_functionWithName_, *MEMORY[0x1E0CD3050]);
  v11 = 1.3;
  if (a5 / 230.769231 >= 1.3)
  {
    if ((~COERCE__INT64(a5 / 230.769231) & 0x7FF0000000000000) != 0)
    {
      v11 = a5 / 230.769231;
    }
    else
    {
      v11 = 1.3;
      if ((COERCE_UNSIGNED_INT64(a5 / 230.769231) & 0xFFFFFFFFFFFFFLL) == 0)
        v11 = a5 / 230.769231;
    }
  }
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(double *)(a2 + 16) = a5;
  *(_QWORD *)(a2 + 24) = a1;
  *(double *)(a2 + 32) = v11;
  *(_QWORD *)(a2 + 40) = result;
  return result;
}

id UIRBDirectionalLightEffectView.Pondering.Effect.init(lineWidth:lineHeight:totalHeight:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>)
{
  id result;
  double v9;

  result = objc_msgSend((id)objc_opt_self(), sel_functionWithName_, *MEMORY[0x1E0CD3038]);
  v9 = 2.8;
  if (a4 / 107.142857 >= 2.8)
  {
    if ((~COERCE__INT64(a4 / 107.142857) & 0x7FF0000000000000) != 0)
    {
      v9 = a4 / 107.142857;
    }
    else
    {
      v9 = 2.8;
      if ((COERCE_UNSIGNED_INT64(a4 / 107.142857) & 0xFFFFFFFFFFFFFLL) == 0)
        v9 = a4 / 107.142857;
    }
  }
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  *(double *)(a1 + 16) = a4;
  *(double *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1857A254C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1857A2568(uint64_t a1)
{
  sub_1857A48B8(a1);
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1857A258C(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_drawingView)
                  + OBJC_IVAR____TtCC5UIKit30UIRBDirectionalLightEffectViewP33_5F98E6BE5B93275EE5D20586FF75585B11DrawingView_effects);
  swift_bridgeObjectRetain();
  return sub_1857A25DC;
}

uint64_t sub_1857A25DC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = swift_bridgeObjectRetain();
    sub_1857A48B8(v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1857A48B8(v2);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1857A261C@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)(float *a1)@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(float *);

  v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_alongsideAnimation);
  swift_beginAccess();
  v4 = *v3;
  v5 = v3[1];
  if (v4)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1857A50A8;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)(float *))v6;
  return sub_18518D708(v4);
}

uint64_t sub_1857A26B0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(float);
  uint64_t *v7;
  uint64_t v8;

  v3 = *a1;
  v4 = a1[1];
  if (*a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v3;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = sub_1857A5078;
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_alongsideAnimation);
  swift_beginAccess();
  v8 = *v7;
  *v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_18518D708(v3);
  return sub_18518D718(v8);
}

uint64_t sub_1857A2768()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_alongsideAnimation);
  swift_beginAccess();
  v2 = *v1;
  sub_18518D708(*v1);
  return v2;
}

uint64_t sub_1857A27C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_alongsideAnimation);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_18518D718(v6);
}

uint64_t (*sub_1857A281C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

char *UIRBDirectionalLightEffectView.init(frame:)(double a1, double a2, double a3, double a4)
{
  _BYTE *v4;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  char *v18;
  id v19;
  id v20;
  id v21;
  objc_super v23;

  v9 = &v4[OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_alongsideAnimation];
  *v9 = 0;
  v9[1] = 0;
  v4[OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_isAnimationRunning] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_unionEffectDuration] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_animationStartTime] = 0;
  v4[OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_autorepeatsAnimation] = 0;
  v10 = OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_drawingView;
  v11 = objc_allocWithZone((Class)type metadata accessor for UIRBDirectionalLightEffectView.DrawingView());
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_displayLink] = 0;
  v13 = &v12[OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_completionBlock];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v14 = OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_alongsideAnimationCurve;
  *(_QWORD *)&v12[v14] = objc_msgSend((id)objc_opt_self(), sel_functionWithName_, *MEMORY[0x1E0CD3050]);

  v23.receiver = v12;
  v23.super_class = (Class)type metadata accessor for UIRBDirectionalLightEffectView();
  v15 = (char *)objc_msgSendSuper2(&v23, sel_initWithFrame_, a1, a2, a3, a4);
  v16 = OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_drawingView;
  v17 = *(void **)&v15[OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_drawingView];
  v18 = v15;
  v19 = objc_msgSend(v17, sel_layer);
  objc_msgSend(v19, sel_setOpaque_, 0);

  v20 = objc_msgSend(*(id *)&v15[v16], sel_layer);
  objc_opt_self();
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_setColorMode_, 2);

  v21 = objc_msgSend(*(id *)&v15[v16], sel_layer);
  objc_msgSend(v21, sel_setWantsExtendedDynamicRangeContent_, 1);

  objc_msgSend(v18, sel_addSubview_, *(_QWORD *)&v15[v16]);
  return v18;
}

void sub_1857A2AD4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;

  *(_BYTE *)(v3 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_isAnimationRunning) = 1;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_autorepeatsAnimation) = a1;
  *(CFTimeInterval *)(v3 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_animationStartTime) = CACurrentMediaTime();
  v6 = (uint64_t *)(v3 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_completionBlock);
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_completionBlock);
  *v6 = a2;
  v6[1] = a3;
  sub_18518D708(a2);
  sub_18518D718(v7);
  v8 = objc_msgSend((id)objc_opt_self(), sel_displayLinkWithTarget_selector_, v3, sel_update_);
  v9 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  objc_msgSend(v8, sel_addToRunLoop_forMode_, v9, *MEMORY[0x1E0C99860]);

  v10 = *(void **)(v3 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_displayLink);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_displayLink) = v8;

}

void sub_1857A2BE8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_displayLink;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_displayLink), sel_invalidate);
  v2 = *(void **)(v0 + v1);
  *(_QWORD *)(v0 + v1) = 0;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_isAnimationRunning) = 0;
}

void sub_1857A2CA8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  void (**v7)(id);
  void (*v8)(id);
  float v9;
  void *v10;
  double v11;
  uint64_t *v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;

  v2 = v1;
  v3 = *(char **)(v1 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_drawingView);
  objc_msgSend(a1, sel_timestamp);
  v4 = OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_animationStartTime;
  v6 = OBJC_IVAR____TtCC5UIKit30UIRBDirectionalLightEffectViewP33_5F98E6BE5B93275EE5D20586FF75585B11DrawingView_timeOffset;
  *(double *)&v3[OBJC_IVAR____TtCC5UIKit30UIRBDirectionalLightEffectViewP33_5F98E6BE5B93275EE5D20586FF75585B11DrawingView_timeOffset] = v5 - *(double *)(v1 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_animationStartTime);
  objc_msgSend(v3, sel_setNeedsDisplay);
  v7 = (void (**)(id))(v1 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_alongsideAnimation);
  swift_beginAccess();
  v8 = *v7;
  if (*v7)
  {
    v9 = *(double *)&v3[v6]
       / *(double *)(v2 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_unionEffectDuration);
    v10 = *(void **)(v2 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_alongsideAnimationCurve);
    swift_retain();
    *(float *)&v11 = v9;
    v8(objc_msgSend(v10, sel__solveForInput_, v11));
    sub_18518D718((uint64_t)v8);
  }
  if (*(double *)(v2 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_unionEffectDuration) < *(double *)&v3[v6])
  {
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_autorepeatsAnimation) == 1)
    {
      *(CFTimeInterval *)(v2 + v4) = CACurrentMediaTime();
    }
    else
    {
      v12 = (uint64_t *)(v2 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_completionBlock);
      v13 = *(void (**)(uint64_t))(v2 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_completionBlock);
      if (v13)
      {
        v14 = swift_retain();
        v13(v14);
        sub_18518D718((uint64_t)v13);
        v15 = *v12;
      }
      else
      {
        v15 = 0;
      }
      *v12 = 0;
      v12[1] = 0;
      sub_18518D718(v15);
      v16 = OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_displayLink;
      objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_displayLink), sel_invalidate);
      v17 = *(void **)(v2 + v16);
      *(_QWORD *)(v2 + v16) = 0;

      *(_BYTE *)(v2 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_isAnimationRunning) = 0;
    }
  }
}

void sub_1857A2EAC()
{
  char *v0;
  id v1;
  uint64_t v2;
  void *v3;

  v1 = objc_msgSend(v0, sel_window);

  if (v1)
  {
    if (v0[OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_isAnimationRunning] == 1
      && !*(_QWORD *)&v0[OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_displayLink])
    {
      sub_1857A2AD4(v0[OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_autorepeatsAnimation], 0, 0);
    }
  }
  else
  {
    v2 = OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_displayLink;
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_displayLink], sel_invalidate);
    v3 = *(void **)&v0[v2];
    *(_QWORD *)&v0[v2] = 0;

  }
}

id UIRBDirectionalLightEffectView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UIRBDirectionalLightEffectView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t (*UIRBDirectionalLightEffectView.Replacement.OutgoingEffect.duration.modify())(_QWORD, _QWORD)
{
  return signpost_c2_removePresentationModifier_end;
}

uint64_t (*UIRBDirectionalLightEffectView.Replacement.OutgoingEffect.timingFunction.modify())(_QWORD, _QWORD)
{
  return signpost_c2_removePresentationModifier_end;
}

id UIRBDirectionalLightEffectView.Replacement.OutgoingEffect.contents(layer:progress:)(void *a1, float a2)
{
  uint64_t v2;
  double v4;
  double v5;
  void *v6;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v11;
  double v12;
  double v13;
  long double v14;
  long double v15;
  long double v16;
  long double v17;
  double MidX;
  id v19;
  id v20;
  uint64_t inited;
  id v22;
  id v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  id v32;
  id v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  id v42;
  id v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  double v55;
  CGRect v57;
  CGRect v58;

  v4 = *(double *)v2;
  v5 = *(double *)(v2 + 8);
  v6 = *(void **)(v2 + 24);
  objc_msgSend(a1, sel_bounds);
  x = v57.origin.x;
  y = v57.origin.y;
  width = v57.size.width;
  height = v57.size.height;
  v11 = CGRectGetHeight(v57);
  v12 = 320.0;
  if ((*(_QWORD *)&v11 & 0xFFFFFFFFFFFFFLL) == 0)
    v12 = v11;
  if ((~*(_QWORD *)&v11 & 0x7FF0000000000000) != 0)
    v12 = v11;
  if (v11 >= 320.0)
    v13 = v12;
  else
    v13 = 320.0;
  v14 = atan((v5 + v5) / v4);
  v15 = cos(1.57079633 - v14);
  v16 = sqrt(v4 * 0.5 * (v4 * 0.5) + v5 * v5) / (v15 + v15);
  v17 = v5 + v13 * a2 + v13 * a2 + v16;
  v58.origin.x = x;
  v58.origin.y = y;
  v58.size.width = width;
  v58.size.height = height;
  MidX = CGRectGetMidX(v58);
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D87420]), sel_init);
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D87430]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD8B550);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_186669210;
  v22 = objc_msgSend(v6, sel_colorWithAlphaComponent_, 0.0);
  v23 = objc_msgSend(v22, sel_CGColor);
  RBColorFromCGColor2();
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;

  *(_DWORD *)(inited + 32) = v25;
  *(_DWORD *)(inited + 36) = v27;
  *(_DWORD *)(inited + 40) = v29;
  *(_DWORD *)(inited + 44) = v31;
  *(_QWORD *)(inited + 48) = 0;
  v32 = objc_msgSend(v6, sel_colorWithAlphaComponent_, 0.0);
  v33 = objc_msgSend(v32, sel_CGColor);
  RBColorFromCGColor2();
  v35 = v34;
  v37 = v36;
  v39 = v38;
  v41 = v40;

  *(_DWORD *)(inited + 56) = v35;
  *(_DWORD *)(inited + 60) = v37;
  *(_DWORD *)(inited + 64) = v39;
  *(_DWORD *)(inited + 68) = v41;
  *(_QWORD *)(inited + 72) = 0x3FEB333333333333;
  v42 = objc_msgSend(v6, sel_colorWithAlphaComponent_, 1.0);
  v43 = objc_msgSend(v42, sel_CGColor);
  RBColorFromCGColor2();
  v45 = v44;
  v47 = v46;
  v49 = v48;
  v51 = v50;

  *(_DWORD *)(inited + 80) = v45;
  *(_DWORD *)(inited + 84) = v47;
  *(_DWORD *)(inited + 88) = v49;
  *(_DWORD *)(inited + 92) = v51;
  *(_QWORD *)(inited + 96) = 0x3FF0000000000000;
  v52 = sub_1857A21E4(inited);
  v53 = sub_1857A22AC(inited);
  swift_setDeallocating();
  objc_msgSend(v20, sel_setRadialGradientCenter_startRadius_endRadius_stopCount_colors_locations_flags_, 3, v52 + 32, v53 + 32, 0, MidX, (double)(0.0 - v16 + -50.0), (double)v16, (double)v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D87440]), sel_init);
  objc_msgSend(v54, sel_setInfinite);
  LODWORD(v55) = 1.0;
  objc_msgSend(v19, sel_drawShape_fill_alpha_blendMode_, v54, v20, 0, v55);

  return v19;
}

double UIRBDirectionalLightEffectView.Replacement.IncomingEffect.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void UIRBDirectionalLightEffectView.Replacement.IncomingEffect.duration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

uint64_t (*UIRBDirectionalLightEffectView.Replacement.IncomingEffect.duration.modify())(_QWORD, _QWORD)
{
  return signpost_c2_removePresentationModifier_end;
}

id UIRBDirectionalLightEffectView.Replacement.IncomingEffect.timingFunction.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

void UIRBDirectionalLightEffectView.Replacement.IncomingEffect.timingFunction.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
}

uint64_t (*UIRBDirectionalLightEffectView.Replacement.IncomingEffect.timingFunction.modify())(_QWORD, _QWORD)
{
  return signpost_c2_removePresentationModifier_end;
}

void sub_1857A3424()
{
  uint64_t v0;
  id v1;
  id v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  id v11;
  id v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  id v21;
  id v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  id v31;
  id v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD8B550);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_18666AE50;
  *(_OWORD *)(v0 + 32) = xmmword_186677A50;
  *(_QWORD *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 56) = xmmword_186677A60;
  *(_QWORD *)(v0 + 72) = 0x3FD3D70A3D70A3D7;
  *(_OWORD *)(v0 + 80) = xmmword_186677A70;
  *(_QWORD *)(v0 + 96) = 0x3FE2E147AE147AE1;
  v1 = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithHue_saturation_brightness_alpha_, 0.986, 0.349, 0.948, 1.0);
  v2 = objc_msgSend(v1, sel_CGColor);
  RBColorFromCGColor2();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  *(_DWORD *)(v0 + 104) = v4;
  *(_DWORD *)(v0 + 108) = v6;
  *(_DWORD *)(v0 + 112) = v8;
  *(_DWORD *)(v0 + 116) = v10;
  *(_QWORD *)(v0 + 120) = 0x3FE6666666666666;
  v11 = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithHue_saturation_brightness_alpha_, 0.121, 0.319, 0.864, 1.0);
  v12 = objc_msgSend(v11, sel_CGColor);
  RBColorFromCGColor2();
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;

  *(_DWORD *)(v0 + 128) = v14;
  *(_DWORD *)(v0 + 132) = v16;
  *(_DWORD *)(v0 + 136) = v18;
  *(_DWORD *)(v0 + 140) = v20;
  *(_QWORD *)(v0 + 144) = 0x3FE999999999999ALL;
  v21 = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithHue_saturation_brightness_alpha_, 0.057, 0.092, 0.95, 1.0);
  v22 = objc_msgSend(v21, sel_CGColor);
  RBColorFromCGColor2();
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;

  *(_DWORD *)(v0 + 152) = v24;
  *(_DWORD *)(v0 + 156) = v26;
  *(_DWORD *)(v0 + 160) = v28;
  *(_DWORD *)(v0 + 164) = v30;
  *(_QWORD *)(v0 + 168) = 0x3FEE147AE147AE14;
  v31 = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithHue_saturation_brightness_alpha_, 0.129, 1.0, 1.0, 0.0);
  v32 = objc_msgSend(v31, sel_CGColor);
  RBColorFromCGColor2();
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v40 = v39;

  *(_DWORD *)(v0 + 176) = v34;
  *(_DWORD *)(v0 + 180) = v36;
  *(_DWORD *)(v0 + 184) = v38;
  *(_DWORD *)(v0 + 188) = v40;
  *(_QWORD *)(v0 + 192) = 0x3FF0000000000000;
  off_1EDD8B4E0 = (_UNKNOWN *)v0;
}

double sub_1857A36C8()
{
  uint64_t v0;
  double result;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD8B550);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_18666AE50;
  *(_OWORD *)(v0 + 32) = xmmword_186677A80;
  *(_QWORD *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 56) = xmmword_186677A90;
  *(_QWORD *)(v0 + 72) = 0x3FDCCCCCCCCCCCCDLL;
  *(_OWORD *)(v0 + 80) = xmmword_186677AA0;
  *(_QWORD *)(v0 + 96) = 0x3FE8000000000000;
  *(_OWORD *)(v0 + 104) = xmmword_186677AB0;
  *(_QWORD *)(v0 + 120) = 0x3FEF5C28F5C28F5CLL;
  *(_OWORD *)(v0 + 128) = xmmword_186677AB0;
  *(_QWORD *)(v0 + 144) = 0x3FEF5C28F5C28F5CLL;
  result = 0.0250000097;
  *(_OWORD *)(v0 + 152) = xmmword_186677AC0;
  *(_QWORD *)(v0 + 168) = 0x3FEFAE147AE147AELL;
  *(_QWORD *)(v0 + 176) = 0;
  *(_QWORD *)(v0 + 184) = 0;
  *(_QWORD *)(v0 + 192) = 0x3FF0000000000000;
  off_1EDD8B4E8 = (_UNKNOWN *)v0;
  return result;
}

id UIRBDirectionalLightEffectView.Replacement.IncomingEffect.contents(layer:progress:)(void *a1, float a2)
{
  uint64_t v2;
  double v5;
  double v6;
  void *v7;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v12;
  double v13;
  double v14;
  long double v15;
  long double v16;
  double v17;
  double v18;
  double MidX;
  id v20;
  id v21;
  id v22;
  id v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  double v32;
  double v33;
  double v34;
  double v35;
  float v36;
  double v37;
  id v38;
  double v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  double v46;
  float v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  CGRect v54;
  CGRect v55;

  v5 = *(double *)v2;
  v6 = *(double *)(v2 + 8);
  v7 = *(void **)(v2 + 24);
  objc_msgSend(a1, sel_bounds);
  x = v54.origin.x;
  y = v54.origin.y;
  width = v54.size.width;
  height = v54.size.height;
  v12 = CGRectGetHeight(v54);
  v13 = 320.0;
  if ((*(_QWORD *)&v12 & 0xFFFFFFFFFFFFFLL) == 0)
    v13 = v12;
  if ((~*(_QWORD *)&v12 & 0x7FF0000000000000) != 0)
    v13 = v12;
  if (v12 >= 320.0)
    v14 = v13;
  else
    v14 = 320.0;
  v15 = atan((v6 + v6) / v5);
  v16 = cos(1.57079633 - v15);
  v17 = sqrt(v5 * 0.5 * (v5 * 0.5) + v6 * v6) / (v16 + v16);
  v18 = v14 * a2 + v14 * a2 + v17;
  v55.origin.x = x;
  v55.origin.y = y;
  v55.size.width = width;
  v55.size.height = height;
  MidX = CGRectGetMidX(v55);
  v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D87420]), sel_init);
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D87440]), sel_init);
  objc_msgSend(v21, sel_setCircleAtPoint_radius_, MidX, 0.0 - v17 + -50.0, v18 + -10.0);
  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D87430]), sel_init);
  objc_msgSend(a1, sel_colorMode);
  RBColorModeWorkingColorSpace();
  v23 = objc_msgSend(v7, sel_CGColor);
  RBColorFromCGColor2();
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;

  LODWORD(v32) = v25;
  LODWORD(v33) = v27;
  LODWORD(v34) = v29;
  LODWORD(v35) = v31;
  objc_msgSend(v22, sel_setColor_, v32, v33, v34, v35);
  v36 = 1.0;
  LODWORD(v37) = 1.0;
  objc_msgSend(v20, sel_drawShape_fill_alpha_blendMode_, v21, v22, 0, v37);
  v38 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D87440]), sel_init);
  objc_msgSend(v38, sel_setInfinite);
  objc_msgSend(v20, sel_addBlurFilterWithRadius_, 10.0);
  LODWORD(v39) = 1028443341;
  objc_msgSend(v20, sel_addBrightnessFilterWithAmount_, v39);
  v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D87430]), sel_init);
  if (qword_1EDD83D28 != -1)
    swift_once();
  v41 = off_1EDD8B4E0;
  v42 = *((_QWORD *)off_1EDD8B4E0 + 2);
  v43 = sub_1857A21E4((uint64_t)off_1EDD8B4E0);
  objc_msgSend(v40, sel_setRadialGradientCenter_startRadius_endRadius_stopCount_colors_locations_flags_, v42, v43 + 32, sub_1857A22AC((uint64_t)v41) + 32, 0, MidX, 0.0 - v17 + -50.0, v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(float *)&v45 = a2;
  v46 = 0.0 - v17 + -50.0;
  if (a2 <= 1.0)
  {
    if (a2 <= 0.5)
      v36 = 0.5;
    else
      v36 = a2;
  }
  v47 = (float)(v36 + -0.5) + (float)(v36 + -0.5);
  *(float *)&v44 = 1.0 - v47;
  objc_msgSend(v20, sel_drawShape_fill_alpha_blendMode_, v38, v40, 0, v44, v45);
  v48 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D87430]), sel_init);
  if (qword_1EDD83D30 != -1)
    swift_once();
  v49 = off_1EDD8B4E8;
  v50 = *((_QWORD *)off_1EDD8B4E8 + 2);
  v51 = sub_1857A21E4((uint64_t)off_1EDD8B4E8);
  objc_msgSend(v48, sel_setRadialGradientCenter_startRadius_endRadius_stopCount_colors_locations_flags_, v50, v51 + 32, sub_1857A22AC((uint64_t)v49) + 32, 0, MidX, v46, v18 + -80.0, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(float *)&v52 = 0.8 - (float)(v47 * 0.8);
  objc_msgSend(v20, sel_drawShape_fill_alpha_blendMode_, v38, v48, 27, v52);

  return v20;
}

id sub_1857A3C14()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

void sub_1857A3C20()
{
  uint64_t v0;
  id v1;
  id v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  id v11;
  id v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  id v21;
  id v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  id v31;
  id v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  id v41;
  id v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  id v51;
  id v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  int v60;
  id v61;
  id v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD8B550);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_18666AE50;
  v1 = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithHue_saturation_brightness_alpha_, 0.665, 1.0, 0.81, 0.0);
  v2 = objc_msgSend(v1, sel_CGColor);
  RBColorFromCGColor2();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  *(_DWORD *)(v0 + 32) = v4;
  *(_DWORD *)(v0 + 36) = v6;
  *(_DWORD *)(v0 + 40) = v8;
  *(_DWORD *)(v0 + 44) = v10;
  *(_QWORD *)(v0 + 48) = 0;
  v11 = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithHue_saturation_brightness_alpha_, 0.67, 0.333, 0.94, 0.2);
  v12 = objc_msgSend(v11, sel_CGColor);
  RBColorFromCGColor2();
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;

  *(_DWORD *)(v0 + 56) = v14;
  *(_DWORD *)(v0 + 60) = v16;
  *(_DWORD *)(v0 + 64) = v18;
  *(_DWORD *)(v0 + 68) = v20;
  *(_QWORD *)(v0 + 72) = 0x3FC3333333333333;
  v21 = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithHue_saturation_brightness_alpha_, 0.727, 0.554, 0.92, 0.38);
  v22 = objc_msgSend(v21, sel_CGColor);
  RBColorFromCGColor2();
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;

  *(_DWORD *)(v0 + 80) = v24;
  *(_DWORD *)(v0 + 84) = v26;
  *(_DWORD *)(v0 + 88) = v28;
  *(_DWORD *)(v0 + 92) = v30;
  *(_QWORD *)(v0 + 96) = 0x3FD7AE147AE147AELL;
  v31 = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithHue_saturation_brightness_alpha_, 0.73, 0.402, 0.88, 0.57);
  v32 = objc_msgSend(v31, sel_CGColor);
  RBColorFromCGColor2();
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v40 = v39;

  *(_DWORD *)(v0 + 104) = v34;
  *(_DWORD *)(v0 + 108) = v36;
  *(_DWORD *)(v0 + 112) = v38;
  *(_DWORD *)(v0 + 116) = v40;
  *(_QWORD *)(v0 + 120) = 0x3FE2E147AE147AE1;
  v41 = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithHue_saturation_brightness_alpha_, 0.75, 0.493, 0.91, 0.79);
  v42 = objc_msgSend(v41, sel_CGColor);
  RBColorFromCGColor2();
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v50 = v49;

  *(_DWORD *)(v0 + 128) = v44;
  *(_DWORD *)(v0 + 132) = v46;
  *(_DWORD *)(v0 + 136) = v48;
  *(_DWORD *)(v0 + 140) = v50;
  *(_QWORD *)(v0 + 144) = 0x3FE8F5C28F5C28F6;
  v51 = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithHue_saturation_brightness_alpha_, 0.75, 0.49, 0.93, 1.0);
  v52 = objc_msgSend(v51, sel_CGColor);
  RBColorFromCGColor2();
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v60 = v59;

  *(_DWORD *)(v0 + 152) = v54;
  *(_DWORD *)(v0 + 156) = v56;
  *(_DWORD *)(v0 + 160) = v58;
  *(_DWORD *)(v0 + 164) = v60;
  *(_QWORD *)(v0 + 168) = 0x3FECCCCCCCCCCCCDLL;
  v61 = objc_msgSend(objc_allocWithZone((Class)UIColor), sel_initWithHue_saturation_brightness_alpha_, 0.0, 1.0, 1.0, 0.0);
  v62 = objc_msgSend(v61, sel_CGColor);
  RBColorFromCGColor2();
  v64 = v63;
  v66 = v65;
  v68 = v67;
  v70 = v69;

  *(_DWORD *)(v0 + 176) = v64;
  *(_DWORD *)(v0 + 180) = v66;
  *(_DWORD *)(v0 + 184) = v68;
  *(_DWORD *)(v0 + 188) = v70;
  *(_QWORD *)(v0 + 192) = 0x3FF0000000000000;
  off_1EDD8B4F0 = (_UNKNOWN *)v0;
}

void sub_1857A3FE4()
{
  off_1EDD8B4F8 = &unk_1E1685F70;
}

double UIRBDirectionalLightEffectView.Pondering.Effect.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void UIRBDirectionalLightEffectView.Pondering.Effect.duration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*UIRBDirectionalLightEffectView.Pondering.Effect.duration.modify())(_QWORD, _QWORD)
{
  return signpost_c2_removePresentationModifier_end;
}

id UIRBDirectionalLightEffectView.Pondering.Effect.timingFunction.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

void UIRBDirectionalLightEffectView.Pondering.Effect.timingFunction.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
}

uint64_t (*UIRBDirectionalLightEffectView.Pondering.Effect.timingFunction.modify())(_QWORD, _QWORD)
{
  return signpost_c2_removePresentationModifier_end;
}

id UIRBDirectionalLightEffectView.Pondering.Effect.contents(layer:progress:)(void *a1, float a2)
{
  double *v2;
  double v4;
  double v5;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v10;
  double v11;
  double v12;
  long double v13;
  long double v14;
  double v15;
  double MidX;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  double v23;
  double v24;
  double v25;
  float v26;
  double v27;
  id v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  CGRect v35;
  CGRect v36;

  v4 = *v2;
  v5 = v2[1];
  objc_msgSend(a1, sel_bounds);
  x = v35.origin.x;
  y = v35.origin.y;
  width = v35.size.width;
  height = v35.size.height;
  v10 = CGRectGetHeight(v35);
  v11 = 320.0;
  if ((*(_QWORD *)&v10 & 0xFFFFFFFFFFFFFLL) == 0)
    v11 = v10;
  if ((~*(_QWORD *)&v10 & 0x7FF0000000000000) != 0)
    v11 = v10;
  if (v10 >= 320.0)
    v12 = v11;
  else
    v12 = 320.0;
  v13 = atan((v5 + v5) / v4);
  v14 = cos(1.57079633 - v13);
  v15 = sqrt(v4 * 0.5 * (v4 * 0.5) + v5 * v5) / (v14 + v14);
  v36.origin.x = x;
  v36.origin.y = y;
  v36.size.width = width;
  v36.size.height = height;
  MidX = CGRectGetMidX(v36);
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D87430]), sel_init);
  if (qword_1EDD83D38 != -1)
    swift_once();
  v18 = off_1EDD8B4F0;
  v19 = *((_QWORD *)off_1EDD8B4F0 + 2);
  v20 = sub_1857A21E4((uint64_t)off_1EDD8B4F0);
  objc_msgSend(v17, sel_setRadialGradientCenter_startRadius_endRadius_stopCount_colors_locations_flags_, v19, v20 + 32, sub_1857A22AC((uint64_t)v18) + 32, 0, MidX, v12 + v15 + 50.0, v15, v12 * a2 + v12 * a2 + v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D87440]), sel_init);
  objc_msgSend(v21, sel_setInfinite);
  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D87420]), sel_init);
  objc_msgSend(v22, sel_beginLayer);
  objc_msgSend(v22, sel_addBlurFilterWithRadius_, 50.0);
  LODWORD(v23) = 1045220557;
  objc_msgSend(v22, sel_addBrightnessFilterWithAmount_, v23);
  LODWORD(v24) = 1067030938;
  objc_msgSend(v22, sel_addContrastFilterWithAmount_, v24);
  v26 = 1.0;
  if (a2 <= 1.0)
  {
    v26 = 0.5;
    if (a2 > 0.5)
      v26 = a2;
  }
  *(float *)&v25 = 1.0 - (float)((float)(v26 + -0.5) + (float)(v26 + -0.5));
  objc_msgSend(v22, sel_drawShape_fill_alpha_blendMode_, v21, v17, 0, v25);
  LODWORD(v27) = 1.0;
  objc_msgSend(v22, sel_drawLayerWithAlpha_blendMode_, 0, v27);
  objc_msgSend(v22, sel_beginLayer);
  v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D87430]), sel_init);
  if (qword_1EDD83D40 != -1)
    swift_once();
  v29 = off_1EDD8B4F8;
  v30 = *((_QWORD *)off_1EDD8B4F8 + 2);
  v31 = sub_1857A21E4((uint64_t)off_1EDD8B4F8);
  objc_msgSend(v28, sel_setRadialGradientCenter_startRadius_endRadius_stopCount_colors_locations_flags_, v30, v31 + 32, sub_1857A22AC((uint64_t)v29) + 32, 0, MidX, v12 + v15 + 50.0, v12 * a2 + v12 * a2 + v15 + -130.0, v12 * a2 + v12 * a2 + v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(v22, sel_addBlurFilterWithRadius_, 20.0);
  LODWORD(v32) = 1060320051;
  objc_msgSend(v22, sel_drawShape_fill_alpha_blendMode_, v21, v28, 27, v32);
  LODWORD(v33) = 1.0;
  objc_msgSend(v22, sel_drawLayerWithAlpha_blendMode_, 1003, v33);

  return v22;
}

double sub_1857A4450()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

id sub_1857A4458()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

void sub_1857A4480(_QWORD *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;

  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v8);
  v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
  v11 = *(double *)(a2
                  + OBJC_IVAR____TtCC5UIKit30UIRBDirectionalLightEffectViewP33_5F98E6BE5B93275EE5D20586FF75585B11DrawingView_timeOffset);
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v12);
  v14 = v11 / (*(double (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  *(float *)&v14 = v14;
  objc_msgSend(v10, sel__solveForInput_, v14);
  LODWORD(v11) = v15;
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v16);
  v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, float))(v17 + 24))(a3, v16, v17, *(float *)&v11);
  objc_msgSend(a4, sel_drawDisplayList_, v18);

}

uint64_t UIRBDirectionalLightEffectView.isPaused.getter()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_displayLink);
  if (v1)
    return (uint64_t)objc_msgSend(v1, sel_isPaused);
  else
    return 1;
}

id UIRBDirectionalLightEffectView.isPaused.setter(char a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_displayLink), sel_setPaused_, a1 & 1);
}

id (*UIRBDirectionalLightEffectView.isPaused.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;
  void *v4;
  unsigned __int8 v5;

  v2 = (unsigned __int8 *)(a1 + 2);
  v3 = OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_displayLink;
  *a1 = v1;
  a1[1] = v3;
  v4 = *(void **)(v1 + v3);
  if (v4)
    v5 = objc_msgSend(v4, sel_isPaused);
  else
    v5 = 1;
  *v2 = v5;
  return sub_1857A4800;
}

id sub_1857A4800(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + *(_QWORD *)(a1 + 8)), sel_setPaused_, *(unsigned __int8 *)(a1 + 16));
}

uint64_t sub_1857A481C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_displayLink);
  if (v1)
    return (uint64_t)objc_msgSend(v1, sel_isPaused);
  else
    return 1;
}

id sub_1857A4854(char a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_displayLink), sel_setPaused_, a1 & 1);
}

void (*sub_1857A4874(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = UIRBDirectionalLightEffectView.isPaused.modify(v2);
  return sub_185591580;
}

uint64_t sub_1857A48B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_drawingView)
            + OBJC_IVAR____TtCC5UIKit30UIRBDirectionalLightEffectViewP33_5F98E6BE5B93275EE5D20586FF75585B11DrawingView_effects) = a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = a1 + 32;
    swift_bridgeObjectRetain();
    v6 = 0.0;
    do
    {
      sub_1851E75D8(v5, (uint64_t)v11);
      v7 = v12;
      v8 = v13;
      __swift_project_boxed_opaque_existential_0Tm(v11, v12);
      if (v6 < (*(double (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8))
      {
        v9 = v12;
        v10 = v13;
        __swift_project_boxed_opaque_existential_0Tm(v11, v12);
        v6 = (*(double (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
      }
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v11);
      v5 += 40;
      --v4;
    }
    while (v4);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0.0;
  }
  *(double *)(v1 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_unionEffectDuration) = v6;
  return result;
}

uint64_t type metadata accessor for UIRBDirectionalLightEffectView.DrawingView()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for UIRBDirectionalLightEffectView()
{
  return objc_opt_self();
}

void sub_1857A4A18()
{
  _BYTE *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = &v0[OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_alongsideAnimation];
  *v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_isAnimationRunning] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_unionEffectDuration] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_animationStartTime] = 0;
  v0[OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_autorepeatsAnimation] = 0;
  v2 = OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_drawingView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UIRBDirectionalLightEffectView.DrawingView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_displayLink] = 0;
  v3 = &v0[OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_completionBlock];
  *v3 = 0;
  v3[1] = 0;
  v4 = OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_alongsideAnimationCurve;
  *(_QWORD *)&v0[v4] = objc_msgSend((id)objc_opt_self(), sel_functionWithName_, *MEMORY[0x1E0CD3050]);

  sub_186507E04();
  __break(1u);
}

uint64_t sub_1857A4B48@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)(*a1 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_drawingView)
                  + OBJC_IVAR____TtCC5UIKit30UIRBDirectionalLightEffectViewP33_5F98E6BE5B93275EE5D20586FF75585B11DrawingView_effects);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1857A4B6C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_1857A48B8(v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1857A4BA4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  void *v3;
  uint64_t result;

  v3 = *(void **)(*a1 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_displayLink);
  if (v3)
    result = (uint64_t)objc_msgSend(v3, sel_isPaused);
  else
    result = 1;
  *a2 = result;
  return result;
}

id sub_1857A4BEC(unsigned __int8 *a1, _QWORD *a2)
{
  return objc_msgSend(*(id *)(*a2 + OBJC_IVAR____TtC5UIKit30UIRBDirectionalLightEffectView_displayLink), sel_setPaused_, *a1);
}

uint64_t method lookup function for UIRBDirectionalLightEffectView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UIRBDirectionalLightEffectView.renderEffects.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of UIRBDirectionalLightEffectView.renderEffects.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of UIRBDirectionalLightEffectView.renderEffects.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of UIRBDirectionalLightEffectView.alongsideAnimation.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of UIRBDirectionalLightEffectView.alongsideAnimation.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of UIRBDirectionalLightEffectView.alongsideAnimation.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of UIRBDirectionalLightEffectView.startAnimation(autorepeat:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of UIRBDirectionalLightEffectView.stopAnimation()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of UIRBDirectionalLightEffectView.RenderEffect.duration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of UIRBDirectionalLightEffectView.RenderEffect.timingFunction.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of UIRBDirectionalLightEffectView.RenderEffect.contents(layer:progress:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

ValueMetadata *type metadata accessor for UIRBDirectionalLightEffectView.Replacement()
{
  return &type metadata for UIRBDirectionalLightEffectView.Replacement;
}

ValueMetadata *type metadata accessor for UIRBDirectionalLightEffectView.Replacement.OutgoingEffect()
{
  return &type metadata for UIRBDirectionalLightEffectView.Replacement.OutgoingEffect;
}

void destroy for UIRBDirectionalLightEffectView.Replacement.IncomingEffect(uint64_t a1)
{

}

uint64_t _s5UIKit30UIRBDirectionalLightEffectViewC11ReplacementO14OutgoingEffectVwcp_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  v4 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

_QWORD *_s5UIKit30UIRBDirectionalLightEffectViewC11ReplacementO14OutgoingEffectVwca_0(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = (void *)a2[3];
  v5 = (void *)a1[3];
  a1[3] = v4;
  v6 = v4;

  a1[4] = a2[4];
  v7 = (void *)a2[5];
  v8 = (void *)a1[5];
  a1[5] = v7;
  v9 = v7;

  return a1;
}

uint64_t _s5UIKit30UIRBDirectionalLightEffectViewC11ReplacementO14OutgoingEffectVwta_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  return a1;
}

ValueMetadata *type metadata accessor for UIRBDirectionalLightEffectView.Replacement.IncomingEffect()
{
  return &type metadata for UIRBDirectionalLightEffectView.Replacement.IncomingEffect;
}

ValueMetadata *type metadata accessor for UIRBDirectionalLightEffectView.Pondering()
{
  return &type metadata for UIRBDirectionalLightEffectView.Pondering;
}

void destroy for UIRBDirectionalLightEffectView.Pondering.Effect(uint64_t a1)
{

}

uint64_t initializeWithCopy for UIRBDirectionalLightEffectView.Pondering.Effect(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  id v5;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for UIRBDirectionalLightEffectView.Pondering.Effect(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v3 = (void *)a2[4];
  v4 = (void *)a1[4];
  a1[4] = v3;
  v5 = v3;

  return a1;
}

uint64_t assignWithTake for UIRBDirectionalLightEffectView.Pondering.Effect(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for UIRBDirectionalLightEffectView.Pondering.Effect(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UIRBDirectionalLightEffectView.Pondering.Effect(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for UIRBDirectionalLightEffectView.Pondering.Effect()
{
  return &type metadata for UIRBDirectionalLightEffectView.Pondering.Effect;
}

ValueMetadata *type metadata accessor for UIRBDirectionalLightEffectView.LocatedColor()
{
  return &type metadata for UIRBDirectionalLightEffectView.LocatedColor;
}

unint64_t sub_1857A5018()
{
  unint64_t result;

  result = qword_1EDD8B5D0;
  if (!qword_1EDD8B5D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EDD8B5D0);
  }
  return result;
}

uint64_t sub_1857A5054()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1857A5078(float a1)
{
  uint64_t v1;
  uint64_t (*v2)(float *);
  float v4;

  v2 = *(uint64_t (**)(float *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_1857A50A8(float *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(float))(v1 + 16))(*a1);
}

id IntelligenceUI.PromptComposeView.entryView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_entryView);
}

void sub_1857A50FC(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_contentView);
  swift_beginAccess();
  v4 = *v3;
  v5 = v2;
  objc_msgSend(v4, sel_removeFromSuperview);
  v6 = *v3;
  *v3 = v5;
  v7 = v5;

  sub_1857A5184();
}

void sub_1857A5184()
{
  uint64_t v0;
  id *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;

  v1 = (id *)(v0 + OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_contentView);
  swift_beginAccess();
  objc_msgSend(*v1, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v2 = *(void **)(v0 + OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_contentViewContainer);
  objc_msgSend(v2, sel_addSubview_, *v1);
  v3 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_186669240;
  v5 = objc_msgSend(*v1, sel_leadingAnchor);
  v6 = objc_msgSend(v2, sel_leadingAnchor);
  v7 = objc_msgSend(v5, sel_constraintEqualToAnchor_, v6);

  *(_QWORD *)(v4 + 32) = v7;
  v8 = objc_msgSend(*v1, sel_trailingAnchor);
  v9 = objc_msgSend(v2, sel_trailingAnchor);
  v10 = objc_msgSend(v8, sel_constraintEqualToAnchor_, v9);

  *(_QWORD *)(v4 + 40) = v10;
  v11 = objc_msgSend(*v1, sel_topAnchor);
  v12 = objc_msgSend(v2, sel_topAnchor);
  v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

  *(_QWORD *)(v4 + 48) = v13;
  v14 = objc_msgSend(*v1, sel_bottomAnchor);
  v15 = objc_msgSend(v2, sel_bottomAnchor);
  v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

  *(_QWORD *)(v4 + 56) = v16;
  sub_18650766C();
  sub_1851F9080(0, &qword_1EDD85230);
  v17 = (void *)sub_18650763C();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_activateConstraints_, v17, v4);

}

id sub_1857A541C()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_contentView);
  swift_beginAccess();
  return *v1;
}

void sub_1857A5460(void *a1)
{
  uint64_t v1;
  id *v3;
  id v4;
  id v5;

  v3 = (id *)(v1 + OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_contentView);
  swift_beginAccess();
  objc_msgSend(*v3, sel_removeFromSuperview);
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  sub_1857A5184();
}

void (*sub_1857A54D8(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  void *v6;
  id v7;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_contentView;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (void **)(v1 + v4);
  swift_beginAccess();
  v6 = *v5;
  v3[3] = *v5;
  v7 = v6;
  return sub_1857A554C;
}

void sub_1857A554C(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;

  v2 = *(void **)a1;
  v4 = (void **)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v7 = *(void **)(v5 + v6);
  if ((a2 & 1) != 0)
  {
    v8 = v3;
    objc_msgSend(v7, sel_removeFromSuperview);
    v9 = *(void **)(v5 + v6);
    *(_QWORD *)(v5 + v6) = v8;
    v10 = v8;

    sub_1857A5184();
    v11 = *v4;
  }
  else
  {
    objc_msgSend(*(id *)(v5 + v6), sel_removeFromSuperview);
    v12 = *(void **)(v5 + v6);
    *(_QWORD *)(v5 + v6) = v3;
    v11 = v3;

    sub_1857A5184();
  }

  free(v2);
}

id IntelligenceUI.PromptComposeView.inputAreaStackView.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_inputAreaStackView);
}

char *sub_1857A5610(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  char *v20;
  id v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  double v26;
  void *v27;
  char *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  void *v34;
  id *v35;
  void *v36;
  objc_super v38;

  v9 = OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_entryView;
  v10 = objc_allocWithZone((Class)type metadata accessor for IntelligenceUI.PromptEntryView(0));
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_contentView;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)UIView), sel_init);
  v13 = OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_inputAreaStackView;
  v14 = objc_allocWithZone((Class)UIStackView);
  sub_1851F9080(0, (unint64_t *)&qword_1EDD82CE0);
  v15 = (void *)sub_18650763C();
  v16 = objc_msgSend(v14, sel_initWithArrangedSubviews_, v15);

  *(_QWORD *)&v11[v13] = v16;
  v17 = OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_contentViewContainer;
  *(_QWORD *)&v11[v17] = objc_msgSend(objc_allocWithZone((Class)UIView), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v38.receiver = v11;
  v38.super_class = (Class)type metadata accessor for IntelligenceUI.PromptComposeView();
  v18 = objc_msgSendSuper2(&v38, sel_initWithFrame_, a1, a2, a3, a4);
  v19 = (void *)objc_opt_self();
  v20 = (char *)v18;
  v21 = objc_msgSend(v19, sel_systemBackgroundColor);
  objc_msgSend(v20, sel_setBackgroundColor_, v21);

  v22 = OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_inputAreaStackView;
  v23 = *(void **)&v20[OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_inputAreaStackView];
  objc_msgSend(v23, sel_setAxis_, 0);
  objc_msgSend(v23, sel_setAlignment_, 0);
  objc_msgSend(v23, sel_setDistribution_, 2);
  objc_msgSend(v23, sel_setSpacing_, 8.0);
  objc_msgSend(v23, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v23, sel_setClipsToBounds_, 0);
  objc_msgSend(v20, sel_addSubview_, v23);
  v24 = OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_entryView;
  v25 = *(void **)&v20[OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_entryView];
  LODWORD(v26) = 1144750080;
  objc_msgSend(v25, sel_setContentHuggingPriority_forAxis_, 1, v26);
  v27 = (void *)objc_opt_self();
  v28 = v25;
  v29 = objc_msgSend(v27, sel_mainBundle);
  v30 = sub_186506958();
  v32 = v31;

  v33 = (uint64_t *)&v28[OBJC_IVAR____TtCO5UIKit14IntelligenceUI15PromptEntryView_placeholder];
  swift_beginAccess();
  *v33 = v30;
  v33[1] = v32;
  swift_bridgeObjectRelease();
  sub_18573B04C();

  v34 = *(void **)&v20[v24];
  objc_msgSend(v34, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0, 0xE000000000000000);
  objc_msgSend(*(id *)&v20[v22], sel_addArrangedSubview_, v34);
  v35 = (id *)&v20[OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_contentView];
  swift_beginAccess();
  objc_msgSend(*v35, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  v36 = *(void **)&v20[OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_contentViewContainer];
  objc_msgSend(v36, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v36, sel_addSubview_, *v35);
  objc_msgSend(v20, sel_insertSubview_atIndex_, v36, 0);
  sub_1857A5A44();

  return v20;
}

void sub_1857A5A44()
{
  char *v0;
  id v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;

  v1 = objc_msgSend(v0, sel_layoutMarginsGuide);
  v28 = objc_msgSend(v0, sel_keyboardLayoutGuide);
  if (v28)
  {
    v26 = (void *)objc_opt_self();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A80);
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_186677BD0;
    v3 = *(void **)&v0[OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_inputAreaStackView];
    v4 = objc_msgSend(v3, sel_leadingAnchor);
    v5 = objc_msgSend(v1, sel_leadingAnchor);
    v6 = objc_msgSend(v4, sel_constraintEqualToAnchor_, v5);

    *(_QWORD *)(v2 + 32) = v6;
    v7 = objc_msgSend(v3, sel_trailingAnchor);
    v8 = objc_msgSend(v1, sel_trailingAnchor);
    v9 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v8);

    *(_QWORD *)(v2 + 40) = v9;
    v10 = objc_msgSend(v3, sel_bottomAnchor);
    v11 = objc_msgSend(v28, sel_topAnchor);
    v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

    *(_QWORD *)(v2 + 48) = v12;
    v13 = *(void **)&v0[OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_contentViewContainer];
    v14 = objc_msgSend(v13, sel_leadingAnchor);
    v15 = objc_msgSend(v0, sel_leadingAnchor);
    v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

    *(_QWORD *)(v2 + 56) = v16;
    v17 = objc_msgSend(v13, sel_trailingAnchor);
    v18 = objc_msgSend(v0, sel_trailingAnchor);
    v19 = objc_msgSend(v17, sel_constraintEqualToAnchor_, v18);

    *(_QWORD *)(v2 + 64) = v19;
    v20 = objc_msgSend(v13, sel_bottomAnchor);
    v21 = objc_msgSend(v3, sel_topAnchor);
    v22 = objc_msgSend(v20, sel_constraintEqualToAnchor_, v21);

    *(_QWORD *)(v2 + 72) = v22;
    v23 = objc_msgSend(v13, sel_topAnchor);
    v24 = objc_msgSend(v0, sel_topAnchor);
    v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v24);

    *(_QWORD *)(v2 + 80) = v25;
    sub_18650766C();
    sub_1851F9080(0, &qword_1EDD85230);
    v27 = (id)sub_18650763C();
    swift_bridgeObjectRelease();
    objc_msgSend(v26, sel_activateConstraints_, v27);

  }
  else
  {
    __break(1u);
  }
}

id IntelligenceUI.PromptComposeView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IntelligenceUI.PromptComposeView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for IntelligenceUI.PromptComposeView()
{
  return objc_opt_self();
}

id sub_1857A5E50@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_contentView);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for IntelligenceUI.PromptComposeView()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of IntelligenceUI.PromptComposeView.contentView.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of IntelligenceUI.PromptComposeView.contentView.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of IntelligenceUI.PromptComposeView.contentView.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

void sub_1857A5F5C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;

  v1 = OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_entryView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for IntelligenceUI.PromptEntryView(0)), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v2 = OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_contentView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIView), sel_init);
  v3 = OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_inputAreaStackView;
  v4 = objc_allocWithZone((Class)UIStackView);
  sub_1851F9080(0, (unint64_t *)&qword_1EDD82CE0);
  v5 = (void *)sub_18650763C();
  v6 = objc_msgSend(v4, sel_initWithArrangedSubviews_, v5);

  *(_QWORD *)&v0[v3] = v6;
  v7 = OBJC_IVAR____TtCO5UIKit14IntelligenceUI17PromptComposeView_contentViewContainer;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)UIView), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_186507E04();
  __break(1u);
}

uint64_t type metadata accessor for _UITextFormattingViewControllerDelegateBox()
{
  return objc_opt_self();
}

uint64_t sub_1857A60D4()
{
  return MEMORY[0x1E0DEE9E8];
}

uint64_t UITextFormattingViewController.Delegate._disabledComponentsForTextFormattingViewController(_:)()
{
  return MEMORY[0x1E0DEE9E8];
}

uint64_t UITextFormattingViewController.Delegate.textFormattingViewController(_:shouldPresentFontPicker:)()
{
  return 1;
}

uint64_t UITextFormattingViewController.Delegate.textFormattingViewController(_:shouldPresentColorPicker:)()
{
  return 1;
}

void sub_1857A60FC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char v9;
  uint64_t ObjectType;
  void *v11;
  uint64_t v12;
  char v13;

  v5 = v2
     + OBJC_IVAR____TtC5UIKitP33_B50EEBA0FD25BA8C617D8B9D7A7CF9F242_UITextFormattingViewControllerDelegateBox_delegate;
  if (MEMORY[0x186DCA138](v2+ OBJC_IVAR____TtC5UIKitP33_B50EEBA0FD25BA8C617D8B9D7A7CF9F242_UITextFormattingViewControllerDelegateBox_delegate))
  {
    v6 = *(_QWORD *)(v5 + 8);
    static UITextFormattingViewController.ChangeValue._unconditionallyBridgeFromObjectiveC(_:)(a2, (uint64_t)&v11);
    v7 = v11;
    v8 = v12;
    v9 = v13;
    ObjectType = swift_getObjectType();
    v11 = v7;
    v12 = v8;
    v13 = v9;
    (*(void (**)(uint64_t, void **, uint64_t, uint64_t))(v6 + 8))(a1, &v11, ObjectType, v6);
    swift_unknownObjectRelease();
    sub_1856B22A0(v7, v8, v9);
  }
}

id sub_1857A6548()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _UITextFormattingViewControllerDelegateBox();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t (*UITextFormattingViewController.delegate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = UITextFormattingViewController.delegate.getter();
  a1[1] = v3;
  return sub_1857A65C4;
}

uint64_t sub_1857A65C4(uint64_t *a1, char a2)
{
  return sub_1857A67E8(a1, a2, UITextFormattingViewController.delegate.setter);
}

uint64_t _sSo30UITextFormattingViewControllerC5UIKitE8delegateAbCE8Delegate_pSgvg_0()
{
  void *v0;
  id v1;
  uint64_t v2;
  char *v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  swift_beginAccess();
  v1 = objc_getAssociatedObject(v0, &unk_1EDD8B660);
  swift_endAccess();
  if (v1)
  {
    sub_186507B1C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1855B00F4((uint64_t)v5, (uint64_t)v6);
  if (!v7)
  {
    sub_1855BDE94((uint64_t)v6);
    return 0;
  }
  type metadata accessor for _UITextFormattingViewControllerDelegateBox();
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v2 = MEMORY[0x186DCA138](&v4[OBJC_IVAR____TtC5UIKitP33_B50EEBA0FD25BA8C617D8B9D7A7CF9F242_UITextFormattingViewControllerDelegateBox_delegate]);

  return v2;
}

uint64_t _sSo30UITextFormattingViewControllerC5UIKitE8delegateAbCE8Delegate_pSgvs_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  char *v4;
  char *v5;

  v4 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for _UITextFormattingViewControllerDelegateBox()), sel_init);
  *(_QWORD *)&v4[OBJC_IVAR____TtC5UIKitP33_B50EEBA0FD25BA8C617D8B9D7A7CF9F242_UITextFormattingViewControllerDelegateBox_delegate
               + 8] = a2;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  objc_setAssociatedObject(v2, &unk_1EDD8B660, v4, (void *)1);
  swift_endAccess();
  v5 = v4;
  objc_msgSend(v2, sel_setDelegate_, v5);

  return swift_unknownObjectRelease();
}

uint64_t (*UITextFormattingViewController._delegate.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = UITextFormattingViewController.delegate.getter();
  a1[1] = v3;
  return sub_1857A67DC;
}

uint64_t sub_1857A67DC(uint64_t *a1, char a2)
{
  return sub_1857A67E8(a1, a2, (uint64_t (*)(uint64_t, uint64_t))UITextFormattingViewController._delegate.setter);
}

uint64_t sub_1857A67E8(uint64_t *a1, char a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1[1];
  if ((a2 & 1) == 0)
    return a3(*a1, v4);
  v5 = swift_unknownObjectRetain();
  a3(v5, v4);
  return swift_unknownObjectRelease();
}

uint64_t sub_1857A6848@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = UITextFormattingViewController.delegate.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1857A6870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, UITextFormattingViewController.delegate.setter);
}

uint64_t sub_1857A687C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))UITextFormattingViewController._delegate.setter);
}

uint64_t keypath_setTm_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = swift_unknownObjectRetain();
  return a5(v7, v6);
}

uint64_t dispatch thunk of UITextFormattingViewController.Delegate.textFormattingViewController(_:didChangeValue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of UITextFormattingViewController.Delegate.textFormattingViewController(_:shouldPresentFontPicker:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of UITextFormattingViewController.Delegate.textFormattingViewController(_:shouldPresentColorPicker:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of UITextFormattingViewController.Delegate.textFormattingDidFinish(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of UITextFormattingViewController.Delegate._disabledComponentsForTextFormattingViewController(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

unint64_t sub_1857A68EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EDD84620;
  if (!qword_1EDD84620)
  {
    type metadata accessor for ComponentKey(255);
    result = MEMORY[0x186DC9F28](&unk_186667320, v1);
    atomic_store(result, (unint64_t *)&qword_1EDD84620);
  }
  return result;
}

uint64_t UITextItem.content.getter@<X0>(uint64_t *a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  id v20;
  void *v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;

  v2 = v1;
  v4 = sub_186506B20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EDD86550);
  *(_QWORD *)&v9 = MEMORY[0x1E0C80A78](v8).n128_u64[0];
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend(v2, sel_contentType, v9);
  if (v12 == (id)2)
  {
    v14 = objc_msgSend(v2, sel_tagIdentifier);
    if (v14)
    {
      v15 = v14;
      v16 = sub_1865074F8();
      v18 = v17;

      *a1 = v16;
      a1[1] = v18;
      type metadata accessor for UITextItem.Content();
      return swift_storeEnumTagMultiPayload();
    }
    goto LABEL_13;
  }
  if (v12 == (id)1)
  {
    v13 = objc_msgSend(v2, sel_textAttachment);
    if (v13)
    {
      *a1 = (uint64_t)v13;
      type metadata accessor for UITextItem.Content();
      return swift_storeEnumTagMultiPayload();
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v12)
  {
    v20 = objc_msgSend(v2, sel_link);
    if (v20)
    {
      v21 = v20;
      sub_186506B14();

      v22 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v22(v11, v7, v4);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v11, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) != 1)
      {
        v22((char *)a1, v11, v4);
        type metadata accessor for UITextItem.Content();
        return swift_storeEnumTagMultiPayload();
      }
      goto LABEL_15;
    }
LABEL_14:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v11, 1, 1, v4);
LABEL_15:
    __break(1u);
  }
  result = sub_186507E04();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for UITextItem.Content()
{
  uint64_t result;

  result = qword_1EDD8B670;
  if (!qword_1EDD8B670)
    return swift_getSingletonMetadata();
  return result;
}

id UITextItemMenuConfiguration.init(preview:menu:)(void **a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  if (!*a1)
  {
    v5 = objc_msgSend((id)objc_opt_self(), sel_defaultPreview);
LABEL_6:
    v4 = v5;
    sub_1856CB1C4(v3);
    goto LABEL_7;
  }
  if (v3 != (void *)1)
  {
    v5 = objc_msgSend(objc_allocWithZone((Class)UITextItemMenuPreview), sel_initWithView_, v3);
    goto LABEL_6;
  }
  v4 = 0;
LABEL_7:
  v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_configurationWithPreview_menu_, v4, a2);

  return v6;
}

char *_s7ContentOwCP_0(char *a1, char **a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v10 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v10;
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = *a2;
      *(_QWORD *)a1 = *a2;
      v8 = v7;
    }
    else
    {
      v11 = sub_186506B20();
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void _s7ContentOwxx(id *a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      swift_bridgeObjectRelease();
      break;
    case 1:

      break;
    case 0:
      v3 = sub_186506B20();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      break;
  }
}

_QWORD *_s7ContentOwcp_0(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = (void *)*a2;
    *a1 = *a2;
    v6 = v5;
  }
  else
  {
    v8 = sub_186506B20();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *_s7ContentOwca_0(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  void *v5;
  id v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_1857A6F7C((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v5 = (void *)*a2;
      *a1 = *a2;
      v6 = v5;
    }
    else
    {
      v7 = sub_186506B20();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1857A6F7C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UITextItem.Content();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *_s7ContentOwtk(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_186506B20();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *_s7ContentOwta_0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1857A6F7C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_186506B20();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1857A70D8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_186506B20();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for UITextItemMenuConfiguration.Preview()
{
  return &type metadata for UITextItemMenuConfiguration.Preview;
}

char *sub_1857A7198()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  id v3;
  char *v4;
  char *v5;
  void *v6;
  char *v7;
  id v8;
  void *v9;
  objc_super v11;

  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR____TtC5UIKit29_UIPinchDismissSubInteraction_axis] = 3;
  v2 = OBJC_IVAR____TtC5UIKit29_UIPinchDismissSubInteraction_gesture;
  v3 = objc_allocWithZone((Class)_UITransformGestureRecognizer);
  v4 = v0;
  *(_QWORD *)&v0[v2] = objc_msgSend(v3, sel_init);

  v11.receiver = v4;
  v11.super_class = ObjectType;
  v5 = (char *)objc_msgSendSuper2(&v11, sel_init);
  v6 = *(void **)&v5[OBJC_IVAR____TtC5UIKit29_UIPinchDismissSubInteraction_gesture];
  v7 = v5;
  objc_msgSend(v6, sel_addTarget_action_, v7, sel_handlePinch_);
  objc_msgSend(v6, sel_setDelegate_, v7);
  v8 = v6;
  v9 = (void *)sub_1865074D4();
  objc_msgSend(v8, sel_setName_, v9);

  return v7;
}

uint64_t sub_1857A730C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  char v7;
  void *v8;
  id v9;

  v2 = v1;
  v4 = (void *)MEMORY[0x186DCA138](v2 + OBJC_IVAR____TtC5UIKit29_UIPinchDismissSubInteraction_view);
  v5 = v4;
  if (!a1)
  {
    if (!v4)
      return swift_unknownObjectWeakAssign();

LABEL_7:
    v8 = *(void **)(v2 + OBJC_IVAR____TtC5UIKit29_UIPinchDismissSubInteraction_gesture);
    v9 = objc_msgSend(v8, sel_view);
    objc_msgSend(v9, sel_removeGestureRecognizer_, v8);

    return swift_unknownObjectWeakAssign();
  }
  if (!v4)
    goto LABEL_7;
  sub_1851F9080(0, (unint64_t *)&qword_1EDD82CE0);
  v6 = a1;
  v7 = sub_186507A44();

  if ((v7 & 1) == 0)
    goto LABEL_7;
  return swift_unknownObjectWeakAssign();
}

void sub_1857A74EC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char *v20;
  BOOL v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  char v32;

  v3 = MEMORY[0x186DCA138](v1 + OBJC_IVAR____TtC5UIKit29_UIPinchDismissSubInteraction_parent);
  if (v3)
  {
    v23 = (char *)v3;
    v4 = objc_msgSend(a1, sel_view);
    objc_msgSend(a1, sel_locationInView_, v4);
    v6 = v5;
    v8 = v7;

    objc_msgSend(a1, sel_translation);
    v10 = v9;
    v12 = v11;
    objc_msgSend(a1, sel_rotation);
    v14 = v13;
    objc_msgSend(a1, sel_scale);
    v16 = v15;
    objc_msgSend(a1, sel_transform);
    v17 = v24;
    v18 = v25;
    v19 = v26;
    *(_QWORD *)&v24 = v6;
    *((_QWORD *)&v24 + 1) = v8;
    *(_QWORD *)&v25 = v10;
    *((_QWORD *)&v25 + 1) = v12;
    v26 = 0uLL;
    v27 = v14;
    v28 = v16;
    v29 = v17;
    v30 = v18;
    v31 = v19;
    v32 = 0;
    v20 = (char *)objc_msgSend(a1, sel_state);
    if ((unint64_t)(v20 - 3) < 2)
    {
      sub_1857A9258(v1, (double *)&v24, v23, &OBJC_IVAR____TtC5UIKit29_UIDismissInteractionSettings_pinch, &OBJC_IVAR____TtC5UIKit29_UIPinchDismissSubInteraction_axis);
    }
    else if (v20 == (char *)2)
    {
      sub_1857A8A88(v1, (uint64_t)&v24, v23);
    }
    else
    {
      v21 = v20 == (char *)1;
      v22 = v23;
      if (!v21)
        goto LABEL_11;
      sub_1857A7698();
      sub_1857A9EA0(&v24, v23);
    }
    v22 = v23;
LABEL_11:

  }
}

void sub_1857A7698()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;

  v1 = MEMORY[0x186DCA138](&v0[OBJC_IVAR____TtC5UIKit29_UIPinchDismissSubInteraction_view]);
  if (v1)
  {
    v11 = (id)v1;
    v2 = *(void **)&v0[OBJC_IVAR____TtC5UIKit29_UIPinchDismissSubInteraction_gesture];
    v3 = objc_msgSend(v2, sel__activeEventOfType_, 14);
    if (!v3)
    {
      v8 = objc_msgSend(v2, sel__allActiveTouches);
      if (!v8)
      {
LABEL_9:

        return;
      }
      v9 = v8;
      sub_1851F9080(0, (unint64_t *)&qword_1EDD88250);
      sub_185219C3C((unint64_t *)&qword_1EDD8B6A0, (unint64_t *)&qword_1EDD88250);
      v10 = sub_1865077EC();

      sub_1857A99CC(v10, (uint64_t)v0, (uint64_t)v11);
      swift_bridgeObjectRelease();
LABEL_8:

      goto LABEL_9;
    }
    v4 = v3;
    v5 = objc_msgSend(v11, sel_window);
    v6 = objc_msgSend(v4, sel__gestureRecognizersForWindow_, v5);

    if (v6)
    {
      sub_1851F9080(0, &qword_1EDD8B6A8);
      sub_185219C3C(&qword_1EDD8B6B0, &qword_1EDD8B6A8);
      v7 = sub_1865077EC();

      sub_1857A9614(v7, (uint64_t)v0, (uint64_t)v11);
      swift_bridgeObjectRelease();

      goto LABEL_8;
    }
    __break(1u);
  }
}

uint64_t type metadata accessor for _UIPinchDismissSubInteraction()
{
  return objc_opt_self();
}

void sub_1857A795C(void *a1)
{
  swift_unknownObjectWeakAssign();

}

id sub_1857A7990(char a1)
{
  uint64_t v1;

  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC5UIKit29_UIPinchDismissSubInteraction_gesture), sel_setEnabled_, a1 & 1);
}

void sub_1857A7B60(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  void *v4;
  id v7;
  void *ObjCClassFromMetadata;
  id v9;
  void *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double *v23;
  double *v24;
  double Width;
  double Height;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  double v35;
  double v36;
  void *v37;
  id v38;
  void *v39;
  char *v40;
  double v41;
  double v42;
  CGFloat b;
  CGFloat c;
  CGFloat d;
  CGFloat tx;
  CGFloat ty;
  id v48;
  void *v49;
  char *v50;
  double v51;
  id v52;
  void *v53;
  char *v54;
  double v55;
  double v56;
  CGFloat v57;
  CGFloat v58;
  id v59;
  uint64_t v60;
  char **v61;
  char **v62;
  id v63;
  CGFloat a;
  double v65;
  id v66;
  id v67;
  CGAffineTransform v68;
  objc_super v69;
  objc_super v70;
  CGAffineTransform v71;
  objc_super v72;
  CGFloat v73;
  double v74;
  double v75;
  objc_super v76;
  _BYTE v77[56];
  _BYTE v78[64];
  CGRect v79;
  CGRect v80;

  if (a3[OBJC_IVAR____UIDismissInteraction__isActive] != 1)
    return;
  v4 = *(void **)&a3[OBJC_IVAR____UIDismissInteraction_trackingView];
  if (!v4)
    return;
  v67 = v4;
  v66 = objc_msgSend(a3, sel_view);
  if (!v66)
  {
    v37 = v67;
LABEL_19:

    return;
  }
  v7 = objc_msgSend(v67, sel_window);

  if (!v7)
  {

    v37 = v66;
    goto LABEL_19;
  }
  type metadata accessor for _UIDismissInteractionSettingsDomain();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v76.receiver = ObjCClassFromMetadata;
  v76.super_class = (Class)&OBJC_METACLASS____TtC5UIKit35_UIDismissInteractionSettingsDomain;
  v9 = objc_msgSendSuper2(&v76, sel_rootSettings);
  if (!v9)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v10 = v9;
  type metadata accessor for _UIDismissInteractionSettings();
  v11 = (char *)objc_retain(*(id *)(swift_dynamicCastClassUnconditional()
                                  + OBJC_IVAR____TtC5UIKit29_UIDismissInteractionSettings_swipeDown));

  v12 = a3[OBJC_IVAR____UIDismissInteraction_trackingViewDidBecomeVisible];
  if ((v12 & 1) == 0)
  {
    a3[OBJC_IVAR____UIDismissInteraction_trackingViewDidBecomeVisible] = 1;
    objc_msgSend(v67, sel_center);
    v13 = &a3[OBJC_IVAR____UIDismissInteraction_originalTrackingViewPosition];
    *(_QWORD *)v13 = v14;
    *((_QWORD *)v13 + 1) = v15;
    v16 = objc_msgSend(v67, sel_superview);
    if (!v16)
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v17 = v16;
    objc_msgSend(v16, sel_convertPoint_toCoordinateSpace_, v66, *(double *)v13, *((double *)v13 + 1));
    v19 = v18;
    v21 = v20;

    v22 = *(double *)&a3[OBJC_IVAR____UIDismissInteraction_originalTouchPosition + 8] - v21;
    v23 = (double *)&a3[OBJC_IVAR____UIDismissInteraction_touchAdjustment];
    *v23 = *(double *)&a3[OBJC_IVAR____UIDismissInteraction_originalTouchPosition] - v19;
    v23[1] = v22;
  }
  v24 = (double *)&a3[OBJC_IVAR____UIDismissInteraction_translation];
  *(_OWORD *)&a3[OBJC_IVAR____UIDismissInteraction_translation] = *(_OWORD *)(a2 + 16);
  objc_msgSend(v66, sel_bounds);
  Width = CGRectGetWidth(v79);
  objc_msgSend(v66, sel_bounds);
  Height = CGRectGetHeight(v80);
  if (Height < Width)
    Width = Height;
  if (Width < 0.0)
  {
    __break(1u);
    goto LABEL_39;
  }
  sub_1856C0790();
  v28 = v27;
  v30 = v29;
  v75 = *v24;
  sub_185774578(0.0, 0.0, -Width, Width);
  v74 = v24[1];
  sub_185774578(v28, v30, -Width, Width);
  v31 = *(double *)(a2 + 56);
  v73 = v31;
  v32 = OBJC_IVAR____TtC5UIKit33_UISwipeDownDismissSubInteraction_axis;
  v33 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5UIKit33_UISwipeDownDismissSubInteraction_axis);
  if (v33 == 2)
  {
    v36 = v74 / v30;
  }
  else if (v33 == 1)
  {
    v34 = objc_msgSend(v66, sel_effectiveUserInterfaceLayoutDirection);
    v35 = fabs(v75 / 0.0);
    if (v34)
      v36 = v35;
    else
      v36 = v75 / 0.0;
  }
  else
  {
    v72.receiver = ObjCClassFromMetadata;
    v72.super_class = (Class)&OBJC_METACLASS____TtC5UIKit35_UIDismissInteractionSettingsDomain;
    v38 = objc_msgSendSuper2(&v72, sel_rootSettings);
    if (!v38)
    {
LABEL_45:
      __break(1u);
      return;
    }
    v39 = v38;
    v40 = (char *)objc_retain(*(id *)(swift_dynamicCastClassUnconditional()
                                    + OBJC_IVAR____TtC5UIKit29_UIDismissInteractionSettings_swipeDown));

    v41 = *(double *)&v40[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_minScale];
    v36 = (1.0 - v31) / (1.0 - v41);
  }
  sub_1856B6118(a2 + 64, (uint64_t)v77);
  sub_1856B6118((uint64_t)v77, (uint64_t)v78);
  v65 = v36;
  if ((v78[48] & 1) == 0)
  {
    v70.receiver = ObjCClassFromMetadata;
    v70.super_class = (Class)&OBJC_METACLASS____TtC5UIKit35_UIDismissInteractionSettingsDomain;
    v48 = objc_msgSendSuper2(&v70, sel_rootSettings);
    if (!v48)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    v49 = v48;
    v50 = (char *)objc_retain(*(id *)(swift_dynamicCastClassUnconditional()
                                    + OBJC_IVAR____TtC5UIKit29_UIDismissInteractionSettings_swipeDown));

    v51 = *(double *)&v50[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_minScale];
    if (v51 <= 1.0)
    {
      v69.receiver = ObjCClassFromMetadata;
      v69.super_class = (Class)&OBJC_METACLASS____TtC5UIKit35_UIDismissInteractionSettingsDomain;
      v52 = objc_msgSendSuper2(&v69, sel_rootSettings);
      if (!v52)
      {
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      v53 = v52;
      v54 = (char *)objc_retain(*(id *)(swift_dynamicCastClassUnconditional()
                                      + OBJC_IVAR____TtC5UIKit29_UIDismissInteractionSettings_swipeDown));

      v55 = *(double *)&v54[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_scaleStretchinessLowerBound];
      v56 = *(double *)&v54[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_scaleStretchinessUpperBound];

      if (v55 <= v56)
      {
        sub_185774578(v51, 1.0, v55, v56);
        v42 = v73;
        CGAffineTransformMakeScale(&v71, v73, v73);
        CGAffineTransformRotate(&v68, &v71, *(CGFloat *)(a2 + 48));
        b = v68.b;
        a = v68.a;
        c = v68.c;
        d = v68.d;
        tx = v68.tx;
        ty = v68.ty;
        goto LABEL_30;
      }
      goto LABEL_40;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v42 = _UILerp(v36, *(double *)&v11[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_minScale]);
  CGAffineTransformMakeScale(&v71, v42, v42);
  b = v71.b;
  a = v71.a;
  c = v71.c;
  d = v71.d;
  tx = v71.tx;
  ty = v71.ty;
LABEL_30:
  v57 = v75 + (1.0 - v42) * *(double *)&a3[OBJC_IVAR____UIDismissInteraction_touchAdjustment];
  v58 = v74 + (1.0 - v42) * *(double *)&a3[OBJC_IVAR____UIDismissInteraction_touchAdjustment + 8];
  v59 = objc_msgSend(objc_allocWithZone((Class)_UIDismissInteractionUpdate), sel_init);
  objc_msgSend(v59, sel_setOriginalTrackingViewPosition_, *(double *)&a3[OBJC_IVAR____UIDismissInteraction_originalTrackingViewPosition], *(double *)&a3[OBJC_IVAR____UIDismissInteraction_originalTrackingViewPosition + 8]);
  CGAffineTransformMakeTranslation(&v71, v57, v58);
  objc_msgSend(v59, sel_setTranslation_, &v71);
  v71.a = a;
  v71.b = b;
  v71.c = c;
  v71.d = d;
  v71.tx = tx;
  v71.ty = ty;
  objc_msgSend(v59, sel_setTransform_, &v71);
  objc_msgSend(v59, sel_setScale_, v42);
  objc_msgSend(v59, sel_setProgressToMinScale_, v65);
  v60 = OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_updateSpring;
  v61 = &selRef_trackingDampingRatio;
  if ((_DWORD)v12)
  {
    v62 = &selRef_trackingResponse;
  }
  else
  {
    v61 = &selRef_dampingRatio;
    v62 = &selRef_response;
  }
  objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_updateSpring], *v61, *(_QWORD *)&a);
  objc_msgSend(v59, sel_setDampingRatio_);
  objc_msgSend(*(id *)&v11[v60], *v62);
  objc_msgSend(v59, sel_setResponse_);
  objc_msgSend(v59, sel_setIsTracking_, v12);
  objc_msgSend(v59, sel_setWantsHeightClamping_, *(_QWORD *)(a1 + v32) == 2);
  v63 = objc_msgSend(a3, sel_delegate);
  if (v63)
  {
    objc_msgSend(v63, sel_dismissInteraction_didIssueUpdate_, a3, v59);

    swift_unknownObjectRelease();
  }
  else
  {

  }
}

void sub_1857A82F4(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  void *v4;
  id v7;
  void *ObjCClassFromMetadata;
  id v9;
  void *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double *v23;
  double *v24;
  double Width;
  double Height;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  double v36;
  double v37;
  void *v38;
  id v39;
  void *v40;
  double v41;
  char *v42;
  double v43;
  double v44;
  CGFloat b;
  CGFloat c;
  CGFloat d;
  CGFloat tx;
  CGFloat ty;
  id v50;
  void *v51;
  char *v52;
  double v53;
  id v54;
  void *v55;
  char *v56;
  double v57;
  double v58;
  CGFloat v59;
  CGFloat v60;
  id v61;
  uint64_t v62;
  char **v63;
  char **v64;
  id v65;
  CGFloat a;
  double v67;
  id v68;
  id v69;
  CGAffineTransform v70;
  objc_super v71;
  objc_super v72;
  CGAffineTransform v73;
  objc_super v74;
  CGFloat v75;
  double v76;
  double v77;
  objc_super v78;
  _BYTE v79[56];
  _BYTE v80[64];
  CGRect v81;
  CGRect v82;

  if (a3[OBJC_IVAR____UIDismissInteraction__isActive] != 1)
    return;
  v4 = *(void **)&a3[OBJC_IVAR____UIDismissInteraction_trackingView];
  if (!v4)
    return;
  v69 = v4;
  v68 = objc_msgSend(a3, sel_view);
  if (!v68)
  {
    v38 = v69;
LABEL_20:

    return;
  }
  v7 = objc_msgSend(v69, sel_window);

  if (!v7)
  {

    v38 = v68;
    goto LABEL_20;
  }
  type metadata accessor for _UIDismissInteractionSettingsDomain();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v78.receiver = ObjCClassFromMetadata;
  v78.super_class = (Class)&OBJC_METACLASS____TtC5UIKit35_UIDismissInteractionSettingsDomain;
  v9 = objc_msgSendSuper2(&v78, sel_rootSettings);
  if (!v9)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v10 = v9;
  type metadata accessor for _UIDismissInteractionSettings();
  v11 = (char *)objc_retain(*(id *)(swift_dynamicCastClassUnconditional()
                                  + OBJC_IVAR____TtC5UIKit29_UIDismissInteractionSettings_edgePan));

  v12 = a3[OBJC_IVAR____UIDismissInteraction_trackingViewDidBecomeVisible];
  if ((v12 & 1) == 0)
  {
    a3[OBJC_IVAR____UIDismissInteraction_trackingViewDidBecomeVisible] = 1;
    objc_msgSend(v69, sel_center);
    v13 = &a3[OBJC_IVAR____UIDismissInteraction_originalTrackingViewPosition];
    *(_QWORD *)v13 = v14;
    *((_QWORD *)v13 + 1) = v15;
    v16 = objc_msgSend(v69, sel_superview);
    if (!v16)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    v17 = v16;
    objc_msgSend(v16, sel_convertPoint_toCoordinateSpace_, v68, *(double *)v13, *((double *)v13 + 1));
    v19 = v18;
    v21 = v20;

    v22 = *(double *)&a3[OBJC_IVAR____UIDismissInteraction_originalTouchPosition + 8] - v21;
    v23 = (double *)&a3[OBJC_IVAR____UIDismissInteraction_touchAdjustment];
    *v23 = *(double *)&a3[OBJC_IVAR____UIDismissInteraction_originalTouchPosition] - v19;
    v23[1] = v22;
  }
  v24 = (double *)&a3[OBJC_IVAR____UIDismissInteraction_translation];
  *(_OWORD *)&a3[OBJC_IVAR____UIDismissInteraction_translation] = *(_OWORD *)(a2 + 16);
  objc_msgSend(v68, sel_bounds);
  Width = CGRectGetWidth(v81);
  objc_msgSend(v68, sel_bounds);
  Height = CGRectGetHeight(v82);
  if (Height >= Width)
    v27 = Width;
  else
    v27 = Height;
  if (v27 < 0.0)
  {
    __break(1u);
    goto LABEL_40;
  }
  sub_185724454();
  v29 = v28;
  v31 = v30;
  v77 = *v24;
  sub_185774578(v28, v30, -v27, v27);
  v76 = v24[1];
  sub_185774578(0.0, 0.0, -v27, v27);
  v32 = *(double *)(a2 + 56);
  v75 = v32;
  v33 = OBJC_IVAR____TtC5UIKit31_UIEdgePanDismissSubInteraction_axis;
  v34 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5UIKit31_UIEdgePanDismissSubInteraction_axis);
  if (v34 == 2)
  {
    v37 = v76 / 0.0;
  }
  else if (v34 == 1)
  {
    v35 = objc_msgSend(v68, sel_effectiveUserInterfaceLayoutDirection);
    v36 = fabs(v77 / v29);
    if (v35)
      v37 = v36;
    else
      v37 = v77 / v31;
  }
  else
  {
    v74.receiver = ObjCClassFromMetadata;
    v74.super_class = (Class)&OBJC_METACLASS____TtC5UIKit35_UIDismissInteractionSettingsDomain;
    v39 = objc_msgSendSuper2(&v74, sel_rootSettings);
    if (!v39)
    {
LABEL_46:
      __break(1u);
      return;
    }
    v40 = v39;
    v41 = 1.0 - v32;
    v42 = (char *)objc_retain(*(id *)(swift_dynamicCastClassUnconditional()
                                    + OBJC_IVAR____TtC5UIKit29_UIDismissInteractionSettings_edgePan));

    v43 = *(double *)&v42[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_minScale];
    v37 = v41 / (1.0 - v43);
  }
  sub_1856B6118(a2 + 64, (uint64_t)v79);
  sub_1856B6118((uint64_t)v79, (uint64_t)v80);
  v67 = v37;
  if ((v80[48] & 1) == 0)
  {
    v72.receiver = ObjCClassFromMetadata;
    v72.super_class = (Class)&OBJC_METACLASS____TtC5UIKit35_UIDismissInteractionSettingsDomain;
    v50 = objc_msgSendSuper2(&v72, sel_rootSettings);
    if (!v50)
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    v51 = v50;
    v52 = (char *)objc_retain(*(id *)(swift_dynamicCastClassUnconditional()
                                    + OBJC_IVAR____TtC5UIKit29_UIDismissInteractionSettings_edgePan));

    v53 = *(double *)&v52[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_minScale];
    if (v53 <= 1.0)
    {
      v71.receiver = ObjCClassFromMetadata;
      v71.super_class = (Class)&OBJC_METACLASS____TtC5UIKit35_UIDismissInteractionSettingsDomain;
      v54 = objc_msgSendSuper2(&v71, sel_rootSettings);
      if (!v54)
      {
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      v55 = v54;
      v56 = (char *)objc_retain(*(id *)(swift_dynamicCastClassUnconditional()
                                      + OBJC_IVAR____TtC5UIKit29_UIDismissInteractionSettings_edgePan));

      v57 = *(double *)&v56[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_scaleStretchinessLowerBound];
      v58 = *(double *)&v56[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_scaleStretchinessUpperBound];

      if (v57 <= v58)
      {
        sub_185774578(v53, 1.0, v57, v58);
        v44 = v75;
        CGAffineTransformMakeScale(&v73, v75, v75);
        CGAffineTransformRotate(&v70, &v73, *(CGFloat *)(a2 + 48));
        b = v70.b;
        a = v70.a;
        c = v70.c;
        d = v70.d;
        tx = v70.tx;
        ty = v70.ty;
        goto LABEL_31;
      }
      goto LABEL_41;
    }
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v44 = _UILerp(v37, *(double *)&v11[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_minScale]);
  CGAffineTransformMakeScale(&v73, v44, v44);
  b = v73.b;
  a = v73.a;
  c = v73.c;
  d = v73.d;
  tx = v73.tx;
  ty = v73.ty;
LABEL_31:
  v59 = v77 + (1.0 - v44) * *(double *)&a3[OBJC_IVAR____UIDismissInteraction_touchAdjustment];
  v60 = v76 + (1.0 - v44) * *(double *)&a3[OBJC_IVAR____UIDismissInteraction_touchAdjustment + 8];
  v61 = objc_msgSend(objc_allocWithZone((Class)_UIDismissInteractionUpdate), sel_init);
  objc_msgSend(v61, sel_setOriginalTrackingViewPosition_, *(double *)&a3[OBJC_IVAR____UIDismissInteraction_originalTrackingViewPosition], *(double *)&a3[OBJC_IVAR____UIDismissInteraction_originalTrackingViewPosition + 8]);
  CGAffineTransformMakeTranslation(&v73, v59, v60);
  objc_msgSend(v61, sel_setTranslation_, &v73);
  v73.a = a;
  v73.b = b;
  v73.c = c;
  v73.d = d;
  v73.tx = tx;
  v73.ty = ty;
  objc_msgSend(v61, sel_setTransform_, &v73);
  objc_msgSend(v61, sel_setScale_, v44);
  objc_msgSend(v61, sel_setProgressToMinScale_, v67);
  v62 = OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_updateSpring;
  v63 = &selRef_trackingDampingRatio;
  if ((_DWORD)v12)
  {
    v64 = &selRef_trackingResponse;
  }
  else
  {
    v63 = &selRef_dampingRatio;
    v64 = &selRef_response;
  }
  objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_updateSpring], *v63, *(_QWORD *)&a);
  objc_msgSend(v61, sel_setDampingRatio_);
  objc_msgSend(*(id *)&v11[v62], *v64);
  objc_msgSend(v61, sel_setResponse_);
  objc_msgSend(v61, sel_setIsTracking_, v12);
  objc_msgSend(v61, sel_setWantsHeightClamping_, *(_QWORD *)(a1 + v33) == 2);
  v65 = objc_msgSend(a3, sel_delegate);
  if (v65)
  {
    objc_msgSend(v65, sel_dismissInteraction_didIssueUpdate_, a3, v61);

    swift_unknownObjectRelease();
  }
  else
  {

  }
}

void sub_1857A8A88(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  void *v4;
  id v7;
  void *ObjCClassFromMetadata;
  id v9;
  void *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double *v23;
  double *v24;
  double Width;
  double Height;
  double v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  double v31;
  double v32;
  void *v33;
  id v34;
  void *v35;
  char *v36;
  double v37;
  double v38;
  CGFloat b;
  CGFloat c;
  CGFloat d;
  CGFloat tx;
  CGFloat ty;
  id v44;
  void *v45;
  char *v46;
  double v47;
  id v48;
  void *v49;
  char *v50;
  double v51;
  double v52;
  CGFloat v53;
  CGFloat v54;
  id v55;
  uint64_t v56;
  char **v57;
  char **v58;
  id v59;
  CGFloat a;
  double v61;
  id v62;
  id v63;
  CGAffineTransform v64;
  objc_super v65;
  objc_super v66;
  CGAffineTransform v67;
  objc_super v68;
  CGFloat v69;
  double v70;
  double v71;
  objc_super v72;
  _BYTE v73[56];
  _BYTE v74[64];
  CGRect v75;
  CGRect v76;

  if (a3[OBJC_IVAR____UIDismissInteraction__isActive] != 1)
    return;
  v4 = *(void **)&a3[OBJC_IVAR____UIDismissInteraction_trackingView];
  if (!v4)
    return;
  v63 = v4;
  v62 = objc_msgSend(a3, sel_view);
  if (!v62)
  {
    v33 = v63;
LABEL_19:

    return;
  }
  v7 = objc_msgSend(v63, sel_window);

  if (!v7)
  {

    v33 = v62;
    goto LABEL_19;
  }
  type metadata accessor for _UIDismissInteractionSettingsDomain();
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  v72.receiver = ObjCClassFromMetadata;
  v72.super_class = (Class)&OBJC_METACLASS____TtC5UIKit35_UIDismissInteractionSettingsDomain;
  v9 = objc_msgSendSuper2(&v72, sel_rootSettings);
  if (!v9)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v10 = v9;
  type metadata accessor for _UIDismissInteractionSettings();
  v11 = (char *)objc_retain(*(id *)(swift_dynamicCastClassUnconditional()
                                  + OBJC_IVAR____TtC5UIKit29_UIDismissInteractionSettings_pinch));

  v12 = a3[OBJC_IVAR____UIDismissInteraction_trackingViewDidBecomeVisible];
  if ((v12 & 1) == 0)
  {
    a3[OBJC_IVAR____UIDismissInteraction_trackingViewDidBecomeVisible] = 1;
    objc_msgSend(v63, sel_center);
    v13 = &a3[OBJC_IVAR____UIDismissInteraction_originalTrackingViewPosition];
    *(_QWORD *)v13 = v14;
    *((_QWORD *)v13 + 1) = v15;
    v16 = objc_msgSend(v63, sel_superview);
    if (!v16)
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v17 = v16;
    objc_msgSend(v16, sel_convertPoint_toCoordinateSpace_, v62, *(double *)v13, *((double *)v13 + 1));
    v19 = v18;
    v21 = v20;

    v22 = *(double *)&a3[OBJC_IVAR____UIDismissInteraction_originalTouchPosition + 8] - v21;
    v23 = (double *)&a3[OBJC_IVAR____UIDismissInteraction_touchAdjustment];
    *v23 = *(double *)&a3[OBJC_IVAR____UIDismissInteraction_originalTouchPosition] - v19;
    v23[1] = v22;
  }
  v24 = (double *)&a3[OBJC_IVAR____UIDismissInteraction_translation];
  *(_OWORD *)&a3[OBJC_IVAR____UIDismissInteraction_translation] = *(_OWORD *)(a2 + 16);
  objc_msgSend(v62, sel_bounds);
  Width = CGRectGetWidth(v75);
  objc_msgSend(v62, sel_bounds);
  Height = CGRectGetHeight(v76);
  if (Height < Width)
    Width = Height;
  if (Width < 0.0)
  {
    __break(1u);
    goto LABEL_39;
  }
  v71 = *v24;
  sub_185774578(-1.79769313e308, 1.79769313e308, -Width, Width);
  v70 = v24[1];
  sub_185774578(-1.79769313e308, 1.79769313e308, -Width, Width);
  v27 = *(double *)(a2 + 56);
  v69 = v27;
  v28 = OBJC_IVAR____TtC5UIKit29_UIPinchDismissSubInteraction_axis;
  v29 = *(_QWORD *)(a1 + OBJC_IVAR____TtC5UIKit29_UIPinchDismissSubInteraction_axis);
  if (v29 == 2)
  {
    v32 = v70 / 1.79769313e308;
  }
  else if (v29 == 1)
  {
    v30 = objc_msgSend(v62, sel_effectiveUserInterfaceLayoutDirection);
    v31 = fabs(v71 / -1.79769313e308);
    if (v30)
      v32 = v31;
    else
      v32 = v71 / 1.79769313e308;
  }
  else
  {
    v68.receiver = ObjCClassFromMetadata;
    v68.super_class = (Class)&OBJC_METACLASS____TtC5UIKit35_UIDismissInteractionSettingsDomain;
    v34 = objc_msgSendSuper2(&v68, sel_rootSettings);
    if (!v34)
    {
LABEL_45:
      __break(1u);
      return;
    }
    v35 = v34;
    v36 = (char *)objc_retain(*(id *)(swift_dynamicCastClassUnconditional()
                                    + OBJC_IVAR____TtC5UIKit29_UIDismissInteractionSettings_pinch));

    v37 = *(double *)&v36[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_minScale];
    v32 = (1.0 - v27) / (1.0 - v37);
  }
  sub_1856B6118(a2 + 64, (uint64_t)v73);
  sub_1856B6118((uint64_t)v73, (uint64_t)v74);
  v61 = v32;
  if ((v74[48] & 1) == 0)
  {
    v66.receiver = ObjCClassFromMetadata;
    v66.super_class = (Class)&OBJC_METACLASS____TtC5UIKit35_UIDismissInteractionSettingsDomain;
    v44 = objc_msgSendSuper2(&v66, sel_rootSettings);
    if (!v44)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    v45 = v44;
    v46 = (char *)objc_retain(*(id *)(swift_dynamicCastClassUnconditional()
                                    + OBJC_IVAR____TtC5UIKit29_UIDismissInteractionSettings_pinch));

    v47 = *(double *)&v46[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_minScale];
    if (v47 <= 1.0)
    {
      v65.receiver = ObjCClassFromMetadata;
      v65.super_class = (Class)&OBJC_METACLASS____TtC5UIKit35_UIDismissInteractionSettingsDomain;
      v48 = objc_msgSendSuper2(&v65, sel_rootSettings);
      if (!v48)
      {
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      v49 = v48;
      v50 = (char *)objc_retain(*(id *)(swift_dynamicCastClassUnconditional()
                                      + OBJC_IVAR____TtC5UIKit29_UIDismissInteractionSettings_pinch));

      v51 = *(double *)&v50[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_scaleStretchinessLowerBound];
      v52 = *(double *)&v50[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_scaleStretchinessUpperBound];

      if (v51 <= v52)
      {
        sub_185774578(v47, 1.0, v51, v52);
        v38 = v69;
        CGAffineTransformMakeScale(&v67, v69, v69);
        CGAffineTransformRotate(&v64, &v67, *(CGFloat *)(a2 + 48));
        b = v64.b;
        a = v64.a;
        c = v64.c;
        d = v64.d;
        tx = v64.tx;
        ty = v64.ty;
        goto LABEL_30;
      }
      goto LABEL_40;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v38 = _UILerp(v32, *(double *)&v11[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_minScale]);
  CGAffineTransformMakeScale(&v67, v38, v38);
  b = v67.b;
  a = v67.a;
  c = v67.c;
  d = v67.d;
  tx = v67.tx;
  ty = v67.ty;
LABEL_30:
  v53 = v71 + (1.0 - v38) * *(double *)&a3[OBJC_IVAR____UIDismissInteraction_touchAdjustment];
  v54 = v70 + (1.0 - v38) * *(double *)&a3[OBJC_IVAR____UIDismissInteraction_touchAdjustment + 8];
  v55 = objc_msgSend(objc_allocWithZone((Class)_UIDismissInteractionUpdate), sel_init);
  objc_msgSend(v55, sel_setOriginalTrackingViewPosition_, *(double *)&a3[OBJC_IVAR____UIDismissInteraction_originalTrackingViewPosition], *(double *)&a3[OBJC_IVAR____UIDismissInteraction_originalTrackingViewPosition + 8]);
  CGAffineTransformMakeTranslation(&v67, v53, v54);
  objc_msgSend(v55, sel_setTranslation_, &v67);
  v67.a = a;
  v67.b = b;
  v67.c = c;
  v67.d = d;
  v67.tx = tx;
  v67.ty = ty;
  objc_msgSend(v55, sel_setTransform_, &v67);
  objc_msgSend(v55, sel_setScale_, v38);
  objc_msgSend(v55, sel_setProgressToMinScale_, v61);
  v56 = OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_updateSpring;
  v57 = &selRef_trackingDampingRatio;
  if ((_DWORD)v12)
  {
    v58 = &selRef_trackingResponse;
  }
  else
  {
    v57 = &selRef_dampingRatio;
    v58 = &selRef_response;
  }
  objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_updateSpring], *v57, *(_QWORD *)&a);
  objc_msgSend(v55, sel_setDampingRatio_);
  objc_msgSend(*(id *)&v11[v56], *v58);
  objc_msgSend(v55, sel_setResponse_);
  objc_msgSend(v55, sel_setIsTracking_, v12);
  objc_msgSend(v55, sel_setWantsHeightClamping_, *(_QWORD *)(a1 + v28) == 2);
  v59 = objc_msgSend(a3, sel_delegate);
  if (v59)
  {
    objc_msgSend(v59, sel_dismissInteraction_didIssueUpdate_, a3, v55);

    swift_unknownObjectRelease();
  }
  else
  {

  }
}

void sub_1857A9230(uint64_t a1, double *a2, char *a3)
{
  sub_1857A9258(a1, a2, a3, &OBJC_IVAR____TtC5UIKit29_UIDismissInteractionSettings_swipeDown, &OBJC_IVAR____TtC5UIKit33_UISwipeDownDismissSubInteraction_axis);
}

void sub_1857A9244(uint64_t a1, double *a2, char *a3)
{
  sub_1857A9258(a1, a2, a3, &OBJC_IVAR____TtC5UIKit29_UIDismissInteractionSettings_edgePan, &OBJC_IVAR____TtC5UIKit31_UIEdgePanDismissSubInteraction_axis);
}

void sub_1857A9258(uint64_t a1, double *a2, char *a3, _QWORD *a4, _QWORD *a5)
{
  uint64_t v5;
  id v11;
  void *v12;
  id v13;
  void *v14;
  void *ObjCClassFromMetadata;
  id v16;
  void *v17;
  double v18;
  char *v19;
  double v20;
  double v21;
  double v22;
  id v23;
  void *v24;
  char *v25;
  double v26;
  double v27;
  double v28;
  id v29;
  void *v30;
  double v31;
  char *v32;
  double v33;
  id v34;
  void *v35;
  char *v36;
  double v37;
  objc_super v38;
  objc_super v39;
  objc_super v40;
  objc_super v41;

  v5 = OBJC_IVAR____UIDismissInteraction__isActive;
  if (a3[OBJC_IVAR____UIDismissInteraction__isActive] == 1)
  {
    v11 = objc_msgSend(a3, sel_delegate);
    if (v11)
    {
      v12 = v11;
      v13 = objc_msgSend(a3, sel_view);
      if (!v13)
      {
        swift_unknownObjectRelease();
        return;
      }
      v14 = v13;
      a3[v5] = 0;
      a3[OBJC_IVAR____UIDismissInteraction_trackingViewDidBecomeVisible] = 0;
      type metadata accessor for _UIDismissInteractionSettingsDomain();
      ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
      v41.receiver = ObjCClassFromMetadata;
      v41.super_class = (Class)&OBJC_METACLASS____TtC5UIKit35_UIDismissInteractionSettingsDomain;
      v16 = objc_msgSendSuper2(&v41, sel_rootSettings);
      if (v16)
      {
        v17 = v16;
        v18 = a2[7];
        type metadata accessor for _UIDismissInteractionSettings();
        v19 = (char *)*(id *)(swift_dynamicCastClassUnconditional() + *a4);

        v20 = *(double *)&v19[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_scaleDismissThreshold];
        if (v18 < v20)
        {
LABEL_6:
          objc_msgSend(v12, sel_dismissInteraction_didDismissWithVelocity_, a3, a2[4], a2[5]);
LABEL_19:
          swift_unknownObjectRelease();

          return;
        }
        if (*(_QWORD *)(a1 + *a5) == 1)
        {
          v21 = a2[4];
          v22 = a2[2] + v21 * 0.099;
          if (!objc_msgSend(v14, sel_effectiveUserInterfaceLayoutDirection))
          {
            v38.receiver = ObjCClassFromMetadata;
            v38.super_class = (Class)&OBJC_METACLASS____TtC5UIKit35_UIDismissInteractionSettingsDomain;
            v34 = objc_msgSendSuper2(&v38, sel_rootSettings);
            if (v34)
            {
              v35 = v34;
              v36 = (char *)*(id *)(swift_dynamicCastClassUnconditional() + *a4);

              v37 = *(double *)&v36[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_dismissThreshold];
              if (v37 < v22)
                goto LABEL_6;
              goto LABEL_18;
            }
LABEL_24:
            __break(1u);
            return;
          }
          v39.receiver = ObjCClassFromMetadata;
          v39.super_class = (Class)&OBJC_METACLASS____TtC5UIKit35_UIDismissInteractionSettingsDomain;
          v23 = objc_msgSendSuper2(&v39, sel_rootSettings);
          if (v23)
          {
            v24 = v23;
            v25 = (char *)*(id *)(swift_dynamicCastClassUnconditional() + *a4);

            v26 = *(double *)&v25[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_dismissThreshold];
            if (v22 < -v26)
              goto LABEL_6;
LABEL_18:
            objc_msgSend(v12, sel_dismissInteraction_didCancelWithVelocity_originalPosition_, a3, v21, a2[5], *(double *)&a3[OBJC_IVAR____UIDismissInteraction_originalTrackingViewPosition], *(double *)&a3[OBJC_IVAR____UIDismissInteraction_originalTrackingViewPosition + 8]);
            goto LABEL_19;
          }
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
        v27 = *(double *)&a3[OBJC_IVAR____UIDismissInteraction_translation + 8];
        v28 = a2[5];
        v40.receiver = ObjCClassFromMetadata;
        v40.super_class = (Class)&OBJC_METACLASS____TtC5UIKit35_UIDismissInteractionSettingsDomain;
        v29 = objc_msgSendSuper2(&v40, sel_rootSettings);
        if (v29)
        {
          v30 = v29;
          v31 = v27 + v28 * 0.099;
          v32 = (char *)*(id *)(swift_dynamicCastClassUnconditional() + *a4);

          v33 = *(double *)&v32[OBJC_IVAR____TtC5UIKit43_UIDismissInteractionSubInteractionSettings_dismissThreshold];
          if (v33 < v31)
            goto LABEL_6;
          v21 = a2[4];
          goto LABEL_18;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_23;
    }
  }
}

void sub_1857A9614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  char v19;
  id v20;
  void *v21;
  uint64_t v22;
  int64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_186507B58();
    sub_1851F9080(0, &qword_1EDD8B6A8);
    sub_185219C3C(&qword_1EDD8B6B0, &qword_1EDD8B6A8);
    sub_186507804();
    v3 = v27;
    v25 = v28;
    v4 = v29;
    v5 = v30;
    v6 = v31;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v25 = a1 + 56;
    v4 = ~v7;
    v8 = -v7;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v6 = v9 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v5 = 0;
  }
  v22 = v4;
  v24 = (unint64_t)(v4 + 64) >> 6;
  while (1)
  {
    v10 = v5;
    if ((v3 & 0x8000000000000000) == 0)
      break;
    if (!sub_186507B88())
      goto LABEL_39;
    sub_1851F9080(0, &qword_1EDD8B6A8);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v13 = v32;
    swift_unknownObjectRelease();
    if (!v32)
      goto LABEL_39;
LABEL_32:
    if (objc_msgSend(v13, sel_isEnabled, v22)
      && (v17 = *(void **)(a2 + OBJC_IVAR____TtC5UIKit29_UIPinchDismissSubInteraction_gesture),
          sub_1851F9080(0, &qword_1EDD8B6A8),
          v18 = v17,
          v19 = sub_186507A44(),
          v18,
          (v19 & 1) == 0)
      && (v20 = objc_msgSend(v13, sel_view)) != 0)
    {
      v21 = v20;
      if (objc_msgSend(v20, sel_isDescendantOfView_, a3))
      {
        objc_msgSend(v13, sel_setEnabled_, 0);
        objc_msgSend(v13, sel_setEnabled_, 1);
      }

    }
    else
    {

    }
  }
  if (v6)
  {
    v11 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v12 = v11 | (v5 << 6);
LABEL_31:
    v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v12);
    if (!v13)
      goto LABEL_39;
    goto LABEL_32;
  }
  v14 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v14 >= v24)
      goto LABEL_39;
    v15 = *(_QWORD *)(v25 + 8 * v14);
    ++v5;
    if (!v15)
    {
      v5 = v10 + 2;
      if (v10 + 2 >= v24)
        goto LABEL_39;
      v15 = *(_QWORD *)(v25 + 8 * v5);
      if (!v15)
      {
        v5 = v10 + 3;
        if (v10 + 3 >= v24)
          goto LABEL_39;
        v15 = *(_QWORD *)(v25 + 8 * v5);
        if (!v15)
        {
          v5 = v10 + 4;
          if (v10 + 4 >= v24)
            goto LABEL_39;
          v15 = *(_QWORD *)(v25 + 8 * v5);
          if (!v15)
          {
            v5 = v10 + 5;
            if (v10 + 5 >= v24)
              goto LABEL_39;
            v15 = *(_QWORD *)(v25 + 8 * v5);
            if (!v15)
            {
              v16 = v10 + 6;
              while (v24 != v16)
              {
                v15 = *(_QWORD *)(v25 + 8 * v16++);
                if (v15)
                {
                  v5 = v16 - 1;
                  goto LABEL_30;
                }
              }
LABEL_39:
              sub_1855BDB68();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    v6 = (v15 - 1) & v15;
    v12 = __clz(__rbit64(v15)) + (v5 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

void sub_1857A99CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char **v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t i;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char **v31;
  id v32;
  char v33;
  id v34;
  BOOL v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void *v50;

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_186507B58();
    sub_1851F9080(0, (unint64_t *)&qword_1EDD88250);
    sub_185219C3C((unint64_t *)&qword_1EDD8B6A0, (unint64_t *)&qword_1EDD88250);
    sub_186507804();
    v3 = v45;
    v37 = v46;
    v4 = v47;
    v5 = v48;
    v6 = v49;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v37 = a1 + 56;
    v8 = ~v7;
    v9 = -v7;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v6 = v10 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v4 = v8;
    v5 = 0;
  }
  v36 = (unint64_t)(v4 + 64) >> 6;
  v11 = &selRef_isEmojiKeyplane;
  v38 = v3;
  while (1)
  {
    if (v3 < 0)
    {
      if (!sub_186507B88())
        goto LABEL_56;
      sub_1851F9080(0, (unint64_t *)&qword_1EDD88250);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v12 = v50;
      swift_unknownObjectRelease();
      v15 = v5;
      v13 = v6;
      if (!v50)
        goto LABEL_56;
    }
    else
    {
      if (v6)
      {
        v13 = (v6 - 1) & v6;
        v14 = __clz(__rbit64(v6)) | (v5 << 6);
        v15 = v5;
      }
      else
      {
        v16 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_58;
        if (v16 >= v36)
        {
LABEL_56:
          sub_1855BDB68();
          return;
        }
        v17 = *(_QWORD *)(v37 + 8 * v16);
        v15 = v5 + 1;
        if (!v17)
        {
          v15 = v5 + 2;
          if (v5 + 2 >= v36)
            goto LABEL_56;
          v17 = *(_QWORD *)(v37 + 8 * v15);
          if (!v17)
          {
            v15 = v5 + 3;
            if (v5 + 3 >= v36)
              goto LABEL_56;
            v17 = *(_QWORD *)(v37 + 8 * v15);
            if (!v17)
            {
              v15 = v5 + 4;
              if (v5 + 4 >= v36)
                goto LABEL_56;
              v17 = *(_QWORD *)(v37 + 8 * v15);
              if (!v17)
              {
                v15 = v5 + 5;
                if (v5 + 5 >= v36)
                  goto LABEL_56;
                v17 = *(_QWORD *)(v37 + 8 * v15);
                if (!v17)
                {
                  v18 = v5 + 6;
                  do
                  {
                    if (v36 == v18)
                      goto LABEL_56;
                    v17 = *(_QWORD *)(v37 + 8 * v18++);
                  }
                  while (!v17);
                  v15 = v18 - 1;
                }
              }
            }
          }
        }
        v13 = (v17 - 1) & v17;
        v14 = __clz(__rbit64(v17)) + (v15 << 6);
      }
      v12 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v14);
      if (!v12)
        goto LABEL_56;
    }
    v19 = objc_msgSend(v12, sel_gestureRecognizers);
    if (v19)
      break;
LABEL_9:

    v5 = v15;
    v6 = v13;
  }
  v20 = v19;
  sub_1851F9080(0, &qword_1EDD8B6A8);
  v21 = sub_186507654();

  v39 = v12;
  v40 = v13;
  if (!(v21 >> 62))
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v23 = v21;
    if (v22)
      goto LABEL_36;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v22 = sub_186507E58();
  v23 = v21;
  if (!v22)
  {
LABEL_8:
    swift_bridgeObjectRelease_n();
    v3 = v38;
    v12 = v39;
    v13 = v40;
    goto LABEL_9;
  }
LABEL_36:
  v24 = v23 & 0xC000000000000001;
  v43 = v23;
  v44 = OBJC_IVAR____TtC5UIKit29_UIPinchDismissSubInteraction_gesture;
  for (i = 4; ; ++i)
  {
    v27 = v24 ? (id)MEMORY[0x186DC4CB4](i - 4, v23) : *(id *)(v23 + 8 * i);
    v28 = v27;
    v29 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    if (!objc_msgSend(v27, v11[10]))
    {
      v26 = v28;
      goto LABEL_38;
    }
    v30 = v22;
    v31 = v11;
    v32 = *(id *)(a2 + v44);
    v33 = sub_186507A44();

    if ((v33 & 1) != 0 || (v34 = objc_msgSend(v28, sel_view)) == 0)
    {
      v26 = v28;
      v11 = v31;
      goto LABEL_52;
    }
    v26 = v34;
    v11 = v31;
    if ((objc_msgSend(v34, sel_isDescendantOfView_, a3) & 1) == 0)
    {

LABEL_52:
      v22 = v30;
      v23 = v43;
LABEL_38:

      if (v29 == v22)
        goto LABEL_8;
      continue;
    }
    objc_msgSend(v28, sel_setEnabled_, 0);
    objc_msgSend(v28, sel_setEnabled_, 1);

    v22 = v30;
    v35 = v29 == v30;
    v23 = v43;
    if (v35)
      goto LABEL_8;
  }
  __break(1u);
LABEL_58:
  __break(1u);
}

void sub_1857A9EA0(_QWORD *a1, char *a2)
{
  uint64_t v2;
  id v5;
  void *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  id v11;
  void *v12;

  v2 = OBJC_IVAR____UIDismissInteraction__isActive;
  if ((a2[OBJC_IVAR____UIDismissInteraction__isActive] & 1) == 0)
  {
    v5 = objc_msgSend(a2, sel_delegate);
    if (v5)
    {
      v6 = v5;
      a2[v2] = 1;
      v7 = &a2[OBJC_IVAR____UIDismissInteraction_translation];
      *(_QWORD *)v7 = 0;
      *((_QWORD *)v7 + 1) = 0;
      v8 = a1[1];
      v9 = &a2[OBJC_IVAR____UIDismissInteraction_originalTouchPosition];
      *(_QWORD *)v9 = *a1;
      *((_QWORD *)v9 + 1) = v8;
      v10 = &a2[OBJC_IVAR____UIDismissInteraction_touchAdjustment];
      *(_QWORD *)v10 = 0;
      *((_QWORD *)v10 + 1) = 0;
      objc_msgSend(v5, sel_dismissInteraction_didBeginAtLocation_withVelocity_, a2);
      v11 = objc_msgSend(v6, sel_trackingViewForInteraction_, a2);
      swift_unknownObjectRelease();
      v12 = *(void **)&a2[OBJC_IVAR____UIDismissInteraction_trackingView];
      *(_QWORD *)&a2[OBJC_IVAR____UIDismissInteraction_trackingView] = v11;

    }
  }
}

uint64_t sub_1857A9F94()
{
  uint64_t v0;
  void *v1;
  double v2;
  uint64_t v3;
  void *v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id v10;
  id v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC5UIKit29_UIPinchDismissSubInteraction_gesture);
  objc_msgSend(v1, sel_scale);
  if (v2 >= 1.0)
    return 0;
  v3 = MEMORY[0x186DCA138](v0 + OBJC_IVAR____TtC5UIKit29_UIPinchDismissSubInteraction_parent);
  if (!v3)
    return 0;
  v4 = (void *)v3;
  v5 = objc_msgSend(v1, sel_view);
  objc_msgSend(v1, sel_locationInView_, v5);
  v7 = v6;
  v9 = v8;

  objc_msgSend(v1, sel_translation);
  objc_msgSend(v1, sel_rotation);
  objc_msgSend(v1, sel_scale);
  objc_msgSend(v1, sel_transform);
  v10 = objc_msgSend(v4, sel_delegate);
  if (v10)
  {
    v11 = objc_msgSend(v10, sel_dismissInteraction_shouldBeginWithAxis_location_velocity_proposal_, v4, *(_QWORD *)(v0 + OBJC_IVAR____TtC5UIKit29_UIPinchDismissSubInteraction_axis), 1, v7, v9, 0.0, 0.0);

    swift_unknownObjectRelease();
  }
  else
  {

    return 1;
  }
  return (uint64_t)v11;
}

id sub_1857AA100(void *a1, id a2)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  if ((objc_msgSend(a2, sel__isGestureType_, 18) & 1) != 0)
    return 0;
  if ((objc_msgSend(a2, sel__isGestureType_, 20) & 1) != 0)
    return 0;
  v4 = objc_msgSend(a1, sel_view);
  if (!v4)
    return 0;
  v5 = v4;
  v6 = objc_msgSend(a2, sel_view);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend(v6, sel_isDescendantOfView_, v5);

    v5 = v7;
  }
  else
  {
    v8 = 0;
  }

  return v8;
}

double _UILerp(double a1, double a2)
{
  return 1.0 - a1 + a1 * a2;
}

uint64_t (*UICollectionViewCell.backgroundConfiguration.modify(_QWORD *a1))()
{
  void *v1;
  _QWORD *v3;
  _QWORD *v4;

  a1[1] = v1;
  v3 = objc_msgSend(v1, sel_backgroundConfiguration);
  if (v3)
  {
    v4 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A78);
    v3 = (_QWORD *)swift_allocObject();
    v3[2] = v4;
  }
  *a1 = v3;
  return sub_1857AA244;
}

uint64_t (*UITableViewCell.backgroundConfiguration.modify(_QWORD *a1))()
{
  void *v1;
  _QWORD *v3;
  _QWORD *v4;

  a1[1] = v1;
  v3 = objc_msgSend(v1, sel_backgroundConfiguration);
  if (v3)
  {
    v4 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A78);
    v3 = (_QWORD *)swift_allocObject();
    v3[2] = v4;
  }
  *a1 = v3;
  return sub_1857AA244;
}

_QWORD *sub_1857AA2C8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *result;
  _QWORD *v4;

  result = objc_msgSend(*a1, sel_backgroundConfiguration);
  if (result)
  {
    v4 = result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A78);
    result = (_QWORD *)swift_allocObject();
    result[2] = v4;
  }
  *a2 = result;
  return result;
}

uint64_t (*UITableViewHeaderFooterView.backgroundConfiguration.modify(_QWORD *a1))()
{
  void *v1;
  _QWORD *v3;
  _QWORD *v4;

  a1[1] = v1;
  v3 = objc_msgSend(v1, sel_backgroundConfiguration);
  if (v3)
  {
    v4 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A78);
    v3 = (_QWORD *)swift_allocObject();
    v3[2] = v4;
  }
  *a1 = v3;
  return sub_1857AA244;
}

id sub_1857AA394(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    if (v2)
      v3 = *(_QWORD *)(v2 + 16);
    else
      v3 = 0;
    v4 = (void *)a1[1];
    goto LABEL_8;
  }
  v4 = (void *)a1[1];
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 16);
LABEL_8:
    objc_msgSend(v4, sel_setBackgroundConfiguration_, v3);
    return (id)swift_release();
  }
  return objc_msgSend(v4, sel_setBackgroundConfiguration_, 0);
}

uint64_t _sSo20UICollectionViewCellC5UIKitE30defaultBackgroundConfigurationAC012UIBackgroundG0VyF_0@<X0>(uint64_t *a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t result;

  v3 = objc_msgSend(v1, sel_defaultBackgroundConfiguration);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A78);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *a1 = result;
  return result;
}

uint64_t UIConfigurationColorTransformer.transform.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  return v1;
}

UIColor __swiftcall UIConfigurationColorTransformer.callAsFunction(_:)(UIColor a1)
{
  uint64_t (**v1)(Class, NSString *, NSString *);
  objc_class *v2;
  NSString *v3;
  NSString *v4;
  UIColor result;

  v2 = (objc_class *)(*v1)(a1.super.isa, a1._systemColorName, a1._cachedStyleString);
  result._cachedStyleString = v4;
  result._systemColorName = v3;
  result.super.isa = v2;
  return result;
}

void *sub_1857AA4A8()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = &__block_literal_global_199;
  qword_1EDD8B6B8 = (uint64_t)sub_18565AC98;
  unk_1EDD8B6C0 = v0;
  return _Block_copy(&__block_literal_global_199);
}

uint64_t static UIConfigurationColorTransformer.grayscale.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1857AA604(&qword_1EDD83D48, &qword_1EDD8B6B8, &qword_1EDD8B6C0, a1);
}

void *sub_1857AA51C()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = &__block_literal_global_1_12;
  qword_1EDD8B6C8 = (uint64_t)sub_18565AC98;
  unk_1EDD8B6D0 = v0;
  return _Block_copy(&__block_literal_global_1_12);
}

uint64_t static UIConfigurationColorTransformer.preferredTint.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1857AA604(&qword_1EDD83D50, &qword_1EDD8B6C8, &qword_1EDD8B6D0, a1);
}

void *sub_1857AA590()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = &__block_literal_global_2_6;
  qword_1EDD8B6D8 = (uint64_t)sub_18565AC98;
  unk_1EDD8B6E0 = v0;
  return _Block_copy(&__block_literal_global_2_6);
}

uint64_t static UIConfigurationColorTransformer.monochromeTint.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_1857AA604(qword_1EDD83D58, &qword_1EDD8B6D8, &qword_1EDD8B6E0, a1);
}

uint64_t sub_1857AA604@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;

  if (*a1 != -1)
    swift_once();
  v7 = *a3;
  *a4 = *a2;
  a4[1] = v7;
  return swift_retain();
}

unint64_t UIVisualEffectView._BlurClippingMode.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 3;
  if (result < 3)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t UIVisualEffectView._BlurClippingMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1857AA670@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return UIVisualEffectView._BlurClippingMode.init(rawValue:)(*a1, a2);
}

void sub_1857AA678(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t static UIBackgroundConfiguration.listCell()@<X0>(uint64_t *a1@<X8>)
{
  return sub_18526BD38((SEL *)&selRef_listCellConfiguration, a1);
}

uint64_t static UIBackgroundConfiguration.listHeader()@<X0>(uint64_t *a1@<X8>)
{
  return sub_18526BD38((SEL *)&selRef_listHeaderConfiguration, a1);
}

uint64_t static UIBackgroundConfiguration.listFooter()@<X0>(uint64_t *a1@<X8>)
{
  return sub_18526BD38((SEL *)&selRef_listFooterConfiguration, a1);
}

uint64_t static UIBackgroundConfiguration.listAccompaniedSidebarCell()@<X0>(uint64_t *a1@<X8>)
{
  return sub_18526BD38((SEL *)&selRef_listAccompaniedSidebarCellConfiguration, a1);
}

void (*UIBackgroundConfiguration.customView.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_customView);
  return sub_1857AA700;
}

void sub_1857AA700(void **a1, char a2)
{
  sub_1855D723C(a1, a2, UIBackgroundConfiguration.customView.setter);
}

id (*UIBackgroundConfiguration.cornerRadius.modify(_QWORD *a1))(double *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_cornerRadius);
  *a1 = v3;
  return sub_1857AA750;
}

id sub_1857AA750(double *a1)
{
  return UIBackgroundConfiguration.cornerRadius.setter(*a1);
}

id UIBackgroundConfiguration.backgroundInsets.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_backgroundInsets);
}

id UIBackgroundConfiguration.backgroundInsets.setter(double a1, double a2, double a3, double a4)
{
  uint64_t *v4;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v14;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *v4;
  if (isUniquelyReferenced_nonNull_native)
  {
    v11 = *(void **)(v10 + 16);
  }
  else
  {
    objc_msgSend(*(id *)(v10 + 16), sel_copy);
    sub_186507B1C();
    swift_unknownObjectRelease();
    sub_18522E994();
    swift_dynamicCast();
    v11 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A78);
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v14;
    swift_release();
    *v4 = v12;
  }
  return objc_msgSend(v11, sel_setBackgroundInsets_, a1, a2, a3, a4);
}

void (*UIBackgroundConfiguration.backgroundInsets.modify(_QWORD *a1))(double **a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_backgroundInsets);
  *v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  v3[3] = v7;
  return sub_1857AA8E4;
}

void sub_1857AA8E4(double **a1)
{
  double *v1;

  v1 = *a1;
  UIBackgroundConfiguration.backgroundInsets.setter(**a1, (*a1)[1], (*a1)[2], (*a1)[3]);
  free(v1);
}

id UIBackgroundConfiguration.edgesAddingLayoutMarginsToBackgroundInsets.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_edgesAddingLayoutMarginsToBackgroundInsets);
}

id UIBackgroundConfiguration.edgesAddingLayoutMarginsToBackgroundInsets.setter(uint64_t a1)
{
  return sub_1857AB3EC(a1, (SEL *)&selRef_setEdgesAddingLayoutMarginsToBackgroundInsets_);
}

id (*UIBackgroundConfiguration.edgesAddingLayoutMarginsToBackgroundInsets.modify(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_edgesAddingLayoutMarginsToBackgroundInsets);
  return sub_1857AA978;
}

id sub_1857AA978(uint64_t *a1)
{
  return UIBackgroundConfiguration.edgesAddingLayoutMarginsToBackgroundInsets.setter(*a1);
}

void (*UIBackgroundConfiguration.backgroundColor.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_backgroundColor);
  return sub_1857AA9E4;
}

void sub_1857AA9E4(void **a1, char a2)
{
  sub_1855D723C(a1, a2, UIBackgroundConfiguration.backgroundColor.setter);
}

_QWORD *UIBackgroundConfiguration.backgroundColorTransformer.getter@<X0>(id (**a1)(uint64_t a1)@<X8>)
{
  uint64_t v1;
  _QWORD *result;
  _QWORD *v4;
  id (*v5)(uint64_t);

  result = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_backgroundColorTransformer);
  if (result)
  {
    v4 = result;
    result = (_QWORD *)swift_allocObject();
    result[2] = v4;
    v5 = sub_185656B88;
  }
  else
  {
    v5 = 0;
  }
  *a1 = v5;
  a1[1] = (id (*)(uint64_t))result;
  return result;
}

uint64_t sub_1857AAA5C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1857AAA80@<X0>(uint64_t a1@<X0>, id (**a2)(uint64_t)@<X8>)
{
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t result;
  id (*v8)(uint64_t);

  v3 = *(void **)(*(_QWORD *)a1 + 16);
  swift_retain();
  v4 = objc_msgSend(v3, sel_backgroundColorTransformer);
  if (v4)
  {
    v5 = v4;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v5;
    result = swift_release();
    v8 = sub_18565AC98;
  }
  else
  {
    result = swift_release();
    v8 = 0;
    v6 = 0;
  }
  *a2 = v8;
  a2[1] = (id (*)(uint64_t))v6;
  return result;
}

void UIBackgroundConfiguration.backgroundColorTransformer.setter(uint64_t *a1)
{
  sub_1857AAFD8(a1, (uint64_t)&block_descriptor_79, (SEL *)&selRef_setBackgroundColorTransformer_);
}

void (*UIBackgroundConfiguration.backgroundColorTransformer.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  id (*v6)(uint64_t);

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[8] = v1;
  v4 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_backgroundColorTransformer);
  if (v4)
  {
    v5 = v4;
    v4 = (_QWORD *)swift_allocObject();
    v4[2] = v5;
    v6 = sub_18565AC98;
  }
  else
  {
    v6 = 0;
  }
  v3[6] = v6;
  v3[7] = v4;
  return sub_1857AABC4;
}

void sub_1857AABC4(uint64_t a1, char a2)
{
  sub_1857AB140(a1, a2, (uint64_t)&block_descriptor_6_12, (SEL *)&selRef_setBackgroundColorTransformer_, (uint64_t)&block_descriptor_3_7);
}

id UIBackgroundConfiguration.visualEffect.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_visualEffect);
}

void UIBackgroundConfiguration.visualEffect.setter(void *a1)
{
  sub_18522E700(a1, (const char **)&selRef_setVisualEffect_);
}

void (*UIBackgroundConfiguration.visualEffect.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_visualEffect);
  return sub_1857AAC60;
}

void sub_1857AAC60(void **a1, char a2)
{
  sub_1855D723C(a1, a2, UIBackgroundConfiguration.visualEffect.setter);
}

id UIBackgroundConfiguration.image.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_image);
}

void UIBackgroundConfiguration.image.setter(void *a1)
{
  sub_18522E700(a1, (const char **)&selRef_setImage_);
}

void (*UIBackgroundConfiguration.image.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_image);
  return sub_1857AACEC;
}

void sub_1857AACEC(void **a1, char a2)
{
  sub_1855D723C(a1, a2, UIBackgroundConfiguration.image.setter);
}

id UIBackgroundConfiguration.imageContentMode.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_imageContentMode);
}

id UIBackgroundConfiguration.imageContentMode.setter(uint64_t a1)
{
  return sub_1857AB3EC(a1, (SEL *)&selRef_setImageContentMode_);
}

id (*UIBackgroundConfiguration.imageContentMode.modify(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_imageContentMode);
  return sub_1857AAD5C;
}

id sub_1857AAD5C(uint64_t *a1)
{
  return UIBackgroundConfiguration.imageContentMode.setter(*a1);
}

id UIBackgroundConfiguration.strokeColor.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_strokeColor);
}

void (*UIBackgroundConfiguration.strokeColor.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_strokeColor);
  return sub_1857AADF0;
}

void sub_1857AADF0(void **a1, char a2)
{
  sub_1855D723C(a1, a2, UIBackgroundConfiguration.strokeColor.setter);
}

_QWORD *UIBackgroundConfiguration.strokeColorTransformer.getter@<X0>(id (**a1)(uint64_t)@<X8>)
{
  uint64_t v1;
  _QWORD *result;
  _QWORD *v4;
  id (*v5)(uint64_t);

  result = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_strokeColorTransformer);
  if (result)
  {
    v4 = result;
    result = (_QWORD *)swift_allocObject();
    result[2] = v4;
    v5 = sub_18565AC98;
  }
  else
  {
    v5 = 0;
  }
  *a1 = v5;
  a1[1] = (id (*)(uint64_t))result;
  return result;
}

uint64_t sub_1857AAE68@<X0>(uint64_t a1@<X0>, id (**a2)(uint64_t)@<X8>)
{
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t result;
  id (*v8)(uint64_t);

  v3 = *(void **)(*(_QWORD *)a1 + 16);
  swift_retain();
  v4 = objc_msgSend(v3, sel_strokeColorTransformer);
  if (v4)
  {
    v5 = v4;
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v5;
    result = swift_release();
    v8 = sub_18565AC98;
  }
  else
  {
    result = swift_release();
    v8 = 0;
    v6 = 0;
  }
  *a2 = v8;
  a2[1] = (id (*)(uint64_t))v6;
  return result;
}

void sub_1857AAF00(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  _QWORD v15[6];

  v8 = *a1;
  v9 = a1[1];
  sub_18518D708(*a1);
  v10 = (void *)sub_1857AC3B0();
  v11 = v10;
  if (v8)
  {
    v15[4] = v8;
    v15[5] = v9;
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 1107296256;
    v15[2] = sub_1852E82F4;
    v15[3] = a5;
    v12 = _Block_copy(v15);
    v13 = v11;
    swift_release();
  }
  else
  {
    v14 = v10;
    v12 = 0;
  }
  objc_msgSend(v11, *a6, v12);
  _Block_release(v12);

}

void UIBackgroundConfiguration.strokeColorTransformer.setter(uint64_t *a1)
{
  sub_1857AAFD8(a1, (uint64_t)&block_descriptor_17_6, (SEL *)&selRef_setStrokeColorTransformer_);
}

void sub_1857AAFD8(uint64_t *a1, uint64_t a2, SEL *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v12[6];

  v5 = *a1;
  v6 = a1[1];
  v7 = (void *)sub_1857AC3B0();
  v8 = v7;
  if (v5)
  {
    v12[4] = v5;
    v12[5] = v6;
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 1107296256;
    v12[2] = sub_1852E82F4;
    v12[3] = a2;
    v9 = _Block_copy(v12);
    v10 = v8;
    swift_release();
  }
  else
  {
    v11 = v7;
    v9 = 0;
  }
  objc_msgSend(v8, *a3, v9);
  _Block_release(v9);

}

void (*UIBackgroundConfiguration.strokeColorTransformer.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  id (*v6)(uint64_t);

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[8] = v1;
  v4 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_strokeColorTransformer);
  if (v4)
  {
    v5 = v4;
    v4 = (_QWORD *)swift_allocObject();
    v4[2] = v5;
    v6 = sub_18565AC98;
  }
  else
  {
    v6 = 0;
  }
  v3[6] = v6;
  v3[7] = v4;
  return sub_1857AB124;
}

void sub_1857AB124(uint64_t a1, char a2)
{
  sub_1857AB140(a1, a2, (uint64_t)&block_descriptor_23_8, (SEL *)&selRef_setStrokeColorTransformer_, (uint64_t)&block_descriptor_20_6);
}

void sub_1857AB140(uint64_t a1, char a2, uint64_t a3, SEL *a4, uint64_t a5)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;

  v6 = *(_QWORD **)a1;
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  if ((a2 & 1) != 0)
  {
    sub_18518D708(*(_QWORD *)(*(_QWORD *)a1 + 48));
    v10 = (void *)sub_1857AC3B0();
    v11 = v10;
    if (v7)
    {
      v6[4] = v7;
      v6[5] = v8;
      *v6 = MEMORY[0x1E0C809B0];
      v6[1] = 1107296256;
      v6[2] = sub_1852E82F4;
      v6[3] = a5;
      v12 = _Block_copy(v6);
      v13 = v11;
      swift_release();
    }
    else
    {
      v19 = v10;
      v12 = 0;
    }
    objc_msgSend(v11, *a4, v12);
    _Block_release(v12);

    sub_18518D718(v6[6]);
  }
  else
  {
    v15 = (void *)sub_1857AC3B0();
    v16 = v15;
    if (v7)
    {
      v6[4] = v7;
      v6[5] = v8;
      *v6 = MEMORY[0x1E0C809B0];
      v6[1] = 1107296256;
      v6[2] = sub_1852E82F4;
      v6[3] = a3;
      v17 = _Block_copy(v6);
      v18 = v16;
      swift_release();
    }
    else
    {
      v20 = v15;
      v17 = 0;
    }
    objc_msgSend(v16, *a4, v17);
    _Block_release(v17);

  }
  free(v6);
}

UIColor __swiftcall UIBackgroundConfiguration.resolvedStrokeColor(for:)(UIColor a1)
{
  uint64_t v1;
  objc_class *v2;
  NSString *v3;
  NSString *v4;
  UIColor result;

  v2 = (objc_class *)objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_resolvedStrokeColorForTintColor_, a1.super.isa);
  result._cachedStyleString = v4;
  result._systemColorName = v3;
  result.super.isa = v2;
  return result;
}

id UIBackgroundConfiguration.strokeWidth.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_strokeWidth);
}

id (*UIBackgroundConfiguration.strokeWidth.modify(_QWORD *a1))(double *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_strokeWidth);
  *a1 = v3;
  return sub_1857AB320;
}

id sub_1857AB320(double *a1)
{
  return UIBackgroundConfiguration.strokeWidth.setter(*a1);
}

id UIBackgroundConfiguration.strokeOutset.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel_strokeOutset);
}

id UIBackgroundConfiguration.strokeOutset.setter(double a1)
{
  return sub_185151FBC((SEL *)&selRef_setStrokeOutset_, a1);
}

id (*UIBackgroundConfiguration.strokeOutset.modify(_QWORD *a1))(double *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_strokeOutset);
  *a1 = v3;
  return sub_1857AB3A8;
}

id sub_1857AB3A8(double *a1)
{
  return UIBackgroundConfiguration.strokeOutset.setter(*a1);
}

id UIBackgroundConfiguration._maskedCorners.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel__maskedCorners);
}

id UIBackgroundConfiguration._maskedCorners.setter(uint64_t a1)
{
  return sub_1857AB3EC(a1, (SEL *)&selRef__setMaskedCorners_);
}

id sub_1857AB3EC(uint64_t a1, SEL *a2)
{
  uint64_t *v2;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v10;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v6 = *v2;
  if (isUniquelyReferenced_nonNull_native)
  {
    v7 = *(void **)(v6 + 16);
  }
  else
  {
    objc_msgSend(*(id *)(v6 + 16), sel_copy);
    sub_186507B1C();
    swift_unknownObjectRelease();
    sub_18522E994();
    swift_dynamicCast();
    v7 = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A78);
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = v10;
    swift_release();
    *v2 = v8;
  }
  return objc_msgSend(v7, *a2, a1);
}

id (*UIBackgroundConfiguration._maskedCorners.modify(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel__maskedCorners);
  return sub_1857AB50C;
}

id sub_1857AB50C(uint64_t *a1)
{
  return UIBackgroundConfiguration._maskedCorners.setter(*a1);
}

uint64_t UIBackgroundConfiguration._visualEffectGroupName.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel__visualEffectGroupName);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1865074F8();

  return v3;
}

void sub_1857AB594(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(void **)(*(_QWORD *)a1 + 16);
  swift_retain();
  v4 = objc_msgSend(v3, sel__visualEffectGroupName);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1865074F8();
    v8 = v7;
    swift_release();

  }
  else
  {
    swift_release();
    v6 = 0;
    v8 = 0;
  }
  *a2 = v6;
  a2[1] = v8;
}

void sub_1857AB620(uint64_t a1)
{
  uint64_t v1;
  id v2;
  id v3;

  v1 = *(_QWORD *)(a1 + 8);
  swift_bridgeObjectRetain();
  v2 = (id)sub_1857AC3B0();
  if (v1)
  {
    v3 = (id)sub_1865074D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  objc_msgSend(v2, sel__setVisualEffectGroupName_, v3);

}

void UIBackgroundConfiguration._visualEffectGroupName.setter(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;
  id v5;

  v3 = (void *)sub_1857AC3B0();
  v4 = v3;
  if (a2)
  {
    v5 = (id)sub_1865074D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v3, sel__setVisualEffectGroupName_, v5);

}

void (*UIBackgroundConfiguration._visualEffectGroupName.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  a1[2] = v1;
  v3 = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel__visualEffectGroupName);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1865074F8();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a1 = v5;
  a1[1] = v7;
  return sub_1857AB79C;
}

void sub_1857AB79C(uint64_t a1, char a2)
{
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;

  v2 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v3 = (id)sub_1857AC3B0();
    v6 = v3;
    if (v2)
    {
      v4 = (void *)sub_1865074D4();
      swift_bridgeObjectRelease();
      v3 = v6;
    }
    else
    {
      v4 = 0;
    }
    objc_msgSend(v3, sel__setVisualEffectGroupName_, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = (id)sub_1857AC3B0();
    v5 = v6;
    if (v2)
    {
      v4 = (void *)sub_1865074D4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v4 = 0;
    }
    objc_msgSend(v6, sel__setVisualEffectGroupName_, v4);
  }

}

unint64_t UIBackgroundConfiguration._visualEffectAllowsTransparentBlurring.getter()
{
  uint64_t v0;
  unint64_t result;

  result = (unint64_t)objc_msgSend(*(id *)(*(_QWORD *)v0 + 16), sel__visualEffectblurClippingMode);
  if (result <= 2)
    return (result & 7) == 0;
  __break(1u);
  return result;
}

id UIBackgroundConfiguration._visualEffectAllowsTransparentBlurring.setter(char a1)
{
  unsigned __int8 v2;

  v2 = a1 ^ 1;
  return UIBackgroundConfiguration._visualEffectblurClippingMode.setter(&v2);
}

id UIBackgroundConfiguration._visualEffectblurClippingMode.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel__visualEffectblurClippingMode);
  if ((unint64_t)result > 2)
    __break(1u);
  else
    *a1 = (_BYTE)result;
  return result;
}

id UIBackgroundConfiguration._visualEffectblurClippingMode.setter(unsigned __int8 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v8;

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4 = *v1;
  if (isUniquelyReferenced_nonNull_native)
  {
    v5 = *(void **)(v4 + 16);
  }
  else
  {
    objc_msgSend(*(id *)(v4 + 16), sel_copy);
    sub_186507B1C();
    swift_unknownObjectRelease();
    sub_18522E994();
    swift_dynamicCast();
    v5 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A78);
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v8;
    swift_release();
    *v1 = v6;
  }
  return objc_msgSend(v5, sel__setVisualEffectblurClippingMode_, v2);
}

unint64_t UIBackgroundConfiguration._visualEffectAllowsTransparentBlurring.modify(_QWORD *a1)
{
  uint64_t v1;
  _BYTE *v2;
  unint64_t result;
  unsigned int v4;

  *a1 = v1;
  v2 = a1 + 1;
  result = (unint64_t)objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel__visualEffectblurClippingMode);
  if (result > 2)
  {
    __break(1u);
  }
  else
  {
    v4 = 1u >> (8 * result);
    result = (unint64_t)off_1E16B1418[result];
    *v2 = v4;
  }
  return result;
}

id sub_1857ABA5C(uint64_t a1, char a2)
{
  BOOL *v2;
  BOOL v4;
  BOOL v5;

  if ((a2 & 1) != 0)
  {
    v4 = (*(_BYTE *)(a1 + 8) & 1) == 0;
    v2 = &v4;
  }
  else
  {
    v5 = (*(_BYTE *)(a1 + 8) & 1) == 0;
    v2 = &v5;
  }
  return UIBackgroundConfiguration._visualEffectblurClippingMode.setter((unsigned __int8 *)v2);
}

id (*UIBackgroundConfiguration._visualEffectblurClippingMode.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _BYTE *v2;
  id (*result)(uint64_t, char);

  *a1 = v1;
  v2 = a1 + 1;
  result = (id (*)(uint64_t, char))objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel__visualEffectblurClippingMode);
  if ((unint64_t)result > 2)
  {
    __break(1u);
  }
  else
  {
    *v2 = (_BYTE)result;
    return sub_1857ABAF8;
  }
  return result;
}

id sub_1857ABAF8(uint64_t a1, char a2)
{
  unsigned __int8 *v2;
  char v4;
  char v5;

  if ((a2 & 1) != 0)
  {
    v4 = *(_BYTE *)(a1 + 8);
    v2 = (unsigned __int8 *)&v4;
  }
  else
  {
    v5 = *(_BYTE *)(a1 + 8);
    v2 = (unsigned __int8 *)&v5;
  }
  return UIBackgroundConfiguration._visualEffectblurClippingMode.setter(v2);
}

void UIBackgroundConfiguration.shadowProperties.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v3;
  char *v4;
  void *v5;
  uint64_t v6;
  __int128 v7;
  id v8;
  id v9;

  v3 = (char *)objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_shadowProperties);
  v4 = &v3[OBJC_IVAR___UIShadowProperties__backingProperties];
  swift_beginAccess();
  v5 = *(void **)v4;
  v6 = *((_QWORD *)v4 + 7);
  *(_QWORD *)a1 = *(_QWORD *)v4;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v4 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v4 + 24);
  v7 = *(_OWORD *)(v4 + 40);
  *(_OWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 56) = v6;
  v8 = (id)v7;
  v9 = v5;

}

__n128 sub_1857ABBE4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v3;
  char *v4;
  char *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  __n128 result;
  __n128 v15;

  v3 = *(void **)(*(_QWORD *)a1 + 16);
  swift_retain();
  v4 = (char *)objc_msgSend(v3, sel_shadowProperties);
  v5 = &v4[OBJC_IVAR___UIShadowProperties__backingProperties];
  swift_beginAccess();
  v6 = *(void **)v5;
  v15 = *(__n128 *)(v5 + 8);
  v7 = *((_QWORD *)v5 + 3);
  v8 = *((_QWORD *)v5 + 4);
  v9 = (void *)*((_QWORD *)v5 + 5);
  v10 = *((_QWORD *)v5 + 6);
  v11 = *((_QWORD *)v5 + 7);
  v12 = v9;
  v13 = v6;
  swift_release();

  *(_QWORD *)a2 = v13;
  result = v15;
  *(__n128 *)(a2 + 8) = v15;
  *(_QWORD *)(a2 + 24) = v7;
  *(_QWORD *)(a2 + 32) = v8;
  *(_QWORD *)(a2 + 40) = v9;
  *(_QWORD *)(a2 + 48) = v10;
  *(_QWORD *)(a2 + 56) = v11;
  return result;
}

void sub_1857ABCC0(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  char *v12;
  char *v13;
  void *v14;
  void *v15;
  __int128 v16;

  v1 = *(void **)a1;
  v16 = *(_OWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = v4;
  v8 = v1;
  v9 = (void *)sub_1857AC3B0();
  v10 = objc_allocWithZone((Class)UIShadowProperties);
  v11 = v9;
  v12 = (char *)objc_msgSend(v10, sel_init);
  v13 = &v12[OBJC_IVAR___UIShadowProperties__backingProperties];
  swift_beginAccess();
  v14 = *(void **)v13;
  v15 = (void *)*((_QWORD *)v13 + 5);
  *(_QWORD *)v13 = v8;
  *(_OWORD *)(v13 + 8) = v16;
  *((_QWORD *)v13 + 3) = v2;
  *((_QWORD *)v13 + 4) = v3;
  *((_QWORD *)v13 + 5) = v4;
  *((_QWORD *)v13 + 6) = v5;
  *((_QWORD *)v13 + 7) = v6;

  objc_msgSend(v11, sel__setShadowProperties_, v12);
}

void UIBackgroundConfiguration.shadowProperties.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  char *v8;
  char *v9;
  void *v10;
  void *v11;
  __int128 v12;
  __int128 v13;

  v1 = *a1;
  v2 = a1[3];
  v3 = a1[4];
  v12 = *(_OWORD *)(a1 + 5);
  v13 = *(_OWORD *)(a1 + 1);
  v4 = a1[7];
  v5 = (void *)sub_1857AC3B0();
  v6 = objc_allocWithZone((Class)UIShadowProperties);
  v7 = v5;
  v8 = (char *)objc_msgSend(v6, sel_init);
  v9 = &v8[OBJC_IVAR___UIShadowProperties__backingProperties];
  swift_beginAccess();
  v10 = *(void **)v9;
  v11 = (void *)*((_QWORD *)v9 + 5);
  *(_QWORD *)v9 = v1;
  *(_OWORD *)(v9 + 8) = v13;
  *((_QWORD *)v9 + 3) = v2;
  *((_QWORD *)v9 + 4) = v3;
  *(_OWORD *)(v9 + 40) = v12;
  *((_QWORD *)v9 + 7) = v4;

  objc_msgSend(v7, sel__setShadowProperties_, v8);
}

void (*UIBackgroundConfiguration.shadowProperties.modify(_QWORD *a1))(void ***a1, char a2)
{
  uint64_t v1;
  char *v3;
  char *v4;
  char *v5;
  void *v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  id v11;
  id v12;

  v3 = (char *)malloc(0x90uLL);
  *a1 = v3;
  *((_QWORD *)v3 + 17) = v1;
  v4 = (char *)objc_msgSend(*(id *)(*(_QWORD *)v1 + 16), sel_shadowProperties);
  v5 = &v4[OBJC_IVAR___UIShadowProperties__backingProperties];
  swift_beginAccess();
  v6 = *(void **)v5;
  v7 = *((_QWORD *)v5 + 7);
  v8 = *(_OWORD *)(v5 + 40);
  v9 = *(_OWORD *)(v5 + 8);
  v10 = *(_OWORD *)(v5 + 24);
  *(_QWORD *)v3 = *(_QWORD *)v5;
  *(_OWORD *)(v3 + 8) = v9;
  *(_OWORD *)(v3 + 24) = v10;
  *(_OWORD *)(v3 + 40) = v8;
  *((_QWORD *)v3 + 7) = v7;
  v11 = (id)v8;
  v12 = v6;

  return sub_1857ABF78;
}

void sub_1857ABF78(void ***a1, char a2)
{
  void **v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  char *v16;
  char *v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  char *v23;
  char *v24;
  void *v25;
  void *v26;

  v2 = *a1;
  v3 = **a1;
  v5 = (*a1)[1];
  v4 = (*a1)[2];
  v7 = (*a1)[3];
  v6 = (*a1)[4];
  v9 = (*a1)[5];
  v8 = (*a1)[6];
  v10 = (*a1)[7];
  if ((a2 & 1) != 0)
  {
    v11 = v9;
    v12 = v3;
    v13 = (void *)sub_1857AC3B0();
    v14 = objc_allocWithZone((Class)UIShadowProperties);
    v15 = v13;
    v16 = (char *)objc_msgSend(v14, sel_init);
    v17 = &v16[OBJC_IVAR___UIShadowProperties__backingProperties];
    swift_beginAccess();
    v18 = *(void **)v17;
    v19 = (void *)*((_QWORD *)v17 + 5);
    *(_QWORD *)v17 = v12;
    *((_QWORD *)v17 + 1) = v5;
    *((_QWORD *)v17 + 2) = v4;
    *((_QWORD *)v17 + 3) = v7;
    *((_QWORD *)v17 + 4) = v6;
    *((_QWORD *)v17 + 5) = v9;
    *((_QWORD *)v17 + 6) = v8;
    *((_QWORD *)v17 + 7) = v10;

    objc_msgSend(v15, sel__setShadowProperties_, v16);
    v20 = v2[5];

  }
  else
  {
    v21 = (void *)sub_1857AC3B0();
    v22 = objc_allocWithZone((Class)UIShadowProperties);
    v20 = v21;
    v23 = (char *)objc_msgSend(v22, sel_init);
    v24 = &v23[OBJC_IVAR___UIShadowProperties__backingProperties];
    swift_beginAccess();
    v25 = *(void **)v24;
    v26 = (void *)*((_QWORD *)v24 + 5);
    *(_QWORD *)v24 = v3;
    *((_QWORD *)v24 + 1) = v5;
    *((_QWORD *)v24 + 2) = v4;
    *((_QWORD *)v24 + 3) = v7;
    *((_QWORD *)v24 + 4) = v6;
    *((_QWORD *)v24 + 5) = v9;
    *((_QWORD *)v24 + 6) = v8;
    *((_QWORD *)v24 + 7) = v10;

    objc_msgSend(v20, sel__setShadowProperties_, v23);
  }

  free(v2);
}

void UIBackgroundConfiguration.hash(into:)()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(*(_QWORD *)v0 + 16);
  swift_retain();
  v2 = v1;
  sub_186507A50();
  swift_release();

}

id static UIBackgroundConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_isEqual_, *(_QWORD *)(*(_QWORD *)a2 + 16));
}

uint64_t UIBackgroundConfiguration.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *v0;
  sub_1865080EC();
  v2 = *(void **)(v1 + 16);
  swift_retain();
  v3 = v2;
  sub_186507A50();
  swift_release();

  return sub_186508134();
}

uint64_t static UIBackgroundConfiguration.listPlainHeaderFooter()@<X0>(uint64_t *a1@<X8>)
{
  return sub_18526BD38((SEL *)&selRef_listPlainHeaderFooterConfiguration, a1);
}

uint64_t static UIBackgroundConfiguration.listGroupedHeaderFooter()@<X0>(uint64_t *a1@<X8>)
{
  return sub_18526BD38((SEL *)&selRef_listGroupedHeaderFooterConfiguration, a1);
}

uint64_t static UIBackgroundConfiguration.listSidebarHeader()@<X0>(uint64_t *a1@<X8>)
{
  return sub_18526BD38((SEL *)&selRef_listSidebarHeaderConfiguration, a1);
}

uint64_t static UIBackgroundConfiguration.listSidebarCell()@<X0>(uint64_t *a1@<X8>)
{
  return sub_18526BD38((SEL *)&selRef_listSidebarCellConfiguration, a1);
}

uint64_t static UIBackgroundConfiguration._listInsetGroupedCell()@<X0>(uint64_t *a1@<X8>)
{
  return sub_18526BD38((SEL *)&selRef__listInsetGroupedCellConfiguration, a1);
}

uint64_t static UIBackgroundConfiguration._listInsetGroupedHeaderFooter()@<X0>(uint64_t *a1@<X8>)
{
  return sub_18526BD38((SEL *)&selRef__listInsetGroupedHeaderFooterConfiguration, a1);
}

uint64_t UIBackgroundConfiguration.customMirror.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  v1 = sub_186508158();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD83E30);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[1] = *v0;
  v10[0] = MEMORY[0x1E0DEE9D8];
  v8 = sub_18650814C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEDFE8], v1);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EDD8AB20);
  sub_18559ACC8();
  return sub_186508164();
}

uint64_t sub_1857AC3B0()
{
  uint64_t *v0;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v2 = *v0;
  if (isUniquelyReferenced_nonNull_native)
    return *(_QWORD *)(v2 + 16);
  objc_msgSend(*(id *)(v2 + 16), sel_copy);
  sub_186507B1C();
  swift_unknownObjectRelease();
  sub_18522E994();
  swift_dynamicCast();
  v3 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ECD74A78);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v6;
  swift_release();
  *v0 = v4;
  return v3;
}

unint64_t sub_1857AC474()
{
  unint64_t result;

  result = qword_1EDD8B6E8;
  if (!qword_1EDD8B6E8)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UIVisualEffectView._BlurClippingMode, &type metadata for UIVisualEffectView._BlurClippingMode);
    atomic_store(result, (unint64_t *)&qword_1EDD8B6E8);
  }
  return result;
}

unint64_t sub_1857AC4BC()
{
  unint64_t result;

  result = qword_1EDD8B6F0;
  if (!qword_1EDD8B6F0)
  {
    result = MEMORY[0x186DC9F28](&protocol conformance descriptor for UIBackgroundConfiguration, &type metadata for UIBackgroundConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EDD8B6F0);
  }
  return result;
}

_QWORD *sub_1857AC500@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1857AA2C8(a1, a2);
}

_QWORD *sub_1857AC518@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1857AA2C8(a1, a2);
}

_QWORD *sub_1857AC530@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1857AA2C8(a1, a2);
}

id keypath_setTm_1(uint64_t a1, id *a2)
{
  uint64_t v2;

  if (*(_QWORD *)a1)
    v2 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  else
    v2 = 0;
  return objc_msgSend(*a2, sel_setBackgroundConfiguration_, v2);
}

id sub_1857AC56C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_156Tm(a1, (SEL *)&selRef_customView, a2);
}

void sub_1857AC578(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  UIBackgroundConfiguration.customView.setter(v1);
}

id sub_1857AC5A4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_cornerRadius);
  *a2 = v4;
  return result;
}

id sub_1857AC5D8(double *a1)
{
  return UIBackgroundConfiguration.cornerRadius.setter(*a1);
}

id sub_1857AC5FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_backgroundInsets);
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  return result;
}

id sub_1857AC634(double *a1)
{
  return UIBackgroundConfiguration.backgroundInsets.setter(*a1, a1[1], a1[2], a1[3]);
}

id sub_1857AC65C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_edgesAddingLayoutMarginsToBackgroundInsets);
  *a2 = result;
  return result;
}

id sub_1857AC690(uint64_t *a1)
{
  return UIBackgroundConfiguration.edgesAddingLayoutMarginsToBackgroundInsets.setter(*a1);
}

id sub_1857AC6B4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_156Tm(a1, (SEL *)&selRef_backgroundColor, a2);
}

void sub_1857AC6C0(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  UIBackgroundConfiguration.backgroundColor.setter(v1);
}

void sub_1857AC6F0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1857AAF00(a1, a2, a3, a4, (uint64_t)&block_descriptor_77_0, (SEL *)&selRef_setBackgroundColorTransformer_);
}

id sub_1857AC714@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_156Tm(a1, (SEL *)&selRef_visualEffect, a2);
}

void sub_1857AC720(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  UIBackgroundConfiguration.visualEffect.setter(v1);
}

id sub_1857AC74C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_156Tm(a1, (SEL *)&selRef_image, a2);
}

void sub_1857AC758(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  UIBackgroundConfiguration.image.setter(v1);
}

id sub_1857AC784@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_imageContentMode);
  *a2 = result;
  return result;
}

id sub_1857AC7B8(uint64_t *a1)
{
  return UIBackgroundConfiguration.imageContentMode.setter(*a1);
}

id sub_1857AC7DC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_156Tm(a1, (SEL *)&selRef_strokeColor, a2);
}

void sub_1857AC7E8(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  UIBackgroundConfiguration.strokeColor.setter(v1);
}

void sub_1857AC818(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1857AAF00(a1, a2, a3, a4, (uint64_t)&block_descriptor_70_0, (SEL *)&selRef_setStrokeColorTransformer_);
}

id sub_1857AC83C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_strokeWidth);
  *a2 = v4;
  return result;
}

id sub_1857AC870(double *a1)
{
  return UIBackgroundConfiguration.strokeWidth.setter(*a1);
}

id sub_1857AC894@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;

  result = objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel_strokeOutset);
  *a2 = v4;
  return result;
}

id sub_1857AC8C8(double *a1)
{
  return UIBackgroundConfiguration.strokeOutset.setter(*a1);
}

id sub_1857AC8EC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*(id *)(*(_QWORD *)a1 + 16), sel__maskedCorners);
  *a2 = result;
  return result;
}

id sub_1857AC920(uint64_t *a1)
{
  return UIBackgroundConfiguration._maskedCorners.setter(*a1);
}

unint64_t sub_1857AC94C@<X0>(_BYTE *a1@<X8>)
{
  unint64_t result;

  result = UIBackgroundConfiguration._visualEffectAllowsTransparentBlurring.getter();
  *a1 = result & 1;
  return result;
}

id sub_1857AC988(_BYTE *a1)
{
  BOOL v2;

  v2 = (*a1 & 1) == 0;
  return UIBackgroundConfiguration._visualEffectblurClippingMode.setter((unsigned __int8 *)&v2);
}

id sub_1857AC9C4@<X0>(_BYTE *a1@<X8>)
{
  id result;
  char v3;

  result = UIBackgroundConfiguration._visualEffectblurClippingMode.getter(&v3);
  *a1 = v3;
  return result;
}

id sub_1857ACA04(unsigned __int8 *a1)
{
  unsigned __int8 v2;

  v2 = *a1;
  return UIBackgroundConfiguration._visualEffectblurClippingMode.setter(&v2);
}

uint64_t _s17_BlurClippingModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1857ACA8C + 4 * byte_186677CD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1857ACAC0 + 4 * byte_186677CD0[v4]))();
}

uint64_t sub_1857ACAC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1857ACAC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1857ACAD0);
  return result;
}

uint64_t sub_1857ACADC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1857ACAE4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1857ACAE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1857ACAF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UIVisualEffectView._BlurClippingMode()
{
  return &type metadata for UIVisualEffectView._BlurClippingMode;
}

id getTUIPressAndHoldViewClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)_MergedGlobals_921;
  v7 = _MergedGlobals_921;
  if (!_MergedGlobals_921)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getTUIPressAndHoldViewClass_block_invoke;
    v3[3] = &unk_1E16B14C0;
    v3[4] = &v4;
    __getTUIPressAndHoldViewClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1857ACCD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getTUIPressAndHoldViewClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7C860)
    qword_1ECD7C860 = _sl_dlopen();
  if (!qword_1ECD7C860)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *TextInputUILibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("UIPressAndHoldPopoverController.m"), 19, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("TUIPressAndHoldView");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUIPressAndHoldViewClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UIPressAndHoldPopoverController.m"), 21, CFSTR("Unable to find class %s"), "TUIPressAndHoldView");

LABEL_8:
    __break(1u);
  }
  _MergedGlobals_921 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1857B153C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  _Block_object_dispose(&a32, 8);
  _Unwind_Resume(a1);
}

void sub_1857B18B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getTUIEmojiSearchInputViewControllerClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  TextInputUILibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("TUIEmojiSearchInputViewController");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getTUIEmojiSearchInputViewControllerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUIEmojiSearchInputViewControllerClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIKeyboardEmojiPopoverController.m"), 38, CFSTR("Unable to find class %s"), "TUIEmojiSearchInputViewController");

    __break(1u);
  }
}

void __getTUIEmojiSearchTextFieldClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  TextInputUILibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("TUIEmojiSearchTextField");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getTUIEmojiSearchTextFieldClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUIEmojiSearchTextFieldClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIKeyboardEmojiPopoverController.m"), 37, CFSTR("Unable to find class %s"), "TUIEmojiSearchTextField");

    __break(1u);
  }
}

void sub_1857B37A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL ExtendAttributedRangeForAttribute(void *a1, NSUInteger location, NSUInteger length, void *a4, NSUInteger *a5)
{
  id v9;
  id v10;
  void *v11;
  id v12;
  NSRange v13;
  NSRange v15;
  NSRange v16;

  v9 = a1;
  v10 = a4;
  v15.location = 0;
  v15.length = 0;
  objc_msgSend(v9, "attribute:atIndex:effectiveRange:", v10, location, 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    v12 = (id)objc_msgSend(v9, "attribute:atIndex:longestEffectiveRange:inRange:", v10, location, &v15, 0, objc_msgSend(v9, "length"));
    v16.location = location;
    v16.length = length;
    v13 = NSUnionRange(v15, v16);
    location = v13.location;
    length = v13.length;
  }
  if (a5)
  {
    *a5 = location;
    a5[1] = length;
  }

  return v11 != 0;
}

uint64_t _UIAccessibilityInitialize()
{
  uint64_t result;

  _kUIAccessibilityStartedWithInitialization = 1;
  result = objc_msgSend((id)UIApp, "_accessibilityInit");
  _kUIAccessibilityStartedWithInitialization = 0;
  return result;
}

uint64_t _UIAccessibilityStartedWithInitialization()
{
  return _kUIAccessibilityStartedWithInitialization;
}

uint64_t _UIAccessibilityIsEnabled()
{
  return _kUIAccessibilityEnabled;
}

BOOL _UIAccessibilityLargeTextEnabled()
{
  float v0;

  _AXSPreferredFontSize();
  return v0 != *MEMORY[0x1E0DDE1C0];
}

uint64_t _UIAccessibilityLargeTextFontSize()
{
  return _AXSPreferredFontSize();
}

id _UIAccessibilityContentSizeCategoryName()
{
  return (id)_AXSCopyPreferredContentSizeCategoryName();
}

BOOL _UIAccessibilityEnhanceBackgroundContrast()
{
  return _AXSEnhanceBackgroundContrastEnabled() != 0;
}

BOOL _UIAccessibilityReduceMotion()
{
  return _AXSReduceMotionEnabled() != 0;
}

BOOL _UIAccessibilityHighContrastFocusIndicatorEnabled()
{
  return _AXSHighContrastFocusIndicatorsEnabled() != 0;
}

BOOL _UIAccessibilityOnOffSwitchLabelsEnabled()
{
  return _AXSIncreaseButtonLegibility() != 0;
}

BOOL UIAccessibilityIsOnOffSwitchLabelsEnabled(void)
{
  return _AXSIncreaseButtonLegibility() != 0;
}

BOOL _UIAccessibilityZoomTouchEnabled()
{
  return _AXSZoomTouchEnabled() != 0;
}

void UIAccessibilityRegisterGestureConflictWithZoom(void)
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;

  if (_AXSZoomTouchEnabled())
  {
    v3 = (id)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E08]), "init");
    objc_msgSend(v3, "setObject:forKey:", _UIMainBundleIdentifier(), CFSTR("BundleID"));
    v0 = (void *)objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
    v1 = objc_msgSend(v0, "objectForInfoDictionaryKey:", *MEMORY[0x1E0C9AAC8]);
    if (v1
      || (v1 = objc_msgSend(v0, "objectForInfoDictionaryKey:", *MEMORY[0x1E0C9AE88])) != 0
      || (v1 = objc_msgSend(v0, "objectForInfoDictionaryKey:", *MEMORY[0x1E0C9AE70])) != 0
      || (v1 = objc_msgSend(v0, "bundleIdentifier")) != 0)
    {
      objc_msgSend(v3, "setObject:forKey:", v1, CFSTR("AppName"));
    }
    v2 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter", v1);
    objc_msgSend(v2, "postNotificationName:object:userInfo:", UIAXZoomRegisterConflict, 0, v3);

  }
}

void UIAccessibilityZoomFocusChanged(UIAccessibilityZoomType type, CGRect frame, UIView *view)
{
  double height;
  double width;
  double y;
  double x;
  double v9;
  double v10;
  BOOL v11;
  UIWindow *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  id v18;
  CGRect v19;
  NSRect v20;

  height = frame.size.height;
  width = frame.size.width;
  y = frame.origin.y;
  x = frame.origin.x;
  if (_AXSZoomTouchEnabled())
  {
    -[UIView bounds](view, "bounds");
    v11 = v10 < 1.0 || v9 < 1.0;
    if (!v11 && !-[UIView isHiddenOrHasHiddenAncestor](view, "isHiddenOrHasHiddenAncestor"))
    {
      if (view)
      {
        v12 = -[UIView window](view, "window");
        -[UIView convertRect:toView:](view, "convertRect:toView:", v12, x, y, width, height);
        x = v13;
        y = v14;
        width = v15;
        height = v16;
      }
      else
      {
        v12 = 0;
      }
      v19.origin.x = x;
      v19.origin.y = y;
      v19.size.width = width;
      v19.size.height = height;
      if (!CGRectIsEmpty(v19))
      {
        v18 = (id)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E08]), "init");
        v20.origin.x = x;
        v20.origin.y = y;
        v20.size.width = width;
        v20.size.height = height;
        objc_msgSend(v18, "setObject:forKey:", NSStringFromRect(v20), CFSTR("frame"));
        objc_msgSend(v18, "setObject:forKey:", objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", type), CFSTR("type"));
        if (v12)
          objc_msgSend(v18, "setObject:forKey:", v12, CFSTR("window"));
        v17 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
        objc_msgSend(v17, "postNotificationName:object:userInfo:", UIAXZoomFocusChangedNotification, 0, v18);

      }
    }
  }
}

void _UIAccessibilityHandleVisualAlert()
{
  __CFNotificationCenter *DarwinNotifyCenter;

  if (_AXSVisualAlertEnabled())
  {
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterPostNotification(DarwinNotifyCenter, CFSTR("AXVisualAlert"), 0, 0, 1u);
  }
}

double _UIAccessibilityDepthAdjustment(void *a1, double a2)
{
  double v3;
  int v5;
  int v6;

  if (a1
    && objc_msgSend((id)objc_msgSend(a1, "traitCollection"), "userInterfaceIdiom") == 6
    && _AXSReduceMotionEnabled())
  {
    if (_UIInternalPreferencesRevisionOnce != -1)
      dispatch_once(&_UIInternalPreferencesRevisionOnce, &__block_literal_global_4_20);
    v3 = 0.2;
    if (_UIInternalPreferencesRevisionVar >= 1)
    {
      v5 = _UIInternalPreference_UIReduceMotionZOffsetMultiplier;
      if (_UIInternalPreferencesRevisionVar != _UIInternalPreference_UIReduceMotionZOffsetMultiplier)
      {
        v6 = _UIInternalPreferencesRevisionVar;
        while (v6 >= v5)
        {
          _UIInternalPreferenceSync(v6, &_UIInternalPreference_UIReduceMotionZOffsetMultiplier, (uint64_t)CFSTR("UIReduceMotionZOffsetMultiplier"), (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
          v5 = _UIInternalPreference_UIReduceMotionZOffsetMultiplier;
          if (v6 == _UIInternalPreference_UIReduceMotionZOffsetMultiplier)
          {
            v3 = 0.2;
            return v3 * a2;
          }
        }
        v3 = *(double *)&qword_1EDDA7D50;
      }
    }
    return v3 * a2;
  }
  return a2;
}

uint64_t _preferredFontSizeChange()
{
  void *v0;

  v0 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  return objc_msgSend(v0, "postNotificationName:object:", CFSTR("UIAccessibilityLargeTextChangedNotification"), UIApp);
}

uint64_t _accessibilityQuickSpeakStatusChanged(uint64_t a1, void *a2)
{
  uint64_t result;

  result = _AXSQuickSpeakEnabled();
  if ((_DWORD)result)
    return objc_msgSend(a2, "_accessibilitySetUpQuickSpeak");
  return result;
}

uint64_t _accessibilityStatusChanged(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "_accessibilityStatusChanged:", 0);
}

uint64_t _axPrefEnabledChange(int a1, int a2, CFTypeRef cf1)
{
  void *v4;
  const __CFString *v5;
  uint64_t v6;
  uint64_t result;
  CFTypeRef *v8;
  void *v9;

  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE308]))
  {
    v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v5 = CFSTR("UIAccessibilityVoiceOverTouchStatusChanged");
LABEL_17:
    v6 = 0;
    return objc_msgSend(v4, "postNotificationName:object:", v5, v6);
  }
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE190]))
  {
    v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v5 = CFSTR("UIAccessibilityMonoAudioStatusChanged");
    goto LABEL_17;
  }
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE068]))
  {
    v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v5 = CFSTR("UIAccessibilityClosedCaptioningChanged");
    goto LABEL_17;
  }
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE150]))
  {
    v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v5 = CFSTR("UIAccessibilityInvertColorsChanged");
    goto LABEL_17;
  }
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE0D0]))
  {
    v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v5 = CFSTR("UIAccessibilityGrayscaleStatusDidChangeNotification");
    goto LABEL_17;
  }
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE010]))
  {
    v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v5 = CFSTR("UIAccessibilitySwitchControlStatusDidChangeNotification");
    goto LABEL_17;
  }
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE1D8]))
  {
    v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v5 = CFSTR("UIAccessibilitySpeakSelectionStatusDidChangeNotification");
    goto LABEL_17;
  }
  if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE278]))
  {
    v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v5 = CFSTR("UIAccessibilitySpeakScreenStatusDidChangeNotification");
    goto LABEL_17;
  }
  if (!CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDDFF0]))
  {
    if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE238]))
    {
      v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v5 = CFSTR("UIAccessibilityShakeToUndoDidChangeNotification");
      goto LABEL_17;
    }
    if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE0A0]))
    {
      v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v5 = CFSTR("UIAccessibilityBoldTextStatusDidChangeNotification");
      goto LABEL_17;
    }
    if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE058]))
    {
      v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v5 = CFSTR("UIAccessibilityCarPlayBoldTextStatusDidChangeNotification");
      goto LABEL_17;
    }
    if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE210]))
    {
      objc_msgSend((id)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter"), "postNotificationName:object:", CFSTR("UIAccessibilityReduceMotionStatusDidChangeNotification"), 0);
      v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v5 = CFSTR("UIAccessibilityReduceMotionChangedNotification");
      goto LABEL_17;
    }
    if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE220]))
    {
      v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v5 = CFSTR("UIAccessibilityPrefersCrossFadeTransitionsStatusDidChangeNotification");
      goto LABEL_17;
    }
    if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE208]))
    {
      v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v5 = CFSTR("UIAccessibilityVideoAutoplayStatusDidChangeNotification");
      goto LABEL_17;
    }
    if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE088]))
    {
      objc_msgSend((id)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter"), "postNotificationName:object:", CFSTR("UIAccessibilityReduceTransparencyStatusDidChangeNotification"), 0);
      v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v5 = CFSTR("UIAccessibilityEnhanceBackgroundContrastChangedNotification");
      goto LABEL_17;
    }
    if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE078]))
    {
      objc_msgSend((id)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter"), "postNotificationName:object:", CFSTR("UIAccessibilityDarkerSystemColorsStatusDidChangeNotification"), 0);
      v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v5 = CFSTR("UIAccessibilityDarkenSystemColorsChangedNotification");
      goto LABEL_17;
    }
    if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE120]))
    {
      v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v5 = CFSTR("UIAccessibilityHearingDevicePairedEarDidChangeNotification");
      goto LABEL_17;
    }
    if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE080]))
    {
      v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v5 = CFSTR("UIAccessibilityShouldDifferentiateWithoutColorDidChangeNotification");
      goto LABEL_17;
    }
    v8 = (CFTypeRef *)MEMORY[0x1E0DDE050];
    if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE050]))
    {
      v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v5 = CFSTR("UIAccessibilityButtonShapesEnabledStatusDidChangeNotification");
      goto LABEL_17;
    }
    if (CFEqual(cf1, *v8))
    {
      v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v5 = CFSTR("UIAccessibilityButtonShapesChangedNotification");
      goto LABEL_17;
    }
    if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE228]))
    {
      v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v5 = CFSTR("UIAccessibilityWhitePointStatusChangedNotification");
      goto LABEL_17;
    }
    if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE0A8]))
    {
      v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v5 = CFSTR("UIAccessibilityForceTouchStatusChangedNotification");
      goto LABEL_17;
    }
    if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE0B0]))
    {
      v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v5 = CFSTR("UIAccessibilityForceTouchSensitivityChangedNotification");
      goto LABEL_17;
    }
    if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE128]))
    {
      v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v5 = CFSTR("UIAccessibilityHighContrastFocusIndicatorChangedNotification");
      goto LABEL_17;
    }
    if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE148]))
    {
      objc_msgSend((id)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter"), "postNotificationName:object:", CFSTR("UIAccessibilityOnOffSwitchLabelsDidChangeNotification"), 0);
      v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v5 = CFSTR("UIAccessibilityOnOffSwitchLabelsChangedNotification");
      goto LABEL_17;
    }
    if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE2D8]))
    {
      v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v5 = CFSTR("UIAccessibilityUseDarkerKeyboardNotification");
      goto LABEL_17;
    }
    if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE2E0]))
    {
      v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
      v5 = CFSTR("UIAccessibilitySingleSystemColorChangedNotification");
      goto LABEL_17;
    }
    if (CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE0B8]))
    {
      objc_msgSend((id)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter"), "postNotificationName:object:", CFSTR("UIAccessibilityFullKeyboardAccessStatusDidChangeNotification"), 0);
      v9 = (void *)MEMORY[0x1E0CB37D0];
    }
    else
    {
      result = CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDDFE0]);
      if (!(_DWORD)result)
        return result;
      v9 = (void *)MEMORY[0x1E0CB37D0];
    }
    v4 = (void *)objc_msgSend(v9, "defaultCenter");
    v5 = CFSTR("_UIFocusBehaviorDidChangeNotification");
    v6 = UIApp;
    return objc_msgSend(v4, "postNotificationName:object:", v5, v6);
  }
  result = UIAccessibilityIsGuidedAccessEnabled();
  if ((_DWORD)result)
  {
    v4 = (void *)objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v5 = CFSTR("UIAccessibilityAssistiveTouchStatusDidChangeNotification");
    goto LABEL_17;
  }
  return result;
}

void *_UIAccessibilitySetFocusedElementCallback(void *result)
{
  __UIAccessibilityFocusedElementCallback = result;
  return result;
}

id UIAccessibilityFocusedElement(UIAccessibilityAssistiveTechnologyIdentifier assistiveTechnologyIdentifier)
{
  if (__UIAccessibilityFocusedElementCallback)
    return (id)__UIAccessibilityFocusedElementCallback(assistiveTechnologyIdentifier);
  else
    return 0;
}

CGRect UIAccessibilityConvertFrameToScreenCoordinates(CGRect rect, UIView *view)
{
  if (__UIAccessibilityConvertFrameCallback)
    __UIAccessibilityConvertFrameCallback(view, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return rect;
}

UIBezierPath *__cdecl UIAccessibilityConvertPathToScreenCoordinates(UIBezierPath *path, UIView *view)
{
  if (__UIAccessibilityConvertPathCallback)
    return (UIBezierPath *)__UIAccessibilityConvertPathCallback(path, view);
  return path;
}

UIBezierPath *UIAccessibilityConvertPathToScreenCoordinatesWithFallback(void *a1, uint64_t a2)
{
  _QWORD v3[5];

  if (__UIAccessibilityConvertPathCallback)
    return (UIBezierPath *)__UIAccessibilityConvertPathCallback(a1, a2);
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __UIAccessibilityConvertPathToScreenCoordinatesWithFallback_block_invoke;
  v3[3] = &unk_1E16B1718;
  v3[4] = a2;
  return _UIAccessibilityPathForPathUIKitFallback(a1, (uint64_t)v3);
}

UIBezierPath *_UIAccessibilityPathForPathUIKitFallback(void *a1, uint64_t a2)
{
  const CGPath *v3;
  CGMutablePathRef Mutable;
  UIBezierPath *v5;
  _QWORD v7[6];
  _QWORD info[7];
  _QWORD v9[4];
  _QWORD v10[3];
  char v11;

  if (!a1)
    return 0;
  v3 = (const CGPath *)objc_msgSend(a1, "CGPath");
  Mutable = CGPathCreateMutable();
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = ___UIAccessibilityPathForPathUIKitFallback_block_invoke;
  v7[3] = &unk_1E16B1800;
  v7[4] = a2;
  v7[5] = Mutable;
  v10[0] = 0;
  v10[1] = v10;
  v10[2] = 0x2020000000;
  v11 = 0;
  v9[0] = 0;
  v9[1] = v9;
  v9[2] = 0x2020000000;
  v9[3] = 0;
  info[0] = MEMORY[0x1E0C809B0];
  info[1] = 3221225472;
  info[2] = ___UIAX_CGPathEnumerateElementsUsingBlock_block_invoke;
  info[3] = &unk_1E16B1828;
  info[4] = v7;
  info[5] = v10;
  info[6] = v9;
  CGPathApply(v3, info, (CGPathApplierFunction)_UIAX_CGPathEnumerationIteration);
  _Block_object_dispose(v9, 8);
  _Block_object_dispose(v10, 8);
  v5 = +[UIBezierPath bezierPathWithCGPath:](UIBezierPath, "bezierPathWithCGPath:", Mutable);
  if (Mutable)
    CFRelease(Mutable);
  return v5;
}

void sub_1857B5F48(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t UIAccessibilityConvertAccessibilityPathToViewCoordinates()
{
  uint64_t result;

  if (__UIAccessibilityConvertAccessibilityPathToViewCallback)
    return __UIAccessibilityConvertAccessibilityPathToViewCallback();
  return result;
}

UIBezierPath *UIAccessibilityConvertAccessibilityPathToViewCoordinatesWithFallback(void *a1, uint64_t a2)
{
  _QWORD v3[5];

  if (__UIAccessibilityConvertAccessibilityPathToViewCallback)
    return (UIBezierPath *)__UIAccessibilityConvertAccessibilityPathToViewCallback();
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __UIAccessibilityConvertAccessibilityPathToViewCoordinatesWithFallback_block_invoke;
  v3[3] = &unk_1E16B1718;
  v3[4] = a2;
  return _UIAccessibilityPathForPathUIKitFallback(a1, (uint64_t)v3);
}

uint64_t (*_UIAccessibilitySetConvertPathCallback(uint64_t (*result)(_QWORD, _QWORD)))(_QWORD, _QWORD)
{
  __UIAccessibilityConvertPathCallback = result;
  return result;
}

uint64_t (*_UIAccessibilitySetConvertFrameCallback(uint64_t (*result)(_QWORD, __n128, __n128, __n128, __n128)))(_QWORD, __n128, __n128, __n128, __n128)
{
  __UIAccessibilityConvertFrameCallback = result;
  return result;
}

uint64_t (*_UIAccessibilitySetConvertAccessibilityPathToViewCallback(uint64_t (*result)(void)))(void)
{
  __UIAccessibilityConvertAccessibilityPathToViewCallback = result;
  return result;
}

uint64_t (*_UIAccessibilitySetBroadcastCallback(uint64_t (*result)(_QWORD, _QWORD)))(_QWORD, _QWORD)
{
  __UIAccessibilityBroadcastCallback = result;
  return result;
}

UIGuidedAccessRestrictionState UIGuidedAccessRestrictionStateForIdentifier(NSString *restrictionIdentifier)
{
  unint64_t v3;
  NSObject *v4;
  NSObject *v5;
  uint8_t v6[16];
  uint8_t buf[16];

  if (dyld_program_sdk_at_least())
  {
    if (pthread_main_np() != 1)
    {
      if (os_variant_has_internal_diagnostics())
      {
        v5 = __UIFaultDebugAssertLog();
        if (os_log_type_enabled(v5, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_fault_impl(&dword_185066000, v5, OS_LOG_TYPE_FAULT, "Unsupported use of UIKit API off the main thread: UIGuidedAccessRestrictionStateForIdentifier()", buf, 2u);
        }
      }
      else
      {
        v3 = UIGuidedAccessRestrictionStateForIdentifier___s_category;
        if (!UIGuidedAccessRestrictionStateForIdentifier___s_category)
        {
          v3 = __UILogCategoryGetNode("Assert", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
          atomic_store(v3, (unint64_t *)&UIGuidedAccessRestrictionStateForIdentifier___s_category);
        }
        v4 = *(NSObject **)(v3 + 8);
        if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)v6 = 0;
          _os_log_impl(&dword_185066000, v4, OS_LOG_TYPE_ERROR, "Unsupported use of UIKit API off the main thread: UIGuidedAccessRestrictionStateForIdentifier()", v6, 2u);
        }
      }
    }
    +[UIApplication _accessibilityLoadSettingsLoaderIfNeeded](UIApplication, "_accessibilityLoadSettingsLoaderIfNeeded");
  }
  return objc_msgSend(MEMORY[0x1E0DE7910], "__accessibilityGuidedAccessRestrictionStateForIdentifier:", restrictionIdentifier);
}

void UIAccessibilityRequestGuidedAccessSession(BOOL enable, void *completionHandler)
{
  _BOOL8 v3;
  unint64_t v4;
  NSObject *v5;
  NSObject *v6;
  uint8_t v7[16];
  uint8_t buf[16];

  v3 = enable;
  if (dyld_program_sdk_at_least())
  {
    if (pthread_main_np() != 1)
    {
      if (os_variant_has_internal_diagnostics())
      {
        v6 = __UIFaultDebugAssertLog();
        if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)buf = 0;
          _os_log_fault_impl(&dword_185066000, v6, OS_LOG_TYPE_FAULT, "Unsupported use of UIKit API off the main thread: UIAccessibilityRequestGuidedAccessSession()", buf, 2u);
        }
      }
      else
      {
        v4 = UIAccessibilityRequestGuidedAccessSession___s_category;
        if (!UIAccessibilityRequestGuidedAccessSession___s_category)
        {
          v4 = __UILogCategoryGetNode("Assert", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
          atomic_store(v4, (unint64_t *)&UIAccessibilityRequestGuidedAccessSession___s_category);
        }
        v5 = *(NSObject **)(v4 + 8);
        if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
        {
          *(_WORD *)v7 = 0;
          _os_log_impl(&dword_185066000, v5, OS_LOG_TYPE_ERROR, "Unsupported use of UIKit API off the main thread: UIAccessibilityRequestGuidedAccessSession()", v7, 2u);
        }
      }
    }
    +[UIApplication _accessibilityLoadSettingsLoaderIfNeeded](UIApplication, "_accessibilityLoadSettingsLoaderIfNeeded");
  }
  objc_msgSend(MEMORY[0x1E0DE7910], "__accessibilityRequestGuidedAccessSession:completion:", v3, completionHandler);
}

BOOL UIAccessibilityIsAssistiveTouchRunning(void)
{
  _BOOL4 IsGuidedAccessEnabled;
  unint64_t v1;
  NSObject *v2;
  NSObject *v3;
  uint8_t v5[16];
  uint8_t buf[16];

  if (!dyld_program_sdk_at_least() || pthread_main_np() == 1)
  {
    IsGuidedAccessEnabled = UIAccessibilityIsGuidedAccessEnabled();
    if (IsGuidedAccessEnabled)
      LOBYTE(IsGuidedAccessEnabled) = _AXSAssistiveTouchEnabled() != 0;
    return IsGuidedAccessEnabled;
  }
  if (os_variant_has_internal_diagnostics())
  {
    v3 = __UIFaultDebugAssertLog();
    IsGuidedAccessEnabled = os_log_type_enabled(v3, OS_LOG_TYPE_FAULT);
    if (!IsGuidedAccessEnabled)
      return IsGuidedAccessEnabled;
    *(_WORD *)buf = 0;
    _os_log_fault_impl(&dword_185066000, v3, OS_LOG_TYPE_FAULT, "Unsupported use of UIKit API off the main thread: UIAccessibilityIsAssistiveTouchRunning()", buf, 2u);
    goto LABEL_11;
  }
  v1 = UIAccessibilityIsAssistiveTouchRunning___s_category;
  if (!UIAccessibilityIsAssistiveTouchRunning___s_category)
  {
    v1 = __UILogCategoryGetNode("Assert", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
    atomic_store(v1, (unint64_t *)&UIAccessibilityIsAssistiveTouchRunning___s_category);
  }
  v2 = *(NSObject **)(v1 + 8);
  IsGuidedAccessEnabled = os_log_type_enabled(v2, OS_LOG_TYPE_ERROR);
  if (IsGuidedAccessEnabled)
  {
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_185066000, v2, OS_LOG_TYPE_ERROR, "Unsupported use of UIKit API off the main thread: UIAccessibilityIsAssistiveTouchRunning()", v5, 2u);
LABEL_11:
    LOBYTE(IsGuidedAccessEnabled) = 0;
  }
  return IsGuidedAccessEnabled;
}

BOOL UIAccessibilityIsShakeToUndoEnabled(void)
{
  return _AXSShakeToUndoDisabled() == 0;
}

BOOL _UIAccessibilityBoldTextEnabled()
{
  return _AXSEnhanceTextLegibilityEnabled() != 0;
}

BOOL _UIAccessibilityButtonShapesEnabled()
{
  return _AXSButtonShapesEnabled() != 0;
}

BOOL _UIAccessibilityReduceWhitePoint()
{
  return _AXSReduceWhitePointEnabled() != 0;
}

BOOL _UIAccessibilityForceTouchEnabled()
{
  return _AXSForceTouchEnabled() != 0;
}

double _UIAccessibilityForceTouchSensitivity()
{
  float v0;

  _AXSForceTouchSensitivity();
  return v0;
}

BOOL _UIAccessibilityUseDarkerKeyboard()
{
  return _AXSUseDarkerKeyboard() != 0;
}

BOOL _UIAccessibilityDarkenSystemColors()
{
  return _AXDarkenSystemColors() != 0;
}

BOOL _UIAccessibilityIsSingleColorSelected()
{
  return _AXSUseSingleSystemColor() != 0;
}

UIColor *_UIAccessibilitySingleSystemColor()
{
  _AXSNamedSingleSystemColor();
  _AXSSingleSystemColorValues();
  return +[UIColor colorWithRed:green:blue:alpha:](UIColor, "colorWithRed:green:blue:alpha:", 0.0, 0.0, 0.0, 0.0);
}

void _UIAccessibilityReportNilNameErroneouslyProvided(uint64_t a1)
{
  unint64_t v2;
  NSObject *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v2 = _UIAccessibilityReportNilNameErroneouslyProvided___s_category;
  if (!_UIAccessibilityReportNilNameErroneouslyProvided___s_category)
  {
    v2 = __UILogCategoryGetNode("Accessibility", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
    atomic_store(v2, (unint64_t *)&_UIAccessibilityReportNilNameErroneouslyProvided___s_category);
  }
  v3 = *(NSObject **)(v2 + 8);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    v4 = 138412290;
    v5 = a1;
    _os_log_impl(&dword_185066000, v3, OS_LOG_TYPE_ERROR, "An instance of %@ was erroneously provided a nil name or attributed name. This is a programming error and may become a hard error in a future release. Break on _UIAccessibilityReportNilNameErroneouslyProvided to debug.", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1857B6AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _UIAX_CGPathEnumerationIteration(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void *__getAXColorStringForColorSymbolLoc_block_invoke(_QWORD *a1)
{
  void *v2;
  void *result;
  void *v4;

  if (!qword_1ECD7C880)
    qword_1ECD7C880 = _sl_dlopen();
  v2 = (void *)qword_1ECD7C880;
  if (!qword_1ECD7C880)
  {
    a1 = (_QWORD *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AccessibilityUIUtilitiesLibrary(void)"), CFSTR("UIAccessibility.m"), 63, CFSTR("%s"), 0);
    __break(1u);
    free(v4);
  }
  result = dlsym(v2, "AXColorStringForColor");
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = result;
  off_1ECD7C878 = *(_UNKNOWN **)(*(_QWORD *)(a1[4] + 8) + 24);
  return result;
}

void _UITransformEventCommonInit(void *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;

  v1 = (void *)MEMORY[0x1E0CB3748];
  v6 = a1;
  objc_msgSend(v1, "strongToStrongObjectsMapTable");
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = (void *)v6[15];
  v6[15] = v2;

  v4 = MEMORY[0x1E0C9BAA8];
  v5 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 16);
  *((_OWORD *)v6 + 9) = *MEMORY[0x1E0C9BAA8];
  *((_OWORD *)v6 + 10) = v5;
  *((_OWORD *)v6 + 11) = *(_OWORD *)(v4 + 32);

}

void sub_1857B9428(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1857B94D8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

UIView *makeSpacerView()
{
  UIView *v0;
  UIView *v1;
  void *v2;
  void *v3;

  v0 = [UIView alloc];
  v1 = -[UIView initWithFrame:](v0, "initWithFrame:", *MEMORY[0x1E0C9D648], *(double *)(MEMORY[0x1E0C9D648] + 8), *(double *)(MEMORY[0x1E0C9D648] + 16), *(double *)(MEMORY[0x1E0C9D648] + 24));
  -[UIView widthAnchor](v1, "widthAnchor");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "constraintEqualToConstant:", 1.0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setActive:", 1);

  -[UIView setTranslatesAutoresizingMaskIntoConstraints:](v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  return v1;
}

double _UIAccessibilityContentSizeCategoryImageAdjustingScaleFactorForTraitCollection(void *a1)
{
  __CFString *v1;
  id v2;
  void *v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  BOOL v12;
  double v13;

  v2 = a1;
  v3 = v2;
  if (!v2
    || (objc_msgSend(v2, "preferredContentSizeCategory"),
        v1 = (__CFString *)objc_claimAutoreleasedReturnValue(),
        v1 == CFSTR("_UICTContentSizeCategoryUnspecified")))
  {
    objc_msgSend((id)UIApp, "preferredContentSizeCategory");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v3)
      goto LABEL_7;
  }
  else
  {
    objc_msgSend(v3, "preferredContentSizeCategory");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
  }

  objc_msgSend(v3, "displayScale");
  if (v5 != 0.0)
  {
    objc_msgSend(v3, "displayScale");
    v7 = v6;
    goto LABEL_8;
  }
LABEL_7:
  +[UIScreen mainScreen](UIScreen, "mainScreen");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "scale");
  v7 = v9;

LABEL_8:
  v10 = 1.5;
  if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UICTContentSizeCategoryAccessibilityM")) & 1) != 0)
    goto LABEL_16;
  if (objc_msgSend(v4, "isEqualToString:", CFSTR("UICTContentSizeCategoryAccessibilityL")))
  {
    v11 = 2.0;
    v12 = v7 <= 2.0;
    v13 = 1.8;
    goto LABEL_13;
  }
  if (objc_msgSend(v4, "isEqualToString:", CFSTR("UICTContentSizeCategoryAccessibilityXL")))
  {
    v11 = 2.0;
    v12 = v7 <= 2.0;
    v13 = 2.2;
LABEL_13:
    if (v12)
      v10 = v11;
    else
      v10 = v13;
    goto LABEL_16;
  }
  v10 = 2.5;
  if ((objc_msgSend(v4, "isEqualToString:", CFSTR("UICTContentSizeCategoryAccessibilityXXL")) & 1) == 0)
  {
    if (objc_msgSend(v4, "isEqualToString:", CFSTR("UICTContentSizeCategoryAccessibilityXXXL")))
      v10 = 3.0;
    else
      v10 = 1.0;
  }
LABEL_16:

  return v10;
}

id formatDate(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;

  v1 = qword_1ECD7C890;
  v2 = a1;
  if (v1 != -1)
    dispatch_once(&qword_1ECD7C890, &__block_literal_global_2);
  objc_msgSend(MEMORY[0x1E0C99E80], "systemTimeZone");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend((id)_MergedGlobals_923, "setTimeZone:", v3);

  objc_msgSend((id)_MergedGlobals_923, "stringFromDate:", v2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void sub_1857BCFAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __formatDate_block_invoke()
{
  id v0;
  void *v1;

  v0 = objc_alloc_init(MEMORY[0x1E0CB36A8]);
  v1 = (void *)_MergedGlobals_923;
  _MergedGlobals_923 = (uint64_t)v0;

  return objc_msgSend((id)_MergedGlobals_923, "setFormatOptions:", 4083);
}

double unionRectValues(void *a1)
{
  id v1;
  CGFloat y;
  double x;
  CGFloat height;
  CGFloat width;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;

  v20 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  x = *MEMORY[0x1E0C9D628];
  y = *(double *)(MEMORY[0x1E0C9D628] + 8);
  width = *(double *)(MEMORY[0x1E0C9D628] + 16);
  height = *(double *)(MEMORY[0x1E0C9D628] + 24);
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v6 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v16;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v16 != v8)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v15 + 1) + 8 * v9), "CGRectValue");
        v23.origin.x = v10;
        v23.origin.y = v11;
        v23.size.width = v12;
        v23.size.height = v13;
        v21.origin.x = x;
        v21.origin.y = y;
        v21.size.width = width;
        v21.size.height = height;
        v22 = CGRectUnion(v21, v23);
        x = v22.origin.x;
        y = v22.origin.y;
        width = v22.size.width;
        height = v22.size.height;
        ++v9;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v7);
  }

  return x;
}

void *UIGuidedAccessSetConfigureAccessibilityFeaturesEnabledCallback(void *result)
{
  GuidedAccessConfigureAccessibilityFeaturesEnabledCallback = result;
  return result;
}

void UIGuidedAccessConfigureAccessibilityFeatures(UIGuidedAccessAccessibilityFeature features, BOOL enabled, void *completion)
{
  _BOOL8 v3;
  void *v5;
  void *v6;
  _QWORD block[4];
  id v8;

  v3 = enabled;
  v5 = completion;
  v6 = v5;
  if (GuidedAccessConfigureAccessibilityFeaturesEnabledCallback)
  {
    GuidedAccessConfigureAccessibilityFeaturesEnabledCallback(features, v3, v5);
  }
  else
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __UIGuidedAccessConfigureAccessibilityFeatures_block_invoke;
    block[3] = &unk_1E16B1BF8;
    v8 = v5;
    dispatch_async(MEMORY[0x1E0C80D38], block);

  }
}

void sub_1857C30DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  id *v22;
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1857C5070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  id *v22;
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1857C58BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1857C74E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

void sub_1857C78E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double _UIEventHIDHitTestPointForChild(void *a1)
{
  id v1;
  uint64_t IntegerValue;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  double v10;
  double v11;
  double v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  IntegerValue = IOHIDEventGetIntegerValue();
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  objc_msgSend(v1, "pathAttributes", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v15;
LABEL_3:
    v7 = 0;
    while (1)
    {
      if (*(_QWORD *)v15 != v6)
        objc_enumerationMutation(v3);
      v8 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * v7);
      if (objc_msgSend(v8, "pathIndex") == IntegerValue)
        break;
      if (v5 == ++v7)
      {
        v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
        if (v5)
          goto LABEL_3;
        goto LABEL_9;
      }
    }
    v9 = v8;

    if (!v9)
      goto LABEL_12;
    objc_msgSend(v9, "hitTestLocationX");
    v11 = v10;
    objc_msgSend(v9, "hitTestLocationY");
  }
  else
  {
LABEL_9:

LABEL_12:
    IOHIDEventGetFloatValue();
    v11 = v12;
    IOHIDEventGetFloatValue();
    v9 = 0;
  }

  return v11;
}

void sub_1857C7EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _RestoreKeyWindow()
{
  id v1;
  uint64_t v2;
  void *v3;

  if (!+[UIWindow _applicationKeyWindow](UIWindow, "_applicationKeyWindow"))
  {
    v1 = +[UIWindow allWindowsIncludingInternalWindows:onlyVisibleWindows:](UIWindow, "allWindowsIncludingInternalWindows:onlyVisibleWindows:", 0, 1);
    v2 = objc_msgSend(v1, "count") - 1;
    while ((v2 & 0x8000000000000000) == 0)
    {
      v3 = (void *)objc_msgSend(v1, "objectAtIndex:", v2--);
      if ((objc_msgSend(v3, "_isTextEffectsWindow") & 1) == 0)
        return objc_msgSend(v3, "makeKey:", 0);
    }
  }
  return objc_msgSend((id)objc_msgSend(+[UIWindow _applicationKeyWindow](UIWindow, "_applicationKeyWindow"), "firstResponder"), "_windowBecameKey");
}

uint64_t _UIFocusItemScrollableContainerScrollOffsetResolverTypeForFocusMovement(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "scrollableContainer");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (_UIFocusItemScrollableContainerIsScrollViewOrRespondsToSelector(v5))
    v6 = objc_msgSend(v5, "_focusScrollOffsetResolverForFocusMovement:", v4);
  else
    v6 = _UIFocusItemScrollableContainerDefaultScrollOffsetResolverTypeForFocusMovement(v3, v4);
  v7 = v6;

  return v7;
}

uint64_t _UIFocusItemScrollableContainerIsScrollViewOrRespondsToSelector(void *a1)
{
  id v1;
  char v2;

  v1 = a1;
  if ((objc_msgSend(v1, "__isKindOfUIScrollView") & 1) != 0)
    v2 = 1;
  else
    v2 = objc_opt_respondsToSelector();

  return v2 & 1;
}

uint64_t _UIFocusItemScrollableContainerDefaultScrollOffsetResolverTypeForFocusMovement(void *a1, void *a2)
{
  id v3;
  id v4;
  int v5;
  _BOOL4 v6;
  int v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  int v18;
  id v19;

  v3 = a1;
  v4 = a2;
  if (_UIInternalPreferencesRevisionOnce != -1)
    dispatch_once(&_UIInternalPreferencesRevisionOnce, &__block_literal_global_4_20);
  v5 = _UIInternalPreferencesRevisionVar;
  if (_UIInternalPreferencesRevisionVar < 1
    || (v18 = _UIInternalPreference_B519_RotaryScrollCentering,
        _UIInternalPreferencesRevisionVar == _UIInternalPreference_B519_RotaryScrollCentering))
  {
    v6 = 1;
  }
  else
  {
    do
    {
      v6 = v5 >= v18;
      if (v5 < v18)
        break;
      _UIInternalPreferenceSync(v5, &_UIInternalPreference_B519_RotaryScrollCentering, (uint64_t)CFSTR("B519_RotaryScrollCentering"), (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
      v18 = _UIInternalPreference_B519_RotaryScrollCentering;
    }
    while (v5 != _UIInternalPreference_B519_RotaryScrollCentering);
  }
  if (byte_1EDDA7D64)
    v7 = 1;
  else
    v7 = v6;
  if (v4 && v7 && objc_msgSend(v4, "_inputType") == 6)
  {
    objc_msgSend(v3, "owningEnvironment");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    +[UIFocusSystem focusSystemForEnvironment:](UIFocusSystem, "focusSystemForEnvironment:", v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "focusedItem");
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    if (v10)
    {
      v19 = 0;
      _UIFocusEnvironmentResolvedRotaryFocusMovementAxis(v10, &v19);
      v11 = v19;
      objc_msgSend(v3, "scrollableContainer");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "focusItemContainer");
      v13 = (void *)objc_claimAutoreleasedReturnValue();

      if (v12 == v13)
      {
        v16 = 3;
        goto LABEL_15;
      }
    }

  }
  objc_msgSend(v3, "owningEnvironment");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  +[UIFocusSystem focusSystemForEnvironment:](UIFocusSystem, "focusSystemForEnvironment:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "behavior");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v16 = objc_msgSend(v10, "defaultFocusScrollOffsetResolver");
LABEL_15:

  return v16;
}

id _UIFocusItemScrollableContainerScrollBoundaryMetricsForItem(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;

  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "scrollableContainer");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (_UIFocusItemScrollableContainerIsScrollViewOrRespondsToSelector(v5))
    objc_msgSend(v5, "_focusScrollBoundaryMetricsForItem:", v4);
  else
    _UIFocusItemScrollableContainerDefaultScrollBoundaryMetricsForItem(v3, v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

_UIFocusScrollBoundaryMetrics *_UIFocusItemScrollableContainerDefaultScrollBoundaryMetricsForItem(void *a1, void *a2)
{
  id v3;
  id v4;
  _UIFocusScrollBoundaryMetrics *v5;
  void *v6;
  void *v7;
  _UIFocusScrollBoundaryMetrics *v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  BOOL v31;
  void *v33;
  void *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[128];
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = [_UIFocusScrollBoundaryMetrics alloc];
  objc_msgSend(v3, "owningEnvironment");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "scrollableContainer");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = -[_UIFocusScrollBoundaryMetrics initWithFocusItem:owningEnvironment:scrollableContainer:](v5, "initWithFocusItem:owningEnvironment:scrollableContainer:", v4, v6, v7);

  if (-[_UIFocusScrollBoundaryMetrics hasDisprovedAllRelevantAssumptions](v8, "hasDisprovedAllRelevantAssumptions"))
    goto LABEL_35;
  objc_msgSend(v3, "scrollableContainer");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[_UIFocusScrollBoundaryMetrics minContentOffset](v8, "minContentOffset");
  v11 = v10;
  v13 = v12;
  objc_msgSend(v9, "visibleSize");
  v15 = v14;
  v17 = v16;
  if (-[_UIFocusScrollBoundaryMetrics shouldSearchX](v8, "shouldSearchX"))
  {
    if (-[_UIFocusScrollBoundaryMetrics isMinX](v8, "isMinX"))
    {
      -[_UIFocusScrollBoundaryMetrics minContentOffset](v8, "minContentOffset");
    }
    else
    {
      if (!-[_UIFocusScrollBoundaryMetrics isMaxX](v8, "isMaxX"))
      {
LABEL_8:
        if (-[_UIFocusScrollBoundaryMetrics isMinX](v8, "isMinX")
          && -[_UIFocusScrollBoundaryMetrics isMaxX](v8, "isMaxX"))
        {
          objc_msgSend(v9, "contentSize");
          v15 = v19;
        }
        goto LABEL_11;
      }
      -[_UIFocusScrollBoundaryMetrics maxContentOffset](v8, "maxContentOffset");
    }
    v11 = v18;
    goto LABEL_8;
  }
LABEL_11:
  if (-[_UIFocusScrollBoundaryMetrics shouldSearchY](v8, "shouldSearchY"))
  {
    if (-[_UIFocusScrollBoundaryMetrics isMinY](v8, "isMinY"))
    {
      -[_UIFocusScrollBoundaryMetrics minContentOffset](v8, "minContentOffset");
    }
    else
    {
      if (!-[_UIFocusScrollBoundaryMetrics isMaxY](v8, "isMaxY"))
      {
LABEL_17:
        if (-[_UIFocusScrollBoundaryMetrics isMinY](v8, "isMinY")
          && -[_UIFocusScrollBoundaryMetrics isMaxY](v8, "isMaxY"))
        {
          objc_msgSend(v9, "contentSize");
          v17 = v21;
        }
        goto LABEL_20;
      }
      -[_UIFocusScrollBoundaryMetrics maxContentOffset](v8, "maxContentOffset");
    }
    v13 = v20;
    goto LABEL_17;
  }
LABEL_20:
  objc_msgSend(v3, "owningEnvironment");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = v9;
  if (!v23)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSArray<id<UIFocusItem>> * _Nonnull _UIFocusItemContainerGatherAllExtantChildFocusableItemsInRect(id<UIFocusEnvironment>  _Nonnull __strong, id<UIFocusItemContainer>  _Nonnull __strong, CGRect)");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v33, "handleFailureInFunction:file:lineNumber:description:", v34, CFSTR("_UIFocusScrollManagerSupport.m"), 70, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("container"));

  }
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  _UIFocusItemContainerGatherAllExtantChildFocusableItemsInRectIntoArray(v22, v23, v24, v11, v13, v15, v17);

  v37 = 0u;
  v38 = 0u;
  v35 = 0u;
  v36 = 0u;
  v25 = v24;
  v26 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v35, v39, 16);
  if (v26)
  {
    v27 = v26;
    v28 = *(_QWORD *)v36;
LABEL_24:
    v29 = 0;
    while (1)
    {
      if (*(_QWORD *)v36 != v28)
        objc_enumerationMutation(v25);
      v30 = *(id *)(*((_QWORD *)&v35 + 1) + 8 * v29);
      v31 = !v30 || v30 == v4;
      if (!v31 && -[_UIFocusScrollBoundaryMetrics checkOtherFocusItem:](v8, "checkOtherFocusItem:"))
        break;
      if (v27 == ++v29)
      {
        v27 = objc_msgSend(v25, "countByEnumeratingWithState:objects:count:", &v35, v39, 16);
        if (v27)
          goto LABEL_24;
        break;
      }
    }
  }

LABEL_35:
  return v8;
}

double _UIFocusItemScrollableContainerScrollableAreaInsets(void *a1)
{
  id v1;
  double v2;
  double v3;

  v1 = a1;
  v2 = 0.0;
  if (_UIFocusItemScrollableContainerIsScrollViewOrRespondsToSelector(v1))
  {
    objc_msgSend(v1, "_focusScrollableAreaInsets");
    v2 = v3;
  }

  return v2;
}

double _UIFocusItemScrollableContainerMinimumContentOffset(void *a1)
{
  id v1;
  double v2;
  double v3;

  v1 = a1;
  if (objc_msgSend(v1, "__isKindOfUIScrollView"))
  {
    objc_msgSend(v1, "_minimumContentOffset");
    v3 = v2;
    objc_msgSend(v1, "_maxTopOffset");
  }
  else
  {
    v3 = *MEMORY[0x1E0C9D538];
  }

  return v3;
}

double _UIFocusItemScrollableContainerMaximumContentOffset(void *a1)
{
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;

  v1 = a1;
  if (objc_msgSend(v1, "__isKindOfUIScrollView"))
  {
    objc_msgSend(v1, "_maximumContentOffset");
    v3 = v2;
  }
  else
  {
    objc_msgSend(v1, "contentSize");
    v5 = v4;
    objc_msgSend(v1, "visibleSize");
    v3 = fmax(v5 - v6, 0.0);
  }

  return v3;
}

double _UIFocusItemScrollableContainerAdjustedContentOffsetToShowFocusItem(void *a1, void *a2, double a3, double a4)
{
  id v7;
  id v8;
  double v9;

  v7 = a1;
  v8 = a2;
  if (objc_msgSend(v7, "__isKindOfUIScrollView"))
  {
    objc_msgSend(v7, "_adjustFocusContentOffset:toShowFocusItemWithInfo:", v8, a3, a4);
    a3 = v9;
  }

  return a3;
}

void _UIFocusItemContainerGatherAllExtantChildFocusableItemsInRectIntoArray(void *a1, void *a2, void *a3, double a4, double a5, double a6, double a7)
{
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  _BOOL4 v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t i;
  void *v36;
  void *v37;
  int CanBecomeFocused;
  void *v39;
  void *v40;
  void *v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  id v54;
  void *v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _BYTE v60[128];
  uint64_t v61;
  CGRect v62;
  CGRect v63;

  v61 = *MEMORY[0x1E0C80C00];
  v13 = a1;
  v14 = a2;
  v15 = a3;
  v16 = v15;
  v55 = v14;
  if (!v14)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v50 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void _UIFocusItemContainerGatherAllExtantChildFocusableItemsInRectIntoArray(id<UIFocusEnvironment>  _Nonnull __strong, id<UIFocusItemContainer>  _Nonnull __strong, CGRect, NSMutableArray * _Nonnull __strong)");
    v51 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v50, "handleFailureInFunction:file:lineNumber:description:", v51, CFSTR("_UIFocusScrollManagerSupport.m"), 36, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("container"));

    if (v16)
      goto LABEL_3;
LABEL_21:
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v52 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void _UIFocusItemContainerGatherAllExtantChildFocusableItemsInRectIntoArray(id<UIFocusEnvironment>  _Nonnull __strong, id<UIFocusItemContainer>  _Nonnull __strong, CGRect, NSMutableArray * _Nonnull __strong)");
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v52, "handleFailureInFunction:file:lineNumber:description:", v53, CFSTR("_UIFocusScrollManagerSupport.m"), 37, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("array"));

    goto LABEL_3;
  }
  if (!v15)
    goto LABEL_21;
LABEL_3:
  +[_UIFocusSystemSceneComponent sceneComponentForEnvironment:](_UIFocusSystemSceneComponent, "sceneComponentForEnvironment:", v13);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  if (!_UIFocusItemContainerIsLazy(v14))
    goto LABEL_5;
  objc_msgSend(v17, "coordinateSpace");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "bounds");
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v63.origin.x = _UIFocusEnvironmentContainerFrameInCoordinateSpace(v13, v18);
  v63.origin.y = v27;
  v63.size.width = v28;
  v63.size.height = v29;
  v62.origin.x = v20;
  v62.origin.y = v22;
  v62.size.width = v24;
  v62.size.height = v26;
  v30 = CGRectIntersectsRect(v62, v63);

  if (v30)
  {
LABEL_5:
    v54 = v13;
    _UIFocusItemContainerExtantFocusItemsInRect(v14, a4, a5, a6, a7);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    v56 = 0u;
    v57 = 0u;
    v58 = 0u;
    v59 = 0u;
    v32 = objc_msgSend(v31, "countByEnumeratingWithState:objects:count:", &v56, v60, 16);
    if (v32)
    {
      v33 = v32;
      v34 = *(_QWORD *)v57;
      do
      {
        for (i = 0; i != v33; ++i)
        {
          if (*(_QWORD *)v57 != v34)
            objc_enumerationMutation(v31);
          v36 = *(void **)(*((_QWORD *)&v56 + 1) + 8 * i);
          if (_UIFocusEnvironmentIsEligibleForFocusInteraction(v36))
          {
            objc_msgSend(v17, "focusSystem");
            v37 = (void *)objc_claimAutoreleasedReturnValue();
            CanBecomeFocused = _UIFocusItemCanBecomeFocused(v36, v37);

            if (CanBecomeFocused)
            {
              objc_msgSend(v16, "addObject:", v36);
            }
            else
            {
              objc_msgSend(v36, "focusItemContainer");
              v39 = (void *)objc_claimAutoreleasedReturnValue();
              if (v39)
              {
                objc_msgSend(v55, "coordinateSpace");
                v40 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v39, "coordinateSpace");
                v41 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v40, "convertRect:toCoordinateSpace:", v41, a4, a5, a6, a7);
                v43 = v42;
                v45 = v44;
                v47 = v46;
                v49 = v48;

                _UIFocusItemContainerGatherAllExtantChildFocusableItemsInRectIntoArray(v36, v39, v16, v43, v45, v47, v49);
              }

            }
          }
        }
        v33 = objc_msgSend(v31, "countByEnumeratingWithState:objects:count:", &v56, v60, 16);
      }
      while (v33);
    }

    v13 = v54;
  }

}

void sub_1857CF860(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getSRCSCommandStringsTableClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getSRCSCommandStringsTableClass_softClass;
  v7 = getSRCSCommandStringsTableClass_softClass;
  if (!getSRCSCommandStringsTableClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getSRCSCommandStringsTableClass_block_invoke;
    v3[3] = &unk_1E16B14C0;
    v3[4] = &v4;
    __getSRCSCommandStringsTableClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1857CF924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1857CFA98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getSRCSCommandRecognitionSystemClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  SpeechRecognitionCommandServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("SRCSCommandRecognitionSystem");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7C998 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getSRCSCommandRecognitionSystemClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIDictationCommandHandler.m"), 24, CFSTR("Unable to find class %s"), "SRCSCommandRecognitionSystem");

    __break(1u);
  }
}

void SpeechRecognitionCommandServicesLibrary()
{
  void *v0;
  void *v1;
  void *v2;

  if (!SpeechRecognitionCommandServicesLibraryCore_frameworkLibrary)
    SpeechRecognitionCommandServicesLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!SpeechRecognitionCommandServicesLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *SpeechRecognitionCommandServicesLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("UIDictationCommandHandler.m"), 23, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

void __getSRCSCommandStringsTableClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  SpeechRecognitionCommandServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("SRCSCommandStringsTable");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getSRCSCommandStringsTableClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getSRCSCommandStringsTableClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIDictationCommandHandler.m"), 25, CFSTR("Unable to find class %s"), "SRCSCommandStringsTable");

    __break(1u);
  }
}

void __getSRCSCommandRecognizerClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  SpeechRecognitionCommandServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("SRCSCommandRecognizer");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7C9A0 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getSRCSCommandRecognizerClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIDictationCommandHandler.m"), 26, CFSTR("Unable to find class %s"), "SRCSCommandRecognizer");

    __break(1u);
  }
}

void sub_1857D3D0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v9 - 112), 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1857D4D70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1857D60CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1857D89D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t ___pointerArrayRemovePointer_block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "removePointerAtIndex:", a2);
}

BOOL ___dequeueRepresentationViewWithIdenticalAction_block_invoke(uint64_t a1, void *a2, uint64_t a3, BOOL *a4)
{
  void *v6;

  objc_msgSend(a2, "action");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  *a4 = v6 == *(void **)(a1 + 32);

  return *a4;
}

void sub_1857DBEF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1857DC190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1857DC71C(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  uint64_t v4;

  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 104));
  _Unwind_Resume(a1);
}

void sub_1857DCC0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1857DD640(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, id a19)
{
  id *v19;
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a19);
  _Unwind_Resume(a1);
}

void __newSpringLoadingInteractionForRepView_block_invoke(uint64_t a1, void *a2)
{
  id v2;

  objc_msgSend(a2, "view");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "invokeInterfaceAction");

}

id constraintWithAnchorRelatedToAnchor(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;

  v5 = a1;
  v6 = a3;
  if (a2 == 1)
  {
    objc_msgSend(v5, "constraintGreaterThanOrEqualToAnchor:", v6);
    v7 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    if (a2)
    {
      v8 = 0;
      goto LABEL_7;
    }
    objc_msgSend(v5, "constraintEqualToAnchor:", v6);
    v7 = objc_claimAutoreleasedReturnValue();
  }
  v8 = (void *)v7;
LABEL_7:

  return v8;
}

uint64_t compareConstraintsForInsertionPerformance(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  id v14;
  id v15;
  float v16;
  float v17;
  float v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  float v24;
  float v25;
  float v26;

  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v3 && v4)
  {
    v6 = objc_msgSend(v3, "relation");
    if (v6 < 0)
      v7 = -1;
    else
      v7 = v6;
    if (v7 >= 1)
      v7 = 1;
    v8 = _insertionPerformanceComparisonOfLayoutRelations_ordinal[v7 + 1];
    v9 = objc_msgSend(v5, "relation");
    if (v9 < 0)
      v10 = -1;
    else
      v10 = v9;
    if (v10 >= 1)
      v10 = 1;
    v11 = _insertionPerformanceComparisonOfLayoutRelations_ordinal[v10 + 1];
    v12 = v8 == v11;
    if (v8 > v11)
      v13 = 1;
    else
      v13 = -1;
    if (v12)
    {
      v14 = v3;
      v15 = v5;
      objc_msgSend(v14, "priority");
      v17 = v16;
      objc_msgSend(v15, "priority");
      if (v17 == v18)
      {

        v14 = v14;
        v15 = v15;
        objc_msgSend(v14, "firstItem");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "firstItem");
        v20 = (void *)objc_claimAutoreleasedReturnValue();

        if (v19 == v20)
        {
          v13 = 0;
        }
        else
        {
          objc_msgSend(v14, "firstItem");
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v15, "firstItem");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          if (v21 > v22)
            v13 = -1;
          else
            v13 = 1;

        }
      }
      else
      {
        objc_msgSend(v14, "priority");
        v25 = v24;
        objc_msgSend(v15, "priority");
        if (v25 <= v26)
          v13 = 1;
        else
          v13 = -1;
      }

    }
  }
  else
  {
    if (v4)
      v23 = -1;
    else
      v23 = 0;
    if (v3)
      v13 = 1;
    else
      v13 = v23;
  }

  return v13;
}

void sub_1857E660C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1857EC830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1857ECEE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1857ED444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1857ED628(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1857ED828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void _UISceneUpdateSystemShellManagesKeyboardFocusIfNeededFromScene(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  BOOL v8;
  int v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;

  if (pthread_main_np() != 1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void _UISceneUpdateSystemShellManagesKeyboardFocusIfNeededFromScene(UIScene *__unsafe_unretained)");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, CFSTR("UIScene.m"), 222, CFSTR("Call must be made on main thread"));

  }
  if (_UISceneSystemShellManagesKeyboardFocusIsPossibleForScene(a1))
  {
    v14 = a1;
    v2 = _UISceneEffectiveIdiomOfSceneForSystemShellManagesKeyboardFocus(v14);
    if (v2 != -1)
    {
      v3 = v2;
      v4 = 1 << v2;
      if ((v4 & ~_systemShellManagesKeyboardFocusIdiomMask) != 0)
      {
        if (pthread_main_np() != 1)
        {
          objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _UISceneSystemShellManagesKeyboardFocusAlwaysEnabledForSceneAndIdiom(UIScene *__unsafe_unretained, UIUserInterfaceIdiom)");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v12, "handleFailureInFunction:file:lineNumber:description:", v13, CFSTR("UIScene.m"), 174, CFSTR("Call must be made on main thread"));

        }
        if (_UISceneSystemShellManagesKeyboardFocusIsPossibleForScene(v14))
        {
          +[UIDevice currentDevice](UIDevice, "currentDevice");
          v5 = (void *)objc_claimAutoreleasedReturnValue();
          v6 = objc_msgSend(v5, "userInterfaceIdiom");

          v8 = v3 != 3 && v6 < 2;
        }
        else
        {
          v8 = 0;
        }
        v9 = objc_msgSend(v14, "_isTargetOfKeyboardEventDeferringEnvironment");
        if (v8 || v9)
          _systemShellManagesKeyboardFocusIdiomMask |= v4;
      }
    }

  }
}

void sub_1857EFD20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _UIWindowHostingScenePerformUpdateWithEffectiveSettings(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  _QWORD v7[4];
  id v8;
  id v9;

  v3 = a1;
  v4 = a2;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = ___UIWindowHostingScenePerformUpdateWithEffectiveSettings_block_invoke;
  v7[3] = &unk_1E16B1B50;
  v8 = v3;
  v9 = v4;
  v5 = v4;
  v6 = v3;
  +[UIView performWithoutAnimation:](UIView, "performWithoutAnimation:", v7);

}

void _UIUpdateSettingsWithOcclusionRects(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  objc_msgSend(v6, "setApplicationOcclusionRects:", a2);
  objc_msgSend(v6, "setSystemOcclusionRects:", v5);

}

void sub_1857F1C64(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  _Unwind_Resume(a1);
}

void sub_1857F1DF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1857F1E9C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1857F1FFC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void _UIRegionSolveResult::~_UIRegionSolveResult(_UIRegionSolveResult *this)
{
  void **v2;

  v2 = (void **)((char *)this + 120);
  std::vector<_UIAuxillarySolveResult>::__destroy_vector::operator()[abi:nn180100](&v2);
  v2 = (void **)((char *)this + 96);
  std::vector<_UIAuxillarySolveResult>::__destroy_vector::operator()[abi:nn180100](&v2);
}

void sub_1857F20C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_1857F213C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void *std::__allocate_at_least[abi:nn180100]<std::allocator<_UIAuxillarySolveResult>>(unint64_t a1)
{
  if (a1 >= 0x555555555555556)
    std::__throw_bad_array_new_length[abi:nn180100]();
  return operator new(48 * a1);
}

void std::__throw_bad_array_new_length[abi:nn180100]()
{
  abort();
}

char *std::vector<_UIAuxillarySolveResult>::__init_with_size[abi:nn180100]<_UIAuxillarySolveResult*,_UIAuxillarySolveResult*>(char *result, __int128 *a2, __int128 *a3, unint64_t a4)
{
  char *v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  if (a4)
  {
    v6 = result;
    result = std::vector<_UIAuxillarySolveResult>::__vallocate[abi:nn180100](result, a4);
    v7 = *((_QWORD *)v6 + 1);
    while (a2 != a3)
    {
      v8 = *a2;
      v9 = a2[1];
      *(_QWORD *)(v7 + 32) = *((_QWORD *)a2 + 4);
      *(_OWORD *)v7 = v8;
      *(_OWORD *)(v7 + 16) = v9;
      result = (char *)*((id *)a2 + 5);
      *(_QWORD *)(v7 + 40) = result;
      v7 += 48;
      a2 += 3;
    }
    *((_QWORD *)v6 + 1) = v7;
  }
  return result;
}

char *std::vector<_UIAuxillarySolveResult>::__vallocate[abi:nn180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >= 0x555555555555556)
    abort();
  result = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<_UIAuxillarySolveResult>>(a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[48 * v4];
  return result;
}

void std::__destroy_at[abi:nn180100]<_UIRegionSolveResult,0>(void **a1)
{
  void **v2;

  v2 = a1 + 15;
  std::vector<_UIAuxillarySolveResult>::__destroy_vector::operator()[abi:nn180100](&v2);
  v2 = a1 + 12;
  std::vector<_UIAuxillarySolveResult>::__destroy_vector::operator()[abi:nn180100](&v2);
}

uint64_t std::construct_at[abi:nn180100]<_UIRegionSolveResult,_UIRegionSolveResult const&,_UIRegionSolveResult*>(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 32);
  v6 = *(_OWORD *)(a2 + 48);
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 96) = 0;
  *(_QWORD *)(a1 + 104) = 0;
  *(_QWORD *)(a1 + 112) = 0;
  std::vector<_UIAuxillarySolveResult>::__init_with_size[abi:nn180100]<_UIAuxillarySolveResult*,_UIAuxillarySolveResult*>((char *)(a1 + 96), *(__int128 **)(a2 + 96), *(__int128 **)(a2 + 104), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 104) - *(_QWORD *)(a2 + 96)) >> 4));
  *(_QWORD *)(a1 + 120) = 0;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = 0;
  std::vector<_UIAuxillarySolveResult>::__init_with_size[abi:nn180100]<_UIAuxillarySolveResult*,_UIAuxillarySolveResult*>((char *)(a1 + 120), *(__int128 **)(a2 + 120), *(__int128 **)(a2 + 128), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a2 + 128) - *(_QWORD *)(a2 + 120)) >> 4));
  *(_QWORD *)(a1 + 144) = *(id *)(a2 + 144);
  return a1;
}

void sub_1857F2370(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::vector<_UIAuxillarySolveResult>::__destroy_vector::operator()[abi:nn180100]((void ***)va);
  _Unwind_Resume(a1);
}

void *std::__allocate_at_least[abi:nn180100]<std::allocator<_UIRegionSolveResult>>(unint64_t a1)
{
  if (a1 >= 0x1AF286BCA1AF287)
    std::__throw_bad_array_new_length[abi:nn180100]();
  return operator new(152 * a1);
}

uint64_t std::__uninitialized_allocator_move_if_noexcept[abi:nn180100]<std::allocator<_UIRegionSolveResult>,std::reverse_iterator<_UIRegionSolveResult*>,std::reverse_iterator<_UIRegionSolveResult*>,std::reverse_iterator<_UIRegionSolveResult*>>(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  _QWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  result = a6;
  if (a2 != a4)
  {
    v7 = (_QWORD *)(a6 - 56);
    do
    {
      v8 = *(_OWORD *)(a2 - 136);
      *((_OWORD *)v7 - 6) = *(_OWORD *)(a2 - 152);
      *((_OWORD *)v7 - 5) = v8;
      v9 = *(_OWORD *)(a2 - 120);
      v10 = *(_OWORD *)(a2 - 104);
      v11 = *(_OWORD *)(a2 - 72);
      *((_OWORD *)v7 - 2) = *(_OWORD *)(a2 - 88);
      *((_OWORD *)v7 - 1) = v11;
      *((_OWORD *)v7 - 4) = v9;
      *((_OWORD *)v7 - 3) = v10;
      v7[1] = 0;
      v7[2] = 0;
      *v7 = 0;
      *(_OWORD *)v7 = *(_OWORD *)(a2 - 56);
      v7[2] = *(_QWORD *)(a2 - 40);
      *(_QWORD *)(a2 - 56) = 0;
      *(_QWORD *)(a2 - 48) = 0;
      *(_QWORD *)(a2 - 40) = 0;
      v7[3] = 0;
      v7[4] = 0;
      v7[5] = 0;
      *(_OWORD *)(v7 + 3) = *(_OWORD *)(a2 - 32);
      v12 = *(_QWORD *)(a2 - 8);
      v7[5] = *(_QWORD *)(a2 - 16);
      *(_QWORD *)(a2 - 32) = 0;
      *(_QWORD *)(a2 - 24) = 0;
      *(_QWORD *)(a2 - 16) = 0;
      *(_QWORD *)(a2 - 8) = 0;
      v7[6] = v12;
      v7 -= 19;
      result -= 152;
      a2 -= 152;
    }
    while (a2 != a4);
  }
  return result;
}

void std::vector<_UIAuxillarySolveResult>::__destroy_vector::operator()[abi:nn180100](void ***a1)
{
  void **v1;
  id *v2;
  id *v4;
  void *v5;
  id *v6;

  v1 = *a1;
  v2 = (id *)**a1;
  if (v2)
  {
    v4 = (id *)v1[1];
    v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v6 = v4 - 6;

        v4 = v6;
      }
      while (v6 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::vector<_UIAuxillarySolveResult>::__assign_with_size[abi:nn180100]<_UIAuxillarySolveResult*,_UIAuxillarySolveResult*>(uint64_t a1, __int128 *a2, __int128 *a3, unint64_t a4)
{
  __int128 *v6;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = a2;
  v8 = *(void **)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 4) >= a4)
  {
    if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 8) - (_QWORD)v8) >> 4) >= a4)
    {
      v19 = std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:nn180100]<_UIAuxillarySolveResult *,_UIAuxillarySolveResult *,_UIAuxillarySolveResult *>(a2, a3, (uint64_t)v8);
      v20 = *(_QWORD *)(a1 + 8);
      if (v20 != v19)
      {
        do
        {
          v21 = v20 - 48;

          v20 = v21;
        }
        while (v21 != v19);
      }
      *(_QWORD *)(a1 + 8) = v19;
    }
    else
    {
      v14 = &a2[(uint64_t)(*(_QWORD *)(a1 + 8) - (_QWORD)v8) >> 4];
      std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:nn180100]<_UIAuxillarySolveResult *,_UIAuxillarySolveResult *,_UIAuxillarySolveResult *>(a2, v14, (uint64_t)v8);
      v15 = *(_QWORD *)(a1 + 8);
      if (v14 != a3)
      {
        v16 = *(_QWORD *)(a1 + 8);
        do
        {
          v17 = *v14;
          v18 = v14[1];
          *(_QWORD *)(v16 + 32) = *((_QWORD *)v14 + 4);
          *(_OWORD *)v16 = v17;
          *(_OWORD *)(v16 + 16) = v18;
          *(_QWORD *)(v16 + 40) = *((id *)v14 + 5);
          v15 += 48;
          v14 += 3;
          v16 += 48;
        }
        while (v14 != a3);
      }
      *(_QWORD *)(a1 + 8) = v15;
    }
  }
  else
  {
    std::vector<_UIAuxillarySolveResult>::__vdeallocate((void **)a1);
    if (a4 > 0x555555555555555)
      abort();
    v9 = 0x5555555555555556 * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 4);
    if (v9 <= a4)
      v9 = a4;
    if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 4) >= 0x2AAAAAAAAAAAAAALL)
      v10 = 0x555555555555555;
    else
      v10 = v9;
    std::vector<_UIAuxillarySolveResult>::__vallocate[abi:nn180100]((_QWORD *)a1, v10);
    v11 = *(_QWORD *)(a1 + 8);
    while (v6 != a3)
    {
      v12 = *v6;
      v13 = v6[1];
      *(_QWORD *)(v11 + 32) = *((_QWORD *)v6 + 4);
      *(_OWORD *)v11 = v12;
      *(_OWORD *)(v11 + 16) = v13;
      *(_QWORD *)(v11 + 40) = *((id *)v6 + 5);
      v11 += 48;
      v6 += 3;
    }
    *(_QWORD *)(a1 + 8) = v11;
  }
}

uint64_t std::__copy_loop<std::_ClassicAlgPolicy>::operator()[abi:nn180100]<_UIAuxillarySolveResult *,_UIAuxillarySolveResult *,_UIAuxillarySolveResult *>(__int128 *a1, __int128 *a2, uint64_t a3)
{
  __int128 *v5;
  __int128 v6;
  __int128 v7;

  if (a1 != a2)
  {
    v5 = a1;
    do
    {
      v6 = *v5;
      v7 = v5[1];
      *(_QWORD *)(a3 + 32) = *((_QWORD *)v5 + 4);
      *(_OWORD *)a3 = v6;
      *(_OWORD *)(a3 + 16) = v7;
      objc_storeStrong((id *)(a3 + 40), *((id *)v5 + 5));
      a3 += 48;
      v5 += 3;
    }
    while (v5 != a2);
  }
  return a3;
}

void std::default_delete<_UIItemSolveResult>::operator()[abi:nn180100](void **a1)
{
  void **v2;

  v2 = a1 + 11;
  std::vector<_UIAuxillarySolveResult>::__destroy_vector::operator()[abi:nn180100](&v2);
  v2 = a1 + 8;
  std::vector<_UIAuxillarySolveResult>::__destroy_vector::operator()[abi:nn180100](&v2);
  JUMPOUT(0x186DC895CLL);
}

uint64_t IsWebBrowserAvailable()
{
  void *v0;
  uint64_t v1;

  if (qword_1ECD7CA38 != -1)
    dispatch_once(&qword_1ECD7CA38, &__block_literal_global_14);
  if (!qword_1ECD7CA30)
    return 1;
  objc_msgSend((id)qword_1ECD7CA30, "appState");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "isRestricted") ^ 1;

  return v1;
}

id getSSReadingListClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)_MergedGlobals_931;
  v7 = _MergedGlobals_931;
  if (!_MergedGlobals_931)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getSSReadingListClass_block_invoke;
    v3[3] = &unk_1E16B14C0;
    v3[4] = &v4;
    __getSSReadingListClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1857F90DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1857F96D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1857F9AA4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void *DataDetectorsUILibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!DataDetectorsUILibraryCore_frameworkLibrary)
    DataDetectorsUILibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)DataDetectorsUILibraryCore_frameworkLibrary;
  if (!DataDetectorsUILibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *DataDetectorsUILibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("_UITextItemInteractionHandler.m"), 30, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

Class __getSSReadingListClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7CA28)
    qword_1ECD7CA28 = _sl_dlopen();
  if (!qword_1ECD7CA28)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *SafariServicesLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UITextItemInteractionHandler.m"), 53, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("SSReadingList");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getSSReadingListClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UITextItemInteractionHandler.m"), 54, CFSTR("Unable to find class %s"), "SSReadingList");

LABEL_8:
    __break(1u);
  }
  _MergedGlobals_931 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void __getDDContextMenuActionClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  DataDetectorsUILibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("DDContextMenuAction");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7CA40 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getDDContextMenuActionClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("_UITextItemInteractionHandler.m"), 31, CFSTR("Unable to find class %s"), "DDContextMenuAction");

    __break(1u);
  }
}

void __getDDDetectionControllerClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  DataDetectorsUILibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("DDDetectionController");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getDDDetectionControllerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getDDDetectionControllerClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("_UITextItemInteractionHandler.m"), 32, CFSTR("Unable to find class %s"), "DDDetectionController");

    __break(1u);
  }
}

const __CFString *_NSStringFromUIPhysicalButtonState(unint64_t a1)
{
  if (a1 > 3)
    return &stru_1E16EDF20;
  else
    return off_1E16B2D70[a1];
}

const __CFString *_NSStringFromUIPhysicalButtonBehavior(unint64_t a1)
{
  if (a1 > 2)
    return &stru_1E16EDF20;
  else
    return off_1E16B2D90[a1];
}

uint64_t _UIPhysicalButtonSetForPhysicalButton(unint64_t a1)
{
  if (a1 >= 6)
    return 0;
  else
    return 1 << a1;
}

void sub_185801AE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __manualPopoverPresentationControllerDidDismissPopoverInvocationForDismiss_block_invoke_2(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_sendDidDismiss");
}

uint64_t _UIFocusResponderMovementForPhysicalKeyboardEvent(void *a1, char *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  char v10;
  uint64_t v11;
  void *v12;
  void *v13;
  int v14;

  v3 = a1;
  v4 = objc_msgSend(v3, "_keyCode");
  v5 = objc_msgSend(v3, "_modifierFlags");
  v6 = v5 & 0xFFFFFFFFFFDEFFFFLL;
  if (objc_msgSend(v3, "_isKeyDown"))
    v7 = 0;
  else
    v7 = 3;
  objc_msgSend(v3, "_pressesForPhase:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "anyObject");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if ((unint64_t)(v4 - 81) >= 0xFFFFFFFFFFFFFFFELL && !v6)
  {
    v10 = 0;
    v11 = 1;
    if (!a2)
      goto LABEL_31;
    goto LABEL_30;
  }
  if ((unint64_t)(v4 - 83) >= 0xFFFFFFFFFFFFFFFELL && !v6)
  {
    v10 = 0;
    v11 = 2;
    if (!a2)
      goto LABEL_31;
    goto LABEL_30;
  }
  if (v4 > 87)
  {
    if (v4 != 88 && v4 != 158)
      goto LABEL_20;
    goto LABEL_19;
  }
  if (v4 == 40)
  {
LABEL_19:
    if (!v6)
    {
      v10 = 0;
      v11 = 4;
      if (!a2)
        goto LABEL_31;
      goto LABEL_30;
    }
LABEL_20:
    objc_msgSend(v9, "key");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "characters");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v13, "isEqualToString:", CFSTR("UIKeyInputEscape"));

    v10 = 0;
    if (v14)
      v11 = 5;
    else
      v11 = 0;
    if (a2)
      goto LABEL_30;
    goto LABEL_31;
  }
  if (v4 != 43)
    goto LABEL_20;
  if ((v5 & 0xFFFFFFFFFFDCFFFFLL) == 0x40000)
  {
    v10 = 1;
  }
  else
  {
    if ((v5 & 0xFFFFFFFFFFDCFFFFLL | 0x20000) != 0x20000)
    {
      v11 = 0;
      v10 = 0;
      if (!a2)
        goto LABEL_31;
      goto LABEL_30;
    }
    v10 = 0;
  }
  v11 = 3;
  if (a2)
LABEL_30:
    *a2 = v10;
LABEL_31:

  return v11;
}

uint64_t ____legacyWantsPriorityOverFocusUpdate_block_invoke()
{
  uint64_t result;

  result = +[UIResponder instanceMethodForSelector:](UIResponder, "instanceMethodForSelector:", sel__wantsPriorityOverFocusUpdates);
  _MergedGlobals_933 = result;
  return result;
}

id UIAlertControllerActionToEmphasizeGivenActions(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;

  v9 = a1;
  v10 = a2;
  v11 = a3;
  v12 = a5;
  if (a4 == 1)
  {
    if (!v11)
    {
      v13 = v10;
LABEL_10:
      objc_msgSend(v12, "preferredActionForActions:suggestedPreferredAction:", v9, v13);
      v14 = objc_claimAutoreleasedReturnValue();

      v13 = (id)v14;
      goto LABEL_11;
    }
    v13 = v11;
  }
  else if (a4)
  {
    v13 = 0;
    if (!v11)
      goto LABEL_10;
  }
  else
  {
    v13 = v10;
    if (!v11)
      goto LABEL_10;
  }
LABEL_11:

  return v13;
}

uint64_t _UISheetInteractionGestureIsForInteractiveDismiss(void *a1)
{
  void *v1;
  uint64_t v2;

  objc_msgSend(a1, "name");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "isEqualToString:", CFSTR("_UISheetInteractionBackgroundDismissRecognizer"));

  return v2;
}

void sub_1858073D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18580F5AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  id *v16;
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

void sub_1858107E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _UIHyperAnimatorClasses()
{
  if (qword_1ECD7CAC0 != -1)
    dispatch_once(&qword_1ECD7CAC0, &__block_literal_global_21);
  return (id)_MergedGlobals_937;
}

void sub_185811C2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_185812F4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
  id *v30;
  uint64_t v31;

  objc_destroyWeak(v30);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v31 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_18581462C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

long double _UIDynamicAnimationStepFrictionOnly(double *a1, uint64_t a2)
{
  long double v3;
  long double v4;
  long double result;

  v3 = a1[9];
  v4 = pow(v3, (double)a2);
  a1[5] = a1[5] + a1[11] * ((v4 + -1.0) * (v3 * a1[6]) / (v3 + -1.0));
  result = v4 * a1[6];
  a1[6] = result;
  return result;
}

BOOL _UIDynamicAnimationIsAtRest(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  double v8;
  uint64_t i;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  int v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  v2 = *(void **)(a1 + 96);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v27, v31, 16);
  if (v3)
  {
    v4 = v3;
    v5 = 0;
    v6 = 0;
    v7 = *(_QWORD *)v28;
    v8 = 0.0;
    do
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v28 != v7)
          objc_enumerationMutation(v2);
        v10 = *(void **)(*((_QWORD *)&v27 + 1) + 8 * i);
        v11 = *(double *)(a1 + 40);
        objc_msgSend(v10, "minimumActiveValue");
        if (v11 >= v12)
        {
          v13 = *(double *)(a1 + 40);
          objc_msgSend(v10, "maximumActiveValue");
          if (v13 <= v14)
          {
            v15 = objc_msgSend(v10, "type");
            if (v15)
            {
              if (v15 == 1)
              {
                v16 = *(double *)(a1 + 40);
                objc_msgSend(v10, "minimumActiveValue");
                if (v16 >= v17)
                {
                  v18 = *(double *)(a1 + 40);
                  objc_msgSend(v10, "value");
                  if (v18 >= v19 + *(double *)(a1 + 56) * 0.5)
                    goto LABEL_14;
                }
                v20 = *(double *)(a1 + 40);
                objc_msgSend(v10, "maximumActiveValue");
                if (v20 <= v21)
                {
                  v22 = *(double *)(a1 + 40);
                  objc_msgSend(v10, "value");
                  if (v22 <= v23 + *(double *)(a1 + 56) * -0.5)
LABEL_14:
                    v6 = 1;
                }
              }
            }
            else
            {
              ++v5;
              objc_msgSend(v10, "value");
              v8 = v8 + v24 - *(double *)(a1 + 40);
            }
          }
        }
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v27, v31, 16);
    }
    while (v4);
    if ((v6 & 1) != 0)
      return 0;
  }
  else
  {
    v5 = 0;
    v8 = 0.0;
  }
  v25 = *(double *)(a1 + 56);
  return *(double *)(a1 + 48) * *(double *)(a1 + 48) < v25 * v25 * 0.0001 && (v5 < 1 || fabs(v8 / (double)v5) <= v25);
}

void _UIDynamicAnimationStepFrictionAndSoftStopOnly(uint64_t a1, uint64_t a2)
{
  double v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t i;
  void *v15;
  double v16;
  double v17;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  BOOL v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _BYTE v40[128];
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v4 = *(double *)(a1 + 40);
  v5 = *(double *)(a1 + 48);
  v6 = *(double *)(a1 + 72);
  v7 = *(double *)(a1 + 80);
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v39 = 0u;
  v8 = *(void **)(a1 + 96);
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v37;
    v12 = -1.79769313e308;
    v13 = 1.79769313e308;
    do
    {
      for (i = 0; i != v10; ++i)
      {
        if (*(_QWORD *)v37 != v11)
          objc_enumerationMutation(v8);
        v15 = *(void **)(*((_QWORD *)&v36 + 1) + 8 * i);
        if (objc_msgSend(v15, "_isLowerBoundary"))
        {
          objc_msgSend(v15, "value");
          if (v12 < v16)
            v12 = v16;
        }
        else if (objc_msgSend(v15, "_isUpperBoundary"))
        {
          objc_msgSend(v15, "value");
          if (v13 >= v17)
            v13 = v17;
        }
      }
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
    }
    while (v10);
  }
  else
  {
    v12 = -1.79769313e308;
    v13 = 1.79769313e308;
  }
  if (v12 >= v13)
    v13 = v12;
  if (v4 >= v12 && v4 <= v13)
  {
    if (v5 == 0.0)
      goto LABEL_55;
    v20 = (double)a2;
    v21 = v7 * (double)a2;
    if (v21 >= -0.5)
      v22 = v21 * (v21 * 0.5 + 1.0) + 1.0;
    else
      v22 = exp(v21);
    v23 = v5 * (v6 * ((1.0 - v22) / (1.0 - v6)));
    v24 = *(double *)(a1 + 40) + *(double *)(a1 + 88) * v23;
    *(double *)(a1 + 40) = v24;
    v19 = 0.0;
    v25 = v24 < v12 || v24 > v13;
    v26 = (double)a2;
    if (v25)
    {
      if (v24 >= v12)
      {
        v27 = (v13 - v4) * v20;
        v28 = v24 - v4;
      }
      else
      {
        v27 = (v4 - v12) * v20;
        v28 = v4 - v24;
      }
      v26 = v27 / v28;
      v19 = v20 - v26;
    }
    if (v26 > 0.0)
    {
      if (v26 != v20)
      {
        v29 = v7 * v26;
        if (v7 * v26 >= -0.5)
          v22 = v29 * (v29 * 0.5 + 1.0) + 1.0;
        else
          v22 = exp(v29);
        v23 = v5 * (v6 * ((1.0 - v22) / (1.0 - v6)));
      }
      *(double *)(a1 + 40) = v4 + v23 * *(double *)(a1 + 88);
      v5 = v5 * v22;
    }
  }
  else
  {
    v19 = (double)a2;
  }
  if (v19 > 0.0)
  {
    v30 = v7 * v19;
    if (v7 * v19 >= -0.5)
      v31 = v30 * (v30 * 0.5 + 1.0) + 1.0;
    else
      v31 = exp(v30);
    v32 = v19 * -0.01005;
    if (v19 * -0.01005 >= -0.5)
      v33 = v32 * (v32 * 0.5 + 1.0) + 1.0;
    else
      v33 = exp(v32);
    v34 = *(double *)(a1 + 40);
    if (v34 >= v12)
      v35 = v13;
    else
      v35 = v12;
    *(double *)(a1 + 40) = (1.0 - v31) * (v5 * (v6 * v33)) / (1.0 - v6) + v35 + v33 * (v34 - v35);
    v5 = v5 * (v31 * v33);
  }
LABEL_55:
  *(double *)(a1 + 48) = v5;
}

uint64_t _UIDynamicAnimationStep(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  uint64_t i;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  double v21;
  double v22;
  _BYTE v23[128];
  uint64_t v24;

  v2 = result;
  v24 = *MEMORY[0x1E0C80C00];
  v3 = *(double *)(result + 40);
  v4 = *(double *)(result + 48);
  v21 = v4;
  if (a2 >= 1)
  {
    for (i = 0; i != a2; ++i)
    {
      v21 = *(double *)(v2 + 72) * v21;
      v22 = v3 + v21 * *(double *)(v2 + 88);
      v17 = 0u;
      v18 = 0u;
      v19 = 0u;
      v20 = 0u;
      v7 = *(void **)(v2 + 96);
      result = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v17, v23, 16);
      if (result)
      {
        v8 = result;
        v9 = *(_QWORD *)v18;
        do
        {
          v10 = 0;
          do
          {
            if (*(_QWORD *)v18 != v9)
              objc_enumerationMutation(v7);
            v11 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * v10);
            v12 = v22;
            objc_msgSend(v11, "minimumActiveValue");
            if (v12 >= v13)
            {
              v14 = v22;
              objc_msgSend(v11, "maximumActiveValue");
              if (v14 <= v15)
              {
                v16 = objc_msgSend(v11, "_applier");
                if (v16)
                  (*(void (**)(uint64_t, void *, double *, double *, double))(v16 + 16))(v16, v11, &v21, &v22, v3);
              }
            }
            ++v10;
          }
          while (v8 != v10);
          result = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v17, v23, 16);
          v8 = result;
        }
        while (result);
      }
      v3 = v22;
    }
    v4 = v21;
  }
  *(double *)(v2 + 48) = v4;
  *(double *)(v2 + 40) = v3;
  return result;
}

void _UIPasteboardAnalyticsReportEvent(void *a1, void *a2)
{
  id v3;
  id v4;

  v3 = a1;
  if (v3 && a2)
  {
    objc_msgSend(a2, "timeIntervalSinceNow");
    v4 = v3;
    AnalyticsSendEventLazy();

  }
}

void sub_185818DFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t _UIVPA_CATransformDisplacement(__int128 *a1, __int128 *a2, double *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t result;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  id v15;
  id v16;
  _QWORD *v17;
  void (*v18)(__int128 *__return_ptr);
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  void (*v23)(__int128 *__return_ptr, _QWORD *, __int128 *);
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  float v28;
  float v29;
  float v30;
  float v31;
  float v32;
  float v33;
  float v34;
  float v35;
  float v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  double v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  double v46;
  _QWORD aBlock[4];
  id v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;

  v6 = a1[5];
  v53 = a1[4];
  v54 = v6;
  v7 = a1[7];
  v55 = a1[6];
  v56 = v7;
  v8 = a1[1];
  v49 = *a1;
  v50 = v8;
  v9 = a1[3];
  v51 = a1[2];
  v52 = v9;
  result = MEMORY[0x186DC5824](&v49);
  if ((_DWORD)result)
  {
    v11 = a2[5];
    v53 = a2[4];
    v54 = v11;
    v12 = a2[7];
    v55 = a2[6];
    v56 = v12;
    v13 = a2[1];
    v49 = *a2;
    v50 = v13;
    v14 = a2[3];
    v51 = a2[2];
    v52 = v14;
    result = MEMORY[0x186DC5824](&v49);
    if ((_DWORD)result)
    {
      v15 = objc_alloc_init(MEMORY[0x1E0CD27A8]);
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 3221225472;
      aBlock[2] = ___UIVPA_CATransformDisplacement_block_invoke;
      aBlock[3] = &unk_1E16B4380;
      v48 = v15;
      v16 = v15;
      v17 = _Block_copy(aBlock);
      v46 = 0.0;
      v44 = 0u;
      v45 = 0u;
      v42 = 0u;
      v43 = 0u;
      v18 = (void (*)(__int128 *__return_ptr))v17[2];
      v19 = a1[5];
      v53 = a1[4];
      v54 = v19;
      v20 = a1[7];
      v55 = a1[6];
      v56 = v20;
      v21 = a1[1];
      v49 = *a1;
      v50 = v21;
      v22 = a1[3];
      v51 = a1[2];
      v52 = v22;
      v18(&v42);
      v41 = 0.0;
      v39 = 0u;
      v40 = 0u;
      v37 = 0u;
      v38 = 0u;
      v23 = (void (*)(__int128 *__return_ptr, _QWORD *, __int128 *))v17[2];
      v24 = a2[5];
      v53 = a2[4];
      v54 = v24;
      v25 = a2[7];
      v55 = a2[6];
      v56 = v25;
      v26 = a2[1];
      v49 = *a2;
      v50 = v26;
      v27 = a2[3];
      v51 = a2[2];
      v52 = v27;
      v23(&v37, v17, &v49);
      if (a3)
      {
        v28 = (*(double *)&v40 - *(double *)&v45) * (*(double *)&v40 - *(double *)&v45);
        v29 = (*((double *)&v40 + 1) - *((double *)&v45 + 1)) * (*((double *)&v40 + 1) - *((double *)&v45 + 1)) + v28;
        v30 = (v41 - v46) * (v41 - v46) + v29;
        v31 = (*((double *)&v38 + 1) - *((double *)&v43 + 1)) * (*((double *)&v38 + 1) - *((double *)&v43 + 1)) + v30;
        v32 = (*(double *)&v39 - *(double *)&v44) * (*(double *)&v39 - *(double *)&v44) + v31;
        v33 = (*((double *)&v39 + 1) - *((double *)&v44 + 1)) * (*((double *)&v39 + 1) - *((double *)&v44 + 1)) + v32;
        v34 = (*(double *)&v37 - *(double *)&v42) * (*(double *)&v37 - *(double *)&v42) + v33;
        v35 = (*((double *)&v37 + 1) - *((double *)&v42 + 1)) * (*((double *)&v37 + 1) - *((double *)&v42 + 1)) + v34;
        v36 = (*(double *)&v38 - *(double *)&v43) * (*(double *)&v38 - *(double *)&v43) + v35;
        *a3 = sqrtf(v36);
      }

      return 1;
    }
  }
  return result;
}

id mediaTimingFunctionForTimingProvider(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v6;
  void *v7;
  id v8;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    if (objc_msgSend(v1, "timingCurveType") == 3
      || !objc_msgSend(v2, "timingCurveType")
      || objc_msgSend(v2, "timingCurveType") == 1)
    {
      objc_msgSend(v2, "cubicTimingParameters");
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "_mediaTimingFunction");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      objc_msgSend(v2, "springTimingParameters");
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "_mediaTimingFunction");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = v6;
      if (v6)
      {
        v8 = v6;
      }
      else
      {
        objc_msgSend(MEMORY[0x1E0CD27D0], "functionWithName:", *MEMORY[0x1E0CD3058]);
        v8 = (id)objc_claimAutoreleasedReturnValue();
      }
      v4 = v8;

    }
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

void sub_18581CD8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50,uint64_t a51,uint64_t a52,uint64_t a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a64;
  char a70;
  uint64_t v70;

  _Block_object_dispose(&a42, 8);
  _Block_object_dispose(&a46, 8);
  _Block_object_dispose(&a50, 8);
  _Block_object_dispose(&a54, 8);
  _Block_object_dispose(&a58, 8);
  _Block_object_dispose(&a64, 8);
  _Block_object_dispose(&a70, 8);
  _Block_object_dispose((const void *)(v70 - 232), 8);
  _Block_object_dispose((const void *)(v70 - 200), 8);
  _Block_object_dispose((const void *)(v70 - 168), 8);
  _Block_object_dispose((const void *)(v70 - 136), 8);
  _Unwind_Resume(a1);
}

double computeInverseOfTimingFunction(void *a1, double a2)
{
  id v3;
  void *v4;
  char v5;
  _QWORD v7[4];
  id v8;

  v3 = a1;
  if (v3)
  {
    objc_msgSend(MEMORY[0x1E0CD27D0], "functionWithName:", *MEMORY[0x1E0CD3058]);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v3, "isEqual:", v4);

    if ((v5 & 1) == 0)
    {
      v7[0] = MEMORY[0x1E0C809B0];
      v7[1] = 3221225472;
      v7[2] = __computeInverseOfTimingFunction_block_invoke;
      v7[3] = &unk_1E16B4780;
      v8 = v3;
      a2 = computeInverseOfFunction(v7, a2);

    }
  }

  return a2;
}

void sub_18581DDD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_18581E3E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 184), 8);
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

double computeTimingProvider(void *a1, double a2, double a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  double v9;
  void *v10;
  float v11;

  v5 = a1;
  objc_msgSend(v5, "springTimingParameters");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    objc_msgSend(v5, "springTimingParameters");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CD2848], "animation");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "setDuration:", a2);
    objc_msgSend(v7, "mass");
    objc_msgSend(v8, "setMass:");
    objc_msgSend(v7, "stiffness");
    objc_msgSend(v8, "setStiffness:");
    objc_msgSend(v7, "damping");
    objc_msgSend(v8, "setDamping:");
    objc_msgSend(v8, "setFromValue:", &unk_1E1A95580);
    objc_msgSend(v8, "setToValue:", &unk_1E1A95590);
LABEL_5:
    *(float *)&v9 = a3;
    objc_msgSend(v8, "_solveForInput:", v9);
    a3 = v11;

    goto LABEL_6;
  }
  objc_msgSend(v5, "cubicTimingParameters");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (v10)
  {
    objc_msgSend(v5, "cubicTimingParameters");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "_mediaTimingFunction");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    goto LABEL_5;
  }
LABEL_6:

  return a3;
}

double computeInverseOfTimingProvider(void *a1, double a2, double a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  _QWORD v12[4];
  id v13;

  v5 = a1;
  objc_msgSend(v5, "springTimingParameters");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    objc_msgSend(v5, "springTimingParameters");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CD2848], "animation");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "setDuration:", a2);
    objc_msgSend(v7, "mass");
    objc_msgSend(v8, "setMass:");
    objc_msgSend(v7, "stiffness");
    objc_msgSend(v8, "setStiffness:");
    objc_msgSend(v7, "damping");
    objc_msgSend(v8, "setDamping:");
    objc_msgSend(v8, "setFromValue:", &unk_1E1A95580);
    objc_msgSend(v8, "setToValue:", &unk_1E1A95590);
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 3221225472;
    v12[2] = __computeInverseOfSpring_block_invoke;
    v12[3] = &unk_1E16B4780;
    v13 = v8;
    v9 = v8;
    a3 = computeInverseOfFunction(v12, a3);

LABEL_5:
    goto LABEL_6;
  }
  objc_msgSend(v5, "cubicTimingParameters");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (v10)
  {
    objc_msgSend(v5, "cubicTimingParameters");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "_mediaTimingFunction");
    v9 = (id)objc_claimAutoreleasedReturnValue();
    a3 = computeInverseOfTimingFunction(v9, a3);
    goto LABEL_5;
  }
LABEL_6:

  return a3;
}

__CFString *_cubicTimingProviderDescription(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __CFString *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, "animationCurve");
    if (v3 == 7)
    {
      v13 = CFSTR("cubic smooth;");
    }
    else
    {
      if (v3 == 6)
      {
        v4 = objc_alloc(MEMORY[0x1E0CB3940]);
        objc_msgSend(v2, "controlPoint1");
        v6 = v5;
        objc_msgSend(v2, "controlPoint1");
        v8 = v7;
        objc_msgSend(v2, "controlPoint2");
        v10 = v9;
        objc_msgSend(v2, "controlPoint2");
        v12 = objc_msgSend(v4, "initWithFormat:", CFSTR("cubic custom %f %f, %f %f;"), v6, v8, v10, v11);
      }
      else
      {
        v12 = objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithFormat:", CFSTR("cubic curve %lu;"),
                objc_msgSend(v2, "animationCurve"),
                v15,
                v16,
                v17);
      }
      v13 = (__CFString *)v12;
    }
  }
  else
  {
    v13 = CFSTR("cubic unknown;");
  }

  return v13;
}

double computeInverseOfFunction(void *a1, double a2)
{
  double (**v3)(_QWORD, double);
  double (**v4)(_QWORD, double);
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  double v12;

  v3 = a1;
  v4 = v3;
  v5 = 1.0;
  if (a2 < 1.0)
    v6 = a2;
  else
    v6 = 1.0;
  v7 = 0.0;
  if (v6 > 0.0)
    v8 = v6;
  else
    v8 = 0.0;
  v9 = 0.5;
  v10 = ((double (*)(double))v3[2])(0.5);
  if (vabdd_f64(v8, v10) > 0.0001)
  {
    v11 = 1001;
    v12 = 0.5;
    while (--v11)
    {
      if (v10 < v8)
        v9 = v12 + (v5 - v12) * 0.5;
      else
        v9 = v12 + (v12 - v7) * -0.5;
      if (v10 >= v8)
        v5 = v12;
      else
        v7 = v12;
      v10 = v4[2](v4, v9);
      v12 = v9;
      if (vabdd_f64(v8, v10) <= 0.0001)
        goto LABEL_19;
    }
    v9 = v12;
  }
LABEL_19:

  return v9;
}

double __computeInverseOfTimingFunction_block_invoke(uint64_t a1, double a2)
{
  float v2;

  *(float *)&a2 = a2;
  objc_msgSend(*(id *)(a1 + 32), "_solveForInput:", a2);
  return v2;
}

double __computeInverseOfSpring_block_invoke(uint64_t a1, double a2)
{
  float v2;

  *(float *)&a2 = a2;
  objc_msgSend(*(id *)(a1 + 32), "_solveForInput:", a2);
  return v2;
}

uint64_t _UIActiveViewServiceSessionEffectiveIdiomForIdiom(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  if (a1 >= 10)
    v2 = 10;
  else
    v2 = a1;
  +[UIDevice currentDevice](UIDevice, "currentDevice");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "userInterfaceIdiom");

  if (a1 == -1)
    v5 = v4;
  else
    v5 = v2;
  if (a1 == 1)
    return 1;
  else
    return v5;
}

uint64_t _UIActiveViewServiceSessionProviderIsPrimary(void *a1)
{
  if (!objc_msgSend(a1, "_providerType")
    && (objc_opt_respondsToSelector() & 1) != 0
    && (objc_opt_respondsToSelector() & 1) != 0
    && _NSIsNSObject()
    && objc_msgSend(a1, "__isKindOfUIViewController"))
  {
    return objc_msgSend(a1, "isMemberOfClass:", objc_opt_class());
  }
  else
  {
    return 0;
  }
}

id _UIViewServiceSessionActivityRecordsByUUID()
{
  if (qword_1ECD7CB28 != -1)
    dispatch_once(&qword_1ECD7CB28, &__block_literal_global_158);
  return (id)qword_1ECD7CB30;
}

void sub_1858221A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
  id *v28;

  objc_destroyWeak(v28);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _UICalendarViewGetPlatformMetrics(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  if (qword_1ECD7CB40 != -1)
    dispatch_once(&qword_1ECD7CB40, &__block_literal_global_252);
  v2 = (void *)_MergedGlobals_941;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v4)
  {
    if (!_MergedGlobals_941)
    {
      objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
      v5 = objc_claimAutoreleasedReturnValue();
      v6 = (void *)_MergedGlobals_941;
      _MergedGlobals_941 = v5;

    }
    +[_UIVisualStyleRegistry registryForIdiom:](_UIVisualStyleRegistry, "registryForIdiom:", a1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = (void *)objc_msgSend(v7, "visualStyleClassForStylableClass:", objc_opt_class());

    if (v4)
    {
      v4 = (void *)objc_opt_new();
      v8 = (void *)_MergedGlobals_941;
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "setObject:forKey:", v4, v9);

    }
  }
  return v4;
}

id _UICalendarFont(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  _QWORD v23[2];

  v23[1] = *MEMORY[0x1E0C80C00];
  v9 = a4;
  objc_msgSend(off_1E167A830, "preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:", a1, a2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if ((_DWORD)a3)
  {
    objc_msgSend(v10, "fontDescriptorWithSymbolicTraits:", a3);
    v12 = objc_claimAutoreleasedReturnValue();

    v11 = (void *)v12;
  }
  if (a5 > 0.0)
  {
    v22 = *(_QWORD *)off_1E167DC10;
    v20 = *(_QWORD *)off_1E167DC80;
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", a5);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = v13;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v21, &v20, 1);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v23[0] = v14;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v23, &v22, 1);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "fontDescriptorByAddingAttributes:", v15);
    v16 = objc_claimAutoreleasedReturnValue();

    v11 = (void *)v16;
  }
  if (v9 && (objc_msgSend(v9, "isEqual:", *(_QWORD *)off_1E167DBF8) & 1) == 0)
  {
    objc_msgSend(v11, "fontDescriptorWithDesign:", v9);
    v17 = objc_claimAutoreleasedReturnValue();

    v11 = (void *)v17;
  }
  objc_msgSend(off_1E167A828, "fontWithDescriptor:size:", v11, 0.0);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  return v18;
}

void _alertForMinimumWidthErrorIfNecessary(void *a1, double a2)
{
  _QWORD *v3;
  int v4;
  void *v5;
  double v6;
  double v7;
  _QWORD *v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  NSObject *v12;
  int v13;
  _QWORD *v14;
  __int16 v15;
  double v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = objc_msgSend(v3, "_shouldDisplayCalendarView");
  v5 = (void *)v3[53];
  if (v4)
    objc_msgSend(v5, "inlineDateViewMinimumWidth");
  else
    objc_msgSend(v5, "inlineTimeViewMinimumWidth");
  v7 = v6;
  if (a2 < v6)
  {
    v8 = v3;
    v9 = v8;
    while (1)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        break;
      objc_msgSend(v9, "superview");
      v10 = objc_claimAutoreleasedReturnValue();

      v9 = (void *)v10;
      if (!v10)
        goto LABEL_14;
    }
    v11 = _alertForMinimumWidthErrorIfNecessary___s_category;
    if (!_alertForMinimumWidthErrorIfNecessary___s_category)
    {
      v11 = __UILogCategoryGetNode("DatePicker", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
      atomic_store(v11, (unint64_t *)&_alertForMinimumWidthErrorIfNecessary___s_category);
    }
    v12 = *(NSObject **)(v11 + 8);
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    {
      v13 = 134218240;
      v14 = v8;
      v15 = 2048;
      v16 = v7;
      _os_log_impl(&dword_185066000, v12, OS_LOG_TYPE_ERROR, "UIDatePicker %p is being laid out below its minimum width of %g. This may not look like expected, especially with larger than normal font sizes.", (uint8_t *)&v13, 0x16u);
    }

  }
LABEL_14:

}

void sub_185826124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18582624C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getSBSApplicationShortcutCustomImageIconClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  SpringBoardServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("SBSApplicationShortcutCustomImageIcon");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getSBSApplicationShortcutCustomImageIconClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getSBSApplicationShortcutCustomImageIconClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIApplicationShortcutItem.m"), 24, CFSTR("Unable to find class %s"), "SBSApplicationShortcutCustomImageIcon");

    __break(1u);
  }
}

void __getSBSApplicationShortcutIconClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  SpringBoardServicesLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("SBSApplicationShortcutIcon");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getSBSApplicationShortcutIconClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getSBSApplicationShortcutIconClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIApplicationShortcutItem.m"), 21, CFSTR("Unable to find class %s"), "SBSApplicationShortcutIcon");

    __break(1u);
  }
}

id _UIShadowPropertiesFromShadowType(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  double v6;
  void *v7;
  uint64_t v8;

  v3 = a2;
  switch(a1)
  {
    case 4:
      v4 = (void *)objc_opt_new();
      objc_msgSend(v4, "set_radius:", 12.0);
      objc_msgSend(v4, "set_opacity:", dbl_186678580[objc_msgSend(v3, "userInterfaceStyle") == 2]);
      objc_msgSend(v4, "set_offset:", 0.0, 4.0);
      v7 = v4;
      v8 = 4;
      break;
    case 3:
      v7 = (void *)objc_opt_new();
      v4 = v7;
      v8 = 3;
      break;
    case 2:
      v4 = (void *)objc_opt_new();
      objc_msgSend(v4, "set_radius:", 16.0);
      v5 = objc_msgSend(v3, "userInterfaceStyle");
      v6 = 0.2;
      if (v5 == 2)
        v6 = 1.0;
      objc_msgSend(v4, "set_opacity:", v6);
      objc_msgSend(v4, "set_offset:", 0.0, 2.0);
      v7 = v4;
      v8 = 2;
      break;
    default:
      v4 = 0;
      goto LABEL_11;
  }
  objc_msgSend(v7, "set_backgroundConfigurationShadowType:", v8);
LABEL_11:

  return v4;
}

__n128 __copy_constructor_8_8_t0w8_s8_s16_s24_t32w41_s80_t88w48(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(id *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(id *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(id *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 57);
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 57) = v4;
  *(_QWORD *)(a1 + 80) = *(id *)(a2 + 80);
  result = *(__n128 *)(a2 + 120);
  v7 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v7;
  *(__n128 *)(a1 + 120) = result;
  return result;
}

void __destructor_8_s8_s16_s24_s80(id *a1)
{

}

void sub_185826DA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id a27)
{
  __destructor_8_s8_s16_s24_s80(&a27);
  _Unwind_Resume(a1);
}

void sub_185826F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id a27)
{
  __destructor_8_s8_s16_s24_s80(&a27);
  _Unwind_Resume(a1);
}

__CFString *_UIBackgroundConfigurationStyleToString(unint64_t a1)
{
  if (a1 < 0xE)
    return off_1E16B4B78[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown style (%ld)"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void FindRectanglesAroundRectangles(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  void *v25;
  id v26;
  _QWORD v27[8];

  v26 = a1;
  v11 = a2;
  v12 = v11;
  if (a5 > 0.0 && a6 > 0.0)
  {
    v27[0] = MEMORY[0x1E0C809B0];
    v27[1] = 3221225472;
    v27[2] = __FindRectanglesAroundRectangles_block_invoke;
    v27[3] = &__block_descriptor_64_e32_B24__0___UIAvoidanceShape__8_B16l;
    *(double *)&v27[4] = a3;
    *(double *)&v27[5] = a4;
    *(double *)&v27[6] = a5;
    *(double *)&v27[7] = a6;
    objc_msgSend(v11, "objectsPassingTest:", v27);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v13, "count"))
    {
      objc_msgSend(v13, "anyObject");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "removeObject:", v14);
      objc_msgSend(v14, "shape");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "CGRectValue");
      v17 = v16;
      v19 = v18;
      v21 = v20;
      v23 = v22;

      FindRectanglesAroundRectangles(v26, v12, a3, a4, v17 - a3, a6);
      FindRectanglesAroundRectangles(v26, v12, a3, a4, a5, v19 - a4);
      FindRectanglesAroundRectangles(v26, v12, v17 + v21, a4, a3 + a5 - (v17 + v21), a6);
      *(_QWORD *)&v24 = FindRectanglesAroundRectangles(v26, v12, a3, v19 + v23, a5, a4 + a6 - (v19 + v23)).n128_u64[0];
      v25 = v12;
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGRect:", a3, a4, a5, a6);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v25 = v26;
    }
    objc_msgSend(v25, "addObject:", v14, v24);

  }
}

void ForPropertiesMatchingType(uint64_t a1, void *a2, void *a3)
{
  void (**v5)(id, id, void *, _QWORD);
  uint64_t i;
  char **v7;
  void *v8;
  id v9;

  v9 = a2;
  v5 = a3;
  for (i = 0; i != 18; i += 3)
  {
    v7 = &(&PropertyMapping)[i];
    if (((unint64_t)(&PropertyMapping)[i + 2] & a1) != 0)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", *v7);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      ((void (**)(id, id, void *, char *))v5)[2](v5, v9, v8, v7[1]);

    }
  }

}

uint64_t FindType(void *a1)
{
  id v1;
  uint64_t v2;
  int v3;

  v1 = a1;
  v2 = objc_msgSend(v1, "conformsToProtocol:", &unk_1EE0CDE58);
  v3 = objc_msgSend(v1, "conformsToProtocol:", &unk_1EE0CDEB8);

  if (v3)
    return v2 | 2;
  else
    return v2;
}

void sub_18582EAD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_18582EFAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void __UIExternalIvarStorageSetPayload(unsigned __int8 **a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  unsigned __int8 *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unsigned __int8 *v22;
  int v23;
  unsigned int v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  unsigned __int8 v28;
  unint64_t v29;
  uint64_t v30;
  unsigned int v31;
  size_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unsigned __int8 *v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;

  v8 = a3 + 2;
  v9 = *a1;
  if (!*a1)
  {
    if (a5 == a4)
      return;
    v62 = 0;
    v13 = 0;
    goto LABEL_16;
  }
  v10 = *v9;
  v11 = (v8 * v10 + v10) >> 3;
  if (v11 == (v8 * v10) >> 3)
    v12 = 0;
  else
    v12 = (unint64_t)v9[v11 + 1] << 8;
  v14 = -1 << v10;
  v15 = ~(-1 << v10);
  if ((v15 & ((v12 | v9[((v8 * v10) >> 3) + 1]) >> ((v8 * v10) & 7))) != 0)
  {
    *(_QWORD *)&v9[8 * vcvtps_u32_f32((float)(vcvtps_u32_f32((float)((a2 + 2) * v10) * 0.125) + 1) * 0.125)
                 - 8
                 + 8 * (v15 & ((v12 | v9[((v8 * v10) >> 3) + 1]) >> ((v8 * v10) & 7)))] = a5;
    return;
  }
  if (a5 != a4)
  {
    v13 = (v9[1] & ~(_BYTE)v14);
    v16 = v10 >> 3;
    v17 = v10 & 7;
    v18 = v10 >> 2;
    v19 = v9[(v10 >> 3) + 1];
    if (v10 >> 2 == v10 >> 3)
      v20 = 0;
    else
      v20 = (unint64_t)v9[v18 + 1] << 8;
    v21 = ((v20 | v19) >> v17) & ~(_BYTE)v14;
    if (v21 < v13)
    {
      v22 = *a1;
LABEL_43:
      v50 = (v21 + 1);
      v22[v16 + 1] = v19 & ~((_BYTE)v15 << v17) | (v50 << v17);
      if (v18 != v16)
        v22[v18 + 1] = v22[v18 + 1] & ~(v15 >> (8 - v17)) | ((unsigned __int16)(v50 << v17) >> 8);
      v51 = *a1;
      *(_QWORD *)&(*a1)[8 * v21
                      + 8 * vcvtps_u32_f32((float)(vcvtps_u32_f32((float)((a2 + 2) * **a1) * 0.125) + 1) * 0.125)] = a5;
      v52 = *v51;
      v53 = v8 * v52;
      v54 = (v8 * v52) & 7;
      v55 = (unint64_t)(v8 * v52 + v52) >> 3;
      v56 = ~(-1 << v52);
      v51[(v53 >> 3) + 1] = v51[(v53 >> 3) + 1] & ~((_DWORD)v56 << v54) | (v50 << v54);
      if (v55 != v53 >> 3)
        v51[v55 + 1] = v51[v55 + 1] & ~(v56 >> (8 - v54)) | ((unsigned __int16)(v50 << v54) >> 8);
      return;
    }
    v62 = ((v20 | v19) >> v17) & ~(_BYTE)v14;
LABEL_16:
    v23 = vcvtpd_u64_f64(log2((double)(v13 + 1)));
    if (a2 < 0x10)
      v24 = 2;
    else
      v24 = 3;
    if (v24 <= v23 + 1)
      v25 = v23 + 1;
    else
      v25 = v24;
    v26 = -1 << v25;
    if (~v26 < a2)
      v27 = ~v26;
    else
      v27 = a2;
    v28 = vcvtpd_u64_f64(log2((double)(v27 + 1)));
    v29 = a2 + 2;
    v30 = v28;
    v31 = v28;
    v63 = v27;
    v61 = vcvtps_u32_f32((float)(vcvtps_u32_f32((float)(v28 * (a2 + 2)) * 0.125) + 1) * 0.125);
    v32 = 8 * (v27 + v61);
    v22 = (unsigned __int8 *)malloc_type_calloc(v32, 1uLL, 0x4917B19FuLL);
    if (!v22)
    {
      v60 = v8;
      v57 = objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v58 = objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "size_t _nextIndexForStoringPayloadIncreasingCapacityIfNeeded(_UIExternalIvarStorageAllocation * _Nullable * _Nonnull, const NSUInteger)");
      v59 = (void *)v57;
      v8 = v60;
      objc_msgSend(v59, "handleFailureInFunction:file:lineNumber:description:", v58, CFSTR("_UIExternalIvarStorage_Implementation_Internal.h"), 179, CFSTR("Failed to allocate memory for _UIExternalIvarStorage with newAllocatedCount: %ld (%ld bytes total)"), v63, v32);
    }
    *v22 = v31;
    if (v9)
    {
      if (v29 >= 3)
      {
        v33 = 0;
        v34 = 0;
        v35 = ~(-1 << v30);
        v36 = 2 * v30;
        do
        {
          v37 = *v9;
          v38 = (v34 + 2) * v37;
          v39 = (v38 + v37) >> 3;
          if (v39 == v38 >> 3)
            v40 = 0;
          else
            v40 = (unint64_t)v9[v39 + 1] << 8;
          v41 = -1 << v37;
          v42 = (v40 | v9[(v38 >> 3) + 1]) >> (v38 & 7);
          v43 = (v36 + v33) & 7;
          v44 = (unint64_t)(3 * v30 + v33) >> 3;
          v45 = (v42 & ~(_BYTE)v41) << v43;
          v22[((unint64_t)(v36 + v33) >> 3) + 1] = v22[((unint64_t)(v36 + v33) >> 3) + 1] & ~((_DWORD)v35 << v43) | v45;
          if (v44 != (unint64_t)(v36 + v33) >> 3)
            v22[v44 + 1] = v22[v44 + 1] & ~(v35 >> (8 - v43)) | BYTE1(v45);
          ++v34;
          v33 += v30;
        }
        while (a2 != v34);
      }
      v46 = *v9;
      v47 = vcvtps_u32_f32((float)(vcvtps_u32_f32((float)(v29 * v46) * 0.125) + 1) * 0.125);
      if (v46 >> 2 == v46 >> 3)
        v48 = 0;
      else
        v48 = (unint64_t)v9[(v46 >> 2) + 1] << 8;
      memcpy(&v22[8 * v61], &v9[8 * v47], 8 * (((v48 | v9[(v46 >> 3) + 1]) >> (v46 & 7)) & ~(-1 << v46)));
      v31 = *v22;
    }
    v22[1] = v22[1] & (-1 << v31) | v63;
    if (v31 >= 8)
      v22[((unint64_t)v31 >> 3) + 1] &= ~(~(-1 << v31) >> 8);
    free(v9);
    *a1 = v22;
    v49 = *v22;
    v16 = v49 >> 3;
    v17 = v49 & 7;
    v18 = v49 >> 2;
    LOBYTE(v19) = v22[(v49 >> 3) + 1];
    v15 = ~(-1 << v49);
    v21 = v62;
    goto LABEL_43;
  }
}

uint64_t __UIExternalIvarStorageGetPayload(unsigned __int8 **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned __int8 *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v4 = *a1;
  if (*a1)
  {
    v5 = *v4;
    v6 = (a3 + 2) * v5;
    v7 = (v6 + v5) >> 3;
    if (v7 == v6 >> 3)
      v8 = 0;
    else
      v8 = (unint64_t)v4[v7 + 1] << 8;
    v9 = ~(-1 << v5) & ((v8 | v4[(v6 >> 3) + 1]) >> (v6 & 7));
    if (v9)
      return *(_QWORD *)&v4[8
                          * vcvtps_u32_f32((float)(vcvtps_u32_f32((float)(unint64_t)((a2 + 2) * v5) * 0.125) + 1) * 0.125)
                          - 8
                          + 8 * v9];
  }
  return a4;
}

void __UIExternalIvarStorageSetRetainedObject(void *a1, id a2)
{
  id v3;

  v3 = a2;

}

uint64_t _UIImageOrientationForEXIFOrientation(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 8)
    return 0;
  else
    return (0x27365140u >> (4 * a1 - 4)) & 7;
}

uint64_t _EXIFOrientationForUIImageOrientation(unint64_t a1)
{
  if (a1 >= 8)
    return 0;
  else
    return (0x75426831u >> (4 * a1)) & 0xF;
}

NSData *__cdecl UIImageJPEGRepresentation(UIImage *image, CGFloat compressionQuality)
{
  return (NSData *)_UIImageJPEGRepresentation(image, 0, compressionQuality);
}

id _UIImageJPEGRepresentation(void *a1, char a2, double a3)
{
  _QWORD v4[5];
  char v5;

  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = ___UIImageJPEGRepresentation_block_invoke;
  v4[3] = &__block_descriptor_41_e29_v16__0__NSMutableDictionary_8l;
  *(double *)&v4[4] = a3;
  v5 = a2;
  _UIImageDataRepresentation(a1, CFSTR("public.jpeg"), v4);
  return (id)objc_claimAutoreleasedReturnValue();
}

NSData *__cdecl UIImageHEICRepresentation(UIImage *image)
{
  return (NSData *)_UIImageDataRepresentation(image, CFSTR("public.heic"), &__block_literal_global_11);
}

void _UIHomeAffordanceNotifyObserversFrameDidChange(void *a1, double a2, double a3, double a4, double a5)
{
  void *v10;
  void *v11;
  char v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id WeakRetained;
  void *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "_scene");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, "_hasInvalidated");

    if ((v12 & 1) == 0)
    {
      v23 = 0u;
      v24 = 0u;
      v21 = 0u;
      v22 = 0u;
      objc_msgSend(a1, "_registeredObserverRecords", 0);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
      if (v14)
      {
        v15 = v14;
        v16 = *(_QWORD *)v22;
        do
        {
          v17 = 0;
          do
          {
            if (*(_QWORD *)v22 != v16)
              objc_enumerationMutation(v13);
            v18 = *(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * v17);
            if (v18)
            {
              WeakRetained = objc_loadWeakRetained((id *)(v18 + 16));
              if (WeakRetained)
              {
                v20 = WeakRetained;
                objc_msgSend(WeakRetained, "_notifier:homeAffordanceFrameDidChange:", a1, a2, a3, a4, a5);

              }
            }
            ++v17;
          }
          while (v15 != v17);
          v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
        }
        while (v15);
      }

    }
  }
}

void _UIHomeAffordanceNotifyObserversDoubleTapGestureDidSucceed(void *a1, uint64_t a2)
{
  void *v4;
  void *v5;
  char v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id WeakRetained;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "_scene");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, "_hasInvalidated");

    if ((v6 & 1) == 0)
    {
      v17 = 0u;
      v18 = 0u;
      v15 = 0u;
      v16 = 0u;
      objc_msgSend(a1, "_registeredObserverRecords", 0);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
      if (v8)
      {
        v9 = v8;
        v10 = *(_QWORD *)v16;
        do
        {
          v11 = 0;
          do
          {
            if (*(_QWORD *)v16 != v10)
              objc_enumerationMutation(v7);
            v12 = *(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * v11);
            if (v12)
            {
              WeakRetained = objc_loadWeakRetained((id *)(v12 + 16));
              if (WeakRetained)
              {
                v14 = WeakRetained;
                objc_msgSend(WeakRetained, "_notifier:homeAffordanceDoubleTapGestureDidSucceed:", a1, a2);

              }
            }
            ++v11;
          }
          while (v9 != v11);
          v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
        }
        while (v9);
      }

    }
  }
}

void sub_185833FB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t _UIHomeAffordanceValidateObserver(void *a1, void *a2, void *a3, char a4, BOOL *a5)
{
  void *v10;
  uint64_t v11;
  void *v12;
  char isKindOfClass;
  void *v14;
  __CFString *v15;
  void *v16;
  id v17;
  objc_class *v18;
  void *v19;
  __CFString *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  objc_class *v26;
  void *v27;
  void *v28;
  id v29;
  objc_class *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  id v38;
  objc_class *v39;
  void *v40;
  uint64_t v42;

  if (!a2 || !a3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _UIHomeAffordanceValidateObserver(id<_UIHomeAffordanceNotifyingInternal>  _Nonnull const __strong, id<_UIHomeAffordanceObserver>  _Nonnull const __strong, UIWindow * _Nonnull const __strong, BOOL, BOOL * _Nonnull)");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    if (a2)
    {
      v24 = (void *)MEMORY[0x1E0CB3940];
      v25 = a2;
      v26 = (objc_class *)objc_opt_class();
      NSStringFromClass(v26);
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "stringWithFormat:", CFSTR("<%@: %p>"), v27, v25);
      v15 = (__CFString *)objc_claimAutoreleasedReturnValue();

      if (a3)
      {
LABEL_8:
        v28 = (void *)MEMORY[0x1E0CB3940];
        v29 = a3;
        v30 = (objc_class *)objc_opt_class();
        NSStringFromClass(v30);
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v28, "stringWithFormat:", CFSTR("<%@: %p>"), v31, v29);
        v20 = (__CFString *)objc_claimAutoreleasedReturnValue();

LABEL_18:
        objc_msgSend(a1, "succinctDescription");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v14, CFSTR("_UIHomeAffordanceSceneNotifier.m"), 211, CFSTR("Invalid home affordance observer: %@; window: %@; notifier: %@"),
          v15,
          v20,
          v21);
        goto LABEL_19;
      }
    }
    else
    {
      v15 = CFSTR("(nil)");
      if (a3)
        goto LABEL_8;
    }
    v20 = CFSTR("(nil)");
    goto LABEL_18;
  }
  objc_msgSend(a1, "_windowHostingScene");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a3, "_windowHostingScene");
  v11 = objc_claimAutoreleasedReturnValue();
  if ((void *)v11 == v10)
  {

  }
  else
  {
    v12 = (void *)v11;
    objc_opt_class();
    isKindOfClass = objc_opt_isKindOfClass();

    if ((isKindOfClass & 1) == 0)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _UIHomeAffordanceValidateObserver(id<_UIHomeAffordanceNotifyingInternal>  _Nonnull const __strong, id<_UIHomeAffordanceObserver>  _Nonnull const __strong, UIWindow * _Nonnull const __strong, BOOL, BOOL * _Nonnull)");
      v15 = (__CFString *)objc_claimAutoreleasedReturnValue();
      v16 = (void *)MEMORY[0x1E0CB3940];
      v17 = a3;
      v18 = (objc_class *)objc_opt_class();
      NSStringFromClass(v18);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "stringWithFormat:", CFSTR("<%@: %p>"), v19, v17);
      v20 = (__CFString *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v17, "_windowHostingScene");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "succinctDescription");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "succinctDescription");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "handleFailureInFunction:file:lineNumber:description:", v15, CFSTR("_UIHomeAffordanceSceneNotifier.m"), 221, CFSTR("Invalid home affordance observer request for window not in notifier scene: %@; window's scene: %@; expected scene: %@; notifier: %@"),
        v20,
        v22,
        v23,
        a1);
LABEL_15:

LABEL_19:
      v36 = 0;
      goto LABEL_20;
    }
  }
  objc_msgSend(v10, "_screen");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  v33 = objc_msgSend(v32, "_userInterfaceIdiom");

  v34 = _UIActiveViewServiceSessionEffectiveIdiomForIdiom(v33);
  +[_UIActiveViewServiceSessionTracker sharedTracker](_UIActiveViewServiceSessionTracker, "sharedTracker");
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  -[_UIActiveViewServiceSessionTracker viewServiceSessionForHostedWindow:inUserInterfaceIdiom:]((uint64_t)v35, (uint64_t)a3, v34);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (a5)
    *a5 = v14 != 0;
  v36 = 1;
  if (v14 && (a4 & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v15 = (__CFString *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _UIHomeAffordanceValidateObserver(id<_UIHomeAffordanceNotifyingInternal>  _Nonnull const __strong, id<_UIHomeAffordanceObserver>  _Nonnull const __strong, UIWindow * _Nonnull const __strong, BOOL, BOOL * _Nonnull)");
    v20 = (__CFString *)objc_claimAutoreleasedReturnValue();
    v37 = (void *)MEMORY[0x1E0CB3940];
    v38 = a2;
    v39 = (objc_class *)objc_opt_class();
    NSStringFromClass(v39);
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v37, "stringWithFormat:", CFSTR("<%@: %p>"), v40, v38);
    v21 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v10, "succinctDescription");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "succinctDescription");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    -[__CFString handleFailureInFunction:file:lineNumber:description:](v15, "handleFailureInFunction:file:lineNumber:description:", v20, CFSTR("_UIHomeAffordanceSceneNotifier.m"), 239, CFSTR("Unexpected legacy view service home affordance observer: %@; scene: %@; notifier: %@"),
      v21,
      v22,
      v23,
      v42);
    goto LABEL_15;
  }
LABEL_20:

  return v36;
}

id _UIHomeAffordanceRegistrationTokenForNotifierAndRecord(id val, uint64_t a2)
{
  _UIDeallocInvalidatable *v4;
  objc_class *v5;
  const char *Name;
  id v7;
  id v8;
  _QWORD v10[5];
  id v11;
  id location;

  objc_initWeak(&location, val);
  v4 = [_UIDeallocInvalidatable alloc];
  v5 = (objc_class *)objc_opt_class();
  Name = class_getName(v5);
  v7 = (id)objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%s-%p-%lu"), Name, val, ++_UIHomeAffordanceNewObserverRegisterationIndex_observerRegistrationIndex);
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = ___UIHomeAffordanceRegistrationTokenForNotifierAndRecord_block_invoke;
  v10[3] = &unk_1E16B4DF8;
  objc_copyWeak(&v11, &location);
  v10[4] = a2;
  v8 = -[_UIDeallocInvalidatable initWithIdentifier:faultForDeallocInvalidation:invalidationBlock:](v4, v7, 0, v10);

  objc_destroyWeak(&v11);
  objc_destroyWeak(&location);
  return v8;
}

void sub_185834CB8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_185835C80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL _UIHomeAffordanceNotifierShouldUpdateTargetForKeyWindow(void *a1, void *a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  _BOOL8 v8;
  void *v9;
  void *v10;
  void *v11;

  if (!objc_msgSend((id)UIApp, "isFrontBoard"))
    return 0;
  objc_msgSend(a1, "_scene");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v4, "_allowsEventUIWindowRouting"))
    v5 = v4;
  else
    v5 = 0;
  v6 = v5;
  objc_msgSend(v6, "_sceneForKeyboardDisplay");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  if (v6 == v7)
  {
    objc_msgSend(a2, "_eventRoutingScene");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "_screen");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "_screen");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = v10 == v11;

  }
  else
  {
    v8 = 0;
  }

  return v8;
}

void _UIHyperInteractorDirtyEffectiveVelocity(void *a1)
{
  _DWORD *v1;
  int v2;
  unsigned int v3;

  v1 = a1;
  v2 = v1[42];
  if ((v2 & 0x10) != 0)
  {
    v3 = (v1[42] & 0x20 ^ 0xFFFFFFEF) & v1[42];
    v1[42] = v3;
    if ((v2 & 0x8000) != 0)
      v1[42] = v3 & 0xFFFF7FEF;
  }

}

id MeshTransformForZoom(double a1)
{
  uint64_t i;
  void *v7;
  _BYTE v9[288];
  int64x2_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64x2_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  int64x2_t v23;
  double v24;
  double v25;
  __int128 v26;
  uint64_t v27;
  double v28;
  double v29;
  __int128 v30;
  uint64_t v31;
  double v32;
  double v33;
  __int128 v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  int64x2_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  int64x2_t v48;
  double v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  double v53;
  __int128 v54;
  int64x2_t v55;
  uint64_t v56;
  double v57;
  __int128 v58;
  __int128 v59;
  double v60;
  uint64_t v61;
  int64x2_t v62;
  uint64_t v63;
  double v64;
  __int128 v65;
  __int128 v66;
  double v67;
  uint64_t v68;
  uint64_t v69;

  v69 = *MEMORY[0x1E0C80C00];
  v10 = vdupq_n_s64(0x3F50624DD2F1A9FCuLL);
  v11 = 0;
  v12 = 0;
  v14 = xmmword_186678980;
  v13 = 0;
  v15 = 0x3FF0000000000000;
  v16 = 0;
  v17 = 0;
  __asm { FMOV            V3.2D, #1.0 }
  v18 = vdupq_n_s64(0x3FEFF7CED916872BuLL);
  v19 = _Q3;
  v20 = xmmword_186678990;
  v21 = xmmword_1866789A0;
  v22 = xmmword_1866721B0;
  v23 = vdupq_n_s64(0x3F747AE147AE147BuLL);
  v24 = a1;
  v25 = a1;
  v26 = xmmword_1866789B0;
  v27 = 0x3F747AE147AE147BLL;
  v28 = 1.0 - a1;
  v29 = a1;
  v30 = xmmword_1866789B0;
  v31 = 0x3FEFD70A3D70A3D7;
  v32 = 1.0 - a1;
  v33 = 1.0 - a1;
  v34 = xmmword_1866789C0;
  v35 = 0x3FEFD70A3D70A3D7;
  v36 = a1;
  v37 = 1.0 - a1;
  v38 = 0;
  v39 = v10;
  v40 = a1;
  v42 = 0;
  v41 = 0;
  v43 = 0x3FEFF7CED916872BLL;
  v44 = 0x3F50624DD2F1A9FCLL;
  v45 = 1.0 - a1;
  v47 = 0;
  v46 = 0;
  v48 = vdupq_n_s64(0x3FEFD70A3D70A3D7uLL);
  v49 = 1.0 - a1;
  v50 = 0x3FF0000000000000;
  v51 = xmmword_1866789C0;
  v52 = 0x3FEFD70A3D70A3D7;
  v53 = a1;
  v54 = xmmword_1866721B0;
  v55 = v23;
  v56 = 0;
  v57 = a1;
  v58 = xmmword_1866789B0;
  v59 = xmmword_1866789D0;
  v60 = a1;
  v61 = 0;
  v62 = v48;
  v63 = 0x3FF0000000000000;
  v64 = 1.0 - a1;
  v65 = xmmword_1866789C0;
  v66 = xmmword_1866789E0;
  v67 = 1.0 - a1;
  v68 = 0;
  if (a1 == 0.0)
  {
    for (i = 0; i != 640; i += 40)
      *(int64x2_t *)((char *)&v10 + i) = *(int64x2_t *)((char *)&v10 + i + 16);
  }
  memcpy(v9, &unk_186678A18, sizeof(v9));
  objc_msgSend(MEMORY[0x1E0CD27F0], "meshTransformWithVertexCount:vertices:faceCount:faces:depthNormalization:", 16, &v10, 9, v9, *MEMORY[0x1E0CD2A90]);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setSubdivisionSteps:", 0);
  return v7;
}

id _UIBackdropViewSettingsColorCancelRed()
{
  if (_MergedGlobals_7 != -1)
    dispatch_once(&_MergedGlobals_7, &__block_literal_global_34);
  return (id)qword_1ECD7B070;
}

id _UIBackdropViewSettingsColorAcceptGreen()
{
  if (qword_1ECD7B078 != -1)
    dispatch_once(&qword_1ECD7B078, &__block_literal_global_1_0);
  return (id)qword_1ECD7B080;
}

void _UIBlurEffectAddAverageColorFilterEntry(void *a1, void *a2, double a3)
{
  _UIVisualEffectFilterEntry *v5;
  _UIVisualEffectFilterEntry *v6;
  id v7;

  v7 = a1;
  if (objc_msgSend(a2, "allowsBlurring"))
  {
    v5 = [_UIVisualEffectFilterEntry alloc];
    v6 = -[_UIVisualEffectFilterEntry initWithFilterType:configurationValues:requestedValues:identityValues:](v5, "initWithFilterType:configurationValues:requestedValues:identityValues:", *MEMORY[0x1E0CD2B88], MEMORY[0x1E0C9AA70], MEMORY[0x1E0C9AA70], MEMORY[0x1E0C9AA70]);
    -[_UIVisualEffectFilterEntry setRequestedScaleHint:](v6, "setRequestedScaleHint:", a3);
    objc_msgSend(v7, "addFilterEntry:", v6);
    objc_msgSend(v7, "setDisableInPlaceFiltering:", 1);
    objc_msgSend(v7, "setRequestAlphaTransition:", 1);

  }
}

void sub_185840070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _UIRemoteInputViewHostLogger()
{
  if (qword_1ECD7CBD0 != -1)
    dispatch_once(&qword_1ECD7CBD0, &__block_literal_global_35);
  return (id)_MergedGlobals_947;
}

void sub_185841878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a39, 8);
  _Unwind_Resume(a1);
}

void sub_185841BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getRTIInputViewInfoClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  RemoteTextInputLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("RTIInputViewInfo");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getRTIInputViewInfoClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getRTIInputViewInfoClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIRemoteInputViewHost.m"), 39, CFSTR("Unable to find class %s"), "RTIInputViewInfo");

    __break(1u);
  }
}

void RemoteTextInputLibrary()
{
  void *v0;
  void *v1;
  void *v2;

  if (!RemoteTextInputLibraryCore_frameworkLibrary)
    RemoteTextInputLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!RemoteTextInputLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *RemoteTextInputLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("UIRemoteInputViewHost.m"), 36, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

Class __getTUIAssistantButtonSizeProviderClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7CBE0)
    qword_1ECD7CBE0 = _sl_dlopen();
  if (!qword_1ECD7CBE0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *TextInputUILibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("UIRemoteInputViewHost.m"), 45, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("TUIAssistantButtonSizeProvider");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUIAssistantButtonSizeProviderClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UIRemoteInputViewHost.m"), 46, CFSTR("Unable to find class %s"), "TUIAssistantButtonSizeProvider");

LABEL_8:
    __break(1u);
  }
  qword_1ECD7CBD8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void __getRTIBarButtonGroupClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  RemoteTextInputLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("RTIBarButtonGroup");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7CBE8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getRTIBarButtonGroupClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIRemoteInputViewHost.m"), 37, CFSTR("Unable to find class %s"), "RTIBarButtonGroup");

    __break(1u);
  }
}

void __getRTIAssistantItemClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  RemoteTextInputLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("RTIAssistantItem");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getRTIAssistantItemClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getRTIAssistantItemClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIRemoteInputViewHost.m"), 38, CFSTR("Unable to find class %s"), "RTIAssistantItem");

    __break(1u);
  }
}

BOOL _UICAColorMatrixIsEqualToCAColorMatrix(float *a1, float *a2, double a3)
{
  return vabds_f32(*a1, *a2) <= a3
      && vabds_f32(a1[1], a2[1]) <= a3
      && vabds_f32(a1[2], a2[2]) <= a3
      && vabds_f32(a1[3], a2[3]) <= a3
      && vabds_f32(a1[4], a2[4]) <= a3
      && vabds_f32(a1[5], a2[5]) <= a3
      && vabds_f32(a1[6], a2[6]) <= a3
      && vabds_f32(a1[7], a2[7]) <= a3
      && vabds_f32(a1[8], a2[8]) <= a3
      && vabds_f32(a1[9], a2[9]) <= a3
      && vabds_f32(a1[10], a2[10]) <= a3
      && vabds_f32(a1[11], a2[11]) <= a3
      && vabds_f32(a1[12], a2[12]) <= a3
      && vabds_f32(a1[13], a2[13]) <= a3
      && vabds_f32(a1[14], a2[14]) <= a3
      && vabds_f32(a1[15], a2[15]) <= a3
      && vabds_f32(a1[16], a2[16]) <= a3
      && vabds_f32(a1[17], a2[17]) <= a3
      && vabds_f32(a1[18], a2[18]) <= a3
      && vabds_f32(a1[19], a2[19]) <= a3;
}

float32x4_t _UIColorEffectMakeCAColorMatrixFromUI@<Q0>(uint64_t a1@<X0>, float32x4_t *a2@<X8>)
{
  float64x2_t v2;
  float64x2_t v3;
  float32x4_t v4;
  float64x2_t v5;
  float64x2_t v6;
  float32x4_t v7;
  float32x4_t result;

  v3.f64[0] = *(float64_t *)(a1 + 120);
  v2.f64[0] = *(float64_t *)(a1 + 128);
  v2.f64[1] = *(float64_t *)(a1 + 32);
  v4 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v2), *(float64x2_t *)(a1 + 40));
  *a2 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(*(float64x2_t *)a1), *(float64x2_t *)(a1 + 16));
  a2[1] = v4;
  v5.f64[0] = *(float64_t *)(a1 + 56);
  v5.f64[1] = *(float64_t *)(a1 + 136);
  v6.f64[0] = *(float64_t *)(a1 + 144);
  v6.f64[1] = *(float64_t *)(a1 + 96);
  v7 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(*(float64x2_t *)(a1 + 80)), v6);
  a2[2] = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(v5), *(float64x2_t *)(a1 + 64));
  a2[3] = v7;
  v3.f64[1] = *(float64_t *)(a1 + 152);
  result = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64(*(float64x2_t *)(a1 + 104)), v3);
  a2[4] = result;
  return result;
}

float64_t _UIColorEffectMakeUIColorMatrixFromCA@<D0>(uint64_t a1@<X0>, float64x2_t *a2@<X8>)
{
  float64x2_t v2;
  float64x2_t v3;
  float64x2_t v4;
  float64x2_t v5;
  float64_t result;

  v2 = vcvtq_f64_f32(*(float32x2_t *)(a1 + 8));
  *a2 = vcvtq_f64_f32(*(float32x2_t *)a1);
  a2[1] = v2;
  v3 = vcvtq_f64_f32(*(float32x2_t *)(a1 + 28));
  a2[2] = vcvtq_f64_f32(*(float32x2_t *)(a1 + 20));
  a2[3] = v3;
  v4 = vcvtq_f64_f32(*(float32x2_t *)(a1 + 48));
  a2[4] = vcvtq_f64_f32(*(float32x2_t *)(a1 + 40));
  a2[5] = v4;
  v5 = vcvtq_f64_f32(*(float32x2_t *)(a1 + 68));
  a2[6] = vcvtq_f64_f32(*(float32x2_t *)(a1 + 60));
  a2[7] = v5;
  v5.f64[0] = *(float *)(a1 + 36);
  a2[8].f64[0] = *(float *)(a1 + 16);
  a2[8].f64[1] = v5.f64[0];
  result = *(float *)(a1 + 56);
  v5.f64[0] = *(float *)(a1 + 76);
  a2[9].f64[0] = result;
  a2[9].f64[1] = v5.f64[0];
  return result;
}

double _UIColorEffectPremultiplyGray(double a1, double a2)
{
  return a1 * a2;
}

uint64_t _UIColorEffectSourceOverCAMatrix(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = 0;
  v6 = 0;
  v3 = 0;
  v4 = 0;
  objc_msgSend(a2, "getRed:green:blue:alpha:", &v6, &v5, &v4, &v3);
  return CAColorMatrixMakeColorSourceOver();
}

void _UIColorEffectEncodeDictionary(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  BOOL v16;
  BOOL v17;
  void *v18;
  void *v19;
  UIImage *v20;
  void *v21;
  double v22;
  void *v23;
  _DWORD v24[20];

  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = *MEMORY[0x1E0CD2D00];
  objc_msgSend(v7, "objectForKeyedSubscript:", *MEMORY[0x1E0CD2D00]);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = *MEMORY[0x1E0CD2D18];
  objc_msgSend(v7, "objectForKeyedSubscript:", *MEMORY[0x1E0CD2D18]);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  v12 = *MEMORY[0x1E0CD2D20];
  objc_msgSend(v7, "objectForKeyedSubscript:", *MEMORY[0x1E0CD2D20]);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = v7;
  v15 = v14;
  if (v9)
    v16 = 0;
  else
    v16 = v11 == 0;
  v17 = v16 && v13 == 0;
  v18 = v14;
  if (!v17)
  {
    v18 = (void *)objc_msgSend(v14, "mutableCopy");
    if (v9)
    {
      +[UIColor colorWithCGColor:](UIColor, "colorWithCGColor:", v9);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "setObject:forKeyedSubscript:", v19, v8);

    }
    if (v11)
    {
      +[UIImage imageWithCGImage:](UIImage, "imageWithCGImage:", v11);
      v20 = (UIImage *)objc_claimAutoreleasedReturnValue();
      UIImagePNGRepresentation(v20);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "setObject:forKeyedSubscript:", v21, v10);

    }
    if (v13)
    {
      objc_msgSend(v13, "CAColorMatrixValue");
      _UIVisualEffectModelEncodeCAColorMatrix(v24, v22);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "setObject:forKeyedSubscript:", v23, v12);

    }
  }
  objc_msgSend(v5, "encodeObject:forKey:", v18, v6);

}

id _UIColorEffectDecodeDictionary(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  BOOL v11;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  _BYTE v19[80];

  objc_msgSend(a1, "decodeObjectForKey:", a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
  {
    v4 = *MEMORY[0x1E0CD2D00];
    objc_msgSend(v2, "objectForKeyedSubscript:", *MEMORY[0x1E0CD2D00]);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = *MEMORY[0x1E0CD2D18];
    objc_msgSend(v3, "objectForKeyedSubscript:", *MEMORY[0x1E0CD2D18]);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = *MEMORY[0x1E0CD2D20];
    objc_msgSend(v3, "objectForKeyedSubscript:", *MEMORY[0x1E0CD2D20]);
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = (void *)v9;
    if (v5)
      v11 = 0;
    else
      v11 = v7 == 0;
    if (v11 && v9 == 0)
    {
      v17 = v3;
    }
    else
    {
      v13 = (void *)objc_msgSend(v3, "mutableCopy");
      if (v5)
        objc_msgSend(v13, "setObject:forKeyedSubscript:", objc_msgSend(objc_retainAutorelease(v5), "CGColor"), v4);
      if (v7)
      {
        +[UIImage imageWithData:](UIImage, "imageWithData:", v7);
        v14 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
        objc_msgSend(v13, "setObject:forKeyedSubscript:", objc_msgSend(v14, "CGImage"), v6);

      }
      if (v10)
      {
        v15 = (void *)MEMORY[0x1E0CB3B18];
        _UIVisualEffectModelDecodeCAColorMatrix(v10, (uint64_t)v19);
        objc_msgSend(v15, "valueWithCAColorMatrix:", v19);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "setObject:forKeyedSubscript:", v16, v8);

      }
      v17 = (id)objc_msgSend(v13, "copy");

    }
  }
  else
  {
    v17 = (id)MEMORY[0x1E0C9AA70];
  }

  return v17;
}

uint64_t signpost_c2_cancel()
{
  return kdebug_trace();
}

uint64_t signpost_c2_compose()
{
  return kdebug_trace();
}

uint64_t signpost_c2_animatorFired()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_pre_start()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_pre_end()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_solver_start()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_solver_end()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_post_start()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_post_end()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_allocatedModifiers_start()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_allocatedModifiers_end()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_flush_start()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_flush_end()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_exit_start()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_exit_end()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_enter_start()
{
  return kdebug_trace();
}

uint64_t signpost_c2_tick_enter_end()
{
  return kdebug_trace();
}

uint64_t __UIVIEWSWIFTANIMATABLEPROPERTYTRANSFORMER_IS_EXECUTING_CALLBACK__(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

id _InProcessAnimationManagerThreadPriorityLog()
{
  if (qword_1ECD7CC08 != -1)
    dispatch_once(&qword_1ECD7CC08, &__block_literal_global_37);
  return (id)_MergedGlobals_949;
}

void inProcessAnimationManagerSetFixedPriority(int a1)
{
  _opaque_pthread_t *v2;
  int v3;
  int v4;
  NSObject *v5;
  mach_port_t v6;
  int v7;
  int v8;
  NSObject *v9;
  void *v10;
  void *v11;
  integer_t policy_info;
  sched_param v13;
  int v14;
  uint8_t buf[4];
  const char *v16;
  __int16 v17;
  int v18;
  __int16 v19;
  int v20;
  __int16 v21;
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v2 = pthread_self();
  v14 = 0;
  v13 = 0;
  pthread_getschedparam(v2, &v14, &v13);
  v13.sched_priority = a1;
  v3 = pthread_setschedparam(v2, v14, &v13);
  if (v3)
  {
    v4 = v3;
    _InProcessAnimationManagerThreadPriorityLog();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(MEMORY[0x1E0CB3978], "currentThread");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "name");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 136315906;
      v16 = "inProcessAnimationManagerSetFixedPriority";
      v17 = 1024;
      v18 = v4;
      v19 = 1024;
      v20 = a1;
      v21 = 2114;
      v22 = v11;
      _os_log_error_impl(&dword_185066000, v5, OS_LOG_TYPE_ERROR, "%s Error %d setting priority %d for thread: %{public}@", buf, 0x22u);

    }
  }
  policy_info = 0;
  v6 = pthread_mach_thread_np(v2);
  thread_policy_set(v6, 1u, &policy_info, 1u);
  v7 = proc_setthread_cpupercent();
  if (v7)
  {
    v8 = v7;
    _InProcessAnimationManagerThreadPriorityLog();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315394;
      v16 = "inProcessAnimationManagerSetFixedPriority";
      v17 = 1024;
      v18 = v8;
      _os_log_error_impl(&dword_185066000, v9, OS_LOG_TYPE_ERROR, "%s Error %d setting thread CPU percent", buf, 0x12u);
    }

  }
}

_DWORD *_C2UpdateRequestSetRateRange(_DWORD *result, float a2, float a3, float a4)
{
  result[1] = a2;
  result[2] = a4;
  result[3] = a3;
  return result;
}

void sub_1858499AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id a28)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a28);
  _Unwind_Resume(a1);
}

void sub_185849C4C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id _UIActivityItemsConfigurationLog()
{
  if (qword_1ECD7CC28 != -1)
    dispatch_once(&qword_1ECD7CC28, &__block_literal_global_39);
  return (id)_MergedGlobals_951;
}

_UIContentViewLabelConfiguration *_createDefaultLabelConfiguration(int a1, uint64_t a2)
{
  void *v4;
  void *v5;
  _UIContentViewLabelConfiguration *v6;
  void *v7;
  void *v8;
  void *v9;

  +[UITraitCollection _fallbackTraitCollection]();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  _UITableConstantsForTraitCollection(v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_alloc_init(_UIContentViewLabelConfiguration);
  if (a1)
  {
    objc_msgSend(v5, "defaultHeaderFontForTableViewStyle:", a2);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[_UICollectionCompositionalLayoutSolverOptions setLayoutAttributesClass:]((uint64_t)v6, v7);

    objc_msgSend(v5, "defaultHeaderTextColorForTableViewStyle:focused:", a2, 0);
  }
  else
  {
    objc_msgSend(v5, "defaultFooterFontForTableViewStyle:", a2);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[_UICollectionCompositionalLayoutSolverOptions setLayoutAttributesClass:]((uint64_t)v6, v8);

    objc_msgSend(v5, "defaultFooterTextColorForTableViewStyle:focused:", a2, 0);
  }
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[UIContentUnavailableImageProperties _setTintColor:]((uint64_t)v6, v9);

  -[_UIContentViewLabelConfiguration _configureWithConstants:traitCollection:forSidebar:]((uint64_t)v6, v5, v4, 0);
  return v6;
}

void sub_18584C81C(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void sub_18584D8A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

id filterOfTypeOnLayer(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  _QWORD v9[4];
  id v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  void (*v16)(uint64_t);
  id v17;

  v3 = a1;
  v4 = a2;
  v12 = 0;
  v13 = &v12;
  v14 = 0x3032000000;
  v15 = __Block_byref_object_copy__14;
  v16 = __Block_byref_object_dispose__14;
  v17 = 0;
  objc_msgSend(v3, "filters");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __filterOfTypeOnLayer_block_invoke;
  v9[3] = &unk_1E16B52D8;
  v6 = v4;
  v10 = v6;
  v11 = &v12;
  objc_msgSend(v5, "enumerateObjectsUsingBlock:", v9);

  v7 = (id)v13[5];
  _Block_object_dispose(&v12, 8);

  return v7;
}

void sub_18584D9B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18584EC18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __filterOfTypeOnLayer_block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  int v8;
  id v9;

  v9 = a2;
  objc_msgSend(v9, "type");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "isEqualToString:", *(_QWORD *)(a1 + 32));

  if (v8)
  {
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
    *a4 = 1;
  }

}

uint64_t _UICompositingModeForFilter(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = a1;
  if (v1)
  {
    if (qword_1ECD7CC38 != -1)
      dispatch_once(&qword_1ECD7CC38, &__block_literal_global_41);
    objc_msgSend((id)_MergedGlobals_952, "objectForKeyedSubscript:", v1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = v2;
    if (v2)
      v4 = objc_msgSend(v2, "integerValue");
    else
      v4 = 0;

  }
  else
  {
    v4 = 0;
  }

  return v4;
}

const __CFString *_UICompositingModeName(uint64_t a1)
{
  const __CFString *result;

  switch(a1)
  {
    case 0:
      result = CFSTR("UICompositingModeNormal");
      break;
    case 1:
      result = CFSTR("UICompositingModeMultiply");
      break;
    case 2:
      result = CFSTR("UICompositingModeScreen");
      break;
    case 3:
      result = CFSTR("UICompositingModeOverlay");
      break;
    case 4:
      result = CFSTR("UICompositingModeDarken");
      break;
    case 5:
      result = CFSTR("UICompositingModeLighten");
      break;
    case 6:
      result = CFSTR("UICompositingModeColorDodge");
      break;
    case 7:
      result = CFSTR("UICompositingModeColorBurn");
      break;
    case 8:
      result = CFSTR("UICompositingModeSoftLight");
      break;
    case 9:
      result = CFSTR("UICompositingModeHardLight");
      break;
    case 10:
      result = CFSTR("UICompositingModeDifference");
      break;
    case 11:
      result = CFSTR("UICompositingModeExclusion");
      break;
    case 12:
      result = CFSTR("UICompositingModeClear");
      break;
    case 13:
      result = CFSTR("UICompositingModeCopy");
      break;
    case 14:
      result = CFSTR("UICompositingModeSourceIn");
      break;
    case 15:
      result = CFSTR("UICompositingModeSourceOut");
      break;
    case 16:
      result = CFSTR("UICompositingModeSourceAtop");
      break;
    case 17:
      result = CFSTR("UICompositingModeDestination");
      break;
    case 18:
      result = CFSTR("UICompositingModeDestinationOver");
      break;
    case 19:
      result = CFSTR("UICompositingModeDestinationIn");
      break;
    case 20:
      result = CFSTR("UICompositingModeDestinationOut");
      break;
    case 21:
      result = CFSTR("UICompositingModeDestinationAtop");
      break;
    case 22:
      result = CFSTR("UICompositingModeXOR");
      break;
    case 23:
      result = CFSTR("UICompositingModePlusDarker");
      break;
    case 24:
      result = CFSTR("UICompositingModePlusLighter");
      break;
    default:
      switch(a1)
      {
        case 1000:
          result = CFSTR("UICompositingModeArithmeticSubtractSource");
          break;
        case 1001:
          result = CFSTR("UICompositingModeArithmeticSubtractDestination");
          break;
        case 1002:
          result = CFSTR("UICompositingModeArithmeticMin");
          break;
        case 1003:
          result = CFSTR("UICompositingModeArithmeticMax");
          break;
        case 1004:
          result = CFSTR("UICompositingModeArithmeticMultiply");
          break;
        case 1005:
          result = CFSTR("UICompositingModeArithmeticDivide");
          break;
        case 1006:
          result = CFSTR("UICompositingModeLinearBurn");
          break;
        case 1007:
          result = CFSTR("UICompositingModeLinearDodge");
          break;
        case 1008:
          result = CFSTR("UICompositingModeLinearLight");
          break;
        case 1009:
          result = CFSTR("UICompositingModePinLight");
          break;
        case 1010:
          result = CFSTR("UICompositingModeDarkenSourceOver");
          break;
        case 1011:
          result = CFSTR("UICompositingModeLightenSourceOver");
          break;
        default:
          result = 0;
          break;
      }
      break;
  }
  return result;
}

void sub_185851F08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  _Block_object_dispose(&a43, 8);
  _Block_object_dispose(&a47, 8);
  _Block_object_dispose(&a51, 8);
  _Block_object_dispose(&a55, 8);
  _Block_object_dispose(&a59, 8);
  _Unwind_Resume(a1);
}

void _UILegacyEffectConvertLayerConfig(void *a1, void *a2, void *a3)
{
  void (**v5)(id, void *);
  void (**v6)(id, _UITintColorViewEntry *);
  id v7;
  _UITintColorViewEntry *v8;
  _UITintColorViewEntry *v9;
  _UICompositingEffectViewEntry *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  _UITintColorViewEntry *v15;
  void *v16;
  void *v17;
  id v18;

  v18 = a1;
  v5 = a2;
  v6 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v7 = v18;
    objc_msgSend(v7, "filterType");
    v8 = (_UITintColorViewEntry *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "vibrantColor");
    v9 = (_UITintColorViewEntry *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "tintColor");
    v10 = (_UICompositingEffectViewEntry *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "filterAttributes");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = v11;
    if (v8)
    {
      objc_msgSend(v11, "objectForKeyedSubscript:", CFSTR("inputReversed"));
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      +[UIVibrancyEffect _vibrancyEntryWithType:inputColor1:inputColor2:inputReversed:](UIVibrancyEffect, "_vibrancyEntryWithType:inputColor1:inputColor2:inputReversed:", v8, v9, v10, objc_msgSend(v13, "BOOLValue"));
      v14 = (void *)objc_claimAutoreleasedReturnValue();

      v5[2](v5, v14);
      v15 = objc_alloc_init(_UITintColorViewEntry);
      +[UIColor whiteColor](UIColor, "whiteColor");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      -[_UITintColorViewEntry setTintColor:](v15, "setTintColor:", v16);

      v6[2](v6, v15);
    }

    goto LABEL_8;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    objc_msgSend(v18, "filterType");
    v7 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "fillColor");
    v8 = (_UITintColorViewEntry *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "opacity");
    v9 = +[_UIOverlayEffectViewEntry newEntryWithFilterType:color:alpha:](_UIOverlayEffectViewEntry, "newEntryWithFilterType:color:alpha:", v7, v8);
    v6[2](v6, v9);
    goto LABEL_10;
  }
  v7 = v18;
  v8 = objc_alloc_init(_UITintColorViewEntry);
  objc_msgSend(v7, "tintColor");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  -[_UITintColorViewEntry setTintColor:](v8, "setTintColor:", v17);

  v6[2](v6, v8);
  objc_msgSend(v7, "filterType");
  v9 = (_UITintColorViewEntry *)objc_claimAutoreleasedReturnValue();
  if (v9)
  {
    v10 = objc_alloc_init(_UICompositingEffectViewEntry);
    -[_UICompositingEffectViewEntry setFilterType:](v10, "setFilterType:", v9);
    v6[2](v6, (_UITintColorViewEntry *)v10);
LABEL_8:

  }
LABEL_10:

}

uint64_t _UIStyledEffectFallbackStylesForCoreMaterialStyle(uint64_t result, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  *a2 = 0x8000000000000000;
  *a3 = 0x8000000000000000;
  v3 = 1;
  switch(result)
  {
    case 6:
    case 7:
    case 8:
    case 9:
      *a2 = 4;
      v3 = 1;
      goto LABEL_6;
    case 10:
      *a2 = 5;
      goto LABEL_5;
    case 11:
    case 12:
    case 13:
    case 14:
      goto LABEL_6;
    case 15:
LABEL_5:
      v3 = 0;
      goto LABEL_6;
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
      v3 = 2;
LABEL_6:
      *a3 = v3;
      break;
    default:
      return result;
  }
  return result;
}

__CFString *_UIStyledEffectConvertToString(uint64_t a1)
{
  __CFString *v2;
  __CFString *result;

  if (a1 <= 1199)
  {
    if (a1 > 98)
    {
      if (a1 > 999)
      {
        if (a1 > 1100)
        {
          if (a1 == 1101)
            return CFSTR("UIBlurEffectStyleSystemChromeBackgroundLight");
          if (a1 == 1102)
            return CFSTR("UIBlurEffectStyleSystemChromeBackgroundDark");
        }
        else
        {
          if (a1 == 1000)
            return CFSTR("UIBlurEffectStyleAutomatic");
          if (a1 == 1100)
            return CFSTR("UIBlurEffectStyleSystemChromeBackground");
        }
      }
      else if (a1 > 500)
      {
        if (a1 == 501)
          return CFSTR("UIBlurEffectStyleLightKeyboard");
        if (a1 == 502)
          return CFSTR("UIBlurEffectStyleLightEmojiKeyboard");
      }
      else
      {
        if (a1 == 99)
          return CFSTR("UIBlurEffectStyleUltraDark");
        if (a1 == 100)
          return CFSTR("UIBlurEffectStyleUltraColored");
      }
LABEL_87:
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown(%li)"), a1);
      v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
      return v2;
    }
    else
    {
      v2 = CFSTR("UIBlurEffectStyleLight");
      switch(a1)
      {
        case 0:
          result = CFSTR("UIBlurEffectStyleExtraLight");
          break;
        case 1:
          return v2;
        case 2:
          result = CFSTR("UIBlurEffectStyleDark");
          break;
        case 3:
          result = CFSTR("UIBlurEffectStyleExtraDark");
          break;
        case 4:
          result = CFSTR("UIBlurEffectStyleRegular");
          break;
        case 5:
          result = CFSTR("UIBlurEffectStyleProminent");
          break;
        case 6:
          result = CFSTR("UIBlurEffectStyleSystemUltraThinMaterial");
          break;
        case 7:
          result = CFSTR("UIBlurEffectStyleSystemThinMaterial");
          break;
        case 8:
          result = CFSTR("UIBlurEffectStyleSystemMaterial");
          break;
        case 9:
          result = CFSTR("UIBlurEffectStyleSystemThickMaterial");
          break;
        case 10:
          result = CFSTR("UIBlurEffectStyleSystemChromeMaterial");
          break;
        case 11:
          result = CFSTR("UIBlurEffectStyleSystemUltraThinMaterialLight");
          break;
        case 12:
          result = CFSTR("UIBlurEffectStyleSystemThinMaterialLight");
          break;
        case 13:
          result = CFSTR("UIBlurEffectStyleSystemMaterialLight");
          break;
        case 14:
          result = CFSTR("UIBlurEffectStyleSystemThickMaterialLight");
          break;
        case 15:
          result = CFSTR("UIBlurEffectStyleSystemChromeMaterialLight");
          break;
        case 16:
          result = CFSTR("UIBlurEffectStyleSystemUltraThinMaterialDark");
          break;
        case 17:
          result = CFSTR("UIBlurEffectStyleSystemThinMaterialDark");
          break;
        case 18:
          result = CFSTR("UIBlurEffectStyleSystemMaterialDark");
          break;
        case 19:
          result = CFSTR("UIBlurEffectStyleSystemThickMaterialDark");
          break;
        case 20:
          result = CFSTR("UIBlurEffectStyleSystemChromeMaterialDark");
          break;
        default:
          if (a1 != 0x8000000000000000)
            goto LABEL_87;
          result = CFSTR("UIBlurEffectStyleUndefined");
          break;
      }
    }
  }
  else
  {
    switch(a1)
    {
      case 4000:
        result = CFSTR("UIBlurEffectStyleATVSemiLight");
        break;
      case 4001:
        result = CFSTR("UIBlurEffectStyleATVMediumLight");
        break;
      case 4002:
        result = CFSTR("UIBlurEffectStyleATVLight");
        break;
      case 4003:
        result = CFSTR("UIBlurEffectStyleATVUltraLight");
        break;
      case 4004:
        result = CFSTR("UIBlurEffectStyleATVMenuLight");
        break;
      case 4005:
        result = CFSTR("UIBlurEffectStyleATVSemiDark");
        break;
      case 4006:
        result = CFSTR("UIBlurEffectStyleATVMediumDark");
        break;
      case 4007:
        result = CFSTR("UIBlurEffectStyleATVDark");
        break;
      case 4008:
        result = CFSTR("UIBlurEffectStyleATVUltraDark");
        break;
      case 4009:
        result = CFSTR("UIBlurEffectStyleATVMenuDark");
        break;
      case 4010:
        result = CFSTR("UIBlurEffectStyleATVAdaptive");
        break;
      case 4011:
        result = CFSTR("UIBlurEffectStyleATVAdaptiveLighten");
        break;
      case 4012:
        result = CFSTR("UIBlurEffectStyleATVLightTextField");
        break;
      case 4013:
        result = CFSTR("UIBlurEffectStyleATVDarkTextField");
        break;
      case 4014:
        result = CFSTR("UIBlurEffectStyleATVAccessoryLight");
        break;
      case 4015:
        result = CFSTR("UIBlurEffectStyleATVAccessoryDark");
        break;
      case 4016:
        result = CFSTR("UIBlurEffectStyleATVBlackTextField");
        break;
      default:
        switch(a1)
        {
          case 1200:
            v2 = CFSTR("UIBlurEffectStyleSystemVibrantBackgroundRegular");
            return v2;
          case 1201:
            result = CFSTR("UIBlurEffectStyleSystemVibrantBackgroundUltraThin");
            break;
          case 1202:
            result = CFSTR("UIBlurEffectStyleSystemVibrantBackgroundThin");
            break;
          case 1203:
            result = CFSTR("UIBlurEffectStyleSystemVibrantBackgroundThick");
            break;
          case 1204:
            result = CFSTR("UIBlurEffectStyleSystemVibrantBackgroundRegularLight");
            break;
          case 1205:
            result = CFSTR("UIBlurEffectStyleSystemVibrantBackgroundUltraThinLight");
            break;
          case 1206:
            result = CFSTR("UIBlurEffectStyleSystemVibrantBackgroundThinLight");
            break;
          case 1207:
            result = CFSTR("UIBlurEffectStyleSystemVibrantBackgroundThickLight");
            break;
          case 1208:
            result = CFSTR("UIBlurEffectStyleSystemVibrantBackgroundRegularDark");
            break;
          case 1209:
            result = CFSTR("UIBlurEffectStyleSystemVibrantBackgroundUltraThinDark");
            break;
          case 1210:
            result = CFSTR("UIBlurEffectStyleSystemVibrantBackgroundThinDark");
            break;
          case 1211:
            result = CFSTR("UIBlurEffectStyleSystemVibrantBackgroundThickDark");
            break;
          default:
            switch(a1)
            {
              case 5000:
                result = CFSTR("UIBlurEffectStyleATVAutomatic");
                break;
              case 5001:
                result = CFSTR("UIBlurEffectStyleATVSemiAutomatic");
                break;
              case 5002:
                result = CFSTR("UIBlurEffectStyleATVMediumAutomatic");
                break;
              case 5003:
                result = CFSTR("UIBlurEffectStyleATVUltraAutomatic");
                break;
              case 5004:
                result = CFSTR("UIBlurEffectStyleATVMenuAutomatic");
                break;
              case 5005:
                result = CFSTR("UIBlurEffectStyleATVAccessoryAutomatic");
                break;
              case 5006:
                result = CFSTR("UIBlurEffectStyleATVTextFieldAutomatic");
                break;
              default:
                goto LABEL_87;
            }
            break;
        }
        break;
    }
  }
  return result;
}

id _UIVisualEffectModelEncodeCAColorMatrix(_DWORD *a1, double a2)
{
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  void *v14;
  double v15;
  void *v16;
  double v17;
  void *v18;
  double v19;
  void *v20;
  double v21;
  void *v22;
  double v23;
  void *v24;
  double v25;
  void *v26;
  double v27;
  void *v28;
  double v29;
  void *v30;
  void *v31;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  _QWORD v44[22];

  v44[20] = *MEMORY[0x1E0C80C00];
  LODWORD(a2) = *a1;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", a2);
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  v44[0] = v43;
  LODWORD(v3) = a1[1];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v3);
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  v44[1] = v42;
  LODWORD(v4) = a1[2];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v4);
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  v44[2] = v41;
  LODWORD(v5) = a1[3];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v5);
  v40 = (void *)objc_claimAutoreleasedReturnValue();
  v44[3] = v40;
  LODWORD(v6) = a1[4];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v6);
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  v44[4] = v39;
  LODWORD(v7) = a1[5];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v7);
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  v44[5] = v38;
  LODWORD(v8) = a1[6];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v8);
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v44[6] = v37;
  LODWORD(v9) = a1[7];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v9);
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v44[7] = v36;
  LODWORD(v10) = a1[8];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v10);
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  v44[8] = v35;
  LODWORD(v11) = a1[9];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v11);
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  v44[9] = v34;
  LODWORD(v12) = a1[10];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v12);
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v44[10] = v33;
  LODWORD(v13) = a1[11];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v13);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v44[11] = v14;
  LODWORD(v15) = a1[12];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v44[12] = v16;
  LODWORD(v17) = a1[13];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v44[13] = v18;
  LODWORD(v19) = a1[14];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v19);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v44[14] = v20;
  LODWORD(v21) = a1[15];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v21);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v44[15] = v22;
  LODWORD(v23) = a1[16];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v23);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v44[16] = v24;
  LODWORD(v25) = a1[17];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v25);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  v44[17] = v26;
  LODWORD(v27) = a1[18];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v27);
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v44[18] = v28;
  LODWORD(v29) = a1[19];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v29);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v44[19] = v30;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v44, 20);
  v31 = (void *)objc_claimAutoreleasedReturnValue();

  return v31;
}

void _UIVisualEffectModelDecodeCAColorMatrix(void *a1@<X0>, uint64_t a2@<X8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  void *v14;
  int v15;
  void *v16;
  int v17;
  void *v18;
  int v19;
  void *v20;
  int v21;
  void *v22;
  int v23;
  void *v24;
  int v25;
  void *v26;
  int v27;
  void *v28;
  int v29;
  void *v30;
  int v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  id v48;

  v48 = a1;
  if (objc_msgSend(v48, "count"))
  {
    if (objc_msgSend(v48, "count") != 20)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CAColorMatrix _UIVisualEffectModelDecodeCAColorMatrix(NSArray<NSNumber *> *__strong _Nonnull)");
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v35, "handleFailureInFunction:file:lineNumber:description:", v36, CFSTR("_UIVisualEffectModel.m"), 27, CFSTR("Invalid coded color matrix (encoded array contains %li items, should contain 20 items"), objc_msgSend(v48, "count"));

    }
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    objc_msgSend(v48, "objectAtIndexedSubscript:", 0);
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v47, "floatValue");
    *(_DWORD *)a2 = v3;
    objc_msgSend(v48, "objectAtIndexedSubscript:", 1);
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v46, "floatValue");
    *(_DWORD *)(a2 + 4) = v4;
    objc_msgSend(v48, "objectAtIndexedSubscript:", 2);
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v45, "floatValue");
    *(_DWORD *)(a2 + 8) = v5;
    objc_msgSend(v48, "objectAtIndexedSubscript:", 3);
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v44, "floatValue");
    *(_DWORD *)(a2 + 12) = v6;
    objc_msgSend(v48, "objectAtIndexedSubscript:", 4);
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v43, "floatValue");
    *(_DWORD *)(a2 + 16) = v7;
    objc_msgSend(v48, "objectAtIndexedSubscript:", 5);
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v42, "floatValue");
    *(_DWORD *)(a2 + 20) = v8;
    objc_msgSend(v48, "objectAtIndexedSubscript:", 6);
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v41, "floatValue");
    *(_DWORD *)(a2 + 24) = v9;
    objc_msgSend(v48, "objectAtIndexedSubscript:", 7);
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v40, "floatValue");
    *(_DWORD *)(a2 + 28) = v10;
    objc_msgSend(v48, "objectAtIndexedSubscript:", 8);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v39, "floatValue");
    *(_DWORD *)(a2 + 32) = v11;
    objc_msgSend(v48, "objectAtIndexedSubscript:", 9);
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v38, "floatValue");
    *(_DWORD *)(a2 + 36) = v12;
    objc_msgSend(v48, "objectAtIndexedSubscript:", 10);
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v37, "floatValue");
    *(_DWORD *)(a2 + 40) = v13;
    objc_msgSend(v48, "objectAtIndexedSubscript:", 11);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "floatValue");
    *(_DWORD *)(a2 + 44) = v15;
    objc_msgSend(v48, "objectAtIndexedSubscript:", 12);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "floatValue");
    *(_DWORD *)(a2 + 48) = v17;
    objc_msgSend(v48, "objectAtIndexedSubscript:", 13);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "floatValue");
    *(_DWORD *)(a2 + 52) = v19;
    objc_msgSend(v48, "objectAtIndexedSubscript:", 14);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "floatValue");
    *(_DWORD *)(a2 + 56) = v21;
    objc_msgSend(v48, "objectAtIndexedSubscript:", 15);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "floatValue");
    *(_DWORD *)(a2 + 60) = v23;
    objc_msgSend(v48, "objectAtIndexedSubscript:", 16);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "floatValue");
    *(_DWORD *)(a2 + 64) = v25;
    objc_msgSend(v48, "objectAtIndexedSubscript:", 17);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v26, "floatValue");
    *(_DWORD *)(a2 + 68) = v27;
    objc_msgSend(v48, "objectAtIndexedSubscript:", 18);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "floatValue");
    *(_DWORD *)(a2 + 72) = v29;
    objc_msgSend(v48, "objectAtIndexedSubscript:", 19);
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "floatValue");
    *(_DWORD *)(a2 + 76) = v31;

  }
  else
  {
    v32 = (_OWORD *)MEMORY[0x1E0CD2338];
    v33 = *(_OWORD *)(MEMORY[0x1E0CD2338] + 48);
    *(_OWORD *)(a2 + 32) = *(_OWORD *)(MEMORY[0x1E0CD2338] + 32);
    *(_OWORD *)(a2 + 48) = v33;
    *(_OWORD *)(a2 + 64) = v32[4];
    v34 = v32[1];
    *(_OWORD *)a2 = *v32;
    *(_OWORD *)(a2 + 16) = v34;
  }

}

__CFString *_UIVisualEffectFilterEntryDescribeColorMatrix(uint64_t a1)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[5];

  v2 = *(_OWORD *)(a1 + 48);
  v5[2] = *(_OWORD *)(a1 + 32);
  v5[3] = v2;
  v5[4] = *(_OWORD *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v3;
  if (_UICAColorMatrixIsIdentity((float *)v5))
    return CFSTR("{identity}");
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("{redPrimary={%f %f %f %f} greenPrimary={%f %f %f %f} bluePrimary={%f %f %f %f} alphaPrimary={%f %f %f %f} additiveColor={%f %f %f %f}}"), *(float *)a1, *(float *)(a1 + 4), *(float *)(a1 + 8), *(float *)(a1 + 12), *(float *)(a1 + 20), *(float *)(a1 + 24), *(float *)(a1 + 28), *(float *)(a1 + 32), *(float *)(a1 + 40), *(float *)(a1 + 44), *(float *)(a1 + 48), *(float *)(a1 + 52), *(float *)(a1 + 60), *(float *)(a1 + 64), *(float *)(a1 + 68), *(float *)(a1 + 72),
    *(float *)(a1 + 16),
    *(float *)(a1 + 36),
    *(float *)(a1 + 56),
    *(float *)(a1 + 76));
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

id _UIVisualEffectFilterEntryDescribeValue(void *a1)
{
  id v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  _OWORD v7[5];

  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v2 = v1;
    if (!strcmp("{CAColorMatrix=ffffffffffffffffffff}", (const char *)objc_msgSend(v2, "objCType")))
    {
      if (v2)
        objc_msgSend(v2, "CAColorMatrixValue");
      else
        memset(v7, 0, sizeof(v7));
      _UIVisualEffectFilterEntryDescribeColorMatrix((uint64_t)v7);
      v3 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v3 = 0;
    }

    if (!v3)
      goto LABEL_12;
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0
      || (v4 = (void *)MEMORY[0x1E0CB3940],
          objc_msgSend(v1, "componentsJoinedByString:", CFSTR(", ")),
          v5 = (void *)objc_claimAutoreleasedReturnValue(),
          objc_msgSend(v4, "stringWithFormat:", CFSTR("{%@}"), v5),
          v3 = (void *)objc_claimAutoreleasedReturnValue(),
          v5,
          !v3))
    {
LABEL_12:
      objc_msgSend(v1, "description");
      v3 = (void *)objc_claimAutoreleasedReturnValue();
    }
  }

  return v3;
}

void sub_1858561EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void _UIFilterEntryAppendArrayDescription(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (objc_msgSend(v7, "count"))
  {
    objc_msgSend(v5, "appendFormat:", CFSTR("\n%@={\n"), v6);
    v15 = 0u;
    v16 = 0u;
    v13 = 0u;
    v14 = 0u;
    v8 = v7;
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v14;
      do
      {
        v12 = 0;
        do
        {
          if (*(_QWORD *)v14 != v11)
            objc_enumerationMutation(v8);
          objc_msgSend(v5, "appendFormat:", CFSTR("\t%@\n"), *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * v12++));
        }
        while (v10 != v12);
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      }
      while (v10);
    }

    objc_msgSend(v5, "appendString:", CFSTR("}"));
  }

}

void sub_18585ADE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{

  _Unwind_Resume(a1);
}

__CFString *_CSCN(void *a1)
{
  id v1;
  void *v2;
  __CFString *v3;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    if ((objc_msgSend(v1, "isEqualToString:", CFSTR("UICTContentSizeCategoryL")) & 1) != 0)
    {
      v3 = CFSTR("L");
    }
    else if ((objc_msgSend(v2, "isEqualToString:", CFSTR("UICTContentSizeCategoryXS")) & 1) != 0)
    {
      v3 = CFSTR("XS");
    }
    else if ((objc_msgSend(v2, "isEqualToString:", CFSTR("UICTContentSizeCategoryS")) & 1) != 0)
    {
      v3 = CFSTR("S");
    }
    else if ((objc_msgSend(v2, "isEqualToString:", CFSTR("UICTContentSizeCategoryM")) & 1) != 0)
    {
      v3 = CFSTR("M");
    }
    else if ((objc_msgSend(v2, "isEqualToString:", CFSTR("UICTContentSizeCategoryXL")) & 1) != 0)
    {
      v3 = CFSTR("XL");
    }
    else if ((objc_msgSend(v2, "isEqualToString:", CFSTR("UICTContentSizeCategoryXXL")) & 1) != 0)
    {
      v3 = CFSTR("XXL");
    }
    else if ((objc_msgSend(v2, "isEqualToString:", CFSTR("UICTContentSizeCategoryXXXL")) & 1) != 0)
    {
      v3 = CFSTR("XXXL");
    }
    else if ((objc_msgSend(v2, "isEqualToString:", CFSTR("UICTContentSizeCategoryAccessibilityM")) & 1) != 0)
    {
      v3 = CFSTR("AX-M");
    }
    else if ((objc_msgSend(v2, "isEqualToString:", CFSTR("UICTContentSizeCategoryAccessibilityL")) & 1) != 0)
    {
      v3 = CFSTR("AX-L");
    }
    else if ((objc_msgSend(v2, "isEqualToString:", CFSTR("UICTContentSizeCategoryAccessibilityXL")) & 1) != 0)
    {
      v3 = CFSTR("AX-XL");
    }
    else if ((objc_msgSend(v2, "isEqualToString:", CFSTR("UICTContentSizeCategoryAccessibilityXXL")) & 1) != 0)
    {
      v3 = CFSTR("AX-XXL");
    }
    else if ((objc_msgSend(v2, "isEqualToString:", CFSTR("UICTContentSizeCategoryAccessibilityXXXL")) & 1) != 0)
    {
      v3 = CFSTR("AX-XXXL");
    }
    else
    {
      v3 = v2;
    }
  }
  else
  {
    v3 = CFSTR("none");
  }

  return v3;
}

void _UIBADPrettyPrintTextAttributes(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, void *, void *);
  void *v9;
  id v10;
  _QWORD *v11;
  _QWORD v12[3];
  char v13;

  v3 = a1;
  v4 = a2;
  if (v4)
  {
    objc_msgSend(v3, "appendString:", CFSTR("{("));
    v12[0] = 0;
    v12[1] = v12;
    v12[2] = 0x2020000000;
    v13 = 0;
    v6 = MEMORY[0x1E0C809B0];
    v7 = 3221225472;
    v8 = ___UIBADPrettyPrintTextAttributes_block_invoke;
    v9 = &unk_1E16B54D8;
    v11 = v12;
    v5 = v3;
    v10 = v5;
    objc_msgSend(v4, "enumerateKeysAndObjectsUsingBlock:", &v6);
    objc_msgSend(v5, "appendString:", CFSTR(")}"), v6, v7, v8, v9);

    _Block_object_dispose(v12, 8);
  }
  else
  {
    objc_msgSend(v3, "appendString:", CFSTR("default"));
  }

}

void sub_18585F668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185861264(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  _Unwind_Resume(exception_object);
}

void sub_18586133C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185861878(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185861A60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 64), 8);
  _Unwind_Resume(a1);
}

void ___rescueBofAAppIfNecessary_block_invoke()
{
  id v0;

  _UIMainBundleIdentifier();
  v0 = (id)objc_claimAutoreleasedReturnValue();
  _MergedGlobals_956 = objc_msgSend(v0, "isEqualToString:", CFSTR("com.bankofamerica.BofA"));

}

void sub_185865394(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _calculateFinalPointerShape(void *a1, void *a2, void *a3, void *a4, int a5, int a6, double a7, double a8, double a9, double a10)
{
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  double v50;
  CGFloat v51;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MaxX;
  double v57;
  CGFloat v58;
  double v59;
  double v60;
  CGFloat v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  void *v75;
  double MinX;
  CGFloat v78;
  CGFloat v79;
  CGRect v80;
  CGRect v81;
  CGRect v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;

  v19 = a1;
  v20 = a2;
  v21 = a3;
  v22 = a4;
  v23 = v22;
  if (a5)
  {
    objc_msgSend(v22, "backButtonLeadingPadding");
    v25 = v24;
    objc_msgSend(v23, "backButtonTrailingPadding");
    v27 = v26;
    if (a6)
      v26 = v25;
    v28 = v25 + v27;
  }
  else
  {
    objc_msgSend(v22, "buttonPadding");
    v28 = v26 + v26;
  }
  v29 = a9 + v28;
  v30 = a7 - v26;
  objc_msgSend(v23, "buttonMinimumHeight");
  v32 = (v31 - a10) * 0.5;
  if (a10 >= v31)
    v32 = 0.0;
  v33 = a8 - v32;
  if (a10 < v31)
    a10 = v31;
  objc_msgSend(v23, "buttonMinimumWidth");
  v35 = (v34 - v29) * 0.5;
  if (v29 >= v34)
    v35 = 0.0;
  v36 = v30 - v35;
  if (v29 >= v34)
    v37 = v29;
  else
    v37 = v34;
  objc_msgSend(v23, "buttonHorizontalOffset");
  if (!a6)
    v38 = -v38;
  v39 = v38 + v36;
  objc_msgSend(v23, "buttonVerticalOffset");
  v41 = v40 + v33;
  if (v21 && ((a5 & 1) != 0 || objc_msgSend(v23, "enableClippingBehavior")))
  {
    objc_msgSend(v19, "convertRect:toCoordinateSpace:", v21, v39, v41, v37, a10);
    v43 = v42;
    v78 = v44;
    v79 = v42;
    v45 = v44;
    v47 = v46;
    v49 = v48;
    objc_msgSend(v23, "buttonMinimumDistanceFromEdge");
    v51 = v50;
    objc_msgSend(v21, "bounds");
    v81 = CGRectInset(v80, v51, 0.0);
    x = v81.origin.x;
    y = v81.origin.y;
    width = v81.size.width;
    height = v81.size.height;
    v81.origin.x = v43;
    v81.origin.y = v45;
    v81.size.width = v47;
    v81.size.height = v49;
    MinX = CGRectGetMinX(v81);
    v82.origin.x = v43;
    v82.origin.y = v45;
    v82.size.width = v47;
    v82.size.height = v49;
    MaxX = CGRectGetMaxX(v82);
    v83.origin.x = x;
    v83.origin.y = y;
    v83.size.width = width;
    v83.size.height = height;
    v57 = CGRectGetMinX(v83);
    v84.origin.x = x;
    v84.origin.y = y;
    v84.size.width = width;
    v84.size.height = height;
    v58 = CGRectGetMaxX(v84);
    v59 = fmax(v57 - MinX, 0.0);
    v60 = fmax(MaxX - v58, 0.0);
    if (v59 >= v60)
      v61 = v59;
    else
      v61 = v60;
    v85.origin.y = v78;
    v85.origin.x = v79;
    v85.size.width = v47;
    v85.size.height = v49;
    v86 = CGRectInset(v85, v61, 0.0);
    objc_msgSend(v21, "convertRect:toCoordinateSpace:", v19, v86.origin.x, v86.origin.y, v86.size.width, v86.size.height);
    v39 = v62;
    v41 = v63;
    v37 = v64;
    a10 = v65;
  }
  objc_msgSend(v19, "convertRect:toView:", v20, v39, v41, v37, a10);
  v67 = v66;
  v69 = v68;
  v71 = v70;
  v73 = v72;
  objc_msgSend(v23, "buttonCornerRadius");
  +[UIPointerShape shapeWithRoundedRect:cornerRadius:](UIPointerShape, "shapeWithRoundedRect:cornerRadius:", v67, v69, v71, v73, v74);
  v75 = (void *)objc_claimAutoreleasedReturnValue();

  return v75;
}

void sub_185867C74(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_185868920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getSWShareableContentBSActionResponderClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7CCA8)
    qword_1ECD7CCA8 = _sl_dlopen();
  if (!qword_1ECD7CCA8)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *SharedWithYouLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIShareableContentSceneActionHandler.m"), 15, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("SWShareableContentBSActionResponder");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getSWShareableContentBSActionResponderClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UIShareableContentSceneActionHandler.m"), 16, CFSTR("Unable to find class %s"), "SWShareableContentBSActionResponder");

LABEL_8:
    __break(1u);
  }
  _MergedGlobals_958 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1858696C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;

  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18586A484(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_18586DC10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void TagAttributeForAxes(void *a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t a5)
{
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;

  if (a2)
  {
    v8 = (void *)MEMORY[0x1E0C99D20];
    v9 = (void *)MEMORY[0x1E0CB37E8];
    v10 = a1;
    objc_msgSend(v9, "numberWithInteger:", a4);
    v13 = (id)objc_claimAutoreleasedReturnValue();
    if (a5 < 0)
    {
      v11 = 0;
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a5);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
    }
    objc_msgSend(v8, "arrayWithObjects:", v13, v11, 0);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    _UIAppearanceTagObjectForSelector(v10, a3, v12);

    if ((a5 & 0x8000000000000000) == 0)
  }
}

double CornerPointFromPath(const CGPath *a1, uint64_t a2, double a3)
{
  double *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  _QWORD v11[8];
  uint64_t v12;
  double *v13;
  uint64_t v14;
  void *v15;
  __int128 v16;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  double *v20;
  uint64_t v21;
  void *v22;
  __int128 v23;

  v19 = 0;
  v20 = (double *)&v19;
  v21 = 0x3010000000;
  v22 = &unk_18685B0AF;
  v23 = xmmword_1866792D0;
  v17[0] = 0;
  v17[1] = v17;
  v17[2] = 0x3010000000;
  v17[3] = &unk_18685B0AF;
  v18 = xmmword_1866792D0;
  v12 = 0;
  v13 = (double *)&v12;
  v14 = 0x3010000000;
  v15 = &unk_18685B0AF;
  v16 = *MEMORY[0x1E0C9D538];
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __CornerPointFromPath_block_invoke;
  v11[3] = &unk_1E16B5AE0;
  v11[4] = &v19;
  v11[5] = &v12;
  v11[6] = v17;
  v11[7] = a2;
  CGPathApplyWithBlock(a1, v11);
  v4 = v13;
  v5 = v13[4];
  v6 = v13[5];
  v7 = sqrt(v5 * v5 + v6 * v6);
  v8 = v5 / v7;
  v13[4] = v8;
  v4[5] = v6 / v7;
  v9 = v20[4] + v8 * a3;
  _Block_object_dispose(&v12, 8);
  _Block_object_dispose(v17, 8);
  _Block_object_dispose(&v19, 8);
  return v9;
}

void sub_185872A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

id _proxyAction(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  id v6;
  void *v7;
  _QWORD v9[4];
  id v10;

  v5 = a1;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = ___proxyAction_block_invoke;
  v9[3] = &unk_1E16B2C10;
  v10 = v5;
  v6 = v5;
  +[UIAction actionWithTitle:image:identifier:handler:](UIAction, "actionWithTitle:image:identifier:handler:", a2, a3, 0, v9);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

void _clampWidthOfView(void *a1, double a2, double a3)
{
  id v5;
  double v6;
  id v7;

  v5 = a1;
  if (v5 && (a2 > 0.0 || a3 > 0.0))
  {
    if ((v7 = v5, objc_msgSend(v5, "frame"), v5 = v7, a2 > 0.0) && v6 < a2 || a3 > 0.0 && v6 > a3)
    {
      objc_msgSend(v7, "setFrame:");
      v5 = v7;
    }
  }

}

id _ImageViewInNavigationButton(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    objc_msgSend(v1, "imageForState:", 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();

    if (v3)
    {
      objc_msgSend(v2, "_imageView");
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v3)
      {
        objc_msgSend(v2, "layoutIfNeeded");
        objc_msgSend(v2, "_imageView");
        v3 = (void *)objc_claimAutoreleasedReturnValue();
      }
    }
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

void ___proxyAction_block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(a1 + 32);
  objc_msgSend(a2, "sender");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_triggerActionForEvent:fallbackSender:", 0, v3);

}

void sub_18587B83C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getSTUIStatusBarWifiSignalViewClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7CD28)
    qword_1ECD7CD28 = _sl_dlopen();
  if (!qword_1ECD7CD28)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *SystemStatusUILibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIWiFiSignalView.m"), 12, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("STUIStatusBarWifiSignalView");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getSTUIStatusBarWifiSignalViewClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UIWiFiSignalView.m"), 15, CFSTR("Unable to find class %s"), "STUIStatusBarWifiSignalView");

LABEL_8:
    __break(1u);
  }
  _MergedGlobals_961 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

const __CFString *_UIBarMetricsDebugDescription(uint64_t a1)
{
  if (a1 > 100)
  {
    if (a1 != 101)
    {
      if (a1 == 102)
        return CFSTR("compactPrompt");
      return CFSTR("unrecognized");
    }
    return CFSTR("defaultPrompt");
  }
  else
  {
    if (a1)
    {
      if (a1 == 1)
        return CFSTR("compact");
      return CFSTR("unrecognized");
    }
    return CFSTR("default");
  }
}

uint64_t _UIBarSupportedStyle(uint64_t result)
{
  if (result == 2)
    return 1;
  return result;
}

BOOL _UIBarBlurAcceptsBlendModeOnBackground(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  _BOOL8 v4;

  recursiveFirstBackdropInView(a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = v1;
  if (v1)
  {
    objc_msgSend(v1, "outputSettings");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v3, "graphicsQuality") == 100;

  }
  else
  {
    v4 = 0;
  }

  return v4;
}

id recursiveFirstBackdropInView(void *a1)
{
  id v1;
  char isKindOfClass;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_opt_class();
  isKindOfClass = objc_opt_isKindOfClass();
  v3 = v1;
  if ((isKindOfClass & 1) != 0)
  {
LABEL_4:
    v4 = v3;
    if (v4)
      goto LABEL_16;
    goto LABEL_5;
  }
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    v3 = (void *)objc_msgSend(v1, "performSelector:", sel__adaptiveBackdrop);
    goto LABEL_4;
  }
LABEL_5:
  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  objc_msgSend(v1, "subviews", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v13;
    while (2)
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v13 != v8)
          objc_enumerationMutation(v5);
        recursiveFirstBackdropInView(*(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v9));
        v10 = objc_claimAutoreleasedReturnValue();
        if (v10)
        {
          v4 = (id)v10;
          goto LABEL_15;
        }
        ++v9;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      if (v7)
        continue;
      break;
    }
  }
  v4 = 0;
LABEL_15:

LABEL_16:
  return v4;
}

BOOL _UINavigationBarEnableBasicChromeless()
{
  if (qword_1ECD7A8B0 != -1)
    dispatch_once(&qword_1ECD7A8B0, &__block_literal_global_66_0);
  return qword_1ECD7A8A8 > 0;
}

void _UIBarsTwoPartCrossfadeTransitionProgress(void *a1, void *a2, double a3)
{
  id v5;
  id v6;
  uint64_t v7;
  id v8;
  _QWORD v9[4];
  id v10;
  _QWORD v11[4];
  id v12;
  double v13;

  v5 = a1;
  v6 = a2;
  v7 = MEMORY[0x1E0C809B0];
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = ___UIBarsTwoPartCrossfadeTransitionProgress_block_invoke;
  v11[3] = &unk_1E16B2560;
  v13 = a3;
  v8 = v5;
  v12 = v8;
  if (v6)
  {
    v9[0] = v7;
    v9[1] = 3221225472;
    v9[2] = ___UIBarsTwoPartCrossfadeTransitionProgress_block_invoke_4;
    v9[3] = &unk_1E16B1BA0;
    v10 = v6;
    +[UIView animateKeyframesWithDuration:delay:options:animations:completion:](UIView, "animateKeyframesWithDuration:delay:options:animations:completion:", 0, v11, v9, 0.0, 0.0);

  }
  else
  {
    +[UIView animateKeyframesWithDuration:delay:options:animations:completion:](UIView, "animateKeyframesWithDuration:delay:options:animations:completion:", 0, v11, 0, 0.0, 0.0);
  }

}

id _UIBarManufacturedTranslucentImage(void *a1)
{
  id v1;
  void *v2;
  double v3;
  double v4;
  id v5;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  uint64_t v20;

  v1 = a1;
  v2 = v1;
  if (!v1 || (objc_msgSend(v1, "size"), v3 == 0.0) || (objc_msgSend(v2, "size"), v4 == 0.0))
  {
    v5 = v2;
  }
  else
  {
    objc_msgSend(v2, "capInsets");
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v14 = v13;
    objc_msgSend(v2, "size");
    v16 = v15;
    v18 = v17;
    objc_msgSend(v2, "scale");
    _UIGraphicsBeginImageContextWithOptions(0, 0, v16, v18, v19);
    objc_msgSend(v2, "drawAtPoint:blendMode:alpha:", 0, *MEMORY[0x1E0C9D538], *(double *)(MEMORY[0x1E0C9D538] + 8), 0.909803922);
    _UIGraphicsGetImageFromCurrentImageContext(0);
    v5 = (id)objc_claimAutoreleasedReturnValue();
    UIGraphicsEndImageContext();
    if (v10 != 0.0 || v8 != 0.0 || v14 != 0.0 || v12 != 0.0)
    {
      objc_msgSend(v5, "resizableImageWithCapInsets:", v8, v10, v12, v14);
      v20 = objc_claimAutoreleasedReturnValue();

      v5 = (id)v20;
    }
  }

  return v5;
}

double _UINavigationButtonAccessibilityBackgroundCapInsets()
{
  return 0.0;
}

id _UINavigationButtonAccessibilityBackground(int a1, int a2)
{
  uint64_t v4;
  void *v5;
  __CFString *v6;
  const __CFString *v7;
  __CFString *v8;
  void *v9;
  void *v10;
  void *v11;
  double v12;
  double v13;
  void *v14;

  if (!__barButtonAccessibilityBackgroundImages)
  {
    v4 = objc_msgSend(objc_alloc(MEMORY[0x1E0C99E08]), "initWithCapacity:", 4);
    v5 = (void *)__barButtonAccessibilityBackgroundImages;
    __barButtonAccessibilityBackgroundImages = v4;

  }
  v6 = CFSTR("UINavigationBackButtonAccessibilityBackground.png");
  if (a2)
    v6 = CFSTR("UINavigationBackButtonAccessibilityBackgroundLandscape.png");
  v7 = CFSTR("UINavigationButtonAccessibilityBackgroundLandscape.png");
  if (!a2)
    v7 = CFSTR("UINavigationButtonAccessibilityBackground.png");
  if (!a1)
    v6 = (__CFString *)v7;
  v8 = v6;
  objc_msgSend((id)__barButtonAccessibilityBackgroundImages, "objectForKey:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v9)
  {
    +[UIImage kitImageNamed:](UIImage, "kitImageNamed:", v8);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = v10;
    v12 = 21.0;
    if (a2)
      v12 = 17.0;
    v13 = 6.0;
    if (a1)
      v13 = v12;
    objc_msgSend(v10, "resizableImageWithCapInsets:resizingMode:", 1, 0.0, v13, 0.0, 6.0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (v9)
      objc_msgSend((id)__barButtonAccessibilityBackgroundImages, "setObject:forKey:", v9, v8);
  }
  objc_msgSend(v9, "imageFlippedForRightToLeftLayoutDirection");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  return v14;
}

uint64_t indexOfViewForIndexOfItem(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  _QWORD v6[6];
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a2;
  v7 = 0;
  v8 = &v7;
  v9 = 0x2020000000;
  v10 = a1;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __indexOfViewForIndexOfItem_block_invoke;
  v6[3] = &unk_1E16B5D60;
  v6[4] = &v7;
  v6[5] = a1;
  objc_msgSend(v3, "enumerateObjectsUsingBlock:", v6);
  v4 = v8[3];
  _Block_object_dispose(&v7, 8);

  return v4;
}

void sub_185880454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _UINavBarButtonImage()
{
  return 0;
}

uint64_t UICreateNavBarButton()
{
  return 0;
}

uint64_t UINavBarButtonFont()
{
  return 0;
}

void _UINavigationButtonUpdateAccessibilityBackgrounds(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a3;
  if (_AXSButtonShapesEnabled())
  {
    v15 = 0u;
    v16 = 0u;
    v13 = 0u;
    v14 = 0u;
    v7 = v5;
    v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)v14;
      do
      {
        for (i = 0; i != v9; ++i)
        {
          if (*(_QWORD *)v14 != v10)
            objc_enumerationMutation(v7);
          v12 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * i);
          if ((objc_opt_respondsToSelector() & 1) != 0
            && objc_msgSend(v12, "_wantsAccessibilityButtonShapes"))
          {
            objc_msgSend(v12, "_setWantsBlendModeForAccessibilityBackgrounds:", a2);
          }
          if ((objc_opt_respondsToSelector() & 1) != 0
            && objc_msgSend(v12, "_wantsAccessibilityButtonShapes"))
          {
            objc_msgSend(v12, "_setAccessibilityBackgroundTintColor:", v6);
          }
        }
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      }
      while (v9);
    }

  }
}

void __indexOfViewForIndexOfItem_block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v7;
  uint64_t v8;
  int v9;
  id v10;

  v7 = a2;
  v8 = *(_QWORD *)(a1 + 40);
  v10 = v7;
  v9 = objc_msgSend(v7, "isSystemItem");
  if (v8 == a3)
  {
    if (v9 && (objc_msgSend(v10, "systemItem") == 6 || objc_msgSend(v10, "systemItem") == 5))
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 0x7FFFFFFFFFFFFFFFLL;
    *a4 = 1;
  }
  else if (v9 && (objc_msgSend(v10, "systemItem") == 6 || objc_msgSend(v10, "systemItem") == 5))
  {
    --*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }

}

BOOL _UIUpdateReasonSortedSetSubtract(uint64_t a1, uint64_t *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  unsigned int v16;
  unsigned int v17;
  char *v18;
  unsigned int v19;
  BOOL v20;
  unsigned int v21;
  unsigned __int16 v22;
  uint64_t v23;
  unsigned int v24;
  int v26;
  uint64_t v27;

  v2 = *(char **)a1;
  if (*(_QWORD *)a1)
  {
    v3 = *(unsigned __int16 *)(a1 + 12);
  }
  else
  {
    v2 = (char *)(a1 + 8);
    v3 = 1;
  }
  v4 = (uint64_t *)*a2;
  if (*a2)
  {
    v5 = *((unsigned __int16 *)a2 + 6);
  }
  else
  {
    v4 = a2 + 1;
    v5 = 1;
  }
  v6 = *(unsigned __int16 *)(a1 + 14);
  v7 = *((unsigned __int16 *)a2 + 7);
  if (*((_WORD *)a2 + 7))
  {
    v26 = *(unsigned __int16 *)(a1 + 14);
    v27 = a1;
    v8 = &v2[4 * v6];
    v9 = (uint64_t)v4 + 4 * v5;
    v10 = &v2[4 * v3];
    do
    {
      --v7;
      v11 = v2;
      if (v8 != v2)
      {
        v12 = (v8 - v2) >> 2;
        v11 = v2;
        do
        {
          v13 = v12 >> 1;
          v14 = &v11[4 * (v12 >> 1)];
          v16 = *(_DWORD *)v14;
          v15 = v14 + 4;
          v12 += ~(v12 >> 1);
          if (v16 < *((_DWORD *)v4 + v7))
            v11 = v15;
          else
            v12 = v13;
        }
        while (v12);
      }
      if (v8 != v11)
      {
        if (*(_DWORD *)v11 == *((_DWORD *)v4 + v7))
        {
          v17 = *(unsigned __int16 *)(v9 + 2 * v7);
          v18 = &v10[(v11 - v2) >> 1];
          v19 = *(unsigned __int16 *)v18;
          v20 = v19 >= v17;
          v21 = v19 - v17;
          if (v21 != 0 && v20)
          {
            *(_WORD *)v18 = v21;
          }
          else
          {
            v22 = *(_WORD *)(a1 + 14) - 1;
            *(_WORD *)(a1 + 14) = v22;
            v23 = v22 - ((v11 - v2) >> 2);
            memmove(v11, v11 + 4, 4 * v23);
            memmove(&v10[(v11 - v2) >> 1], v18 + 2, 2 * v23);
            a1 = v27;
          }
        }
        v8 = v11;
        if (v11 == v2)
          break;
      }
    }
    while (v7);
    v24 = *(unsigned __int16 *)(a1 + 14);
    LODWORD(v6) = v26;
  }
  else
  {
    v24 = *(unsigned __int16 *)(a1 + 14);
  }
  return v24 < v6;
}

uint64_t CUIStyleEffectConfigurationEqualToStyleEffectConfiguration(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  void *v19;
  uint64_t v20;

  v3 = a1;
  v4 = a2;
  v5 = objc_msgSend(v3, "state");
  if (v5 != objc_msgSend(v4, "state"))
    goto LABEL_11;
  v6 = objc_msgSend(v3, "presentationState");
  if (v6 != objc_msgSend(v4, "presentationState"))
    goto LABEL_11;
  v7 = objc_msgSend(v3, "value");
  if (v7 != objc_msgSend(v4, "value"))
    goto LABEL_11;
  v8 = objc_msgSend(v3, "dimension1");
  if (v8 != objc_msgSend(v4, "dimension1"))
    goto LABEL_11;
  v9 = objc_msgSend(v3, "useSimplifiedEffect");
  if (v9 != objc_msgSend(v4, "useSimplifiedEffect"))
    goto LABEL_11;
  v10 = objc_msgSend(v3, "foregroundColorShouldTintEffects");
  if (v10 != objc_msgSend(v4, "foregroundColorShouldTintEffects"))
    goto LABEL_11;
  objc_msgSend(v3, "brightnessMultiplier");
  v12 = v11;
  objc_msgSend(v4, "brightnessMultiplier");
  if (v12 == v13
    && (v14 = objc_msgSend(v3, "colorTemperature"), v14 == objc_msgSend(v4, "colorTemperature"))
    && (objc_msgSend(v3, "effectScale"), v16 = v15, objc_msgSend(v4, "effectScale"), v16 == v17))
  {
    objc_msgSend(v3, "appearanceName");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "appearanceName");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = UIEqual(v18, v19);

  }
  else
  {
LABEL_11:
    v20 = 0;
  }

  return v20;
}

void _UIUpdateRequestRegistryRemoveRequest(uint64_t a1, _DWORD *a2)
{
  char **v4;
  int v5;
  int v6;
  int v7;
  void (*v8)(uint64_t, _QWORD);
  __int128 v9;

  v9 = 0uLL;
  if ((*a2 & 1) != 0)
    v4 = (char **)(a1 + 8);
  else
    v4 = (char **)(a1 + 48);
  if (_UIUpdateRequestRecordSortedSetRemoveRequest(v4, (unint64_t)a2, &v9))
  {
    if ((*(_BYTE *)a2 & 8) != 0)
      free(a2);
    v5 = requestRemoved((_DWORD *)a1, (uint64_t)v4, a2);
    if (_UIUpdateReasonSortedSetSubtract(a1 + 88, (uint64_t *)&v9))
    {
      if (*(_WORD *)(a1 + 102))
        v6 = 32;
      else
        v6 = 33;
      v5 |= v6;
    }
    free((void *)v9);
    v7 = *(_DWORD *)a1 | v5;
    if (v7 != *(_DWORD *)a1)
    {
      *(_DWORD *)a1 = v7;
      v8 = *(void (**)(uint64_t, _QWORD))(a1 + 136);
      if (v8)
        v8(a1, *(_QWORD *)(a1 + 144));
    }
  }
}

__CFString *_UIUpdateRequestRegistryReasonsDebugString(uint64_t a1)
{
  uint64_t v1;
  unsigned int *v2;
  __CFString *v3;
  uint64_t v4;
  unsigned int *v5;
  unsigned int v6;

  v1 = *(unsigned __int16 *)(a1 + 102);
  if (*(_WORD *)(a1 + 102))
  {
    if (*(_QWORD *)(a1 + 88))
      v2 = *(unsigned int **)(a1 + 88);
    else
      v2 = (unsigned int *)(a1 + 96);
    objc_msgSend(MEMORY[0x1E0CB37A0], "stringWithFormat:", CFSTR("0x%x"), *v2);
    v3 = (__CFString *)objc_claimAutoreleasedReturnValue();
    if ((_DWORD)v1 != 1)
    {
      v4 = v1 - 1;
      v5 = v2 + 1;
      do
      {
        v6 = *v5++;
        -[__CFString appendFormat:](v3, "appendFormat:", CFSTR(", 0x%x"), v6);
        --v4;
      }
      while (v4);
    }
  }
  else
  {
    v3 = &stru_1E16EDF20;
  }
  return v3;
}

void UINavigationItemLogSettingUpSharedBarButtonItemsDuringTransition(void *a1)
{
  id v1;
  unint64_t v2;
  NSObject *v3;
  unint64_t v4;
  NSObject *v5;
  int v6;
  id v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = qword_1ECD7CD48;
  if (!qword_1ECD7CD48)
  {
    v2 = __UILogCategoryGetNode("UINavigationItem", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
    atomic_store(v2, (unint64_t *)&qword_1ECD7CD48);
  }
  v3 = *(NSObject **)(v2 + 8);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    LOWORD(v6) = 0;
    _os_log_impl(&dword_185066000, v3, OS_LOG_TYPE_ERROR, "Shared barButtonItems must be added before transition begins. Break on UINavigationItemLogSettingUpSharedBarButtonItemsDuringTransition to debug", (uint8_t *)&v6, 2u);
  }
  v4 = qword_1ECD7CD50;
  if (!qword_1ECD7CD50)
  {
    v4 = __UILogCategoryGetNode("UINavigationItem", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
    atomic_store(v4, (unint64_t *)&qword_1ECD7CD50);
  }
  v5 = *(NSObject **)(v4 + 8);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    v6 = 138412290;
    v7 = v1;
    _os_log_impl(&dword_185066000, v5, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v6, 0xCu);
  }

}

void sub_1858888AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, id *a10, id *a11, id *a12, id *a13, id *a14, id *a15)
{
  id *v15;
  id *v16;
  id *v17;
  id *v18;
  id *v19;
  id *v20;
  id *v21;
  uint64_t v22;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(v15);
  objc_destroyWeak(location);
  objc_destroyWeak(a10);
  objc_destroyWeak(a11);
  objc_destroyWeak(a12);
  objc_destroyWeak(a13);
  objc_destroyWeak(a14);
  objc_destroyWeak(a15);
  objc_destroyWeak((id *)(v22 - 120));
  objc_destroyWeak((id *)(v22 - 112));
  _Unwind_Resume(a1);
}

void sub_185888954()
{
  JUMPOUT(0x18588890CLL);
}

void sub_18588895C()
{
  JUMPOUT(0x18588891CLL);
}

void sub_185888964()
{
  JUMPOUT(0x18588892CLL);
}

void sub_18588F3D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

uint64_t _barItemHidden(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v2 = objc_msgSend(v1, "_barItemHidden");
  else
    v2 = 0;

  return v2;
}

double totalSpaceForSpaceItems(void *a1, int a2, double a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t i;
  void *v11;
  double v12;
  double v13;
  double v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v17;
    v9 = 0.0;
    do
    {
      for (i = 0; i != v7; ++i)
      {
        if (*(_QWORD *)v17 != v8)
          objc_enumerationMutation(v5);
        v11 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * i);
        if (objc_msgSend(v11, "systemItem") == 6)
        {
          objc_msgSend(v11, "width");
          v9 = v9 + v12;
        }
      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v7);
  }
  else
  {
    v9 = 0.0;
  }
  v13 = fmax(v9, a3);
  if (a2)
    v14 = v13;
  else
    v14 = v9;

  return v14;
}

id __slideTransitionFadeMaskImage(int a1)
{
  uint64_t v2;

  if (qword_1ECD7A238 == -1)
  {
    if ((a1 & 1) != 0)
      goto LABEL_5;
  }
  else
  {
    dispatch_once(&qword_1ECD7A238, &__block_literal_global_305);
    if ((a1 & 1) != 0)
      goto LABEL_5;
  }
  if (qword_1ECD7A240 != -1)
    dispatch_once(&qword_1ECD7A240, &__block_literal_global_309);
LABEL_5:
  v2 = 5;
  if (a1)
    v2 = 4;
  return (id)_MergedGlobals_29_0[v2];
}

BOOL _dontCrossfadeBarButtonItems(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  int v7;
  uint64_t v8;
  _BOOL8 v9;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;

  v3 = a1;
  v4 = a2;
  if (objc_msgSend(v3, "count") == 1 && objc_msgSend(v4, "count") == 1)
  {
    objc_msgSend(v3, "lastObject");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "lastObject");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v5, "isSystemItem");
    if (v7 != objc_msgSend(v6, "isSystemItem"))
      goto LABEL_9;
    if (objc_msgSend(v5, "isSystemItem"))
    {
      v8 = objc_msgSend(v5, "systemItem");
      if (v8 == objc_msgSend(v6, "systemItem"))
      {
        v9 = 1;
LABEL_10:

        goto LABEL_11;
      }
    }
    if ((objc_msgSend(v5, "isSystemItem") & 1) != 0)
    {
LABEL_9:
      v9 = 0;
      goto LABEL_10;
    }
    objc_msgSend(v5, "title");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (!objc_msgSend(v11, "length"))
      goto LABEL_17;
    objc_msgSend(v5, "title");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "title");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v12, "isEqualToString:", v13) & 1) != 0)
    {
      objc_msgSend(v5, "view");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "frame");
      v16 = v15;
      v18 = v17;
      objc_msgSend(v6, "view");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "frame");
      v21 = v20;
      v23 = v22;

      v9 = 0;
      if (v16 != v21 || v18 != v23)
        goto LABEL_10;
      objc_msgSend(v5, "backgroundImageForState:style:barMetrics:", 0, objc_msgSend(v5, "style"), 0);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      if (v11)
      {
LABEL_17:
        v9 = 0;
LABEL_20:

        goto LABEL_10;
      }
      objc_msgSend(v6, "backgroundImageForState:style:barMetrics:", 0, objc_msgSend(v6, "style"), 0);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = v12 == 0;
    }
    else
    {

      v9 = 0;
    }

    goto LABEL_20;
  }
  v9 = 0;
LABEL_11:

  return v9;
}

double _hitAreaRightEdge(void *a1, void *a2, double a3)
{
  id v5;
  double width;
  double MaxX;
  CGRect v9;
  CGRect v10;

  v5 = a2;
  objc_msgSend(a1, "frame");
  width = v9.size.width;
  MaxX = CGRectGetMaxX(v9);
  if (v5)
  {
    objc_msgSend(v5, "frame");
    a3 = (MaxX + CGRectGetMinX(v10)) * 0.5;
  }

  return fmin(MaxX + fmin(width * 0.5, 20.0), a3);
}

double _hitAreaLeftEdge(void *a1, void *a2, double a3)
{
  id v5;
  double width;
  double MinX;
  CGRect v9;
  CGRect v10;

  v5 = a1;
  objc_msgSend(a2, "frame");
  width = v9.size.width;
  MinX = CGRectGetMinX(v9);
  if (v5)
  {
    objc_msgSend(v5, "frame");
    a3 = (MinX + CGRectGetMaxX(v10)) * 0.5;
  }

  return fmax(a3, MinX - fmin(width * 0.5, 20.0));
}

BOOL _UIPointInsideNavigationBarTouchExtremaForBackButton(void *a1, int a2, double a3, CGFloat a4, double a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  double v15;
  CGRect v17;

  v15 = _UINavigationBarTouchExtremaForBackButtonView(a1, a3);
  if (!a2)
    return a4 <= v15;
  v17.origin.x = a6;
  v17.origin.y = a7;
  v17.size.width = a8;
  v17.size.height = a9;
  return a4 >= CGRectGetMaxX(v17) - v15;
}

double _UINavigationBarTouchExtremaForBackButtonView(void *a1, double a2)
{
  id v3;
  double v4;
  double v5;
  void *v6;
  void *v7;
  uint64_t v8;
  double v9;
  double v10;

  v3 = a1;
  objc_msgSend(v3, "frame");
  v5 = a2 + a2 + v4;
  v6 = (void *)UIApp;
  objc_msgSend(v3, "window");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v8 = objc_msgSend(v6, "_safeInterfaceOrientationForWindowIfExists:", v7);
  v9 = 100.0;
  if ((unint64_t)(v8 - 3) < 2)
    v9 = 75.0;
  v10 = fmax(v5, v9);

  _UIControlMostlyInsideEdgeInsets();
  return v10;
}

void ____slideTransitionFadeMaskImage_block_invoke()
{
  uint64_t v0;
  void *v1;

  +[UIImage kitImageNamed:](UIImage, "kitImageNamed:", CFSTR("UINavigationBarTitleTransitionMask"));
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)qword_1ECD7A228;
  qword_1ECD7A228 = v0;

}

void ____slideTransitionFadeMaskImage_block_invoke_2()
{
  double v0;
  double v1;
  double v2;
  double v3;
  UIGraphicsImageRenderer *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  UIGraphicsImageRenderer *v8;
  _QWORD v9[6];

  objc_msgSend((id)qword_1ECD7A228, "size");
  v1 = v0;
  v3 = v2;
  v4 = [UIGraphicsImageRenderer alloc];
  objc_msgSend((id)qword_1ECD7A228, "imageRendererFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = -[UIGraphicsImageRenderer initWithSize:format:](v4, "initWithSize:format:", v5, v1, v3);

  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = ____slideTransitionFadeMaskImage_block_invoke_3;
  v9[3] = &__block_descriptor_48_e40_v16__0__UIGraphicsImageRendererContext_8l;
  *(double *)&v9[4] = v1;
  *(double *)&v9[5] = v3;
  -[UIGraphicsImageRenderer imageWithActions:](v8, "imageWithActions:", v9);
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = (void *)qword_1ECD7A230;
  qword_1ECD7A230 = v6;

}

uint64_t ____slideTransitionFadeMaskImage_block_invoke_3(uint64_t a1, void *a2)
{
  CGContext *v3;

  v3 = (CGContext *)objc_msgSend(a2, "CGContext");
  CGContextTranslateCTM(v3, *(CGFloat *)(a1 + 32), 0.0);
  CGContextScaleCTM(v3, -1.0, 1.0);
  return objc_msgSend((id)qword_1ECD7A228, "drawAtPoint:blendMode:alpha:", 17, *MEMORY[0x1E0C9D538], *(double *)(MEMORY[0x1E0C9D538] + 8), 1.0);
}

void sub_18589CB24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18589CECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1858A1188(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _clippingMaskForFrame(void *a1, void *a2, _QWORD *a3, _QWORD *a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  id v15;
  id v16;
  id v17;
  double Width;
  double Height;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  id v27;
  double v28;
  CGFloat v29;
  id v30;
  id v31;
  double v32;
  double v33;
  id v34;
  id v35;
  double v36;
  CGFloat v37;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;

  v15 = a1;
  v16 = a2;
  v17 = objc_alloc_init(MEMORY[0x1E0CD27A8]);
  v39.origin.x = a5;
  v39.origin.y = a6;
  v39.size.width = a7;
  v39.size.height = a8;
  Width = CGRectGetWidth(v39);
  v40.origin.x = a5;
  v40.origin.y = a6;
  v40.size.width = a7;
  v40.size.height = a8;
  Height = CGRectGetHeight(v40);
  objc_msgSend(v17, "setBounds:", 0.0, 0.0, Width, Height);
  v20 = *MEMORY[0x1E0C9D538];
  v21 = *(double *)(MEMORY[0x1E0C9D538] + 8);
  objc_msgSend(v17, "setAnchorPoint:", *MEMORY[0x1E0C9D538], v21);
  objc_msgSend(v17, "setPosition:", a5, a6);
  objc_msgSend(v15, "size");
  v23 = v22;
  objc_msgSend(v16, "size");
  v25 = v24;
  if (v15)
  {
    v26 = objc_alloc_init(MEMORY[0x1E0CD27A8]);
    v27 = objc_retainAutorelease(v15);
    objc_msgSend(v26, "setContents:", objc_msgSend(v27, "CGImage"));
    objc_msgSend(v27, "size");
    _positionMaskWithSizeInBounds(v26, 0, v28, v29, 0.0, 0.0, Width, Height);
    objc_msgSend(v26, "setAnchorPoint:", v20, v21);
    objc_msgSend(v27, "scale");
    objc_msgSend(v26, "setContentsScale:");
    if (a3)
      *a3 = objc_retainAutorelease(v26);
    objc_msgSend(v17, "addSublayer:", v26);

  }
  v30 = objc_alloc_init(MEMORY[0x1E0CD27A8]);
  +[UIColor redColor](UIColor, "redColor");
  v31 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  objc_msgSend(v30, "setBackgroundColor:", objc_msgSend(v31, "CGColor"));

  v41.origin.x = 0.0;
  v41.origin.y = 0.0;
  v41.size.width = Width;
  v41.size.height = Height;
  v32 = fmax(CGRectGetWidth(v41) - v23 - v25, 0.0);
  v42.origin.x = 0.0;
  v42.origin.y = 0.0;
  v42.size.width = Width;
  v42.size.height = Height;
  objc_msgSend(v30, "setBounds:", 0.0, 0.0, v32, CGRectGetHeight(v42));
  objc_msgSend(v30, "setAnchorPoint:", v20, v21);
  v43.origin.x = 0.0;
  v43.origin.y = 0.0;
  v43.size.width = Width;
  v43.size.height = Height;
  v33 = v23 + CGRectGetMinX(v43);
  v44.origin.x = 0.0;
  v44.origin.y = 0.0;
  v44.size.width = Width;
  v44.size.height = Height;
  objc_msgSend(v30, "setPosition:", v33, CGRectGetMinY(v44));
  if (a4)
    *a4 = objc_retainAutorelease(v30);
  objc_msgSend(v17, "addSublayer:", v30);
  if (v16)
  {
    v34 = objc_alloc_init(MEMORY[0x1E0CD27A8]);
    v35 = objc_retainAutorelease(v16);
    objc_msgSend(v34, "setContents:", objc_msgSend(v35, "CGImage"));
    objc_msgSend(v35, "size");
    _positionMaskWithSizeInBounds(v34, 1, v36, v37, 0.0, 0.0, Width, Height);
    objc_msgSend(v34, "setAnchorPoint:", v20, v21);
    objc_msgSend(v35, "scale");
    objc_msgSend(v34, "setContentsScale:");
    objc_msgSend(v17, "addSublayer:", v34);
    if (a3)
      *a3 = objc_retainAutorelease(v34);

  }
  return v17;
}

void _positionMaskWithSizeInBounds(void *a1, int a2, double a3, CGFloat Height, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  double v15;
  double MinY;
  id v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;

  v17 = a1;
  if (fabs(Height + -1.0) < 2.22044605e-16)
  {
    v18.origin.x = a5;
    v18.origin.y = a6;
    v18.size.width = a7;
    v18.size.height = a8;
    Height = CGRectGetHeight(v18);
  }
  v15 = 0.0;
  objc_msgSend(v17, "setBounds:", 0.0, 0.0, a3, Height);
  if (a2)
  {
    v19.origin.x = a5;
    v19.origin.y = a6;
    v19.size.width = a7;
    v19.size.height = a8;
    v15 = CGRectGetMaxX(v19) - a3;
  }
  v20.origin.x = a5;
  v20.origin.y = a6;
  v20.size.width = a7;
  v20.size.height = a8;
  MinY = CGRectGetMinY(v20);
  v21.origin.x = a5;
  v21.origin.y = a6;
  v21.size.width = a7;
  v21.size.height = a8;
  objc_msgSend(v17, "setPosition:", v15, MinY + (CGRectGetHeight(v21) - Height) * 0.5);

}

id _slideTransitionFadeMaskImage(int a1)
{
  uint64_t *v2;

  if (qword_1ECD7CD78 == -1)
  {
    if ((a1 & 1) != 0)
      goto LABEL_5;
  }
  else
  {
    dispatch_once(&qword_1ECD7CD78, &__block_literal_global_62);
    if ((a1 & 1) != 0)
      goto LABEL_5;
  }
  if (qword_1ECD7CD80 != -1)
    dispatch_once(&qword_1ECD7CD80, &__block_literal_global_5_1);
LABEL_5:
  v2 = &_MergedGlobals_964;
  if (!a1)
    v2 = &qword_1ECD7CD70;
  return (id)*v2;
}

void ___slideTransitionFadeMaskImage_block_invoke()
{
  uint64_t v0;
  void *v1;

  +[UIImage kitImageNamed:](UIImage, "kitImageNamed:", CFSTR("UINavigationBarTitleTransitionMask"));
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)_MergedGlobals_964;
  _MergedGlobals_964 = v0;

}

void ___slideTransitionFadeMaskImage_block_invoke_2()
{
  double v0;
  double v1;
  double v2;
  double v3;
  UIGraphicsImageRenderer *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  UIGraphicsImageRenderer *v8;
  _QWORD v9[6];

  objc_msgSend((id)_MergedGlobals_964, "size");
  v1 = v0;
  v3 = v2;
  v4 = [UIGraphicsImageRenderer alloc];
  objc_msgSend((id)_MergedGlobals_964, "imageRendererFormat");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = -[UIGraphicsImageRenderer initWithSize:format:](v4, "initWithSize:format:", v5, v1, v3);

  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = ___slideTransitionFadeMaskImage_block_invoke_3;
  v9[3] = &__block_descriptor_48_e40_v16__0__UIGraphicsImageRendererContext_8l;
  *(double *)&v9[4] = v1;
  *(double *)&v9[5] = v3;
  -[UIGraphicsImageRenderer imageWithActions:](v8, "imageWithActions:", v9);
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = (void *)qword_1ECD7CD70;
  qword_1ECD7CD70 = v6;

}

uint64_t ___slideTransitionFadeMaskImage_block_invoke_3(uint64_t a1, void *a2)
{
  CGContext *v3;

  v3 = (CGContext *)objc_msgSend(a2, "CGContext");
  CGContextTranslateCTM(v3, *(CGFloat *)(a1 + 32), 0.0);
  CGContextScaleCTM(v3, -1.0, 1.0);
  return objc_msgSend((id)_MergedGlobals_964, "drawAtPoint:blendMode:alpha:", 17, *MEMORY[0x1E0C9D538], *(double *)(MEMORY[0x1E0C9D538] + 8), 1.0);
}

__CFString *StringForAlignment(unint64_t a1)
{
  if (a1 < 4)
    return off_1E16B62F0[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown(%li)"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *StringForContentSize(unint64_t a1)
{
  if (a1 < 4)
    return off_1E16B6310[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown(%li)"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1858A5A4C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void __addItemsFromBarForMode(void *a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;

  v9 = a1;
  v5 = a2;
  v6 = v5;
  if (v5)
  {
    if (a3 == 2)
    {
      objc_msgSend(v5, "elementsRepresentingOrderedGroups");
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_6;
    }
    if (a3 == 1)
    {
      objc_msgSend(v5, "elementsForOverflowMenu");
      v7 = objc_claimAutoreleasedReturnValue();
LABEL_6:
      v8 = (void *)v7;
      objc_msgSend(v9, "addObjectsFromArray:", v7);

    }
  }

}

void sub_1858A6454(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void _UINavigationBarExcessiveLineHeightOutsetsForFontInView(uint64_t a1, void *a2)
{
  id v2;

  if (a1)
  {
    v2 = a2;
    CTFontGetLanguageAwareOutsets();
    UICeilToViewScale(v2);
    UICeilToViewScale(v2);
    UICeilToViewScale(v2);
    UICeilToViewScale(v2);

  }
}

double _distanceFromLargeTitleToBackButton(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  double v11;

  v5 = a3;
  v6 = a2;
  objc_msgSend(a1, "titleLabel");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "superview");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "center");
  objc_msgSend(v8, "convertPoint:toView:", v5);
  v10 = v9;

  v11 = _distanceFromPointToBackButton(v6, v5, 1, 0, v10);
  return v11;
}

double _titleTransitionAdjustmentFromLargeTitleToBackButton(void *a1, void *a2)
{
  id v3;
  id v4;
  double v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  double Width;
  CGRect v16;
  CGRect v17;

  v3 = a1;
  v4 = a2;
  v5 = 0.0;
  if (_textDiffersBetweenLargeTitleAndBackButtonLayouts(v3, v4))
  {
    objc_msgSend(v4, "backButton");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "visualProvider");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "contentView");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "titleLabel");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    v10 = (void *)objc_opt_new();
    objc_msgSend(v9, "font");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setFont:", v11);

    objc_msgSend(v3, "titleLabel");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "text");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setText:", v13);

    objc_msgSend(v10, "sizeToFit");
    objc_msgSend(v10, "bounds");
    Width = CGRectGetWidth(v16);
    objc_msgSend(v9, "bounds");
    v5 = (Width - CGRectGetWidth(v17)) * 0.5;

  }
  return v5;
}

void _updateBackButtonSpacingForButton(void *a1, int a2, double a3, double a4)
{
  void *v7;
  double v8;
  double v9;
  double v10;
  id v11;

  if (a1)
  {
    objc_msgSend(a1, "visualProvider");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "contentView");
    v11 = (id)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v11, "center");
    v10 = -a3;
    if (!a2)
      v10 = a3;
    objc_msgSend(v11, "setCenter:", v10 + v8, a4 + v9);

  }
}

uint64_t _textDiffersBetweenLargeTitleAndBackButtonLayouts(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;

  v3 = a2;
  objc_msgSend(a1, "titleLabel");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "text");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "backButton");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "visualProvider");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "contentView");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v8, "titleLabel");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "text");
    v10 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v10 = 0;
  }
  v11 = objc_msgSend(v5, "isEqualToString:", v10) ^ 1;

  return v11;
}

double _distanceFromTitleToBackButton(void *a1, void *a2, void *a3, int a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  char v13;
  void *v14;
  CGFloat MaxX;
  double v19;

  v7 = a1;
  v8 = a2;
  v9 = a3;
  objc_msgSend(v8, "currentBackButtonTitle");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "titleControl");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "title");
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  v13 = 0;
  if (v12 && v10)
    v13 = objc_msgSend(v12, "isEqualToString:", v10);

  objc_msgSend(v7, "titleControl");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "center");
  if ((v13 & 1) == 0)
  {
    objc_msgSend(v14, "frame");
    if (a4)
      MaxX = CGRectGetMaxX(*(CGRect *)&MaxX);
  }
  v19 = _distanceFromPointToBackButton(v8, v9, v13, a4, MaxX);

  return v19;
}

void _performAdditionalTitleViewClipping(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  int v14;
  void *v15;
  void *v16;
  uint64_t v17;
  CGFloat v21;
  void *v22;
  CGFloat v23;
  void *v24;
  double v25;
  void *v26;
  void *v27;
  CGFloat v28;
  void *v29;
  CGFloat MaxX;
  void *v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  _BOOL4 v36;
  void *v37;
  double v38;
  void *v39;
  double v40;
  void *v41;
  id v42;
  void *v43;
  void *v44;
  void *v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  CGFloat v68;
  void *v69;
  CGFloat v70;
  void *v71;
  void *v72;
  void *v73;
  CGFloat v74;
  double v75;
  void *v76;
  void *v77;
  CGFloat MinX;
  void *v79;
  uint64_t v80;
  id v81;
  CGRect v82;
  CGRect v83;

  v81 = a1;
  v5 = a2;
  v6 = a3;
  v7 = objc_msgSend(v81, "transition");
  if (v7 == 1)
    v8 = v5;
  else
    v8 = v6;
  v9 = v8;
  objc_msgSend(v9, "backButton");
  v10 = objc_claimAutoreleasedReturnValue();
  if (v10)
  {
    v11 = (void *)v10;
    v12 = objc_msgSend(v9, "leadingGroupsMode");

    if (v12 == 1)
    {
      objc_msgSend(v9, "titleControl");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = objc_msgSend(v81, "isRTL");
      objc_msgSend(v9, "leadingBar");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "view");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "frame");
      if (v14)
      {
        v21 = CGRectGetMinX(*(CGRect *)&v17) + 16.0;

        _slideTransitionFadeMaskImage(0);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        v23 = 0.0;
        v24 = v13;
        v25 = v21;
        v26 = 0;
        v27 = v22;
      }
      else
      {
        v28 = CGRectGetMaxX(*(CGRect *)&v17) + -16.0;

        objc_msgSend(v81, "contentView");
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v29, "bounds");
        MaxX = CGRectGetMaxX(v82);

        _slideTransitionFadeMaskImage(1);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        v24 = v13;
        v23 = v28;
        v25 = MaxX;
        v26 = v22;
        v27 = 0;
      }
      _wrapViewInClippingView(v24, v26, v27, v23, v25);
      v31 = (void *)objc_claimAutoreleasedReturnValue();

      -[_UINavigationBarTransitionContext _addClippingView:]((uint64_t)v81, v31);
    }
  }
  if (v7 == 1)
    v32 = v6;
  else
    v32 = v5;
  v33 = v32;

  objc_msgSend(v5, "trailingClippingItem");
  v34 = objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "trailingClippingItem");
  v35 = objc_claimAutoreleasedReturnValue();
  v36 = v34 != 0;
  if (v34 | v35)
  {
    objc_msgSend(v33, "titleControl");
    v80 = objc_claimAutoreleasedReturnValue();
    if (v34 && v35)
    {
      objc_msgSend(v81, "contentView");
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      v38 = _distanceFromTrailingItemToCenterOfView((void *)v34, v37, objc_msgSend(v81, "isRTL"));

      objc_msgSend(v81, "contentView");
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      v40 = _distanceFromTrailingItemToCenterOfView((void *)v35, v39, objc_msgSend(v81, "isRTL"));

      v36 = v38 < v40;
    }
    if (v36)
      v41 = (void *)v34;
    else
      v41 = (void *)v35;
    v42 = v41;
    objc_msgSend(v42, "view");
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v43, "superview");
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v42, "view");
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v45, "frame");
    v47 = v46;
    v49 = v48;
    v51 = v50;
    v53 = v52;
    objc_msgSend(v81, "contentView");
    v54 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v44, "convertRect:toView:", v54, v47, v49, v51, v53);
    v56 = v55;
    v58 = v57;
    v60 = v59;
    v62 = v61;

    v63 = objc_msgSend(v81, "isRTL");
    v64 = v56;
    v65 = v58;
    v66 = v60;
    v67 = v62;
    if (v63)
    {
      v68 = CGRectGetMaxX(*(CGRect *)&v64);
      objc_msgSend(v81, "contentView");
      v69 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v69, "bounds");
      v70 = CGRectGetMaxX(v83);

      _slideTransitionFadeMaskImage(1);
      v71 = (void *)objc_claimAutoreleasedReturnValue();
      v72 = (void *)v80;
      v73 = (void *)v80;
      v74 = v68;
      v75 = v70;
      v76 = v71;
      v77 = 0;
    }
    else
    {
      MinX = CGRectGetMinX(*(CGRect *)&v64);
      _slideTransitionFadeMaskImage(0);
      v71 = (void *)objc_claimAutoreleasedReturnValue();
      v74 = 0.0;
      v72 = (void *)v80;
      v73 = (void *)v80;
      v75 = MinX;
      v76 = 0;
      v77 = v71;
    }
    _wrapViewInClippingView(v73, v76, v77, v74, v75);
    v79 = (void *)objc_claimAutoreleasedReturnValue();

    -[_UINavigationBarTransitionContext _addClippingView:]((uint64_t)v81, v79);
  }

}

UIView *_wrapViewInClippingView(void *a1, void *a2, void *a3, CGFloat a4, double a5)
{
  id v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  CGFloat v16;
  double v17;
  void *v18;
  void *v19;
  double Height;
  double v21;
  double v22;
  UIView *v23;
  void *v24;
  void *v25;
  CGRect v27;
  CGRect v28;
  CGRect v29;

  v9 = a1;
  v10 = a2;
  v11 = a3;
  objc_msgSend(v9, "superview");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "bounds");
  v14 = v13;
  v16 = v15;
  v17 = a5 - a4;
  objc_msgSend(v12, "layer");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "presentationLayer");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "bounds");
  Height = CGRectGetHeight(v27);

  v28.origin.x = a4;
  v28.origin.y = v14;
  v28.size.width = v17;
  v28.size.height = v16;
  v21 = CGRectGetHeight(v28);
  if (Height >= v21)
    v22 = Height;
  else
    v22 = v21;
  v23 = -[UIView initWithFrame:]([UIView alloc], "initWithFrame:", a4, v14, v17, v22);
  -[UIView setBounds:](v23, "setBounds:", a4, v14, v17, v22);
  -[UIView setClipsToBounds:](v23, "setClipsToBounds:", 1);
  -[UIView setUserInteractionEnabled:](v23, "setUserInteractionEnabled:", 0);
  v29.origin.x = a4;
  v29.origin.y = v14;
  v29.size.width = v17;
  v29.size.height = v22;
  if (fabs(CGRectGetHeight(v29)) >= 2.22044605e-16)
  {
    objc_msgSend(v12, "insertSubview:belowSubview:", v23, v9);
    -[UIView addSubview:](v23, "addSubview:", v9);
  }
  if (v10 | v11)
  {
    _clippingMaskForFrame((void *)v10, (void *)v11, 0, 0, a4, v14, v17, v22);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    -[UIView layer](v23, "layer");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "setMask:", v24);

  }
  return v23;
}

uint64_t _searchBarHasAlphaTransitionForSlideTransitionLayouts(void *a1, void *a2, char a3, int a4)
{
  id v4;
  id *v8;
  id *v9;
  id v10;
  BOOL v11;
  _BOOL4 v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  _BOOL4 v18;
  _BOOL4 v19;
  id v20;
  id v21;
  void *v22;
  _BOOL4 v23;
  id v24;
  _BOOL4 v25;
  id v26;
  _BOOL4 v27;
  _BOOL4 v28;
  int v29;
  int v31;
  uint64_t v34;

  v8 = a1;
  v9 = a2;
  if (v8)
  {
    v10 = v8[30];
    v11 = v10 == 0;
    if (v10)
    {
      if (!v9)
      {
        v4 = 0;
        goto LABEL_5;
      }
      v4 = v9[30];
      if (!v4)
      {
LABEL_5:
        v12 = 1;
LABEL_14:

        goto LABEL_15;
      }
    }
    v13 = v8[30];
    if (v13)
    {

      if (!v10)
      {
        v12 = 0;
        goto LABEL_16;
      }
      v12 = 0;
      goto LABEL_14;
    }
  }
  else
  {
    v10 = 0;
    v11 = 1;
  }
  if (v9)
    v14 = v9[30];
  else
    v14 = 0;
  v15 = v14;
  v12 = v15 != 0;

  if (!v11)
    goto LABEL_14;
LABEL_15:

  if (!v8)
  {
    v19 = 0;
    v18 = 0;
    v20 = 0;
    goto LABEL_27;
  }
LABEL_16:
  v16 = v8[30];
  if (v16)
  {
    if (v9)
    {
      v17 = v9[30];
      if (v17)
      {
        v18 = v8[31] != v9[31];
LABEL_25:

        goto LABEL_26;
      }
    }
    else
    {
      v17 = 0;
    }
    v18 = 0;
    goto LABEL_25;
  }
  v18 = 0;
LABEL_26:

  v19 = *((double *)v8 + 34) > 0.0;
  v20 = v8[30];
LABEL_27:
  v21 = v20;
  v22 = v21;
  if (v9)
  {
    v23 = *((double *)v9 + 34) > 0.0;
    v24 = v9[30];
  }
  else
  {
    v23 = 0;
    v24 = 0;
  }
  v25 = v21 != 0;
  v26 = v24;
  if ((a3 & 1) != 0)
  {
    v27 = v19;
    v28 = v22 != 0;
    v19 = v23;
    v25 = v26 != 0;
    if (!v23)
      goto LABEL_37;
  }
  else
  {
    a4 ^= 1u;
    v27 = v23;
    v28 = v26 != 0;
    if (!v19)
      goto LABEL_37;
  }
  if (v25)
  {
    if (v28 || v27)
      v29 = 0;
    else
      v29 = a4 ^ 1;
    goto LABEL_58;
  }
LABEL_37:
  if (v19 || !v25)
  {
    v31 = v19 || v27 || v25;
    if (v28 && v31 == 0)
      v29 = a4;
    else
      v29 = 0;
  }
  else if ((a4 & 1) != 0)
  {
    v29 = !v27 && v28;
  }
  else
  {
    v29 = !v27 || !v28;
  }
LABEL_58:
  v34 = v29 | v12 | v18;

  return v34;
}

BOOL _shouldScaleLargeTitleToBackButton(void *a1, void *a2, void *a3, int a4)
{
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  double Height;
  void *v15;
  void *v16;
  double v17;
  _BOOL8 v18;
  CGRect v20;

  v7 = a1;
  v8 = a2;
  v9 = a3;
  if (a4)
  {
    v10 = objc_msgSend(v7, "twoLineMode");
    v11 = v7;
  }
  else
  {
    v10 = objc_msgSend(v8, "twoLineMode");
    v11 = v8;
  }
  if (v10 == 1)
  {
    objc_msgSend(v11, "titleLabel");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "contentView");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "bounds");
    objc_msgSend(v12, "textRectForBounds:limitedToNumberOfLines:", 2);
    Height = CGRectGetHeight(v20);

    objc_msgSend(v11, "titleLabel");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "font");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "pointSize");
    v18 = floor(Height / v17) < 2.0;

  }
  else
  {
    v18 = 1;
  }

  return v18;
}

void _updateLargeTitleSpacingForLayout(void *a1, double a2, double a3, double a4, double a5)
{
  id v9;

  objc_msgSend(a1, "titleLabel");
  v9 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setCenter:", a2 + a4, a3 + a5);

}

double _hiddenLargeTitleMinY(void *a1, void *a2, int a3)
{
  id v5;
  void **v6;
  void **v7;
  double v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double MinY;
  double MaxY;
  double Height;
  double v18;
  double v19;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;

  v5 = a1;
  v6 = a2;
  v7 = v6;
  if (v6)
  {
    v8 = -[_UINavigationBarLayout _layoutFrameFor:withOrder:]((uint64_t)v6, v6[4], 60);
    v10 = v9;
    v12 = v11;
    v14 = v13;
  }
  else
  {
    v10 = 0.0;
    v12 = 0.0;
    v14 = 0.0;
    v8 = 0.0;
  }
  v21.origin.x = v8;
  v21.origin.y = v10;
  v21.size.width = v12;
  v21.size.height = v14;
  MinY = CGRectGetMinY(v21);
  if (a3)
  {
    v22.origin.x = -[_UINavigationBarLayout contentViewLayoutFrame]((uint64_t)v5);
    MaxY = CGRectGetMaxY(v22);
    v23.origin.x = v8;
    v23.origin.y = v10;
    v23.size.width = v12;
    v23.size.height = v14;
    Height = CGRectGetHeight(v23);
  }
  else
  {
    MaxY = MinY;
    v24.origin.x = -[_UINavigationBarLayout searchBarLayoutFrame]((uint64_t)v7);
    v18 = CGRectGetMinY(v24);
    v25.origin.x = -[_UINavigationBarLayout searchBarLayoutFrame]((uint64_t)v5);
    Height = v18 - CGRectGetMinY(v25);
  }
  v19 = MaxY - Height;

  return v19;
}

double _distanceFromPointToBackButton(void *a1, void *a2, char a3, int a4, double a5)
{
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  double v16;
  double MaxX;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v27;
  void *v29;
  void *v30;
  CGRect v31;

  v9 = a2;
  objc_msgSend(a1, "backButton");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if (v10)
  {
    objc_msgSend(v10, "visualProvider");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "contentView");
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v13)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CGSize _distanceFromPointToBackButton(CGPoint, _UINavigationBarContentViewLayout *__strong, _UINavigationBarContentView *__strong, BOOL, BOOL)");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "handleFailureInFunction:file:lineNumber:description:", v30, CFSTR("_UINavigationBarTransitionContext.m"), 611, CFSTR("Cannot transition a back button with no content view"));

    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0
      && (objc_msgSend(v13, "titleLabel"), v14 = (void *)objc_claimAutoreleasedReturnValue(), v14, v14))
    {
      objc_msgSend(v13, "titleLabel");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "center");
      if ((a3 & 1) != 0)
      {
        MaxX = v16;
      }
      else
      {
        objc_msgSend(v15, "frame");
        MaxX = v23;
        if (a4)
        {
          MaxX = CGRectGetMaxX(*(CGRect *)&v23);
          objc_msgSend(v15, "frame");
        }
      }
      objc_msgSend(v13, "convertPoint:toView:", v9, MaxX);
      v22 = v27;

    }
    else
    {
      objc_msgSend(v13, "frame");
      if (a4)
      {
        objc_msgSend(v13, "frame");
        v19 = CGRectGetMaxX(v31);
        objc_msgSend(v13, "frame");
      }
      else
      {
        v19 = v18;
      }
      objc_msgSend(v11, "convertPoint:toView:", v9, v19);
      v22 = v21;
    }
    v20 = a5 - v22;

  }
  else
  {
    v20 = *MEMORY[0x1E0C9D820];
  }

  return v20;
}

void _applyStretchTransformForTitleViewAndBackButtonLayout(int a1, void *a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  void *v15;
  void *v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  __int128 v26;
  CGAffineTransform *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  CGAffineTransform v36;
  CGAffineTransform v37;
  _OWORD v38[3];
  CGAffineTransform v39;
  CGAffineTransform v40;
  _OWORD v41[3];
  CGAffineTransform v42;
  CGAffineTransform v43;
  _OWORD v44[3];
  _OWORD v45[3];
  CGAffineTransform v46;
  CGAffineTransform v47;
  _OWORD v48[3];
  CGAffineTransform v49;
  CGAffineTransform v50;
  _OWORD v51[3];
  CGAffineTransform v52;
  CGAffineTransform v53;
  _OWORD v54[3];
  _OWORD v55[2];
  __int128 v56;

  v5 = a2;
  if (v5)
  {
    objc_msgSend(a3, "backButton");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "visualProvider");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "contentView");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
LABEL_26:

      goto LABEL_27;
    }
    v9 = v8;
    objc_msgSend(v9, "titleLabel");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "text");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "text");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v11, "isEqualToString:", v12) & 1) != 0)
    {
      objc_msgSend(v9, "titleLabel");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = objc_msgSend(v13, "isHidden");

      if (!v14)
        goto LABEL_11;
    }
    else
    {

    }
    if (a1 == 2)
    {
      a1 = 3;
    }
    else
    {
      if (a1 != 5)
      {
LABEL_25:

        goto LABEL_26;
      }
      a1 = 6;
    }
LABEL_11:
    objc_msgSend(v9, "titleLabel");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v15, "isHidden")
      && (objc_msgSend(v15, "text"), v16 = (void *)objc_claimAutoreleasedReturnValue(), v16, !v16))
    {
      objc_msgSend(v9, "imageView");
      v17 = (void *)objc_claimAutoreleasedReturnValue();

      if (a1 == 6)
      {
        objc_msgSend(v5, "bounds");
        objc_msgSend(v17, "bounds");
        v35 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 16);
        v55[0] = *MEMORY[0x1E0C9BAA8];
        v34 = v55[0];
        v55[1] = v35;
        v56 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 32);
        v33 = v56;
        objc_msgSend(v5, "setTransform:", v55);
        v54[0] = v34;
        v54[1] = v35;
        v54[2] = v33;
        v27 = (CGAffineTransform *)v54;
LABEL_23:
        objc_msgSend(v17, "setTransform:", v27);
LABEL_24:

        goto LABEL_25;
      }
    }
    else
    {
      v17 = v15;
    }
    objc_msgSend(v5, "bounds");
    v19 = v18;
    v21 = v20;
    objc_msgSend(v17, "bounds");
    v24 = v22;
    v25 = v23;
    switch(a1)
    {
      case 1:
        CGAffineTransformMakeScale(&v53, v22 / v19, 1.0);
        v52 = v53;
        objc_msgSend(v5, "setTransform:", &v52);
        v26 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 16);
        v51[0] = *MEMORY[0x1E0C9BAA8];
        v51[1] = v26;
        v51[2] = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 32);
        v27 = (CGAffineTransform *)v51;
        goto LABEL_23;
      case 2:
        CGAffineTransformMakeScale(&v50, v22 / v19, v23 / v21);
        v49 = v50;
        objc_msgSend(v5, "setTransform:", &v49);
        v28 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 16);
        v48[0] = *MEMORY[0x1E0C9BAA8];
        v48[1] = v28;
        v48[2] = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 32);
        v27 = (CGAffineTransform *)v48;
        goto LABEL_23;
      case 3:
        CGAffineTransformMakeScale(&v47, v23 / v21, v23 / v21);
        v46 = v47;
        objc_msgSend(v5, "setTransform:", &v46);
        v29 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 16);
        v45[0] = *MEMORY[0x1E0C9BAA8];
        v45[1] = v29;
        v45[2] = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 32);
        v27 = (CGAffineTransform *)v45;
        goto LABEL_23;
      case 4:
        v30 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 16);
        v44[0] = *MEMORY[0x1E0C9BAA8];
        v44[1] = v30;
        v44[2] = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 32);
        objc_msgSend(v5, "setTransform:", v44);
        CGAffineTransformMakeScale(&v43, v19 / v24, 1.0);
        v42 = v43;
        v27 = &v42;
        goto LABEL_23;
      case 5:
        v31 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 16);
        v41[0] = *MEMORY[0x1E0C9BAA8];
        v41[1] = v31;
        v41[2] = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 32);
        objc_msgSend(v5, "setTransform:", v41);
        CGAffineTransformMakeScale(&v40, v19 / v24, v21 / v25);
        v39 = v40;
        v27 = &v39;
        goto LABEL_23;
      case 6:
        v32 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 16);
        v38[0] = *MEMORY[0x1E0C9BAA8];
        v38[1] = v32;
        v38[2] = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 32);
        objc_msgSend(v5, "setTransform:", v38);
        CGAffineTransformMakeScale(&v37, v21 / v25, v21 / v25);
        v36 = v37;
        v27 = &v36;
        goto LABEL_23;
      default:
        goto LABEL_24;
    }
    goto LABEL_24;
  }
LABEL_27:

}

double _distanceFromTrailingItemToCenterOfView(void *a1, void *a2, int a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double MaxX;
  double v23;
  double v24;
  CGRect v26;

  v5 = a2;
  v6 = a1;
  objc_msgSend(v6, "view");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "superview");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "view");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "frame");
  objc_msgSend(v8, "convertRect:toView:", v5);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  v18 = v11;
  v19 = v13;
  v20 = v15;
  v21 = v17;
  if (a3)
    MaxX = CGRectGetMaxX(*(CGRect *)&v18);
  else
    MaxX = CGRectGetMinX(*(CGRect *)&v18);
  v23 = MaxX;
  objc_msgSend(v5, "bounds");
  v24 = vabdd_f64(CGRectGetWidth(v26) * 0.5, v23);

  return v24;
}

void _UIUpdateSequenceItemInternal::~_UIUpdateSequenceItemInternal(_UIUpdateSequenceItemInternal *this)
{

}

void _UIUpdateSequenceRemoveItem(_UIUpdateSequenceItemInternal *a1)
{
  int v1;

  if (a1)
  {
    v1 = *((_DWORD *)a1 + 6);
    if ((v1 & 1) != 0)
      *((_DWORD *)a1 + 6) = v1 | 2;
    else
      _removeItem(a1);
  }
}

void _UIUpdateAddCompletionObserver(unint64_t a1, int a2)
{
  _UIUpdateCompletionObservationAddObserver(mainCompletionObservation, a1, a2);
}

void _UIUpdateRemoveCompletionObserver(unint64_t a1, int a2)
{
  _UIUpdateCompletionObservationRemoveObserver((uint64_t)mainCompletionObservation, a1, a2);
}

_QWORD *std::__hash_table<void *,std::hash<void *>,std::equal_to<void *>,std::allocator<void *>>::find<void *>(_QWORD *a1, unint64_t a2)
{
  int8x8_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint8x8_t v6;
  unint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  unint64_t v10;

  v2 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v2)
    return 0;
  v3 = 0x9DDFEA08EB382D69 * (((8 * a2) + 8) ^ HIDWORD(a2));
  v4 = 0x9DDFEA08EB382D69 * (HIDWORD(a2) ^ (v3 >> 47) ^ v3);
  v5 = 0x9DDFEA08EB382D69 * (v4 ^ (v4 >> 47));
  v6 = (uint8x8_t)vcnt_s8(v2);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    v7 = v5;
    if (v5 >= *(_QWORD *)&v2)
      v7 = v5 % *(_QWORD *)&v2;
  }
  else
  {
    v7 = (*(_QWORD *)&v2 - 1) & v5;
  }
  v8 = *(_QWORD **)(*a1 + 8 * v7);
  if (!v8)
    return 0;
  result = (_QWORD *)*v8;
  if (*v8)
  {
    do
    {
      v10 = result[1];
      if (v10 == v5)
      {
        if (result[2] == a2)
          return result;
      }
      else
      {
        if (v6.u32[0] > 1uLL)
        {
          if (v10 >= *(_QWORD *)&v2)
            v10 %= *(_QWORD *)&v2;
        }
        else
        {
          v10 &= *(_QWORD *)&v2 - 1;
        }
        if (v10 != v7)
          return 0;
      }
      result = (_QWORD *)*result;
    }
    while (result);
  }
  return result;
}

uint64_t std::__hash_table<void *,std::hash<void *>,std::equal_to<void *>,std::allocator<void *>>::erase(_QWORD *a1, uint64_t *__p)
{
  int8x8_t v2;
  unint64_t v3;
  uint64_t v4;
  uint8x8_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v2 = (int8x8_t)a1[1];
  v4 = *__p;
  v3 = __p[1];
  v5 = (uint8x8_t)vcnt_s8(v2);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v3 >= *(_QWORD *)&v2)
      v3 %= *(_QWORD *)&v2;
  }
  else
  {
    v3 &= *(_QWORD *)&v2 - 1;
  }
  v6 = *(uint64_t **)(*a1 + 8 * v3);
  do
  {
    v7 = v6;
    v6 = (uint64_t *)*v6;
  }
  while (v6 != __p);
  if (v7 != a1 + 2)
  {
    v8 = v7[1];
    if (v5.u32[0] > 1uLL)
    {
      if (v8 >= *(_QWORD *)&v2)
        v8 %= *(_QWORD *)&v2;
    }
    else
    {
      v8 &= *(_QWORD *)&v2 - 1;
    }
    v9 = *__p;
    if (v8 == v3)
    {
LABEL_20:
      if (!v9)
        goto LABEL_27;
      goto LABEL_21;
    }
  }
  if (!v4)
    goto LABEL_19;
  v10 = *(_QWORD *)(v4 + 8);
  if (v5.u32[0] > 1uLL)
  {
    if (v10 >= *(_QWORD *)&v2)
      v10 %= *(_QWORD *)&v2;
  }
  else
  {
    v10 &= *(_QWORD *)&v2 - 1;
  }
  v9 = *__p;
  if (v10 != v3)
  {
LABEL_19:
    *(_QWORD *)(*a1 + 8 * v3) = 0;
    v9 = *__p;
    goto LABEL_20;
  }
LABEL_21:
  v11 = *(_QWORD *)(v9 + 8);
  if (v5.u32[0] > 1uLL)
  {
    if (v11 >= *(_QWORD *)&v2)
      v11 %= *(_QWORD *)&v2;
  }
  else
  {
    v11 &= *(_QWORD *)&v2 - 1;
  }
  if (v11 != v3)
  {
    *(_QWORD *)(*a1 + 8 * v11) = v7;
    v9 = *__p;
  }
LABEL_27:
  *v7 = v9;
  *__p = 0;
  --a1[3];
  operator delete(__p);
  return v4;
}

void sub_1858B6D04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1858B6E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1858B7124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1858B7B1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1858B8030(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _contentViewFromBarButton(void *a1)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  char v5;

  objc_msgSend(a1, "visualProvider");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "contentView");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v3 = v2;
    objc_msgSend(v3, "imageView");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "isHidden");

    if ((v5 & 1) != 0)
      objc_msgSend(v3, "titleLabel");
    else
      objc_msgSend(v3, "imageView");
    v2 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v2;
}

void __ASSERT_RENAMER_SESSION__(void *a1, void *a2)
{
  id v3;
  _QWORD *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  objc_class *v13;
  void *v14;
  __CFString *v15;
  void *v16;
  void *v17;
  id v18;
  objc_class *v19;
  void *v20;
  __CFString *v21;
  _QWORD *v22;

  v22 = a1;
  v3 = a2;
  v4 = v22;
  if (v22)
  {
    if (v3)
      goto LABEL_3;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void __ASSERT_RENAMER_SESSION__(_UINavigationBarVisualProviderModernIOS *__strong, _UINavigationBarTitleRenamerSession *__strong)");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "handleFailureInFunction:file:lineNumber:description:", v6, CFSTR("_UINavigationBarVisualProviderModernIOS.m"), 1291, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("provider != nil"));

    v4 = 0;
    if (v3)
      goto LABEL_3;
  }
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void __ASSERT_RENAMER_SESSION__(_UINavigationBarVisualProviderModernIOS *__strong, _UINavigationBarTitleRenamerSession *__strong)");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "handleFailureInFunction:file:lineNumber:description:", v8, CFSTR("_UINavigationBarVisualProviderModernIOS.m"), 1292, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("session != nil"));

  v4 = v22;
LABEL_3:
  if ((id)v4[25] != v3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void __ASSERT_RENAMER_SESSION__(_UINavigationBarVisualProviderModernIOS *__strong, _UINavigationBarTitleRenamerSession *__strong)");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "navigationBar");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (v11)
    {
      v12 = (void *)MEMORY[0x1E0CB3940];
      v13 = (objc_class *)objc_opt_class();
      NSStringFromClass(v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "stringWithFormat:", CFSTR("<%@: %p>"), v14, v11);
      v15 = (__CFString *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v15 = CFSTR("(nil)");
    }
    v16 = (void *)v22[25];
    if (v16)
    {
      v17 = (void *)MEMORY[0x1E0CB3940];
      v18 = v16;
      v19 = (objc_class *)objc_opt_class();
      NSStringFromClass(v19);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "stringWithFormat:", CFSTR("<%@: %p>"), v20, v18);
      v21 = (__CFString *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v21 = CFSTR("(nil)");
    }
    objc_msgSend(v9, "handleFailureInFunction:file:lineNumber:description:", v10, CFSTR("_UINavigationBarVisualProviderModernIOS.m"), 1293, CFSTR("This navigation bar (%@) is attached to a different rename session (%@)."), v15, v21);

  }
}

id __renameHandler(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  objc_msgSend(a1, "context");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "_dci_renameHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
  {
    objc_msgSend(v2, "associatedItem");
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    if (v4 != v1)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "_UINavigationItemRenameHandler *__renameHandler(_UINavigationBarTitleRenamerSession *__strong)");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "handleFailureInFunction:file:lineNumber:description:", v6, CFSTR("_UINavigationBarVisualProviderModernIOS.m"), 1300, CFSTR("Rename handler and item are out of sync."));

    }
  }

  return v3;
}

id _nullableCompactScrollEdgeAppearance(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  v3 = a1;
  v4 = a2;
  objc_msgSend(v4, "compactScrollEdgeAppearance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
  {
    v7 = v5;
  }
  else
  {
    objc_msgSend(v3, "compactScrollEdgeAppearance");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = v8;
    if (v8)
    {
      v7 = v8;
    }
    else
    {
      objc_msgSend(v4, "scrollEdgeAppearance");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = v10;
      if (v10)
      {
        v12 = v10;
      }
      else
      {
        objc_msgSend(v3, "scrollEdgeAppearance");
        v12 = (id)objc_claimAutoreleasedReturnValue();
      }
      v7 = v12;

    }
  }

  return v7;
}

id _compactAppearance(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;

  v3 = a1;
  v4 = a2;
  objc_msgSend(v4, "compactAppearance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
  {
    v7 = v5;
  }
  else
  {
    objc_msgSend(v3, "compactAppearance");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = v8;
    if (v8)
    {
      v7 = v8;
    }
    else
    {
      v10 = v3;
      objc_msgSend(v4, "standardAppearance");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = v11;
      if (v11)
      {
        v13 = v11;
      }
      else
      {
        objc_msgSend(v10, "standardAppearance");
        v13 = (id)objc_claimAutoreleasedReturnValue();
      }
      v7 = v13;

    }
  }

  return v7;
}

uint64_t _UINavigationBarAugmentedTitleWantsTwoPartCrossfade(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;

  _UINavigationBarCastToAugmentedTitleView(a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = v1;
  if (v1)
    v3 = objc_msgSend(v1, "_wantsTwoPartTransition");
  else
    v3 = 0;

  return v3;
}

void sub_1858BE940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;
  id *v17;
  uint64_t v18;
  id *v19;

  v19 = v17;
  objc_destroyWeak(v19);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v18 - 48));
  objc_destroyWeak((id *)(v18 - 40));
  _Unwind_Resume(a1);
}

void _confirmIOSorVisionOSVisualProvider(void *a1)
{
  void *v1;
  void *v2;
  id v3;

  v3 = a1;
  if (objc_msgSend(v3, "visualProviderType") != 2
    && objc_msgSend(v3, "visualProviderType") != 4)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void _confirmIOSorVisionOSVisualProvider(_UISearchBarVisualProviderBase *__strong)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("UISearchBar.m"), 1460, CFSTR("Code path only allowed for iOS or visionOS visual provider. This is a UIKit bug."));

  }
}

uint64_t UISearchBarSetForceLegacyAppearance(uint64_t result)
{
  byte_1ECD7B479 = result;
  return result;
}

void _confirmTVOSVisualProvider(void *a1)
{
  void *v1;
  id v2;

  if (objc_msgSend(a1, "visualProviderType") != 3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void _confirmTVOSVisualProvider(_UISearchBarVisualProviderBase *__strong)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("UISearchBar.m"), 2702, CFSTR("Code path not allowed for any visual provider other than TVOS. This is a UIKit bug."));

  }
}

id _UISearchBarBackgroundFillColor(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  void *v6;

  v3 = a2;
  v4 = v3;
  if (v3)
  {
    v5 = v3;
  }
  else if (a1)
  {
    +[UIColor colorWithRed:green:blue:alpha:](UIColor, "colorWithRed:green:blue:alpha:", 0.180392157, 0.180392157, 0.160784314, 1.0);
    v5 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    if ((dyld_program_sdk_at_least() & 1) != 0)
      +[UIColor systemBackgroundColor](UIColor, "systemBackgroundColor");
    else
      +[UIColor _searchBarBackgroundColor](UIColor, "_searchBarBackgroundColor");
    v5 = (id)objc_claimAutoreleasedReturnValue();
  }
  v6 = v5;

  return v6;
}

void ManipulateTextStorage(void *a1, int a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  id WeakRetained;
  void *v9;
  void *v10;
  id *v11;

  v11 = a1;
  v5 = a3;
  objc_msgSend(v11, "inputDelegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "textWillChange:", v11);

  objc_msgSend(v11, "textStorage");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "coordinateEditing:", v5);

  WeakRetained = objc_loadWeakRetained(v11 + 148);
  v9 = WeakRetained;
  if (a2)
    objc_msgSend(WeakRetained, "_searchFieldTokensChanged");
  else
    objc_msgSend(WeakRetained, "_searchFieldTextChanged:", 1);

  objc_msgSend(v11, "inputDelegate");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "textDidChange:", v11);

}

void PreservingSelectionForTokenChange(void *a1, unint64_t a2, uint64_t a3, void *a4)
{
  void (**v7)(_QWORD);
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  void *v14;
  id v15;

  v15 = a1;
  v7 = a4;
  v8 = objc_msgSend(v15, "_selectedNSRange");
  if (v8 == 0x7FFFFFFFFFFFFFFFLL)
  {
    v7[2](v7);
  }
  else
  {
    v10 = v8;
    v11 = v9;
    if (a3 >= 1 && a2 <= v8 || a3 < 0 && a2 < v8)
    {
      v10 = v8 + a3;
      v7[2](v7);
      if (v10 == 0x7FFFFFFFFFFFFFFFLL)
        goto LABEL_17;
    }
    else
    {
      if (a2 - v8 < v9 && a2 >= v8)
        v13 = a3;
      else
        v13 = 0;
      v11 = v13 + v9;
      v7[2](v7);
    }
    objc_msgSend(v15, "_textRangeFromNSRange:", v10, v11);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "setSelectedTextRange:", v14);

    objc_msgSend(v15, "_scrollRangeToVisible:animated:", v10, v11, 0);
  }
LABEL_17:

}

void sub_1858C6B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1858CAA68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1858CAB70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1858CACA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1858CADE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1858CAFA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ___forceReadableWidthBehaviorPreference_block_invoke()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  _UIKitPreferencesOnce();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "objectForKey:", CFSTR("UISearchBarForceReadableWidthPreference"));
  v3 = (id)objc_claimAutoreleasedReturnValue();

  v1 = v3;
  if (v3
    || (objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults"),
        v2 = (void *)objc_claimAutoreleasedReturnValue(),
        objc_msgSend(v2, "objectForKey:", CFSTR("UISearchBarForceReadableWidthPreference")),
        v4 = (id)objc_claimAutoreleasedReturnValue(),
        v2,
        (v1 = v4) != 0))
  {
    v5 = v1;
    _forceReadableWidthBehaviorPreference_pref = objc_msgSend(v1, "BOOLValue");

  }
}

void sub_1858D3664(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _UIGameControllerNotifyRelevantSystemUIWillShow(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = a1;
  v4 = a2;
  if (!GameControllerLibraryCore_frameworkLibrary)
    GameControllerLibraryCore_frameworkLibrary = _sl_dlopen();
  if (GameControllerLibraryCore_frameworkLibrary)
  {
    objc_msgSend(v3, "_gameControllerSceneComponent");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "prepareSystemUIWithView:", v4);

  }
}

void sub_1858D74C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

const __CFString *_UISearchBarLayoutStateDebugDescription(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) > 4)
    return CFSTR("Unknown _UISearchBarLayoutState");
  else
    return off_1E16B71C8[a1 + 1];
}

BOOL _UISearchBarLayoutStateIsRestingEquivalent(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 2;
}

void RaiseForUnexpectedLayoutState(uint64_t a1, uint64_t a2)
{
  _BOOL4 v5;
  unint64_t v6;
  NSObject *v7;
  const __CFString *v8;
  NSObject *v9;
  const __CFString *v10;
  NSObject *v11;
  const __CFString *v12;
  const __CFString *v13;
  int v14;
  const __CFString *v15;
  __int16 v16;
  const __CFString *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  if (a1 == a2)
  {
    os_variant_has_internal_diagnostics();
  }
  else
  {
    v5 = (unint64_t)(a1 - 3) < 0xFFFFFFFFFFFFFFFELL || (unint64_t)(a2 - 3) < 0xFFFFFFFFFFFFFFFELL;
    if ((os_variant_has_internal_diagnostics() & 1) != 0)
    {
      if (v5)
      {
        __UIFaultDebugAssertLog();
        v9 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v9, OS_LOG_TYPE_FAULT))
        {
          if ((unint64_t)(a1 + 1) > 4)
            v12 = CFSTR("Unknown _UISearchBarLayoutState");
          else
            v12 = off_1E16B71C8[a1 + 1];
          if ((unint64_t)(a2 + 1) > 4)
            v13 = CFSTR("Unknown _UISearchBarLayoutState");
          else
            v13 = off_1E16B71C8[a2 + 1];
          v14 = 138412546;
          v15 = v12;
          v16 = 2112;
          v17 = v13;
          _os_log_fault_impl(&dword_185066000, v9, OS_LOG_TYPE_FAULT, "Unexpected layoutState, %@, in transition request. Expected %@. This is an internal UIKit problem.", (uint8_t *)&v14, 0x16u);
        }

      }
    }
    else if (v5)
    {
      v6 = RaiseForUnexpectedLayoutState___s_category;
      if (!RaiseForUnexpectedLayoutState___s_category)
      {
        v6 = __UILogCategoryGetNode("Assert", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
        atomic_store(v6, (unint64_t *)&RaiseForUnexpectedLayoutState___s_category);
      }
      v7 = *(NSObject **)(v6 + 8);
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      {
        if ((unint64_t)(a1 + 1) > 4)
          v8 = CFSTR("Unknown _UISearchBarLayoutState");
        else
          v8 = off_1E16B71C8[a1 + 1];
        if ((unint64_t)(a2 + 1) > 4)
          v10 = CFSTR("Unknown _UISearchBarLayoutState");
        else
          v10 = off_1E16B71C8[a2 + 1];
        v14 = 138412546;
        v15 = v8;
        v16 = 2112;
        v17 = v10;
        v11 = v7;
        _os_log_impl(&dword_185066000, v11, OS_LOG_TYPE_ERROR, "Unexpected layoutState, %@, in transition request. Expected %@. This is an internal UIKit problem.", (uint8_t *)&v14, 0x16u);

      }
    }
  }
}

void sub_1858E4CC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1858E64FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1858E952C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _checkControlStateArgumentAdjustIfNecessary(uint64_t a1)
{
  if ((dyld_program_sdk_at_least() & 1) == 0 && a1 && a1 != 2)
  {
    if (a1 != 4)
      NSLog(CFSTR("button text attributes in this older app are only respected for UIControlStateNormal, UIControlStateSelected and UIControlStateDisabled. state = %d is interpreted as UIControlStateSelected. Linking with a current SDK causes custom text attributes for UIControlStateHighlighted to be respected separately."), a1);
    return 4;
  }
  return a1;
}

id _viewForKey(void *a1, const void *a2)
{
  id v3;
  void *v4;

  v3 = a1;
  objc_getAssociatedObject(v3, a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v4)
  {
    v4 = (void *)objc_opt_new();
    objc_setAssociatedObject(v3, a2, v4, (void *)1);
  }

  return v4;
}

id _UIEditMenuGetPlatformMetrics(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v2 = (void *)_UIEditMenuGetPlatformMetrics_metricsByIdiom;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v4)
  {
    if (!_UIEditMenuGetPlatformMetrics_metricsByIdiom)
    {
      objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
      v5 = objc_claimAutoreleasedReturnValue();
      v6 = (void *)_UIEditMenuGetPlatformMetrics_metricsByIdiom;
      _UIEditMenuGetPlatformMetrics_metricsByIdiom = v5;

    }
    +[_UIVisualStyleRegistry registryForIdiom:](_UIVisualStyleRegistry, "registryForIdiom:", a1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "visualStyleClassForStylableClass:", objc_opt_class());

    v4 = (void *)objc_opt_new();
    v8 = (void *)_UIEditMenuGetPlatformMetrics_metricsByIdiom;
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "setObject:forKey:", v4, v9);

  }
  return v4;
}

void sub_1858FC128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1858FC4F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1858FCBD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 192), 8);
  _Unwind_Resume(a1);
}

void sub_1858FD374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1858FD544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1858FD7C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1858FDB54(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_1858FDD40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1858FE088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1858FEDD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1858FF324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1858FF5DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void BarButtonItemGetSystemItemStyle_KitAsset(uint64_t *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, char **a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  char v10;
  int v13;
  const __CFString *v14;
  double v15;
  int v16;
  uint64_t v17;
  const __CFString *v18;
  int v19;
  __CFString *v20;
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  __CFString *v25;
  char v26;
  __CFString *v27;
  double v28;
  BOOL v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  char **v39;
  uint64_t v40;
  uint64_t v41;
  __CFString *v42;
  __CFString *v43;
  char **v44;
  id v47;
  id v48;

  v10 = a7;
  v13 = 0;
  v14 = 0;
  v15 = 0.0;
  v16 = 1;
  v17 = a10;
  v44 = a5;
  v18 = 0;
  v19 = 1;
  v20 = 0;
  v21 = 1;
  v22 = 0;
  switch(a9)
  {
    case 0:
      _UINSLocalizedStringWithDefaultValue(CFSTR("Done"), CFSTR("Done"));
      v23 = objc_claimAutoreleasedReturnValue();
      v24 = 0;
      v14 = 0;
      v20 = 0;
      v25 = 0;
      v26 = 1;
      v17 = 2;
      v21 = 1;
      goto LABEL_46;
    case 1:
      _UINSLocalizedStringWithDefaultValue(CFSTR("Cancel"), CFSTR("Cancel"));
      v23 = objc_claimAutoreleasedReturnValue();
      v24 = 0;
      v14 = 0;
      v20 = 0;
      v25 = 0;
      v26 = 1;
      v21 = 1;
      goto LABEL_11;
    case 2:
      _UINSLocalizedStringWithDefaultValue(CFSTR("Edit"), CFSTR("Edit"));
      v23 = objc_claimAutoreleasedReturnValue();
      v24 = 0;
      v14 = 0;
      v20 = 0;
      v25 = 0;
      v21 = 1;
      v26 = 1;
LABEL_11:
      v17 = 1;
      goto LABEL_46;
    case 3:
      _UINSLocalizedStringWithDefaultValue(CFSTR("Save"), CFSTR("Save"));
      v23 = objc_claimAutoreleasedReturnValue();
      v24 = 0;
      v14 = 0;
      v20 = 0;
      v25 = 0;
      v26 = 1;
      v17 = 2;
      v21 = 1;
      goto LABEL_46;
    case 4:
      v16 = 0;
      v19 = 0;
      v13 = 0;
      v22 = 0;
      v21 = 1;
      v20 = CFSTR("UIButtonBarNewLandscape.png");
      v18 = CFSTR("UIButtonBarNewSmall.png");
      v14 = CFSTR("UIButtonBarNew.png");
      if (!a10)
        goto LABEL_50;
      goto LABEL_63;
    case 5:
    case 6:
      if (a10)
        goto LABEL_63;
      goto LABEL_50;
    case 7:
      v18 = 0;
      v19 = 0;
      v21 = 0;
      v13 = 0;
      v22 = 0;
      v15 = 4.0;
      v20 = CFSTR("UIButtonBarComposeLandscape.png");
      v14 = CFSTR("UIButtonBarCompose.png");
      if (!a10)
        goto LABEL_50;
      goto LABEL_63;
    case 8:
      v18 = 0;
      v19 = 0;
      v21 = 0;
      v13 = 0;
      v20 = CFSTR("UIButtonBarReplyLandscape.png");
      v22 = 1;
      v14 = CFSTR("UIButtonBarReply.png");
      if (!a10)
        goto LABEL_50;
      goto LABEL_63;
    case 9:
      v18 = 0;
      v19 = 0;
      v21 = 0;
      v13 = 0;
      v22 = 0;
      v20 = CFSTR("UIButtonBarActionSmall.png");
      v14 = CFSTR("UIButtonBarAction.png");
      if (!a10)
        goto LABEL_50;
      goto LABEL_63;
    case 10:
      v18 = 0;
      v19 = 0;
      v21 = 0;
      v13 = 0;
      v22 = 0;
      v20 = CFSTR("UIButtonBarOrganizeLandscape.png");
      v14 = CFSTR("UIButtonBarOrganize.png");
      if (!a10)
        goto LABEL_50;
      goto LABEL_63;
    case 11:
      v18 = 0;
      v19 = 0;
      v21 = 0;
      v13 = 0;
      v22 = 0;
      v20 = CFSTR("UIButtonBarBookmarksLandscape.png");
      v14 = CFSTR("UIButtonBarBookmarks.png");
      if (!a10)
        goto LABEL_50;
      goto LABEL_63;
    case 12:
      v18 = 0;
      v19 = 0;
      v21 = 0;
      v13 = 0;
      v22 = 0;
      v20 = CFSTR("UIButtonBarSearchLandscape.png");
      v14 = CFSTR("UIButtonBarSearch.png");
      if (!a10)
        goto LABEL_50;
      goto LABEL_63;
    case 13:
      v18 = 0;
      v19 = 0;
      v13 = 0;
      v22 = 0;
      v20 = CFSTR("UIButtonBarRefreshLandscape.png");
      v21 = 1;
      v14 = CFSTR("UIButtonBarRefresh.png");
      if (!a10)
        goto LABEL_50;
      goto LABEL_63;
    case 14:
      v18 = 0;
      v19 = 0;
      v13 = 0;
      v22 = 0;
      v20 = CFSTR("UIButtonBarStopLandscape.png");
      v21 = 1;
      v14 = CFSTR("UIButtonBarStop.png");
      if (!a10)
        goto LABEL_50;
      goto LABEL_63;
    case 15:
      v16 = 0;
      v20 = 0;
      v22 = 0;
      v18 = CFSTR("UIButtonBarCameraSmall.png");
      v21 = 1;
      v13 = 1;
      v14 = CFSTR("UIButtonBarCamera.png");
      if (!a10)
        goto LABEL_50;
      goto LABEL_63;
    case 16:
      v18 = 0;
      v19 = 0;
      v21 = 0;
      v13 = 0;
      v22 = 0;
      v20 = CFSTR("UIButtonBarTrashLandscape.png");
      v14 = CFSTR("UIButtonBarTrash.png");
      if (!a10)
        goto LABEL_50;
      goto LABEL_63;
    case 17:
      v18 = 0;
      v19 = 0;
      v13 = 0;
      v22 = 0;
      v20 = CFSTR("UIButtonBarPlayLandscape.png");
      v21 = 1;
      v14 = CFSTR("UIButtonBarPlay.png");
      if (!a10)
        goto LABEL_50;
      goto LABEL_63;
    case 18:
      v18 = 0;
      v19 = 0;
      v13 = 0;
      v22 = 0;
      v20 = CFSTR("UIButtonBarPauseLandscape.png");
      v21 = 1;
      v14 = CFSTR("UIButtonBarPause.png");
      if (!a10)
        goto LABEL_50;
      goto LABEL_63;
    case 19:
      v18 = 0;
      v20 = 0;
      v13 = 0;
      v22 = 0;
      v21 = 1;
      v14 = CFSTR("UIButtonBarRewind.png");
      if (!a10)
        goto LABEL_50;
      goto LABEL_63;
    case 20:
      v18 = 0;
      v19 = 0;
      v13 = 0;
      v22 = 0;
      v20 = CFSTR("UIButtonBarFastForwardLandscape.png");
      v21 = 1;
      v14 = CFSTR("UIButtonBarFastForward.png");
      if (!a10)
        goto LABEL_50;
      goto LABEL_63;
    case 21:
      _UINSLocalizedStringWithDefaultValue(CFSTR("Undo"), CFSTR("Undo"));
      v23 = objc_claimAutoreleasedReturnValue();
      v14 = 0;
      v20 = 0;
      v25 = 0;
      v24 = sel_undo_;
      goto LABEL_45;
    case 22:
      _UINSLocalizedStringWithDefaultValue(CFSTR("Redo"), CFSTR("Redo"));
      v23 = objc_claimAutoreleasedReturnValue();
      v14 = 0;
      v20 = 0;
      v25 = 0;
      v24 = sel_redo_;
LABEL_45:
      v17 = 1;
      v26 = 1;
      v21 = 1;
      goto LABEL_46;
    case 23:
      if (a6 == 2)
      {
        v42 = CFSTR("UIButtonBarPageCurlSelectedDown.png");
        if (a7)
          v42 = CFSTR("UIButtonBarPageCurlSelectedDownLandscape.png");
        v25 = v42;
        v24 = 0;
        v26 = 0;
        v21 = 0;
        v23 = 0;
        v17 = 1;
        v20 = CFSTR("UIButtonBarPageCurlBlackTranslucentLandscape.png");
        v14 = CFSTR("UIButtonBarPageCurlBlackTranslucent.png");
      }
      else if (a6 == 1)
      {
        v43 = CFSTR("UIButtonBarPageCurlSelectedDown.png");
        if (a7)
          v43 = CFSTR("UIButtonBarPageCurlSelectedDownLandscape.png");
        v25 = v43;
        v24 = 0;
        v26 = 0;
        v21 = 0;
        v23 = 0;
        v17 = 1;
        v20 = CFSTR("UIButtonBarPageCurlBlackOpaqueLandscape.png");
        v14 = CFSTR("UIButtonBarPageCurlBlackOpaque.png");
      }
      else if (a6)
      {
        v24 = 0;
        v14 = 0;
        v20 = 0;
        v25 = 0;
        v21 = 0;
        v23 = 0;
        v17 = 1;
        v26 = 1;
      }
      else
      {
        v27 = CFSTR("UIButtonBarPageCurlSelectedDown.png");
        if (a7)
          v27 = CFSTR("UIButtonBarPageCurlSelectedDownLandscape.png");
        v25 = v27;
        v24 = 0;
        v26 = 0;
        v21 = 0;
        v23 = 0;
        v17 = 1;
        v20 = CFSTR("UIButtonBarPageCurlDefaultLandscape.png");
        v14 = CFSTR("UIButtonBarPageCurlDefault.png");
      }
LABEL_46:
      v22 = 0;
      v13 = 0;
      if ((v10 & 1) == 0)
        goto LABEL_70;
      if ((v26 & 1) == 0)
        goto LABEL_77;
      goto LABEL_67;
    default:
      v18 = 0;
      v19 = 1;
      v20 = 0;
      v21 = 1;
      v22 = 0;
      if (!a10)
      {
LABEL_50:
        if (a7)
        {
          if (!v19)
          {
            v24 = 0;
            v25 = 0;
            v47 = 0;
            v17 = 0;
            v28 = 1.0;
            goto LABEL_87;
          }
          v17 = 0;
          v23 = 0;
          v25 = 0;
          v24 = 0;
          if (v16)
          {
            v28 = 0.75;
          }
          else
          {
            v14 = v18;
            v28 = 1.0;
          }
          if (!v16)
            v15 = 0.0;
          if (!v14)
          {
LABEL_102:
            v33 = 0;
            v32 = 0;
            if (!v22)
              goto LABEL_103;
LABEL_100:
            v48 = (id)v23;
            objc_msgSend((id)v32, "imageFlippedForRightToLeftLayoutDirection", v44);
            v37 = (void *)objc_claimAutoreleasedReturnValue();

            objc_msgSend((id)v33, "imageFlippedForRightToLeftLayoutDirection");
            v38 = (void *)objc_claimAutoreleasedReturnValue();

            v39 = v44;
            if ((v13 & 1) == 0)
              goto LABEL_105;
            goto LABEL_104;
          }
        }
        else
        {
          v17 = 0;
          v23 = 0;
          v25 = 0;
          v24 = 0;
          v28 = 1.0;
          if (!v14)
            goto LABEL_102;
        }
        goto LABEL_86;
      }
LABEL_63:
      if ((a7 & 1) == 0)
      {
        v23 = 0;
        if (v16)
        {
          v25 = 0;
          v24 = 0;
LABEL_70:
          v29 = v21 == 0;
          v30 = 1.0;
          v31 = 0.75;
          goto LABEL_71;
        }
        v15 = 0.0;
        v28 = 1.0;
        v25 = 0;
        v24 = 0;
LABEL_85:
        v14 = v18;
        if (!v18)
          goto LABEL_102;
LABEL_86:
        v47 = (id)v23;
        v20 = (__CFString *)v14;
        goto LABEL_87;
      }
      if ((v19 & 1) != 0)
      {
        if ((v16 & 1) != 0)
        {
          v24 = 0;
          v25 = 0;
          v23 = 0;
LABEL_67:
          v29 = v21 == 0;
          v30 = 0.75;
          v31 = 0.5625;
LABEL_71:
          if (v29)
            v28 = v30;
          else
            v28 = v31;
          if (!v14)
            goto LABEL_102;
          goto LABEL_86;
        }
        v23 = 0;
        v25 = 0;
        v24 = 0;
        if (v21)
          v28 = 0.75;
        else
          v28 = 1.0;
        v15 = 0.0;
        goto LABEL_85;
      }
      v23 = 0;
      v25 = 0;
      v24 = 0;
LABEL_77:
      v47 = (id)v23;
      if (v21)
        v28 = 0.75;
      else
        v28 = 1.0;
LABEL_87:
      _UIImageWithName(v20);
      v32 = objc_claimAutoreleasedReturnValue();
      if (v25)
      {
        _UIImageWithName(v25);
        v33 = objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v33 = 0;
      }
      v23 = (uint64_t)v47;
      v34 = 0.0;
      if (v28 != 1.0)
      {
        if (v32)
        {
          objc_msgSend((id)v32, "_imageScaledToProportion:interpolationQuality:", 3, v28);
          v35 = objc_claimAutoreleasedReturnValue();

          v32 = v35;
        }
        v34 = v28 * 0.0;
        v15 = v15 * v28;
        if (v33)
        {
          objc_msgSend((id)v33, "_imageScaledToProportion:interpolationQuality:", 3, v28);
          v36 = objc_claimAutoreleasedReturnValue();

          v33 = v36;
        }
        v23 = (uint64_t)v47;
      }
      if (!(v32 | v33))
        goto LABEL_102;
      if (v34 == 0.0 && v15 == 0.0)
      {
        if (!v22)
          goto LABEL_103;
        goto LABEL_100;
      }
      objc_msgSend((id)v32, "_setAlignmentRectInsets:", v34, v34, v34, v15, v44);
      objc_msgSend((id)v33, "_setAlignmentRectInsets:", v34, v34, v34, v15);
      v23 = (uint64_t)v47;
      if ((v22 & 1) != 0)
        goto LABEL_100;
LABEL_103:
      v48 = (id)v23;
      v37 = (void *)v32;
      v38 = (void *)v33;
      v39 = v44;
      if (!v13)
        goto LABEL_105;
LABEL_104:
      objc_msgSend(v37, "_imageThatSuppressesAccessibilityHairlineThickening", v44);
      v40 = objc_claimAutoreleasedReturnValue();

      objc_msgSend(v38, "_imageThatSuppressesAccessibilityHairlineThickening");
      v41 = objc_claimAutoreleasedReturnValue();

      v38 = (void *)v41;
      v37 = (void *)v40;
LABEL_105:
      if (a1)
        *a1 = v17;
      if (a2)
        *a2 = objc_retainAutorelease(v48);
      if (a3)
        *a3 = objc_retainAutorelease(v37);
      if (a4)
        *a4 = objc_retainAutorelease(v38);
      if (v39)
        *v39 = v24;

      return;
  }
}

uint64_t BarButtonItemSystemItemCanBeSet(void *a1)
{
  uint64_t v1;
  id v2;
  int v3;

  v1 = qword_1ECD7CE38;
  v2 = a1;
  if (v1 != -1)
    dispatch_once(&qword_1ECD7CE38, &__block_literal_global_78);
  v3 = objc_msgSend((id)_MergedGlobals_972, "containsObject:", v2);

  return v3 ^ 1u;
}

id _UIButtonBarStopImage()
{
  return +[UIImage kitImageNamed:](UIImage, "kitImageNamed:", CFSTR("UIButtonBarStop.png"));
}

void sub_1859042FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void __UIKIT_DID_NOT_RECEIVE_A_REMOTE_CACONTEXT_FROM_COREANIMATION_INDICATING_A_POSSIBLE_BACKBOARDD_CRASH()
{
  void *v0;
  uint64_t v1;
  objc_class *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  intptr_t (*v12)(uint64_t);
  void *v13;
  dispatch_semaphore_t v14;
  _QWORD v15[5];
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  v16 = 0;
  v17 = &v16;
  v18 = 0x2050000000;
  v0 = (void *)_MergedGlobals_975;
  v19 = _MergedGlobals_975;
  v1 = MEMORY[0x1E0C809B0];
  if (!_MergedGlobals_975)
  {
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 3221225472;
    v15[2] = __getSDRDiagnosticReporterClass_block_invoke;
    v15[3] = &unk_1E16B14C0;
    v15[4] = &v16;
    __getSDRDiagnosticReporterClass_block_invoke((uint64_t)v15);
    v0 = (void *)v17[3];
  }
  v2 = objc_retainAutorelease(v0);
  _Block_object_dispose(&v16, 8);
  v3 = objc_alloc_init(v2);
  objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "bundleIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "signatureWithDomain:type:subType:detectedProcess:triggerThresholdValues:", CFSTR("UIKit"), CFSTR("Crash"), CFSTR("MissingRemoteCAContext"), v5, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = v1;
  v11 = 3221225472;
  v12 = ____UIKIT_DID_NOT_RECEIVE_A_REMOTE_CACONTEXT_FROM_COREANIMATION_INDICATING_A_POSSIBLE_BACKBOARDD_CRASH_block_invoke;
  v13 = &unk_1E16B7720;
  v14 = dispatch_semaphore_create(0);
  v7 = v14;
  objc_msgSend(v3, "snapshotWithSignature:duration:events:payload:actions:reply:", v6, 0, 0, 0, &v10, 0.0);
  dispatch_semaphore_wait(v7, 0xFFFFFFFFFFFFFFFFLL);
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler", v10, v11, v12, v13);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void __UIKIT_DID_NOT_RECEIVE_A_REMOTE_CACONTEXT_FROM_COREANIMATION_INDICATING_A_POSSIBLE_BACKBOARDD_CRASH(CAContext *__strong)");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "handleFailureInFunction:file:lineNumber:description:", v9, CFSTR("_UIContextBinder.m"), 438, CFSTR("Failed to create remote render context"));

}

void sub_185907BF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __UIKIT_DID_NOT_RECEIVE_A_LOCAL_CACONTEXT_FROM_COREANIMATION()
{
  void *v0;
  id v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void __UIKIT_DID_NOT_RECEIVE_A_LOCAL_CACONTEXT_FROM_COREANIMATION(CAContext *__strong)");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v0, CFSTR("_UIContextBinder.m"), 444, CFSTR("Failed to create local render context"));

}

Class __getSDRDiagnosticReporterClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7CE98)
    qword_1ECD7CE98 = _sl_dlopen();
  if (!qword_1ECD7CE98)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *SymptomDiagnosticReporterLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIContextBinder.m"), 26, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("SDRDiagnosticReporter");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getSDRDiagnosticReporterClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UIContextBinder.m"), 27, CFSTR("Unable to find class %s"), "SDRDiagnosticReporter");

LABEL_8:
    __break(1u);
  }
  _MergedGlobals_975 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id getTUIEmojiUpscalerClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)_MergedGlobals_1_2;
  v7 = _MergedGlobals_1_2;
  if (!_MergedGlobals_1_2)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getTUIEmojiUpscalerClass_block_invoke;
    v3[3] = &unk_1E16B14C0;
    v3[4] = &v4;
    __getTUIEmojiUpscalerClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1859090A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185909D04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getTUIEmojiUpscalerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD79D30)
    qword_1ECD79D30 = _sl_dlopen();
  if (!qword_1ECD79D30)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *TextInputUILibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("UIKeyboardEmojiDraggableView.m"), 59, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("TUIEmojiUpscaler");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUIEmojiUpscalerClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UIKeyboardEmojiDraggableView.m"), 60, CFSTR("Unable to find class %s"), "TUIEmojiUpscaler");

LABEL_8:
    __break(1u);
  }
  _MergedGlobals_1_2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id _UIHyperregionClasses()
{
  if (qword_1ECD7CEA8 != -1)
    dispatch_once(&qword_1ECD7CEA8, &__block_literal_global_83);
  return (id)_MergedGlobals_976;
}

uint64_t _UIHyperregionIsBoundaryCrossedFromPointToPoint(void *a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t v6;

  v5 = a1;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v6 = objc_msgSend(v5, "_isBoundaryCrossedFromPoint:toPoint:", a2, a3);
  else
    v6 = 0;

  return v6;
}

void sub_18590EDEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

id __copy_helper_block_e8_56n9_8_8_s0_s8(uint64_t a1, uint64_t a2)
{
  id result;

  *(_QWORD *)(a1 + 56) = *(id *)(a2 + 56);
  result = *(id *)(a2 + 64);
  *(_QWORD *)(a1 + 64) = result;
  return result;
}

void __destroy_helper_block_e8_56n7_8_s0_s8(uint64_t a1)
{

}

id __copy_helper_block_e8_88n9_8_8_s0_s8(uint64_t a1, uint64_t a2)
{
  id result;

  *(_QWORD *)(a1 + 88) = *(id *)(a2 + 88);
  result = *(id *)(a2 + 96);
  *(_QWORD *)(a1 + 96) = result;
  return result;
}

void __destroy_helper_block_e8_88n7_8_s0_s8(uint64_t a1)
{

}

void _UISceneMetricsCalculatorApplySceneCornerRadiiToScreenIfNecessary(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  v6 = a1;
  objc_msgSend(v6, "_effectiveUISettings");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "displayIdentity");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v2, "isUIKitMainLike"))
  {
    if (objc_msgSend(v2, "isExternal"))
    {
      objc_msgSend(v1, "cornerRadiusConfiguration");
      v3 = objc_claimAutoreleasedReturnValue();
      if (v3)
      {
        v4 = (void *)v3;
        objc_msgSend(v6, "screen");
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "topLeft");
        objc_msgSend(v5, "_setSceneProvidedDisplayCornerRadius:");

      }
    }
  }

}

uint64_t _stateMachineSpec_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "didTransitionFrom:to:");
}

uint64_t _stateMachineSpec_block_invoke_2(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "didTransitionFrom:to:");
}

uint64_t _stateMachineSpec_block_invoke_3(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "didTransitionFrom:to:");
}

uint64_t _stateMachineSpec_block_invoke_4(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "didTransitionFrom:to:");
}

void sub_185914C5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1859151FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__CFString *_UICanvasFrameSystemTypeFromCanvasType(uint64_t a1)
{
  __CFString **v2;
  void *v3;
  void *v4;

  if (a1 > 1)
  {
    if (a1 == 2)
    {
      v2 = _UIWindowSceneSessionRoleCarPlay;
      return *v2;
    }
    if (a1 == 0x7FFFFFFFFFFFFFFELL)
    {
      v2 = _UIWindowSceneSessionTypeCoverSheet;
      return *v2;
    }
    goto LABEL_8;
  }
  if (!a1)
  {
LABEL_9:
    v2 = (__CFString **)&UIWindowSceneSessionRoleApplication;
    return *v2;
  }
  if (a1 != 1)
  {
LABEL_8:
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "UISceneSessionRole  _Nonnull _UICanvasFrameSystemTypeFromCanvasType(_UICanvasSystemType)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UICanvasDefinition.m"), 34, CFSTR("Invalid _UICanvasSystemType (%li) found. Aborting."), a1);

    goto LABEL_9;
  }
  v2 = (__CFString **)&UIWindowSceneSessionRoleExternalDisplayNonInteractive;
  return *v2;
}

uint64_t _UICanvasCanvasSystemTypeFromFrameType(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;

  v1 = qword_1ECD7CEF8;
  v2 = a1;
  if (v1 != -1)
    dispatch_once(&qword_1ECD7CEF8, &__block_literal_global_96);
  objc_msgSend((id)_MergedGlobals_980, "objectForKeyedSubscript:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = objc_msgSend(v3, "integerValue");
  return v4;
}

uint64_t _UICanvasLifecycleStateIsSEO(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;

  v1 = a1;
  v2 = objc_msgSend(v1, "deactivationReasons");
  if (!objc_msgSend(v1, "isForeground"))
    goto LABEL_6;
  if ((v2 & 0xFFFFFFFFFFFFFEFFLL) == 0)
  {
    if ((*(_BYTE *)(UIApp + 185) & 0x80) == 0)
    {
      v3 = objc_msgSend(v1, "underLock");
      goto LABEL_7;
    }
LABEL_6:
    v3 = 0;
    goto LABEL_7;
  }
  v3 = 1;
LABEL_7:

  return v3;
}

unint64_t _UICanvasLifecycleStateIsInTaskSwitcher(void *a1)
{
  return ((unint64_t)objc_msgSend(a1, "deactivationReasons") >> 3) & 1;
}

uint64_t _UICanvasLifecycleStateIsForegroundActive(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if (objc_msgSend(v1, "isForeground"))
    v2 = _UICanvasLifecycleStateIsSEO(v1) ^ 1;
  else
    v2 = 0;

  return v2;
}

uint64_t _UICanvasLifecycleStateIsEqual(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v9;

  v3 = a1;
  v4 = a2;
  if ((v3 == 0) != (v4 != 0)
    && (v5 = objc_msgSend(v3, "deactivationReasons"), v5 == objc_msgSend(v4, "deactivationReasons"))
    && (v6 = objc_msgSend(v3, "isForeground"), v6 == objc_msgSend(v4, "isForeground")))
  {
    v9 = objc_msgSend(v3, "underLock");
    v7 = v9 ^ objc_msgSend(v4, "underLock") ^ 1;
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

uint64_t _UICanvasSceneLifecycleCompositeActionMaskFromStateToState(uint64_t a1, uint64_t a2)
{
  return _UICanvasSceneLifecycleCompositeActionMaskFromStateToState__staticStateMap[4 * a1 + 5 + a2];
}

void _UICanvasPerformActionsWithLifecycleActionMask(int a1, void *a2)
{
  uint64_t i;
  int v4;
  void (**v5)(void);

  v5 = a2;
  if (a1 && v5)
  {
    for (i = 0; i != 7; ++i)
    {
      v4 = 1 << _UICanvasLifecycleActionPrecidenceArray[i];
      if ((v4 & a1) != 0)
      {
        v5[2]();
        a1 &= ~v4;
        if (!a1)
          break;
      }
    }
  }

}

uint64_t _UICanvasLifecycleCompositeActionMaskContainsActionType(unsigned int a1, char a2)
{
  return (a1 >> a2) & 1;
}

uint64_t _UICanvasLifecycleCompositeActionMaskHighestLifecycleActionType(int a1)
{
  uint64_t v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  int v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v7 = 0;
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = ___UICanvasLifecycleCompositeActionMaskHighestLifecycleActionType_block_invoke;
  v3[3] = &unk_1E16B8048;
  v3[4] = &v4;
  _UICanvasPerformActionsWithLifecycleActionMask(a1, v3);
  v1 = *((unsigned int *)v5 + 6);
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1859164B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *_UICanvasLifecycleActionDescription(unsigned int a1)
{
  if (a1 > 6)
    return &stru_1E16EDF20;
  else
    return off_1E16B8068[a1];
}

id _UICanvasLifecycleCompositeActionMaskComponentDescriptionComponents(int a1)
{
  id v2;
  _QWORD v4[5];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  void (*v9)(uint64_t);
  id v10;

  v5 = 0;
  v6 = &v5;
  v7 = 0x3032000000;
  v8 = __Block_byref_object_copy__26;
  v9 = __Block_byref_object_dispose__26;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v10 = (id)objc_claimAutoreleasedReturnValue();
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = ___UICanvasLifecycleCompositeActionMaskComponentDescriptionComponents_block_invoke;
  v4[3] = &unk_1E16B8048;
  v4[4] = &v5;
  _UICanvasPerformActionsWithLifecycleActionMask(a1, v4);
  v2 = (id)v6[5];
  _Block_object_dispose(&v5, 8);

  return v2;
}

void sub_1859165C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __UIInlinePointerSetCreateHashTableWithCapacity(uint64_t a1)
{
  return objc_msgSend(objc_alloc(MEMORY[0x1E0CB3690]), "initWithOptions:capacity:", 258, a1);
}

void __UIInlinePointerSetReleaseHashTable(uint64_t a1)
{

}

uint64_t _UIUpdateRequestActivate(int *a1, unsigned int a2)
{
  return _UIUpdateRequestRegistryAddRecord((uint64_t)&mainRegistry, a1, a2);
}

uint64_t _UIUpdateRequestDeactivate(_DWORD *a1, unsigned int a2)
{
  return _UIUpdateRequestRegistryRemoveRecord((uint64_t)&mainRegistry, a1, a2);
}

void _UIUpdateRequestDispose(_DWORD *a1)
{
  _UIUpdateRequestRegistryRemoveRequest((uint64_t)&mainRegistry, a1);
}

uint64_t _UIUpdateRequestChanged(_BYTE *a1)
{
  return _UIUpdateRequestRegistryMutableRequestChanged((uint64_t)&mainRegistry, a1);
}

void sub_185917134(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

uint64_t _UIDynamicButtonStageFromHIDEvent(uint64_t a1)
{
  int Type;
  uint64_t IntegerValue;

  Type = IOHIDEventGetType();
  if (Type == 1)
  {
    _UIEventHIDGetChildVendorDefinedForceStageEvent(a1);
    IntegerValue = *(unsigned int *)IOHIDEventGetDataValue();
  }
  else if (Type == 42)
  {
    _UIEventHIDGetChildForceStageEvent(a1);
    IntegerValue = IOHIDEventGetIntegerValue();
  }
  else
  {
    IntegerValue = 0;
  }
  return IntegerValue & ~(IntegerValue >> 63);
}

uint64_t _UIDynamicButtonFeatureIsEnabled()
{
  if (qword_1ECD7CF18 != -1)
    dispatch_once(&qword_1ECD7CF18, &__block_literal_global_97);
  return _MergedGlobals_982;
}

id _eventComponentPhaseMapping()
{
  void *v0;
  uint64_t v1;
  void *v2;
  _QWORD v4[5];
  _QWORD v5[6];

  v5[5] = *MEMORY[0x1E0C80C00];
  v0 = (void *)_eventComponentPhaseMapping_mapping;
  if (!_eventComponentPhaseMapping_mapping)
  {
    v4[0] = &unk_1E1A97140;
    v4[1] = &unk_1E1A97170;
    v5[0] = &unk_1E1A97158;
    v5[1] = &unk_1E1A97188;
    v4[2] = &unk_1E1A971A0;
    v4[3] = &unk_1E1A971D0;
    v5[2] = &unk_1E1A971B8;
    v5[3] = &unk_1E1A971E8;
    v4[4] = &unk_1E1A97200;
    v5[4] = &unk_1E1A97218;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v5, v4, 5);
    v1 = objc_claimAutoreleasedReturnValue();
    v2 = (void *)_eventComponentPhaseMapping_mapping;
    _eventComponentPhaseMapping_mapping = v1;

    v0 = (void *)_eventComponentPhaseMapping_mapping;
  }
  return v0;
}

void sub_185919430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185919AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18591A120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18591A640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _CompositionalLayoutShouldOverrideInitialAttributesDuringUpdates()
{
  uint64_t result;

  result = dyld_program_sdk_at_least();
  if ((_DWORD)result)
  {
    LODWORD(result) = _UIInternalPreferenceUsesDefault_0(&_UIInternalPreference_CompositionalLayoutShouldOverrideInitialAttributesDuringUpdates, (uint64_t)CFSTR("CompositionalLayoutShouldOverrideInitialAttributesDuringUpdates"));
    if (byte_1EDDA7DFC)
      return 1;
    else
      return result;
  }
  return result;
}

void UICollectionViewCompositionalLayoutAlertForInvalidLayout(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, int a6)
{
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  unint64_t v16;
  NSObject *v17;
  NSObject *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint8_t buf[4];
  uint64_t v27;
  __int16 v28;
  void *v29;
  __int16 v30;
  uint64_t v31;
  __int16 v32;
  uint64_t v33;
  __int16 v34;
  void *v35;
  __int16 v36;
  void *v37;
  __int16 v38;
  void *v39;
  __int16 v40;
  uint64_t v41;
  uint64_t v42;
  NSDirectionalEdgeInsets v43;
  CGRect v44;
  NSDirectionalEdgeInsets v45;
  CGRect v46;

  v42 = *MEMORY[0x1E0C80C00];
  if (a6)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void UICollectionViewCompositionalLayoutAlertForInvalidLayout(UICollectionViewCompositionalLayout *const __strong, NSInteger, const __strong id<NSCollectionLayoutContainer>, const __strong id<_UIContentInsetsEnvironment>, NSString *const __strong, BOOL)");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_opt_class();
    objc_msgSend(a4, "effectiveInsets");
    NSStringFromDirectionalEdgeInsets(v43);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    _UIStringFromContentInsetsReference(objc_msgSend(a4, "insetReference"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "collectionView");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "frame");
    NSStringFromCGRect(v44);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "handleFailureInFunction:file:lineNumber:description:", v10, CFSTR("UICollectionViewCompositionalLayout.m"), 1428, CFSTR("<%@: %p> ran into an error when computing the layout for section at index %ld in container %@. Container calculated by applying insets (%@) from sectionInsetsReference \"%@\" to collection view frame %@.\nError: %@"), v11, a1, a2, a3, v12, v13, v15, a5);

  }
  v16 = UICollectionViewCompositionalLayoutAlertForInvalidLayout___s_category;
  if (!UICollectionViewCompositionalLayoutAlertForInvalidLayout___s_category)
  {
    v16 = __UILogCategoryGetNode("UICollectionLayout", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
    atomic_store(v16, (unint64_t *)&UICollectionViewCompositionalLayoutAlertForInvalidLayout___s_category);
  }
  v17 = *(NSObject **)(v16 + 8);
  if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
  {
    v18 = v17;
    v19 = objc_opt_class();
    objc_msgSend(a4, "effectiveInsets");
    NSStringFromDirectionalEdgeInsets(v45);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    _UIStringFromContentInsetsReference(objc_msgSend(a4, "insetReference"));
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "collectionView");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "frame");
    NSStringFromCGRect(v46);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138414082;
    v27 = v19;
    v28 = 2048;
    v29 = a1;
    v30 = 2048;
    v31 = a2;
    v32 = 2112;
    v33 = a3;
    v34 = 2112;
    v35 = v20;
    v36 = 2112;
    v37 = v21;
    v38 = 2112;
    v39 = v23;
    v40 = 2112;
    v41 = a5;
    _os_log_impl(&dword_185066000, v18, OS_LOG_TYPE_ERROR, "<%@: %p> ran into an error when computing the layout for section at index %ld in container %@. Container calculated by applying insets (%@) from sectionInsetsReference \"%@\" to collection view frame %@.\nUICollectionView behavior with this layout is undefined. Break on UICollectionViewCompositionalLayoutAlertForInvalidLayout to catch this in the debugger.\nError: %@", buf, 0x52u);

  }
}

void sub_18591C3BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  _Block_object_dispose(&a58, 8);
  _Unwind_Resume(a1);
}

void sub_18591C8A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_18591CAD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18591D8B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  _Block_object_dispose(&a63, 8);
  _Unwind_Resume(a1);
}

void sub_18591F9F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a39, 8);
  _Unwind_Resume(a1);
}

CGFloat _UIRectExpandByFactorAndUnitVector(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5, double a6, double a7)
{
  double v11;
  double v14;
  double v15;
  void *v17;
  void *v18;
  double v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;

  if (fabs(a5) >= 2.22044605e-16)
  {
    v11 = fabs(a7);
    if (fabs(a6) >= 2.22044605e-16 || v11 >= 2.22044605e-16)
    {
      if (a5 < 0.0)
      {
        v19 = a6;
        objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler", 2.22044605e-16, v11);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CGRect _UIRectExpandByFactorAndUnitVector(CGRect, CGFloat, CGVector)");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "handleFailureInFunction:file:lineNumber:description:", v18, CFSTR("_UICollectionLayoutHelpers.m"), 377, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("factor >= 0.0"));

        a6 = v19;
      }
      v20.origin.x = a1;
      v20.origin.y = a2;
      v20.size.width = a3;
      v20.size.height = a4;
      v14 = a6 * a5 * CGRectGetWidth(v20);
      v21.origin.x = a1;
      v21.origin.y = a2;
      v21.size.width = a3;
      v21.size.height = a4;
      CGRectGetHeight(v21);
      v22.origin.x = a1;
      v22.origin.y = a2;
      v22.size.width = a3;
      v22.size.height = a4;
      CGRectGetWidth(v22);
      v23.origin.x = a1;
      v23.origin.y = a2;
      v23.size.width = a3;
      v23.size.height = a4;
      CGRectGetHeight(v23);
      if (v14 >= 0.0)
        v15 = -0.0;
      else
        v15 = v14;
      return a1 + v15;
    }
  }
  return a1;
}

double _UIRectMinPointValueAlongAxis(uint64_t a1, double a2, double a3)
{
  void *v7;
  void *v8;

  if ((unint64_t)(a1 - 3) <= 0xFFFFFFFFFFFFFFFDLL)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CGFloat _UIRectMinPointValueAlongAxis(CGRect, UIAxis)");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "handleFailureInFunction:file:lineNumber:description:", v8, CFSTR("_UICollectionLayoutHelpers.m"), 412, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("axis == UIAxisVertical || axis == UIAxisHorizontal"));

  }
  return _UIPointValueForAxis(a1, a2, a3);
}

double _UITrailingOffsetForInsetsAlongAxis(uint64_t a1, double a2, double a3, double a4, double a5)
{
  void *v6;
  void *v7;

  if (a1 == 2)
    return a4;
  if (a1 == 1)
    return a5;
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CGFloat _UITrailingOffsetForInsetsAlongAxis(NSDirectionalEdgeInsets, UIAxis)");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, CFSTR("_UICollectionLayoutHelpers.m"), 502, CFSTR("Unknown axis"));

  return 0.0;
}

uint64_t _UIDirectionalRectEdgesForLocationRelativeToRectWithDefaultEdges(uint64_t a1, double a2, double a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  CGRect v25;
  CGRect v26;

  v25.origin.x = a4;
  v25.origin.y = a5;
  v25.size.width = a6;
  v25.size.height = a7;
  if (CGRectIsNull(v25))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSDirectionalRectEdge _UIDirectionalRectEdgesForLocationRelativeToRectWithDefaultEdges(CGPoint, CGRect, NSDirectionalRectEdge)");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "handleFailureInFunction:file:lineNumber:description:", v20, CFSTR("_UICollectionLayoutHelpers.m"), 606, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("!CGRectIsNull(rect)"));

    if (!a1)
      goto LABEL_7;
  }
  else if (!a1)
  {
    goto LABEL_7;
  }
  if ((~(_BYTE)a1 & 5) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSDirectionalRectEdge _UIDirectionalRectEdgesForLocationRelativeToRectWithDefaultEdges(CGPoint, CGRect, NSDirectionalRectEdge)");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "handleFailureInFunction:file:lineNumber:description:", v22, CFSTR("_UICollectionLayoutHelpers.m"), 609, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("!(defaultEdges & NSDirectionalRectEdgeBottom)"));

  }
  if ((~(_BYTE)a1 & 0xA) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSDirectionalRectEdge _UIDirectionalRectEdgesForLocationRelativeToRectWithDefaultEdges(CGPoint, CGRect, NSDirectionalRectEdge)");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "handleFailureInFunction:file:lineNumber:description:", v24, CFSTR("_UICollectionLayoutHelpers.m"), 612, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("!(defaultEdges & NSDirectionalRectEdgeTrailing)"));

  }
LABEL_7:
  v26.origin.x = a4;
  v26.origin.y = a5;
  v26.size.width = a6;
  v26.size.height = a7;
  if (CGRectIsEmpty(v26))
    return 0;
  v15 = a4 + a6 * 0.5;
  v16 = a5 + a7 * 0.5;
  v17 = 2;
  v18 = 8;
  if (a2 <= v15)
    v18 = a1 & 0xA;
  if (a2 >= v15)
    v17 = v18;
  if (a3 < v16)
    return v17 | 1;
  if (a3 <= v16)
    return v17 | a1 & 5;
  return v17 | 4;
}

double _UIUnitVectorFromDirectionalRectEdgeAndPermittedAxis(char a1, char a2)
{
  double result;
  double v3;
  double v4;

  result = 0.0;
  v3 = -1.0;
  v4 = 1.0;
  if ((a1 & 8) == 0)
    v4 = 0.0;
  if ((a1 & 2) == 0)
    v3 = v4;
  if ((a2 & 1) != 0)
    return v3;
  return result;
}

uint64_t _UILayoutAxisForAttributePair(void *a1, void *a2)
{
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  double v20;
  _BOOL4 v22;
  _BOOL4 v23;
  double MinX;
  double MaxX;
  double MaxY;
  double MinY;
  double v29;
  double v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;

  objc_msgSend(a1, "frame");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  objc_msgSend(a2, "frame");
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v31.origin.x = v4;
  v31.origin.y = v6;
  v31.size.width = v8;
  v31.size.height = v10;
  v30 = floor(CGRectGetMaxY(v31));
  v32.origin.x = v12;
  v32.origin.y = v14;
  v32.size.width = v16;
  v32.size.height = v18;
  v29 = ceil(CGRectGetMinY(v32));
  v33.origin.x = v4;
  v33.origin.y = v6;
  v33.size.width = v8;
  v33.size.height = v10;
  MinY = CGRectGetMinY(v33);
  v34.origin.x = v12;
  v34.origin.y = v14;
  v34.size.width = v16;
  v34.size.height = v18;
  MaxY = CGRectGetMaxY(v34);
  v35.origin.x = v4;
  v35.origin.y = v6;
  v35.size.width = v8;
  v35.size.height = v10;
  MaxX = CGRectGetMaxX(v35);
  v36.origin.x = v12;
  v36.origin.y = v14;
  v36.size.width = v16;
  v36.size.height = v18;
  MinX = CGRectGetMinX(v36);
  v37.origin.x = v4;
  v37.origin.y = v6;
  v37.size.width = v8;
  v37.size.height = v10;
  v19 = ceil(CGRectGetMinX(v37));
  v38.origin.x = v12;
  v38.origin.y = v14;
  v38.size.width = v16;
  v38.size.height = v18;
  v20 = floor(CGRectGetMaxX(v38));
  if (v30 <= v29 && v19 < v20)
    return 2;
  v22 = v19 < v20;
  v23 = floor(MaxX) > ceil(MinX);
  if (ceil(MinY) >= floor(MaxY))
    v23 = 1;
  if (v30 > v29)
    v22 = 1;
  return !v23 || !v22;
}

uint64_t _UILayoutAxisForAttributeTriple(void *a1, void *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  double v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;

  v6 = _UILayoutAxisForAttributePair(a1, a2);
  v7 = v6;
  v8 = _UILayoutAxisForAttributePair(a2, a3);
  if (v6 != v8)
  {
    v9 = v8;
    objc_msgSend(a1, "indexPath");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "section");

    objc_msgSend(a2, "indexPath");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "section");

    objc_msgSend(a3, "indexPath");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(v14, "section");

    if (v11 != v13 || v13 == v15)
    {
      if (v11 == v13 || (v7 = v9, v13 != v15))
      {
        objc_msgSend(a2, "frame");
        v17 = v16;
        v19 = v18;
        v21 = v20;
        v23 = v22;
        objc_msgSend(a1, "frame");
        v28 = UIDistanceBetweenRects(v17, v19, v21, v23, v24, v25, v26, v27);
        objc_msgSend(a2, "frame");
        v30 = v29;
        v32 = v31;
        v34 = v33;
        v36 = v35;
        objc_msgSend(a3, "frame");
        if (v28 >= UIDistanceBetweenRects(v30, v32, v34, v36, v37, v38, v39, v40))
          return v9;
        else
          return v6;
      }
    }
  }
  return v7;
}

void _UIApplyRTLTransformForFrameWithDimension(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  CGAffineTransform v16;
  CGAffineTransform v17;
  CGAffineTransform v18;
  CGRect v19;
  CGRect v20;

  if (CGRectIsInfinite(*(CGRect *)&a1))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CGRect _UIApplyRTLTransformForFrameWithDimension(CGRect, CGFloat)");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, CFSTR("_UICollectionLayoutHelpers.m"), 821, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("!CGRectIsInfinite(frame)"));

  }
  v19.origin.x = a1;
  v19.origin.y = a2;
  v19.size.width = a3;
  v19.size.height = a4;
  if (CGRectIsNull(v19))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CGRect _UIApplyRTLTransformForFrameWithDimension(CGRect, CGFloat)");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "handleFailureInFunction:file:lineNumber:description:", v13, CFSTR("_UICollectionLayoutHelpers.m"), 822, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("!CGRectIsNull(frame)"));

  }
  if (a5 <= 0.0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CGRect _UIApplyRTLTransformForFrameWithDimension(CGRect, CGFloat)");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "handleFailureInFunction:file:lineNumber:description:", v15, CFSTR("_UICollectionLayoutHelpers.m"), 823, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("layoutDimension > 0"));

  }
  memset(&v18, 0, sizeof(v18));
  CGAffineTransformMakeTranslation(&v18, a5, 0.0);
  v16 = v18;
  memset(&v17, 0, sizeof(v17));
  CGAffineTransformScale(&v17, &v16, -1.0, 1.0);
  v16 = v17;
  v20.origin.x = a1;
  v20.origin.y = a2;
  v20.size.width = a3;
  v20.size.height = a4;
  CGRectApplyAffineTransform(v20, &v16);
}

void sub_185922E84(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

double _UICollectionLayoutDistanceBetweenPointsOnAxis(uint64_t a1, double a2, double a3, double a4, double a5)
{
  double v5;

  if ((unint64_t)(a1 - 1) > 1)
    v5 = sqrt((a4 - a2) * (a4 - a2) + (a5 - a3) * (a5 - a3));
  else
    v5 = _UIPointValueForAxis(a1, a4 - a2, a5 - a3);
  return fabs(v5);
}

const __CFString *_UIStringFromContentInsetsReference(unint64_t a1)
{
  if (a1 > 4)
    return CFSTR("unknown");
  else
    return off_1E16B8E48[a1];
}

id __copy_helper_block_e8_32n41_8_8_t0w64_s64_s72_s80_s88_s96_t104w4_s112(uint64_t a1, uint64_t a2)
{
  return __copy_constructor_8_8_t0w64_s64_s72_s80_s88_s96_t104w4_s112(a1 + 32, (id *)(a2 + 32));
}

void __destroy_helper_block_e8_32n26_8_s64_s72_s80_s88_s96_s112(uint64_t a1)
{
  __destructor_8_s64_s72_s80_s88_s96_s112((id *)(a1 + 32));
}

const __CFString *_UITextInputSessionAccidentalDictationOutcomeString(unint64_t a1)
{
  if (a1 > 7)
    return CFSTR("?");
  else
    return off_1E16B92C0[a1];
}

void sub_18592713C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<_UIOrderedRangeIndexerImpl>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_1E168B6A8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<_UIOrderedRangeIndexerImpl>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_1E168B6A8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x186DC895CLL);
}

uint64_t std::shared_ptr<_UIRTreeContainerNode<unsigned long>>::operator=[abi:nn180100](uint64_t a1, __int128 *a2)
{
  __int128 v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  v3 = *a2;
  *(_QWORD *)a2 = 0;
  *((_QWORD *)a2 + 1) = 0;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  *(_OWORD *)a1 = v3;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return a1;
}

void sub_18592735C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  void *v11;
  void *v12;
  uint64_t v13;
  va_list va;

  va_start(va, a11);

  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 80), 8);

  _Unwind_Resume(a1);
}

void sub_18592747C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  void *v12;

  _Unwind_Resume(a1);
}

uint64_t _UIRTreeContainerNode<unsigned long>::enumerate(uint64_t result, _BYTE *a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  __int128 v13;
  __int128 v14;
  uint64_t (*v15)(uint64_t, _QWORD *, uint64_t, _OWORD *, _BYTE *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  _OWORD v20[2];

  v5 = (_QWORD *)result;
  v6 = *(_QWORD *)(result + 72) - *(_QWORD *)(result + 64);
  if (v6)
  {
    v7 = 0;
    v8 = 0;
    v9 = v6 >> 3;
    if (v9 <= 1)
      v10 = 1;
    else
      v10 = v9;
    while (1)
    {
      v11 = v5[8] + v7;
      v12 = (__int128 *)(v5[11] + 32 * v8);
      v13 = *v12;
      v14 = v12[1];
      v15 = *(uint64_t (**)(uint64_t, _QWORD *, uint64_t, _OWORD *, _BYTE *))(a3 + 16);
      v20[0] = v13;
      v20[1] = v14;
      result = v15(a3, v5, v11, v20, a2);
      if (*a2)
        break;
      ++v8;
      v7 += 8;
      if (v10 == v8)
        goto LABEL_7;
    }
  }
  else
  {
LABEL_7:
    v16 = v5[5];
    v17 = v5[6];
    if (v16 != v17)
    {
      v18 = v16 + 16;
      do
      {
        result = _UIRTreeContainerNode<unsigned long>::enumerate(*(_QWORD *)(v18 - 16), a2, a3);
        if (*a2)
          v19 = 1;
        else
          v19 = v18 == v17;
        v18 += 16;
      }
      while (!v19);
    }
  }
  return result;
}

void sub_185927720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 __Block_byref_object_copy__29(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(a2 + 48);
  v3 = *(_OWORD *)(a2 + 64);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v3;
  return result;
}

double _UIRTreeExpansionCostScoreForFrames(float64x2_t *a1, float64x2_t *a2)
{
  float64x2_t v2;
  float64x2_t v3;
  float64x2_t v4;
  float64x2_t v5;
  float64x2_t v6;
  float64x2_t v7;
  float64x2_t v8;
  int64x2_t v9;
  int64x2_t v10;
  float64x2_t v11;
  double result;

  v2 = a1[1];
  v3 = vaddq_f64(*a1, vminnmq_f64(v2, (float64x2_t)0));
  v4 = vabsq_f64(v2);
  v5 = a2[1];
  v6 = vaddq_f64(*a2, vminnmq_f64(v5, (float64x2_t)0));
  v7 = vaddq_f64(v3, v4);
  v8 = vaddq_f64(v6, vabsq_f64(v5));
  v9 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v7, v8), (int8x16_t)vcgeq_f64(v6, v3));
  if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v9, 1), (int8x16_t)v9).u64[0] & 0x8000000000000000) != 0)
    return 0.0;
  v10 = (int64x2_t)vsubq_f64(vmaxnmq_f64(v7, v8), vminnmq_f64(v3, v6));
  v11 = vmulq_f64((float64x2_t)vzip1q_s64(v10, (int64x2_t)v4), (float64x2_t)vzip2q_s64(v10, (int64x2_t)v4));
  *(_QWORD *)&result = *(_OWORD *)&vdivq_f64(v11, (float64x2_t)vdupq_laneq_s64((int64x2_t)v11, 1));
  return result;
}

void std::__shared_ptr_emplace<_UIRTreeContainerNode<unsigned long>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_1E168B670;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<_UIRTreeContainerNode<unsigned long>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_1E168B670;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x186DC895CLL);
}

void _UIRTreeContainerNode<unsigned long>::~_UIRTreeContainerNode(uint64_t a1)
{
  _UIRTreeContainerNode<unsigned long>::~_UIRTreeContainerNode(a1);
  JUMPOUT(0x186DC895CLL);
}

void std::vector<std::shared_ptr<_UIRTreeContainerNode<unsigned long>>>::__destroy_vector::operator()[abi:nn180100](void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v4;
  void *v5;

  v1 = *a1;
  v2 = **a1;
  if (v2)
  {
    v4 = (uint64_t)v1[1];
    v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        v4 = std::shared_ptr<_UIRTreeContainerNode<unsigned long>>::~shared_ptr[abi:nn180100](v4 - 16);
      while ((void *)v4 != v2);
      v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void std::shared_ptr<_UIRTreeContainerNode<unsigned long>>::__enable_weak_this[abi:nn180100]<_UIRTreeContainerNode<unsigned long>,_UIRTreeContainerNode<unsigned long>,void>(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  std::__shared_weak_count *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t *p_shared_weak_owners;
  unint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  if (a2)
  {
    v4 = (std::__shared_weak_count *)a2[1];
    if (!v4 || v4->__shared_owners_ == -1)
    {
      v5 = *(std::__shared_weak_count **)(a1 + 8);
      if (v5)
      {
        p_shared_owners = (unint64_t *)&v5->__shared_owners_;
        do
          v7 = __ldxr(p_shared_owners);
        while (__stxr(v7 + 1, p_shared_owners));
        p_shared_weak_owners = (unint64_t *)&v5->__shared_weak_owners_;
        do
          v9 = __ldxr(p_shared_weak_owners);
        while (__stxr(v9 + 1, p_shared_weak_owners));
        v4 = (std::__shared_weak_count *)a2[1];
      }
      *a2 = a3;
      a2[1] = v5;
      if (v4)
        std::__shared_weak_count::__release_weak(v4);
      if (v5)
      {
        v10 = (unint64_t *)&v5->__shared_owners_;
        do
          v11 = __ldaxr(v10);
        while (__stlxr(v11 - 1, v10));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
          std::__shared_weak_count::__release_weak(v5);
        }
      }
    }
  }
}

uint64_t std::shared_ptr<_UIRTreeContainerNode<unsigned long>>::~shared_ptr[abi:nn180100](uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

char *std::vector<unsigned long>::__vallocate[abi:nn180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 61)
    abort();
  result = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<unsigned long>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[8 * v4];
  return result;
}

void *std::__allocate_at_least[abi:nn180100]<std::allocator<unsigned long>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61)
    std::__throw_bad_array_new_length[abi:nn180100]();
  return operator new(8 * a2);
}

uint64_t _ZNSt3__17__sort3B8nn180100INS_17_ClassicAlgPolicyERZN21_UIRTreeContainerNodeImE46reversedIndexesOfChildrenWithClosestAffinityToEDv4_dEUlmmE_NS_11__wrap_iterIPmEEEEjT1_SA_SA_T0_(uint64_t *a1, uint64_t *a2, uint64_t *a3, float64x2_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  float64x2_t *v7;
  float64x2_t v8;
  float64x2_t v9;
  float64x2_t v10;
  float64x2_t v11;
  float64x2_t v12;
  int64x2_t v13;
  unint64_t v14;
  double v15;
  double v16;
  float64x2_t v17;
  float64x2_t *v18;
  float64x2_t v19;
  float64x2_t v20;
  int64x2_t v21;
  float64x2_t v22;
  uint64_t v23;
  float64x2_t *v24;
  float64x2_t v25;
  float64x2_t v26;
  float64x2_t v27;
  int64x2_t v28;
  unint64_t v29;
  double v30;
  double v31;
  float64x2_t v32;
  float64x2_t v33;
  double v34;
  double v35;
  float64x2_t v36;
  float64x2_t v37;
  uint64_t v38;
  float64x2_t *v39;
  float64x2_t v40;
  float64x2_t v41;
  float64x2_t v42;
  float64x2_t v43;
  float64x2_t v44;
  int64x2_t v45;
  unint64_t v46;
  double v47;
  double v48;
  float64x2_t v49;
  float64x2_t *v50;
  float64x2_t v51;
  float64x2_t v52;
  int64x2_t v53;
  float64x2_t v54;
  float64x2_t *v55;
  float64x2_t v56;
  float64x2_t v57;
  float64x2_t v58;
  float64x2_t v59;
  float64x2_t v60;
  int64x2_t v61;
  unint64_t v62;
  double v63;
  double v64;
  float64x2_t v65;
  float64x2_t *v66;
  float64x2_t v67;
  float64x2_t v68;
  int64x2_t v69;
  float64x2_t v70;

  v5 = *a2;
  v6 = *a1;
  v7 = (float64x2_t *)(a5 + 32 * *a2);
  v9 = *v7;
  v8 = v7[1];
  v10 = *a4;
  v11 = vaddq_f64(*v7, v8);
  v12 = vaddq_f64(*a4, a4[1]);
  v13 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v11, v12), (int8x16_t)vcgeq_f64(*a4, *v7));
  v14 = vandq_s8((int8x16_t)vdupq_laneq_s64(v13, 1), (int8x16_t)v13).u64[0];
  v15 = 0.0;
  v16 = 0.0;
  if ((v14 & 0x8000000000000000) == 0)
  {
    v17 = vsubq_f64(vmaxnmq_f64(v11, v12), vminnmq_f64(v9, v10));
    v16 = vmulq_laneq_f64(v17, v17, 1).f64[0] / vmuld_lane_f64(v8.f64[0], v8, 1);
  }
  v18 = (float64x2_t *)(a5 + 32 * v6);
  v19 = v18[1];
  v20 = vaddq_f64(*v18, v19);
  v21 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v20, v12), (int8x16_t)vcgeq_f64(v10, *v18));
  if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v21, 1), (int8x16_t)v21).u64[0] & 0x8000000000000000) == 0)
  {
    v22 = vsubq_f64(vmaxnmq_f64(v20, v12), vminnmq_f64(*v18, v10));
    v15 = vmulq_laneq_f64(v22, v22, 1).f64[0] / vmuld_lane_f64(v19.f64[0], v19, 1);
  }
  v23 = *a3;
  v24 = (float64x2_t *)(a5 + 32 * *a3);
  v26 = *v24;
  v25 = v24[1];
  v27 = vaddq_f64(*v24, v25);
  v28 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v27, v12), (int8x16_t)vcgeq_f64(v10, *v24));
  v29 = vandq_s8((int8x16_t)vdupq_laneq_s64(v28, 1), (int8x16_t)v28).u64[0];
  if (v16 > v15)
  {
    v30 = 0.0;
    v31 = 0.0;
    if ((v29 & 0x8000000000000000) == 0)
    {
      v32 = vsubq_f64(vmaxnmq_f64(v27, v12), vminnmq_f64(v26, v10));
      v31 = vmulq_laneq_f64(v32, v32, 1).f64[0] / vmuld_lane_f64(v25.f64[0], v25, 1);
    }
    if ((v14 & 0x8000000000000000) == 0)
    {
      v33 = vsubq_f64(vmaxnmq_f64(v11, v12), vminnmq_f64(v9, v10));
      v30 = vmulq_laneq_f64(v33, v33, 1).f64[0] / vmuld_lane_f64(v8.f64[0], v8, 1);
    }
    if (v31 > v30)
    {
      *a1 = v23;
      *a3 = v6;
      return 1;
    }
    *a1 = v5;
    *a2 = v6;
    v55 = (float64x2_t *)(a5 + 32 * *a3);
    v57 = *v55;
    v56 = v55[1];
    v58 = *a4;
    v59 = vaddq_f64(*v55, v56);
    v60 = vaddq_f64(*a4, a4[1]);
    v61 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v59, v60), (int8x16_t)vcgeq_f64(*a4, *v55));
    v62 = vandq_s8((int8x16_t)vdupq_laneq_s64(v61, 1), (int8x16_t)v61).u64[0];
    v63 = 0.0;
    v64 = 0.0;
    if ((v62 & 0x8000000000000000) == 0)
    {
      v65 = vsubq_f64(vmaxnmq_f64(v59, v60), vminnmq_f64(v57, v58));
      v64 = vmulq_laneq_f64(v65, v65, 1).f64[0] / vmuld_lane_f64(v56.f64[0], v56, 1);
    }
    v66 = (float64x2_t *)(a5 + 32 * v6);
    v67 = v66[1];
    v68 = vaddq_f64(*v66, v67);
    v69 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v68, v60), (int8x16_t)vcgeq_f64(v58, *v66));
    if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v69, 1), (int8x16_t)v69).u64[0] & 0x8000000000000000) == 0)
    {
      v70 = vsubq_f64(vmaxnmq_f64(v68, v60), vminnmq_f64(*v66, v58));
      v63 = vmulq_laneq_f64(v70, v70, 1).f64[0] / vmuld_lane_f64(v67.f64[0], v67, 1);
    }
    if (v64 <= v63)
      return 1;
    *a2 = *a3;
    *a3 = v6;
    return 2;
  }
  v34 = 0.0;
  v35 = 0.0;
  if ((v29 & 0x8000000000000000) == 0)
  {
    v36 = vsubq_f64(vmaxnmq_f64(v27, v12), vminnmq_f64(v26, v10));
    v35 = vmulq_laneq_f64(v36, v36, 1).f64[0] / vmuld_lane_f64(v25.f64[0], v25, 1);
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    v37 = vsubq_f64(vmaxnmq_f64(v11, v12), vminnmq_f64(v9, v10));
    v34 = vmulq_laneq_f64(v37, v37, 1).f64[0] / vmuld_lane_f64(v8.f64[0], v8, 1);
  }
  if (v35 > v34)
  {
    *a2 = v23;
    *a3 = v5;
    v38 = *a1;
    v39 = (float64x2_t *)(a5 + 32 * *a2);
    v41 = *v39;
    v40 = v39[1];
    v42 = *a4;
    v43 = vaddq_f64(*v39, v40);
    v44 = vaddq_f64(*a4, a4[1]);
    v45 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v43, v44), (int8x16_t)vcgeq_f64(*a4, *v39));
    v46 = vandq_s8((int8x16_t)vdupq_laneq_s64(v45, 1), (int8x16_t)v45).u64[0];
    v47 = 0.0;
    v48 = 0.0;
    if ((v46 & 0x8000000000000000) == 0)
    {
      v49 = vsubq_f64(vmaxnmq_f64(v43, v44), vminnmq_f64(v41, v42));
      v48 = vmulq_laneq_f64(v49, v49, 1).f64[0] / vmuld_lane_f64(v40.f64[0], v40, 1);
    }
    v50 = (float64x2_t *)(a5 + 32 * v38);
    v51 = v50[1];
    v52 = vaddq_f64(*v50, v51);
    v53 = (int64x2_t)vandq_s8((int8x16_t)vcgeq_f64(v52, v44), (int8x16_t)vcgeq_f64(v42, *v50));
    if ((vandq_s8((int8x16_t)vdupq_laneq_s64(v53, 1), (int8x16_t)v53).u64[0] & 0x8000000000000000) == 0)
    {
      v54 = vsubq_f64(vmaxnmq_f64(v52, v44), vminnmq_f64(*v50, v42));
      v47 = vmulq_laneq_f64(v54, v54, 1).f64[0] / vmuld_lane_f64(v51.f64[0], v51, 1);
    }
    if (v48 <= v47)
      return 1;
    *a1 = *a2;
    *a2 = v38;
    return 2;
  }
  return 0;
}

unint64_t *std::__sort3[abi:nn180100]<std::_ClassicAlgPolicy,std::greater<void> &,unsigned long *>(unint64_t *result, unint64_t *a2, unint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = *result;
  v5 = *a3;
  if (*a2 <= *result)
  {
    if (v5 > v3)
    {
      *a2 = v5;
      *a3 = v3;
      v6 = *result;
      if (*a2 > *result)
      {
        *result = *a2;
        *a2 = v6;
      }
    }
  }
  else
  {
    if (v5 <= v3)
    {
      *result = v3;
      *a2 = v4;
      if (*a3 <= v4)
        return result;
      *a2 = *a3;
    }
    else
    {
      *result = v5;
    }
    *a3 = v4;
  }
  return result;
}

BOOL std::__insertion_sort_incomplete[abi:nn180100]<std::_ClassicAlgPolicy,std::greater<void> &,unsigned long *>(unint64_t *a1, unint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;

  v2 = 1;
  switch(a2 - a1)
  {
    case 0:
    case 1:
      return v2;
    case 2:
      v3 = *(a2 - 1);
      v4 = *a1;
      if (v3 > *a1)
      {
        *a1 = v3;
        *(a2 - 1) = v4;
      }
      return 1;
    case 3:
      v20 = a1[1];
      v21 = *(a2 - 1);
      if (v20 <= v21)
        v22 = *(a2 - 1);
      else
        v22 = a1[1];
      if (v20 >= v21)
        v20 = *(a2 - 1);
      *(a2 - 1) = v20;
      a1[1] = v22;
      v23 = *(a2 - 1);
      if (v23 <= *a1)
        v24 = *a1;
      else
        v24 = *(a2 - 1);
      if (v23 >= *a1)
        v23 = *a1;
      *(a2 - 1) = v23;
      v26 = *a1;
      v25 = a1[1];
      if (v24 <= v25)
        v26 = a1[1];
      if (v24 < v25)
        v25 = v24;
      *a1 = v26;
      a1[1] = v25;
      return 1;
    case 4:
      v48 = a1[1];
      v47 = a1[2];
      if (*a1 <= v47)
        v49 = a1[2];
      else
        v49 = *a1;
      if (*a1 < v47)
        v47 = *a1;
      a1[2] = v47;
      *a1 = v49;
      v50 = *(a2 - 1);
      if (v48 <= v50)
        v51 = *(a2 - 1);
      else
        v51 = v48;
      if (v48 < v50)
        v50 = v48;
      *(a2 - 1) = v50;
      v52 = *a1;
      if (*a1 <= v51)
        v53 = v51;
      else
        v53 = *a1;
      if (*a1 >= v51)
        v52 = v51;
      *a1 = v53;
      a1[1] = v52;
      v54 = a1[2];
      v55 = *(a2 - 1);
      if (v54 <= v55)
        v56 = *(a2 - 1);
      else
        v56 = a1[2];
      if (v54 >= v55)
        v54 = *(a2 - 1);
      *(a2 - 1) = v54;
      v57 = a1[1];
      if (v57 <= v56)
        v58 = v56;
      else
        v58 = a1[1];
      if (v57 >= v56)
        v57 = v56;
      a1[1] = v58;
      a1[2] = v57;
      return 1;
    case 5:
      v27 = *a1;
      v28 = a1[1];
      if (*a1 <= v28)
        v29 = a1[1];
      else
        v29 = *a1;
      if (*a1 >= v28)
        v27 = a1[1];
      *a1 = v29;
      a1[1] = v27;
      v30 = a1[3];
      v31 = *(a2 - 1);
      if (v30 <= v31)
        v32 = *(a2 - 1);
      else
        v32 = a1[3];
      if (v30 >= v31)
        v30 = *(a2 - 1);
      *(a2 - 1) = v30;
      a1[3] = v32;
      v33 = *(a2 - 1);
      v34 = a1[2];
      if (v33 <= v34)
        v35 = a1[2];
      else
        v35 = *(a2 - 1);
      if (v33 >= v34)
        v33 = a1[2];
      *(a2 - 1) = v33;
      v37 = a1[2];
      v36 = a1[3];
      v38 = a1[1];
      if (v35 <= v36)
        v37 = a1[3];
      if (v35 < v36)
        v36 = v35;
      a1[2] = v37;
      a1[3] = v36;
      v39 = *(a2 - 1);
      if (v38 <= v39)
        v40 = *(a2 - 1);
      else
        v40 = v38;
      if (v38 < v39)
        v39 = v38;
      *(a2 - 1) = v39;
      v41 = *a1;
      v43 = a1[2];
      v42 = a1[3];
      if (v42 <= *a1)
        v44 = *a1;
      else
        v44 = a1[3];
      if (v42 >= *a1)
        v42 = *a1;
      if (v44 <= v43)
        v41 = a1[2];
      if (v44 < v43)
        v43 = v44;
      if (v42 <= v40)
        v45 = v40;
      else
        v45 = v42;
      if (v42 >= v40)
        v42 = v40;
      if (v45 <= v43)
        v40 = v43;
      *a1 = v41;
      a1[1] = v40;
      if (v45 >= v43)
        v46 = v43;
      else
        v46 = v45;
      a1[2] = v46;
      a1[3] = v42;
      return 1;
    default:
      v6 = a1 + 2;
      v5 = a1[2];
      v8 = *a1;
      v7 = a1[1];
      if (v7 <= v5)
        v9 = a1[2];
      else
        v9 = a1[1];
      if (v7 < v5)
        v5 = a1[1];
      if (v5 <= v8)
        v10 = *a1;
      else
        v10 = v5;
      if (v5 >= v8)
        v5 = *a1;
      *v6 = v5;
      if (v10 <= v9)
        v11 = v9;
      else
        v11 = v8;
      if (v10 >= v9)
        v10 = v9;
      *a1 = v11;
      a1[1] = v10;
      v12 = a1 + 3;
      if (a1 + 3 == a2)
        return 1;
      v13 = 0;
      v14 = 24;
      break;
  }
  while (1)
  {
    v15 = *v12;
    v16 = *v6;
    if (*v12 > v16)
    {
      v17 = v14;
      while (1)
      {
        *(unint64_t *)((char *)a1 + v17) = v16;
        v18 = v17 - 8;
        if (v17 == 8)
          break;
        v16 = *(unint64_t *)((char *)a1 + v17 - 16);
        v17 -= 8;
        if (v15 <= v16)
        {
          v19 = (unint64_t *)((char *)a1 + v18);
          goto LABEL_27;
        }
      }
      v19 = a1;
LABEL_27:
      *v19 = v15;
      if (++v13 == 8)
        return v12 + 1 == a2;
    }
    v6 = v12;
    v14 += 8;
    if (++v12 == a2)
      return 1;
  }
}

void *_ZNSt3__119__allocate_at_leastB8nn180100INS_9allocatorIDv4_dEEEENS_19__allocation_resultINS_16allocator_traitsIT_E7pointerEEERS6_m(unint64_t a1)
{
  if (a1 >> 59)
    std::__throw_bad_array_new_length[abi:nn180100]();
  return operator new(32 * a1);
}

void _ZNSt3__115allocate_sharedB8nn180100I21_UIRTreeContainerNodeImENS_9allocatorIS2_EEJNS_10shared_ptrIS2_EENS_6vectorImNS3_ImEEEENS7_IDv4_dNS3_ISA_EEEEEvEENS5_IT_EERKT0_DpOT1_(uint64_t *a1, uint64_t a2, std::__shared_weak_count *a3, __int128 *a4, __int128 *a5)
{
  char *v10;
  char *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;

  v10 = (char *)operator new(0xB0uLL);
  v11 = v10;
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *(_QWORD *)v10 = &off_1E168B670;
  v12 = (uint64_t)(v10 + 32);
  if (a3)
  {
    p_shared_weak_owners = (unint64_t *)&a3->__shared_weak_owners_;
    do
      v14 = __ldxr(p_shared_weak_owners);
    while (__stxr(v14 + 1, p_shared_weak_owners));
  }
  v15 = *a4;
  v16 = *((_QWORD *)a4 + 2);
  *((_QWORD *)a4 + 1) = 0;
  *((_QWORD *)a4 + 2) = 0;
  *(_QWORD *)a4 = 0;
  v17 = *a5;
  v18 = *((_QWORD *)a5 + 2);
  *((_QWORD *)a5 + 1) = 0;
  *((_QWORD *)a5 + 2) = 0;
  *(_QWORD *)a5 = 0;
  *((_QWORD *)v10 + 5) = 0;
  *((_QWORD *)v10 + 4) = &off_1E168B618;
  *((_QWORD *)v10 + 6) = 0;
  *((_QWORD *)v10 + 7) = a2;
  *((_QWORD *)v10 + 8) = a3;
  if (a3)
  {
    v19 = (unint64_t *)&a3->__shared_weak_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
  }
  *((_QWORD *)v10 + 9) = 0;
  *((_QWORD *)v10 + 10) = 0;
  *((_QWORD *)v10 + 11) = 0;
  *((_OWORD *)v10 + 6) = v15;
  *((_QWORD *)v10 + 14) = v16;
  *(_OWORD *)(v10 + 120) = v17;
  *((_QWORD *)v10 + 17) = v18;
  _UIRTreeContainerNode<unsigned long>::commonInit((int64x2_t *)v10 + 2);
  if (a3)
    std::__shared_weak_count::__release_weak(a3);
  *a1 = v12;
  a1[1] = (uint64_t)v11;
  std::shared_ptr<_UIRTreeContainerNode<unsigned long>>::__enable_weak_this[abi:nn180100]<_UIRTreeContainerNode<unsigned long>,_UIRTreeContainerNode<unsigned long>,void>((uint64_t)a1, (_QWORD *)v11 + 5, v12);
}

void sub_185928150(_Unwind_Exception *a1, uint64_t a2, ...)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count_vtbl *v5;
  std::__shared_weak_count_vtbl *v6;
  std::__shared_weak_count *shared_weak_owners;
  std::__shared_weak_count *v8;
  void *v9;
  va_list va;

  va_start(va, a2);
  v5 = v2[5].__vftable;
  if (v5)
  {
    v2[5].__shared_owners_ = (uint64_t)v5;
    operator delete(v5);
  }
  v6 = v2[4].__vftable;
  if (v6)
  {
    v2[4].__shared_owners_ = (uint64_t)v6;
    operator delete(v6);
  }
  std::vector<std::shared_ptr<_UIRTreeContainerNode<unsigned long>>>::__destroy_vector::operator()[abi:nn180100]((void ***)va);
  shared_weak_owners = (std::__shared_weak_count *)v2[2].__shared_weak_owners_;
  if (shared_weak_owners)
    std::__shared_weak_count::__release_weak(shared_weak_owners);
  v8 = (std::__shared_weak_count *)v2[2].__vftable;
  if (v8)
    std::__shared_weak_count::__release_weak(v8);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  std::__shared_weak_count::~__shared_weak_count(v2);
  operator delete(v9);
  _Unwind_Resume(a1);
}

void *std::__allocate_at_least[abi:nn180100]<std::allocator<std::shared_ptr<_UIRTreeContainerNode<unsigned long>>>>(unint64_t a1)
{
  if (a1 >> 60)
    std::__throw_bad_array_new_length[abi:nn180100]();
  return operator new(16 * a1);
}

uint64_t std::__throw_bad_weak_ptr[abi:nn180100]()
{
  std::__libcpp_verbose_abort("bad_weak_ptr was thrown in -fno-exceptions mode");
  return std::__shared_ptr_emplace<_UIRTreeContainerNode<_UICollectionViewRTreeElement>>::~__shared_ptr_emplace();
}

void std::__shared_ptr_emplace<_UIRTreeContainerNode<_UICollectionViewRTreeElement>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_1E168B638;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<_UIRTreeContainerNode<_UICollectionViewRTreeElement>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_1E168B638;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x186DC895CLL);
}

void _UIRTreeContainerNode<_UICollectionViewRTreeElement>::~_UIRTreeContainerNode(uint64_t a1)
{
  _UIRTreeContainerNode<_UICollectionViewRTreeElement>::~_UIRTreeContainerNode(a1);
  JUMPOUT(0x186DC895CLL);
}

void std::vector<_UICollectionViewRTreeElement>::__destroy_vector::operator()[abi:nn180100](void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    std::vector<_UICollectionViewRTreeElement>::__base_destruct_at_end[abi:nn180100]((uint64_t)v2, (uint64_t)*v2);
    operator delete(**a1);
  }
}

void std::vector<_UICollectionViewRTreeElement>::__base_destruct_at_end[abi:nn180100](uint64_t a1, uint64_t a2)
{
  uint64_t i;

  for (i = *(_QWORD *)(a1 + 8); i != a2; i -= 40)
  {

  }
  *(_QWORD *)(a1 + 8) = a2;
}

void *std::__allocate_at_least[abi:nn180100]<std::allocator<_UICollectionViewRTreeElement>>(unint64_t a1)
{
  if (a1 >= 0x666666666666667)
    std::__throw_bad_array_new_length[abi:nn180100]();
  return operator new(40 * a1);
}

uint64_t std::__unwrap_and_dispatch[abi:nn180100]<std::__overload<std::__move_loop<std::_ClassicAlgPolicy>,std::__move_trivial>,_UICollectionViewRTreeElement *,_UICollectionViewRTreeElement *,_UICollectionViewRTreeElement *,0>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  if (a1 != a2)
  {
    v5 = a1;
    do
    {
      _UICollectionViewRTreeElement::operator=(a3, v5);
      v5 += 40;
      a3 += 40;
    }
    while (v5 != a2);
  }
  return a3;
}

void _ZNSt3__115allocate_sharedB8nn180100I21_UIRTreeContainerNodeI29_UICollectionViewRTreeElementENS_9allocatorIS3_EEJNS_10shared_ptrIS3_EENS_6vectorIS2_NS4_IS2_EEEENS8_IDv4_dNS4_ISB_EEEEEvEENS6_IT_EERKT0_DpOT1_(uint64_t *a1, uint64_t a2, std::__shared_weak_count *a3, __int128 *a4, __int128 *a5)
{
  char *v10;
  char *v11;
  uint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  _QWORD v21[3];
  void **v22;

  v10 = (char *)operator new(0xB0uLL);
  v11 = v10;
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *(_QWORD *)v10 = &off_1E168B638;
  v12 = (uint64_t)(v10 + 32);
  if (a3)
  {
    p_shared_weak_owners = (unint64_t *)&a3->__shared_weak_owners_;
    do
      v14 = __ldxr(p_shared_weak_owners);
    while (__stxr(v14 + 1, p_shared_weak_owners));
  }
  v15 = *a4;
  v16 = *((_QWORD *)a4 + 2);
  *((_QWORD *)a4 + 1) = 0;
  *((_QWORD *)a4 + 2) = 0;
  *(_QWORD *)a4 = 0;
  v17 = *a5;
  v18 = *((_QWORD *)a5 + 2);
  *((_QWORD *)a5 + 1) = 0;
  *((_QWORD *)a5 + 2) = 0;
  *(_QWORD *)a5 = 0;
  *((_QWORD *)v10 + 5) = 0;
  *((_QWORD *)v10 + 4) = &off_1E168B5F8;
  *((_QWORD *)v10 + 6) = 0;
  *((_QWORD *)v10 + 7) = a2;
  *((_QWORD *)v10 + 8) = a3;
  if (a3)
  {
    v19 = (unint64_t *)&a3->__shared_weak_owners_;
    do
      v20 = __ldxr(v19);
    while (__stxr(v20 + 1, v19));
  }
  *((_OWORD *)v10 + 6) = v15;
  *((_QWORD *)v10 + 9) = 0;
  *((_QWORD *)v10 + 10) = 0;
  *((_QWORD *)v10 + 11) = 0;
  *((_QWORD *)v10 + 14) = v16;
  memset(v21, 0, sizeof(v21));
  *(_OWORD *)(v10 + 120) = v17;
  *((_QWORD *)v10 + 17) = v18;
  _UIRTreeContainerNode<_UICollectionViewRTreeElement>::commonInit((int64x2_t *)v10 + 2);
  v22 = (void **)v21;
  std::vector<_UICollectionViewRTreeElement>::__destroy_vector::operator()[abi:nn180100](&v22);
  if (a3)
    std::__shared_weak_count::__release_weak(a3);
  *a1 = v12;
  a1[1] = (uint64_t)v11;
  std::shared_ptr<_UIRTreeContainerNode<unsigned long>>::__enable_weak_this[abi:nn180100]<_UIRTreeContainerNode<unsigned long>,_UIRTreeContainerNode<unsigned long>,void>((uint64_t)a1, (_QWORD *)v11 + 5, v12);
}

void sub_1859284C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void **a12)
{
  std::__shared_weak_count *v12;
  std::__shared_weak_count *v13;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *shared_weak_owners;
  std::__shared_weak_count *v17;
  void *v18;

  v15 = v12[5].__vftable;
  if (v15)
  {
    v12[5].__shared_owners_ = (uint64_t)v15;
    operator delete(v15);
  }
  std::vector<_UICollectionViewRTreeElement>::__destroy_vector::operator()[abi:nn180100](&a12);
  std::vector<std::shared_ptr<_UIRTreeContainerNode<unsigned long>>>::__destroy_vector::operator()[abi:nn180100](&a12);
  shared_weak_owners = (std::__shared_weak_count *)v12[2].__shared_weak_owners_;
  if (shared_weak_owners)
    std::__shared_weak_count::__release_weak(shared_weak_owners);
  v17 = (std::__shared_weak_count *)v12[2].__vftable;
  if (v17)
    std::__shared_weak_count::__release_weak(v17);
  a12 = (void **)&a9;
  std::vector<_UICollectionViewRTreeElement>::__destroy_vector::operator()[abi:nn180100](&a12);
  if (v13)
    std::__shared_weak_count::__release_weak(v13);
  std::__shared_weak_count::~__shared_weak_count(v12);
  operator delete(v18);
  _Unwind_Resume(a1);
}

void stateMachineSpec_block_invoke_5_0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  _queue_compatibilityRecord(a1[4], a1[5]);
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void stateMachineSpec_block_invoke_6_0(uint64_t a1)
{
  _queue_removeCompatibilityRecord(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

void _queue_removeCompatibilityRecord(uint64_t a1, uint64_t a2)
{
  NSObject *v4;
  void *v5;
  id v6;

  _eventDeferringCompatibilityQueue();
  v4 = objc_claimAutoreleasedReturnValue();
  dispatch_assert_queue_V2(v4);

  _queue_compatibilityRecordsForDisplay(a1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "removeObjectForKey:", a2);
    v5 = v6;
  }

}

void stateMachineSpec_block_invoke_7(uint64_t *a1)
{
  _queue_setCompatibilityRecord(a1[4], a1[5], a1[6]);
}

void _queue_setCompatibilityRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v6;
  void *v7;
  NSObject *v8;
  void *v9;
  id v10;
  id v11;

  _eventDeferringCompatibilityQueue();
  v6 = objc_claimAutoreleasedReturnValue();
  dispatch_assert_queue_V2(v6);

  _queue_compatibilityRecordsForDisplay(a1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v7)
  {
    v10 = (id)objc_opt_new();
    _eventDeferringCompatibilityQueue();
    v8 = objc_claimAutoreleasedReturnValue();
    dispatch_assert_queue_V2(v8);

    _queue_compatibilityRecords();
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setObject:forKey:", v10, a1);

    v7 = v10;
  }
  v11 = v7;
  objc_msgSend(v7, "setObject:forKey:", a3, a2);

}

uint64_t stateMachineSpec_block_invoke_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;
  __CFString *v7;
  void *v8;
  int v9;
  id *v10;
  id *v11;
  _BOOL4 v12;
  uint64_t v13;
  id v14;
  void *v15;
  unint64_t v16;
  void *v17;
  int v18;
  void *v19;
  uint64_t v20;
  void *v21;
  NSObject *v22;
  id v23;
  id v24;
  _QWORD *v25;
  void *v26;
  char v27;
  uint64_t v28;
  id WeakRetained;
  _BYTE *v30;
  _QWORD *v32;
  _QWORD *v33;
  void *v34;
  unint64_t v35;
  void *v36;
  NSObject *v37;
  id *v38;
  id *v39;
  id *v40;
  NSObject *log;
  _BOOL4 v42;
  _QWORD block[4];
  id v45;
  id v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t);
  void (*v52)(uint64_t);
  id v53;
  uint8_t buf[4];
  id *v55;
  __int16 v56;
  id v57;
  __int16 v58;
  __CFString *v59;
  __int16 v60;
  int v61;
  __int16 v62;
  void *v63;
  __int16 v64;
  id *v65;
  uint64_t v66;

  v66 = *MEMORY[0x1E0C80C00];
  v6 = *(id *)(a2 + 16);
  v7 = _NSStringFromUIDeferringAction[a4];
  -[_UIEventDeferringManager internalBehavior](*(id **)a2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "wantsLocalIdealRules");

  if (v9)
  {
    -[_UIEventDeferringManager _localRecordForEnvironment:](*(id **)a2, (uint64_t)v6);
    v10 = (id *)objc_claimAutoreleasedReturnValue();
    v11 = v10;
    if (v10)
    {
      v12 = -[_UIEventDeferringRecord needsRecreation](v10);
      if (v12)
      {
        v13 = 0;
      }
      else
      {
        v14 = v11[3];
        objc_msgSend(v14, "invalidate");

        v13 = 1;
      }
      -[_UIEventDeferringRecord addRecreationReason:]((uint64_t)v11, *(_QWORD *)(a2 + 24));
      _UIEventDeferringShorterRecreationReasonStringForReason(*(void **)(a2 + 24));
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = qword_1ECD7CFB8;
      if (!qword_1ECD7CFB8)
      {
        v16 = __UILogCategoryGetNode("EventDeferring", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
        atomic_store(v16, (unint64_t *)&qword_1ECD7CFB8);
      }
      if ((*(_BYTE *)v16 & 1) != 0)
      {
        v37 = *(NSObject **)(v16 + 8);
        if (os_log_type_enabled(v37, OS_LOG_TYPE_ERROR))
        {
          v38 = *(id **)a2;
          *(_DWORD *)buf = 134350338;
          v55 = v38;
          v56 = 2114;
          v57 = v6;
          v58 = 2114;
          v59 = v7;
          v60 = 1026;
          v61 = !v12;
          v62 = 2114;
          v63 = v15;
          v64 = 2114;
          v65 = v11;
          _os_log_impl(&dword_185066000, v37, OS_LOG_TYPE_ERROR, "[%{public}p] [%{public}@] %{public}@ Disabling local record: invalidated: %{public}d; added recreation reaso"
            "n: %{public}@; record: %{public}@",
            buf,
            0x3Au);
        }
      }

    }
    else
    {
      v13 = 0;
    }

  }
  else
  {
    v13 = 0;
  }
  -[_UIEventDeferringManager internalBehavior](*(id **)a2);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = objc_msgSend(v17, "wantsLocalCompatibilityRules");

  if (v18)
  {
    -[_UIEventDeferringManager _displayHardwareIndentifierAccountingForNotFinalizedChange:](*(unsigned __int8 **)a2, 1);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    if (v19)
      objc_msgSend(MEMORY[0x1E0D00CF8], "displayWithHardwareIdentifier:", v19);
    else
      objc_msgSend(MEMORY[0x1E0D00CF8], "builtinDisplay");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v48 = 0;
    v49 = &v48;
    v50 = 0x3032000000;
    v51 = __Block_byref_object_copy__34;
    v52 = __Block_byref_object_dispose__34;
    v53 = 0;
    _eventDeferringCompatibilityQueue();
    v22 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = stateMachineSpec_block_invoke_9;
    block[3] = &unk_1E16B9698;
    v47 = &v48;
    v23 = v21;
    v45 = v23;
    v46 = v6;
    dispatch_sync(v22, block);

    v24 = *(id *)(a2 + 24);
    v25 = (_QWORD *)v49[5];
    if (!v25)
      goto LABEL_23;
    -[_UIEventDeferringRecord recreationReasons](v25);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = objc_msgSend(v26, "containsObject:", v24);

    v28 = v49[5];
    if (!v28)
      goto LABEL_23;
    WeakRetained = objc_loadWeakRetained((id *)(v28 + 32));
    if (WeakRetained != *(id *)(a2 + 8))
      v27 = 1;

    if ((v27 & 1) == 0)
    {
      v42 = -[_UIEventDeferringRecord needsRecreation]((_QWORD *)v49[5]);
      if (v42)
      {
        v20 = 0;
      }
      else
      {
        v32 = (_QWORD *)v49[5];
        if (v32)
          v32 = (_QWORD *)v32[3];
        v33 = v32;
        objc_msgSend(v33, "invalidate");

        v20 = 1;
      }
      -[_UIEventDeferringRecord addRecreationReason:](v49[5], *(_QWORD *)(a2 + 24));
      _UIEventDeferringShorterRecreationReasonStringForReason(*(void **)(a2 + 24));
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      v35 = qword_1ECD7CFC0;
      if (!qword_1ECD7CFC0)
      {
        v35 = __UILogCategoryGetNode("EventDeferring", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
        atomic_store(v35, (unint64_t *)&qword_1ECD7CFC0);
      }
      if ((*(_BYTE *)v35 & 1) != 0)
      {
        log = *(NSObject **)(v35 + 8);
        if (os_log_type_enabled(log, OS_LOG_TYPE_ERROR))
        {
          v39 = *(id **)a2;
          v40 = (id *)v49[5];
          *(_DWORD *)buf = 134350338;
          v55 = v39;
          v56 = 2114;
          v57 = v6;
          v58 = 2114;
          v59 = v7;
          v60 = 1026;
          v61 = !v42;
          v62 = 2114;
          v63 = v34;
          v64 = 2114;
          v65 = v40;
          _os_log_impl(&dword_185066000, log, OS_LOG_TYPE_ERROR, "[%{public}p] [%{public}@] %{public}@ Disabling local compatibility record: invalidated: %{public}d; added re"
            "creation reason: %{public}@; record: %{public}@",
            buf,
            0x3Au);
        }
      }

    }
    else
    {
LABEL_23:
      v20 = 0;
    }

    _Block_object_dispose(&v48, 8);
  }
  else
  {
    v20 = 0;
  }
  v30 = (_BYTE *)qword_1ECD7CFC8;
  if (!qword_1ECD7CFC8)
  {
    v30 = (_BYTE *)(__UILogCategoryGetNode("EventDeferring", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16);
    atomic_store((unint64_t)v30, (unint64_t *)&qword_1ECD7CFC8);
  }
  if ((*v30 & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("disabledLocalRecord: %d; disabledCompatibilityRecord: %d;"),
      v13,
      v20);
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    _emitDebugLogForTransition(a3, a4, v36, a2);

  }
  return 5;
}

void sub_18592CC3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void stateMachineSpec_block_invoke_9(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  _queue_compatibilityRecord(a1[4], a1[5]);
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void stateMachineSpec_block_invoke_12(uint64_t a1)
{
  _queue_removeCompatibilityRecord(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

uint64_t stateMachineSpec_block_invoke_13(uint64_t a1, unsigned __int8 **a2, uint64_t a3, uint64_t a4)
{
  unsigned __int8 *v7;
  __CFString *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  NSObject *v19;
  uint64_t v20;
  _BYTE *v21;
  void *v23;
  NSObject *v24;
  unsigned __int8 *v25;
  uint64_t v26;
  _QWORD v27[4];
  id v28;
  unsigned __int8 *v29;
  _QWORD block[4];
  id v31;
  unsigned __int8 *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void (*v38)(uint64_t);
  id v39;
  uint8_t buf[4];
  unsigned __int8 *v41;
  __int16 v42;
  unsigned __int8 *v43;
  __int16 v44;
  __CFString *v45;
  __int16 v46;
  uint64_t v47;
  uint64_t v48;

  v48 = *MEMORY[0x1E0C80C00];
  v7 = a2[2];
  v8 = _NSStringFromUIDeferringAction[a4];
  if (*((_BYTE *)a2 + 48) || *((_BYTE *)a2 + 49))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "stateMachineSpec_block_invoke_13");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "handleFailureInFunction:file:lineNumber:description:", v10, CFSTR("_UIEventDeferringManager.m"), 1106, CFSTR("[%p] [%@] %@: Invalid state. Unexpected value of ownerInitiatedInvalidation or ownerInitiatedWriting"), *a2, v7, v8);

  }
  -[_UIEventDeferringManager _displayHardwareIndentifierAccountingForNotFinalizedChange:](*a2, 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
    objc_msgSend(MEMORY[0x1E0D00CF8], "displayWithHardwareIdentifier:", v11);
  else
    objc_msgSend(MEMORY[0x1E0D00CF8], "builtinDisplay");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v34 = 0;
  v35 = &v34;
  v36 = 0x3032000000;
  v37 = __Block_byref_object_copy__34;
  v38 = __Block_byref_object_dispose__34;
  v39 = 0;
  _eventDeferringCompatibilityQueue();
  v13 = objc_claimAutoreleasedReturnValue();
  v14 = MEMORY[0x1E0C809B0];
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = stateMachineSpec_block_invoke_14;
  block[3] = &unk_1E16B9698;
  v33 = &v34;
  v15 = v12;
  v31 = v15;
  v32 = v7;
  dispatch_sync(v13, block);

  if (v35[5])
  {
    v16 = qword_1ECD7D008;
    if (!qword_1ECD7D008)
    {
      v16 = __UILogCategoryGetNode("EventDeferring", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
      atomic_store(v16, (unint64_t *)&qword_1ECD7D008);
    }
    if ((*(_BYTE *)v16 & 1) != 0)
    {
      v24 = *(NSObject **)(v16 + 8);
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
      {
        v25 = *a2;
        v26 = v35[5];
        *(_DWORD *)buf = 134349826;
        v41 = v25;
        v42 = 2114;
        v43 = v7;
        v44 = 2114;
        v45 = v8;
        v46 = 2114;
        v47 = v26;
        _os_log_impl(&dword_185066000, v24, OS_LOG_TYPE_ERROR, "[%{public}p] [%{public}@] %{public}@: Removed local compatibility record: %{public}@", buf, 0x2Au);
      }
    }
    v17 = (_QWORD *)v35[5];
    if (v17)
      v17 = (_QWORD *)v17[3];
    v18 = v17;
    objc_msgSend(v18, "invalidate");

    _eventDeferringCompatibilityQueue();
    v19 = objc_claimAutoreleasedReturnValue();
    v27[0] = v14;
    v27[1] = 3221225472;
    v27[2] = stateMachineSpec_block_invoke_15;
    v27[3] = &unk_1E16B1B50;
    v28 = v15;
    v29 = v7;
    dispatch_sync(v19, v27);

    v20 = 1;
  }
  else
  {
    v20 = 0;
  }
  v21 = (_BYTE *)qword_1ECD7D010;
  if (!qword_1ECD7D010)
  {
    v21 = (_BYTE *)(__UILogCategoryGetNode("EventDeferring", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16);
    atomic_store((unint64_t)v21, (unint64_t *)&qword_1ECD7D010);
  }
  if ((*v21 & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("removedCompatibilityRecord: %d;"), v20);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    _emitDebugLogForTransition(a3, a4, v23, (uint64_t)a2);

  }
  _Block_object_dispose(&v34, 8);

  return 10;
}

void sub_18592D074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void stateMachineSpec_block_invoke_14(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  _queue_compatibilityRecord(a1[4], a1[5]);
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = *(_QWORD *)(a1[6] + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = v2;

}

void stateMachineSpec_block_invoke_15(uint64_t a1)
{
  _queue_removeCompatibilityRecord(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

uint64_t stateMachineSpec_block_invoke_16(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  id v7;
  __CFString *v8;
  id *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id *v14;
  unint64_t v15;
  id *WeakRetained;
  id *v17;
  _BOOL8 v18;
  id v19;
  uint64_t v20;
  _BYTE *v21;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  NSObject *v27;
  uint64_t v28;
  _BYTE buf[24];
  __CFString *v30;
  uint64_t v31;
  id *v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v7 = (id)a2[2];
  v8 = _NSStringFromUIDeferringAction[a4];
  if (!*((_BYTE *)a2 + 48))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "stateMachineSpec_block_invoke_16");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "handleFailureInFunction:file:lineNumber:description:", v24, CFSTR("_UIEventDeferringManager.m"), 1586, CFSTR("[%p] [%@] %@: Invalid state. Unexpected value of ownerInitiatedRemoval: %d"), *a2, v7, v8, *((unsigned __int8 *)a2 + 48));

  }
  v9 = (id *)*a2;
  if (*a2)
  {
    v10 = a2[1];
    *(_QWORD *)buf = MEMORY[0x1E0C809B0];
    *(_QWORD *)&buf[8] = 3221225472;
    *(_QWORD *)&buf[16] = __83___UIEventDeferringManager__remoteRecordInStackMatchingEnvironment_deferringToken___block_invoke;
    v30 = (__CFString *)&unk_1E16BABA0;
    v31 = v10;
    -[_UIEventDeferringManager _remoteRecordsInStackMatchingEnvironment:passingTest:]((uint64_t)v9, (uint64_t)v7, (uint64_t)buf);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = v11;
    if (v11 && (unint64_t)objc_msgSend(v11, "count") >= 2)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v26, "handleFailureInMethod:object:file:lineNumber:description:", sel__remoteRecordInStackMatchingEnvironment_deferringToken_, v9, CFSTR("_UIEventDeferringManager.m"), 2452, CFSTR("[%p] %s: Invalid state. There should not be more than one remote record matching the deferring token: matchingRecords: %@"), v9, "-[_UIEventDeferringManager _remoteRecordInStackMatchingEnvironment:deferringToken:]", v12);

    }
    objc_msgSend(v12, "firstObject");
    v9 = (id *)objc_claimAutoreleasedReturnValue();

    v13 = *a2;
  }
  else
  {
    v13 = 0;
  }
  -[_UIEventDeferringManager _topRemoteRecordInStackForEnvironment:](v13, (uint64_t)v7);
  v14 = (id *)objc_claimAutoreleasedReturnValue();
  if (v9)
  {
    v15 = qword_1ECD7D018;
    if (!qword_1ECD7D018)
    {
      v15 = __UILogCategoryGetNode("EventDeferring", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
      atomic_store(v15, (unint64_t *)&qword_1ECD7D018);
    }
    if ((*(_BYTE *)v15 & 1) != 0)
    {
      v27 = *(NSObject **)(v15 + 8);
      if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
      {
        v28 = *a2;
        *(_DWORD *)buf = 134350082;
        *(_QWORD *)&buf[4] = v28;
        *(_WORD *)&buf[12] = 2114;
        *(_QWORD *)&buf[14] = v7;
        *(_WORD *)&buf[22] = 2114;
        v30 = v8;
        LOWORD(v31) = 1026;
        *(_DWORD *)((char *)&v31 + 2) = v9 == v14;
        HIWORD(v31) = 2114;
        v32 = v9;
        _os_log_impl(&dword_185066000, v27, OS_LOG_TYPE_ERROR, "[%{public}p] [%{public}@] %{public}@: Removing remote record: wasTop: %{public}d; %{public}@",
          buf,
          0x30u);
      }
    }
    WeakRetained = (id *)objc_loadWeakRetained(v9 + 4);
    v17 = WeakRetained;
    if (WeakRetained)
    {
      objc_msgSend(WeakRetained[1], "removeObject:", v7);
      if (!*((_BYTE *)v17 + 16) && !objc_msgSend(v17[1], "count"))
        *((_BYTE *)v17 + 16) = 1;
    }
    v18 = v9 == v14;

    v19 = v9[3];
    objc_msgSend(v19, "invalidate");

    -[_UIEventDeferringManager _removeRemoteRecord:forEnvironment:](*a2, (uint64_t)v9, (uint64_t)v7);
    v20 = 1;
  }
  else
  {
    v18 = 0;
    v20 = 0;
  }
  v21 = (_BYTE *)qword_1ECD7D020;
  if (!qword_1ECD7D020)
  {
    v21 = (_BYTE *)(__UILogCategoryGetNode("EventDeferring", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16);
    atomic_store((unint64_t)v21, (unint64_t *)&qword_1ECD7D020);
  }
  if ((*v21 & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("removedRemoteRecord: %d; wasTop: %d;"), v20, v18);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    _emitDebugLogForTransition(a3, a4, v25, (uint64_t)a2);

  }
  return 9;
}

void stateMachineSpec_block_invoke_18(uint64_t *a1)
{
  _queue_setCompatibilityRecord(a1[4], a1[5], a1[6]);
}

uint64_t stateMachineSpec_block_invoke_19(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id *WeakRetained;
  id *v14;
  void *v15;
  id v16;
  uint64_t v17;
  _BYTE *v18;
  void *v20;
  uint64_t v21;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v5 = *(id *)(a2 + 16);
  -[_UIEventDeferringManager _remoteDeferringRecordStackForEnvironment:](*(_QWORD *)a2, (uint64_t)v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = objc_msgSend(v6, "count");
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v7 = (void *)objc_msgSend(v6, "copy");
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v25;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v25 != v10)
          objc_enumerationMutation(v7);
        v12 = *(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * v11);
        if (v12)
        {
          WeakRetained = (id *)objc_loadWeakRetained((id *)(v12 + 32));
          v14 = WeakRetained;
          if (WeakRetained)
          {
            objc_msgSend(WeakRetained[1], "removeObject:", v5);
            if (!*((_BYTE *)v14 + 16) && !objc_msgSend(v14[1], "count"))
              *((_BYTE *)v14 + 16) = 1;
          }

          v15 = *(void **)(v12 + 24);
        }
        else
        {
          v15 = 0;
        }
        v16 = v15;
        objc_msgSend(v16, "invalidate");

        -[_UIEventDeferringManager _removeRemoteRecord:forEnvironment:](*(_QWORD *)a2, v12, (uint64_t)v5);
        ++v11;
      }
      while (v9 != v11);
      v17 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
      v9 = v17;
    }
    while (v17);
  }

  v18 = (_BYTE *)stateMachineSpec_block_invoke_19___s_category;
  if (!stateMachineSpec_block_invoke_19___s_category)
  {
    v18 = (_BYTE *)(__UILogCategoryGetNode("EventDeferring", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16);
    atomic_store((unint64_t)v18, (unint64_t *)&stateMachineSpec_block_invoke_19___s_category);
  }
  if ((*v18 & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("removed remote records: %li;"), v21);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    _emitDebugLogForTransition(a3, a4, v20, a2);

  }
  return 10;
}

uint64_t stateMachineSpec_block_invoke_21(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  id v7;
  __CFString *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  _QWORD *v14;
  void *v15;
  id *v16;
  unint64_t v17;
  id v18;
  _BOOL4 v19;
  unint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id *v29;
  unint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  __CFString *v35;
  uint64_t v36;
  _BYTE *v37;
  NSObject *v39;
  id v40;
  unint64_t v41;
  NSObject *v42;
  id v43;
  NSObject *v44;
  _BOOL4 v45;
  NSObject *v46;
  id v47;
  NSObject *log;
  uint64_t v49;
  uint64_t v50;
  void **v51;
  id v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  id v61;
  uint8_t buf[4];
  id v63;
  __int16 v64;
  uint64_t v65;
  __int16 v66;
  uint64_t v67;
  __int16 v68;
  id *v69;
  __int16 v70;
  _BOOL4 v71;
  _BYTE v72[128];
  uint64_t v73;

  v6 = a2;
  v73 = *MEMORY[0x1E0C80C00];
  v7 = *(id *)(a2 + 16);
  v8 = _NSStringFromUIDeferringAction[a4];
  -[_UIEventDeferringManager _descriptorForCompatibility:environment:deferringToken:](*(id *)v6, 0, v7, *(_QWORD *)(v6 + 8));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[_UIEventDeferringManager _predicateForDescriptor:](*(_QWORD *)v6, (uint64_t)v9);
  v10 = objc_claimAutoreleasedReturnValue();
  -[_UIEventDeferringManager _targetForDescriptor:](*(_QWORD *)v6, (uint64_t)v9);
  v11 = objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D00CC8], "sharedInstance");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = *(_QWORD **)(v6 + 8);
  if (v13)
    v13 = (_QWORD *)v13[9];
  v14 = v13;
  v54 = (void *)v11;
  v55 = (void *)v10;
  objc_msgSend(v12, "deferEventsMatchingPredicate:toTarget:withReason:", v10, v11, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  v53 = v15;
  v16 = (id *)-[_UIEventDeferringRecord _initWithDescriptor:invalidationToken:deferringToken:recordingManagerPointer:recreationReasons:]([_UIEventDeferringRecord alloc], v9, v15, *(void **)(v6 + 8), *(_QWORD *)v6, 0);
  v17 = qword_1ECD7D078;
  if (!qword_1ECD7D078)
  {
    v17 = __UILogCategoryGetNode("EventDeferring", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
    atomic_store(v17, (unint64_t *)&qword_1ECD7D078);
  }
  if ((*(_BYTE *)v17 & 1) != 0)
  {
    v39 = *(NSObject **)(v17 + 8);
    if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
    {
      v40 = *(id *)v6;
      *(_DWORD *)buf = 134349826;
      v63 = v40;
      v64 = 2114;
      v65 = (uint64_t)v7;
      v66 = 2114;
      v67 = (uint64_t)v8;
      v68 = 2114;
      v69 = v16;
      _os_log_impl(&dword_185066000, v39, OS_LOG_TYPE_ERROR, "[%{public}p] [%{public}@] %{public}@: Pushing remote record onto stack: %{public}@", buf, 0x2Au);
    }
  }
  -[_UIEventDeferringManager _pushRemoteRecordOnStack:forEnvironment:](*(_QWORD *)v6, (uint64_t)v16, (uint64_t)v7);
  v18 = *(id *)v6;
  v61 = 0;
  v19 = -[_UIEventDeferringManager _shouldDisableNewRecord:outRecreationReasons:]((uint64_t)v18, v16, &v61);
  v56 = v61;
  if (v19)
  {
    v20 = qword_1ECD7D080;
    if (!qword_1ECD7D080)
    {
      v20 = __UILogCategoryGetNode("EventDeferring", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
      atomic_store(v20, (unint64_t *)&qword_1ECD7D080);
    }
    if ((*(_BYTE *)v20 & 1) != 0)
    {
      v46 = *(NSObject **)(v20 + 8);
      if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
      {
        v47 = *(id *)v6;
        *(_DWORD *)buf = 134349826;
        v63 = v47;
        v64 = 2114;
        v65 = (uint64_t)v7;
        v66 = 2114;
        v67 = (uint64_t)v8;
        v68 = 2114;
        v69 = v16;
        _os_log_impl(&dword_185066000, v46, OS_LOG_TYPE_ERROR, "[%{public}p] [%{public}@] %{public}@: Disabling new remote record: %{public}@", buf, 0x2Au);
      }
    }
    v49 = a4;
    v51 = (void **)v6;
    v52 = v7;
    if (v16)
      v21 = v16[3];
    else
      v21 = 0;
    v22 = v21;
    objc_msgSend(v22, "invalidate");

    v59 = 0u;
    v60 = 0u;
    v57 = 0u;
    v58 = 0u;
    v23 = v56;
    v24 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v57, v72, 16);
    if (v24)
    {
      v25 = v24;
      v26 = *(_QWORD *)v58;
      do
      {
        v27 = 0;
        do
        {
          if (*(_QWORD *)v58 != v26)
            objc_enumerationMutation(v23);
          v28 = *(void **)(*((_QWORD *)&v57 + 1) + 8 * v27);
          _UIEventDeferringShorterRecreationReasonStringForReason(v28);
          v29 = (id *)objc_claimAutoreleasedReturnValue();
          v30 = qword_1ECD7D088;
          if (!qword_1ECD7D088)
          {
            v30 = __UILogCategoryGetNode("EventDeferring", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
            atomic_store(v30, (unint64_t *)&qword_1ECD7D088);
          }
          if ((*(_BYTE *)v30 & 1) != 0)
          {
            log = *(NSObject **)(v30 + 8);
            if (os_log_type_enabled(log, OS_LOG_TYPE_ERROR))
            {
              v31 = *v51;
              *(_DWORD *)buf = 134349826;
              v63 = v31;
              v64 = 2114;
              v65 = (uint64_t)v52;
              v66 = 2114;
              v67 = (uint64_t)v8;
              v68 = 2114;
              v69 = v29;
              _os_log_impl(&dword_185066000, log, OS_LOG_TYPE_ERROR, "[%{public}p] [%{public}@] %{public}@: Disabling new remote record for reason: %{public}@", buf, 0x2Au);
            }
          }
          -[_UIEventDeferringRecord addRecreationReason:]((uint64_t)v16, (uint64_t)v28);

          ++v27;
        }
        while (v25 != v27);
        v32 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v57, v72, 16);
        v25 = v32;
      }
      while (v32);
    }

    v6 = (uint64_t)v51;
    v7 = v52;
    a4 = v49;
  }
  objc_msgSend(v7, "description");
  v33 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v34 = objc_msgSend(v33, "UTF8String");

  v35 = objc_retainAutorelease(v8);
  v36 = -[__CFString UTF8String](v35, "UTF8String");
  if (os_variant_has_internal_diagnostics())
  {
    v41 = qword_1ECD7D090;
    if (!qword_1ECD7D090)
    {
      v41 = __UILogCategoryGetNode("EventDeferring", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
      atomic_store(v41, (unint64_t *)&qword_1ECD7D090);
    }
    v42 = *(NSObject **)(v41 + 8);
    if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
    {
      v50 = a3;
      v43 = *(id *)v6;
      v44 = v42;
      v45 = -[_UIEventDeferringRecord needsRecreation](v16);
      *(_DWORD *)buf = 134350082;
      v63 = v43;
      a3 = v50;
      v64 = 2082;
      v65 = v34;
      v66 = 2082;
      v67 = v36;
      v68 = 2050;
      v69 = v16;
      v70 = 1026;
      v71 = v45;
      _os_log_impl(&dword_185066000, v44, OS_LOG_TYPE_DEFAULT, "[%{public}p] [%{public}s] %{public}s: Pushed remote record: %{public}p; disabled: %{public}d",
        buf,
        0x30u);

    }
  }
  v37 = (_BYTE *)qword_1ECD7D098;
  if (!qword_1ECD7D098)
  {
    v37 = (_BYTE *)(__UILogCategoryGetNode("EventDeferring", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16);
    atomic_store((unint64_t)v37, (unint64_t *)&qword_1ECD7D098);
  }
  if ((*v37 & 1) != 0)
    _emitDebugLogForTransition(a3, a4, &stru_1E16EDF20, v6);

  return 8;
}

id _descriptionForTransactionContext(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v1 = (void *)MEMORY[0x1E0CB3940];
  v3 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  objc_msgSend(*(id *)(a1 + 8), "succinctDescription");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stringWithFormat:", CFSTR("<_UIDeferringTransactionContext: reason: %@; currentEnvironment: %@; recreationReasonToAdd: %@; recreationReasonToRemove: %@; deferringToken: %@>"),
    v2,
    v5,
    v4,
    v3,
    v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

uint64_t _UIClickPresentationStatisticsReportEvent()
{
  return AnalyticsSendEventLazy();
}

id UICarPlayApplicationSceneSettingValueDescription(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;

  v4 = a3;
  if (a1 == 46 || a1 == 34)
  {
    BSSettingFlagIsYes();
    NSStringFromBOOL();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void sub_1859364F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185937290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18593E1CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185943204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185943AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  _Block_object_dispose(&a45, 8);
  _Unwind_Resume(a1);
}

void __UISimulateCrash(uint64_t a1)
{
  void (*v2)(uint64_t, uint64_t, const __CFString *);
  void *v3;
  void *v4;
  _QWORD v5[5];
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = (void (*)(uint64_t, uint64_t, const __CFString *))off_1ECD7D250;
  v9 = off_1ECD7D250;
  if (!off_1ECD7D250)
  {
    v5[0] = MEMORY[0x1E0C809B0];
    v5[1] = 3221225472;
    v5[2] = __getSimulateCrashSymbolLoc_block_invoke;
    v5[3] = &unk_1E16B14C0;
    v5[4] = &v6;
    __getSimulateCrashSymbolLoc_block_invoke(v5);
    v2 = (void (*)(uint64_t, uint64_t, const __CFString *))v7[3];
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    v2(a1, 1801640960, CFSTR("Nil document state as argument to -[UIKeyboardInput setDocumentState:]"));
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL __UISimulateCrash(pid_t, mach_exception_data_type_t, NSString *__strong)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("UIDebug_Internal.h"), 19, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185946808(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185947930(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_18594AD00(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_18594C4D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18594D444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185950250(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  id *v27;
  id *v28;
  uint64_t v29;

  objc_destroyWeak(v28);
  objc_destroyWeak(&location);
  objc_destroyWeak(v27);
  _Block_object_dispose(&a27, 8);
  objc_destroyWeak((id *)(v29 - 104));
  _Unwind_Resume(a1);
}

void sub_1859504C4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_185952310(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_185953878(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_18595656C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185956668(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_185957D00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185959204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18595E9C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18595F3DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18596234C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_185962BD8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1859631F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185963DBC(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_185964AA4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1859651EC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

double latinRatio(void *a1)
{
  id v1;
  unint64_t v2;
  int v3;
  int v4;
  double v6;
  double v7;

  v1 = a1;
  if (objc_msgSend(v1, "length"))
  {
    v2 = 0;
    v3 = 0;
    do
    {
      v4 = objc_msgSend(v1, "characterAtIndex:", v2);
      if ((v4 - 192) < 0x190 || (v4 & 0xFFFFFFDF) - 65 < 0x1A)
        ++v3;
      ++v2;
    }
    while (objc_msgSend(v1, "length") > v2);
    v6 = (double)v3;
  }
  else
  {
    v6 = 0.0;
  }
  v7 = v6 / (double)(unint64_t)objc_msgSend(v1, "length");

  return v7;
}

void sub_185970E4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185971084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185972F44(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_185979D08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_18597ACB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18597BCB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getTUISmartReplyGeneratorClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  TextInputUILibrary_0();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("TUISmartReplyGenerator");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7D238 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUISmartReplyGeneratorClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("_UIKeyboardStateManager.m"), 241, CFSTR("Unable to find class %s"), "TUISmartReplyGenerator");

    __break(1u);
  }
}

Class __getBEAutoFillTextSuggestionClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7D248)
    qword_1ECD7D248 = _sl_dlopen();
  if (!qword_1ECD7D248)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *BrowserEngineKitLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIKeyboardStateManager.m"), 278, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("BEAutoFillTextSuggestion");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getBEAutoFillTextSuggestionClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UIKeyboardStateManager.m"), 281, CFSTR("Unable to find class %s"), "BEAutoFillTextSuggestion");

LABEL_8:
    __break(1u);
  }
  qword_1ECD7D240 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getSimulateCrashSymbolLoc_block_invoke(_QWORD *a1)
{
  void *v2;
  void *result;
  void *v4;

  if (!qword_1ECD7D258)
    qword_1ECD7D258 = _sl_dlopen();
  v2 = (void *)qword_1ECD7D258;
  if (!qword_1ECD7D258)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CrashReporterSupportLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("UIDebug_Internal.h"), 18, CFSTR("%s"), 0);

    __break(1u);
    free(v4);
  }
  result = dlsym(v2, "SimulateCrash");
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = result;
  off_1ECD7D250 = *(_UNKNOWN **)(*(_QWORD *)(a1[4] + 8) + 24);
  return result;
}

void *AutoFillUILibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!qword_1ECD7D260)
    qword_1ECD7D260 = _sl_dlopen();
  v0 = (void *)qword_1ECD7D260;
  if (!qword_1ECD7D260)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AutoFillUILibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("_UIKeyboardStateManager.m"), 287, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void __getTUITypedStringCandidateClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  TextInputUILibrary_0();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("TUITypedStringCandidate");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getTUITypedStringCandidateClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUITypedStringCandidateClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIKeyboardInputManagerClient.h"), 26, CFSTR("Unable to find class %s"), "TUITypedStringCandidate");

    __break(1u);
  }
}

Class __getWebEventClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7D280)
    qword_1ECD7D280 = _sl_dlopen();
  if (!qword_1ECD7D280)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *WebKitLegacyLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIKeyboardStateManager.m"), 284, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("WebEvent");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWebEventClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UIKeyboardStateManager.m"), 285, CFSTR("Unable to find class %s"), "WebEvent");

LABEL_8:
    __break(1u);
  }
  qword_1ECD7D278 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getSBSTagTouchForTypingMenuSymbolLoc_block_invoke(_QWORD *a1)
{
  void *v2;
  void *result;
  void *v4;

  if (!qword_1ECD7D290)
    qword_1ECD7D290 = _sl_dlopen();
  v2 = (void *)qword_1ECD7D290;
  if (!qword_1ECD7D290)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *SpringBoardServicesLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("_UIKeyboardStateManager.m"), 230, CFSTR("%s"), 0);

    __break(1u);
    free(v4);
  }
  result = dlsym(v2, "SBSTagTouchForTypingMenu");
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = result;
  off_1ECD7D288 = *(_UNKNOWN **)(*(_QWORD *)(a1[4] + 8) + 24);
  return result;
}

void sub_18597F624(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18597F920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, void *a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

void sub_18597FADC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_18597FBD8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185980410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id a9)
{
  __destructor_8_s8_s16_s24_s80(&a9);
  _Unwind_Resume(a1);
}

uint64_t _UICellAccessoryOutlineDisclosureBehavesAsDisplayedForCurrentState(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;

  v3 = a1;
  if (dyld_program_sdk_at_least())
    v4 = objc_msgSend(v3, "_isDisplayedForEditingState:", a2);
  else
    v4 = 1;

  return v4;
}

id _accessoryConfigurationAsClass(void *a1, objc_class *a2)
{
  id v3;
  void *v5;
  void *v6;
  void *v7;

  v3 = a1;
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "__kindof _UICellAccessoryConfiguration * _Nonnull _accessoryConfigurationAsClass(_UICellAccessoryConfiguration * _Nonnull __strong, Class  _Nonnull __unsafe_unretained)");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    NSStringFromClass(a2);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "handleFailureInFunction:file:lineNumber:description:", v6, CFSTR("UICollectionViewListCell.m"), 1317, CFSTR("Accessory configuration is not of expected class (%@): %@"), v7, v3);

  }
  return v3;
}

void _ListCellReplaceSystemConstraintInLayoutGuide(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;

  v21 = a1;
  v5 = a2;
  v6 = a3;
  v7 = v21;
  if (v21)
  {
    if (v5)
      goto LABEL_3;
LABEL_8:
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void _ListCellReplaceSystemConstraintInLayoutGuide(UILayoutGuide * _Nonnull __strong, NSLayoutConstraint * _Nonnull __strong, NSLayoutConstraint * _Nonnull __strong)");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "handleFailureInFunction:file:lineNumber:description:", v16, CFSTR("UICollectionViewListCell.m"), 2268, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("constraintToRemove != nil"));

    v7 = v21;
    if (v6)
      goto LABEL_4;
    goto LABEL_9;
  }
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void _ListCellReplaceSystemConstraintInLayoutGuide(UILayoutGuide * _Nonnull __strong, NSLayoutConstraint * _Nonnull __strong, NSLayoutConstraint * _Nonnull __strong)");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "handleFailureInFunction:file:lineNumber:description:", v14, CFSTR("UICollectionViewListCell.m"), 2267, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("layoutGuide != nil"));

  v7 = 0;
  if (!v5)
    goto LABEL_8;
LABEL_3:
  if (v6)
    goto LABEL_4;
LABEL_9:
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void _ListCellReplaceSystemConstraintInLayoutGuide(UILayoutGuide * _Nonnull __strong, NSLayoutConstraint * _Nonnull __strong, NSLayoutConstraint * _Nonnull __strong)");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "handleFailureInFunction:file:lineNumber:description:", v18, CFSTR("UICollectionViewListCell.m"), 2269, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("constraintToAdd != nil"));

  v7 = v21;
LABEL_4:
  objc_msgSend(v7, "_systemConstraints");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "indexOfObject:", v5);

  if (v9 == 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void _ListCellReplaceSystemConstraintInLayoutGuide(UILayoutGuide * _Nonnull __strong, NSLayoutConstraint * _Nonnull __strong, NSLayoutConstraint * _Nonnull __strong)");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "handleFailureInFunction:file:lineNumber:description:", v20, CFSTR("UICollectionViewListCell.m"), 2272, CFSTR("Constraint to be removed %@ does not exist in the %@'s system constraints"), v5, v21);

  }
  objc_msgSend(v21, "_systemConstraints");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (void *)objc_msgSend(v10, "mutableCopy");

  objc_msgSend(v11, "replaceObjectAtIndex:withObject:", v9, v6);
  v12 = (void *)objc_msgSend(v11, "copy");
  objc_msgSend(v21, "_setSystemConstraints:", v12);

}

void recursivelyObserveChildrenState(void *a1, void *a2, char a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  _QWORD v15[4];
  id v16;
  char v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _QWORD aBlock[4];
  id v23;
  char v24;
  _BYTE v25[128];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __recursivelyObserveChildrenState_block_invoke;
  aBlock[3] = &unk_1E16BC830;
  v24 = a3;
  v7 = v5;
  v23 = v7;
  v8 = _Block_copy(aBlock);
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  objc_msgSend(v6, "children");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v18, v25, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v19;
    do
    {
      for (i = 0; i != v11; ++i)
      {
        if (*(_QWORD *)v19 != v12)
          objc_enumerationMutation(v9);
        v14 = *(void **)(*((_QWORD *)&v18 + 1) + 8 * i);
        v15[0] = MEMORY[0x1E0C809B0];
        v15[1] = 3221225472;
        v15[2] = __recursivelyObserveChildrenState_block_invoke_2;
        v15[3] = &unk_1E16BC858;
        v16 = v7;
        v17 = a3;
        objc_msgSend(v14, "_acceptMenuVisit:commandVisit:actionVisit:deferredElementVisit:", v15, v8, v8, 0);

      }
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v18, v25, 16);
    }
    while (v11);
  }

}

void sub_185984374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void recursivelyPopulateSelectedElements(void *a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id obj;
  _QWORD v11[4];
  id v12;
  _QWORD v13[4];
  id v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  objc_msgSend(a1, "children");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v16;
    v7 = MEMORY[0x1E0C809B0];
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v16 != v6)
          objc_enumerationMutation(obj);
        v9 = *(void **)(*((_QWORD *)&v15 + 1) + 8 * v8);
        v13[0] = v7;
        v13[1] = 3221225472;
        v13[2] = __recursivelyPopulateSelectedElements_block_invoke;
        v13[3] = &unk_1E16BC7B8;
        v14 = v3;
        v11[0] = v7;
        v11[1] = 3221225472;
        v11[2] = __recursivelyPopulateSelectedElements_block_invoke_2;
        v11[3] = &unk_1E16BC880;
        v12 = v14;
        objc_msgSend(v9, "_acceptMenuVisit:leafVisit:", v13, v11);

        ++v8;
      }
      while (v5 != v8);
      v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v5);
  }

}

void sub_18598487C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_185984ECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

id _UIMenuReplacingElementMatchingPredicate(void *a1, void *a2, void *a3)
{
  id v5;
  unsigned int (**v6)(id, void *);
  void *v7;
  id v8;
  id v9;
  char v10;
  uint64_t v11;
  _UNKNOWN **v12;
  void *i;
  void *v14;
  void *v15;
  _UNKNOWN **v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v23;
  void (**v24)(id, void *);
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v24 = a3;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v8 = v5;
  v9 = (id)objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
  if (v9)
  {
    v10 = 0;
    v11 = *(_QWORD *)v26;
    v12 = &off_1E167A000;
    v23 = *(_QWORD *)v26;
    do
    {
      for (i = 0; i != v9; i = (char *)i + 1)
      {
        if (*(_QWORD *)v26 != v11)
          objc_enumerationMutation(v8);
        v14 = *(void **)(*((_QWORD *)&v25 + 1) + 8 * (_QWORD)i);
        if (v6[2](v6, v14))
        {
          v24[2](v24, v14);
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v7, "addObjectsFromArray:", v15);

          v10 = 1;
        }
        else
        {
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            v16 = v12;
            v17 = v8;
            v18 = v14;
            objc_msgSend(v18, "children");
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            _UIMenuReplacingElementMatchingPredicate(v19, v6, v24);
            v20 = (void *)objc_claimAutoreleasedReturnValue();

            if (v20)
            {
              objc_msgSend(v18, "menuByReplacingChildren:", v20);
              v21 = objc_claimAutoreleasedReturnValue();

              v10 = 1;
              v18 = (id)v21;
            }
            v8 = v17;
            objc_msgSend(v7, "addObject:", v18, v23);

            v12 = v16;
            v11 = v23;
          }
          else
          {
            objc_msgSend(v7, "addObject:", v14);
          }
        }
      }
      v9 = (id)objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
    }
    while (v9);

    if ((v10 & 1) != 0)
      v9 = v7;
    else
      v9 = 0;
  }
  else
  {

  }
  return v9;
}

uint64_t __recursivelyObserveChildrenState_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 32);
  if (*(_BYTE *)(a1 + 40))
    return objc_msgSend(a2, "_addStateObserver:", v2);
  else
    return objc_msgSend(a2, "_removeStateObserver:", v2);
}

uint64_t __recursivelyObserveChildrenState_block_invoke_2(uint64_t a1, uint64_t a2)
{
  return recursivelyObserveChildrenState(*(_QWORD *)(a1 + 32), a2, *(unsigned __int8 *)(a1 + 40));
}

uint64_t __recursivelyPopulateSelectedElements_block_invoke(uint64_t a1, uint64_t a2)
{
  return recursivelyPopulateSelectedElements(a2, *(_QWORD *)(a1 + 32));
}

void __recursivelyPopulateSelectedElements_block_invoke_2(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if (objc_msgSend(v3, "state") == 1)
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v3);

}

void sub_185985BC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;
  id *v16;
  uint64_t v17;

  objc_destroyWeak(v16);
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v17 - 40));
  _Unwind_Resume(a1);
}

uint64_t _UIContextMenuCellSizeForElementSize(uint64_t result)
{
  uint64_t v1;
  void *v2;
  void *v3;

  if (result == -1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "_UIContextMenuCellSize _UIContextMenuCellSizeForElementSize(UIMenuElementSize)");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("_UIContextMenuCollectionViewUtilities.m"), 621, CFSTR("The element size should have been resolved and not automatic."));

    return 2;
  }
  else
  {
    v1 = 2;
    if (!result)
      v1 = 0;
    if (result != 1)
      return v1;
  }
  return result;
}

id _UIContextMenuSeparator(uint64_t a1, double a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  const __CFString *v10;
  void *v11;

  if (a1 == 2)
  {
    objc_msgSend(off_1E1679980, "absoluteDimension:", a2);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(off_1E1679980, "fractionalHeightDimension:", 1.0);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(off_1E16799A8, "sizeWithWidthDimension:heightDimension:", v7, v8);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(off_1E1679968, "layoutAnchorWithEdges:fractionalOffset:", 2, 0.0, 0.0);
    v6 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    if (a1 != 1)
    {
      v10 = 0;
      v9 = 0;
      v5 = 0;
      goto LABEL_7;
    }
    objc_msgSend(off_1E1679980, "fractionalWidthDimension:", 1.0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(off_1E1679980, "absoluteDimension:", a2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(off_1E16799A8, "sizeWithWidthDimension:heightDimension:", v3, v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(off_1E1679968, "layoutAnchorWithEdges:absoluteOffset:", 1, 0.0, -a2);
    v6 = objc_claimAutoreleasedReturnValue();
  }
  v9 = (void *)v6;
  v10 = CFSTR("kContextMenuItemSeparator");
LABEL_7:
  objc_msgSend(off_1E1679978, "decorationItemWithSize:elementKind:containerAnchor:", v5, v10, v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "_setRegistrationViewClass:", objc_opt_class());

  return v11;
}

void __appendMenuToSnapshot(void *a1, void *a2, int a3, char a4)
{
  id v7;
  id v8;
  _BOOL4 v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  _QWORD v14[4];
  id v15;
  id v16;
  _QWORD *v17;
  char v18;
  char v19;
  _QWORD v20[5];
  id v21;

  v7 = a1;
  v8 = a2;
  v9 = objc_msgSend(v7, "_resolvedElementSize") == 2 && (objc_msgSend(v7, "options") & 0x80) == 0;
  v20[0] = 0;
  v20[1] = v20;
  v20[2] = 0x3032000000;
  v20[3] = __Block_byref_object_copy__39;
  v20[4] = __Block_byref_object_dispose__39;
  v21 = 0;
  objc_msgSend(v7, "children");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if ((a3 & v9) != 0)
    v11 = 2;
  else
    v11 = 0;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = ____appendMenuToSnapshot_block_invoke;
  v14[3] = &unk_1E16BC8E8;
  v12 = v8;
  v18 = a3;
  v15 = v12;
  v17 = v20;
  v13 = v7;
  v16 = v13;
  v19 = a4;
  objc_msgSend(v10, "enumerateObjectsWithOptions:usingBlock:", v11, v14);

  _Block_object_dispose(v20, 8);
}

void sub_185989044(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ____appendMenuToSnapshot_block_invoke(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  _QWORD v14[2];

  v14[1] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  if (objc_msgSend(v3, "_isVisible"))
  {
    if (objc_msgSend(v3, "_isInlineGroup"))
    {
      __appendMenuToSnapshot(v3, *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 56), 0);
      v4 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
      v5 = *(void **)(v4 + 40);
      *(_QWORD *)(v4 + 40) = 0;

    }
    else
    {
      if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
      {
        +[_UIContextMenuSection sectionWithMenu:](_UIContextMenuSection, "sectionWithMenu:", *(_QWORD *)(a1 + 40));
        v6 = objc_claimAutoreleasedReturnValue();
        v7 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
        v8 = *(void **)(v7 + 40);
        *(_QWORD *)(v7 + 40) = v6;

        objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "setIsRoot:", *(unsigned __int8 *)(a1 + 57));
        v9 = *(void **)(a1 + 32);
        v14[0] = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v14, 1);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "appendSectionsWithIdentifiers:", v10);

      }
      v11 = *(void **)(a1 + 32);
      v13 = v3;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v13, 1);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "appendItemsWithIdentifiers:", v12);

    }
  }

}

id _UIContextMenuCollectionViewDataSourceSnapshot(void *a1, int a2)
{
  id v3;
  void *v4;

  v3 = a1;
  v4 = (void *)objc_opt_new();
  __appendMenuToSnapshot(v3, v4, a2, 1);

  return v4;
}

UICollectionViewCompositionalLayout *_UIContextMenuCollectionViewLayout(void *a1, int a2, uint64_t a3, void *a4)
{
  id v6;
  id v7;
  double v8;
  double v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  void *v16;
  void *v17;
  UICollectionViewCompositionalLayout *v18;
  id v19;
  id v20;
  id v21;
  UICollectionViewCompositionalLayout *v22;
  void *v23;
  const __CFString *v24;
  void *v25;
  void *v26;
  const char *v27;
  void *v28;
  void *v29;
  double v30;
  double v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  void *v44;
  void *v45;
  UICollectionViewCompositionalLayout *v47;
  void *v48;
  id v50;
  _QWORD v51[4];
  id v52;
  id v53;
  id v54;
  id v55;
  double v56;
  double v57;
  double v58;
  _QWORD v59[3];

  v59[1] = *MEMORY[0x1E0C80C00];
  v6 = a1;
  v7 = a4;
  objc_msgSend(v7, "displayScale");
  v9 = v8;
  _UIContextMenuGetPlatformMetrics(objc_msgSend(v7, "userInterfaceIdiom"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "itemSeparatorHeight");
  v12 = v11;
  UIRoundToScale(44.0 - v11, v9);
  v14 = v13;
  objc_msgSend(off_1E1679980, "fractionalWidthDimension:", 1.0);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(off_1E1679980, "estimatedDimension:", v14);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(off_1E16799A8, "sizeWithWidthDimension:heightDimension:", v15, v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  v18 = [UICollectionViewCompositionalLayout alloc];
  v51[0] = MEMORY[0x1E0C809B0];
  v51[1] = 3221225472;
  v51[2] = ___UIContextMenuCollectionViewLayout_block_invoke;
  v51[3] = &unk_1E16BC910;
  v19 = v6;
  v52 = v19;
  v20 = v10;
  v53 = v20;
  v56 = v9;
  v57 = v12;
  v58 = v14;
  v21 = v17;
  v54 = v21;
  v50 = v7;
  v55 = v50;
  v22 = -[UICollectionViewCompositionalLayout initWithSectionProvider:](v18, "initWithSectionProvider:", v51);
  if (a3 == 1 || !a3 && a2)
  {
    v23 = (void *)objc_opt_new();
    if (((a3 == 0) & a2) != 0)
      v24 = CFSTR("kContextMenuHeader");
    else
      v24 = CFSTR("kContextMenuSubmenuTitleHeader");
    objc_msgSend(off_1E1679970, "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v21, v24, 1);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v20, "forceUnpinnedHeader"))
    {
      objc_msgSend(v25, "setPinToVisibleBounds:", 0);
    }
    else
    {
      objc_msgSend(v50, "preferredContentSizeCategory");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v25, "setPinToVisibleBounds:", _UIContentSizeCategoryIsAccessibilityContentSizeCategory(v26, v27) ^ 1);

    }
    objc_msgSend(v25, "setZIndex:", 100);
    v59[0] = v25;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v59, 1);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "setBoundarySupplementaryItems:", v28);

    -[UICollectionViewCompositionalLayout setConfiguration:](v22, "setConfiguration:", v23);
  }
  objc_msgSend(v20, "gradientMaskingConfiguration");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "spacerHeaderFooterHeight");
  if (v30 > 0.0)
  {
    v31 = v30;
    objc_msgSend(off_1E1679980, "fractionalWidthDimension:", 1.0);
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(off_1E1679980, "estimatedDimension:", v31);
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(off_1E16799A8, "sizeWithWidthDimension:heightDimension:", v32, v33);
    v34 = (void *)objc_claimAutoreleasedReturnValue();

    v47 = v22;
    -[UICollectionViewCompositionalLayout configuration](v22, "configuration");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    v36 = (void *)MEMORY[0x1E0C99DE8];
    objc_msgSend(v35, "boundarySupplementaryItems");
    v37 = v19;
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v36, "arrayWithArray:", v38);
    v39 = (void *)objc_claimAutoreleasedReturnValue();

    v48 = v37;
    objc_msgSend(v37, "sectionIdentifiers");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v40, "firstObject");
    v41 = (void *)objc_claimAutoreleasedReturnValue();

    if (a3 || (a2 & 1) == 0)
    {
      if ((objc_msgSend(v41, "isRoot") & 1) != 0
        || (objc_msgSend(v41, "title"),
            v42 = (void *)objc_claimAutoreleasedReturnValue(),
            v43 = objc_msgSend(v42, "length"),
            v42,
            !v43))
      {
        objc_msgSend(off_1E1679970, "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v34, CFSTR("kContextMenuGradientStyleHeader"), 1);
        v44 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v39, "addObject:", v44);

      }
    }
    objc_msgSend(off_1E1679970, "boundarySupplementaryItemWithLayoutSize:elementKind:alignment:", v34, CFSTR("kContextMenuGradientStyleFooter"), 5);
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v39, "addObject:", v45);
    objc_msgSend(v35, "setBoundarySupplementaryItems:", v39);
    v22 = v47;
    -[UICollectionViewCompositionalLayout setConfiguration:](v47, "setConfiguration:", v35);

    v19 = v48;
  }

  return v22;
}

__CFString *_NSStringFromUIPhysicalButtonActionSetting(unint64_t a1)
{
  if (a1 > 3)
    return &stru_1E16EDF20;
  else
    return *off_1E16BC930[a1];
}

id _UIPhysicalButtonBSActionSettings(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v8 = (void *)objc_opt_new();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setObject:forSetting:", v9, 0);

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setObject:forSetting:", v10, 1);

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLongLong:", a4);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setObject:forSetting:", v11, 2);

  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a3);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setObject:forSetting:", v12, 3);

  v13 = (void *)objc_msgSend(v8, "copy");
  return v13;
}

BOOL _UIBackgroundConfigurationIsObscuring(void *a1)
{
  id v1;
  void *v2;
  void (**v3)(_QWORD, _QWORD);
  void *v4;
  int v5;
  uint64_t v6;
  double v7;
  void *v8;
  void *v9;
  _BOOL8 v10;

  v1 = a1;
  objc_msgSend(v1, "backgroundColor");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "backgroundColorTransformer");
  v3 = (void (**)(_QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
  +[UIColor clearColor](UIColor, "clearColor");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isEqual:", v2);

  if (!v5 && !v2)
  {
    if (!v3)
    {
      v2 = 0;
LABEL_11:
      v10 = 1;
      goto LABEL_12;
    }
    +[UIColor redColor](UIColor, "redColor");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    goto LABEL_4;
  }
  if (v3)
  {
LABEL_4:
    ((void (**)(_QWORD, void *))v3)[2](v3, v2);
    v6 = objc_claimAutoreleasedReturnValue();

    v2 = (void *)v6;
  }
  objc_msgSend(v2, "alphaComponent");
  if (v7 >= 0.01)
    goto LABEL_11;
  objc_msgSend(v1, "visualEffect");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
    goto LABEL_11;
  objc_msgSend(v1, "image");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v9 != 0;

LABEL_12:
  return v10;
}

id _preferredAttributesFittingAttributesWithInnerView(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  __int128 v13;
  id v14;
  _QWORD *p_x;
  CGFloat v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  CGFloat v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double Width;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  id v30;
  id v31;
  double v32;
  void *v34;
  void *v35;
  objc_class *v36;
  void *v37;
  _QWORD v38[4];
  id v39;
  id v40;
  uint64_t *v41;
  uint64_t *v42;
  double v43;
  uint64_t v44;
  double *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  double v49;
  uint64_t v50;
  CGRect *v51;
  uint64_t v52;
  void *v53;
  __int128 v54;
  __int128 v55;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v8 = v6;
  else
    v8 = 0;
  v9 = v8;
  if (objc_msgSend(v9, "preferredAttributesCached"))
  {
    v10 = v6;
  }
  else
  {
    if (!v7)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "UICollectionViewLayoutAttributes *_preferredAttributesFittingAttributesWithInnerView(UICollectionReusableView *__strong, UICollectionViewLayoutAttributes *__strong, UIView *__strong)");
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      v36 = (objc_class *)objc_opt_class();
      NSStringFromClass(v36);
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v34, "handleFailureInFunction:file:lineNumber:description:", v35, CFSTR("UICollectionViewTableSelfSizingUtilities.m"), 38, CFSTR("Cannot size a %@ without a content view!"), v37);

    }
    v11 = v7;
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), v12 = v11, (objc_opt_isKindOfClass() & 1) != 0))
    {
      objc_msgSend(v5, "contentView");
      v12 = (void *)objc_claimAutoreleasedReturnValue();

    }
    v50 = 0;
    v51 = (CGRect *)&v50;
    v52 = 0x4010000000;
    v53 = &unk_18685B0AF;
    v13 = *(_OWORD *)(MEMORY[0x1E0C9D648] + 16);
    v54 = *MEMORY[0x1E0C9D648];
    v55 = v13;
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    {
      v14 = v11;
      objc_msgSend(v6, "size");
      objc_msgSend(v14, "_updatedContentViewFrameForTargetWidth:");
      p_x = (_QWORD *)&v51->origin.x;
      v51[1].origin.x = v16;
      p_x[5] = v17;
      p_x[6] = v18;
      p_x[7] = v19;

    }
    else
    {
      objc_msgSend(v12, "frame");
      v20 = (_QWORD *)&v51->origin.x;
      v51[1].origin.x = v21;
      v20[5] = v22;
      v20[6] = v23;
      v20[7] = v24;
    }
    Width = CGRectGetWidth(v51[1]);
    if (Width == 0.0)
    {
      objc_msgSend(v6, "size");
      Width = v26;
    }
    objc_msgSend(v6, "size");
    v28 = v27;
    v44 = 0;
    v45 = (double *)&v44;
    v46 = 0x3010000000;
    v47 = &unk_18685B0AF;
    v48 = v29;
    v49 = v27;
    v38[0] = MEMORY[0x1E0C809B0];
    v38[1] = 3221225472;
    v38[2] = ___preferredAttributesFittingAttributesWithInnerView_block_invoke;
    v38[3] = &unk_1E16BCB18;
    v39 = v5;
    v30 = v12;
    v40 = v30;
    v41 = &v50;
    v42 = &v44;
    v43 = Width;
    objc_msgSend(v30, "_withUnsatisfiableConstraintsLoggingSuspendedIfEngineDelegateExists:", v38);
    if (v28 == v45[5])
    {
      v10 = v6;
    }
    else
    {
      v10 = (id)objc_msgSend(v6, "copy");
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v31 = v11;
        objc_msgSend(v31, "_separatorHeight");
        v45[5] = v32 + v45[5];

      }
      objc_msgSend(v10, "setSize:", v45[4], v45[5]);
    }

    _Block_object_dispose(&v44, 8);
    _Block_object_dispose(&v50, 8);

  }
  return v10;
}

void sub_185995D9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t ___preferredAttributesFittingAttributesWithInnerView_block_invoke(uint64_t a1)
{
  int v2;
  double v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  double Height;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  void (*v16)();
  void *v17;
  id v18;
  char v19;
  CGRect v20;

  objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
  objc_msgSend(*(id *)(a1 + 40), "setFrame:", *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 32), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 48), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 56));
  v19 = 0;
  v2 = objc_msgSend(*(id *)(a1 + 40), "_wantsAutolayout");
  v5 = *(double *)(a1 + 64);
  if (v2)
  {
    LODWORD(v3) = 1148846080;
    LODWORD(v4) = 1112014848;
    objc_msgSend(*(id *)(a1 + 40), "_systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:hasIntentionallyCollapsedHeight:", &v19, v5, 0.0, v3, v4);
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    *(_QWORD *)(v6 + 32) = v7;
    *(_QWORD *)(v6 + 40) = v8;
    if (!v19 && *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40) == 0.0)
    {
      v14 = MEMORY[0x1E0C809B0];
      v15 = 3221225472;
      v16 = ___preferredAttributesFittingAttributesWithInnerView_block_invoke_2;
      v17 = &unk_1E16B1B28;
      v9 = *(id *)(a1 + 40);
      v18 = v9;
      if (_UIInternalPreference_UIViewDebugSignposts_block_invoke_once != -1)
      {
        dispatch_once(&_UIInternalPreference_UIViewDebugSignposts_block_invoke_once, &v14);
        v9 = v18;
      }

      objc_msgSend(*(id *)(a1 + 32), "bounds", v14, v15, v16, v17);
      Height = CGRectGetHeight(v20);
      v11 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      goto LABEL_9;
    }
  }
  else
  {
    LODWORD(v3) = 1148846080;
    LODWORD(v4) = 1112014848;
    objc_msgSend(*(id *)(a1 + 32), "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:", v5, 0.0, v3, v4);
    if (Height > 0.0)
    {
      v11 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
      *(_QWORD *)(v11 + 32) = v12;
LABEL_9:
      *(double *)(v11 + 40) = Height;
    }
  }
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 56) = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8)
                                                                          + 40);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 48) = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8)
                                                                          + 32);
  return objc_msgSend(*(id *)(a1 + 40), "setFrame:", *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 32), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 48), *(double *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 56));
}

void ___preferredAttributesFittingAttributesWithInnerView_block_invoke_2()
{
  unint64_t v0;
  NSObject *v1;
  NSObject *v2;
  id v3;
  int v4;
  id v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v0 = _UIInternalPreference_UIViewDebugSignposts_block_invoke_2___s_category_0;
  if (!_UIInternalPreference_UIViewDebugSignposts_block_invoke_2___s_category_0)
  {
    v0 = __UILogCategoryGetNode("Warning", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
    atomic_store(v0, (unint64_t *)&_UIInternalPreference_UIViewDebugSignposts_block_invoke_2___s_category_0);
  }
  v1 = *(NSObject **)(v0 + 8);
  if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
  {
    v2 = v1;
    v4 = 138412290;
    v5 = (id)objc_opt_class();
    v3 = v5;
    _os_log_impl(&dword_185066000, v2, OS_LOG_TYPE_ERROR, "Warning once only: Detected a case where constraints ambiguously suggest a height of zero                          for a %@'s content view. We're considering the collapse unintentional and using                          standard height instead.", (uint8_t *)&v4, 0xCu);

  }
}

BOOL _UITableSelectionIsKeyIsBasedOnFocusSystem(void *a1)
{
  return (unint64_t)(objc_msgSend(a1, "_focusSystemState") - 1) <= 1
      && _AXSFullKeyboardAccessEnabled() == 0;
}

uint64_t _UIShouldAnimateDefaultCellHighlightAndSelection(void *a1)
{
  uint64_t result;

  if (objc_msgSend(a1, "userInterfaceIdiom") != 6)
    return 0;
  LODWORD(result) = _UIInternalPreferenceUsesDefault(&_UIInternalPreference_EnableCollectionTableCellSelectionAnimations, (uint64_t)CFSTR("EnableCollectionTableCellSelectionAnimations"), (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
  if (byte_1EDDA7E84)
    return 1;
  else
    return result;
}

uint64_t _UISupportsVisionDefaultContentHuggingSectionHeaders()
{
  uint64_t result;

  LODWORD(result) = _UIInternalPreferenceUsesDefault(&_UIInternalPreference_EnableDefaultContentHuggingSectionHeaders, (uint64_t)CFSTR("EnableDefaultContentHuggingSectionHeaders"), (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
  if (byte_1EDDA7E8C)
    return 1;
  else
    return result;
}

double _UIDefaultIndexBarWidthForTraitCollection(void *a1)
{
  id v1;
  double v2;
  void *v4;
  void *v5;

  v1 = a1;
  if (!v1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CGFloat _UIDefaultIndexBarWidthForTraitCollection(UITraitCollection *__strong)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UICollectionTableSharedSupport.m"), 161, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("traitCollection != nil"));

  }
  v2 = 15.0;
  if (objc_msgSend(v1, "userInterfaceIdiom") == 1
    && (objc_msgSend(v1, "horizontalSizeClass") != 1 || (dyld_program_sdk_at_least() & 1) == 0))
  {
    v2 = 30.0;
  }

  return v2;
}

id mutableDictionaryByTransformingLeafDictionariesToWeakValued(void *a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  void *v9;
  CFMutableDictionaryRef v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (objc_msgSend(v1, "count"))
  {
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionaryWithCapacity:", objc_msgSend(v1, "count"));
    v2 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v2 = 0;
  }
  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v13;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v13 != v6)
          objc_enumerationMutation(v3);
        v8 = *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * i);
        objc_msgSend(v3, "objectForKey:", v8, (_QWORD)v12);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = CFDictionaryCreateWithNonRetainedValuesFromNSDictionary(v9);

        objc_msgSend(v2, "setObject:forKey:", v10, v8);
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v5);
  }

  return v2;
}

UITargetedPreview *_UITargetedPreviewForContextMenuFromCell(void *a1)
{
  id v1;
  UIPreviewParameters *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  UITargetedPreview *v11;

  v1 = a1;
  v2 = objc_alloc_init(UIPreviewParameters);
  objc_msgSend(v1, "_systemBackgroundView");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "currentBackgroundColor");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "currentVisiblePathInContainerView:", v1);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v5)
      goto LABEL_8;
  }
  else
  {
    objc_msgSend(v1, "backgroundColor");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = 0;
    if (!v5)
      goto LABEL_8;
  }
  objc_msgSend(v1, "traitCollection");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "resolvedColorWithTraitCollection:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "alphaComponent");
  v10 = v9;

  if (v10 == 1.0 && (objc_msgSend(v1, "_hasBackgroundMaterial") & 1) == 0)
    -[UIPreviewParameters setBackgroundColor:](v2, "setBackgroundColor:", v5);
LABEL_8:
  -[UIPreviewParameters setVisiblePath:](v2, "setVisiblePath:", v6);

  v11 = -[UITargetedPreview initWithView:parameters:]([UITargetedPreview alloc], "initWithView:parameters:", v1, v2);
  return v11;
}

void sub_185997DFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18599C8B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_18599D704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1859A1CA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1859A2290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _UICollectionViewShouldRescueClientWithReloadDataFallbackForInvalidBatchUpdates(void *a1)
{
  id v1;
  unint64_t v2;
  NSObject *v3;
  uint64_t v4;
  NSObject *v6;
  int v7;
  id v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (qword_1EDDC6798 != -1)
    dispatch_once(&qword_1EDDC6798, &__block_literal_global_2171);
  if (_MergedGlobals_536)
  {
    if (os_variant_has_internal_diagnostics())
    {
      __UIFaultDebugAssertLog();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_FAULT))
      {
        v7 = 138412290;
        v8 = v1;
        _os_log_fault_impl(&dword_185066000, v6, OS_LOG_TYPE_FAULT, "%@", (uint8_t *)&v7, 0xCu);
      }

    }
    else
    {
      v2 = qword_1EDDC67A0;
      if (!qword_1EDDC67A0)
      {
        v2 = __UILogCategoryGetNode("Assert", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
        atomic_store(v2, (unint64_t *)&qword_1EDDC67A0);
      }
      v3 = *(NSObject **)(v2 + 8);
      if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      {
        v7 = 138412290;
        v8 = v1;
        _os_log_impl(&dword_185066000, v3, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&v7, 0xCu);
      }
    }
  }
  v4 = _MergedGlobals_536;

  return v4;
}

id _indexPathForSelectionInteraction(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;

  v1 = a1;
  objc_msgSend(v1, "_focusSystem");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "focusedItem");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (_IsKindOfUIView((uint64_t)v3))
    v4 = v3;
  else
    v4 = 0;
  v5 = v4;
  if (v5 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    objc_msgSend(v1, "_indexPathForCell:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

uint64_t _UITabOverridesDefaultPlacement(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;

  v1 = _MergedGlobals_989;
  v2 = a1;
  if (v1 != -1)
    dispatch_once(&_MergedGlobals_989, &__block_literal_global_286);
  v3 = objc_msgSend((id)qword_1ECD7D2B0, "containsObject:", v2);

  return v3;
}

void sub_1859BA91C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1859BA9E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1859BAA98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id a9)
{

  _Unwind_Resume(a1);
}

void sub_1859BABE8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1859BAD54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_1859BAF10(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1859BAFB4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1859BB018(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_1859BB640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,id a51)
{
  void *v51;

  _Block_object_dispose(&a46, 8);

  _Unwind_Resume(a1);
}

void sub_1859BB840(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_1859BB95C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{

  _Unwind_Resume(a1);
}

void sub_1859BB9F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{

  _Unwind_Resume(a1);
}

void sub_1859BBB1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{

  _Unwind_Resume(a1);
}

void sub_1859BBC54(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1859BBCC8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

id _UITreeFirstCommonAncestor(void *a1, void *a2, const char *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  BOOL v10;
  BOOL v11;
  unint64_t v12;
  unint64_t v13;

  v5 = a1;
  v6 = a2;
  v7 = v6;
  v8 = 0;
  if (!v5 || !v6)
    goto LABEL_18;
  if (v5 == v6)
  {
    v8 = v5;
    goto LABEL_18;
  }
  v9 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3690]), "initWithOptions:capacity:", 514, 20);
  v10 = 1;
  v11 = 1;
  v12 = (unint64_t)v7;
  v13 = (unint64_t)v5;
  while (!v11)
  {
    v13 = 0;
    if (v10)
      goto LABEL_10;
LABEL_8:
    v12 = 0;
LABEL_12:
    v11 = v13 != 0;
    v10 = v12 != 0;
    if (!(v13 | v12))
    {
      v8 = 0;
      goto LABEL_17;
    }
  }
  if ((objc_msgSend(v9, "containsObject:", v13) & 1) != 0)
    goto LABEL_16;
  objc_msgSend(v9, "addObject:", v13);
  v13 = (unint64_t)objc_msgSend((id)v13, a3);
  if (!v10)
    goto LABEL_8;
LABEL_10:
  if ((objc_msgSend(v9, "containsObject:", v12) & 1) == 0)
  {
    objc_msgSend(v9, "addObject:", v12);
    v12 = (unint64_t)objc_msgSend((id)v12, a3);
    goto LABEL_12;
  }
  v13 = v12;
LABEL_16:
  v8 = (id)v13;
LABEL_17:

LABEL_18:
  return v8;
}

BOOL __recursePreOrderDepthFirstTraversal(void *a1, const char *a2, uint64_t a3, void *a4, void *a5)
{
  id v9;
  uint64_t (**v10)(id, _QWORD, uint64_t, unsigned __int8 *);
  void (**v11)(id, void *, uint64_t, uint64_t, unsigned __int8 *);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  int v18;
  void *v19;
  _BOOL8 v20;
  id v22;
  id obj;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  unsigned __int8 Traversal;
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v9 = a1;
  v10 = a4;
  v11 = a5;
  if (v9)
  {
    Traversal = 0;
    v24 = 0u;
    v25 = 0u;
    v26 = 0u;
    v27 = 0u;
    v22 = v9;
    obj = v9;
    v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
    if (v12)
    {
      v13 = v12;
      v14 = *(_QWORD *)v25;
LABEL_4:
      v15 = 0;
      while (1)
      {
        if (*(_QWORD *)v25 != v14)
          objc_enumerationMutation(obj);
        v16 = *(void **)(*((_QWORD *)&v24 + 1) + 8 * v15);
        if (v10)
          v17 = v10[2](v10, *(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * v15), a3, &Traversal);
        else
          v17 = 1;
        v18 = Traversal;
        if ((_DWORD)v17 && !Traversal)
        {
          objc_msgSend(v16, a2);
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          Traversal = __recursePreOrderDepthFirstTraversal(v19, a2, a3 + 1, v10, v11);

          v18 = Traversal;
        }
        if (v11 && !v18)
        {
          v11[2](v11, v16, a3, v17, &Traversal);
          v18 = Traversal;
        }
        if (v18)
          break;
        if (v13 == ++v15)
        {
          v13 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
          if (v13)
            goto LABEL_4;
          break;
        }
      }
    }

    v20 = Traversal != 0;
    v9 = v22;
  }
  else
  {
    v20 = 0;
  }

  return v20;
}

void _UITreeBreadthFirstTraversal(void *a1, const char *a2, void *a3)
{
  id v5;
  unsigned int (**v6)(id, void *, _BYTE *);
  void *v7;
  unint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  void *v15;
  BOOL v16;
  void *v17;
  void *v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  char v24;
  _BYTE v25[128];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a3;
  if (v6)
  {
    if (!v5)
      goto LABEL_23;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void _UITreeBreadthFirstTraversal(id<NSFastEnumeration>  _Nullable __strong, SEL _Nonnull, BOOL (^ _Nonnull __strong)(id  _Nonnull __strong, BOOL * _Nonnull))");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "handleFailureInFunction:file:lineNumber:description:", v19, CFSTR("_UICommonAlgorithms.m"), 87, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("visitor != NULL"));

    if (!v5)
      goto LABEL_23;
  }
  v24 = 0;
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithObject:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v7, "count"))
  {
    v8 = 0;
    do
    {
      objc_msgSend(v7, "objectAtIndexedSubscript:", v8);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = 0u;
      v21 = 0u;
      v22 = 0u;
      v23 = 0u;
      v10 = v9;
      v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v20, v25, 16);
      if (v11)
      {
        v12 = v11;
        v13 = *(_QWORD *)v21;
        do
        {
          for (i = 0; i != v12; ++i)
          {
            if (*(_QWORD *)v21 != v13)
              objc_enumerationMutation(v10);
            v15 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * i);
            if (v6[2](v6, v15, &v24))
              v16 = v24 == 0;
            else
              v16 = 0;
            if (v16)
            {
              objc_msgSend(v15, a2);
              v17 = (void *)objc_claimAutoreleasedReturnValue();
              if (v17)
                objc_msgSend(v7, "addObject:", v17);

            }
            else if (v24)
            {
              goto LABEL_21;
            }
          }
          v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v20, v25, 16);
        }
        while (v12);
      }
LABEL_21:

      ++v8;
    }
    while (objc_msgSend(v7, "count") > v8);
  }

LABEL_23:
}

id _UITreeFindFirstAncestorMatchingCondition(void *a1, const char *a2, void *a3)
{
  id v5;
  uint64_t (**v6)(id, id, _BYTE *);
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  char v13;

  v5 = a1;
  v6 = a3;
  v13 = 0;
  v7 = v5;
  v8 = v7;
  if (v7)
  {
    v9 = v7;
    while ((v6[2](v6, v9, &v13) & 1) == 0)
    {
      if (v13)
      {
        v11 = 0;
        goto LABEL_10;
      }
      objc_msgSend(v9, a2);
      v10 = objc_claimAutoreleasedReturnValue();

      v9 = (id)v10;
      if (!v10)
        break;
    }
  }
  else
  {
    v9 = 0;
  }
  v9 = v9;
  v11 = v9;
LABEL_10:

  return v11;
}

void _UIEnumerateOptions(unint64_t a1, void *a2)
{
  void (**v3)(id, uint64_t, _BYTE *);
  char v4;
  BOOL v5;
  char v6;

  v3 = a2;
  v6 = 0;
  if (a1)
  {
    v4 = 0;
    do
    {
      if ((a1 & 1) != 0)
      {
        v3[2](v3, 1 << v4, &v6);
        if (v6)
          break;
      }
      ++v4;
      v5 = a1 > 1;
      a1 >>= 1;
    }
    while (v5);
  }

}

void UICollectionViewFlowLayoutAlertForInvalidItemSize(void *a1, CGFloat a2, CGFloat a3)
{
  id v5;
  unint64_t v6;
  NSObject *v7;
  NSObject *v8;
  void *v9;
  int v10;
  void *v11;
  __int16 v12;
  id v13;
  uint64_t v14;
  CGSize v15;
  CGSize v16;

  v14 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  if (os_variant_has_internal_diagnostics())
  {
    __UIFaultDebugAssertLog();
    v8 = objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(v8, OS_LOG_TYPE_FAULT))
      goto LABEL_7;
    v16.width = a2;
    v16.height = a3;
    NSStringFromCGSize(v16);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = 138412546;
    v11 = v9;
    v12 = 2112;
    v13 = v5;
    _os_log_fault_impl(&dword_185066000, v8, OS_LOG_TYPE_FAULT, "Negative or zero item sizes are not supported by flow layout. Make a symbolic breakpoint at UICollectionViewFlowLayoutAlertForInvalidItemSize to catch this in the debugger. Invalid size: %@; collection view: %@",
      (uint8_t *)&v10,
      0x16u);
LABEL_6:

LABEL_7:
    goto LABEL_8;
  }
  v6 = UICollectionViewFlowLayoutAlertForInvalidItemSize___s_category;
  if (!UICollectionViewFlowLayoutAlertForInvalidItemSize___s_category)
  {
    v6 = __UILogCategoryGetNode("Assert", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
    atomic_store(v6, (unint64_t *)&UICollectionViewFlowLayoutAlertForInvalidItemSize___s_category);
  }
  v7 = *(NSObject **)(v6 + 8);
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
  {
    v8 = v7;
    v15.width = a2;
    v15.height = a3;
    NSStringFromCGSize(v15);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = 138412546;
    v11 = v9;
    v12 = 2112;
    v13 = v5;
    _os_log_impl(&dword_185066000, v8, OS_LOG_TYPE_ERROR, "Negative or zero item sizes are not supported by flow layout. Make a symbolic breakpoint at UICollectionViewFlowLayoutAlertForInvalidItemSize to catch this in the debugger. Invalid size: %@; collection view: %@",
      (uint8_t *)&v10,
      0x16u);
    goto LABEL_6;
  }
LABEL_8:

}

const __CFString *_UIStringFromCollectionElementCategory(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("cell");
  if (a1 == 1)
    v1 = CFSTR("supplementaryView");
  if (a1 == 2)
    return CFSTR("decorationView");
  else
    return v1;
}

void sub_1859C0470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1859C10F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1859C1B5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1859C5BEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1859C5DA0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

uint64_t _UIGetFocusTreeLockVerboseLogging()
{
  int v0;
  _BOOL4 v1;
  int v3;

  if (_UIInternalPreferencesRevisionOnce != -1)
    dispatch_once(&_UIInternalPreferencesRevisionOnce, &__block_literal_global_4_20);
  v0 = _UIInternalPreferencesRevisionVar;
  if (_UIInternalPreferencesRevisionVar < 1
    || (v3 = _UIInternalPreference_FocusTreeLockVerboseLogging,
        _UIInternalPreferencesRevisionVar == _UIInternalPreference_FocusTreeLockVerboseLogging))
  {
    v1 = 1;
  }
  else
  {
    do
    {
      v1 = v0 >= v3;
      if (v0 < v3)
        break;
      _UIInternalPreferenceSync(v0, &_UIInternalPreference_FocusTreeLockVerboseLogging, (uint64_t)CFSTR("FocusTreeLockVerboseLogging"), (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
      v3 = _UIInternalPreference_FocusTreeLockVerboseLogging;
    }
    while (v0 != _UIInternalPreference_FocusTreeLockVerboseLogging);
  }
  return byte_1ECD75F3C || v1;
}

void UICollectionViewFlowLayoutBreakForInvalidSizes(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (!a1)
    NSLog(CFSTR(" "), v1, v2);
}

void sub_1859C8418(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1859C8658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__CFString *__UICVIndexPathDescription(void *a1)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  __CFString *v8;

  if (a1)
  {
    v1 = (void *)MEMORY[0x1E0CB3940];
    v2 = (void *)MEMORY[0x1E0CB37E8];
    v3 = a1;
    objc_msgSend(v2, "numberWithInteger:", objc_msgSend(v3, "section"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = (void *)MEMORY[0x1E0CB37E8];
    v6 = objc_msgSend(v3, "item");

    objc_msgSend(v5, "numberWithInteger:", v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "stringWithFormat:", CFSTR("(%@,%@)"), v4, v7);
    v8 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v8 = CFSTR("(nil)");
  }
  return v8;
}

id __UICVIndexPathsDescription(void *a1)
{
  id v1;
  id v2;
  unint64_t v3;
  void *v4;
  void *v5;

  v1 = a1;
  v2 = objc_alloc_init(MEMORY[0x1E0CB37A0]);
  if (objc_msgSend(v1, "count"))
  {
    v3 = 0;
    do
    {
      if (v3)
        objc_msgSend(v2, "appendString:", CFSTR(","));
      objc_msgSend(v1, "objectAtIndexedSubscript:", v3);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      __UICVIndexPathDescription(v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v2, "appendString:", v5);

      ++v3;
    }
    while (v3 < objc_msgSend(v1, "count"));
  }
  if (!objc_msgSend(v2, "length"))
    objc_msgSend(v2, "appendString:", CFSTR("()"));

  return v2;
}

void sub_1859D8468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  _Block_object_dispose(&a38, 8);
  _Unwind_Resume(a1);
}

void sub_1859D87D0(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void eventProfileCollectionCallback()
{
  int v0;
  char v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v0 = _MergedGlobals_994;
  eventProfileCollectionCheckEnabled();
  _MergedGlobals_994 = v1;
  if (v0 && (v1 & 1) == 0)
  {
    v6 = 0;
    v7 = &v6;
    v8 = 0x2020000000;
    v2 = off_1ECD7D338;
    v9 = off_1ECD7D338;
    if (!off_1ECD7D338)
    {
      v3 = EventTimingProfileServiceInterfaceLibrary();
      v2 = dlsym(v3, "ETPCollectionDone");
      v7[3] = (uint64_t)v2;
      off_1ECD7D338 = v2;
    }
    _Block_object_dispose(&v6, 8);
    if (v2)
    {
      ((void (*)(void))v2)();
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void _ETPCollectionDone(void)");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UIEventProfileCollection.m"), 32, CFSTR("%s"), dlerror());

      __break(1u);
    }
  }
}

void sub_1859DAA38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void eventProfileCollectionCheckEnabled()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;

  _UIKitUserDefaults();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "objectForKey:", CFSTR("EventTimingProfileCollection"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  if (_NSIsNSString())
    v2 = v1;
  else
    v2 = 0;
  v3 = v2;

  if (!objc_msgSend(v3, "length"))
    goto LABEL_9;
  v4 = v3;
  v9 = 0;
  v10 = &v9;
  v11 = 0x2020000000;
  v5 = getETPCollectionEnabledSymbolLoc_ptr;
  v12 = getETPCollectionEnabledSymbolLoc_ptr;
  if (!getETPCollectionEnabledSymbolLoc_ptr)
  {
    v6 = EventTimingProfileServiceInterfaceLibrary();
    v5 = dlsym(v6, "ETPCollectionEnabled");
    v10[3] = (uint64_t)v5;
    getETPCollectionEnabledSymbolLoc_ptr = v5;
  }
  _Block_object_dispose(&v9, 8);
  if (v5)
  {
    ((void (*)(id))v5)(v4);

LABEL_9:
    return;
  }
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _ETPCollectionEnabled(NSString * _Nullable __strong)");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "handleFailureInFunction:file:lineNumber:description:", v8, CFSTR("_UIEventProfileCollection.m"), 26, CFSTR("%s"), dlerror());

  __break(1u);
}

void sub_1859DABA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *EventTimingProfileServiceInterfaceLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!EventTimingProfileServiceInterfaceLibraryCore_frameworkLibrary)
    EventTimingProfileServiceInterfaceLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)EventTimingProfileServiceInterfaceLibraryCore_frameworkLibrary;
  if (!EventTimingProfileServiceInterfaceLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *EventTimingProfileServiceInterfaceLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("_UIEventProfileCollection.m"), 23, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void __logNextEventInfoStats_block_invoke(uint64_t a1)
{
  uint64_t TimeStamp;
  char EventFlags;
  unsigned __int8 *DataValue;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSObject *v10;
  uint64_t v11;
  unsigned int v12;
  _BOOL4 v13;
  NSObject *v14;
  double v15;
  double v16;
  int v17;
  int v18;
  _DWORD v19[2];
  __int16 v20;
  double v21;
  __int16 v22;
  double v23;
  __int16 v24;
  unsigned int v25;
  __int16 v26;
  int v27;
  __int16 v28;
  int v29;
  __int16 v30;
  int v31;
  __int16 v32;
  double v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  IOHIDEventGetIntegerValue();
  IOHIDEventGetIntegerValue();
  if (IOHIDEventGetIntegerValue() == 65308 && IOHIDEventGetIntegerValue() == 32)
  {
    TimeStamp = IOHIDEventGetTimeStamp();
    EventFlags = IOHIDEventGetEventFlags();
    DataValue = (unsigned __int8 *)IOHIDEventGetDataValue();
    v5 = *(_QWORD *)(a1 + 40);
    v6 = *((_QWORD *)DataValue + 1);
    v7 = *((_QWORD *)DataValue + 2);
    v8 = qword_1ECD7D348;
    if (!qword_1ECD7D348)
    {
      v8 = __UILogCategoryGetNode("EventFetcher", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
      atomic_store(v8, (unint64_t *)&qword_1ECD7D348);
    }
    v9 = v6 - v7;
    v10 = *(NSObject **)(v8 + 8);
    if (os_signpost_enabled(v10))
    {
      v11 = v5 - TimeStamp;
      v12 = EventFlags & 0x20;
      v13 = qword_1ECD7D340 < v11 && v12 == 0;
      v14 = v10;
      v15 = _UIMediaDurationForMachDuration(v11);
      v16 = _UIMediaDurationForMachDuration(qword_1ECD7D340);
      v17 = DataValue[1];
      v18 = *DataValue;
      v19[0] = 67110912;
      v19[1] = v13;
      v20 = 2048;
      v21 = v15;
      v22 = 2048;
      v23 = v16;
      v24 = 1024;
      v25 = v12 >> 5;
      v26 = 1024;
      v27 = byte_1ECD7D331;
      v28 = 1024;
      v29 = v17;
      v30 = 1024;
      v31 = v18;
      v32 = 2048;
      v33 = _UIMediaDurationForMachDuration(v9);
      _os_signpost_emit_with_name_impl(&dword_185066000, v14, OS_SIGNPOST_EVENT, 0xEEEEB0B5B2B2EEEELL, "NextEventInfo", "late=%u, receivedIn=%.06fs, expectedIn=%.06f, interpolated=%u, expected=%u, informational=%u, nextExpected=%u, nextReceivedIn=%.06f", (uint8_t *)v19, 0x3Eu);

    }
    byte_1ECD7D331 = *DataValue;
    qword_1ECD7D340 = v9;
  }
}

void sub_1859DC3C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1859E340C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1859E35A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _UITextFormattingViewControllerConfigurationClasses()
{
  if (qword_1ECD7D358 != -1)
    dispatch_once(&qword_1ECD7D358, &__block_literal_global_116);
  return (id)_MergedGlobals_995;
}

id GetExampleSentencesForLanguage(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v9[2];

  v9[1] = *MEMORY[0x1E0C80C00];
  v1 = (void *)MEMORY[0x1E0C99DC8];
  v2 = a1;
  objc_msgSend(&unk_1E1A9B0B8, "allKeys");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = v2;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v9, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "matchedLanguagesFromAvailableLanguages:forPreferredLanguages:", v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "firstObject");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(&unk_1E1A9B0B8, "objectForKeyedSubscript:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

id GetAlternativeExampleSentencesForLanguage(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v9[2];

  v9[1] = *MEMORY[0x1E0C80C00];
  v1 = (void *)MEMORY[0x1E0C99DC8];
  v2 = a1;
  objc_msgSend(&unk_1E1A9B0E0, "allKeys");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = v2;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v9, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "matchedLanguagesFromAvailableLanguages:forPreferredLanguages:", v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "firstObject");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(&unk_1E1A9B0E0, "objectForKeyedSubscript:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

id _UIResponderModallyPresentedViewControllerContainingResponder(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    v3 = v1;
    while (1)
    {
      if (objc_msgSend(v3, "__isKindOfUIViewController"))
      {
        v5 = v3;
        v3 = v5;
        goto LABEL_10;
      }
      if (_IsKindOfUIView((uint64_t)v3))
        break;
      objc_msgSend(v3, "nextResponder");
      v4 = (void *)objc_claimAutoreleasedReturnValue();

      v3 = v4;
      if (!v4)
        goto LABEL_11;
    }
    objc_msgSend(v3, "_viewControllerForAncestor");
    v5 = (id)objc_claimAutoreleasedReturnValue();
LABEL_10:
    v4 = v5;
  }
  else
  {
    v3 = 0;
    v4 = 0;
  }
LABEL_11:
  objc_msgSend(v4, "presentingViewController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (v6)
  {
    objc_msgSend(v6, "presentedViewController");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v8 = 0;
  }

  return v8;
}

id _simpleObjectDescription(void *a1)
{
  void *v1;
  id v2;
  objc_class *v3;
  void *v4;
  void *v5;

  v1 = (void *)MEMORY[0x1E0CB3940];
  v2 = a1;
  v3 = (objc_class *)objc_opt_class();
  NSStringFromClass(v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stringWithFormat:", CFSTR("%@ (%p)"), v4, v2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

id _selectorDescription(const char *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v1 = (void *)MEMORY[0x1E0CB3940];
  NSStringFromSelector(a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stringWithFormat:", CFSTR("“%@”"), v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

void sub_1859E6B74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1859E72A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14)
{
  void *v14;

  _Unwind_Resume(a1);
}

id _mapAsArray(uint64_t a1, void *a2)
{
  uint64_t (**v3)(id, _QWORD);
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v9;

  v3 = a2;
  v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", a1);
  if (a1)
  {
    v5 = 0;
    do
    {
      v6 = v3[2](v3, v5);
      if (v6 == 0x7FFFFFFFFFFFFFFFLL)
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%ld->X"), v5, v9);
      else
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%ld->%ld"), v5, v6);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "addObject:", v7);

      ++v5;
    }
    while (a1 != v5);
  }

  return v4;
}

void sub_1859EA378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1859ECC04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1859ECFAC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1859ED0C0(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1859F0514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, id *a11)
{
  id *v11;
  uint64_t v12;

  objc_destroyWeak(v11);
  objc_destroyWeak(location);
  objc_destroyWeak(a11);
  objc_destroyWeak((id *)(v12 - 144));
  _Unwind_Resume(a1);
}

void sub_1859F14D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1859F2920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

double _UIActionSheetPresentationControllerAvailableBoundsForLayout(uint64_t a1, void *a2, void *a3, double a4, double a5, double a6, double a7)
{
  id v13;
  id v14;
  double v15;
  double v16;
  double v17;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGRect v23;
  CGRect v24;

  v13 = a2;
  v14 = a3;
  v15 = *(double *)(a1 + 16);
  v16 = *(double *)(a1 + 32);
  v17 = *(double *)(a1 + 40);
  if (v16 > v17)
    v15 = round(v15 + (v16 - v17) * 0.5);
  objc_msgSend(v13, "convertRect:fromCoordinateSpace:", v14, a4, a5, a6, a7);
  x = v23.origin.x;
  y = v23.origin.y;
  width = v23.size.width;
  height = v23.size.height;
  if (!CGRectIsEmpty(v23) && !*(_BYTE *)(a1 + 104))
  {
    v24.origin.x = x;
    v24.origin.y = y;
    v24.size.width = width;
    v24.size.height = height;
    CGRectGetMinY(v24);
  }

  return v15;
}

void UIActionSheetPresentationControllerLayoutViews(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, unsigned __int8 *a7, double a8, double a9, double a10, double a11)
{
  id v21;
  id v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  id v27;
  id v28;
  id v29;
  double v30;
  double v31;
  CGFloat v32;
  double v33;
  double v34;
  double v35;
  int v36;
  __int128 v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  unsigned __int8 v44;
  int v45;
  __int128 v46;
  __int128 v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  id v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  id v74;
  double v76;
  id v77;
  _QWORD v78[4];
  id v79;
  id v80;
  __int128 v81;
  _BYTE v82[48];
  __int128 v83;
  __int128 v84;
  __int128 v85;
  _BYTE v86[32];
  _OWORD v87[2];
  __int128 v88;
  _BYTE v89[23];
  uint64_t v90;

  v90 = *MEMORY[0x1E0C80C00];
  v21 = a1;
  v22 = a2;
  v23 = *((_OWORD *)a7 + 5);
  v84 = *((_OWORD *)a7 + 4);
  v85 = v23;
  v24 = *((_OWORD *)a7 + 7);
  *(_OWORD *)v86 = *((_OWORD *)a7 + 6);
  *(_OWORD *)&v86[16] = v24;
  v25 = *((_OWORD *)a7 + 1);
  *(_OWORD *)v82 = *(_OWORD *)a7;
  *(_OWORD *)&v82[16] = v25;
  v26 = *((_OWORD *)a7 + 3);
  *(_OWORD *)&v82[32] = *((_OWORD *)a7 + 2);
  v83 = v26;
  v27 = a6;
  v28 = a5;
  v74 = a4;
  v29 = a3;
  v30 = a10;
  v31 = a11;
  v32 = UIActionSheetPresentationControllerFrameForPresentedView((double *)v82, v28, v27, a8, a9, v30, a11);
  v72 = v33;
  v73 = v32;
  v70 = v35;
  v71 = v34;
  v36 = *a7;
  v37 = *(_OWORD *)(a7 + 17);
  v88 = *(_OWORD *)(a7 + 1);
  *(_OWORD *)v89 = v37;
  *(_QWORD *)&v89[15] = *((_QWORD *)a7 + 4);
  v38 = *((double *)a7 + 5);
  v81 = *((_OWORD *)a7 + 3);
  v40 = *((double *)a7 + 8);
  v39 = *((double *)a7 + 9);
  v41 = *((double *)a7 + 10);
  v42 = *((double *)a7 + 11);
  v43 = *((double *)a7 + 12);
  v44 = a7[104];
  v45 = a7[105];
  v46 = *(_OWORD *)(a7 + 106);
  *(_QWORD *)((char *)v87 + 14) = *((_QWORD *)a7 + 15);
  v87[0] = v46;
  v82[0] = v36;
  *(_OWORD *)&v82[1] = *(_OWORD *)(a7 + 1);
  *(_OWORD *)&v82[17] = *(_OWORD *)(a7 + 17);
  *(_QWORD *)&v82[32] = *((_QWORD *)a7 + 4);
  *(double *)&v82[40] = v38;
  v65 = v38;
  v83 = *((_OWORD *)a7 + 3);
  *(double *)&v84 = v40;
  *((double *)&v84 + 1) = v39;
  *(double *)&v85 = v41;
  *((double *)&v85 + 1) = v42;
  *(double *)v86 = v43;
  v86[8] = v44;
  v86[9] = v45;
  v47 = *(_OWORD *)(a7 + 106);
  *(_QWORD *)&v86[24] = *((_QWORD *)a7 + 15);
  *(_OWORD *)&v86[10] = v47;
  v48 = _UIActionSheetPresentationControllerAvailableBoundsForLayout((uint64_t)v82, v28, v27, a8, a9, a10, v31);
  v50 = v49;
  v64 = v51;
  *(_OWORD *)&v82[1] = v88;
  v82[0] = v36;
  *(_OWORD *)&v82[17] = *(_OWORD *)v89;
  *(_QWORD *)&v82[32] = *(_QWORD *)&v89[15];
  *(double *)&v82[40] = v38;
  v83 = v81;
  *(double *)&v84 = v40;
  *((double *)&v84 + 1) = v39;
  *(double *)&v85 = v41;
  *((double *)&v85 + 1) = v42;
  *(double *)v86 = v43;
  v86[8] = v44;
  v86[9] = v45;
  *(_OWORD *)&v86[10] = v87[0];
  *(_QWORD *)&v86[24] = *(_QWORD *)((char *)v87 + 14);
  v52 = v48;
  v54 = v53;
  v76 = _UIActionSheetPresentationControllerFrameForDismissButtonInAvailableBounds((double *)v82, v48, v53, v49, v51);
  v66 = v56;
  v67 = v55;
  v69 = v57;
  *(_OWORD *)&v82[1] = v88;
  if (v45)
    v58 = 0.0;
  else
    v58 = v43 + v55;
  v82[0] = v36;
  *(_OWORD *)&v82[17] = *(_OWORD *)v89;
  *(_QWORD *)&v82[32] = *(_QWORD *)&v89[15];
  *(double *)&v82[40] = v65;
  v83 = v81;
  *(double *)&v84 = v40;
  *((double *)&v84 + 1) = v39;
  *(double *)&v85 = v41;
  *((double *)&v85 + 1) = v42;
  *(double *)v86 = v43;
  v86[8] = v44;
  v86[9] = v45;
  *(_OWORD *)&v86[10] = v87[0];
  *(_QWORD *)&v86[24] = *(_QWORD *)((char *)v87 + 14);
  _UIActionSheetPresentationControllerFrameForPresentedViewInAvailableBounds((uint64_t)v82, v39 + v52, v40 + v54, v50 - (v39 + v42), v64 - (v41 + v40 + v58));
  v60 = v65 - v59;
  if (v36)
    v60 = 0.0;
  v61 = v76 + 0.0;
  v62 = v66 + v60;

  v78[0] = MEMORY[0x1E0C809B0];
  v78[1] = 3221225472;
  v78[2] = __UIActionSheetPresentationControllerLayoutViews_block_invoke;
  v78[3] = &unk_1E16B1B50;
  v79 = v22;
  v80 = v21;
  v63 = v21;
  v77 = v22;
  +[UIView performWithoutAnimation:](UIView, "performWithoutAnimation:", v78);
  objc_msgSend(v63, "setFrame:", v73, v72, v71, v70);
  objc_msgSend(v77, "setFrame:", v73, v72, v71, v70);
  objc_msgSend(v77, "layoutIfNeeded");
  objc_msgSend(v29, "setFrame:", v61, v62, v69, v67);

  objc_msgSend(v74, "setFrame:", *((double *)a7 + 2), *((double *)a7 + 3), *((double *)a7 + 4), *((double *)a7 + 5));
}

CGFloat UIActionSheetPresentationControllerFrameForPresentedView(double *a1, void *a2, void *a3, double a4, double a5, double a6, double a7)
{
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  double v23;
  double v24;
  double v25;
  double v26;
  CGFloat v27;
  CGFloat v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v8 = *((_OWORD *)a1 + 5);
  v38 = *((_OWORD *)a1 + 4);
  v39 = v8;
  v9 = *((_OWORD *)a1 + 7);
  v40 = *((_OWORD *)a1 + 6);
  v41 = v9;
  v10 = *((_OWORD *)a1 + 1);
  v34 = *(_OWORD *)a1;
  v35 = v10;
  v11 = *((_OWORD *)a1 + 3);
  v36 = *((_OWORD *)a1 + 2);
  v37 = v11;
  v12 = _UIActionSheetPresentationControllerAvailableBoundsForLayout((uint64_t)&v34, a2, a3, a4, a5, a6, a7);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v19 = *((_OWORD *)a1 + 5);
  v38 = *((_OWORD *)a1 + 4);
  v39 = v19;
  v20 = *((_OWORD *)a1 + 7);
  v40 = *((_OWORD *)a1 + 6);
  v41 = v20;
  v21 = *((_OWORD *)a1 + 1);
  v34 = *(_OWORD *)a1;
  v35 = v21;
  v22 = *((_OWORD *)a1 + 3);
  v36 = *((_OWORD *)a1 + 2);
  v37 = v22;
  _UIActionSheetPresentationControllerFrameForDismissButtonInAvailableBounds((double *)&v34, v12, v14, v15, v17);
  v25 = a1[8];
  v24 = a1[9];
  if (*((_BYTE *)a1 + 105))
    v26 = 0.0;
  else
    v26 = v23 + a1[12];
  v27 = v16 - (v24 + a1[11]);
  v28 = v18 - (a1[10] + v25 + v26);
  v29 = *((_OWORD *)a1 + 5);
  v38 = *((_OWORD *)a1 + 4);
  v39 = v29;
  v30 = *((_OWORD *)a1 + 7);
  v40 = *((_OWORD *)a1 + 6);
  v41 = v30;
  v31 = *((_OWORD *)a1 + 1);
  v34 = *(_OWORD *)a1;
  v35 = v31;
  v32 = *((_OWORD *)a1 + 3);
  v36 = *((_OWORD *)a1 + 2);
  v37 = v32;
  return _UIActionSheetPresentationControllerFrameForPresentedViewInAvailableBounds((uint64_t)&v34, v12 + v24, v14 + v25, v27, v28)+ 0.0;
}

double _UIActionSheetPresentationControllerFrameForDismissButtonInAvailableBounds(double *a1, double a2, double a3, double a4, double a5)
{
  double v5;

  v5 = round(a2 + (a4 - a5) * 0.5);
  if (a1[4] > a1[5])
    a2 = v5;
  return a2 + a1[9];
}

CGFloat _UIActionSheetPresentationControllerFrameForPresentedViewInAvailableBounds(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  double v9;
  CGRect v12;
  CGRect v13;

  v9 = *(double *)(a1 + 8);
  if (v9 > 0.0 && v9 != -1.0)
  {
    CGRectGetMinY(*(CGRect *)&a2);
    v12.origin.x = a2;
    v12.origin.y = a3;
    v12.size.width = a4;
    v12.size.height = a5;
    CGRectGetMaxY(v12);
    v13.origin.x = a2;
    v13.origin.y = a3;
    v13.size.width = a4;
    v13.size.height = a5;
    CGRectGetMaxY(v13);
  }
  return a2 + (a4 - a4) * 0.5;
}

void UIActionSheetPresentationControllerAdjustForKeyboardNotification(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, _OWORD *a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, double a17)
{
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  _QWORD v52[4];
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  double v67;
  double v68;
  double v69;
  double v70;
  _OWORD v71[8];

  v31 = a1;
  v32 = a2;
  v33 = a3;
  v34 = a4;
  v35 = a5;
  v36 = a6;
  if (a17 > 0.0)
  {
    v37 = a7[5];
    v71[4] = a7[4];
    v71[5] = v37;
    v38 = a7[7];
    v71[6] = a7[6];
    v71[7] = v38;
    v39 = a7[1];
    v71[0] = *a7;
    v71[1] = v39;
    v40 = a7[3];
    v71[2] = a7[2];
    v71[3] = v40;
    UIActionSheetPresentationControllerLayoutViews(v31, v32, v33, v34, v35, v36, (unsigned __int8 *)v71, a9, a10, a11, a12);
  }
  v52[0] = MEMORY[0x1E0C809B0];
  v52[1] = 3221225472;
  v52[2] = __UIActionSheetPresentationControllerAdjustForKeyboardNotification_block_invoke;
  v52[3] = &unk_1E16BF688;
  v53 = v31;
  v54 = v32;
  v55 = v33;
  v56 = v34;
  v57 = v35;
  v58 = v36;
  v41 = a7[5];
  v63 = a7[4];
  v64 = v41;
  v42 = a7[7];
  v65 = a7[6];
  v66 = v42;
  v43 = a7[1];
  v59 = *a7;
  v60 = v43;
  v44 = a7[3];
  v61 = a7[2];
  v62 = v44;
  v67 = a13;
  v68 = a14;
  v69 = a15;
  v70 = a16;
  v45 = v36;
  v46 = v35;
  v47 = v34;
  v48 = v33;
  v49 = v32;
  v50 = v31;
  +[UIView animateWithDuration:delay:options:animations:completion:](UIView, "animateWithDuration:delay:options:animations:completion:", a8 | 0x406, v52, 0, a17, 0.0);

}

double UIActionSheetPresentationControllerCurrentKeyboardFrame(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  +[UIScene _scenesIncludingInternal:](UIWindowScene, "_scenesIncludingInternal:", 1, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v15;
LABEL_3:
    v6 = 0;
    while (1)
    {
      if (*(_QWORD *)v15 != v5)
        objc_enumerationMutation(v2);
      v7 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * v6);
      objc_msgSend(v7, "screen");
      v8 = (id)objc_claimAutoreleasedReturnValue();

      if (v8 == v1)
        break;
      if (v4 == ++v6)
      {
        v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
        if (v4)
          goto LABEL_3;
        goto LABEL_9;
      }
    }
    v9 = v7;

    if (!v9)
      goto LABEL_12;
    objc_msgSend(v9, "keyboardSceneDelegate");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "visibleFrameInView:", 0);
    v12 = v11;

  }
  else
  {
LABEL_9:

LABEL_12:
    v12 = *MEMORY[0x1E0C9D628];
  }

  return v12;
}

double _UIActionSheetPresentationControllerContentInsetsAdjustedForSafeAreaWithStandardContentInsets(void *a1, double a2, double a3, double a4, double a5)
{
  id v6;
  double v7;
  double v8;
  void *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void *v16;
  double v17;
  double v18;
  void *v20;
  uint64_t v21;
  double v22;

  v6 = a1;
  objc_msgSend(v6, "safeAreaInsets");
  v8 = v7;
  objc_msgSend(v6, "window");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "rootViewController");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (v10 && objc_msgSend(v10, "_providesCustomBasePresentationInsets"))
  {
    objc_msgSend(v10, "_customBasePresentationInsetsForView:", v6);
    v8 = v11;
  }
  objc_msgSend(v6, "bounds", *(_QWORD *)&a4, *(_QWORD *)&a5);
  v13 = v12;
  v15 = v14;
  objc_msgSend(v6, "window");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "bounds");
  if (v13 == v18 && v15 == v17)
  {
    objc_msgSend(v6, "traitCollection");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = objc_msgSend(v20, "userInterfaceIdiom");

    if (v21 != 3)
    {
      v22 = fmax(a2, v8);
      goto LABEL_12;
    }
  }
  else
  {

  }
  v22 = a2 + v8;
LABEL_12:

  return v22;
}

void UIActionSheetPresentationControllerAddViewsToContainerView(void *a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;

  v9 = a5;
  v10 = a4;
  v11 = a3;
  v12 = a2;
  v13 = a1;
  objc_msgSend(v13, "addSubview:", v11);
  objc_msgSend(v13, "insertSubview:belowSubview:", v12, v11);

  objc_msgSend(v13, "insertSubview:aboveSubview:", v10, v12);
  objc_msgSend(v13, "addSubview:", v9);

}

id UIActionSheetPresentationControllerToUse(void *a1, uint64_t a2, void *a3, void *a4, char a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  id v16;

  v9 = a3;
  v10 = a4;
  v11 = v9;
  v12 = a1;
  v13 = objc_msgSend(v12, "horizontalSizeClass");
  v14 = objc_msgSend(v12, "verticalSizeClass");

  if (a2 == 2)
    v15 = a5;
  else
    v15 = 1;
  if (v13 != 1)
    v15 = 0;
  if (a2 == 1 || (v15 & 1) != 0 || (v16 = v11, v14 == 1))
  {
    v16 = v10;

  }
  return v16;
}

_UIAnimationCoordinator *UIActionSheetPresentationControllerAnimationCoordinatorForFrameChangeOfView(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, double a7, double a8, double a9, double a10, double a11)
{
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  _UIAnimationCoordinator *v27;
  uint64_t v28;
  id v29;
  id v30;
  id v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  _QWORD v41[4];
  id v42;
  _QWORD v43[4];
  id v44;
  _QWORD v45[4];
  id v46;

  v21 = a4;
  v22 = a5;
  v23 = a6;
  v24 = a3;
  v25 = a2;
  v26 = a1;
  v27 = objc_alloc_init(_UIAnimationCoordinator);
  -[_UIAnimationCoordinator setDuration:](v27, "setDuration:", a11);
  v28 = MEMORY[0x1E0C809B0];
  v45[0] = MEMORY[0x1E0C809B0];
  v45[1] = 3221225472;
  v45[2] = __UIActionSheetPresentationControllerAnimationCoordinatorForFrameChangeOfView_block_invoke;
  v45[3] = &unk_1E16BF6B0;
  v46 = v21;
  v29 = v21;
  -[_UIAnimationCoordinator setPreperation:](v27, "setPreperation:", v45);
  v43[0] = v28;
  v43[1] = 3221225472;
  v43[2] = __UIActionSheetPresentationControllerAnimationCoordinatorForFrameChangeOfView_block_invoke_2;
  v43[3] = &unk_1E16BF6B0;
  v44 = v22;
  v30 = v22;
  -[_UIAnimationCoordinator setAnimator:](v27, "setAnimator:", v43);
  v41[0] = v28;
  v41[1] = 3221225472;
  v41[2] = __UIActionSheetPresentationControllerAnimationCoordinatorForFrameChangeOfView_block_invoke_3;
  v41[3] = &unk_1E16BF6B0;
  v42 = v23;
  v31 = v23;
  -[_UIAnimationCoordinator setCompletion:](v27, "setCompletion:", v41);
  -[_UIAnimationCoordinator setContainerView:](v27, "setContainerView:", v25);

  -[_UIAnimationCoordinator setViewController:](v27, "setViewController:", v24);
  objc_msgSend(v26, "frame");
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v39 = v38;

  -[_UIAnimationCoordinator setStartFrame:](v27, "setStartFrame:", v33, v35, v37, v39);
  -[_UIAnimationCoordinator setEndFrame:](v27, "setEndFrame:", a7, a8, a9, a10);

  return v27;
}

void sub_1859F6538(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  _Block_object_dispose(&a34, 8);
  _Unwind_Resume(a1);
}

void sub_1859F87B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *a11, id *a12, id *location)
{
  uint64_t v13;

  objc_destroyWeak(location);
  objc_destroyWeak(a11);
  objc_destroyWeak(a12);
  objc_destroyWeak((id *)(v13 - 216));
  _Unwind_Resume(a1);
}

void sub_1859FAC04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1859FB8C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1859FE834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

const __CFString *_NSStringForUIPresentationControllerState(unint64_t a1)
{
  if (a1 > 5)
    return CFSTR("<unknown>");
  else
    return off_1E16BFB98[a1];
}

double _frameIgnoringLayerTransformOnOrAfterYukon(void *a1)
{
  id v1;
  double v2;
  double v3;

  v1 = a1;
  if (dyld_program_sdk_at_least())
    objc_msgSend(v1, "_frameIgnoringLayerTransform");
  else
    objc_msgSend(v1, "frame");
  v3 = v2;

  return v3;
}

void sub_185A04710(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 160));
  _Unwind_Resume(a1);
}

void sub_185A052B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id *location)
{
  objc_destroyWeak(location);
  _Unwind_Resume(a1);
}

uint64_t deviceRemovedCallback(void *a1, const char *a2)
{
  return objc_msgSend(a1, "performSelector:withObject:afterDelay:", sel_notifyObserversIfNecessary, 0, 0.1);
}

void sub_185A080C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v9;
  va_list va;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a8);
  va_start(va, a8);
  v9 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_185A08A28(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

double _UISheetTransitionDuration()
{
  void *v0;
  double v1;
  double v2;

  _UIFallbackSheetMetrics();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "transitionDuration");
  v2 = v1;

  return v2;
}

id _UISheetTransitionSpringParametersHighSpeed(uint64_t a1)
{
  void *v2;
  void *v3;

  _UIFallbackSheetMetrics();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "transitionSpringParametersHighSpeed:", a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id _UISheetTransitionTimingCurve()
{
  if (qword_1ECD7D3F8 != -1)
    dispatch_once(&qword_1ECD7D3F8, &__block_literal_global_126);
  return (id)_MergedGlobals_999;
}

void _UISheetAnimate(void *a1)
{
  _UISheetAnimateWithCompletion(a1, 0);
}

void _UISheetAnimateWithCompletion(void *a1, void *a2)
{
  id v3;
  UIViewPropertyAnimator *v4;
  double v5;
  void *v6;
  UIViewPropertyAnimator *v7;
  id v8;

  v8 = a2;
  v3 = a1;
  v4 = [UIViewPropertyAnimator alloc];
  v5 = _UISheetTransitionDuration();
  _UISheetTransitionTimingCurve();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = -[UIViewPropertyAnimator initWithDuration:timingParameters:](v4, "initWithDuration:timingParameters:", v6, v5);

  -[UIViewPropertyAnimator addAnimations:](v7, "addAnimations:", v3);
  if (v8)
    -[UIViewPropertyAnimator addCompletion:](v7, "addCompletion:", v8);
  -[UIViewPropertyAnimator startAnimation](v7, "startAnimation");

}

double _UISheetMinimumTopInset(void *a1)
{
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  void *v10;
  void *v11;
  double v12;

  v1 = a1;
  objc_msgSend(v1, "safeAreaInsets");
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  objc_msgSend(v1, "traitCollection");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  _UIFallbackSheetMetrics();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = _UISheetLayoutInfoMargins(v10, 1, 0, 0, v11, v3, v5, v7, v9, 1.79769313e308, 1.79769313e308);

  return v12;
}

void _UISheetTransform(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>, CGFloat a6@<D2>, CGFloat a7@<D3>, CGFloat a8@<D4>, CGFloat a9@<D5>, CGFloat a10@<D6>, CGFloat a11@<D7>, double a12, double a13)
{
  id v21;
  id v22;

  v21 = a1;
  _UIFallbackSheetMetrics();
  v22 = (id)objc_claimAutoreleasedReturnValue();
  _UISheetTransformForMetrics(a3, v21, a2, v22, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);

}

double _UISheetFormSize(void *a1, double a2, double a3)
{
  return _UISheetSize(a1, 1, a2, a3);
}

double _UISheetContentContainerSize(void *a1, void *a2, double a3, double a4)
{
  id v7;
  id v8;
  double v9;

  v7 = a1;
  v8 = a2;
  if (objc_msgSend(v7, "_formSheetObeysContentContainerSize"))
  {
    objc_msgSend(v7, "sizeForChildContentContainer:withParentContainerSize:", v8, a3, a4);
    a3 = v9;
  }

  return a3;
}

uint64_t _UISheetIndexOfDetentWithIdentifier(void *a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  uint64_t v7;
  _QWORD v9[4];
  id v10;

  v5 = a2;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = ___UISheetIndexOfDetentWithIdentifier_block_invoke;
  v9[3] = &unk_1E16BFC90;
  v10 = v5;
  v6 = v5;
  v7 = objc_msgSend(a1, "indexOfObjectPassingTest:", v9);
  if (v7 != 0x7FFFFFFFFFFFFFFFLL)
    a3 = v7;

  return a3;
}

void _UISheetLayoutInfoDirtyExpanded(_DWORD *a1)
{
  int v1;
  _DWORD *v2;

  v1 = a1[5];
  if ((v1 & 4) != 0)
  {
    a1[5] = v1 & 0xFFFFFFFB;
    v2 = a1;
    _UISheetLayoutInfoDirtyUntransformedFrame(v2);
    _UISheetLayoutInfoDirtyFrameOfPresentedViewInContainerView(v2);
    _UISheetLayoutInfoDirtyCornerRadii(v2);

  }
}

void _UISheetLayoutInfoDirtyModelDimmingEnabled(_DWORD *a1)
{
  int v1;
  _DWORD *v2;
  void *v3;
  id v4;

  v1 = a1[5];
  if ((v1 & 0x800000) != 0)
  {
    a1[5] = v1 & 0xFF7FFFFF;
    v2 = a1;
    objc_msgSend(v2, "_parentLayoutInfo");
    v4 = (id)objc_claimAutoreleasedReturnValue();
    if (v4)
      _UISheetLayoutInfoDirtyModelDimmingEnabled(v4);
    objc_msgSend(v2, "_delegate");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "_sheetLayoutInfoDidInvalidateOutput:", v2);

  }
}

id __UIMoreListImageForViewController(void *a1, void *a2, char a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;

  v5 = a1;
  v6 = a2;
  v7 = v6;
  if ((a3 & 1) != 0)
    objc_msgSend(v6, "moreListSelectedImage");
  else
    objc_msgSend(v6, "moreListImage");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v8)
  {
    objc_msgSend(v7, "tabBarItem");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "_internalTemplateImage");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v8;
}

uint64_t _UITabBarControllerWantsFloatingTabBar()
{
  if (qword_1ECD7B638 != -1)
    dispatch_once(&qword_1ECD7B638, &__block_literal_global_128);
  return _MergedGlobals_43_0;
}

uint64_t _UITabBarControllerWantsNavigationBarExtensionForFloatingTabBar()
{
  if (_UITabBarControllerWantsNavigationBarExtensionForFloatingTabBar_onceToken != -1)
    dispatch_once(&_UITabBarControllerWantsNavigationBarExtensionForFloatingTabBar_onceToken, &__block_literal_global_17);
  return _UITabBarControllerWantsNavigationBarExtensionForFloatingTabBar_wantsNavigationBarExtensionForFloatingTabBar;
}

void _uip_floatingTabBar_sendAnalyticsEvent()
{
  void *v0;
  id v1;

  _UIMainBundleIdentifier();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "hasPrefix:", CFSTR("com.apple."));
  v1 = v0;
  AnalyticsSendEventLazy();

}

void sub_185A14E88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id ___uip_floatingTabBar_sendAnalyticsEvent_block_invoke(uint64_t a1)
{
  void *v2;
  const __CFString *v3;
  void *v4;
  void *v5;
  _QWORD v7[3];
  _QWORD v8[4];

  v8[3] = *MEMORY[0x1E0C80C00];
  v7[0] = CFSTR("eventType");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", *(_QWORD *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = v2;
  v7[1] = CFSTR("bundleId");
  if (*(_BYTE *)(a1 + 56))
    v3 = *(const __CFString **)(a1 + 32);
  else
    v3 = &stru_1E16EDF20;
  v8[1] = v3;
  v7[2] = CFSTR("numberOfTabs");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", *(_QWORD *)(a1 + 48));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v8[2] = v4;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v8, v7, 3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

void sub_185A1731C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185A17654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getEMFEmojiLocaleDataClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  EmojiFoundationLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("EMFEmojiLocaleData");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    _MergedGlobals_1001 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getEMFEmojiLocaleDataClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIDictationTipEmojiHandler.m"), 21, CFSTR("Unable to find class %s"), "EMFEmojiLocaleData");

    __break(1u);
  }
}

void EmojiFoundationLibrary()
{
  void *v0;
  void *v1;
  void *v2;

  if (!EmojiFoundationLibraryCore_frameworkLibrary)
    EmojiFoundationLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!EmojiFoundationLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *EmojiFoundationLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("UIDictationTipEmojiHandler.m"), 19, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

void __getEMFEmojiTokenClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  EmojiFoundationLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("EMFEmojiToken");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7D458 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getEMFEmojiTokenClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIDictationTipEmojiHandler.m"), 20, CFSTR("Unable to find class %s"), "EMFEmojiToken");

    __break(1u);
  }
}

uint64_t stateMachineSpec_block_invoke_5_1(uint64_t a1, void *a2)
{
  id v2;
  void *v3;

  v2 = a2;
  objc_msgSend(v2, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "clickDriver:didPerformEvent:", v2, 2);

  return 1;
}

void sub_185A17F6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t _forceMultiplierFromForce(int a1)
{
  if (a1)
  {
    _UIInternalPreferenceUsesDefault_1((int *)&unk_1ECD76028, (uint64_t)CFSTR("LongPressClickInteractionDriverMinimumForceAccelerationThresholdPointer"));
    return _UIInternalPreferenceUsesDefault_1((int *)algn_1ECD76048, (uint64_t)CFSTR("LongPressClickInteractionDriverForceAccelerationMultiplierPointer"));
  }
  else
  {
    _UIInternalPreferenceUsesDefault_1((int *)&unk_1ECD76018, (uint64_t)CFSTR("LongPressClickInteractionDriverMinimumForceAccelerationThreshold"));
    return _UIInternalPreferenceUsesDefault_1((int *)algn_1ECD76038, (uint64_t)CFSTR("LongPressClickInteractionDriverForceAccelerationMultiplier"));
  }
}

void _CreateRotationSnapshot(void *a1, void *a2, UISnapshotView **a3, void *a4, uint64_t a5, uint64_t a6, double a7, CGFloat a8, CGFloat a9, CGFloat a10, CGFloat a11)
{
  double v12;
  double v13;
  double v14;
  double v15;
  double v22;
  double v23;
  double v24;
  double v25;
  UISnapshotView *v26;
  UIColor *v27;
  double v28;
  double v29;
  double v30;
  void *v31;
  char isKindOfClass;
  UIView *v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  void *v42;
  double v43;
  double v44;
  double v45;
  double v46;
  UIImageView *v47;
  CGRect v48;

  if (a1)
  {
    v12 = a11;
    v13 = a10;
    v14 = a9;
    v15 = a8;
    v48.origin.x = a8;
    v48.origin.y = a9;
    v48.size.width = a10;
    v48.size.height = a11;
    if (CGRectIsEmpty(v48))
    {
      objc_msgSend(a1, "bounds");
      objc_msgSend(a2, "convertRect:fromView:", a1);
      v15 = v22;
      v14 = v23;
      v13 = v24;
      v12 = v25;
    }
    v26 = -[UISnapshotView initWithFrame:]([UISnapshotView alloc], "initWithFrame:", v15, v14, v13, v12);
    -[UISnapshotView setEdgeInsets:](v26, "setEdgeInsets:", 0.0, 0.0, a7, 0.0);
    -[UISnapshotView captureSnapshotOfView:withSnapshotType:](v26, "captureSnapshotOfView:withSnapshotType:", a1, a6);
    if (a5 && *(_BYTE *)(a5 + 1))
    {
      -[UISnapshotView setVerticalStretchEnabled:](v26, "setVerticalStretchEnabled:", 0);
      v27 = objc_msgSend(a1, "backgroundColor")
          ? (UIColor *)objc_msgSend(a1, "backgroundColor")
          : +[UIColor whiteColor](UIColor, "whiteColor");
      -[UIView setBackgroundColor:](v26, "setBackgroundColor:", v27);
      if (*(double *)(a5 + 8) != 0.0)
      {
        objc_msgSend(a1, "bounds");
        if (v28 <= v29)
          v30 = 0.001;
        else
          v30 = v28 - v29;
        -[CALayer setContentsCenter:](-[UIView layer](-[UISnapshotView _snapshotView](v26, "_snapshotView"), "layer"), "setContentsCenter:", 1.0 / v28 * (v28 - *(double *)(a5 + 8) + -0.5 - v30), 0.0, 1.0 / v28 * v30, 1.0);
      }
    }
    if (a4)
      objc_msgSend(a2, "insertSubview:belowSubview:", v26, a4);
    else
      objc_msgSend(a2, "insertSubview:atIndex:", v26, 0);

    *a3 = v26;
    if (objc_msgSend(a1, "conformsToProtocol:", &unk_1EDE77620))
    {
      v31 = (void *)objc_msgSend(a1, "_shadowView");
      objc_opt_class();
      isKindOfClass = objc_opt_isKindOfClass();
      if (v31)
      {
        if ((isKindOfClass & 1) != 0 && objc_msgSend(v31, "image"))
        {
          v47 = -[UIImageView initWithImage:]([UIImageView alloc], "initWithImage:", objc_msgSend(v31, "image"));
        }
        else if (objc_msgSend(v31, "backgroundColor"))
        {
          v33 = [UIView alloc];
          objc_msgSend(v31, "frame");
          v47 = -[UIView initWithFrame:](v33, "initWithFrame:");
          -[UIImageView setBackgroundColor:](v47, "setBackgroundColor:", objc_msgSend(v31, "backgroundColor"));
        }
        else
        {
          v47 = 0;
        }
        objc_msgSend(v31, "bounds");
        -[UIView convertRect:fromView:](v26, "convertRect:fromView:", v31);
        v35 = v34;
        v37 = v36;
        v39 = v38;
        v41 = v40;
        v42 = (void *)objc_msgSend(a4, "shadowView");
        if (v42)
        {
          objc_msgSend(v42, "frame");
          v35 = v43;
          v37 = v44;
          v39 = v45;
          v41 = v46;
        }
        -[UIImageView setFrame:](v47, "setFrame:", v35, v37, v39, v41);
        -[UIView setAutoresizingMask:](v47, "setAutoresizingMask:", objc_msgSend(v31, "autoresizingMask"));
        -[UISnapshotView setShadowView:](v26, "setShadowView:", v47);

      }
    }
  }
}

BOOL UIImagePickerLoadPhotoLibraryIfNecessary()
{
  _BOOL8 result;
  void *v1;
  FILE *v2;
  char *v3;

  if ((UIImagePickerLoadPhotoLibraryIfNecessary___FrameworkLoaded & 1) != 0)
    return 1;
  v1 = dlopen((const char *)objc_msgSend(CFSTR("/System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary"), "fileSystemRepresentation"), 2);
  __PhotoLibraryFrameworkHandle = (uint64_t)v1;
  if (!v1)
  {
    v2 = (FILE *)*MEMORY[0x1E0C80C10];
    v3 = dlerror();
    fprintf(v2, "Couldn't load framework: %s\n", v3);
    v1 = (void *)__PhotoLibraryFrameworkHandle;
  }
  result = v1 != 0;
  UIImagePickerLoadPhotoLibraryIfNecessary___FrameworkLoaded = 1;
  return result;
}

void UIImagePickerEnsureViewIsInsidePopover(void *a1)
{
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  objc_class *v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;

  v14 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v14, "_valueForProperty:", CFSTR("_UIImagePickerControllerAllowAnySuperview"));
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v1, "BOOLValue") & 1) != 0)
      goto LABEL_8;
    v2 = objc_msgSend(v14, "sourceType");

    if (v2 == 1)
      goto LABEL_9;
  }
  +[UIDevice currentDevice](UIDevice, "currentDevice");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "userInterfaceIdiom");

  if ((v4 & 0xFFFFFFFFFFFFFFFBLL) != 1)
    goto LABEL_9;
  objc_msgSend(v14, "view");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "window");
  v5 = objc_claimAutoreleasedReturnValue();
  if (!v5)
  {
LABEL_8:

    goto LABEL_9;
  }
  v6 = (void *)v5;
  objc_msgSend(v14, "view");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  +[_UIPopoverView popoverViewContainingView:](_UIPopoverView, "popoverViewContainingView:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v8)
  {
    v9 = (void *)MEMORY[0x1E0CB3940];
    v10 = (objc_class *)objc_opt_class();
    NSStringFromClass(v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "stringWithFormat:", CFSTR("On iPad, %@ must be presented via UIPopoverController"), v11);
    v12 = objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0C99DA0], "exceptionWithName:reason:userInfo:", *MEMORY[0x1E0C99778], v12, 0);
    v13 = (id)objc_claimAutoreleasedReturnValue();
    objc_exception_throw(v13);
  }
LABEL_9:

}

id MediaTypeForCameraCaptureMode(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id *v3;

  if (a1)
  {
    if (a1 != 1)
      return 0;
    v3 = (id *)MEMORY[0x1E0CEC568];
  }
  else
  {
    v3 = (id *)MEMORY[0x1E0CEC520];
  }
  objc_msgSend(*v3, "identifier", v1, v2);
  return (id)objc_claimAutoreleasedReturnValue();
}

void sub_185A1EEB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185A1F294(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_185A1F6E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, char a17)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_185A1FBC8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_185A1FE04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185A1FF04(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void UIImageWriteToSavedPhotosAlbum(UIImage *image, id completionTarget, SEL completionSelector, void *contextInfo)
{
  id v7;
  _BOOL4 PhotoLibraryIfNecessary;
  void *v9;
  FILE *v11;
  char *v12;
  UIImage *v13;

  v13 = image;
  v7 = completionTarget;
  PhotoLibraryIfNecessary = UIImagePickerLoadPhotoLibraryIfNecessary();
  v9 = UIImageWriteToSavedPhotosAlbum___PLSaveImageToCameraRoll;
  if (PhotoLibraryIfNecessary
    && __PhotoLibraryFrameworkHandle
    && UIImageWriteToSavedPhotosAlbum___PLSaveImageToCameraRoll == 0)
  {
    v9 = dlsym((void *)__PhotoLibraryFrameworkHandle, "PLSaveImageToCameraRoll");
    UIImageWriteToSavedPhotosAlbum___PLSaveImageToCameraRoll = v9;
  }
  if (v9)
  {
    ((void (*)(UIImage *, id, SEL, void *))v9)(v13, v7, completionSelector, contextInfo);
  }
  else if (v7 && completionSelector)
  {
    v11 = (FILE *)*MEMORY[0x1E0C80C10];
    v12 = dlerror();
    fprintf(v11, "Couldn't find saving function. %s\n", v12);
  }

}

void UIImageDataWriteToSavedPhotosAlbum(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7;
  _BOOL4 PhotoLibraryIfNecessary;
  void *v9;
  FILE *v11;
  char *v12;
  id v13;

  v13 = a1;
  v7 = a2;
  PhotoLibraryIfNecessary = UIImagePickerLoadPhotoLibraryIfNecessary();
  v9 = UIImageDataWriteToSavedPhotosAlbum___PLSaveImageDataToCameraRoll;
  if (PhotoLibraryIfNecessary
    && __PhotoLibraryFrameworkHandle
    && UIImageDataWriteToSavedPhotosAlbum___PLSaveImageDataToCameraRoll == 0)
  {
    v9 = dlsym((void *)__PhotoLibraryFrameworkHandle, "PLSaveImageDataToCameraRoll");
    UIImageDataWriteToSavedPhotosAlbum___PLSaveImageDataToCameraRoll = v9;
  }
  if (v9)
  {
    ((void (*)(id, id, uint64_t, uint64_t))v9)(v13, v7, a3, a4);
  }
  else if (v7 && a3)
  {
    v11 = (FILE *)*MEMORY[0x1E0C80C10];
    v12 = dlerror();
    fprintf(v11, "Couldn't find saving function. %s\n", v12);
  }

}

BOOL UIVideoAtPathIsCompatibleWithSavedPhotosAlbum(NSString *videoPath)
{
  NSString *v1;
  _BOOL4 PhotoLibraryIfNecessary;
  void *v3;
  char v5;
  FILE *v6;
  char *v7;

  v1 = videoPath;
  PhotoLibraryIfNecessary = UIImagePickerLoadPhotoLibraryIfNecessary();
  v3 = UIVideoAtPathIsCompatibleWithSavedPhotosAlbum___PLCanSaveVideoToCameraRoll;
  if (PhotoLibraryIfNecessary
    && __PhotoLibraryFrameworkHandle
    && UIVideoAtPathIsCompatibleWithSavedPhotosAlbum___PLCanSaveVideoToCameraRoll == 0)
  {
    v3 = dlsym((void *)__PhotoLibraryFrameworkHandle, "PLCanSaveVideoToCameraRoll");
    UIVideoAtPathIsCompatibleWithSavedPhotosAlbum___PLCanSaveVideoToCameraRoll = v3;
  }
  if (v3)
  {
    v5 = ((uint64_t (*)(NSString *))v3)(v1);
  }
  else
  {
    v6 = (FILE *)*MEMORY[0x1E0C80C10];
    v7 = dlerror();
    fprintf(v6, "Couldn't find 'can save video' function. %s\n", v7);
    v5 = 0;
  }

  return v5;
}

void UISaveVideoAtPathToSavedPhotosAlbum(NSString *videoPath, id completionTarget, SEL completionSelector, void *contextInfo)
{
  id v7;
  _BOOL4 PhotoLibraryIfNecessary;
  void *v9;
  FILE *v11;
  char *v12;
  NSString *v13;

  v13 = videoPath;
  v7 = completionTarget;
  PhotoLibraryIfNecessary = UIImagePickerLoadPhotoLibraryIfNecessary();
  v9 = UISaveVideoAtPathToSavedPhotosAlbum___PLSaveVideoToCameraRoll;
  if (PhotoLibraryIfNecessary
    && __PhotoLibraryFrameworkHandle
    && UISaveVideoAtPathToSavedPhotosAlbum___PLSaveVideoToCameraRoll == 0)
  {
    v9 = dlsym((void *)__PhotoLibraryFrameworkHandle, "PLSaveVideoToCameraRoll");
    UISaveVideoAtPathToSavedPhotosAlbum___PLSaveVideoToCameraRoll = v9;
  }
  if (v9)
  {
    ((void (*)(NSString *, id, SEL, void *))v9)(v13, v7, completionSelector, contextInfo);
  }
  else if (v7 && completionSelector)
  {
    v11 = (FILE *)*MEMORY[0x1E0C80C10];
    v12 = dlerror();
    fprintf(v11, "Couldn't find saving function. %s\n", v12);
  }

}

UIImageView *_shadowImageInRectForSlice(void *a1, unsigned int a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  id v19;
  UIImageView *v20;
  double v21;
  double v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  id v27;
  CGImage *v28;
  CGImageRef v29;
  UIImage *v30;
  CGRect v32;

  v19 = a1;
  v20 = -[UIImageView initWithFrame:]([UIImageView alloc], "initWithFrame:", a3, a4, a5, a6);
  -[UIView setAutoresizingMask:](v20, "setAutoresizingMask:", a2);
  objc_msgSend(v19, "scale");
  v22 = v21;
  v23 = a7 * v21;
  v24 = a8 * v21;
  v25 = a9 * v21;
  v26 = a10 * v21;
  v27 = objc_retainAutorelease(v19);
  v28 = (CGImage *)objc_msgSend(v27, "CGImage");

  v32.origin.x = v23;
  v32.origin.y = v24;
  v32.size.width = v25;
  v32.size.height = v26;
  v29 = CGImageCreateWithImageInRect(v28, v32);
  v30 = -[UIImage initWithCGImage:scale:orientation:]([UIImage alloc], "initWithCGImage:scale:orientation:", v29, 0, v22);
  -[UIImageView setImage:](v20, "setImage:", v30);
  CFRelease(v29);

  return v20;
}

uint64_t _UINavigationControllerUseEdgeSwipeForNavigationPopTransitions()
{
  return 1;
}

void sub_185A2388C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id *location,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  id a64;

  objc_destroyWeak(location);
  objc_destroyWeak(&a64);
  _Unwind_Resume(a1);
}

void sub_185A252C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,id location)
{
  id *v36;

  objc_destroyWeak(v36);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185A2BCC0(_Unwind_Exception *exception_object, int a2)
{
  uint64_t v2;
  id v3;
  unint64_t v4;
  NSObject *v5;

  if (a2 == 1)
  {
    v3 = objc_begin_catch(exception_object);
    v4 = qword_1EDDB0F00;
    if (!qword_1EDDB0F00)
    {
      v4 = __UILogCategoryGetNode("UINavigationController_in_UISplitViewController", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
      atomic_store(v4, (unint64_t *)&qword_1EDDB0F00);
    }
    v5 = *(NSObject **)(v4 + 8);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)(v2 - 160) = 0;
      _os_log_impl(&dword_185066000, v5, OS_LOG_TYPE_DEFAULT, "Failed to retrieve _internalState. Logging code needs updating", (uint8_t *)(v2 - 160), 2u);
    }

    objc_end_catch();
    JUMPOUT(0x185A2B9DCLL);
  }
  _Unwind_Resume(exception_object);
}

void _gestureProgress(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;

  v5 = a3;
  v6 = a2;
  objc_msgSend(v6, "translationInView:", a1);
  objc_msgSend(v5, "stash");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "objectForKeyedSubscript:", CFSTR("NavigationBarTravelDistance"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "doubleValue");

  objc_msgSend(v6, "bias");
}

void sub_185A335F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 248), 8);
  _Block_object_dispose((const void *)(v1 - 184), 8);
  _Unwind_Resume(a1);
}

void sub_185A33B68(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_185A33E50(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void ___allowRelaxRepeatedPushAssertionForSplitViewController_block_invoke()
{
  unint64_t v0;
  NSObject *v1;
  uint8_t v2[16];

  byte_1EDDB0E55 = _resolvedPrefValue(CFSTR("UINavigationControllerRelaxRepeatedPushAssertionForSplitViewController"));
  if (qword_1EDDB0F58 != -1)
    dispatch_once(&qword_1EDDB0F58, &__block_literal_global_1624);
  if (byte_1EDDB0E54)
  {
    v0 = qword_1EDDB0F68;
    if (!qword_1EDDB0F68)
    {
      v0 = __UILogCategoryGetNode("NavigationControllerVerboseLoggingForStrictRepeatedPushAssertion", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
      atomic_store(v0, (unint64_t *)&qword_1EDDB0F68);
    }
    v1 = *(NSObject **)(v0 + 8);
    if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)v2 = 0;
      _os_log_impl(&dword_185066000, v1, OS_LOG_TYPE_ERROR, "Verbose logging for navigation controller pushes are in the category NavigationControllerVerboseLoggingForStrictRepeatedPushAssertion", v2, 2u);
    }
  }
}

void UIPageViewControllerCommonInitWithTransitionStyleAndNavigationOrientation(void *a1, void *a2, void *a3)
{
  id *v5;
  id *v6;
  id v7;
  uint64_t v8;
  UIPanGestureRecognizer *v9;
  id v10;
  UITapGestureRecognizer *v11;
  id v12;
  id v13;
  id *v14;

  v5 = a1;
  v6 = v5;
  v5[123] = a2;
  v5[124] = a3;
  v5[125] = (id)(a2 == 0);
  *((_BYTE *)v5 + 1008) = 0;
  v5[153] = (id)-1;
  if (!a2)
  {
    v14 = v5;
    v9 = -[UIPanGestureRecognizer initWithTarget:action:]([UIPanGestureRecognizer alloc], "initWithTarget:action:", v5, sel__handlePanGesture_);
    v10 = v14[129];
    v14[129] = v9;

    objc_msgSend(v14[129], "setMaximumNumberOfTouches:", 1);
    objc_msgSend(v14[129], "setDelegate:");
    v11 = -[UITapGestureRecognizer initWithTarget:action:]([UITapGestureRecognizer alloc], "initWithTarget:action:", v14, sel__handleTapGesture_);
    v12 = v14[130];
    v14[130] = v11;

    objc_msgSend(v14[130], "setDelegate:");
    v7 = objc_alloc_init(MEMORY[0x1E0C99E08]);
    v8 = 150;
    goto LABEL_5;
  }
  if (a2 == (void *)1)
  {
    v14 = v5;
    v7 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3690]), "initWithOptions:capacity:", 512, 1);
    v8 = 151;
LABEL_5:
    v13 = v14[v8];
    v14[v8] = v7;

    v6 = v14;
  }

}

void sub_185A38210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185A386EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185A39C20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185A3EC18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _UIPageCurlFilterPropertyNameForAnimationKeyPath(void *a1)
{
  void *v1;
  void *v2;
  void *v3;

  objc_msgSend(a1, "componentsSeparatedByString:", CFSTR("."));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "lastObject");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(CFSTR("curl"), "stringByAppendingFormat:", CFSTR("-%@"), v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

void sub_185A44128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185A49CA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185A4BCB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185A4CC34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185A4E2AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose(&a39, 8);
  _Unwind_Resume(a1);
}

void sub_185A4FBAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185A504E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_185A50D9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185A52EE8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 216), 8);
  _Unwind_Resume(a1);
}

void sub_185A54BC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, id *a10, id *a11)
{
  id *v11;
  uint64_t v12;

  objc_destroyWeak(v11);
  objc_destroyWeak(location);
  objc_destroyWeak(a10);
  objc_destroyWeak(a11);
  objc_destroyWeak((id *)(v12 - 216));
  _Unwind_Resume(a1);
}

UIView *CreateSeparatorView()
{
  UIView *v0;
  UIView *v1;
  void *v2;

  v0 = [UIView alloc];
  v1 = -[UIView initWithFrame:](v0, "initWithFrame:", *MEMORY[0x1E0C9D648], *(double *)(MEMORY[0x1E0C9D648] + 8), *(double *)(MEMORY[0x1E0C9D648] + 16), *(double *)(MEMORY[0x1E0C9D648] + 24));
  +[UIColor separatorColor](UIColor, "separatorColor");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  -[UIView setBackgroundColor:](v1, "setBackgroundColor:", v2);

  return v1;
}

void sub_185A55764(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185A56F00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185A57724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185A5802C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185A582B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void WebKitLibrary()
{
  void *v0;
  void *v1;
  void *v2;

  if (!WebKitLibraryCore_frameworkLibrary)
    WebKitLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!WebKitLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *WebKitLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("UIReferenceLibraryViewController.m"), 47, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

void __getWKUserContentControllerClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  WebKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WKUserContentController");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7A908 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWKUserContentControllerClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIReferenceLibraryViewController.m"), 50, CFSTR("Unable to find class %s"), "WKUserContentController");

    __break(1u);
  }
}

void __getWKWebViewConfigurationClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  WebKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WKWebViewConfiguration");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7A910 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWKWebViewConfigurationClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIReferenceLibraryViewController.m"), 51, CFSTR("Unable to find class %s"), "WKWebViewConfiguration");

    __break(1u);
  }
}

void __getWKWebViewClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  WebKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("WKWebView");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7A918 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWKWebViewClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIReferenceLibraryViewController.m"), 48, CFSTR("Unable to find class %s"), "WKWebView");

    __break(1u);
  }
}

void *DictionaryServicesLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!DictionaryServicesLibraryCore_frameworkLibrary)
    DictionaryServicesLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)DictionaryServicesLibraryCore_frameworkLibrary;
  if (!DictionaryServicesLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *DictionaryServicesLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("UIReferenceLibraryViewController.m"), 43, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void sub_185A5A4F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185A5ABE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185A5AD70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185A5B45C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185A5BC6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  _Block_object_dispose(&a55, 8);
  _Unwind_Resume(a1);
}

void sub_185A5BE44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *DictionaryServicesLibrary_0()
{
  void *v0;
  void *v2;
  void *v3;

  if (!DictionaryServicesLibraryCore_frameworkLibrary_0)
    DictionaryServicesLibraryCore_frameworkLibrary_0 = _sl_dlopen();
  v0 = (void *)DictionaryServicesLibraryCore_frameworkLibrary_0;
  if (!DictionaryServicesLibraryCore_frameworkLibrary_0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *DictionaryServicesLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("_UIDictionaryManager.m"), 29, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

Class __getRTTSettingsClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7D490)
    qword_1ECD7D490 = _sl_dlopen();
  if (!qword_1ECD7D490)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *RTTUtilitiesLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIDictionaryManager.m"), 37, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("RTTSettings");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getRTTSettingsClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UIDictionaryManager.m"), 38, CFSTR("Unable to find class %s"), "RTTSettings");

LABEL_8:
    __break(1u);
  }
  qword_1ECD7D488 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_185A5C4A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id VisibleViewController(void *a1)
{
  id v1;
  id v2;
  void *v3;

  v1 = a1;
  DataDetectorsUIGetClass(CFSTR("DDParsecCollectionViewController"));
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0))
  {
    v2 = v1;
  }
  else
  {
    objc_msgSend(v1, "visibleViewController");
    v2 = (id)objc_claimAutoreleasedReturnValue();
  }
  v3 = v2;

  return v3;
}

void UISearchDisplayControllerNoLongerSupported()
{
  unint64_t v0;
  NSObject *v1;
  NSObject *v2;
  uint8_t v3[16];
  uint8_t buf[16];

  if (qword_1ECD7A0A0 != -1)
    dispatch_once(&qword_1ECD7A0A0, &__block_literal_global_135);
  if (_MergedGlobals_25)
  {
    if (os_variant_has_internal_diagnostics())
    {
      __UIFaultDebugAssertLog();
      v2 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_fault_impl(&dword_185066000, v2, OS_LOG_TYPE_FAULT, "rdar://101286541 (AMS Finance UI uses UISearchDisplayController, which is no longer supported)", buf, 2u);
      }

    }
    else
    {
      v0 = qword_1ECD7A0A8;
      if (!qword_1ECD7A0A8)
      {
        v0 = __UILogCategoryGetNode("Assert", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
        atomic_store(v0, (unint64_t *)&qword_1ECD7A0A8);
      }
      v1 = *(NSObject **)(v0 + 8);
      if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)v3 = 0;
        _os_log_impl(&dword_185066000, v1, OS_LOG_TYPE_ERROR, "rdar://101286541 (AMS Finance UI uses UISearchDisplayController, which is no longer supported)", v3, 2u);
      }
    }
  }
  else if (dyld_program_sdk_at_least())
  {
    objc_msgSend(MEMORY[0x1E0C99DA0], "raise:format:", *MEMORY[0x1E0C99750], CFSTR("UISearchDisplayController is no longer supported when linking against this version of iOS. Please migrate your application to UISearchController."));
  }
}

void UISearchDisplayControllerCommonInit(void *a1)
{
  id v1;

  v1 = a1;
  objc_msgSend(v1, "setAutomaticallyShowsNoResultsMessage:", 1);
  objc_msgSend(v1, "setDimTableViewOnEmptySearchString:", 1);
  objc_msgSend(v1, "setNavigationBarHidingEnabled:", 1);
  *((_QWORD *)v1 + 17) = -1;
  *((_WORD *)v1 + 128) |= 0x1000u;

}

uint64_t _EnableScrollView(void *a1)
{
  objc_msgSend(a1, "setScrollEnabled:", 1);
  return objc_msgSend(a1, "setProgrammaticScrollEnabled:", 1);
}

id _UICurrentHitTestContext()
{
  return (id)_MergedGlobals_1004;
}

uint64_t _UIIsCurrentHitTestContextAvailable()
{
  return 1;
}

id _UIHitTestGestureContainer(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, double a6)
{
  unint64_t v12;
  double v13;
  double v14;
  double v15;
  id v16;
  void *v17;
  id v18;
  NSObject *v20;
  _QWORD v21[9];
  _BYTE buf[24];
  uint64_t (*v23)(uint64_t, uint64_t);
  void (*v24)(uint64_t);
  id v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v12 = _UIHitTestGestureContainer___s_category;
  if (!_UIHitTestGestureContainer___s_category)
  {
    v12 = __UILogCategoryGetNode("HitTest", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
    atomic_store(v12, (unint64_t *)&_UIHitTestGestureContainer___s_category);
  }
  if ((*(_BYTE *)v12 & 1) != 0)
  {
    v20 = *(NSObject **)(v12 + 8);
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 138412802;
      *(_QWORD *)&buf[4] = a1;
      *(_WORD *)&buf[12] = 2112;
      *(_QWORD *)&buf[14] = a2;
      *(_WORD *)&buf[22] = 2112;
      v23 = (uint64_t (*)(uint64_t, uint64_t))a3;
      _os_log_impl(&dword_185066000, v20, OS_LOG_TYPE_ERROR, "Hit testing with event: %@, window: %@, server predicted target: %@.", buf, 0x20u);
    }
  }
  if ((a4 & 1) != 0)
  {
    v13 = (*(double (**)(uint64_t, void *))(a5 + 16))(a5, a2);
    performHitTest(a1, a2, a3, v13, v14, v15, a6);
    v16 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    *(_QWORD *)buf = 0;
    *(_QWORD *)&buf[8] = buf;
    *(_QWORD *)&buf[16] = 0x3032000000;
    v23 = __Block_byref_object_copy__56;
    v24 = __Block_byref_object_dispose__56;
    v25 = 0;
    objc_msgSend(a2, "_eventRoutingScene");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v21[0] = MEMORY[0x1E0C809B0];
    v21[1] = 3221225472;
    v21[2] = ___UIHitTestGestureContainer_block_invoke;
    v21[3] = &unk_1E16C1458;
    v21[4] = a1;
    v21[5] = a3;
    *(double *)&v21[8] = a6;
    v21[6] = a5;
    v21[7] = buf;
    v18 = (id)objc_msgSend(v17, "_topVisibleWindowPassingTest:", v21);

    v16 = *(id *)(*(_QWORD *)&buf[8] + 40);
    _Block_object_dispose(buf, 8);

  }
  return v16;
}

void sub_185A652D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id performHitTest(uint64_t a1, void *a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  unint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  unint64_t v22;
  NSObject *v24;
  NSObject *v25;
  int v26;
  void *v27;
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v13 = qword_1ECD7D4A0;
  if (!qword_1ECD7D4A0)
  {
    v13 = __UILogCategoryGetNode("HitTest", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
    atomic_store(v13, (unint64_t *)&qword_1ECD7D4A0);
  }
  if ((*(_BYTE *)v13 & 1) != 0)
  {
    v24 = *(NSObject **)(v13 + 8);
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR))
    {
      v26 = 138412290;
      v27 = a2;
      _os_log_impl(&dword_185066000, v24, OS_LOG_TYPE_ERROR, "Hit testing window: %@", (uint8_t *)&v26, 0xCu);
    }
  }
  if ((objc_msgSend(a2, "_ignoresHitTest") & 1) != 0)
  {
    v14 = 0;
  }
  else
  {
    +[_UIHitTestContext contextWithPoint:radius:](_UIHitTestContext, "contextWithPoint:radius:", a4, a5, a7);
    v15 = objc_claimAutoreleasedReturnValue();
    v16 = (void *)_MergedGlobals_1004;
    _MergedGlobals_1004 = v15;

    objc_msgSend(a2, "_hitTest:withEvent:windowServerHitTestWindow:", a1, a3, a4, a5);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    if (_IsKindOfUIView((uint64_t)v14))
    {
      objc_msgSend(v14, "_hitTestWithContext:", _MergedGlobals_1004);
      v17 = objc_claimAutoreleasedReturnValue();
      v18 = (void *)v17;
      if (v17)
        v19 = (void *)v17;
      else
        v19 = v14;
      v20 = v19;

      v14 = v20;
    }
    v21 = (void *)_MergedGlobals_1004;
    _MergedGlobals_1004 = 0;

    v22 = qword_1ECD7D4A8;
    if (!qword_1ECD7D4A8)
    {
      v22 = __UILogCategoryGetNode("HitTest", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
      atomic_store(v22, (unint64_t *)&qword_1ECD7D4A8);
    }
    if ((*(_BYTE *)v22 & 1) != 0)
    {
      v25 = *(NSObject **)(v22 + 8);
      if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
      {
        v26 = 138412290;
        v27 = v14;
        _os_log_impl(&dword_185066000, v25, OS_LOG_TYPE_ERROR, "Hit test result: %@", (uint8_t *)&v26, 0xCu);
      }
    }
  }
  return v14;
}

void sub_185A659E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185A69FBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185A6A2EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void _updateTreatsHiddenAsOverlapsInStates(void *a1, int a2, int a3, int a4)
{
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = v7;
  if ((a2 & 1) != 0 || (a3 & 1) != 0 || a4)
  {
    v19 = 0u;
    v20 = 0u;
    v17 = 0u;
    v18 = 0u;
    v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v18;
      do
      {
        v12 = 0;
        do
        {
          if (*(_QWORD *)v18 != v11)
            objc_enumerationMutation(v8);
          v13 = *(void **)(*((_QWORD *)&v17 + 1) + 8 * v12);
          if (a2)
          {
            objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * v12), "leadingWidth");
            if (v14 == 0.0)
              objc_msgSend(v13, "_setTreatLeadingHiddenAsOverlaps:", 1);
          }
          if (a3)
          {
            objc_msgSend(v13, "trailingWidth");
            if (v15 == 0.0)
              objc_msgSend(v13, "_setTreatTrailingHiddenAsOverlaps:", 1);
          }
          if (a4)
          {
            objc_msgSend(v13, "supplementaryWidth");
            if (v16 == 0.0)
              objc_msgSend(v13, "_setTreatSupplementaryHiddenAsOverlaps:", 1);
          }
          ++v12;
        }
        while (v10 != v12);
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
      }
      while (v10);
    }
  }

}

BOOL _UIPanelControllerSizeClassIsEffectivelyCompact(uint64_t a1)
{
  return a1 == 1;
}

void sub_185A6D1B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 208), 8);
  _Unwind_Resume(a1);
}

double _transitionInsetsForViewController(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  int v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  unint64_t v12;
  id v13;
  void *v14;
  char isKindOfClass;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  void *v22;
  void *v23;
  void *v24;
  double MaxY;
  void *v26;
  char v27;
  id v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _BYTE v41[128];
  uint64_t v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;

  v42 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(a1, "view");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "mainViewController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "_isNavigationController");

  if (v6)
  {
    objc_msgSend(v3, "mainViewController");
    v7 = (id)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v3, "collapsedState");
    objc_msgSend(v3, "leadingViewController");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "view");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "window");
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    v12 = v8 & 0xFFFFFFFFFFFFFFFDLL;
    v13 = v7;
    if (v12 == 1)
    {
      v13 = v7;
      if (v11)
      {
        objc_msgSend(v3, "leadingViewController");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_opt_class();
        isKindOfClass = objc_opt_isKindOfClass();

        if ((isKindOfClass & 1) != 0)
        {
          v39 = 0u;
          v40 = 0u;
          v37 = 0u;
          v38 = 0u;
          objc_msgSend(v3, "leadingViewController", 0);
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v16, "navControllers");
          v17 = (void *)objc_claimAutoreleasedReturnValue();

          v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
          v13 = v7;
          if (v18)
          {
            v19 = v18;
            v20 = *(_QWORD *)v38;
            while (2)
            {
              for (i = 0; i != v19; ++i)
              {
                if (*(_QWORD *)v38 != v20)
                  objc_enumerationMutation(v17);
                v22 = *(void **)(*((_QWORD *)&v37 + 1) + 8 * i);
                objc_msgSend(v22, "view");
                v23 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v23, "window");
                v24 = (void *)objc_claimAutoreleasedReturnValue();

                if (v24)
                {
                  v13 = v22;

                  goto LABEL_18;
                }
              }
              v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v37, v41, 16);
              if (v19)
                continue;
              break;
            }
            v13 = v7;
          }
LABEL_18:

        }
        else
        {
          objc_msgSend(v3, "leadingViewController");
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          objc_opt_class();
          v27 = objc_opt_isKindOfClass();

          v13 = v7;
          if ((v27 & 1) != 0)
          {
            objc_msgSend(v3, "leadingViewController");
            v13 = (id)objc_claimAutoreleasedReturnValue();

          }
        }
      }
    }
    if (objc_msgSend(v13, "_isNavigationController"))
    {
      v28 = v13;
      objc_msgSend(v28, "topViewController");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "view");
      v30 = objc_claimAutoreleasedReturnValue();

      MaxY = 0.0;
      if ((objc_msgSend(v28, "isNavigationBarHidden") & 1) == 0)
      {
        objc_msgSend(v28, "existingPaletteForEdge:", 2);
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        v32 = v31;
        if (v31 && objc_msgSend(v31, "isAttached"))
        {
          objc_msgSend(v32, "frame");
          MaxY = CGRectGetMaxY(v43);
        }
        else
        {
          objc_msgSend(v28, "_navigationBarForNestedNavigationController");
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v33, "frame");
          MaxY = CGRectGetMaxY(v44);

        }
      }
      if ((objc_msgSend(v28, "isToolbarHidden") & 1) == 0)
      {
        objc_msgSend(v28, "view");
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v34, "bounds");
        CGRectGetHeight(v45);
        objc_msgSend(v28, "toolbar");
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v35, "frame");
        CGRectGetMinY(v46);

      }
    }
    else
    {
      objc_msgSend(v13, "view");
      v30 = objc_claimAutoreleasedReturnValue();
      v28 = v4;
      MaxY = 0.0;
    }

    v4 = (void *)v30;
  }
  else
  {
    MaxY = 0.0;
  }
  objc_msgSend(v4, "layoutMargins");
  objc_msgSend(v4, "layoutMargins");

  return MaxY;
}

id _resizeMeshTransform(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5, double a6, double a7, double a8, CGFloat a9, CGFloat a10, CGFloat a11, CGFloat a12, double a13, double a14, double a15, double a16)
{
  void *v28;
  void *v29;
  char v30;
  void *v31;
  BOOL IsEmpty;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  BOOL IsNull;
  double v39;
  double v40;
  double v41;
  BOOL v42;
  double v51;
  double v53;
  double v54;
  double v56;
  double v57;
  _OWORD v58[14];
  _OWORD v59[5];
  uint64_t v60;
  double v61;
  uint64_t v62;
  double v63;
  __int128 v64;
  double v65;
  uint64_t v66;
  double v67;
  uint64_t v68;
  double v69;
  double v70;
  double v71;
  double v72;
  uint64_t v73;
  double v74;
  double v75;
  double v76;
  double v77;
  uint64_t v78;
  double v79;
  double v80;
  double v81;
  double v82;
  uint64_t v83;
  double v84;
  double v85;
  double v86;
  double v87;
  uint64_t v88;
  uint64_t v89;
  double v90;
  uint64_t v91;
  double v92;
  __int128 v93;
  double v94;
  uint64_t v95;
  double v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;
  CGRect v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;
  CGRect v112;
  CGRect v113;
  CGRect v114;
  CGRect v115;

  v103 = *MEMORY[0x1E0C80C00];
  +[UIDevice currentDevice](UIDevice, "currentDevice");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v28, "_deviceInfoForKey:", CFSTR("ProductType"));
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v30 = objc_msgSend(v29, "isEqualToString:", CFSTR("iPhone7,1"));

  if ((v30 & 1) != 0)
  {
    v31 = 0;
  }
  else
  {
    v104.origin.x = a1;
    v104.origin.y = a2;
    v104.size.width = a3;
    v104.size.height = a4;
    IsEmpty = CGRectIsEmpty(v104);
    v33 = 0.0;
    v34 = 0.0;
    v35 = 0.0;
    v36 = 0.0;
    v37 = 0.0;
    if (!IsEmpty)
    {
      v105.origin.x = a1;
      v105.origin.y = a2;
      v105.size.width = a3;
      v105.size.height = a4;
      IsNull = CGRectIsNull(v105);
      v35 = 0.0;
      v36 = 0.0;
      v37 = 0.0;
      if (!IsNull)
      {
        v106.origin.x = a1;
        v106.origin.y = a2;
        v106.size.width = a3;
        v106.size.height = a4;
        v34 = a5 / CGRectGetHeight(v106);
        v107.origin.x = a1;
        v107.origin.y = a2;
        v107.size.width = a3;
        v107.size.height = a4;
        v56 = a6 / CGRectGetWidth(v107);
        v108.origin.x = a1;
        v108.origin.y = a2;
        v108.size.width = a3;
        v108.size.height = a4;
        v53 = a7 / CGRectGetHeight(v108);
        v109.origin.x = a1;
        v109.origin.y = a2;
        v109.size.width = a3;
        v109.size.height = a4;
        v37 = a8 / CGRectGetWidth(v109);
        v36 = v53;
        v35 = v56;
      }
    }
    v51 = v37;
    v54 = v36;
    v57 = v35;
    v110.origin.x = a9;
    v110.origin.y = a10;
    v110.size.width = a11;
    v110.size.height = a12;
    if (CGRectIsEmpty(v110))
    {
      v39 = 0.0;
      v40 = 0.0;
      v41 = 0.0;
    }
    else
    {
      v111.origin.x = a9;
      v111.origin.y = a10;
      v111.size.width = a11;
      v111.size.height = a12;
      v42 = CGRectIsNull(v111);
      v39 = 0.0;
      v40 = 0.0;
      v41 = 0.0;
      if (!v42)
      {
        v112.origin.x = a9;
        v112.origin.y = a10;
        v112.size.width = a11;
        v112.size.height = a12;
        v33 = a13 / CGRectGetHeight(v112);
        v113.origin.x = a9;
        v113.origin.y = a10;
        v113.size.width = a11;
        v113.size.height = a12;
        v39 = a14 / CGRectGetWidth(v113);
        v114.origin.x = a9;
        v114.origin.y = a10;
        v114.size.width = a11;
        v114.size.height = a12;
        v40 = a15 / CGRectGetHeight(v114);
        v115.origin.x = a9;
        v115.origin.y = a10;
        v115.size.width = a11;
        v115.size.height = a12;
        v41 = a16 / CGRectGetWidth(v115);
      }
    }
    memset(v59, 0, 32);
    v59[2] = xmmword_18667A4D0;
    v59[3] = xmmword_18666F250;
    v59[4] = xmmword_18667A4E0;
    v60 = 0;
    v61 = v34;
    v62 = 0;
    v63 = v33;
    v64 = xmmword_18667A4D0;
    v65 = v34;
    v66 = 0x3FF0000000000000;
    v67 = v33;
    v68 = 0x3FE0000000000000;
    v69 = v57;
    v70 = v34;
    v71 = v39;
    v72 = v33;
    v73 = 0x3FE0000000000000;
    v74 = 1.0 - v51;
    v75 = v34;
    v76 = 1.0 - v41;
    v77 = v33;
    v78 = 0x3FE0000000000000;
    v79 = v57;
    v80 = 1.0 - v54;
    v81 = v39;
    v82 = 1.0 - v40;
    v83 = 0x3FE0000000000000;
    v84 = 1.0 - v51;
    v85 = 1.0 - v54;
    v86 = 1.0 - v41;
    v87 = 1.0 - v40;
    v88 = 0x3FE0000000000000;
    v89 = 0;
    v90 = 1.0 - v54;
    v91 = 0;
    v92 = 1.0 - v40;
    v93 = xmmword_18667A4D0;
    v94 = 1.0 - v54;
    v95 = 0x3FF0000000000000;
    v96 = 1.0 - v40;
    v97 = 0x3FE0000000000000;
    v98 = xmmword_18666F250;
    v99 = xmmword_18666F250;
    __asm { FMOV            V0.2D, #1.0 }
    v100 = xmmword_18667A4D0;
    v101 = _Q0;
    v102 = xmmword_18666C8C0;
    v58[10] = xmmword_18667A484;
    v58[11] = unk_18667A494;
    v58[12] = xmmword_18667A4A4;
    v58[13] = unk_18667A4B4;
    v58[6] = xmmword_18667A444;
    v58[7] = unk_18667A454;
    v58[8] = xmmword_18667A464;
    v58[9] = unk_18667A474;
    v58[2] = xmmword_18667A404;
    v58[3] = unk_18667A414;
    v58[4] = xmmword_18667A424;
    v58[5] = unk_18667A434;
    v58[0] = xmmword_18667A3E4;
    v58[1] = *(_OWORD *)algn_18667A3F4;
    objc_msgSend(MEMORY[0x1E0CD27F0], "meshTransformWithVertexCount:vertices:faceCount:faces:depthNormalization:", 12, v59, 7, v58, *MEMORY[0x1E0CD2A90], *(_QWORD *)&a15);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v31, "setSubdivisionSteps:", 0);
  }
  return v31;
}

void __Block_byref_object_copy__385(uint64_t a1, uint64_t a2)
{
  objc_moveWeak((id *)(a1 + 40), (id *)(a2 + 40));
}

void __Block_byref_object_dispose__386(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 40));
}

uint64_t affectedSidesFromState(void *a1)
{
  id v1;
  double v2;
  uint64_t v3;
  double v4;
  double v5;

  v1 = a1;
  objc_msgSend(v1, "leadingWidth");
  v3 = v2 > 0.0;
  objc_msgSend(v1, "trailingWidth");
  if (v4 > 0.0)
    v3 |= 2uLL;
  if (v3)
  {
    objc_msgSend(v1, "supplementaryWidth");
    if (v5 > 0.0)
      v3 |= 4uLL;
  }

  return v3;
}

double totalObscuredPrimaryWidthForState(void *a1)
{
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;

  v1 = a1;
  objc_msgSend(v1, "leadingDragOffset");
  v3 = v2;
  objc_msgSend(v1, "trailingDragOffset");
  v5 = v3 + v4;
  objc_msgSend(v1, "supplementaryDragOffset");
  v7 = v6;

  return v5 + v7;
}

void sub_185A6F9A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, id *a11, id *a12)
{
  uint64_t v12;

  objc_destroyWeak(location);
  objc_destroyWeak(a12);
  objc_destroyWeak(a11);
  objc_destroyWeak((id *)(v12 - 152));
  objc_destroyWeak((id *)(v12 - 144));
  _Unwind_Resume(a1);
}

void sub_185A6FB18(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_185A70398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id *location)
{
  id *v15;
  uint64_t v16;

  objc_destroyWeak(v15);
  objc_destroyWeak((id *)(v16 - 128));
  _Unwind_Resume(a1);
}

id findTransitioningChildNavigationController(void *a1)
{
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (!objc_msgSend(v1, "_isNavigationController"))
  {
LABEL_4:
    v13 = 0u;
    v14 = 0u;
    v11 = 0u;
    v12 = 0u;
    objc_msgSend(v1, "childViewControllers", 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)v12;
LABEL_6:
      v7 = 0;
      while (1)
      {
        if (*(_QWORD *)v12 != v6)
          objc_enumerationMutation(v3);
        findTransitioningChildNavigationController(*(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * v7));
        v8 = objc_claimAutoreleasedReturnValue();
        if (v8)
          break;
        if (v5 == ++v7)
        {
          v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
          if (v5)
            goto LABEL_6;
          goto LABEL_12;
        }
      }
    }
    else
    {
LABEL_12:

      objc_msgSend(v1, "presentedViewController");
      v9 = objc_claimAutoreleasedReturnValue();
      v3 = (void *)v9;
      if (!v9)
      {
        v2 = 0;
        goto LABEL_15;
      }
      findTransitioningChildNavigationController(v9);
      v8 = objc_claimAutoreleasedReturnValue();
    }
    v2 = (id)v8;
LABEL_15:

    goto LABEL_16;
  }
  v2 = v1;
  if ((objc_msgSend(v2, "_isTransitioning") & 1) == 0)
  {

    goto LABEL_4;
  }
LABEL_16:

  return v2;
}

id _UIUpdateInputScopeDebugDescription(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  v2 = a2;
  if (!a2)
    v2 = mach_absolute_time();
  objc_msgSend(MEMORY[0x1E0CB37A0], "stringWithFormat:", CFSTR("Input Scope, groupChanged=%u (scope=%llu, group=%llu), sets:"), *(_QWORD *)a1 != *(_QWORD *)(*(_QWORD *)(a1 + 8) + 16), *(_QWORD *)a1, *(_QWORD *)(*(_QWORD *)(a1 + 8) + 16));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = *(_DWORD *)(a1 + 56);
  if (v5)
  {
    v6 = v5 - 1;
    do
    {
      v7 = v6;
      _UIUpdateInputSetDebugDescription(*(_QWORD *)(a1 + 8 * v6 + 64), v2);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      _UIUpdateDebugDescriptionIndented(v8, CFSTR("\n  - "), CFSTR("    "));
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "appendString:", v9);

      --v6;
    }
    while (v7);
  }
  _UIUpdateInputAggregateCacheDebugDescription((unsigned int *)(a1 + 16), v2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  _UIUpdateDebugDescriptionIndented(v10, CFSTR("\n  "), CFSTR("  "));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "appendString:", v11);

  return v4;
}

id _StringFromCollapsedState(uint64_t a1)
{
  id v1;
  uint64_t i;
  _OWORD v4[2];
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v4[0] = xmmword_1E16C1950;
  v4[1] = *(_OWORD *)off_1E16C1960;
  v1 = *((id *)v4 + a1);
  for (i = 24; i != -8; i -= 8)

  return v1;
}

void sub_185A740B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_185A79230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185A7E1B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL _UISplitViewControllerInSplashboard()
{
  return UIApp == 0;
}

__CFString *_UISplitViewControllerDisplayModeDescription(unint64_t a1)
{
  if (a1 < 7)
    return off_1E16C1C78[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%lu (not defined as an enum value)"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *_UISplitViewControllerSplitBehaviorDescription(unint64_t a1)
{
  if (a1 < 4)
    return off_1E16C1CC8[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%lu (not defined as an enum value)"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *_UISplitViewControllerColumnDescription(unint64_t a1)
{
  if (a1 < 4)
    return off_1E16C1CE8[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%lu (not defined as an enum value)"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

uint64_t _UISplitViewControllerColumnIsVisibleForDisplayMode(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BOOL4 v6;
  unsigned int v7;
  unsigned int v8;
  void *v10;
  void *v11;

  if (!a1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _UISplitViewControllerColumnIsVisibleForDisplayMode(UISplitViewControllerStyle, UISplitViewControllerColumn, UISplitViewControllerDisplayMode)");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, CFSTR("UISplitViewControllerPanelImpl.m"), 399, CFSTR("Unexpected request for information from an unspecified-style UISplitViewController"));

  }
  v6 = a1 == 1;
  if (a2 == 1)
    v6 = a1 == 2;
  v7 = (unint64_t)(a3 - 2) <= 1 && v6;
  if ((unint64_t)(a3 - 4) >= 3)
    v8 = v7;
  else
    v8 = 1;
  if (a2 == 3)
    v8 = 0;
  if (a2 == 2)
    return 1;
  else
    return v8;
}

double minNonzeroPrimaryWidthInStates(void *a1, int a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t i;
  void *v9;
  double v10;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v15;
    v7 = 0.0;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v15 != v6)
          objc_enumerationMutation(v3);
        v9 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * i);
        if (a2)
          objc_msgSend(v9, "leadingWidth");
        else
          objc_msgSend(v9, "trailingWidth");
        if ((v10 < v7 || v7 == 0.0) && v10 > 0.0)
          v7 = v10;
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v5);
  }
  else
  {
    v7 = 0.0;
  }

  return v7;
}

double minNonzeroSupplementaryWidthInStateWithPrimaryWidthGetMatchingState(void *a1, int a2, _QWORD *a3, double a4)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  double v12;
  uint64_t i;
  void *v14;
  double v15;
  double v16;
  double v17;
  id v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
  if (!v8)
  {
    v10 = 0;
    v12 = 0.0;
    if (!a3)
      goto LABEL_22;
    goto LABEL_21;
  }
  v9 = v8;
  v10 = 0;
  v11 = *(_QWORD *)v21;
  v12 = 0.0;
  do
  {
    for (i = 0; i != v9; ++i)
    {
      if (*(_QWORD *)v21 != v11)
        objc_enumerationMutation(v7);
      v14 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * i);
      if (a2)
        objc_msgSend(v14, "leadingWidth");
      else
        objc_msgSend(v14, "trailingWidth");
      if (v15 == a4)
      {
        objc_msgSend(v14, "supplementaryWidth");
        v17 = v16;
        if (v16 > 0.0 && (v12 == 0.0 || v16 < v12))
        {
          v18 = v14;

          v12 = v17;
          v10 = v18;
        }
        else if (!v10 && v16 == 0.0 && v12 == 0.0)
        {
          v10 = v14;
        }
      }
    }
    v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
  }
  while (v9);
  if (a3)
LABEL_21:
    *a3 = objc_retainAutorelease(v10);
LABEL_22:

  return v12;
}

uint64_t _UISplitViewControllerColumnIsHiddenOrDimmedForDisplayMode(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int IsVisibleForDisplayMode;
  unsigned int v7;
  void *v9;
  void *v10;

  if (!a1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _UISplitViewControllerColumnIsHiddenOrDimmedForDisplayMode(UISplitViewControllerStyle, UISplitViewControllerColumn, UISplitViewControllerDisplayMode)");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "handleFailureInFunction:file:lineNumber:description:", v10, CFSTR("UISplitViewControllerPanelImpl.m"), 433, CFSTR("Unexpected request for information from an unspecified-style UISplitViewController"));

  }
  IsVisibleForDisplayMode = _UISplitViewControllerColumnIsVisibleForDisplayMode(a1, a2, a3);
  v7 = (0x68u >> a3) & 1;
  if (a3 > 6)
    v7 = 0;
  if (!IsVisibleForDisplayMode)
    v7 = 1;
  if (a2 == 2)
    return v7;
  else
    return IsVisibleForDisplayMode ^ 1u;
}

uint64_t _UISplitViewControllerWantsPickerBehaviors(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = a1;
  objc_msgSend(v1, "traitCollection");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "_presentationSemanticContext");

  if (v3 == 2)
    v4 = objc_msgSend(v1, "_ignoresSheetContext") ^ 1;
  else
    v4 = 0;

  return v4;
}

uint64_t _UISplitViewControllerAutoRevealsFullSidebar(void *a1)
{
  if (_UISplitViewControllerAutoHidesColumns(a1) && qword_1ECD7D598 != -1)
    dispatch_once(&qword_1ECD7D598, &__block_literal_global_1252);
  return byte_1ECD7D4C2;
}

uint64_t _nextVisibleColumnForResponderAfterColumn(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  if (a1 == 1)
    goto LABEL_11;
  if (a1 != 2)
    return 999;
  v5 = 1;
  if ((_UISplitViewControllerColumnIsVisibleForDisplayMode(a2, 1, a3) & 1) == 0)
  {
LABEL_11:
    if (_UISplitViewControllerColumnIsVisibleForDisplayMode(a2, 0, a3))
      return 0;
    else
      return 999;
  }
  return v5;
}

void sub_185A89CB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185A9474C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

const __CFString *_NSStringFromUIViewControllerAppearState(unsigned int a1)
{
  if (a1 > 3)
    return &stru_1E16EDF20;
  else
    return off_1E16C25B8[a1];
}

uint64_t _UIViewControllerSetForceDetachedInheritsContentOverlayInsetsFromSuperview(uint64_t result)
{
  byte_1EDDB0F71 = result;
  return result;
}

id UIViewControllerMissingInitialTraitCollection(void *a1)
{
  id v1;
  NSObject *v2;
  void *v3;
  unint64_t v4;
  NSObject *v5;
  void *v6;
  void *v7;
  uint8_t buf[4];
  id v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  _UIIsPrivateMainBundle();
  if (dyld_program_sdk_at_least())
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "UITraitCollection *UIViewControllerMissingInitialTraitCollection(UIViewController *__strong, UIApplicationSystemVersion)");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSObject handleFailureInFunction:file:lineNumber:description:](v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIViewController.m"), 2815, CFSTR("UIViewController is missing its initial trait collection populated during initialization. This is a serious bug, likely caused by accessing properties or methods on the view controller before calling a UIViewController initializer. View controller: %@"), v1);

LABEL_3:
    goto LABEL_9;
  }
  if (os_variant_has_internal_diagnostics())
  {
    __UIFaultDebugAssertLog();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_FAULT))
    {
      *(_DWORD *)buf = 138412290;
      v10 = v1;
      _os_log_fault_impl(&dword_185066000, v2, OS_LOG_TYPE_FAULT, "UIViewController is missing its initial trait collection populated during initialization. This is a serious bug, likely caused by accessing properties or methods on the view controller before calling a UIViewController initializer. View controller: %@ Set a symbolic breakpoint on UIViewControllerMissingInitialTraitCollection and check the backtrace to see what's causing this. This will become an assert in a future version.", buf, 0xCu);
    }
    goto LABEL_3;
  }
  v4 = UIViewControllerMissingInitialTraitCollection___s_category;
  if (!UIViewControllerMissingInitialTraitCollection___s_category)
  {
    v4 = __UILogCategoryGetNode("Assert", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
    atomic_store(v4, (unint64_t *)&UIViewControllerMissingInitialTraitCollection___s_category);
  }
  v5 = *(NSObject **)(v4 + 8);
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 138412290;
    v10 = v1;
    _os_log_impl(&dword_185066000, v5, OS_LOG_TYPE_ERROR, "UIViewController is missing its initial trait collection populated during initialization. This is a serious bug, likely caused by accessing properties or methods on the view controller before calling a UIViewController initializer. View controller: %@ Set a symbolic breakpoint on UIViewControllerMissingInitialTraitCollection and check the backtrace to see what's causing this. This will become an assert in a future version.", buf, 0xCu);
  }
LABEL_9:
  +[UIScreen mainScreen](UIScreen, "mainScreen");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "traitCollection");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

id recursiveDescription(void *a1, char a2)
{
  _QWORD v3[4];
  char v4;

  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __recursiveDescription_block_invoke_2;
  v3[3] = &__block_descriptor_33_e43___NSString_28__0__UIViewController_8i16__20l;
  v4 = a2;
  _UIRecursiveDescription(a1, (uint64_t)&__block_literal_global_2363, (uint64_t)v3);
  return (id)objc_claimAutoreleasedReturnValue();
}

__CFString *_UIInterfaceOrientationDebugDescription(unint64_t a1)
{
  if (a1 < 5)
    return off_1E16C25D8[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(%li)"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *_UIInterfaceOrientationMaskDebugDescription(unint64_t a1)
{
  unint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  __CFString *v5;

  if (!a1)
  {
    v5 = CFSTR("none");
    return v5;
  }
  v1 = a1;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if ((v1 & 2) != 0)
  {
    objc_msgSend(v2, "addObject:", CFSTR("portrait"));
    v1 &= ~2uLL;
    if ((v1 & 0x10) == 0)
    {
LABEL_4:
      if ((v1 & 8) == 0)
        goto LABEL_5;
      goto LABEL_13;
    }
  }
  else if ((v1 & 0x10) == 0)
  {
    goto LABEL_4;
  }
  objc_msgSend(v3, "addObject:", CFSTR("landscapeLeft"));
  v1 &= ~0x10uLL;
  if ((v1 & 8) == 0)
  {
LABEL_5:
    if ((v1 & 4) == 0)
      goto LABEL_6;
LABEL_14:
    objc_msgSend(v3, "addObject:", CFSTR("portraitUpsideDown"));
    v1 &= ~4uLL;
    if (!v1)
      goto LABEL_8;
    goto LABEL_7;
  }
LABEL_13:
  objc_msgSend(v3, "addObject:", CFSTR("landscapeRight"));
  v1 &= ~8uLL;
  if ((v1 & 4) != 0)
    goto LABEL_14;
LABEL_6:
  if (v1)
  {
LABEL_7:
    _UIInterfaceOrientationDebugDescription(v1);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "addObject:", v4);

  }
LABEL_8:
  objc_msgSend(v3, "componentsJoinedByString:", CFSTR(", "));
  v5 = (__CFString *)objc_claimAutoreleasedReturnValue();

  return v5;
}

uint64_t _UIViewControllerIsBeingPresentedOrDismissesFullscreen(void *a1)
{
  id v1;
  void *v2;
  int v3;
  void *v4;
  uint64_t v5;

  v1 = a1;
  objc_msgSend(v1, "presentedViewController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isBeingDismissed");

  if (v3)
  {
    objc_msgSend(v1, "presentedViewController");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "modalPresentationStyle") == 0;

  }
  else if ((objc_msgSend(v1, "isBeingPresented") & 1) != 0
         || (objc_msgSend(v1, "presentingViewController"),
             v5 = objc_claimAutoreleasedReturnValue(),
             (id)v5,
             v5))
  {
    v5 = objc_msgSend(v1, "modalPresentationStyle") == 0;
  }

  return v5;
}

id _viewControllersWhoseOrientationsMustCoincide(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  BOOL v8;
  void *v9;
  void *v10;
  char v11;
  id v12;
  void *v13;
  void *v14;
  BOOL v15;
  void *v16;
  void *v17;

  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "presentingViewController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "_presentationController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v3, "modalPresentationStyle");
  if (objc_msgSend(v6, "state") == 1)
  {
    v8 = 1;
    if (v5)
    {
LABEL_3:
      if (v7 == 17
        || v7 == 5
        || !v7
        && ((objc_msgSend(v5, "_existingView"),
             v9 = (void *)objc_claimAutoreleasedReturnValue(),
             objc_msgSend(v9, "window"),
             (v10 = (void *)objc_claimAutoreleasedReturnValue()) == 0)
          ? (v11 = 1)
          : (v11 = v8),
            v10,
            v9,
            (v11 & 1) == 0))
      {
        objc_msgSend(v4, "addObject:", v5);
      }
      _viewControllersWhoseOrientationsMustCoincide(v5, v4);
      v12 = (id)objc_claimAutoreleasedReturnValue();
      goto LABEL_24;
    }
  }
  else
  {
    v8 = objc_msgSend(v6, "state") == 2;
    if (v5)
      goto LABEL_3;
  }
  objc_msgSend(v3, "_existingView");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "window");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if (v14)
  {
    if (v7)
      v15 = 0;
    else
      v15 = v8;

    if (!v15)
      objc_msgSend(v4, "addObject:", v3);
  }
  else
  {

  }
  if ((unint64_t)objc_msgSend(v4, "count") <= 1)
    v16 = 0;
  else
    v16 = v4;
  v12 = v16;
LABEL_24:
  v17 = v12;

  return v17;
}

void sub_185AA36BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

float adjustOffsetAndDimension(float *a1, float *a2, int a3, float result, float a5)
{
  float v5;
  float v6;
  float v7;
  float v9;

  if (a3)
  {
    v5 = a5 - result;
    if ((float)(a5 - result) != 0.0)
    {
      v6 = *a1;
      v7 = *a2;
      switch(a3)
      {
        case 1:
          v6 = (float)(v5 * 0.5) + v6;
          break;
        case 2:
          goto LABEL_7;
        case 3:
          if (v6 == 0.0)
          {
LABEL_7:
            v7 = v5 + v7;
          }
          else
          {
            v6 = (float)(v5 * 0.5) + v6;
            v7 = (float)(v5 * 0.5) + v7;
          }
          break;
        case 4:
          v6 = v6 + (float)(v5 * -0.5);
          break;
        case 6:
          if (v7 == 0.0 && v6 == result)
            v7 = v5 + v7;
          else
            v7 = (float)(v5 * 0.5) + v7;
          v6 = v6 - (float)(v5 * 0.5);
          break;
        case 7:
          if (result == 0.0)
          {
            v7 = v7 + a5;
          }
          else
          {
            v9 = a5 / result;
            v6 = v9 * v6;
            v7 = v9 * v7;
          }
          break;
        default:
          break;
      }
      *a1 = roundf(v6);
      result = roundf(v7);
      *a2 = result;
    }
  }
  return result;
}

void sub_185AA54B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185AA61D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_185AA6588(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  _Unwind_Resume(exception_object);
}

id __recursiveDescription_block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;

  v2 = a2;
  objc_msgSend(v2, "childModalViewController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "childViewControllers");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    objc_msgSend(v2, "childModalViewController");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "arrayByAddingObject:", v5);
    v6 = objc_claimAutoreleasedReturnValue();

    v4 = (void *)v6;
  }

  return v4;
}

id __recursiveDescription_block_invoke_2(uint64_t a1, void *a2, unsigned int a3, _QWORD *a4)
{
  id *v7;
  void *v8;
  void *v9;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  v7 = a2;
  -[UIViewController _parentViewController](v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (v8)
  {

LABEL_4:
    -[UIViewController _descriptionForPrintingHierarchyIncludingInsets:]((char *)v7, *(unsigned __int8 *)(a1 + 32));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    goto LABEL_5;
  }
  if ((objc_msgSend(v7, "_isRootViewController") & 1) != 0)
    goto LABEL_4;
  v11 = (void *)objc_opt_new();
  if (a3 >= 2)
  {
    v12 = (int)a3 - 1;
    do
    {
      objc_msgSend(v11, "appendString:", CFSTR("   | "));
      --v12;
    }
    while (v12);
  }
  objc_msgSend(v11, "appendString:", CFSTR("   + "));
  v13 = objc_retainAutorelease(v11);
  *a4 = v13;
  v14 = (void *)MEMORY[0x1E0CB37A0];
  -[UIViewController _descriptionForPrintingHierarchyIncludingInsets:]((char *)v7, *(unsigned __int8 *)(a1 + 32));
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "presentingViewController");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "_presentationController");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "_descriptionForPrintingViewControllerHierarchy");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "stringWithFormat:", CFSTR("%@, presented with: %@"), v15, v18);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_5:
  return v9;
}

void sub_185AACBF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __UIVIEWCONTROLLERTRANSITIONCOORDINATOR_IS_EXECUTING_ALONGSIDE_ANIMATION_BLOCK__(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, a1);
}

void _UIViewControllerTransitioningRunCustomTransitionWithRequest(void *a1)
{
  id v1;
  void *v2;
  int v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  _QWORD v23[4];
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  BOOL v32;
  _QWORD v33[4];
  id v34;
  id v35;

  v1 = a1;
  objc_msgSend(v1, "animator");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "pinningInputViewsResponder");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "interactor");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "extraPinningInputViewsBlock");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v1, "keyboardShouldAnimateAlongsideForInteractiveTransitions");
  objc_msgSend(v1, "transitionContext");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "keyboardAnimationStyle");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "interactiveUpdateHandler");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "containerView");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "keyboardSceneDelegate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v2)
  {
    objc_msgSend(v4, "_setInteractiveUpdateHandler:", v6);
    objc_msgSend(v4, "_setTransitionIsCompleting:", 0);
    if (v3)
    {
      objc_msgSend(v4, "_auxContext");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "prepareForAlongsideTransitionWithContext:", v9);

    }
  }
  v10 = MEMORY[0x1E0C809B0];
  v33[0] = MEMORY[0x1E0C809B0];
  v33[1] = 3221225472;
  v33[2] = ___UIViewControllerTransitioningRunCustomTransitionWithRequest_block_invoke;
  v33[3] = &unk_1E16B1B50;
  v34 = v5;
  v35 = v4;
  v23[0] = v10;
  v23[1] = 3221225472;
  v23[2] = ___UIViewControllerTransitioningRunCustomTransitionWithRequest_block_invoke_2;
  v23[3] = &unk_1E16C27E0;
  v24 = v8;
  v25 = v22;
  v26 = v1;
  v27 = v21;
  v32 = v2 != 0;
  v28 = v35;
  v29 = v2;
  v30 = v6;
  v31 = v19;
  v20 = v19;
  v11 = v6;
  v12 = v2;
  v13 = v35;
  v14 = v21;
  v15 = v1;
  v16 = v22;
  v17 = v8;
  v18 = v5;
  +[UIView _setAlongsideAnimations:toRunByEndOfBlock:animated:](UIView, "_setAlongsideAnimations:toRunByEndOfBlock:animated:", v33, v23, objc_msgSend(v13, "isAnimated"));

}

void sub_185AB079C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)&STACK[0x340]);
  _Block_object_dispose(&STACK[0x370], 8);
  _Unwind_Resume(a1);
}

void sub_185AB4F8C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 208), 8);
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_185AB54A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

UIVisualEffectView *_UIContextMenuConfigureSeparatorView(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  UIVisualEffectView *v4;
  void *v5;
  UIVisualEffectView *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  v1 = a1;
  +[UIDevice currentDevice](UIDevice, "currentDevice");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  _UIContextMenuGetPlatformMetrics(objc_msgSend(v2, "userInterfaceIdiom"));
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = [UIVisualEffectView alloc];
  objc_msgSend(v3, "itemSeparatorBackgroundEffect");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = -[UIVisualEffectView initWithEffect:](v4, "initWithEffect:", v5);

  objc_msgSend(v3, "itemSeparatorColor");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[UIVisualEffectView contentView](v6, "contentView");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setBackgroundColor:", v7);

  -[UIVisualEffectView contentView](v6, "contentView");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "layer");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setAllowsEdgeAntialiasing:", 1);

  -[UIVisualEffectView contentView](v6, "contentView");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "setClipsToBounds:", 0);

  objc_msgSend(v1, "bounds");
  -[UIView setFrame:](v6, "setFrame:");
  -[UIView setAutoresizingMask:](v6, "setAutoresizingMask:", 18);
  objc_msgSend(v1, "addSubview:", v6);

  return v6;
}

void sub_185ABC9B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose(&STACK[0x348], 8);
  _Block_object_dispose(&STACK[0x368], 8);
  _Block_object_dispose(&STACK[0x388], 8);
  _Block_object_dispose(&STACK[0x3A8], 8);
  _Block_object_dispose(&STACK[0x3C8], 8);
  _Block_object_dispose(&STACK[0x408], 8);
  _Block_object_dispose(&STACK[0x448], 8);
  _Block_object_dispose(&STACK[0x468], 8);
  _Block_object_dispose(&STACK[0x4A8], 8);
  _Block_object_dispose(&STACK[0x4E8], 8);
  _Block_object_dispose(&STACK[0x528], 8);
  _Block_object_dispose(&STACK[0x568], 8);
  _Block_object_dispose(&STACK[0x5A8], 8);
  _Block_object_dispose((const void *)(v1 - 200), 8);
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_185AC0AD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

CGAffineTransform *_randomPlatterTransform(uint64_t a1, int a2, int a3, uint64_t a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, double a9, double a10, double a11, double a12)
{
  uint64_t v19;
  __int128 v20;
  uint32_t v21;
  CGFloat v22;
  uint32_t v23;
  CGFloat Width;
  double v25;
  uint32_t v26;
  __int128 v27;
  CGAffineTransform *result;
  __int128 v29;
  void *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double Height;
  double v37;
  double v38;
  double v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[32];
  CGAffineTransform v43;
  CGAffineTransform v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;

  *(double *)&v42[16] = a11;
  *(double *)&v42[24] = a12;
  *(double *)v42 = a9;
  *(double *)&v42[8] = a10;
  v19 = MEMORY[0x1E0C9BAA8];
  v20 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 16);
  *(_OWORD *)a1 = *MEMORY[0x1E0C9BAA8];
  *(_OWORD *)(a1 + 16) = v20;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v19 + 32);
  if (a2)
  {
    v21 = arc4random();
    v22 = (double)v21 / 4294967300.0 * 8.0 - (1.0 - (double)v21 / 4294967300.0) * 8.0;
    v23 = arc4random();
    CGAffineTransformMakeTranslation((CGAffineTransform *)a1, v22, (double)v23 / 4294967300.0 * 8.0 - (1.0 - (double)v23 / 4294967300.0) * 8.0);
  }
  v45.origin.x = a5;
  v45.origin.y = a6;
  v45.size.width = a7;
  v45.size.height = a8;
  Width = CGRectGetWidth(v45);
  v25 = fmin(asin(30.0 / Width * 0.5), 0.104719755);
  v26 = arc4random();
  v27 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)&v43.a = *(_OWORD *)a1;
  *(_OWORD *)&v43.c = v27;
  *(_OWORD *)&v43.tx = *(_OWORD *)(a1 + 32);
  result = CGAffineTransformRotate(&v44, &v43, v25 * ((double)v26 / 4294967300.0) - v25 * (1.0 - (double)v26 / 4294967300.0));
  v29 = *(_OWORD *)&v44.c;
  *(_OWORD *)a1 = *(_OWORD *)&v44.a;
  *(_OWORD *)(a1 + 16) = v29;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)&v44.tx;
  if (a3)
  {
    _UIContextMenuGetPlatformMetrics(a4);
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "maxLiftScale");
    v32 = v31;
    objc_msgSend(v30, "maxLiftScaleUpPoints");
    v34 = v33;
    v46.origin.x = a5;
    v46.origin.y = a6;
    v46.size.width = a7;
    v46.size.height = a8;
    v35 = CGRectGetWidth(v46);
    v47.origin.x = a5;
    v47.origin.y = a6;
    v47.size.width = a7;
    v47.size.height = a8;
    Height = CGRectGetHeight(v47);
    if (v35 >= Height)
      v37 = v35;
    else
      v37 = Height;
    v38 = CGRectGetWidth(*(CGRect *)v42) / v35;
    if (v38 >= v32)
      v38 = v32;
    if ((v34 + v37) / v37 >= v38)
      v39 = v38;
    else
      v39 = (v34 + v37) / v37;

    v40 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)&v43.a = *(_OWORD *)a1;
    *(_OWORD *)&v43.c = v40;
    *(_OWORD *)&v43.tx = *(_OWORD *)(a1 + 32);
    result = CGAffineTransformScale(&v44, &v43, v39, v39);
    v41 = *(_OWORD *)&v44.c;
    *(_OWORD *)a1 = *(_OWORD *)&v44.a;
    *(_OWORD *)(a1 + 16) = v41;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)&v44.tx;
  }
  return result;
}

uint64_t _UILayerAncestorsHaveAllBeenCommitted(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t HaveAllBeenCommitted;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    if (objc_msgSend(v1, "hasBeenCommitted"))
    {
      objc_msgSend(v2, "superlayer");
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      HaveAllBeenCommitted = _UILayerAncestorsHaveAllBeenCommitted();

    }
    else
    {
      HaveAllBeenCommitted = 0;
    }
  }
  else
  {
    HaveAllBeenCommitted = 1;
  }

  return HaveAllBeenCommitted;
}

double _UIControlMostlyInsideEdgeInsets()
{
  double v0;
  void *v1;
  uint64_t v2;
  double v3;
  void *v4;
  uint64_t v5;
  double v6;
  double v7;
  void *v8;
  uint64_t v9;
  double v10;
  double v11;
  void *v12;
  uint64_t v13;
  double v14;

  if (_MergedGlobals_19_1 == 1)
    return *(double *)&qword_1ECD7B4A0;
  +[UIDevice currentDevice](UIDevice, "currentDevice");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "userInterfaceIdiom");

  if ((v2 & 0xFFFFFFFFFFFFFFFBLL) == 1)
    v3 = 25.0;
  else
    v3 = 70.0;
  v0 = -v3;
  +[UIDevice currentDevice](UIDevice, "currentDevice");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "userInterfaceIdiom");

  if ((v5 & 0xFFFFFFFFFFFFFFFBLL) == 1)
    v6 = 25.0;
  else
    v6 = 70.0;
  v7 = -v6;
  +[UIDevice currentDevice](UIDevice, "currentDevice");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "userInterfaceIdiom");

  if ((v9 & 0xFFFFFFFFFFFFFFFBLL) == 1)
    v10 = 25.0;
  else
    v10 = 70.0;
  v11 = -v10;
  +[UIDevice currentDevice](UIDevice, "currentDevice");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = objc_msgSend(v12, "userInterfaceIdiom");

  if ((v13 & 0xFFFFFFFFFFFFFFFBLL) == 1)
    v14 = 25.0;
  else
    v14 = 70.0;
  qword_1ECD7B4A0 = *(_QWORD *)&v0;
  unk_1ECD7B4A8 = *(_QWORD *)&v7;
  qword_1ECD7B4B0 = *(_QWORD *)&v11;
  unk_1ECD7B4B8 = -v14;
  _MergedGlobals_19_1 = 1;
  return v0;
}

id _GetScrubberThumbImage()
{
  void *v0;
  uint64_t v1;
  void *v2;

  v0 = (void *)_GetScrubberThumbImage___image;
  if (!_GetScrubberThumbImage___image)
  {
    _UIImageWithName(CFSTR("UIMovieScrubberThumb.png"));
    v1 = objc_claimAutoreleasedReturnValue();
    v2 = (void *)_GetScrubberThumbImage___image;
    _GetScrubberThumbImage___image = v1;

    v0 = (void *)_GetScrubberThumbImage___image;
  }
  return v0;
}

uint64_t IsInNavigationBar(void *a1)
{
  void *v1;
  uint64_t v2;

  objc_msgSend(a1, "superview");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (v1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v2 = 1;
    else
      v2 = IsInNavigationBar(v1);
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

void _RemoveAllAnimationsForView(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(v1, "layer");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "removeAllAnimations");

  v10 = 0u;
  v11 = 0u;
  v8 = 0u;
  v9 = 0u;
  objc_msgSend(v1, "subviews", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v9;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v9 != v6)
          objc_enumerationMutation(v3);
        _RemoveAllAnimationsForView(*(_QWORD *)(*((_QWORD *)&v8 + 1) + 8 * v7++));
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v5);
  }

}

id __CopyProgressStringForSeconds(int a1, int a2, int a3)
{
  unsigned int v5;
  const __CFString *v6;
  const __CFString *v7;
  signed int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  id v14;
  void *v15;
  uint64_t v17;

  if (a1)
    a3 = 1;
  if (a1 >= 0)
    v5 = a1;
  else
    v5 = -a1;
  if (a3)
    v6 = &stru_1E16EDF20;
  else
    v6 = CFSTR("-");
  if (a1 >= 0)
    v7 = v6;
  else
    v7 = CFSTR("-");
  v8 = 60 * (v5 / 0x3C);
  v9 = v5 % 0x3C;
  v10 = v8 / 60 % 0x3Cu;
  v11 = v8 - 60 * v10;
  v12 = (v11 / 3600);
  v13 = v11 + 3599;
  v14 = objc_alloc(MEMORY[0x1E0CB3940]);
  if (a2)
  {
    if (v13 >= 0x1C1F)
      v15 = (void *)objc_msgSend(v14, "initWithFormat:", CFSTR("%@%02d:%02d:%02d"), v7, v12, v10, v9);
    else
      v15 = (void *)objc_msgSend(v14, "initWithFormat:", CFSTR("%@%02d:%02d"), v7, v10, v9, v17);
  }
  else if (v13 >= 0x1C1F)
  {
    v15 = (void *)objc_msgSend(v14, "initWithFormat:", CFSTR("%@%d:%02d:%02d"), v7, v12, v10, v9);
  }
  else
  {
    v15 = (void *)objc_msgSend(v14, "initWithFormat:", CFSTR("%@%d:%02d"), v7, v10, v9, v17);
  }
  return v15;
}

id EnclosingNavigationBar(void *a1)
{
  void *v1;
  id v2;
  void *v3;

  objc_msgSend(a1, "superview");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (v1)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v2 = v1;
    }
    else
    {
      EnclosingNavigationBar(v1);
      v2 = (id)objc_claimAutoreleasedReturnValue();
    }
    v3 = v2;
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

void getAVSystemController_EffectiveVolumeDidChangeNotification()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getAVSystemController_EffectiveVolumeDidChangeNotificationSymbolLoc_ptr;
  v8 = getAVSystemController_EffectiveVolumeDidChangeNotificationSymbolLoc_ptr;
  if (!getAVSystemController_EffectiveVolumeDidChangeNotificationSymbolLoc_ptr)
  {
    v1 = MediaExperienceLibrary();
    v0 = (id *)dlsym(v1, "AVSystemController_EffectiveVolumeDidChangeNotification");
    v6[3] = (uint64_t)v0;
    getAVSystemController_EffectiveVolumeDidChangeNotificationSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSString *getAVSystemController_EffectiveVolumeDidChangeNotification(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIKBFeedbackGenerator.m"), 52, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185AD38CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getAVSystemController_ServerConnectionDiedNotification()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getAVSystemController_ServerConnectionDiedNotificationSymbolLoc_ptr;
  v8 = getAVSystemController_ServerConnectionDiedNotificationSymbolLoc_ptr;
  if (!getAVSystemController_ServerConnectionDiedNotificationSymbolLoc_ptr)
  {
    v1 = MediaExperienceLibrary();
    v0 = (id *)dlsym(v1, "AVSystemController_ServerConnectionDiedNotification");
    v6[3] = (uint64_t)v0;
    getAVSystemController_ServerConnectionDiedNotificationSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSString *getAVSystemController_ServerConnectionDiedNotification(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIKBFeedbackGenerator.m"), 53, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185AD39C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185AD3BD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void getCHHapticPatternLibraryKeyKeyboardOther()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getCHHapticPatternLibraryKeyKeyboardOtherSymbolLoc_ptr;
  v8 = getCHHapticPatternLibraryKeyKeyboardOtherSymbolLoc_ptr;
  if (!getCHHapticPatternLibraryKeyKeyboardOtherSymbolLoc_ptr)
  {
    v1 = CoreHapticsLibrary();
    v0 = (id *)dlsym(v1, "CHHapticPatternLibraryKeyKeyboardOther");
    v6[3] = (uint64_t)v0;
    getCHHapticPatternLibraryKeyKeyboardOtherSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticPatternLibraryKey getCHHapticPatternLibraryKeyKeyboardOther(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 89, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185AD3DF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185AD43F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id a19)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(location);
  objc_destroyWeak(&a19);
  _Unwind_Resume(a1);
}

void sub_185AD5144(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_185AD5CAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185AD65D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185AD69EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185AD6AB4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_185AD6B9C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_185AD7464(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *MediaExperienceLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!MediaExperienceLibraryCore_frameworkLibrary)
    MediaExperienceLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)MediaExperienceLibraryCore_frameworkLibrary;
  if (!MediaExperienceLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *MediaExperienceLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("_UIKBFeedbackGenerator.m"), 49, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void __getAVSystemControllerClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  MediaExperienceLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("AVSystemController");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7D628 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAVSystemControllerClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("_UIKBFeedbackGenerator.m"), 50, CFSTR("Unable to find class %s"), "AVSystemController");

    __break(1u);
  }
}

void *__getAudioServicesPlaySystemSoundWithOptionsSymbolLoc_block_invoke(_QWORD *a1)
{
  void *v2;
  void *result;
  void *v4;

  if (!qword_1ECD7D648)
    qword_1ECD7D648 = _sl_dlopen();
  v2 = (void *)qword_1ECD7D648;
  if (!qword_1ECD7D648)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AudioToolboxLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("_UIKBFeedbackGenerator.m"), 57, CFSTR("%s"), 0);

    __break(1u);
    free(v4);
  }
  result = dlsym(v2, "AudioServicesPlaySystemSoundWithOptions");
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = result;
  off_1ECD7D640 = *(_UNKNOWN **)(*(_QWORD *)(a1[4] + 8) + 24);
  return result;
}

id _UIUpdateInputStateDebugDescription(unsigned int *a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  _OWORD v10[3];
  _OWORD v11[3];
  uint64_t v12;

  v2 = a2;
  v12 = *MEMORY[0x1E0C80C00];
  if (!a2)
    v2 = mach_absolute_time();
  v4 = (void *)MEMORY[0x1E0CB3940];
  v5 = *((_QWORD *)a1 + 1);
  memset(v11, 0, sizeof(v11));
  v6 = *a1;
  v7 = _UIMachTimeDebugDescriptionCopyCStr(v5, v2, (char *)v11, 0x30uLL);
  v8 = *((_QWORD *)a1 + 2);
  memset(v10, 0, sizeof(v10));
  objc_msgSend(v4, "stringWithFormat:", CFSTR("mode=%u, earliestModelTime=%s, latestModelTime=%s"), v6, v7, _UIMachTimeDebugDescriptionCopyCStr(v8, v2, (char *)v10, 0x30uLL));
  return (id)objc_claimAutoreleasedReturnValue();
}

id _UIUpdateInputExtentDebugDescription(unsigned int *a1, uint64_t a2)
{
  unint64_t v3;
  _OWORD v5[3];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (!a2)
    a2 = mach_absolute_time();
  v3 = *((_QWORD *)a1 + 1);
  memset(v5, 0, sizeof(v5));
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("mode=%u, earliestModelTime=%s"), *a1, _UIMachTimeDebugDescriptionCopyCStr(v3, a2, (char *)v5, 0x30uLL));
  return (id)objc_claimAutoreleasedReturnValue();
}

id _UIUpdateInputDebugDescription(unsigned int *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v25;
  void *v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  _OWORD v30[3];
  _OWORD v31[3];
  uint64_t v32;

  v2 = a2;
  v32 = *MEMORY[0x1E0C80C00];
  if (!a2)
    v2 = mach_absolute_time();
  v28 = 0;
  v29 = 0;
  v4 = *a1;
  if ((_DWORD)v4 == 2)
  {
    v6 = *((_QWORD *)a1 + 1);
    v7 = *((_QWORD *)a1 + 5);
    v8 = v6 + *((_QWORD *)a1 + 4);
    v4 = 2;
    v28 = 2;
    v29 = v8;
    v5 = v7 + v6;
  }
  else
  {
    v5 = 0;
    if ((_DWORD)v4)
      v28 = *a1;
    else
      v4 = 0;
  }
  v27[0] = v4;
  v27[1] = v5;
  v9 = (void *)MEMORY[0x1E0CB3940];
  v10 = *((_QWORD *)a1 + 4);
  memset(v31, 0, sizeof(v31));
  v11 = _UIMachDurationDebugDescriptionCopyCStr(v10, (char *)v31, 0x30uLL);
  v12 = *((_QWORD *)a1 + 5);
  memset(v30, 0, sizeof(v30));
  objc_msgSend(v9, "stringWithFormat:", CFSTR("{normal=%s, lowLatency=%s}"), v11, _UIMachDurationDebugDescriptionCopyCStr(v12, (char *)v30, 0x30uLL));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = *((_QWORD *)a1 + 11);
  v26 = (void *)MEMORY[0x1E0CB3940];
  _UIUpdateInputStateDebugDescription(a1, v2);
  v14 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v15 = objc_msgSend(v14, "UTF8String");
  v16 = *((_QWORD *)a1 + 9) != 0;
  v17 = a1[6];
  v18 = objc_retainAutorelease(v13);
  v19 = objc_msgSend(v18, "UTF8String");
  _UIUpdateInputExtentDebugDescription((unsigned int *)&v28, v2);
  v20 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  v21 = objc_msgSend(v20, "UTF8String");
  _UIUpdateInputExtentDebugDescription((unsigned int *)v27, v2);
  v22 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  objc_msgSend(v26, "stringWithFormat:", CFSTR("Input, %s (%s, flags=0x%x, readyCallback=%u, alignments=%s), extents:\n - normal: %s\n - lowLatency: %s"), v25, v15, v17, v16, v19, v21, objc_msgSend(v22, "UTF8String"));
  v23 = (void *)objc_claimAutoreleasedReturnValue();

  return v23;
}

void UIRefreshControlReceivedOffscreenBeginRefreshing(void *a1)
{
  id v1;
  unint64_t v2;
  NSObject *v3;
  const char *v4;
  unint64_t v5;
  int v6;
  id v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if (dyld_program_sdk_at_least())
  {
    v2 = qword_1ECD7A520;
    if (!qword_1ECD7A520)
    {
      v2 = __UILogCategoryGetNode("RefreshControl", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
      atomic_store(v2, (unint64_t *)&qword_1ECD7A520);
    }
    v3 = *(NSObject **)(v2 + 8);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      v6 = 138412290;
      v7 = v1;
      v4 = "A UIRefreshControl received offscreen beginRefreshing. Ignored. Break on UIRefreshControlReceivedOffscreenBeg"
           "inRefreshing to debug. %@";
LABEL_10:
      _os_log_impl(&dword_185066000, v3, OS_LOG_TYPE_ERROR, v4, (uint8_t *)&v6, 0xCu);
    }
  }
  else
  {
    v5 = qword_1ECD7A528;
    if (!qword_1ECD7A528)
    {
      v5 = __UILogCategoryGetNode("RefreshControl", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
      atomic_store(v5, (unint64_t *)&qword_1ECD7A528);
    }
    v3 = *(NSObject **)(v5 + 8);
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      v6 = 138412290;
      v7 = v1;
      v4 = "A UIRefreshControl received offscreen beginRefreshing. This request will be ignored in a future release. Brea"
           "k on UIRefreshControlReceivedOffscreenBeginRefreshing to debug %@";
      goto LABEL_10;
    }
  }

}

_UIPortalView *_itemViewFromItem(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  id v9;
  void *v10;
  _UIPortalView *v11;
  void *v12;
  _UIPortalView *v13;
  void *v14;
  UIImageView *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  int v22;
  int v24;
  void *v25;

  v9 = a1;
  objc_msgSend(v9, "view");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (v10)
  {
    v11 = [_UIPortalView alloc];
    objc_msgSend(v9, "view");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = -[_UIPortalView initWithSourceView:](v11, "initWithSourceView:", v12);

    -[UIView setUserInteractionEnabled:](v13, "setUserInteractionEnabled:", 0);
  }
  else
  {
    objc_msgSend(v9, "icon");
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (v14)
    {
      v15 = [UIImageView alloc];
      objc_msgSend(v9, "icon");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = -[UIImageView initWithImage:](v15, "initWithImage:", v16);

      +[UIImageSymbolConfiguration configurationWithTextStyle:scale:](UIImageSymbolConfiguration, "configurationWithTextStyle:scale:", CFSTR("UICTFontTextStyleBody"), 3);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      -[_UIPortalView setPreferredSymbolConfiguration:](v13, "setPreferredSymbolConfiguration:", v17);

      -[_UIPortalView setAdjustsImageSizeForAccessibilityContentSizeCategory:](v13, "setAdjustsImageSizeForAccessibilityContentSizeCategory:", 1);
      objc_msgSend(v9, "identifier");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      -[_UIPortalView _setSuppressPixelAlignment:](v13, "_setSuppressPixelAlignment:", v18 != 0);

    }
    else
    {
      v13 = (_UIPortalView *)objc_opt_new();
      objc_msgSend(v9, "name");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      -[_UIPortalView setText:](v13, "setText:", v19);

      -[_UIPortalView _setTextColorFollowsTintColor:](v13, "_setTextColorFollowsTintColor:", 1);
    }
    -[UIView sizeToFit](v13, "sizeToFit");
  }
  objc_msgSend(v9, "tintColor");
  v20 = (void *)objc_claimAutoreleasedReturnValue();

  if (v20)
  {
    objc_msgSend(v9, "tintColor");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    -[UIView setTintColor:](v13, "setTintColor:", v21);

  }
  _updateSourceCenterForItemView(v9, v13, a2, a3, a4, a5);
  if (_UIInternalPreferencesRevisionOnce != -1)
    dispatch_once(&_UIInternalPreferencesRevisionOnce, &__block_literal_global_4_20);
  v22 = _UIInternalPreferencesRevisionVar;
  if (_UIInternalPreferencesRevisionVar >= 1)
  {
    v24 = _UIInternalPreference_BarCustomizationDebugEnabled;
    if (_UIInternalPreferencesRevisionVar != _UIInternalPreference_BarCustomizationDebugEnabled)
    {
      while (v22 >= v24)
      {
        _UIInternalPreferenceSync(v22, &_UIInternalPreference_BarCustomizationDebugEnabled, (uint64_t)CFSTR("BarCustomizationDebugEnabled"), (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateBool);
        v24 = _UIInternalPreference_BarCustomizationDebugEnabled;
        if (v22 == _UIInternalPreference_BarCustomizationDebugEnabled)
          goto LABEL_12;
      }
      if (byte_1EDDA7DE4)
      {
        +[UIColor colorWithRed:green:blue:alpha:](UIColor, "colorWithRed:green:blue:alpha:", 1.0, 0.0, 0.0, 0.2);
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        -[UIView setBackgroundColor:](v13, "setBackgroundColor:", v25);

      }
    }
  }
LABEL_12:

  return v13;
}

void _updateSourceCenterForItemView(void *a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  id v11;
  double v12;
  double v13;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;

  v22 = a1;
  v11 = a2;
  v23.origin.x = a3;
  v23.origin.y = a4;
  v23.size.width = a5;
  v23.size.height = a6;
  if (!CGRectIsEmpty(v23))
  {
    objc_msgSend(v11, "_getSourceCenter");
    if (v13 == *MEMORY[0x1E0C9D538] && v12 == *(double *)(MEMORY[0x1E0C9D538] + 8))
    {
      objc_msgSend(v22, "_sourceFrameInContainer:", 0);
      v17 = v16 + v15 * 0.5;
      v20 = v19 + v18 * 0.5;
      v24.origin.x = a3;
      v24.origin.y = a4;
      v24.size.width = a5;
      v24.size.height = a6;
      v21 = v17 - CGRectGetMinX(v24);
      v25.origin.x = a3;
      v25.origin.y = a4;
      v25.size.width = a5;
      v25.size.height = a6;
      objc_msgSend(v11, "_setSourceCenter:", v21, v20 - CGRectGetMinY(v25));
    }
  }

}

void sub_185AE975C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185AE98C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id MutableReusableViewMapDescription(void *a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  void *v11;
  void *v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB37A0], "stringWithString:", CFSTR("{"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "allKeys");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "sortedArrayUsingSelector:", sel_compare_);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v16 = 0u;
  v17 = 0u;
  v14 = 0u;
  v15 = 0u;
  v5 = v4;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v15;
    do
    {
      for (i = 0; i != v7; ++i)
      {
        if (*(_QWORD *)v15 != v8)
          objc_enumerationMutation(v5);
        v10 = *(void **)(*((_QWORD *)&v14 + 1) + 8 * i);
        objc_msgSend(v10, "_ui_shortDescription");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(a1, "objectForKeyedSubscript:", v10);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v2, "appendFormat:", CFSTR("\n\t%@ = %@;"), v11, v12, (_QWORD)v14);

      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v7);
  }

  objc_msgSend(v2, "appendString:", CFSTR("\n}"));
  return v2;
}

id StringToMutableReusableViewMapMapDescription(void *a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  id obj;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB37A0], "stringWithString:", CFSTR("{"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "allKeys");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "sortedArrayUsingSelector:", sel_compare_);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  obj = v4;
  v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v16;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v16 != v7)
          objc_enumerationMutation(obj);
        v9 = *(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * i);
        objc_msgSend(a1, "objectForKeyedSubscript:", v9);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        MutableReusableViewMapDescription(v10);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "stringByReplacingOccurrencesOfString:withString:", CFSTR("\n"), CFSTR("\n\t"));
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v2, "appendFormat:", CFSTR("\n\t\"%@\" = %@;"), v9, v12);

      }
      v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v6);
  }

  objc_msgSend(v2, "appendString:", CFSTR("\n}"));
  return v2;
}

void sub_185AF23F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _UIActionSliderTrackMaskPath(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double v8;
  CGRect v10;

  v8 = CGRectGetHeight(*(CGRect *)&a1) * 0.5;
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.height = a4;
  if (CGRectGetWidth(v10) >= 115.0)
    +[UIBezierPath _bezierPathWithPillRect:cornerRadius:](UIBezierPath, "_bezierPathWithPillRect:cornerRadius:", a1 + 0.0, a2 + -2.0, a3, a4 + 4.0, v8);
  else
    +[UIBezierPath bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:](UIBezierPath, "bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:", -1, a1, a2, a3, a4, v8, v8);
  return (id)objc_claimAutoreleasedReturnValue();
}

void sub_185AF72D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *_UIRefreshControlStateDescription(unint64_t a1)
{
  if (a1 < 7)
    return off_1E16C3508[a1];
  objc_msgSend(CFSTR("unknown state"), "stringByAppendingFormat:", CFSTR(": %lu"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

id _UIDictationConnectionLog()
{
  if (_UIDictationConnectionLog_onceToken != -1)
    dispatch_once(&_UIDictationConnectionLog_onceToken, &__block_literal_global_153);
  return (id)_UIDictationConnectionLog_log;
}

id _UIDictationControllerLog()
{
  if (_UIDictationControllerLog_onceToken != -1)
    dispatch_once(&_UIDictationControllerLog_onceToken, &__block_literal_global_2_5);
  return (id)_UIDictationControllerLog_log;
}

id _UIDictationControllerUndoRedoLog()
{
  if (_UIDictationControllerUndoRedoLog_onceToken != -1)
    dispatch_once(&_UIDictationControllerUndoRedoLog_onceToken, &__block_literal_global_4_3);
  return (id)_UIDictationControllerUndoRedoLog_log;
}

BOOL CheckSandboxAccess(void *a1)
{
  id v1;
  _BOOL8 v2;

  objc_msgSend(a1, "path");
  v1 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
  objc_msgSend(v1, "fileSystemRepresentation");
  v2 = sandbox_check() == 0;

  return v2;
}

void WarnSetterIsNoop(uint64_t a1)
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __WarnSetterIsNoop_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = a1;
  if (WarnSetterIsNoop_onceToken != -1)
    dispatch_once(&WarnSetterIsNoop_onceToken, block);
}

void sub_185AFA250(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185AFA360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185AFA48C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185AFA810(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185AFAE4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *FileProviderLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!FileProviderLibraryCore_frameworkLibrary)
    FileProviderLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)FileProviderLibraryCore_frameworkLibrary;
  if (!FileProviderLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *FileProviderLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("NSURL+UIDocumentPicker.m"), 26, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void *CloudDocsLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!CloudDocsLibraryCore_frameworkLibrary)
    CloudDocsLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)CloudDocsLibraryCore_frameworkLibrary;
  if (!CloudDocsLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CloudDocsLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("NSURL+UIDocumentPicker.m"), 31, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void __getBRContainerClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  CloudDocsLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("BRContainer");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7D6D8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getBRContainerClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("NSURL+UIDocumentPicker.m"), 34, CFSTR("Unable to find class %s"), "BRContainer");

    __break(1u);
  }
}

void sub_185AFC3B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *CloudDocsLibrary_0()
{
  void *v0;
  void *v2;
  void *v3;

  if (!CloudDocsLibraryCore_frameworkLibrary_0)
    CloudDocsLibraryCore_frameworkLibrary_0 = _sl_dlopen();
  v0 = (void *)CloudDocsLibraryCore_frameworkLibrary_0;
  if (!CloudDocsLibraryCore_frameworkLibrary_0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CloudDocsLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("UIDocumentMenuViewController.m"), 43, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

id getDOCConfigurationClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)_MergedGlobals_1_4;
  v7 = _MergedGlobals_1_4;
  if (!_MergedGlobals_1_4)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getDOCConfigurationClass_block_invoke;
    v3[3] = &unk_1E16B14C0;
    v3[4] = &v4;
    __getDOCConfigurationClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_185AFE520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185AFEC40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getDOCConfigurationClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD79D60)
    qword_1ECD79D60 = _sl_dlopen();
  if (!qword_1ECD79D60)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *DocumentManagerCoreLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("UIDocumentPickerViewController.m"), 44, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("DOCConfiguration");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getDOCConfigurationClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UIDocumentPickerViewController.m"), 45, CFSTR("Unable to find class %s"), "DOCConfiguration");

LABEL_8:
    __break(1u);
  }
  _MergedGlobals_1_4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getUIDocumentBrowserViewControllerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD79D70)
    qword_1ECD79D70 = _sl_dlopen();
  if (!qword_1ECD79D70)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *DocumentManagerLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("UIDocumentPickerViewController.m"), 41, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("UIDocumentBrowserViewController");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getUIDocumentBrowserViewControllerClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UIDocumentPickerViewController.m"), 42, CFSTR("Unable to find class %s"), "UIDocumentBrowserViewController");

LABEL_8:
    __break(1u);
  }
  qword_1ECD79D68 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_185B003E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void *__getFPDocumentURLFromBookmarkableStringSymbolLoc_block_invoke(_QWORD *a1)
{
  void *v2;
  void *result;
  void *v4;

  if (!qword_1ECD7A538)
    qword_1ECD7A538 = _sl_dlopen();
  v2 = (void *)qword_1ECD7A538;
  if (!qword_1ECD7A538)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *FileProviderLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("_UIDocumentPickerRemoteViewController.m"), 31, CFSTR("%s"), 0);

    __break(1u);
    free(v4);
  }
  result = dlsym(v2, "FPDocumentURLFromBookmarkableString");
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = result;
  _MergedGlobals_3_6 = *(_UNKNOWN **)(*(_QWORD *)(a1[4] + 8) + 24);
  return result;
}

void sub_185B00D50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185B018B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _appleDoublePathForRealPath_DotUnderscore(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v1 = a1;
  objc_msgSend(v1, "lastPathComponent");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(CFSTR("._"), "stringByAppendingString:", v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v1, "stringByDeletingLastPathComponent");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v4, "stringByAppendingPathComponent:", v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

uint64_t _isPossibleAppleDoublePath_MACOSX(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  unint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;

  objc_msgSend(a1, "stringByStandardizingPath");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "pathComponents");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v2, "firstObject");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v3, "isEqualToString:", CFSTR("/")))
  {

    goto LABEL_5;
  }
  v4 = objc_msgSend(v2, "count");

  if (v4 < 2)
  {
LABEL_5:
    objc_msgSend(v2, "firstObject");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    goto LABEL_6;
  }
  objc_msgSend(v2, "objectAtIndexedSubscript:", 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_6:
  v6 = v5;
  v7 = objc_msgSend(v5, "isEqualToString:", CFSTR("__MACOSX"));

  return v7;
}

uint64_t _isPossibleAppleDoublePath_DotUnderscore(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;

  objc_msgSend(a1, "stringByStandardizingPath");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "lastPathComponent");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "hasPrefix:", CFSTR("._"));

  return v3;
}

void _UIAppleDoubleMergeAppleDoubleItemsIntoRealFiles(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  int v18;
  int v19;
  id v21;
  const char *v22;
  id v23;
  int v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t j;
  void *v41;
  id obj;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _BYTE v51[128];
  _QWORD v52[16];
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;

  v57 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v47 = 0u;
  v48 = 0u;
  v49 = 0u;
  v50 = 0u;
  obj = v3;
  v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v47, v51, 16);
  if (v5)
  {
    v6 = v5;
    v46 = *(_QWORD *)v48;
    v44 = *MEMORY[0x1E0CB2D50];
    v45 = *MEMORY[0x1E0CB2FE0];
    v43 = *MEMORY[0x1E0CB3388];
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v48 != v46)
          objc_enumerationMutation(obj);
        v8 = *(void **)(*((_QWORD *)&v47 + 1) + 8 * i);
        objc_msgSend(v8, "pathInArchive");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "stringByAppendingPathComponent:", v9);
        v10 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v8, "pathToAppleDoubleRealFileCounterpart");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "stringByAppendingPathComponent:", v11);
        v12 = (void *)objc_claimAutoreleasedReturnValue();

        v13 = v10;
        v14 = v12;
        if (objc_msgSend(v14, "length") || !_isPossibleAppleDoublePath_MACOSX(v13))
          goto LABEL_13;
        LOBYTE(v52[0]) = 0;
        v15 = (void *)MEMORY[0x1E0CB3620];
        v16 = v13;
        objc_msgSend(v15, "defaultManager");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v18 = objc_msgSend(v17, "fileExistsAtPath:isDirectory:", v16, v52);

        v19 = LOBYTE(v52[0]);
        if (!v18 || v19 == 0)
        {
LABEL_13:
          v21 = objc_retainAutorelease(v13);
          v22 = (const char *)objc_msgSend(v21, "UTF8String");
          v23 = objc_retainAutorelease(v14);
          v24 = copyfile(v22, (const char *)objc_msgSend(v23, "UTF8String"), 0, 0x8C0005u);
          if (v24)
          {
            objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", v45, v24, 0);
            v25 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("unable to copy attributes stored in AppleDouble file %@ into %@"), v21, v23);
            v26 = (void *)objc_claimAutoreleasedReturnValue();
            v27 = (void *)MEMORY[0x1E0CB35C8];
            *(_QWORD *)&v53 = v44;
            *((_QWORD *)&v53 + 1) = v43;
            v52[0] = v26;
            v52[1] = v25;
            objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v52, &v53, 2);
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v27, "errorWithDomain:code:userInfo:", CFSTR("_UIArchiveErrorDomain"), -1, v28);
            v29 = (void *)objc_claimAutoreleasedReturnValue();

          }
          objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v30, "removeItemAtPath:error:", v21, 0);

        }
      }
      v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v47, v51, 16);
    }
    while (v6);
  }
  objc_msgSend(v4, "stringByAppendingPathComponent:", CFSTR("__MACOSX"));
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v32, "enumeratorAtPath:", v31);
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v33, "allObjects");
  v34 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v34, "sortedArrayUsingComparator:", &__block_literal_global_31_0);
  v35 = (void *)objc_claimAutoreleasedReturnValue();

  v55 = 0u;
  v56 = 0u;
  v53 = 0u;
  v54 = 0u;
  v36 = v35;
  v37 = objc_msgSend(v36, "countByEnumeratingWithState:objects:count:", &v53, v52, 16);
  if (v37)
  {
    v38 = v37;
    v39 = *(_QWORD *)v54;
    do
    {
      for (j = 0; j != v38; ++j)
      {
        if (*(_QWORD *)v54 != v39)
          objc_enumerationMutation(v36);
        objc_msgSend(v31, "stringByAppendingPathComponent:", *(_QWORD *)(*((_QWORD *)&v53 + 1) + 8 * j));
        v41 = (void *)objc_claimAutoreleasedReturnValue();
        _removeIfEmptyDirectoryAtAbsolutePath(v41);

      }
      v38 = objc_msgSend(v36, "countByEnumeratingWithState:objects:count:", &v53, v52, 16);
    }
    while (v38);
  }

  _removeIfEmptyDirectoryAtAbsolutePath(v31);
}

uint64_t ___realPathForAppleDoublePath_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "isEqualToString:", CFSTR("__MACOSX"));
}

BOOL ___removeEmptyAppleDoubleDirectoriesInRootDirectory_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4;
  unint64_t v5;
  unint64_t v6;

  v4 = a3;
  v5 = objc_msgSend(a2, "length");
  v6 = objc_msgSend(v4, "length");

  return v5 < v6;
}

int *_removeIfEmptyDirectoryAtAbsolutePath(void *a1)
{
  int *result;

  result = (int *)rmdir((const char *)objc_msgSend(objc_retainAutorelease(a1), "fileSystemRepresentation"));
  if ((_DWORD)result)
    return __error();
  return result;
}

void ui_archive_read_new()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = getarchive_read_newSymbolLoc_ptr;
  v7 = getarchive_read_newSymbolLoc_ptr;
  if (!getarchive_read_newSymbolLoc_ptr)
  {
    v1 = (void *)libarchiveLibrary();
    v0 = dlsym(v1, "archive_read_new");
    v5[3] = (uint64_t)v0;
    getarchive_read_newSymbolLoc_ptr = v0;
  }
  _Block_object_dispose(&v4, 8);
  if (v0)
  {
    ((void (*)(void))v0)();
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "struct ui_archive *__ui_archive_read_new(void)");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("_UILibArchiveSoftLinking.m"), 15, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B02634(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_read_support_compression_all(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getarchive_read_support_compression_allSymbolLoc_ptr;
  v9 = getarchive_read_support_compression_allSymbolLoc_ptr;
  if (!getarchive_read_support_compression_allSymbolLoc_ptr)
  {
    v3 = (void *)libarchiveLibrary();
    v2 = dlsym(v3, "archive_read_support_compression_all");
    v7[3] = (uint64_t)v2;
    getarchive_read_support_compression_allSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    ((void (*)(uint64_t))v2)(a1);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "int __ui_archive_read_support_compression_all(struct ui_archive *)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UILibArchiveSoftLinking.m"), 16, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B0273C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_read_support_format_all(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getarchive_read_support_format_allSymbolLoc_ptr;
  v9 = getarchive_read_support_format_allSymbolLoc_ptr;
  if (!getarchive_read_support_format_allSymbolLoc_ptr)
  {
    v3 = (void *)libarchiveLibrary();
    v2 = dlsym(v3, "archive_read_support_format_all");
    v7[3] = (uint64_t)v2;
    getarchive_read_support_format_allSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    ((void (*)(uint64_t))v2)(a1);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "int __ui_archive_read_support_format_all(struct ui_archive *)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UILibArchiveSoftLinking.m"), 17, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B02844(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_read_open_filename(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  void *v14;

  v5 = objc_retainAutorelease(a2);
  v6 = objc_msgSend(v5, "fileSystemRepresentation");
  v11 = 0;
  v12 = &v11;
  v13 = 0x2020000000;
  v7 = getarchive_read_open_filenameSymbolLoc_ptr;
  v14 = getarchive_read_open_filenameSymbolLoc_ptr;
  if (!getarchive_read_open_filenameSymbolLoc_ptr)
  {
    v8 = (void *)libarchiveLibrary();
    v7 = dlsym(v8, "archive_read_open_filename");
    v12[3] = (uint64_t)v7;
    getarchive_read_open_filenameSymbolLoc_ptr = v7;
  }
  _Block_object_dispose(&v11, 8);
  if (v7)
  {
    ((void (*)(uint64_t, uint64_t, uint64_t))v7)(a1, v6, a3);

  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "int __ui_archive_read_open_filename(struct ui_archive *, const char *, size_t)");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "handleFailureInFunction:file:lineNumber:description:", v10, CFSTR("_UILibArchiveSoftLinking.m"), 18, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B02980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_read_close(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getarchive_read_closeSymbolLoc_ptr;
  v9 = getarchive_read_closeSymbolLoc_ptr;
  if (!getarchive_read_closeSymbolLoc_ptr)
  {
    v3 = (void *)libarchiveLibrary();
    v2 = dlsym(v3, "archive_read_close");
    v7[3] = (uint64_t)v2;
    getarchive_read_closeSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    ((void (*)(uint64_t))v2)(a1);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "int __ui_archive_read_close(struct ui_archive *)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UILibArchiveSoftLinking.m"), 19, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B02A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_read_finish(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getarchive_read_finishSymbolLoc_ptr;
  v9 = getarchive_read_finishSymbolLoc_ptr;
  if (!getarchive_read_finishSymbolLoc_ptr)
  {
    v3 = (void *)libarchiveLibrary();
    v2 = dlsym(v3, "archive_read_finish");
    v7[3] = (uint64_t)v2;
    getarchive_read_finishSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    ((void (*)(uint64_t))v2)(a1);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void __ui_archive_read_finish(struct ui_archive *)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UILibArchiveSoftLinking.m"), 20, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B02B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_format_name(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;

  v8 = 0;
  v9 = &v8;
  v10 = 0x2020000000;
  v2 = getarchive_format_nameSymbolLoc_ptr;
  v11 = getarchive_format_nameSymbolLoc_ptr;
  if (!getarchive_format_nameSymbolLoc_ptr)
  {
    v3 = (void *)libarchiveLibrary();
    v2 = dlsym(v3, "archive_format_name");
    v9[3] = (uint64_t)v2;
    getarchive_format_nameSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v8, 8);
  if (v2)
  {
    v4 = (void *)((uint64_t (*)(uint64_t))v2)(a1);
    if (v4)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v4);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
    }
    v5 = v4;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "const char *__ui_archive_format_name(struct ui_archive *)");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, CFSTR("_UILibArchiveSoftLinking.m"), 21, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B02CB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_format(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getarchive_formatSymbolLoc_ptr;
  v9 = getarchive_formatSymbolLoc_ptr;
  if (!getarchive_formatSymbolLoc_ptr)
  {
    v3 = (void *)libarchiveLibrary();
    v2 = dlsym(v3, "archive_format");
    v7[3] = (uint64_t)v2;
    getarchive_formatSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    ((void (*)(uint64_t))v2)(a1);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "int __ui_archive_format(struct ui_archive *)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UILibArchiveSoftLinking.m"), 22, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B02DB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_read_next_header(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;

  v8 = 0;
  v9 = &v8;
  v10 = 0x2020000000;
  v4 = getarchive_read_next_headerSymbolLoc_ptr;
  v11 = getarchive_read_next_headerSymbolLoc_ptr;
  if (!getarchive_read_next_headerSymbolLoc_ptr)
  {
    v5 = (void *)libarchiveLibrary();
    v4 = dlsym(v5, "archive_read_next_header");
    v9[3] = (uint64_t)v4;
    getarchive_read_next_headerSymbolLoc_ptr = v4;
  }
  _Block_object_dispose(&v8, 8);
  if (v4)
  {
    ((void (*)(uint64_t, uint64_t))v4)(a1, a2);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "int __ui_archive_read_next_header(struct ui_archive *, struct ui_archive_entry **)");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, CFSTR("_UILibArchiveSoftLinking.m"), 24, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B02EC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_entry_pathname(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;

  v8 = 0;
  v9 = &v8;
  v10 = 0x2020000000;
  v2 = getarchive_entry_pathnameSymbolLoc_ptr;
  v11 = getarchive_entry_pathnameSymbolLoc_ptr;
  if (!getarchive_entry_pathnameSymbolLoc_ptr)
  {
    v3 = (void *)libarchiveLibrary();
    v2 = dlsym(v3, "archive_entry_pathname");
    v9[3] = (uint64_t)v2;
    getarchive_entry_pathnameSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v8, 8);
  if (v2)
  {
    v4 = (void *)((uint64_t (*)(uint64_t))v2)(a1);
    if (v4)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v4);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
    }
    v5 = v4;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "const char *__ui_archive_entry_pathname(struct ui_archive_entry *)");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, CFSTR("_UILibArchiveSoftLinking.m"), 25, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B02FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_entry_filetype(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getarchive_entry_filetypeSymbolLoc_ptr;
  v9 = getarchive_entry_filetypeSymbolLoc_ptr;
  if (!getarchive_entry_filetypeSymbolLoc_ptr)
  {
    v3 = (void *)libarchiveLibrary();
    v2 = dlsym(v3, "archive_entry_filetype");
    v7[3] = (uint64_t)v2;
    getarchive_entry_filetypeSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    ((void (*)(uint64_t))v2)(a1);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "mode_t __ui_archive_entry_filetype(struct ui_archive_entry *)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UILibArchiveSoftLinking.m"), 26, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B030F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_entry_size_is_set(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getarchive_entry_size_is_setSymbolLoc_ptr;
  v9 = getarchive_entry_size_is_setSymbolLoc_ptr;
  if (!getarchive_entry_size_is_setSymbolLoc_ptr)
  {
    v3 = (void *)libarchiveLibrary();
    v2 = dlsym(v3, "archive_entry_size_is_set");
    v7[3] = (uint64_t)v2;
    getarchive_entry_size_is_setSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    ((void (*)(uint64_t))v2)(a1);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "int __ui_archive_entry_size_is_set(struct ui_archive_entry *)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UILibArchiveSoftLinking.m"), 27, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B031F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_entry_size(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getarchive_entry_sizeSymbolLoc_ptr;
  v9 = getarchive_entry_sizeSymbolLoc_ptr;
  if (!getarchive_entry_sizeSymbolLoc_ptr)
  {
    v3 = (void *)libarchiveLibrary();
    v2 = dlsym(v3, "archive_entry_size");
    v7[3] = (uint64_t)v2;
    getarchive_entry_sizeSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    ((void (*)(uint64_t))v2)(a1);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "int64_t __ui_archive_entry_size(struct ui_archive_entry *)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UILibArchiveSoftLinking.m"), 28, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B03300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_write_disk_new()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2020000000;
  v0 = getarchive_write_disk_newSymbolLoc_ptr;
  v7 = getarchive_write_disk_newSymbolLoc_ptr;
  if (!getarchive_write_disk_newSymbolLoc_ptr)
  {
    v1 = (void *)libarchiveLibrary();
    v0 = dlsym(v1, "archive_write_disk_new");
    v5[3] = (uint64_t)v0;
    getarchive_write_disk_newSymbolLoc_ptr = v0;
  }
  _Block_object_dispose(&v4, 8);
  if (v0)
  {
    ((void (*)(void))v0)();
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "struct ui_archive *__ui_archive_write_disk_new(void)");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("_UILibArchiveSoftLinking.m"), 29, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B033F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_write_disk_set_standard_lookup(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getarchive_write_disk_set_standard_lookupSymbolLoc_ptr;
  v9 = getarchive_write_disk_set_standard_lookupSymbolLoc_ptr;
  if (!getarchive_write_disk_set_standard_lookupSymbolLoc_ptr)
  {
    v3 = (void *)libarchiveLibrary();
    v2 = dlsym(v3, "archive_write_disk_set_standard_lookup");
    v7[3] = (uint64_t)v2;
    getarchive_write_disk_set_standard_lookupSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    ((void (*)(uint64_t))v2)(a1);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "int __ui_archive_write_disk_set_standard_lookup(struct ui_archive *)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UILibArchiveSoftLinking.m"), 30, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B03500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_write_disk_set_options(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;

  v8 = 0;
  v9 = &v8;
  v10 = 0x2020000000;
  v4 = getarchive_write_disk_set_optionsSymbolLoc_ptr;
  v11 = getarchive_write_disk_set_optionsSymbolLoc_ptr;
  if (!getarchive_write_disk_set_optionsSymbolLoc_ptr)
  {
    v5 = (void *)libarchiveLibrary();
    v4 = dlsym(v5, "archive_write_disk_set_options");
    v9[3] = (uint64_t)v4;
    getarchive_write_disk_set_optionsSymbolLoc_ptr = v4;
  }
  _Block_object_dispose(&v8, 8);
  if (v4)
  {
    ((void (*)(uint64_t, uint64_t))v4)(a1, a2);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "int __ui_archive_write_disk_set_options(struct ui_archive *, int)");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, CFSTR("_UILibArchiveSoftLinking.m"), 31, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B03610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_write_close(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getarchive_write_closeSymbolLoc_ptr;
  v9 = getarchive_write_closeSymbolLoc_ptr;
  if (!getarchive_write_closeSymbolLoc_ptr)
  {
    v3 = (void *)libarchiveLibrary();
    v2 = dlsym(v3, "archive_write_close");
    v7[3] = (uint64_t)v2;
    getarchive_write_closeSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    ((void (*)(uint64_t))v2)(a1);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "int __ui_archive_write_close(struct ui_archive *)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UILibArchiveSoftLinking.m"), 32, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B03718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_write_finish(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getarchive_write_finishSymbolLoc_ptr;
  v9 = getarchive_write_finishSymbolLoc_ptr;
  if (!getarchive_write_finishSymbolLoc_ptr)
  {
    v3 = (void *)libarchiveLibrary();
    v2 = dlsym(v3, "archive_write_finish");
    v7[3] = (uint64_t)v2;
    getarchive_write_finishSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    ((void (*)(uint64_t))v2)(a1);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void __ui_archive_write_finish(struct ui_archive *)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UILibArchiveSoftLinking.m"), 33, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B03820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_write_header(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;

  v8 = 0;
  v9 = &v8;
  v10 = 0x2020000000;
  v4 = getarchive_write_headerSymbolLoc_ptr;
  v11 = getarchive_write_headerSymbolLoc_ptr;
  if (!getarchive_write_headerSymbolLoc_ptr)
  {
    v5 = (void *)libarchiveLibrary();
    v4 = dlsym(v5, "archive_write_header");
    v9[3] = (uint64_t)v4;
    getarchive_write_headerSymbolLoc_ptr = v4;
  }
  _Block_object_dispose(&v8, 8);
  if (v4)
  {
    ((void (*)(uint64_t, uint64_t))v4)(a1, a2);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "int __ui_archive_write_header(struct ui_archive *, struct ui_archive_entry *)");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, CFSTR("_UILibArchiveSoftLinking.m"), 34, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B03930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_write_finish_entry(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getarchive_write_finish_entrySymbolLoc_ptr;
  v9 = getarchive_write_finish_entrySymbolLoc_ptr;
  if (!getarchive_write_finish_entrySymbolLoc_ptr)
  {
    v3 = (void *)libarchiveLibrary();
    v2 = dlsym(v3, "archive_write_finish_entry");
    v7[3] = (uint64_t)v2;
    getarchive_write_finish_entrySymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    ((void (*)(uint64_t))v2)(a1);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "int __ui_archive_write_finish_entry(struct ui_archive *)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UILibArchiveSoftLinking.m"), 35, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B03A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_entry_clone(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getarchive_entry_cloneSymbolLoc_ptr;
  v9 = getarchive_entry_cloneSymbolLoc_ptr;
  if (!getarchive_entry_cloneSymbolLoc_ptr)
  {
    v3 = (void *)libarchiveLibrary();
    v2 = dlsym(v3, "archive_entry_clone");
    v7[3] = (uint64_t)v2;
    getarchive_entry_cloneSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    ((void (*)(uint64_t))v2)(a1);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "struct ui_archive_entry *__ui_archive_entry_clone(struct ui_archive_entry *)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UILibArchiveSoftLinking.m"), 36, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B03B40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_entry_free(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v2 = getarchive_entry_freeSymbolLoc_ptr;
  v9 = getarchive_entry_freeSymbolLoc_ptr;
  if (!getarchive_entry_freeSymbolLoc_ptr)
  {
    v3 = (void *)libarchiveLibrary();
    v2 = dlsym(v3, "archive_entry_free");
    v7[3] = (uint64_t)v2;
    getarchive_entry_freeSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v6, 8);
  if (v2)
  {
    ((void (*)(uint64_t))v2)(a1);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void __ui_archive_entry_free(struct ui_archive_entry *)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UILibArchiveSoftLinking.m"), 37, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B03C48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_entry_set_pathname(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;

  v3 = objc_retainAutorelease(a2);
  v4 = objc_msgSend(v3, "fileSystemRepresentation");
  v9 = 0;
  v10 = &v9;
  v11 = 0x2020000000;
  v5 = getarchive_entry_set_pathnameSymbolLoc_ptr;
  v12 = getarchive_entry_set_pathnameSymbolLoc_ptr;
  if (!getarchive_entry_set_pathnameSymbolLoc_ptr)
  {
    v6 = (void *)libarchiveLibrary();
    v5 = dlsym(v6, "archive_entry_set_pathname");
    v10[3] = (uint64_t)v5;
    getarchive_entry_set_pathnameSymbolLoc_ptr = v5;
  }
  _Block_object_dispose(&v9, 8);
  if (v5)
  {
    ((void (*)(uint64_t, uint64_t))v5)(a1, v4);

  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void __ui_archive_entry_set_pathname(struct ui_archive_entry *, const char *)");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "handleFailureInFunction:file:lineNumber:description:", v8, CFSTR("_UILibArchiveSoftLinking.m"), 38, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B03D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_read_data_block(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  void *v15;

  v12 = 0;
  v13 = &v12;
  v14 = 0x2020000000;
  v8 = getarchive_read_data_blockSymbolLoc_ptr;
  v15 = getarchive_read_data_blockSymbolLoc_ptr;
  if (!getarchive_read_data_blockSymbolLoc_ptr)
  {
    v9 = (void *)libarchiveLibrary();
    v8 = dlsym(v9, "archive_read_data_block");
    v13[3] = (uint64_t)v8;
    getarchive_read_data_blockSymbolLoc_ptr = v8;
  }
  _Block_object_dispose(&v12, 8);
  if (v8)
  {
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(a1, a2, a3, a4);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "int __ui_archive_read_data_block(struct ui_archive *, const void **, size_t *, off_t *)");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, CFSTR("_UILibArchiveSoftLinking.m"), 39, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B03E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ui_archive_write_data_block(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  void *v15;

  v12 = 0;
  v13 = &v12;
  v14 = 0x2020000000;
  v8 = getarchive_write_data_blockSymbolLoc_ptr;
  v15 = getarchive_write_data_blockSymbolLoc_ptr;
  if (!getarchive_write_data_blockSymbolLoc_ptr)
  {
    v9 = (void *)libarchiveLibrary();
    v8 = dlsym(v9, "archive_write_data_block");
    v13[3] = (uint64_t)v8;
    getarchive_write_data_blockSymbolLoc_ptr = v8;
  }
  _Block_object_dispose(&v12, 8);
  if (v8)
  {
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v8)(a1, a2, a3, a4);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "ssize_t __ui_archive_write_data_block(struct ui_archive *, const void *, size_t, off_t)");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, CFSTR("_UILibArchiveSoftLinking.m"), 40, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B03FC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id ui_archive_error(uint64_t a1, void *a2, int a3, void *a4)
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  void *v24;
  _QWORD v25[2];
  _QWORD v26[3];

  v26[2] = *MEMORY[0x1E0C80C00];
  v7 = a2;
  v8 = a4;
  v9 = (void *)MEMORY[0x1E0CB3940];
  v21 = 0;
  v22 = &v21;
  v23 = 0x2020000000;
  v10 = getarchive_error_stringSymbolLoc_ptr;
  v24 = getarchive_error_stringSymbolLoc_ptr;
  if (!getarchive_error_stringSymbolLoc_ptr)
  {
    v11 = (void *)libarchiveLibrary();
    v10 = dlsym(v11, "archive_error_string");
    v22[3] = (uint64_t)v10;
    getarchive_error_stringSymbolLoc_ptr = v10;
  }
  _Block_object_dispose(&v21, 8);
  if (!v10)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "const char *__ui_archive_error_string(struct ui_archive *)");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "handleFailureInFunction:file:lineNumber:description:", v20, CFSTR("_UILibArchiveSoftLinking.m"), 23, CFSTR("%s"), dlerror(), v21);

    __break(1u);
  }
  v12 = ((uint64_t (*)(uint64_t))v10)(a1);
  if (v12)
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(v9, "stringWithFormat:", CFSTR("%@"), v13, v21);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  v15 = *MEMORY[0x1E0CB2D68];
  v25[0] = *MEMORY[0x1E0CB2D50];
  v25[1] = v15;
  v26[0] = v8;
  v26[1] = v14;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v26, v25, 2);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", v7, a3, v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  return v17;
}

void sub_185B041D8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t libarchiveLibrary()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v9 = 0;
  v10 = &v9;
  v11 = 0x2020000000;
  v0 = libarchiveLibraryCore_frameworkLibrary;
  v12 = libarchiveLibraryCore_frameworkLibrary;
  if (!libarchiveLibraryCore_frameworkLibrary)
  {
    v13 = xmmword_1E16C37C0;
    v14 = 0;
    v0 = _sl_dlopen();
    v10[3] = v0;
    libarchiveLibraryCore_frameworkLibrary = v0;
  }
  _Block_object_dispose(&v9, 8);
  if (!v0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *libarchiveLibrary(void)");
    v3 = objc_claimAutoreleasedReturnValue();
    v4 = (void *)v2;
    v5 = (void *)v2;
    v6 = (void *)v3;
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("_UILibArchiveSoftLinking.m"), 14, CFSTR("%s"), 0);
    v7 = v6;
    v0 = (uint64_t)v5;

    __break(1u);
    free(v8);
  }
  return v0;
}

void sub_185B0433C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185B0546C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  _Block_object_dispose(&a35, 8);
  _Block_object_dispose(&a41, 8);
  _Unwind_Resume(a1);
}

void sub_185B05B8C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_185B05F7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_185B07600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_185B07B18(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_185B08C84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose(&a48, 8);
  _Unwind_Resume(a1);
}

id _UIDocumentLog()
{
  if (qword_1ECD7D710 != -1)
    dispatch_once(&qword_1ECD7D710, &__block_literal_global_159);
  return (id)_MergedGlobals_1015;
}

void sub_185B0C7BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  uint64_t v31;

  _Block_object_dispose(&a31, 8);
  _Block_object_dispose((const void *)(v31 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_185B0CBEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  void *v14;
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  objc_sync_exit(v14);
  _Unwind_Resume(a1);
}

void sub_185B0CCD8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_185B0CDD4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_185B0CE7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_185B0CEFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_185B0D100(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _UIDocumentSetEditingDisabled(void *a1, int a2, int a3)
{
  __int16 v5;
  int v6;
  int v7;
  __int16 v8;
  __int16 v9;
  __int16 v10;
  _BOOL4 v11;
  _WORD *obj;
  _QWORD v13[4];
  _WORD *v14;
  BOOL v15;

  obj = a1;
  objc_sync_enter(obj);
  v5 = obj[96];
  v6 = v5 & 0x180;
  v7 = v6;
  if (a3)
  {
    if (((((v5 & 0x80) == 0) ^ a2) & 1) != 0)
      goto LABEL_9;
    v8 = -129;
    v9 = 128;
  }
  else
  {
    if (((((v5 & 0x100) == 0) ^ a2) & 1) != 0)
      goto LABEL_9;
    v8 = -257;
    v9 = 256;
  }
  if (!a2)
    v9 = 0;
  v10 = v5 & v8 | v9;
  obj[96] = v10;
  v7 = v10 & 0x180;
LABEL_9:
  v11 = v6 != 0;
  objc_sync_exit(obj);
  if (v11 != (v7 != 0))
  {
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = ___UIDocumentSetEditingDisabled_block_invoke;
    v13[3] = &unk_1E16B1B78;
    v15 = v7 != 0;
    v14 = obj;
    objc_msgSend(v14, "_performBlockSynchronouslyOnMainThread:", v13);

  }
}

void sub_185B0D474(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_185B0D908(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_185B0DCA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_185B0DDC8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_185B0DE9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_185B0E880(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185B0F754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185B1003C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_185B11320(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_185B1240C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_185B126F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185B133E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_185B13AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *FileProviderLibrary_0()
{
  void *v0;
  void *v2;
  void *v3;

  if (!qword_1ECD7D728)
    qword_1ECD7D728 = _sl_dlopen();
  v0 = (void *)qword_1ECD7D728;
  if (!qword_1ECD7D728)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *FileProviderLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("UIDocument.m"), 53, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

void sub_185B15C48(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_185B15C68(void *a1)
{
  objc_begin_catch(a1);
  JUMPOUT(0x185B15C14);
}

void sub_185B15E14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185B1607C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;

  _Block_object_dispose(&a26, 8);
  _Block_object_dispose((const void *)(v26 - 104), 8);
  _Unwind_Resume(a1);
}

void sub_185B1634C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_185B16590(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_185B16E40(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose(&STACK[0x208], 8);
  _Block_object_dispose(&STACK[0x228], 8);
  _Block_object_dispose(&STACK[0x248], 8);
  _Block_object_dispose(&STACK[0x268], 8);
  _Block_object_dispose(&STACK[0x288], 8);
  _Block_object_dispose((const void *)(v1 - 224), 8);
  _Block_object_dispose((const void *)(v1 - 192), 8);
  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_185B173EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_185B1757C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_185B17844(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_185B17DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185B17FBC(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

void sub_185B17FDC(void *a1)
{
  objc_begin_catch(a1);
  JUMPOUT(0x185B17F64);
}

void sub_185B17FEC(void *a1)
{
  objc_begin_catch(a1);
  JUMPOUT(0x185B17F6CLL);
}

void _UIShimSetIsContentManaged(void *a1, uint64_t a2)
{
  id v3;

  v3 = a1;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v3, "setIsContentManaged:", a2);
  else
    objc_msgSend(v3, "setSourceIsManaged:", a2);

}

void _UIShimSetUnderbarIsContentManaged(void *a1, uint64_t a2)
{
  id v3;

  v3 = a1;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    objc_msgSend(v3, "_setIsContentManaged:", a2);
  else
    objc_msgSend(v3, "_setSourceIsManaged:", a2);

}

void sub_185B19CA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;
  id *v24;
  uint64_t v25;

  objc_destroyWeak(v24);
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v25 - 104));
  _Unwind_Resume(a1);
}

BOOL _UIKeyboardArbiterCommunicationPermittedForUserInterfaceIdiom(uint64_t a1)
{
  return a1 != 4 && (a1 & 0xFFFFFFFFFFFFFFFELL) != 2;
}

void sub_185B1D4B4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_185B1D678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _UISearchSuggestionNumberOfSuggestionsFromGroups(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v2)
  {
    v3 = v2;
    v4 = 0;
    v5 = *(_QWORD *)v10;
    do
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v10 != v5)
          objc_enumerationMutation(v1);
        objc_msgSend(*(id *)(*((_QWORD *)&v9 + 1) + 8 * i), "suggestionItems");
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        v4 += objc_msgSend(v7, "count");

      }
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

uint64_t _isDragInteractionGestureRecognizer(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  if (qword_1ECD7D7A0 != -1)
    dispatch_once(&qword_1ECD7D7A0, &__block_literal_global_163);
  v2 = (id)_MergedGlobals_1018;
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v8;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v8 != v4)
          objc_enumerationMutation(v2);
        if ((objc_opt_isKindOfClass() & 1) != 0)
        {
          v3 = 1;
          goto LABEL_13;
        }
      }
      v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_13:

  return v3;
}

void ___dragInteractionGestureRecognizerClasses_block_invoke()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v0 = (void *)MEMORY[0x1E0C99D20];
  v1 = objc_opt_class();
  v2 = objc_opt_class();
  objc_msgSend(v0, "arrayWithObjects:", v1, v2, objc_opt_class(), 0);
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = (void *)_MergedGlobals_1018;
  _MergedGlobals_1018 = v3;

}

void sub_185B21890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185B21C90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_185B27AD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185B2C218(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_185B2C2DC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_185B2DC0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185B2DCF4(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  char *v8;
  uint64_t v9;
  id v12;
  uint64_t v13;
  void *v14;
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  if (a2 == 1)
  {
    v12 = objc_begin_catch(a1);
    objc_msgSend(v8, "floatAssistantViewLayout");
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = *(void **)&v8[v9];
    *(_QWORD *)&v8[v9] = v13;

    objc_end_catch();
    JUMPOUT(0x185B2DCDCLL);
  }
  _Unwind_Resume(a1);
}

void sub_185B2DE9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185B2DF84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185B2E06C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL UIShouldUseCustomBackground(void *a1)
{
  id v1;
  void *v2;
  _BOOL8 v3;
  void *v4;

  v1 = a1;
  objc_msgSend(v1, "_detachedBackgroundColor");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    v3 = 1;
  }
  else
  {
    objc_msgSend(v1, "_detachedBackgroundEffect");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = v4 != 0;

  }
  return v3;
}

void __getTUISystemInputAssistantLayoutFloatClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  TextInputUILibrary_1();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("TUISystemInputAssistantLayoutFloat");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getTUISystemInputAssistantLayoutFloatClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUISystemInputAssistantLayoutFloatClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UISystemInputAssistantViewController.m"), 101, CFSTR("Unable to find class %s"), "TUISystemInputAssistantLayoutFloat");

    __break(1u);
  }
}

void __getTUISystemInputAssistantLayoutCompactClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  TextInputUILibrary_1();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("TUISystemInputAssistantLayoutCompact");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getTUISystemInputAssistantLayoutCompactClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUISystemInputAssistantLayoutCompactClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UISystemInputAssistantViewController.m"), 102, CFSTR("Unable to find class %s"), "TUISystemInputAssistantLayoutCompact");

    __break(1u);
  }
}

void __getTUISystemInputAssistantLayoutSplitClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  TextInputUILibrary_1();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("TUISystemInputAssistantLayoutSplit");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getTUISystemInputAssistantLayoutSplitClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUISystemInputAssistantLayoutSplitClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UISystemInputAssistantViewController.m"), 100, CFSTR("Unable to find class %s"), "TUISystemInputAssistantLayoutSplit");

    __break(1u);
  }
}

void __getTUISystemInputAssistantStyleFloatClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  TextInputUILibrary_1();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("TUISystemInputAssistantStyleFloat");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getTUISystemInputAssistantStyleFloatClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUISystemInputAssistantStyleFloatClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UISystemInputAssistantViewController.m"), 105, CFSTR("Unable to find class %s"), "TUISystemInputAssistantStyleFloat");

    __break(1u);
  }
}

void __getTUISystemInputAssistantStyleCompactClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  TextInputUILibrary_1();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("TUISystemInputAssistantStyleCompact");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getTUISystemInputAssistantStyleCompactClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUISystemInputAssistantStyleCompactClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UISystemInputAssistantViewController.m"), 106, CFSTR("Unable to find class %s"), "TUISystemInputAssistantStyleCompact");

    __break(1u);
  }
}

void __getTUIEmojiSearchInputViewControllerClass_block_invoke_0(uint64_t a1)
{
  void *v2;
  void *v3;

  TextInputUILibrary_1();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("TUIEmojiSearchInputViewController");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getTUIEmojiSearchInputViewControllerClass_softClass_0 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUIEmojiSearchInputViewControllerClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UISystemInputAssistantViewController.m"), 103, CFSTR("Unable to find class %s"), "TUIEmojiSearchInputViewController");

    __break(1u);
  }
}

id _UIUpdateInputGroupDebugDescription(unsigned int *a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  uint64_t i;
  void *v6;
  void *v7;

  v2 = a2;
  if (!a2)
    v2 = mach_absolute_time();
  objc_msgSend(MEMORY[0x1E0CB37A0], "stringWithFormat:", CFSTR("Input Group, signals=0x%x (suspended=%u, signaled=0x%x), revision=%llu, sets:"), *a1, a1[2], a1[1], *((_QWORD *)a1 + 2));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  for (i = *((_QWORD *)a1 + 5); i; i = *(_QWORD *)(i + 80))
  {
    _UIUpdateInputSetDebugDescription(i, v2);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    _UIUpdateDebugDescriptionIndented(v6, CFSTR("\n  - "), CFSTR("    "));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "appendString:", v7);

  }
  return v4;
}

id _UIPreviewParametersDefaultBackgroundColor()
{
  void *v0;
  unint64_t v1;

  +[UIDevice currentDevice](UIDevice, "currentDevice");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "userInterfaceIdiom");

  if (v1 > 6 || ((1 << v1) & 0x64) == 0)
    +[UIColor systemBackgroundColor](UIColor, "systemBackgroundColor");
  else
    +[UIColor clearColor](UIColor, "clearColor");
  return (id)objc_claimAutoreleasedReturnValue();
}

id _UIPreviewParametersGenerateTextPlatter(void *a1, double a2, double a3, double a4, double a5, double a6)
{
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  unint64_t v22;
  void *v23;
  void *v24;
  int v25;
  int v26;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  CGFloat height;
  CGFloat width;
  CGFloat x;
  CGFloat y;
  uint64_t v36;
  uint64_t v37;
  uint64_t j;
  CGFloat v39;
  CGFloat v40;
  double MinX;
  double MinY;
  double MaxY;
  uint64_t v44;
  void *v45;
  uint64_t k;
  void *v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  void *v54;
  id v55;
  uint64_t v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t m;
  uint64_t v61;
  void *v62;
  double v63;
  double v64;
  double v65;
  double v66;
  void *v67;
  double v68;
  double v69;
  double v70;
  double v71;
  uint64_t v72;
  void *v73;
  double v74;
  double v75;
  double v76;
  double v77;
  void *v78;
  id v79;
  id v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  void *v87;
  double v88;
  double v89;
  double v90;
  double v91;
  void *v92;
  double v93;
  double v94;
  double v95;
  double v96;
  uint64_t v97;
  void *v98;
  double v99;
  double v100;
  double v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  unint64_t v107;
  unint64_t v108;
  BOOL v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  double v113;
  _QWORD *v114;
  uint64_t v115;
  double v116;
  double v117;
  double v118;
  double v119;
  double v120;
  double v121;
  long double v122;
  double v123;
  double v124;
  void *v125;
  void *v127;
  double v128;
  double v129;
  double v130;
  double v131;
  id obj;
  double v133;
  uint64_t v134;
  uint64_t v135;
  void *v136;
  double v137;
  double v138;
  double v139;
  double v140;
  uint64_t v141;
  double MaxX;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  uint64_t v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  uint64_t v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  _BYTE v158[128];
  _BYTE v159[128];
  __int128 v160;
  __int128 v161;
  uint64_t v162;
  CGRect v163;
  CGRect v164;
  CGRect v165;
  CGRect v166;
  CGRect v167;
  CGRect v168;
  CGRect v169;

  v162 = *MEMORY[0x1E0C80C00];
  v10 = a1;
  if (objc_msgSend(v10, "count"))
  {
    v153 = 0;
    if (CGSNewEmptyRegion())
    {
      _UIPreviewParametersGenerateTextPlatterFallback(v10, a2, a3, a4, a5, a6);
      v11 = (id)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v151 = 0u;
      v152 = 0u;
      v149 = 0u;
      v150 = 0u;
      v12 = v10;
      v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v149, v159, 16);
      if (v13)
      {
        v14 = v13;
        v15 = *(_QWORD *)v150;
        while (2)
        {
          for (i = 0; i != v14; ++i)
          {
            if (*(_QWORD *)v150 != v15)
              objc_enumerationMutation(v12);
            v17 = *(void **)(*((_QWORD *)&v149 + 1) + 8 * i);
            v160 = 0u;
            v161 = 0u;
            objc_msgSend(v17, "CGRectValue");
            *(double *)&v160 = a3 + v18;
            *((double *)&v160 + 1) = a2 + v19;
            *(double *)&v161 = v20 - (a3 + a5);
            *((double *)&v161 + 1) = v21 - (a2 + a4);
            *(_QWORD *)&v154 = 0;
            v148 = 0;
            if (CGSNewRegionWithRect() || CGSUnionRegion())
            {
              CGSReleaseRegion();
              _UIPreviewParametersGenerateTextPlatterFallback(v12, a2, a3, a4, a5, a6);
              v11 = (id)objc_claimAutoreleasedReturnValue();

              goto LABEL_95;
            }
            CGSReleaseRegion();
            CGSReleaseRegion();
            v153 = v148;
          }
          v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v149, v159, 16);
          if (v14)
            continue;
          break;
        }
      }
      v127 = v12;

      v22 = 0x1E0C99000uLL;
      objc_msgSend(MEMORY[0x1E0C99DE8], "array");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99DE8], "array");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      CGSRegionPathEnumerator();
      while (1)
      {
        v160 = 0uLL;
        v25 = CGSNextPoint();
        if (v25 <= 0)
        {
          v26 = v25;
          if (objc_msgSend(v24, "count"))
          {
            objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithArray:", v24, v127);
            v27 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v23, "addObject:", v27);

            objc_msgSend(v24, "removeAllObjects");
          }
          if (!v26)
            break;
        }
        objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", v160, v127);
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v24, "addObject:", v28);

      }
      v128 = a2;
      v129 = a3;
      v130 = a4;
      v131 = a5;
      CGSReleaseRegionEnumerator();

      CGSReleaseRegion();
      +[UIBezierPath bezierPath](UIBezierPath, "bezierPath");
      v136 = (void *)objc_claimAutoreleasedReturnValue();
      v144 = 0u;
      v145 = 0u;
      v146 = 0u;
      v147 = 0u;
      obj = v23;
      v135 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v144, v158, 16);
      if (v135)
      {
        v134 = *(_QWORD *)v145;
        v139 = *(double *)(MEMORY[0x1E0C9D628] + 8);
        v140 = *MEMORY[0x1E0C9D628];
        v137 = *(double *)(MEMORY[0x1E0C9D628] + 24);
        v138 = *(double *)(MEMORY[0x1E0C9D628] + 16);
        v133 = a6 * 0.75;
        while (2)
        {
          v29 = 0;
          do
          {
            if (*(_QWORD *)v145 != v134)
              objc_enumerationMutation(obj);
            v141 = v29;
            v30 = *(id *)(*((_QWORD *)&v144 + 1) + 8 * v29);
            v154 = 0u;
            v155 = 0u;
            v156 = 0u;
            v157 = 0u;
            v31 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v154, &v160, 16);
            height = v137;
            width = v138;
            y = v139;
            x = v140;
            if (v31)
            {
              v36 = v31;
              v37 = *(_QWORD *)v155;
              height = v137;
              width = v138;
              y = v139;
              x = v140;
              do
              {
                for (j = 0; j != v36; ++j)
                {
                  if (*(_QWORD *)v155 != v37)
                    objc_enumerationMutation(v30);
                  objc_msgSend(*(id *)(*((_QWORD *)&v154 + 1) + 8 * j), "CGPointValue", v127, *(_QWORD *)&v128, *(_QWORD *)&v129, *(_QWORD *)&v130, *(_QWORD *)&v131);
                  v169.origin.x = v39;
                  v169.origin.y = v40;
                  v169.size.width = 0.0;
                  v169.size.height = 0.0;
                  v163.origin.x = x;
                  v163.origin.y = y;
                  v163.size.width = width;
                  v163.size.height = height;
                  v164 = CGRectUnion(v163, v169);
                  x = v164.origin.x;
                  y = v164.origin.y;
                  width = v164.size.width;
                  height = v164.size.height;
                }
                v36 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v154, &v160, 16);
              }
              while (v36);
            }
            v165.origin.x = x;
            v165.origin.y = y;
            v165.size.width = width;
            v165.size.height = height;
            MinX = CGRectGetMinX(v165);
            v166.origin.x = x;
            v166.origin.y = y;
            v166.size.width = width;
            v166.size.height = height;
            MaxX = CGRectGetMaxX(v166);
            v167.origin.x = x;
            v167.origin.y = y;
            v167.size.width = width;
            v167.size.height = height;
            MinY = CGRectGetMinY(v167);
            v168.origin.x = x;
            v168.origin.y = y;
            v168.size.width = width;
            v168.size.height = height;
            MaxY = CGRectGetMaxY(v168);
            v44 = objc_msgSend(v30, "count");
            objc_msgSend(*(id *)(v22 + 3560), "arrayWithCapacity:", v44);
            v45 = (void *)objc_claimAutoreleasedReturnValue();
            if (v44)
            {
              for (k = 0; k != v44; ++k)
              {
                objc_msgSend(v30, "objectAtIndexedSubscript:", k, v127);
                v47 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v47, "CGPointValue");
                v49 = v48;
                v51 = v50;

                v52 = MinX;
                if (v49 > v133 + MinX)
                {
                  v52 = v49;
                  if (v49 >= MaxX - v133)
                    v52 = MaxX;
                }
                if (v51 >= MaxY - v133)
                  v53 = MaxY;
                else
                  v53 = v51;
                if (v51 <= v133 + MinY)
                  v53 = MinY;
                objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", v52, v53);
                v54 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v45, "addObject:", v54);

              }
            }

            v55 = v45;
            v56 = objc_msgSend(v55, "count");
            objc_msgSend(*(id *)(v22 + 3560), "array");
            v57 = (void *)objc_claimAutoreleasedReturnValue();
            v58 = v136;
            if (v56)
            {
              v59 = 0;
              for (m = 0; m != v56; ++m)
              {
                if (v59)
                  v61 = m - 1;
                else
                  v61 = v56 - 1;
                objc_msgSend(v55, "objectAtIndexedSubscript:", v61, v127);
                v62 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v62, "CGPointValue");
                v64 = v63;
                v66 = v65;

                objc_msgSend(v55, "objectAtIndexedSubscript:", m);
                v67 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v67, "CGPointValue");
                v69 = v68;
                v71 = v70;

                if (m == v56 - 1)
                  v72 = 0;
                else
                  v72 = m + 1;
                objc_msgSend(v55, "objectAtIndexedSubscript:", v72);
                v73 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v73, "CGPointValue");
                v75 = v74;
                v77 = v76;

                if (vabdd_f64((v69 - v64) * (v77 - v66), (v71 - v66) * (v75 - v64)) >= 0.001)
                {
                  objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", v69, v71);
                  v78 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v57, "addObject:", v78);

                }
                --v59;
              }
            }

            v79 = v136;
            v80 = v57;
            v81 = objc_msgSend(v80, "count");
            if (v81 <= 3)
            {

              _UIPreviewParametersGenerateTextPlatterFallback(v127, v128, v129, v130, v131, a6);
              v11 = (id)objc_claimAutoreleasedReturnValue();

              v125 = obj;
              goto LABEL_94;
            }
            v82 = v81;
            v83 = 0;
            v84 = 0;
            v85 = v81 - 1;
            do
            {
              if (v83)
                v86 = v84 - 1;
              else
                v86 = v85;
              objc_msgSend(v80, "objectAtIndexedSubscript:", v86, v127);
              v87 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v87, "CGPointValue");
              v89 = v88;
              v91 = v90;

              objc_msgSend(v80, "objectAtIndexedSubscript:", v84);
              v92 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v92, "CGPointValue");
              v94 = v93;
              v96 = v95;

              if (v84 == v85)
                v97 = 0;
              else
                v97 = v84 + 1;
              objc_msgSend(v80, "objectAtIndexedSubscript:", v97);
              v98 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v98, "CGPointValue");
              v100 = v99;
              v102 = v101;

              v103 = v94 - v89;
              v104 = (v94 - v89) * (v102 - v91);
              v105 = v96 - v91;
              v106 = v104 - v105 * (v100 - v89);
              v107 = llround(atan2(v105, v94 - v89) / 1.57079633) + 4;
              v108 = v107 & 3;
              v110 = -(uint64_t)v107;
              v109 = v110 < 0;
              v111 = v110 & 3;
              if (v109)
                v112 = v108;
              else
                v112 = -v111;
              v113 = a6;
              if (v106 >= 0.0)
              {
                v114 = &unk_18667AFA8;
              }
              else
              {
                v113 = a6 * 0.5;
                v114 = &unk_18667AFC8;
              }
              v115 = v114[v112];
              v116 = v100 - v94;
              v117 = v102 - v96;
              v118 = -v103;
              if (v103 >= 0.0)
                v118 = v94 - v89;
              if (v116 < 0.0)
                v116 = -v116;
              if (v118 >= v116)
                v116 = v118;
              v119 = -v105;
              if (v105 >= 0.0)
                v119 = v105;
              if (v117 < 0.0)
                v117 = -v117;
              if (v119 >= v117)
                v117 = v119;
              if (v116 >= v117)
                v116 = v117;
              v120 = v116 * 0.5;
              if (v113 >= v120)
                v121 = v120;
              else
                v121 = v113;
              v122 = v121 * 1.528665 / hypot(v103, v105);
              v123 = v94 - v103 * v122;
              v124 = v96 - v105 * v122;
              if (v83)
                objc_msgSend(v79, "addLineToPoint:", v123, v124);
              else
                objc_msgSend(v79, "moveToPoint:", v123, v124);
              ++v84;
              objc_msgSend(v79, "_addRoundedCornerWithTrueCorner:radius:corner:clockwise:", v115, v106 < 0.0, v94, v96, v121, v121);
              --v83;
            }
            while (v84 != v82);
            objc_msgSend(v79, "closePath");

            v29 = v141 + 1;
            v22 = 0x1E0C99000;
          }
          while (v141 + 1 != v135);
          v135 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v144, v158, 16);
          if (v135)
            continue;
          break;
        }
      }
      v125 = obj;

      v58 = v136;
      v11 = v136;
LABEL_94:

    }
  }
  else
  {
    v11 = 0;
  }
LABEL_95:

  return v11;
}

id _UIPreviewParametersGenerateTextPlatterFallback(void *a1, double a2, double a3, double a4, double a5, double a6)
{
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  void *v24;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v11 = a1;
  +[UIBezierPath bezierPath](UIBezierPath, "bezierPath");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v13 = v11;
  v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
  if (v14)
  {
    v15 = v14;
    v16 = *(_QWORD *)v27;
    v17 = a3 + a5;
    v18 = a2 + a4;
    do
    {
      v19 = 0;
      do
      {
        if (*(_QWORD *)v27 != v16)
          objc_enumerationMutation(v13);
        objc_msgSend(*(id *)(*((_QWORD *)&v26 + 1) + 8 * v19), "CGRectValue", (_QWORD)v26);
        +[UIBezierPath bezierPathWithRoundedRect:cornerRadius:](UIBezierPath, "bezierPathWithRoundedRect:cornerRadius:", a3 + v20, a2 + v21, v22 - v17, v23 - v18, a6);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "appendPath:", v24);

        ++v19;
      }
      while (v15 != v19);
      v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
    }
    while (v15);
  }

  return v12;
}

void _markItemsForUpdate(void *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;

  v5 = a1;
  v3 = a2;
  if (objc_msgSend(v5, "count"))
  {
    if (qword_1ECD7D7D8 != -1)
      dispatch_once(&qword_1ECD7D7D8, &__block_literal_global_252_1);
    if ((_MergedGlobals_1020 & 1) == 0)
    {
      _MergedGlobals_1020 = 1;
      objc_msgSend((id)UIApp, "_performBlockAfterCATransactionCommits:", &__block_literal_global_253_0);
    }
    objc_msgSend((id)qword_1ECD7D7D0, "objectForKey:", v3);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v4)
    {
      objc_msgSend(MEMORY[0x1E0C99E20], "setWithCapacity:", objc_msgSend(v5, "count"));
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend((id)qword_1ECD7D7D0, "setObject:forKey:", v4, v3);
    }
    objc_msgSend(v4, "addObjectsFromArray:", v5);

  }
}

uint64_t _hasItemsConformingToTypeIdentifiers(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t j;
  uint64_t v16;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];
  _BYTE v27[128];
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v5 = v3;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v22, v27, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v23;
    do
    {
      for (i = 0; i != v7; ++i)
      {
        if (*(_QWORD *)v23 != v8)
          objc_enumerationMutation(v5);
        objc_msgSend(*(id *)(*((_QWORD *)&v22 + 1) + 8 * i), "itemProvider");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v18 = 0u;
        v19 = 0u;
        v20 = 0u;
        v21 = 0u;
        v11 = v4;
        v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v18, v26, 16);
        if (v12)
        {
          v13 = v12;
          v14 = *(_QWORD *)v19;
          while (2)
          {
            for (j = 0; j != v13; ++j)
            {
              if (*(_QWORD *)v19 != v14)
                objc_enumerationMutation(v11);
              if ((objc_msgSend(v10, "hasRepresentationConformingToTypeIdentifier:fileOptions:", *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * j), 0) & 1) != 0)
              {

                v16 = 1;
                goto LABEL_19;
              }
            }
            v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v18, v26, 16);
            if (v13)
              continue;
            break;
          }
        }

      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v22, v27, 16);
      v16 = 0;
    }
    while (v7);
  }
  else
  {
    v16 = 0;
  }
LABEL_19:

  return v16;
}

uint64_t _canLoadObjectsOfClass(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v3 = a1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v13;
    while (2)
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v13 != v6)
          objc_enumerationMutation(v3);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v7), "itemProvider", (_QWORD)v12);
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        v9 = objc_msgSend(v8, "canLoadObjectOfClass:", a2);

        if ((v9 & 1) != 0)
        {
          v10 = 1;
          goto LABEL_11;
        }
        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      if (v5)
        continue;
      break;
    }
  }
  v10 = 0;
LABEL_11:

  return v10;
}

void sub_185B34FDC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id arrayOfItemsFromDictionaryOfItemsByIndex(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(v1, "count"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "allKeys");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "sortedArrayUsingSelector:", sel_compare_);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v5 = v4;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v13;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v13 != v8)
          objc_enumerationMutation(v5);
        objc_msgSend(v1, "objectForKey:", *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v9), (_QWORD)v12);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v2, "addObject:", v10);

        ++v9;
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v7);
  }

  return v2;
}

void ___markItemsForUpdate_block_invoke()
{
  uint64_t v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3748], "strongToStrongObjectsMapTable");
  v0 = objc_claimAutoreleasedReturnValue();
  v1 = (void *)qword_1ECD7D7D0;
  qword_1ECD7D7D0 = v0;

}

void ___enqueueItemsUpdate_block_invoke()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t j;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _QWORD v23[4];
  id v24;
  _BYTE v25[128];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  objc_msgSend((id)qword_1ECD7D7D0, "keyEnumerator");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v19, v25, 16);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)v20;
    do
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v20 != v4)
          objc_enumerationMutation(v1);
        v6 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * i);
        if (objc_msgSend(v6, "_allowsItemsToUpdate"))
        {
          objc_msgSend((id)qword_1ECD7D7D0, "objectForKey:", v6);
          v7 = (id)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v6, "_internalSession");
          v8 = (void *)objc_claimAutoreleasedReturnValue();
          v23[0] = MEMORY[0x1E0C809B0];
          v23[1] = 3221225472;
          v23[2] = ___updateItems_block_invoke;
          v23[3] = &unk_1E16C43E0;
          v24 = v7;
          v9 = v7;
          objc_msgSend(v8, "enumerateItemsUsingBlock:", v23);

          objc_msgSend(v0, "addObject:", v6);
        }
      }
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v19, v25, 16);
    }
    while (v3);
  }

  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  v10 = v0;
  v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v15, v23, 16);
  if (v11)
  {
    v12 = v11;
    v13 = *(_QWORD *)v16;
    do
    {
      for (j = 0; j != v12; ++j)
      {
        if (*(_QWORD *)v16 != v13)
          objc_enumerationMutation(v10);
        objc_msgSend((id)qword_1ECD7D7D0, "removeObjectForKey:", *(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * j), (_QWORD)v15);
      }
      v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v15, v23, 16);
    }
    while (v12);
  }

  _MergedGlobals_1020 = 0;
}

void ___updateItems_block_invoke(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if (objc_msgSend(*(id *)(a1 + 32), "containsObject:"))
    objc_msgSend(v3, "_updatePreferredPreview");

}

long double DUIPreviewConvertSizeFromViewToView(void *a1, void *a2, long double a3, double a4)
{
  double v7;
  double v8;
  id v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;

  if (a1)
  {
    v7 = *MEMORY[0x1E0C9D538];
    v8 = *(double *)(MEMORY[0x1E0C9D538] + 8);
    v9 = a2;
    v10 = a1;
    objc_msgSend(v10, "convertPoint:toView:", v9, v7, v8);
    v12 = v11;
    v14 = v13;
    objc_msgSend(v10, "convertPoint:toView:", v9, (double)a3, 0.0);
    v16 = v15;
    v18 = v17;
    objc_msgSend(v10, "convertPoint:toView:", v9, 0.0, a4);
    v20 = v19;
    v22 = v21;

    a3 = hypot(v16 - v12, v18 - v14);
    hypot(v20 - v12, v22 - v14);
  }
  return a3;
}

double DUIPreviewGetRotationAngleFromViewToView(void *a1, void *a2, int a3)
{
  unint64_t v5;
  unint64_t v6;
  double v7;
  void *v8;
  BOOL v9;
  int v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  void *v25;
  int v26;
  void *v27;
  int v28;
  double v29;

  v5 = a1;
  v6 = a2;
  v7 = 0.0;
  if (v5 | v6)
  {
    v8 = (void *)v6;
    if (v5)
      v9 = 1;
    else
      v9 = v6 == 0;
    v10 = !v9;
    if (!v5 || !v6)
    {
      if (v10)
        v5 = v6;
      objc_msgSend((id)v5, "_window");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
    }
    objc_msgSend((id)v5, "layer");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = v11;
    if (a3)
    {
      objc_msgSend(v11, "presentationLayer");
      v13 = (void *)objc_claimAutoreleasedReturnValue();

      if (v13)
      {
        objc_msgSend(v12, "presentationLayer");
        v14 = objc_claimAutoreleasedReturnValue();

        v12 = (void *)v14;
      }
      objc_msgSend(v8, "layer");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "presentationLayer");
      v16 = (void *)objc_claimAutoreleasedReturnValue();

      if (v16)
      {
        objc_msgSend(v15, "presentationLayer");
        v17 = objc_claimAutoreleasedReturnValue();

        v15 = (void *)v17;
      }
    }
    else
    {
      objc_msgSend(v8, "layer");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
    }
    objc_msgSend(v12, "convertPoint:toLayer:", v15, *MEMORY[0x1E0C9D538], *(double *)(MEMORY[0x1E0C9D538] + 8));
    v19 = v18;
    v21 = v20;
    objc_msgSend(v12, "convertPoint:toLayer:", v15, 1.0, 0.0);
    v24 = atan2(v23 - v21, v22 - v19);
    objc_msgSend((id)v5, "layer");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v26 = objc_msgSend(v25, "flipsHorizontalAxis");

    if (v26)
      v24 = v24 + 3.14159265;
    objc_msgSend(v8, "layer");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    v28 = objc_msgSend(v27, "flipsHorizontalAxis");

    v29 = v24 + 3.14159265;
    if (!v28)
      v29 = v24;
    if (v10)
      v7 = -v29;
    else
      v7 = v29;

  }
  return v7;
}

id _UIDragAndDropGetPlatformMetrics(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  if (qword_1ECD7D7E8 != -1)
    dispatch_once(&qword_1ECD7D7E8, &__block_literal_global_168);
  v2 = (void *)_MergedGlobals_1021;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v4)
  {
    if (!_MergedGlobals_1021)
    {
      objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
      v5 = objc_claimAutoreleasedReturnValue();
      v6 = (void *)_MergedGlobals_1021;
      _MergedGlobals_1021 = v5;

    }
    +[_UIVisualStyleRegistry registryForIdiom:](_UIVisualStyleRegistry, "registryForIdiom:", a1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "visualStyleClassForStylableClass:", objc_opt_class());

    v4 = (void *)objc_opt_new();
    v8 = (void *)_MergedGlobals_1021;
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "setObject:forKey:", v4, v9);

  }
  return v4;
}

id _DUINewServerSourceInterface()
{
  void *v0;
  void *v1;
  void *v2;

  objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EE0CE2E8);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  _DUINewClientSessionSourceInterface();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setInterface:forSelector:argumentIndex:ofReply:", v1, sel_beginDragWithClientSession_configuration_reply_, 0, 0);

  objc_msgSend(v0, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_beginDragWithClientSession_configuration_reply_, 1, 0);
  _DUINewServerSessionSourceInterface();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setInterface:forSelector:argumentIndex:ofReply:", v2, sel_beginDragWithClientSession_configuration_reply_, 1, 1);

  return v0;
}

id _DUINewClientSessionSourceInterface()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;

  objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EDF0CA20);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  setDUIClientSessionCommonProtocolMethods(v0);
  v1 = (void *)MEMORY[0x1E0C99E60];
  v2 = objc_opt_class();
  objc_msgSend(v1, "setWithObjects:", v2, objc_opt_class(), 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v3, sel_checkCanHandOffCancelledItems_withReply_, 0, 0);

  v4 = (void *)MEMORY[0x1E0C99E60];
  v5 = objc_opt_class();
  objc_msgSend(v4, "setWithObjects:", v5, objc_opt_class(), 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v6, sel_canHandOffCancelledItems_withReply_, 0, 0);

  objc_msgSend(v0, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_canHandOffCancelledItems_withReply_, 1, 1);
  v7 = (void *)MEMORY[0x1E0C99E60];
  v8 = objc_opt_class();
  objc_msgSend(v7, "setWithObjects:", v8, objc_opt_class(), 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v9, sel_handOffCancelledItems_withFence_, 0, 0);

  return v0;
}

id _DUINewServerSessionSourceInterface()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EE0CE3A8);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = (void *)MEMORY[0x1E0C99E60];
  v2 = objc_opt_class();
  objc_msgSend(v1, "setWithObjects:", v2, objc_opt_class(), 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v3, sel_dirtySourceItems_, 0, 0);

  return v0;
}

uint64_t _DUINewClientSourceInterface()
{
  return objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EDF0C858);
}

id _DUINewServerDestinationInterface()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EE0CE348);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  _DUINewClientSessionDestinationInterface();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setInterface:forSelector:argumentIndex:ofReply:", v1, sel_sawFirstDragEventWithSessionID_systemPolicy_destination_reply_, 2, 0);

  _DUINewServerSessionDestinationInterface();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setInterface:forSelector:argumentIndex:ofReply:", v2, sel_sawFirstDragEventWithSessionID_systemPolicy_destination_reply_, 0, 1);

  objc_msgSend(MEMORY[0x1E0D6C0C0], "allowedClassesForSecureCoding");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v3, sel_sawFirstDragEventWithSessionID_systemPolicy_destination_reply_, 1, 1);

  _DUINewClientSessionDestinationInterface();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setInterface:forSelector:argumentIndex:ofReply:", v4, sel_sawFirstDragEventWithSessionID_systemPolicy_destination_completion_, 2, 0);

  _DUINewServerSessionDestinationInterface();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setInterface:forSelector:argumentIndex:ofReply:", v5, sel_sawFirstDragEventWithSessionID_systemPolicy_destination_completion_, 0, 1);

  objc_msgSend(MEMORY[0x1E0D6C0C0], "allowedClassesForSecureCoding");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v6, sel_sawFirstDragEventWithSessionID_systemPolicy_destination_completion_, 1, 1);

  return v0;
}

id _DUINewClientSessionDestinationInterface()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;

  objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EDF0CF30);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  setDUIClientSessionCommonProtocolMethods(v0);
  objc_msgSend(MEMORY[0x1E0D6C0C0], "allowedClassesForSecureCoding");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v1, sel_performDropWithItemCollection_dataProviderEndpoint_visibleDroppedItems_reply_, 0, 0);

  objc_msgSend(v0, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_performDropWithItemCollection_dataProviderEndpoint_visibleDroppedItems_reply_, 1, 0);
  v2 = (void *)MEMORY[0x1E0C99E60];
  v3 = objc_opt_class();
  objc_msgSend(v2, "setWithObjects:", v3, objc_opt_class(), 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v4, sel_performDropWithItemCollection_dataProviderEndpoint_visibleDroppedItems_reply_, 2, 0);

  v5 = (void *)MEMORY[0x1E0C99E60];
  v6 = objc_opt_class();
  objc_msgSend(v5, "setWithObjects:", v6, objc_opt_class(), 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v7, sel_handOffDroppedItems_withFence_, 0, 0);

  objc_msgSend(MEMORY[0x1E0D6C0C0], "allowedClassesForSecureCoding");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v8, sel_performDropWithItemCollection_dataProviderEndpoint_visibleDroppedItems_completion_, 0, 0);

  objc_msgSend(v0, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_performDropWithItemCollection_dataProviderEndpoint_visibleDroppedItems_completion_, 1, 0);
  v9 = (void *)MEMORY[0x1E0C99E60];
  v10 = objc_opt_class();
  objc_msgSend(v9, "setWithObjects:", v10, objc_opt_class(), 0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v11, sel_performDropWithItemCollection_dataProviderEndpoint_visibleDroppedItems_completion_, 2, 0);

  objc_msgSend(v0, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_performDropWithItemCollection_dataProviderEndpoint_visibleDroppedItems_completion_, 0, 1);
  return v0;
}

id _DUINewServerSessionDestinationInterface()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;

  objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EE0CE408);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = (void *)MEMORY[0x1E0C99E60];
  v2 = objc_opt_class();
  objc_msgSend(v1, "setWithObjects:", v2, objc_opt_class(), 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v3, sel_dirtyDestinationItems_, 0, 0);

  v4 = (void *)MEMORY[0x1E0C99E60];
  v5 = objc_opt_class();
  objc_msgSend(v4, "setWithObjects:", v5, objc_opt_class(), 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClasses:forSelector:argumentIndex:ofReply:", v6, sel_requestVisibleItemsWithReply_, 0, 1);

  objc_msgSend(v0, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_requestDropWithOperation_layerContext_, 1, 0);
  return v0;
}

uint64_t _DUINewClientDestinationInterface()
{
  return objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EDF0CDE0);
}

void setDUIClientSessionCommonProtocolMethods(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v1 = (void *)MEMORY[0x1E0C99E60];
  v6 = a1;
  v2 = objc_opt_class();
  v3 = objc_opt_class();
  v4 = objc_opt_class();
  objc_msgSend(v1, "setWithObjects:", v2, v3, v4, objc_opt_class(), 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setClasses:forSelector:argumentIndex:ofReply:", v5, sel_requestDragPreviewsForIndexSet_reply_, 0, 1);

  objc_msgSend(v6, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_updatedPresentation_, 0, 0);
}

uint64_t _DUINewServerSessionAccessibilityInterface()
{
  return objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EE0CE468);
}

uint64_t _DUINewClientSessionAccessibilityInterface()
{
  return objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EE0CE4C8);
}

id _DUINewServerSessionSystemAppInterface()
{
  void *v0;

  objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EE0CE528);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_loadURLForItemAtIndex_reply_, 0, 1);
  objc_msgSend(v0, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_loadUserActivityDataForItemAtIndex_reply_, 0, 1);
  return v0;
}

id _DUINewClientSystemAppInterface()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EE047C38);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  _DUINewServerSessionSystemAppInterface();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setInterface:forSelector:argumentIndex:ofReply:", v1, sel_dragDidBeginWithSystemSession_info_reply_, 0, 0);

  return v0;
}

id _DUINewDragContinuationInterface()
{
  void *v0;

  objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EE0CE588);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_requestItemCollectionWithReply_, 0, 1);
  objc_msgSend(v0, "setClass:forSelector:argumentIndex:ofReply:", objc_opt_class(), sel_requestItemCollectionWithReply_, 1, 1);
  return v0;
}

id _DUIDragSessionLifecycleListeningInterface()
{
  void *v0;

  objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EDFB8A20);
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setInterface:forSelector:argumentIndex:ofReply:", objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EE0CE5E8), sel_dragDidBeginWithSession_identifier_reply_, 0, 0);
  objc_msgSend(v0, "setInterface:forSelector:argumentIndex:ofReply:", objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EE0CE5E8), sel_dragDidEndWithSession_, 0, 0);
  objc_msgSend(v0, "setInterface:forSelector:argumentIndex:ofReply:", objc_msgSend(MEMORY[0x1E0CB3B50], "interfaceWithProtocol:", &unk_1EE0CE5E8), sel_dragDidEndWithSession_identifier_, 0, 0);
  return v0;
}

id _UIImageLoadingLog()
{
  if (qword_1ECD79DA8 != -1)
    dispatch_once(&qword_1ECD79DA8, &__block_literal_global_169);
  return (id)_MergedGlobals_1_6;
}

void _drainTrampolines(void *a1)
{
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  os_unfair_lock_assert_owner((const os_unfair_lock *)v1 + 8);
  v2 = *((id *)v1 + 5);
  v3 = v2;
  if (v2)
  {
    v11 = 0u;
    v12 = 0u;
    v9 = 0u;
    v10 = 0u;
    v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)v10;
      do
      {
        v7 = 0;
        do
        {
          if (*(_QWORD *)v10 != v6)
            objc_enumerationMutation(v3);
          (*(void (**)(void))(*(_QWORD *)(*((_QWORD *)&v9 + 1) + 8 * v7++) + 16))();
        }
        while (v5 != v7);
        v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
      }
      while (v5);
    }
  }
  v8 = (void *)*((_QWORD *)v1 + 5);
  *((_QWORD *)v1 + 5) = 0;

}

void ___addTrampoline_block_invoke(uint64_t a1)
{
  dispatch_async(*(dispatch_queue_t *)(a1 + 32), *(dispatch_block_t *)(a1 + 40));
}

uint64_t _UIInitializeDraggingSystem()
{
  return +[_UIDragManager initializeDraggingSystem](_UIDragManager, "initializeDraggingSystem");
}

__CFString *stringFromDraggingSessionSourceState(unint64_t a1)
{
  if (a1 < 7)
    return off_1E16C4770[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown state %ld"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

id enumerateDraggingItems(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  _QWORD v11[4];
  id v12;
  id v13;

  v3 = a2;
  v4 = a1;
  v5 = (void *)objc_opt_new();
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __enumerateDraggingItems_block_invoke;
  v11[3] = &unk_1E16C4728;
  v13 = v3;
  v6 = v5;
  v12 = v6;
  v7 = v3;
  objc_msgSend(v4, "enumerateObjectsWithOptions:usingBlock:", 2, v11);

  v8 = v12;
  v9 = v6;

  return v9;
}

void sub_185B401D0(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  id *v4;
  id *v5;
  id *v6;
  uint64_t v7;

  objc_destroyWeak(v6);
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v7 - 104));
  _Unwind_Resume(a1);
}

void sub_185B40234()
{
  JUMPOUT(0x185B4021CLL);
}

id dragPreviewsOfItems(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  _QWORD v16[4];
  id v17;
  id v18;
  id v19;

  v5 = a1;
  v6 = a3;
  v7 = (void *)MEMORY[0x1E0C99DE8];
  v8 = a2;
  objc_msgSend(v7, "arrayWithCapacity:", objc_msgSend(v8, "count"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __dragPreviewsOfItems_block_invoke;
  v16[3] = &unk_1E16C4750;
  v17 = v5;
  v18 = v6;
  v10 = v9;
  v19 = v10;
  v11 = v6;
  v12 = v5;
  objc_msgSend(v8, "enumerateIndexesUsingBlock:", v16);

  v13 = v19;
  v14 = v10;

  return v14;
}

void sub_185B40988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

double visibleDroppedItemSize(void *a1)
{
  id v1;
  void *v2;
  double v3;
  double v4;

  v1 = a1;
  objc_msgSend(v1, "preview");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {
    if (objc_msgSend(v1, "constrainSize"))
      objc_msgSend(v2, "scaledSize");
    else
      objc_msgSend(v2, "unscaledSize");
    v4 = v3;
  }
  else
  {
    v4 = *MEMORY[0x1E0C9D820];
  }

  return v4;
}

void sub_185B420B8(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  id *v4;
  id *v5;
  id *v6;
  uint64_t v7;

  objc_destroyWeak(v6);
  objc_destroyWeak(v5);
  objc_destroyWeak(v4);
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v7 - 104));
  _Unwind_Resume(a1);
}

void sub_185B42118()
{
  JUMPOUT(0x185B420F8);
}

void sub_185B42120()
{
  JUMPOUT(0x185B42100);
}

void sub_185B439DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _UIDraggingConnectionXPCQueue()
{
  if (qword_1ECD77510 != -1)
    dispatch_once(&qword_1ECD77510, &__block_literal_global_170);
  return (id)qword_1ECD77508;
}

void sub_185B447CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185B463CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185B46508(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_185B46688(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_185B46874(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_185B46B9C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

__CFString *stringFromDraggingSessionDestinationState(unint64_t a1)
{
  if (a1 < 6)
    return off_1E16C47A8[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown state %ld"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void __enumerateDraggingItems_block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;

  v5 = a2;
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  if (objc_msgSend(v5, "_isDirty"))
  {
    v6 = (void *)objc_opt_new();
    objc_msgSend(v6, "setIndex:", a3);
    objc_msgSend(*(id *)(a1 + 32), "addObject:", v6);
    objc_msgSend(v5, "_setDirty:", 0);

  }
}

void __dragPreviewsOfItems_block_invoke(uint64_t a1, unint64_t a2)
{
  void *v4;
  _DUIPreviewAndImageComponent *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  _DUIImageComponent *v11;
  void *v12;
  void *v13;
  uint64_t SlotId;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;

  if (objc_msgSend(*(id *)(a1 + 32), "count") > a2)
  {
    objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", a2);
    v20 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "_currentPreviewProvider");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_alloc_init(_DUIPreviewAndImageComponent);
    objc_msgSend(v4, "_duiPreview");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[_DUIPreviewAndImageComponent setPreview:](v5, "setPreview:", v6);

    objc_msgSend(v4, "imageComponent");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = *(void **)(a1 + 40);
    v9 = v7;
    v10 = v8;
    if (v9)
    {
      v11 = objc_alloc_init(_DUIImageComponent);
      objc_msgSend(v9, "frame");
      -[_DUIImageComponent setFrame:](v11, "setFrame:");
      -[_DUIImageComponent setIgnoresAccessibilityFilters:](v11, "setIgnoresAccessibilityFilters:", objc_msgSend(v9, "ignoresAccessibilityFilters"));
      -[_DUIImageComponent setHidesImage:](v11, "setHidesImage:", objc_msgSend(v9, "hidesImage"));
      objc_msgSend(v9, "view");
      v12 = (void *)objc_claimAutoreleasedReturnValue();

      if (v12)
      {
        objc_msgSend(v9, "view");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        SlotId = _UISnapshotViewGetSlotId(v13);

        if ((_DWORD)SlotId)
        {
          -[_DUIImageComponent setSlotID:](v11, "setSlotID:", SlotId);
        }
        else
        {
          objc_msgSend(v9, "view");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v17, "layer");
          v18 = (void *)objc_claimAutoreleasedReturnValue();

          -[_DUIImageComponent setRenderID:](v11, "setRenderID:", CALayerGetRenderId());
          objc_msgSend(v18, "context");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          -[_DUIImageComponent setContextID:](v11, "setContextID:", objc_msgSend(v19, "contextId"));

        }
      }
      else
      {
        objc_msgSend(v9, "image");
        v15 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
        v16 = objc_msgSend(v15, "CGImage");
        if (v16)
          -[_DUIImageComponent setSlotID:](v11, "setSlotID:", objc_msgSend(v10, "uploadImage:", v16));

      }
    }
    else
    {
      v11 = 0;
    }

    -[_DUIPreviewAndImageComponent setImageComponent:](v5, "setImageComponent:", v11);
    -[_DUIPreviewAndImageComponent setIndex:](v5, "setIndex:", a2);
    objc_msgSend(*(id *)(a1 + 48), "addObject:", v5);

  }
}

void sub_185B48684(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _transferQueue()
{
  if (qword_1ECD7D7F8 != -1)
    dispatch_once(&qword_1ECD7D7F8, &__block_literal_global_171);
  return (id)_MergedGlobals_1022;
}

void _dispatchCallback(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  id v4;

  v1 = qword_1ECD7D808;
  v2 = a1;
  v4 = v2;
  if (v1 == -1)
  {
    v3 = v2;
  }
  else
  {
    dispatch_once(&qword_1ECD7D808, &__block_literal_global_136);
    v3 = v4;
  }
  dispatch_async((dispatch_queue_t)qword_1ECD7D800, v3);

}

void sub_185B48FB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185B49530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_185B49724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ___transferQueue_block_invoke()
{
  dispatch_queue_t v0;
  void *v1;

  v0 = dispatch_queue_create("com.apple.UIKit._UIDataTransferMonitor transferQueue", 0);
  v1 = (void *)_MergedGlobals_1022;
  _MergedGlobals_1022 = (uint64_t)v0;

}

void ___dispatchCallback_block_invoke()
{
  dispatch_queue_t v0;
  void *v1;

  v0 = dispatch_queue_create("com.apple.UIKit._UIDataTransferMonitor callbackQueue", 0);
  v1 = (void *)qword_1ECD7D800;
  qword_1ECD7D800 = (uint64_t)v0;

}

void ___indexOfDataTransferRequestMatching_block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  int v11;
  void *v12;
  id v13;

  v13 = a2;
  objc_msgSend(v13, "itemProvider");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "_UUID");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "_UUID");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v8, "isEqual:", v9) & 1) != 0)
  {
    objc_msgSend(v13, "UUID");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "isEqual:", *(_QWORD *)(a1 + 40));

    v12 = v13;
    if (v11)
    {
      *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = a3;
      *a4 = 1;
    }
  }
  else
  {

    v12 = v13;
  }

}

id windowSceneForItems(void *a1, char a2, int a3)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  windowForItems(a1, a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "windowScene");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    objc_msgSend(v4, "windowScene");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else if (a3 && objc_msgSend((id)UIApp, "_isSpringBoard"))
  {
    +[UIScreen mainScreen](UIScreen, "mainScreen");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    +[_UISceneLifecycleMultiplexer mostActiveWindowSceneOnScreen:](_UISceneLifecycleMultiplexer, "mostActiveWindowSceneOnScreen:", v7);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

id windowForItems(void *a1, char a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v3 = a1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v13;
LABEL_3:
    v7 = 0;
    while (1)
    {
      if (*(_QWORD *)v13 != v6)
        objc_enumerationMutation(v3);
      v8 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * v7);
      if ((a2 & 1) != 0)
        objc_msgSend(v8, "_sourceVisualTarget");
      else
        objc_msgSend(v8, "_destinationVisualTarget", (_QWORD)v12);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "_windowForSetDownOfDragItem:", v8, (_QWORD)v12);
      v10 = (void *)objc_claimAutoreleasedReturnValue();

      if (v10)
        break;
      if (v5 == ++v7)
      {
        v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
        if (v5)
          goto LABEL_3;
        goto LABEL_12;
      }
    }
  }
  else
  {
LABEL_12:
    v10 = 0;
  }

  return v10;
}

void sub_185B4B560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void _UISetupPhysicsKit()
{
  if (_UISetupPhysicsKit_onceToken != -1)
    dispatch_once(&_UISetupPhysicsKit_onceToken, &__block_literal_global_174);
}

BOOL UIFloatRangeIsInfinite(UIFloatRange range)
{
  return range.maximum >= 3.40282347e38 && range.minimum <= -3.40282347e38;
}

BOOL UIFloatRangeIsEqualToRange(double a1, double a2, double a3, double a4)
{
  double v4;
  double v6;
  double v7;

  v4 = a1 - a3;
  if (v4 < 0.0)
    v4 = -v4;
  if (v4 > 0.00000011920929)
    return 0;
  v6 = a2 - a4;
  v7 = -(a2 - a4);
  if (v6 < 0.0)
    v6 = v7;
  return v6 <= 0.00000011920929;
}

void sub_185B5103C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getSTKEmojiAndStickerCollectionViewConfigurationClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)qword_1ECD79DC0;
  v7 = qword_1ECD79DC0;
  if (!qword_1ECD79DC0)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getSTKEmojiAndStickerCollectionViewConfigurationClass_block_invoke;
    v3[3] = &unk_1E16B14C0;
    v3[4] = &v4;
    __getSTKEmojiAndStickerCollectionViewConfigurationClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_185B510F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getSTKEmojiAndStickerCollectionViewControllerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD79DB8)
    qword_1ECD79DB8 = _sl_dlopen();
  if (!qword_1ECD79DB8)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *StickerKitLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("UIRemoteEmojiAndStickerInputView.m"), 74, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("STKEmojiAndStickerCollectionViewController");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getSTKEmojiAndStickerCollectionViewControllerClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UIRemoteEmojiAndStickerInputView.m"), 76, CFSTR("Unable to find class %s"), "STKEmojiAndStickerCollectionViewController");

LABEL_8:
    __break(1u);
  }
  _MergedGlobals_1_7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getSTKEmojiAndStickerCollectionViewConfigurationClass_block_invoke(uint64_t a1)
{
  Class result;

  if (!qword_1ECD79DB8)
    qword_1ECD79DB8 = _sl_dlopen();
  result = objc_getClass("STKEmojiAndStickerCollectionViewConfiguration");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  qword_1ECD79DC0 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getTUIEmojiSearchViewClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD79DD0)
    qword_1ECD79DD0 = _sl_dlopen();
  if (!qword_1ECD79DD0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *TextInputUILibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("UIRemoteEmojiAndStickerInputView.m"), 31, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("TUIEmojiSearchView");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getTUIEmojiSearchViewClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UIRemoteEmojiAndStickerInputView.m"), 32, CFSTR("Unable to find class %s"), "TUIEmojiSearchView");

LABEL_8:
    __break(1u);
  }
  qword_1ECD79DC8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_185B533F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185B53C1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _dynamicItemTypeForItem(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v2 = 1;
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v2 = 2;
    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v2 = 3;
      else
        v2 = 0;
    }
  }

  return v2;
}

void _setupBodyWithCenterAndTransform(void *a1, long double *a2, double a3, double a4)
{
  id v7;

  v7 = a1;
  objc_msgSend(v7, "setPosition:", a3, a4);
  objc_msgSend(v7, "setFieldBitMask:", 0);
  objc_msgSend(v7, "setRotation:", (double)atan2(a2[1], *a2));
  objc_msgSend(v7, "setAffectedByGravity:", 0);

}

void sub_185B554C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t ___commonInitWithReferenceSystem_block_invoke(uint64_t a1)
{
  return +[UIDynamicAnimator _registerAnimator:](UIDynamicAnimator, "_registerAnimator:", *(_QWORD *)(a1 + 32));
}

double unionRectOfItems(void *a1)
{
  id v1;
  CGFloat y;
  double x;
  CGFloat height;
  CGFloat width;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  double v20;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];
  uint64_t v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;

  v27 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  x = *MEMORY[0x1E0C9D628];
  y = *(double *)(MEMORY[0x1E0C9D628] + 8);
  width = *(double *)(MEMORY[0x1E0C9D628] + 16);
  height = *(double *)(MEMORY[0x1E0C9D628] + 24);
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v6 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v23;
    do
    {
      for (i = 0; i != v7; ++i)
      {
        if (*(_QWORD *)v23 != v8)
          objc_enumerationMutation(v1);
        v10 = *(void **)(*((_QWORD *)&v22 + 1) + 8 * i);
        objc_msgSend(v10, "center");
        v12 = v11;
        v14 = v13;
        objc_msgSend(v10, "bounds");
        v16 = v15;
        v18 = v17;
        v19 = v12 - v15 * 0.5;
        v20 = v14 - v17 * 0.5;
        v28.origin.x = x;
        v28.origin.y = y;
        v28.size.width = width;
        v28.size.height = height;
        if (CGRectIsNull(v28))
        {
          height = v18;
          width = v16;
          y = v20;
          x = v19;
        }
        else
        {
          v29.origin.x = x;
          v29.origin.y = y;
          v29.size.width = width;
          v29.size.height = height;
          v31.origin.x = v19;
          v31.origin.y = v20;
          v31.size.width = v16;
          v31.size.height = v18;
          v30 = CGRectUnion(v29, v31);
          x = v30.origin.x;
          y = v30.origin.y;
          width = v30.size.width;
          height = v30.size.height;
        }
      }
      v7 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
    }
    while (v7);
  }

  return x;
}

void sub_185B5E238(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_185B5E2D4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_185B5E334(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  void *v9;
  void *v10;

  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)UIDynamicsDebug;
  -[_Unwind_Exception dealloc](&a9, sel_dealloc);
  _Unwind_Resume(a1);
}

void __clang_call_terminate(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

void sub_185B5E404(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185B5E55C(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185B5E5CC(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185B5E90C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  void *v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);

  _Unwind_Resume(a1);
}

void sub_185B5EBAC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void ___ZL15getGLKViewClassv_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  GLKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("GLKView");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    _MergedGlobals_1023 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getGLKViewClass()_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIDynamicsDebug.mm"), 23, CFSTR("Unable to find class %s"), "GLKView");

    __break(1u);
  }
}

void sub_185B5ED9C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void GLKitLibrary(void)
{
  void *v0;
  void *v1;
  void *v2;

  if (!GLKitLibraryCore(char **)::frameworkLibrary)
    GLKitLibraryCore(char **)::frameworkLibrary = _sl_dlopen();
  if (!GLKitLibraryCore(char **)::frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *GLKitLibrary()");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("UIDynamicsDebug.mm"), 22, CFSTR("%s"), 0);

    __break(1u);
    free(v1);
  }
}

void sub_185B5EEBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, _Unwind_Exception *exception_object)
{
  void *v11;

  _Unwind_Resume(a1);
}

void ___ZL21getGLKBaseEffectClassv_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  GLKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("GLKBaseEffect");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7D818 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getGLKBaseEffectClass()_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIDynamicsDebug.mm"), 24, CFSTR("Unable to find class %s"), "GLKBaseEffect");

    __break(1u);
  }
}

void sub_185B5EFA4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_185B5F014(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185B5F070(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185B5F0F4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185B5F184(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185B5F218(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185B5F2C4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185B5F370(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185B5F3D8(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185B5F434(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185B5F490(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185B5F608(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_185B5F770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_185B5F8B0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_185B5F930(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185B5F9E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_185B5FB48(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185B5FC14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_185B5FD00(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  _Unwind_Resume(a1);
}

void sub_185B5FD98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_185B5FDF4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185B5FF14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  void *v10;

  _Unwind_Resume(a1);
}

void sub_185B60324(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185B604E4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_185B6056C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_185B61DEC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_185B61E48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{

  _Unwind_Resume(a1);
}

void sub_185B61F40(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185B62000(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185B620B8(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_185B62108(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185B62174(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_185B621EC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_185B62264(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_185B636FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185B63B54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _UIQOSProcessingEnd();
  _Unwind_Resume(a1);
}

id AsyncFallbackPreparationQueue()
{
  if (qword_1ECD79580 != -1)
    dispatch_once(&qword_1ECD79580, &__block_literal_global_416);
  return (id)qword_1ECD79578;
}

void sub_185B69088(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_185B6912C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_185B6A6B8(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

id _UICreateNotificationFeedbacksForTypes(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  double v11;
  void *v12;
  void *v13;
  double v14;
  void *v15;
  void *v16;
  double v17;
  void *v18;
  void *v19;
  double v20;
  void *v21;
  void *v22;
  double v23;
  void *v24;
  void *v25;
  double v26;
  void *v27;
  void *v28;
  double v29;
  void *v30;
  double v31;
  void *v32;
  _QWORD *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  double v38;
  void *v39;
  double v40;
  void *v41;
  _BOOL4 v42;
  void *v43;
  double v44;
  void *v45;
  _BOOL4 v46;
  void *v47;
  _BOOL4 v48;
  void *v49;
  void *v50;
  double v51;
  void *v52;
  double v53;
  void *v54;
  void *v55;
  void *v56;
  double v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  double v69;
  void *v70;
  void *v71;
  double v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  double v81;
  void *v82;
  double v83;
  void *v84;
  void *v85;
  double v86;
  void *v87;
  void *v88;
  double v89;
  uint64_t v90;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  id obj;
  id v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  _BYTE v108[128];
  uint64_t v109;

  v109 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v99 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E08]), "initWithCapacity:", objc_msgSend(v1, "count"));
  v100 = 0u;
  v101 = 0u;
  v102 = 0u;
  v103 = 0u;
  obj = v1;
  v2 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v100, v108, 16);
  if (v2)
  {
    v3 = *(_QWORD *)v101;
    do
    {
      v4 = 0;
      do
      {
        if (*(_QWORD *)v101 != v3)
          objc_enumerationMutation(obj);
        v5 = *(void **)(*((_QWORD *)&v100 + 1) + 8 * v4);
        v6 = objc_msgSend(v5, "integerValue");
        if (qword_1ECD7A580 != -1)
          dispatch_once(&qword_1ECD7A580, &__block_literal_global_81_2);
        if (v6 <= 1000)
        {
          if (v6)
          {
            if (v6 == 1)
            {
LABEL_15:
              +[_UIFeedbackPattern feedbackPattern](_UIFeedbackPattern, "feedbackPattern");
              v8 = (void *)objc_claimAutoreleasedReturnValue();
              +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 29527, _UISystemSoundIDNone);
              v21 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v21, "hapticParameters");
              v22 = (void *)objc_claimAutoreleasedReturnValue();
              LODWORD(v23) = 1063675494;
              objc_msgSend(v22, "setVolume:", v23);

              objc_msgSend(v8, "addFeedback:atTime:", v21, 0.0);
              +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 26455, _UISystemSoundIDNone);
              v24 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v24, "hapticParameters");
              v25 = (void *)objc_claimAutoreleasedReturnValue();
              LODWORD(v26) = 1063675494;
              objc_msgSend(v25, "setVolume:", v26);

              objc_msgSend(v8, "addFeedback:atTime:", v24, 0.215);
            }
            else
            {
              if (v6 != 2)
                goto LABEL_57;
              +[_UIFeedbackPattern feedbackPattern](_UIFeedbackPattern, "feedbackPattern");
              v8 = (void *)objc_claimAutoreleasedReturnValue();
              +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 29526, _UISystemSoundIDNone);
              v9 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v9, "hapticParameters");
              v10 = (void *)objc_claimAutoreleasedReturnValue();
              LODWORD(v11) = 1062836634;
              objc_msgSend(v10, "setVolume:", v11);

              objc_msgSend(v8, "addFeedback:atTime:", v9, 0.0);
              +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 29526, _UISystemSoundIDNone);
              v12 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v12, "hapticParameters");
              v13 = (void *)objc_claimAutoreleasedReturnValue();
              LODWORD(v14) = 0.75;
              objc_msgSend(v13, "setVolume:", v14);

              objc_msgSend(v8, "addFeedback:atTime:", v12, 0.1);
              +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 20311, _UISystemSoundIDNone);
              v15 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v15, "hapticParameters");
              v16 = (void *)objc_claimAutoreleasedReturnValue();
              LODWORD(v17) = 1059481190;
              objc_msgSend(v16, "setVolume:", v17);

              objc_msgSend(v8, "addFeedback:atTime:", v15, 0.2);
              +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 17239, _UISystemSoundIDNone);
              v18 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v18, "hapticParameters");
              v19 = (void *)objc_claimAutoreleasedReturnValue();
              LODWORD(v20) = 0.75;
              objc_msgSend(v19, "setVolume:", v20);

              objc_msgSend(v8, "addFeedback:atTime:", v18, 0.3);
            }
          }
          else
          {
            +[_UIFeedbackPattern feedbackPattern](_UIFeedbackPattern, "feedbackPattern");
            v8 = (void *)objc_claimAutoreleasedReturnValue();
            +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 20311, _UISystemSoundIDNone);
            v67 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v67, "hapticParameters");
            v68 = (void *)objc_claimAutoreleasedReturnValue();
            LODWORD(v69) = 1060320051;
            objc_msgSend(v68, "setVolume:", v69);

            objc_msgSend(v8, "addFeedback:atTime:", v67, 0.0);
            +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 29526, _UISystemSoundIDNone);
            v70 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v70, "hapticParameters");
            v71 = (void *)objc_claimAutoreleasedReturnValue();
            LODWORD(v72) = 1.0;
            objc_msgSend(v71, "setVolume:", v72);

            objc_msgSend(v8, "addFeedback:atTime:", v70, 0.185);
          }
        }
        else
        {
          switch(v6)
          {
            case 1001:
              +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 0, 1102);
              v7 = objc_claimAutoreleasedReturnValue();
              goto LABEL_54;
            case 1002:
              +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 0, 1100);
              v7 = objc_claimAutoreleasedReturnValue();
              goto LABEL_54;
            case 1003:
              +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 0, 1106);
              v7 = objc_claimAutoreleasedReturnValue();
              goto LABEL_54;
            case 1004:
              v104 = 0;
              v105 = &v104;
              v106 = 0x2020000000;
              v33 = (_QWORD *)qword_1ECD7A588;
              v107 = qword_1ECD7A588;
              if (!qword_1ECD7A588)
              {
                v34 = CoreHapticsLibrary_0();
                v33 = dlsym(v34, "CHHapticPatternLibraryKeyDeviceSilenced");
                v105[3] = (uint64_t)v33;
                qword_1ECD7A588 = (uint64_t)v33;
              }
              _Block_object_dispose(&v104, 8);
              if (v33)
                goto LABEL_47;
              objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
              v92 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticPatternLibraryKey getCHHapticPatternLibraryKeyDeviceSilenced(void)");
              v93 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v92, "handleFailureInFunction:file:lineNumber:description:", v93, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 92, CFSTR("%s"), dlerror());

              goto LABEL_67;
            case 1005:
              if (!_MergedGlobals_3_8)
                goto LABEL_57;
              v104 = 0;
              v105 = &v104;
              v106 = 0x2020000000;
              v33 = (_QWORD *)qword_1ECD7A590;
              v107 = qword_1ECD7A590;
              if (!qword_1ECD7A590)
              {
                v35 = CoreHapticsLibrary_0();
                v33 = dlsym(v35, "CHHapticPatternLibraryKeyDeviceUnsilenced");
                v105[3] = (uint64_t)v33;
                qword_1ECD7A590 = (uint64_t)v33;
              }
              _Block_object_dispose(&v104, 8);
              if (!v33)
              {
                objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
                v96 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticPatternLibraryKey getCHHapticPatternLibraryKeyDeviceUnsilenced(void)");
                v97 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v96, "handleFailureInFunction:file:lineNumber:description:", v97, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 93, CFSTR("%s"), dlerror());

LABEL_67:
                __break(1u);
              }
LABEL_47:
              +[_UIFeedbackLibraryPattern feedbackPatternWithLibraryKey:](_UIFeedbackLibraryPattern, "feedbackPatternWithLibraryKey:", *v33);
              v8 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "setHapticOutputMode:", 3);
              break;
            case 1006:
              goto LABEL_15;
            case 1007:
              +[_UIFeedbackPattern feedbackPattern](_UIFeedbackPattern, "feedbackPattern");
              v8 = (void *)objc_claimAutoreleasedReturnValue();
              +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 26453, _UISystemSoundIDNone);
              v36 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v36, "hapticParameters");
              v37 = (void *)objc_claimAutoreleasedReturnValue();
              LODWORD(v38) = 1053609165;
              objc_msgSend(v37, "setVolume:", v38);

              objc_msgSend(v8, "addFeedback:atTime:", v36, 0.0);
              objc_msgSend(v8, "addFeedback:atTime:", v36, 0.05);
              objc_msgSend(v8, "addFeedback:atTime:", v36, 0.1);
              objc_msgSend(v8, "addFeedback:atTime:", v36, 0.15);
              objc_msgSend(v8, "addFeedback:atTime:", v36, 0.2);
              objc_msgSend(v36, "hapticParameters");
              v39 = (void *)objc_claimAutoreleasedReturnValue();
              LODWORD(v40) = 1060320051;
              objc_msgSend(v39, "setVolume:", v40);

              objc_msgSend(v8, "addFeedback:atTime:", v36, 0.25);
              objc_msgSend(v8, "addFeedback:atTime:", v36, 0.3);
              objc_msgSend(v8, "addFeedback:atTime:", v36, 0.35);

              break;
            case 1008:
              +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 0, 1360);
              v7 = objc_claimAutoreleasedReturnValue();
              goto LABEL_54;
            case 1009:
              +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 0, 1361);
              v7 = objc_claimAutoreleasedReturnValue();
              goto LABEL_54;
            case 1010:
              +[UIDevice currentDevice](UIDevice, "currentDevice");
              v41 = (void *)objc_claimAutoreleasedReturnValue();
              v42 = objc_msgSend(v41, "userInterfaceIdiom") == 1;

              if (v42)
              {
                +[_UIFeedbackBackBoardHIDPattern feedbackPatternWithName:deviceType:](_UIFeedbackBackBoardHIDPattern, "feedbackPatternWithName:deviceType:", 0x1E1720740, 1);
                v7 = objc_claimAutoreleasedReturnValue();
                goto LABEL_54;
              }
              +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 11094, _UISystemSoundIDNone);
              v8 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "hapticParameters");
              v80 = (void *)objc_claimAutoreleasedReturnValue();
              LODWORD(v81) = 1060320051;
              objc_msgSend(v80, "setVolume:", v81);

              objc_msgSend(v8, "setHapticOutputMode:", 5);
              break;
            case 1011:
              +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 8023, _UISystemSoundIDNone);
              v8 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "hapticParameters");
              v43 = (void *)objc_claimAutoreleasedReturnValue();
              LODWORD(v44) = 1055957975;
              objc_msgSend(v43, "setVolume:", v44);

              objc_msgSend(v8, "setHapticOutputMode:", 5);
              break;
            case 1012:
              +[UIDevice currentDevice](UIDevice, "currentDevice");
              v45 = (void *)objc_claimAutoreleasedReturnValue();
              v46 = objc_msgSend(v45, "userInterfaceIdiom") == 1;

              if (v46)
              {
                +[_UIFeedbackBackBoardHIDPattern feedbackPatternWithName:deviceType:](_UIFeedbackBackBoardHIDPattern, "feedbackPatternWithName:deviceType:", 0x1E1720760, 1);
                v7 = objc_claimAutoreleasedReturnValue();
                goto LABEL_54;
              }
              +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 8022, _UISystemSoundIDNone);
              v8 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "hapticParameters");
              v82 = (void *)objc_claimAutoreleasedReturnValue();
              LODWORD(v83) = 1058021569;
              objc_msgSend(v82, "setVolume:", v83);

              objc_msgSend(v8, "setHapticOutputMode:", 5);
              break;
            case 1013:
              +[UIDevice currentDevice](UIDevice, "currentDevice");
              v47 = (void *)objc_claimAutoreleasedReturnValue();
              v48 = objc_msgSend(v47, "userInterfaceIdiom") == 1;

              if (v48)
              {
                +[_UIFeedbackBackBoardHIDPattern feedbackPatternWithName:deviceType:](_UIFeedbackBackBoardHIDPattern, "feedbackPatternWithName:deviceType:", 0x1E1720780, 1);
                v7 = objc_claimAutoreleasedReturnValue();
LABEL_54:
                v8 = (void *)v7;
              }
              else
              {
                +[_UIFeedbackPattern feedbackPattern](_UIFeedbackPattern, "feedbackPattern");
                v8 = (void *)objc_claimAutoreleasedReturnValue();
                +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 11094, _UISystemSoundIDNone);
                v84 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v84, "hapticParameters");
                v85 = (void *)objc_claimAutoreleasedReturnValue();
                LODWORD(v86) = 1057467924;
                objc_msgSend(v85, "setVolume:", v86);

                objc_msgSend(v84, "setHapticOutputMode:", 5);
                objc_msgSend(v8, "addFeedback:atTime:", v84, 0.09);

                +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 11094, _UISystemSoundIDNone);
                v87 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v87, "hapticParameters");
                v88 = (void *)objc_claimAutoreleasedReturnValue();
                LODWORD(v89) = 1055957975;
                objc_msgSend(v88, "setVolume:", v89);

                objc_msgSend(v87, "setHapticOutputMode:", 5);
                objc_msgSend(v8, "addFeedback:atTime:", v87, 0.325);

              }
              break;
            case 1014:
              +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 0, 1161);
              v7 = objc_claimAutoreleasedReturnValue();
              goto LABEL_54;
            case 1015:
              +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 0, 1162);
              v7 = objc_claimAutoreleasedReturnValue();
              goto LABEL_54;
            case 1016:
              +[_UIFeedbackPattern feedbackPattern](_UIFeedbackPattern, "feedbackPattern");
              v8 = (void *)objc_claimAutoreleasedReturnValue();
              +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 32555, _UISystemSoundIDNone);
              v49 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v49, "audioParameters");
              v50 = (void *)objc_claimAutoreleasedReturnValue();
              LODWORD(v51) = 1032805417;
              objc_msgSend(v50, "setVolume:", v51);

              objc_msgSend(v49, "audioParameters");
              v52 = (void *)objc_claimAutoreleasedReturnValue();
              LODWORD(v53) = 1061997773;
              objc_msgSend(v52, "setTransposition:", v53);

              objc_msgSend(v8, "addFeedback:atTime:", v49, 0.0);
              +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 29527, _UISystemSoundIDNone);
              v54 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "addFeedback:atTime:", v54, 0.0);

              break;
            case 1017:
              +[_UIFeedbackPattern feedbackPattern](_UIFeedbackPattern, "feedbackPattern");
              v8 = (void *)objc_claimAutoreleasedReturnValue();
              +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 32555, _UISystemSoundIDNone);
              v27 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v27, "audioParameters");
              v28 = (void *)objc_claimAutoreleasedReturnValue();
              LODWORD(v29) = 1025758986;
              objc_msgSend(v28, "setVolume:", v29);

              objc_msgSend(v27, "audioParameters");
              v30 = (void *)objc_claimAutoreleasedReturnValue();
              LODWORD(v31) = 1061997773;
              objc_msgSend(v30, "setTransposition:", v31);

              objc_msgSend(v8, "addFeedback:atTime:", v27, 0.0);
              +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 29527, _UISystemSoundIDNone);
              v32 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "addFeedback:atTime:", v32, 0.0);

              break;
            case 1018:
              +[_UIFeedbackPattern feedbackPattern](_UIFeedbackPattern, "feedbackPattern");
              v8 = (void *)objc_claimAutoreleasedReturnValue();
              +[_UIDiscreteFeedback discreteFeedbackForType:](_UIDiscreteFeedback, "discreteFeedbackForType:", 8);
              v55 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v55, "hapticParameters");
              v56 = (void *)objc_claimAutoreleasedReturnValue();
              LODWORD(v57) = 1060320051;
              objc_msgSend(v56, "setVolume:", v57);

              objc_msgSend(v8, "addFeedback:atTime:", v55, 0.0);
              objc_msgSend(v8, "addFeedback:atTime:", v55, 0.17);

              break;
            case 1019:
              objc_msgSend(MEMORY[0x1E0CB34D0], "bundleForClass:", objc_opt_class());
              v58 = (void *)objc_claimAutoreleasedReturnValue();
              +[_UIFeedbackPattern feedbackPattern](_UIFeedbackPattern, "feedbackPattern");
              v8 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v58, "URLForResource:withExtension:", CFSTR("Single_0ms_S10-D52-D53-D54"), CFSTR("ahap"));
              v59 = (void *)objc_claimAutoreleasedReturnValue();
              +[_UIFeedbackHapticFilePattern feedbackPatternFromFile:](_UIFeedbackHapticFilePattern, "feedbackPatternFromFile:", v59);
              v60 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "addFeedback:atTime:", v60, 0.0);

              objc_msgSend(v58, "URLForResource:withExtension:", CFSTR("200312_ch_FPO-D52-D53-D54"), CFSTR("wav"));
              v61 = (void *)objc_claimAutoreleasedReturnValue();
              +[_UIFeedbackAudioFilePattern feedbackPatternFromFile:](_UIFeedbackAudioFilePattern, "feedbackPatternFromFile:", v61);
              v62 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "addFeedback:atTime:", v62, 0.0);

              break;
            case 1020:
              objc_msgSend(MEMORY[0x1E0CB34D0], "bundleForClass:", objc_opt_class());
              v73 = (void *)objc_claimAutoreleasedReturnValue();
              +[_UIFeedbackPattern feedbackPattern](_UIFeedbackPattern, "feedbackPattern");
              v8 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v73, "URLForResource:withExtension:", CFSTR("Single_0ms_S10_charge_500ms-D52-D53-D54"), CFSTR("ahap"));
              v74 = (void *)objc_claimAutoreleasedReturnValue();
              +[_UIFeedbackHapticFilePattern feedbackPatternFromFile:](_UIFeedbackHapticFilePattern, "feedbackPatternFromFile:", v74);
              v75 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "addFeedback:atTime:", v75, 0.0);

              objc_msgSend(v73, "URLForResource:withExtension:", CFSTR("200312_ch_FPO-D52-D53-D54"), CFSTR("wav"));
              v76 = (void *)objc_claimAutoreleasedReturnValue();
              +[_UIFeedbackAudioFilePattern feedbackPatternFromFile:](_UIFeedbackAudioFilePattern, "feedbackPatternFromFile:", v76);
              v77 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "addFeedback:atTime:", v77, 0.0);

              objc_msgSend(v73, "URLForResource:withExtension:", CFSTR("connect_power-D52-D53-D54"), CFSTR("wav"));
              v78 = (void *)objc_claimAutoreleasedReturnValue();
              +[_UIFeedbackAudioFilePattern feedbackPatternFromFile:](_UIFeedbackAudioFilePattern, "feedbackPatternFromFile:", v78);
              v79 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "addFeedback:atTime:", v79, 0.624);

              break;
            case 1021:
              objc_msgSend(MEMORY[0x1E0CB34D0], "bundleForClass:", objc_opt_class());
              v63 = (void *)objc_claimAutoreleasedReturnValue();
              +[_UIFeedbackPattern feedbackPattern](_UIFeedbackPattern, "feedbackPattern");
              v8 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v63, "URLForResource:withExtension:", CFSTR("MagSafe_Wallet_Detach"), CFSTR("ahap"));
              v64 = (void *)objc_claimAutoreleasedReturnValue();
              +[_UIFeedbackHapticFilePattern feedbackPatternFromFile:](_UIFeedbackHapticFilePattern, "feedbackPatternFromFile:", v64);
              v65 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "addFeedback:atTime:", v65, 0.0);

              break;
            case 1022:
              v104 = 0;
              v105 = &v104;
              v106 = 0x2020000000;
              v33 = (_QWORD *)qword_1ECD7A598;
              v107 = qword_1ECD7A598;
              if (!qword_1ECD7A598)
              {
                v66 = CoreHapticsLibrary_0();
                v33 = dlsym(v66, "CHHapticPatternLibraryKeyHardwareButtonGenericToggle");
                v105[3] = (uint64_t)v33;
                qword_1ECD7A598 = (uint64_t)v33;
              }
              _Block_object_dispose(&v104, 8);
              if (v33)
                goto LABEL_47;
              objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
              v94 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticPatternLibraryKey getCHHapticPatternLibraryKeyHardwareButtonGenericToggle(void)");
              v95 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v94, "handleFailureInFunction:file:lineNumber:description:", v95, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 95, CFSTR("%s"), dlerror());

              goto LABEL_67;
            case 1023:
              +[_UIFeedbackBackBoardHIDPattern feedbackPatternWithName:deviceType:](_UIFeedbackBackBoardHIDPattern, "feedbackPatternWithName:deviceType:", 0x1E17206C0, 0);
              v7 = objc_claimAutoreleasedReturnValue();
              goto LABEL_54;
            case 1024:
              +[_UIFeedbackBackBoardHIDPattern feedbackPatternWithName:deviceType:](_UIFeedbackBackBoardHIDPattern, "feedbackPatternWithName:deviceType:", 0x1E17206E0, 0);
              v7 = objc_claimAutoreleasedReturnValue();
              goto LABEL_54;
            case 1025:
              +[_UIFeedbackBackBoardHIDPattern feedbackPatternWithName:deviceType:](_UIFeedbackBackBoardHIDPattern, "feedbackPatternWithName:deviceType:", 0x1E1720700, 0);
              v7 = objc_claimAutoreleasedReturnValue();
              goto LABEL_54;
            case 1026:
              +[_UIFeedbackBackBoardHIDPattern feedbackPatternWithName:deviceType:](_UIFeedbackBackBoardHIDPattern, "feedbackPatternWithName:deviceType:", 0x1E1720720, 0);
              v7 = objc_claimAutoreleasedReturnValue();
              goto LABEL_54;
            default:
              goto LABEL_57;
          }
        }
        if (v8)
        {
          objc_msgSend(v99, "setObject:forKey:", v8, v5);

        }
LABEL_57:
        ++v4;
      }
      while (v2 != v4);
      v90 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v100, v108, 16);
      v2 = v90;
    }
    while (v90);
  }

  return v99;
}

void sub_185B6CB54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

id _UIClickAudioFeedback(double a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  double v6;
  float v7;
  void *v8;
  double v9;

  +[UIDevice currentDevice](UIDevice, "currentDevice");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "_feedbackSupportLevel");

  if (v3 >= 2)
  {
    +[_UICustomDiscreteFeedback customDiscreteFeedbackWithEventType:systemSoundID:](_UICustomDiscreteFeedback, "customDiscreteFeedbackWithEventType:systemSoundID:", 32555, _UISystemSoundIDNone);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "audioParameters");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    LODWORD(v6) = 1028443341;
    objc_msgSend(v5, "setVolume:", v6);

    objc_msgSend(v4, "audioParameters");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = a1;
    *(float *)&v9 = v7;
    objc_msgSend(v8, "setTransposition:", v9);

  }
  else
  {
    v4 = 0;
  }
  return v4;
}

void sub_185B6EDD4(_Unwind_Exception *a1)
{
  void *v1;

  _Unwind_Resume(a1);
}

void sub_185B6F298(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

unint64_t *std::uninitialized_copy[abi:nn180100]<_UIBitSetIterator<unsigned long,256ul>,unsigned long *>(uint64_t *a1, uint64_t a2, unint64_t *a3)
{
  unint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;

  v3 = a1[1];
  if (v3 != a2)
  {
    v4 = *a1;
    v5 = *((_BYTE *)a1 + 16);
    do
    {
      *a3 = v3;
      v6 = v3 >> 6;
      if (v3 >> 6 == 4)
      {
LABEL_7:
        v3 = 256;
      }
      else
      {
        v7 = v3 & 0x3F;
        v8 = -64 * v6;
        while (1)
        {
          v9 = __clz(__rbit64((*(_QWORD *)(v4 + 8 * v6) ^ (char)(v5 - 1)) & (-1 << v7)));
          if (v9 < 0x40)
            break;
          v7 = 0;
          ++v6;
          v8 -= 64;
          if (v6 == 4)
            goto LABEL_7;
        }
        v3 = v9 - v8;
      }
      v5 ^= 1u;
      ++a3;
    }
    while (v3 != a2);
  }
  return a3;
}

_QWORD *std::vector<unsigned long>::vector<_UIBitSetIterator<unsigned long,256ul>,0>(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  v4 = a2[1];
  v5 = *(_QWORD *)(a3 + 8);
  if (v4 != v5)
  {
    v7 = 0;
    v8 = *a2;
    v9 = *((_BYTE *)a2 + 16);
    v10 = v9;
    v11 = v4;
    do
    {
      v12 = v11 >> 6;
      if (v11 >> 6 == 4)
      {
LABEL_7:
        v11 = 256;
      }
      else
      {
        v13 = v11 & 0x3F;
        v14 = -64 * v12;
        while (1)
        {
          v15 = __clz(__rbit64((*(_QWORD *)(v8 + 8 * v12) ^ (char)(v10 - 1)) & (-1 << v13)));
          if (v15 < 0x40)
            break;
          v13 = 0;
          ++v12;
          v14 -= 64;
          if (v12 == 4)
            goto LABEL_7;
        }
        v11 = v15 - v14;
      }
      ++v7;
      v10 ^= 1u;
    }
    while (v11 != v5);
    std::vector<unsigned long>::__vallocate[abi:nn180100](a1, v7);
    v16 = (unint64_t *)a1[1];
    do
    {
      *v16 = v4;
      v17 = v4 >> 6;
      if (v4 >> 6 == 4)
      {
LABEL_15:
        v4 = 256;
      }
      else
      {
        v18 = v4 & 0x3F;
        v19 = -64 * v17;
        while (1)
        {
          v20 = __clz(__rbit64((*(_QWORD *)(v8 + 8 * v17) ^ (char)(v9 - 1)) & (-1 << v18)));
          if (v20 < 0x40)
            break;
          v18 = 0;
          ++v17;
          v19 -= 64;
          if (v17 == 4)
            goto LABEL_15;
        }
        v4 = v20 - v19;
      }
      v9 ^= 1u;
      ++v16;
    }
    while (v4 != v5);
    a1[1] = v16;
  }
  return a1;
}

double _UISmallVector<unsigned short,16ul>::insert(__int128 *a1, uint64_t a2, uint64_t a3, __int16 *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int16 v9;
  __int16 v10;
  double result;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _OWORD v17[2];

  v4 = *((_QWORD *)a1 + 4);
  v5 = v4 + 1;
  v6 = v4 - 1;
  v8 = *a1;
  v7 = a1[1];
  if (v6 >= a3)
  {
    do
    {
      v17[0] = v8;
      v17[1] = v7;
      v9 = *((_WORD *)v17 + (v6 & 0xF));
      v15 = v8;
      v16 = v7;
      *((_WORD *)&v15 + (((_BYTE)v6 + 1) & 0xF)) = v9;
      v8 = v15;
      v7 = v16;
      --v6;
    }
    while (v6 >= a3);
    *a1 = v15;
    a1[1] = v7;
  }
  *((_QWORD *)a1 + 4) = v5;
  v10 = *a4;
  v13 = v8;
  v14 = v7;
  *((_WORD *)&v13 + (a3 & 0xF)) = v10;
  result = *(double *)&v13;
  v12 = v14;
  *a1 = v13;
  a1[1] = v12;
  return result;
}

__n128 _UISmallVector<unsigned short,16ul>::insert<unsigned short *>(__int128 *a1, __n128 result, uint64_t a3, uint64_t a4, __int16 *a5, __int16 *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int16 v10;
  __int128 v11;
  __int16 v12;
  __int128 v13;
  __n128 v14;
  _OWORD v15[2];
  __int128 v16;
  __n128 v17;

  v6 = *((_QWORD *)a1 + 4);
  v7 = v6 + a6 - a5;
  v8 = v6 - 1;
  if (v8 >= a4)
  {
    v9 = *a1;
    result = (__n128)a1[1];
    do
    {
      v15[0] = v9;
      v15[1] = result;
      v10 = *((_WORD *)v15 + (v8 & 0xF));
      v16 = v9;
      v17 = result;
      *((_WORD *)&v16 + (((a6 - a5) + (_BYTE)v8) & 0xF)) = v10;
      v9 = v16;
      result = v17;
      --v8;
    }
    while (v8 >= a4);
    *a1 = v16;
    a1[1] = (__int128)result;
  }
  *((_QWORD *)a1 + 4) = v7;
  if (a5 != a6)
  {
    v11 = *a1;
    result = (__n128)a1[1];
    do
    {
      v12 = *a5++;
      v13 = v11;
      v14 = result;
      *((_WORD *)&v13 + (a4 & 0xF)) = v12;
      v11 = v13;
      result = v14;
      *a1 = v13;
      a1[1] = (__int128)result;
      ++a4;
    }
    while (a5 != a6);
  }
  return result;
}

char *_ZNSt3__16vectorImNS_9allocatorImEEE16__init_with_sizeB8nn180100I22_UISmallVectorIteratorIDv16_tES7_EEvT_T0_m(char *result, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  char *v9;
  _QWORD *i;
  __int128 v11;
  _OWORD v12[2];

  if (a6)
  {
    v9 = result;
    result = std::vector<unsigned long>::__vallocate[abi:nn180100](result, a6);
    for (i = (_QWORD *)*((_QWORD *)v9 + 1); a5 != a3; ++a3)
    {
      v11 = a2[1];
      v12[0] = *a2;
      v12[1] = v11;
      *i++ = *((unsigned __int16 *)v12 + (a3 & 0xF));
    }
    *((_QWORD *)v9 + 1) = i;
  }
  return result;
}

void std::vector<unsigned long>::insert(uint64_t a1, char *__src, char *a3)
{
  char *v3;
  char *v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  void *__p;
  char *v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;

  v3 = a3;
  v6 = *(char **)(a1 + 8);
  v8 = a1 + 16;
  v7 = *(_QWORD *)(a1 + 16);
  if ((unint64_t)v6 >= v7)
  {
    v13 = *(char **)a1;
    v14 = ((uint64_t)&v6[-*(_QWORD *)a1] >> 3) + 1;
    if (v14 >> 61)
      abort();
    v15 = __src - v13;
    v16 = (__src - v13) >> 3;
    v17 = v7 - (_QWORD)v13;
    if (v17 >> 2 > v14)
      v14 = v17 >> 2;
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF8)
      v18 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v18 = v14;
    v29 = a1 + 16;
    if (v18)
      v19 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<unsigned long>>(a1 + 16, v18);
    else
      v19 = 0;
    v20 = &v19[8 * v16];
    __p = v19;
    v26 = v20;
    v28 = &v19[8 * v18];
    if (v16 == v18)
    {
      if (v15 < 1)
      {
        if (v13 == __src)
          v22 = 1;
        else
          v22 = v15 >> 2;
        v23 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<unsigned long>>(v8, v22);
        v20 = &v23[8 * (v22 >> 2)];
        __p = v23;
        v26 = v20;
        v28 = &v23[8 * v24];
        if (v19)
          operator delete(v19);
      }
      else
      {
        v21 = v16 + 2;
        if (v16 >= -1)
          v21 = v16 + 1;
        v20 -= 8 * (v21 >> 1);
        v26 = v20;
      }
    }
    *(_QWORD *)v20 = *(_QWORD *)v3;
    v27 = v20 + 8;
    std::vector<unsigned long>::__swap_out_circular_buffer((void **)a1, (uint64_t)&__p, __src);
    if (__p)
      operator delete(__p);
  }
  else if (__src == v6)
  {
    *(_QWORD *)__src = *(_QWORD *)a3;
    *(_QWORD *)(a1 + 8) = __src + 8;
  }
  else
  {
    v9 = __src + 8;
    v10 = v6 - 8;
    v11 = *(_QWORD **)(a1 + 8);
    while (v10 < v6)
    {
      v12 = *(_QWORD *)v10;
      v10 += 8;
      *v11++ = v12;
    }
    *(_QWORD *)(a1 + 8) = v11;
    if (v6 != v9)
      memmove(&v6[-8 * ((v6 - v9) >> 3)], __src, v6 - v9);
    if (__src <= v3)
      v3 += 8 * (*(_QWORD *)(a1 + 8) > (unint64_t)v3);
    *(_QWORD *)__src = *(_QWORD *)v3;
  }
}

void sub_185B70154(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

char *std::vector<unsigned long>::__swap_out_circular_buffer(void **a1, uint64_t a2, char *__src)
{
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  int64_t v12;
  char *v13;
  void *v14;
  void *v15;

  v5 = *(char **)(a2 + 8);
  v6 = (char *)*a1;
  v7 = v5;
  if (*a1 != __src)
  {
    v8 = __src;
    v7 = *(char **)(a2 + 8);
    do
    {
      v9 = *((_QWORD *)v8 - 1);
      v8 -= 8;
      *((_QWORD *)v7 - 1) = v9;
      v7 -= 8;
    }
    while (v8 != v6);
  }
  *(_QWORD *)(a2 + 8) = v7;
  v10 = a1[1];
  v11 = *(_QWORD *)(a2 + 16);
  v12 = v10 - __src;
  if (v10 != __src)
  {
    memmove(*(void **)(a2 + 16), __src, v10 - __src);
    v7 = *(char **)(a2 + 8);
  }
  *(_QWORD *)(a2 + 16) = v11 + v12;
  v13 = (char *)*a1;
  *a1 = v7;
  *(_QWORD *)(a2 + 8) = v13;
  v14 = a1[1];
  a1[1] = *(void **)(a2 + 16);
  *(_QWORD *)(a2 + 16) = v14;
  v15 = a1[2];
  a1[2] = *(void **)(a2 + 24);
  *(_QWORD *)(a2 + 24) = v15;
  *(_QWORD *)a2 = *(_QWORD *)(a2 + 8);
  return v5;
}

void std::vector<unsigned long>::__insert_with_size[abi:nn180100]<unsigned long *,unsigned long *>(uint64_t a1, char *__dst, char *__src, _BYTE *a4)
{
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _BYTE *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void *__p[5];

  v9 = *(_QWORD *)(a1 + 16);
  v7 = (void *)(a1 + 16);
  v8 = v9;
  v10 = *(_QWORD *)(a1 + 8);
  if ((uint64_t)(v9 - v10) < 16)
  {
    v11 = *(_BYTE **)a1;
    v12 = ((uint64_t)(v10 - *(_QWORD *)a1) >> 3) + 2;
    if (v12 >> 61)
      abort();
    v13 = (__dst - v11) >> 3;
    v14 = v8 - (_QWORD)v11;
    v15 = v14 >> 2;
    if (v14 >> 2 <= v12)
      v15 = ((uint64_t)(v10 - *(_QWORD *)a1) >> 3) + 2;
    if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFF8)
      v16 = 0x1FFFFFFFFFFFFFFFLL;
    else
      v16 = v15;
    __p[4] = v7;
    if (v16)
      v17 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<unsigned long>>((uint64_t)v7, v16);
    else
      v17 = 0;
    v26 = &v17[8 * v13];
    __p[0] = v17;
    __p[1] = v26;
    *(_QWORD *)v26 = *(_QWORD *)__src;
    *((_QWORD *)v26 + 1) = *((_QWORD *)__src + 1);
    __p[2] = v26 + 16;
    __p[3] = &v17[8 * v16];
    std::vector<unsigned long>::__swap_out_circular_buffer((void **)a1, (uint64_t)__p, __dst);
    if (__p[0])
      operator delete(__p[0]);
    return;
  }
  v18 = v10 - (_QWORD)__dst;
  if ((uint64_t)(v10 - (_QWORD)__dst) > 15)
  {
    v19 = __src + 16;
    v21 = *(char **)(a1 + 8);
LABEL_16:
    v22 = __dst + 16;
    v23 = v21 - 16;
    v24 = v21;
    if ((unint64_t)(v21 - 16) < v10)
    {
      v24 = v21;
      do
      {
        v25 = *(_QWORD *)v23;
        v23 += 8;
        *(_QWORD *)v24 = v25;
        v24 += 8;
      }
      while ((unint64_t)v23 < v10);
    }
    *(_QWORD *)(a1 + 8) = v24;
    if (v21 != v22)
      memmove(&v21[-8 * ((v21 - v22) >> 3)], __dst, v21 - v22);
    if (v19 != __src)
      memmove(__dst, __src, v19 - __src);
    return;
  }
  v19 = &__src[v18];
  v20 = a4 - &__src[v18];
  if (a4 != &__src[v18])
    memmove(*(void **)(a1 + 8), &__src[v18], a4 - &__src[v18]);
  v21 = (char *)(v10 + v20);
  *(_QWORD *)(a1 + 8) = v10 + v20;
  if (v18 >= 1)
    goto LABEL_16;
}

void _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2EEE10__dispatchB8nn180100IOZNS0_6__dtorINS0_8__traitsIJ9_UIBitSetILm256EE14_UISmallVectorItLm16EENS_6vectorImNS_9allocatorImEEEEEEELNS0_6_TraitE1EE9__destroyB8nn180100EvEUlRT_E_JRNS0_6__baseILSH_1EJS9_SB_SF_EEEEEEDcSJ_DpT0_(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = *(void **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)(a2 + 8) = v2;
    operator delete(v2);
  }
}

__n128 _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm0ELm0EEE10__dispatchB8nn180100IOZNS0_12__assignmentINS0_8__traitsIJ9_UIBitSetILm256EE14_UISmallVectorItLm16EENS_6vectorImNS_9allocatorImEEEEEEEE16__generic_assignB8nn180100IRKNS0_17__copy_assignmentISG_LNS0_6_TraitE1EEEEEvOT_EUlRSO_OT0_E_JRNS0_6__baseILSK_1EJS9_SB_SF_EEERKSW_EEEDcSO_DpT0_(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  __n128 result;
  __int128 v7;
  __int128 v8;
  char v9;

  v4 = *a1;
  v5 = *(unsigned int *)(*a1 + 48);
  if ((_DWORD)v5 != -1)
  {
    if (!(_DWORD)v5)
    {
      result = *(__n128 *)a3;
      v7 = *(_OWORD *)(a3 + 16);
      *a2 = *(_OWORD *)a3;
      a2[1] = v7;
      return result;
    }
    ((void (*)(char *, uint64_t))off_1E16C5078[v5])(&v9, v4);
  }
  *(_DWORD *)(v4 + 48) = -1;
  result = *(__n128 *)a3;
  v8 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a3;
  *(_OWORD *)(v4 + 16) = v8;
  *(_DWORD *)(v4 + 48) = 0;
  return result;
}

__n128 _ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm1ELm1EEE10__dispatchB8nn180100IOZNS0_12__assignmentINS0_8__traitsIJ9_UIBitSetILm256EE14_UISmallVectorItLm16EENS_6vectorImNS_9allocatorImEEEEEEEE16__generic_assignB8nn180100IRKNS0_17__copy_assignmentISG_LNS0_6_TraitE1EEEEEvOT_EUlRSO_OT0_E_JRNS0_6__baseILSK_1EJS9_SB_SF_EEERKSW_EEEDcSO_DpT0_(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  __n128 result;
  __int128 v7;
  __int128 v8;
  char v9;

  v4 = *a1;
  v5 = *(unsigned int *)(*a1 + 48);
  if ((_DWORD)v5 != -1)
  {
    if ((_DWORD)v5 == 1)
    {
      result = *(__n128 *)a3;
      v7 = *(_OWORD *)(a3 + 16);
      *(_QWORD *)(a2 + 32) = *(_QWORD *)(a3 + 32);
      *(__n128 *)a2 = result;
      *(_OWORD *)(a2 + 16) = v7;
      return result;
    }
    ((void (*)(char *, uint64_t))off_1E16C5078[v5])(&v9, v4);
  }
  *(_DWORD *)(v4 + 48) = -1;
  result = *(__n128 *)a3;
  v8 = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v4 + 32) = v8;
  *(__n128 *)v4 = result;
  *(_DWORD *)(v4 + 48) = 1;
  return result;
}

uint64_t *_ZNSt3__116__variant_detail12__visitation6__base12__dispatcherIJLm2ELm2EEE10__dispatchB8nn180100IOZNS0_12__assignmentINS0_8__traitsIJ9_UIBitSetILm256EE14_UISmallVectorItLm16EENS_6vectorImNS_9allocatorImEEEEEEEE16__generic_assignB8nn180100IRKNS0_17__copy_assignmentISG_LNS0_6_TraitE1EEEEEvOT_EUlRSO_OT0_E_JRNS0_6__baseILSK_1EJS9_SB_SF_EEERKSW_EEEDcSO_DpT0_(uint64_t *result, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  int v4;
  char *v6;
  char *v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  void **v14;
  char *v15;
  _BYTE *v16;
  char *v17;
  int64_t v18;
  char *v19;
  char *v20;
  _BYTE *v21;
  unint64_t v22;
  char *v23;
  void *v24;
  char *v25;
  uint64_t v26;
  void *__dst;
  uint64_t v28;
  char v29;

  v3 = *result;
  v4 = *(_DWORD *)(*result + 48);
  if (v4 == 2)
  {
    if (a2 == a3)
      return result;
    v6 = (char *)*a3;
    v7 = (char *)a3[1];
    v8 = (int64_t)&v7[-*a3];
    v9 = v8 >> 3;
    v10 = a2[2];
    v11 = (char *)*a2;
    if (v8 >> 3 <= (unint64_t)((v10 - *a2) >> 3))
    {
      v14 = (void **)(a2 + 1);
      v21 = (_BYTE *)a2[1];
      v22 = (v21 - v11) >> 3;
      if (v22 < v9)
      {
        v23 = &v6[8 * v22];
        if (v21 != v11)
        {
          result = (uint64_t *)memmove(v11, v6, v21 - v11);
          v11 = (char *)*v14;
        }
        v8 = v7 - v23;
        if (v7 == v23)
          goto LABEL_27;
        v24 = v11;
        v25 = v23;
        goto LABEL_26;
      }
    }
    else
    {
      if (v11)
      {
        a2[1] = v11;
        operator delete(v11);
        v10 = 0;
        *a2 = 0;
        a2[1] = 0;
        a2[2] = 0;
      }
      if (v8 < 0)
        abort();
      v12 = v10 >> 2;
      if (v10 >> 2 <= v9)
        v12 = v8 >> 3;
      if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8)
        v13 = 0x1FFFFFFFFFFFFFFFLL;
      else
        v13 = v12;
      result = (uint64_t *)std::vector<unsigned long>::__vallocate[abi:nn180100](a2, v13);
      v15 = (char *)a2[1];
      v14 = (void **)(a2 + 1);
      v11 = v15;
    }
    if (v7 == v6)
    {
LABEL_27:
      *v14 = &v11[v8];
      return result;
    }
    v24 = v11;
    v25 = v6;
LABEL_26:
    result = (uint64_t *)memmove(v24, v25, v8);
    goto LABEL_27;
  }
  v17 = (char *)*a3;
  v16 = (_BYTE *)a3[1];
  v26 = 0;
  __dst = 0;
  v28 = 0;
  v18 = v16 - v17;
  if (v16 == v17)
  {
    v20 = 0;
  }
  else
  {
    std::vector<unsigned long>::__vallocate[abi:nn180100](&v26, v18 >> 3);
    v19 = (char *)__dst;
    result = (uint64_t *)memmove(__dst, v17, v18);
    v20 = &v19[v18];
    __dst = &v19[v18];
    v4 = *(_DWORD *)(v3 + 48);
  }
  if (v4 != -1)
  {
    result = (uint64_t *)((uint64_t (*)(char *, uint64_t))off_1E16C5078[v4])(&v29, v3);
    v20 = (char *)__dst;
  }
  *(_QWORD *)v3 = v26;
  *(_QWORD *)(v3 + 8) = v20;
  *(_QWORD *)(v3 + 16) = v28;
  *(_DWORD *)(v3 + 48) = 2;
  return result;
}

__n128 std::__variant_detail::__assignment<std::__variant_detail::__traits<_UIBitSet<256ul>,_UISmallVector<unsigned short,16ul>,std::vector<unsigned long>>>::__assign_alt[abi:nn180100]<2ul,std::vector<unsigned long>,std::vector<unsigned long>>(uint64_t a1, uint64_t a2, __n128 *a3)
{
  uint64_t v5;
  void *v7;
  __n128 result;
  char v9;

  v5 = *(unsigned int *)(a1 + 48);
  if ((_DWORD)v5 == -1)
    goto LABEL_7;
  if ((_DWORD)v5 != 2)
  {
    ((void (*)(char *, uint64_t))off_1E16C5078[v5])(&v9, a1);
LABEL_7:
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    result = *a3;
    *(__n128 *)a1 = *a3;
    *(_QWORD *)(a1 + 16) = a3[1].n128_u64[0];
    a3->n128_u64[0] = 0;
    a3->n128_u64[1] = 0;
    a3[1].n128_u64[0] = 0;
    *(_DWORD *)(a1 + 48) = 2;
    return result;
  }
  v7 = *(void **)a2;
  if (*(_QWORD *)a2)
  {
    *(_QWORD *)(a2 + 8) = v7;
    operator delete(v7);
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
  }
  result = *a3;
  *(__n128 *)a2 = *a3;
  *(_QWORD *)(a2 + 16) = a3[1].n128_u64[0];
  a3->n128_u64[0] = 0;
  a3->n128_u64[1] = 0;
  a3[1].n128_u64[0] = 0;
  return result;
}

uint64_t _UIBitSet<256ul>::front(unint64_t *a1)
{
  unint64_t v1;
  uint64_t v2;

  v1 = __clz(__rbit64(*a1));
  if (v1 < 0x40)
  {
    v2 = 0;
    return v1 + v2;
  }
  v1 = __clz(__rbit64(a1[1]));
  if (v1 < 0x40)
  {
    v2 = 64;
    return v1 + v2;
  }
  v1 = __clz(__rbit64(a1[2]));
  if (v1 < 0x40)
  {
    v2 = 128;
    return v1 + v2;
  }
  v1 = __clz(__rbit64(a1[3]));
  if (v1 <= 0x3F)
  {
    v2 = 192;
    return v1 + v2;
  }
  return 256;
}

id _newInterfaceActionSectionsForAlertActionViewRepresentations(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  void (**v7)(_QWORD);
  void (**v8)(void *, void *);
  unint64_t i;
  void *v10;
  id v11;
  _QWORD v13[5];
  _QWORD aBlock[4];
  id v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[5];
  id v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  void (*v29)(uint64_t);
  id v30;

  v3 = a1;
  v4 = a2;
  v25 = 0;
  v26 = &v25;
  v27 = 0x3032000000;
  v28 = __Block_byref_object_copy__76;
  v29 = __Block_byref_object_dispose__76;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v30 = (id)objc_claimAutoreleasedReturnValue();
  v23[0] = 0;
  v23[1] = v23;
  v23[2] = 0x3032000000;
  v23[3] = __Block_byref_object_copy__76;
  v23[4] = __Block_byref_object_dispose__76;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v24 = (id)objc_claimAutoreleasedReturnValue();
  v19 = 0;
  v20 = &v19;
  v21 = 0x2020000000;
  v22 = 0;
  v22 = objc_msgSend(v4, "indexGreaterThanIndex:", 0);
  v5 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = ___newInterfaceActionSectionsForAlertActionViewRepresentations_block_invoke;
  aBlock[3] = &unk_1E16C5190;
  v16 = v23;
  v17 = &v25;
  v18 = &v19;
  v6 = v4;
  v15 = v6;
  v7 = (void (**)(_QWORD))_Block_copy(aBlock);
  v13[0] = v5;
  v13[1] = 3221225472;
  v13[2] = ___newInterfaceActionSectionsForAlertActionViewRepresentations_block_invoke_2;
  v13[3] = &unk_1E16C51B8;
  v13[4] = v23;
  v8 = (void (**)(void *, void *))_Block_copy(v13);
  for (i = 0; i < objc_msgSend(v3, "count"); ++i)
  {
    if (i == v20[3])
      v7[2](v7);
    objc_msgSend(v3, "objectAtIndexedSubscript:", i);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v8[2](v8, v10);

  }
  v7[2](v7);
  v11 = (id)v26[5];

  _Block_object_dispose(&v19, 8);
  _Block_object_dispose(v23, 8);

  _Block_object_dispose(&v25, 8);
  return v11;
}

void sub_185B760B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_185B78460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ___newInterfaceActionSectionsForAlertActionViewRepresentations_block_invoke(uint64_t a1)
{
  void *v2;
  UIInterfaceActionSection *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "count"))
  {
    v2 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40);
    v3 = -[UIInterfaceActionSection initWithActions:]([UIInterfaceActionSection alloc], "initWithActions:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40));
    objc_msgSend(v2, "addObject:", v3);

  }
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = objc_msgSend(*(id *)(a1 + 32), "indexGreaterThanIndex:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8)+ 24));
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v6 = *(void **)(v5 + 40);
  *(_QWORD *)(v5 + 40) = v4;

}

void ___newInterfaceActionSectionsForAlertActionViewRepresentations_block_invoke_2(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  objc_msgSend(v5, "action");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "_interfaceActionRepresentation");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v4)
  {
    +[_UIAlertControllerActionViewInterfaceAction actionWithAlertControllerActionView:](_UIAlertControllerActionViewInterfaceAction, "actionWithAlertControllerActionView:", v5);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
  }
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "addObject:", v4);

}

void sub_185B80664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185B81BB4(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void sub_185B82B30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, id *a11, id *a12, id *a13)
{
  uint64_t v13;

  objc_destroyWeak((id *)(v13 - 112));
  _Unwind_Resume(a1);
}

void sub_185B83758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;
  id *v24;

  objc_destroyWeak(v24);
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185B85BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185B86BB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  _Block_object_dispose(&a43, 8);
  _Unwind_Resume(a1);
}

void sub_185B86FE8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

id _UIKBMediaLog()
{
  if (qword_1ECD7D8E0 != -1)
    dispatch_once(&qword_1ECD7D8E0, &__block_literal_global_703);
  return (id)qword_1ECD7D8D8;
}

Class __getVKCStickerEffectClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7D8D0)
    qword_1ECD7D8D0 = _sl_dlopen();
  if (!qword_1ECD7D8D0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *VisionKitCoreLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("UIKeyboardMediaController.m"), 39, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("VKCStickerEffect");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getVKCStickerEffectClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UIKeyboardMediaController.m"), 40, CFSTR("Unable to find class %s"), "VKCStickerEffect");

LABEL_8:
    __break(1u);
  }
  qword_1ECD7D8C8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t selectorDescription(const char *a1)
{
  return objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", sel_getName(a1));
}

uint64_t _UITextFormattingViewControllerComponentKeyForAnimation(uint64_t a1)
{
  return objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("_UITextFormattingTextAnimationCustomComponentKey_%@"), a1);
}

id _UITextFormattingViewControllerCustomComponentClasses()
{
  if (qword_1ECD79DE0 != -1)
    dispatch_once(&qword_1ECD79DE0, &__block_literal_global_189);
  return (id)_MergedGlobals_1_8;
}

id _UITextFormattingViewControllerComponentGroupClasses()
{
  if (qword_1ECD79DF0 != -1)
    dispatch_once(&qword_1ECD79DF0, &__block_literal_global_123_1);
  return (id)qword_1ECD79DE8;
}

void sub_185B8E11C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185B9221C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id UIKBAnalyticsUndoPanForState(unint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;

  v1 = (void *)MEMORY[0x1E0CB3940];
  _UIGestureRecognizerStateString(a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stringWithFormat:", CFSTR("%@ Undo/Redo pan"), v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

__CFString *UIKBAnalyticsOperationForControlType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) < 5)
    return off_1E16C5B68[a1 - 1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown_%li"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *UIKBAnalyticsSelectionTypeForGranularity(unint64_t a1)
{
  if (a1 < 6)
    return off_1E16C5B90[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown_%li"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *UIKBAnalyticsSelectionTypeForGestureState(unint64_t a1)
{
  if (a1 < 8)
    return off_1E16C5BC0[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown_%li"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_185B94638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getCHHapticPriorityHigh()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getCHHapticPriorityHighSymbolLoc_ptr;
  v8 = getCHHapticPriorityHighSymbolLoc_ptr;
  if (!getCHHapticPriorityHighSymbolLoc_ptr)
  {
    v1 = CoreHapticsLibrary_1();
    v0 = (id *)dlsym(v1, "CHHapticPriorityHigh");
    v6[3] = (uint64_t)v0;
    getCHHapticPriorityHighSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticPriority getCHHapticPriorityHigh(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 34, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B94730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185B94BBC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _internal_populateParamtersFromPattern(void *a1, void **a2, void **a3)
{
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;

  v14 = a1;
  objc_msgSend(v14, "parameterCurves");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "count");

  if (v6)
  {
    v7 = *a3;
    objc_msgSend(v14, "parameterCurves");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "arrayByAddingObjectsFromArray:", v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_5:
    *a3 = v9;

    v12 = v14;
    goto LABEL_6;
  }
  objc_msgSend(v14, "parameters");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "count");

  v12 = v14;
  if (v11)
  {
    v13 = *a2;
    objc_msgSend(v14, "parameters");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "arrayByAddingObjectsFromArray:", v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    a3 = a2;
    goto LABEL_5;
  }
LABEL_6:

}

void sub_185B953A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185B964AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getCHHapticEventTypeAudioClick()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getCHHapticEventTypeAudioClickSymbolLoc_ptr;
  v8 = getCHHapticEventTypeAudioClickSymbolLoc_ptr;
  if (!getCHHapticEventTypeAudioClickSymbolLoc_ptr)
  {
    v1 = CoreHapticsLibrary_1();
    v0 = (id *)dlsym(v1, "CHHapticEventTypeAudioClick");
    v6[3] = (uint64_t)v0;
    getCHHapticEventTypeAudioClickSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticEventType getCHHapticEventTypeAudioClick(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 44, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B9695C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getCHHapticEventTypeWheelsOfTime()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getCHHapticEventTypeWheelsOfTimeSymbolLoc_ptr;
  v8 = getCHHapticEventTypeWheelsOfTimeSymbolLoc_ptr;
  if (!getCHHapticEventTypeWheelsOfTimeSymbolLoc_ptr)
  {
    v1 = CoreHapticsLibrary_1();
    v0 = (id *)dlsym(v1, "CHHapticEventTypeWheelsOfTime");
    v6[3] = (uint64_t)v0;
    getCHHapticEventTypeWheelsOfTimeSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticPrivilegedEventType getCHHapticEventTypeWheelsOfTime(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 45, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B96A54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getCHHapticEventTypeAudioContinuous()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getCHHapticEventTypeAudioContinuousSymbolLoc_ptr;
  v8 = getCHHapticEventTypeAudioContinuousSymbolLoc_ptr;
  if (!getCHHapticEventTypeAudioContinuousSymbolLoc_ptr)
  {
    v1 = CoreHapticsLibrary_1();
    v0 = (id *)dlsym(v1, "CHHapticEventTypeAudioContinuous");
    v6[3] = (uint64_t)v0;
    getCHHapticEventTypeAudioContinuousSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticEventType getCHHapticEventTypeAudioContinuous(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 42, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B96B4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getCHHapticEventParameterIDAudioPan()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getCHHapticEventParameterIDAudioPanSymbolLoc_ptr;
  v8 = getCHHapticEventParameterIDAudioPanSymbolLoc_ptr;
  if (!getCHHapticEventParameterIDAudioPanSymbolLoc_ptr)
  {
    v1 = CoreHapticsLibrary_1();
    v0 = (id *)dlsym(v1, "CHHapticEventParameterIDAudioPan");
    v6[3] = (uint64_t)v0;
    getCHHapticEventParameterIDAudioPanSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticEventParameterID getCHHapticEventParameterIDAudioPan(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 59, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B96C44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getCHHapticEventParameterIDAudioBrightness()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getCHHapticEventParameterIDAudioBrightnessSymbolLoc_ptr;
  v8 = getCHHapticEventParameterIDAudioBrightnessSymbolLoc_ptr;
  if (!getCHHapticEventParameterIDAudioBrightnessSymbolLoc_ptr)
  {
    v1 = CoreHapticsLibrary_1();
    v0 = (id *)dlsym(v1, "CHHapticEventParameterIDAudioBrightness");
    v6[3] = (uint64_t)v0;
    getCHHapticEventParameterIDAudioBrightnessSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticEventParameterID getCHHapticEventParameterIDAudioBrightness(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 60, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B96D3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void getCHHapticEventParameterIDSustained()
{
  id *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (id *)getCHHapticEventParameterIDSustainedSymbolLoc_ptr;
  v8 = getCHHapticEventParameterIDSustainedSymbolLoc_ptr;
  if (!getCHHapticEventParameterIDSustainedSymbolLoc_ptr)
  {
    v1 = CoreHapticsLibrary_1();
    v0 = (id *)dlsym(v1, "CHHapticEventParameterIDSustained");
    v6[3] = (uint64_t)v0;
    getCHHapticEventParameterIDSustainedSymbolLoc_ptr = (uint64_t)v0;
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v2 = *v0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CHHapticEventParameterID getCHHapticEventParameterIDSustained(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 55, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185B96E34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getCHHapticDynamicParameterClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  CoreHapticsLibrary_1();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("CHHapticDynamicParameter");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7AB40 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getCHHapticDynamicParameterClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("_UIFeedbackCoreHapticsEngineUtilities.h"), 23, CFSTR("Unable to find class %s"), "CHHapticDynamicParameter");

    __break(1u);
  }
}

NSObject *_UIFeedbackPreciseDispatchAfter(void *a1, void *a2, double a3)
{
  NSObject *v5;
  id v6;
  id v7;
  dispatch_source_t v8;
  NSObject *v9;
  id v10;
  dispatch_time_t v11;
  NSObject *v12;
  NSObject *v13;
  _QWORD v15[4];
  NSObject *v16;
  id v17;

  v5 = a1;
  v6 = a2;
  if (!v5)
  {
    v5 = MEMORY[0x1E0C80D38];
    v7 = MEMORY[0x1E0C80D38];
  }
  v8 = dispatch_source_create(MEMORY[0x1E0C80DD0], 0, 1uLL, v5);
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = ___UIFeedbackPreciseDispatchAfter_block_invoke;
  v15[3] = &unk_1E16B2F48;
  v17 = v6;
  v9 = v8;
  v16 = v9;
  v10 = v6;
  dispatch_source_set_event_handler(v9, v15);
  v11 = dispatch_time(0, (uint64_t)(a3 * 1000000000.0));
  dispatch_source_set_timer(v9, v11, 0xFFFFFFFFFFFFFFFFLL, 0);
  dispatch_activate(v9);
  v12 = v16;
  v13 = v9;

  return v13;
}

void sub_185B982D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getSDRDiagnosticReporterClass_block_invoke_0(uint64_t a1)
{
  void *v2;
  void *v3;

  SymptomDiagnosticReporterLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("SDRDiagnosticReporter");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    qword_1ECD7B8C8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getSDRDiagnosticReporterClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("_UIFeedbackEngine.m"), 35, CFSTR("Unable to find class %s"), "SDRDiagnosticReporter");

    __break(1u);
  }
}

void *SymptomDiagnosticReporterLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!SymptomDiagnosticReporterLibraryCore_frameworkLibrary)
    SymptomDiagnosticReporterLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)SymptomDiagnosticReporterLibraryCore_frameworkLibrary;
  if (!SymptomDiagnosticReporterLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *SymptomDiagnosticReporterLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("_UIFeedbackEngine.m"), 34, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

id _UIKeyboardImplLog()
{
  if (_UIKeyboardImplLog_onceToken != -1)
    dispatch_once(&_UIKeyboardImplLog_onceToken, &__block_literal_global_194);
  return (id)_UIKeyboardImplLog_log;
}

id CatalystTextInputLog_UIKit()
{
  if (CatalystTextInputLog_UIKit_onceToken != -1)
    dispatch_once(&CatalystTextInputLog_UIKit_onceToken, &__block_literal_global_6_3);
  return (id)CatalystTextInputLog_UIKit_log;
}

id _UIKeyboardTaskQueueLog()
{
  if (_UIKeyboardTaskQueueLog_onceToken != -1)
    dispatch_once(&_UIKeyboardTaskQueueLog_onceToken, &__block_literal_global_10_0);
  return (id)_UIKeyboardTaskQueueLog_log;
}

id _UIKeyboardSmartReplyLog()
{
  if (_UIKeyboardSmartReplyLog_onceToken != -1)
    dispatch_once(&_UIKeyboardSmartReplyLog_onceToken, &__block_literal_global_16_1);
  return (id)_UIKeyboardSmartReplyLog_log;
}

void sub_185B99C48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185B9ABCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a20, 8);
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_185B9AE7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185B9B2F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_185B9C260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double _UIFocusAnimationNormalizedDurationScaleFactorInContext(void *a1)
{
  id v1;
  void *v2;
  double v3;
  double v4;
  long double v5;
  long double v6;
  double v7;
  double v8;
  int v9;
  double v10;

  v1 = a1;
  v2 = v1;
  v3 = 1.0;
  if (v1)
  {
    objc_msgSend(v1, "_focusVelocity");
    v5 = v4;
    objc_msgSend(v2, "_focusVelocity");
    v7 = hypot(v5, v6);
    v8 = _UIInternalPreferenceUsesDefault_1((int *)&unk_1ECD762D0, (uint64_t)CFSTR("FocusAnimationNormalizedDurationScaleFactorSlowThreshold"))? 0.0: *(double *)&qword_1ECD762D8;
    v9 = _UIInternalPreferenceUsesDefault_1((int *)&unk_1ECD762E0, (uint64_t)CFSTR("FocusAnimationNormalizedDurationScaleFactorFastThreshold"));
    if (v7 >= v8)
    {
      v10 = *(double *)&qword_1ECD762E8;
      if (v9)
        v10 = 30000.0;
      v3 = fmin(fmax(1.0 - (v7 - v8) / v10, 0.0), 1.0);
    }
  }

  return v3;
}

void sub_185B9E580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t _UIFocusItemIsViewOrRespondsToSelector(void *a1)
{
  id v1;
  char v2;

  v1 = a1;
  if ((_IsKindOfUIView((uint64_t)v1) & 1) != 0)
    v2 = 1;
  else
    v2 = objc_opt_respondsToSelector();

  return v2 & 1;
}

uint64_t _UIFocusEnvironmentIsViewOrViewControllerOrRespondsToSelector(void *a1)
{
  id v1;
  char v2;

  v1 = a1;
  if ((_IsKindOfUIView((uint64_t)v1) & 1) != 0 || (objc_msgSend(v1, "__isKindOfUIViewController") & 1) != 0)
    v2 = 1;
  else
    v2 = objc_opt_respondsToSelector();

  return v2 & 1;
}

id _UIFocusItemSafeCast(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  if ((_IsKindOfUIView((uint64_t)v1) & 1) != 0 || objc_msgSend(v1, "conformsToProtocol:", &unk_1EDDD4930))
    v2 = v1;
  else
    v2 = 0;

  return v2;
}

id _UIFocusEnvironmentSafeCast(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  if ((_IsKindOfUIView((uint64_t)v1) & 1) != 0
    || (objc_msgSend(v1, "__isKindOfUIViewController") & 1) != 0
    || objc_msgSend(v1, "conformsToProtocol:", &unk_1EDDD4840))
  {
    v2 = v1;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

id _UIFocusEnvironmentRootAncestorEnvironment(void *a1)
{
  id v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v7;
  void *v8;

  v1 = a1;
  if (!v1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "id<UIFocusEnvironment>  _Nonnull _UIFocusEnvironmentRootAncestorEnvironment(__strong id<UIFocusEnvironment> _Nonnull)");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "handleFailureInFunction:file:lineNumber:description:", v8, CFSTR("UIFocusEnvironment.m"), 97, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("environment"));

  }
  v2 = v1;
  _UIFocusEnvironmentParentEnvironment(v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = v2;
  if (v3)
  {
    v5 = v2;
    do
    {
      v4 = v3;

      _UIFocusEnvironmentParentEnvironment(v4);
      v3 = (void *)objc_claimAutoreleasedReturnValue();

      v5 = v4;
    }
    while (v3);
  }

  return v4;
}

uint64_t _UIFocusEnvironmentIsFocusedOrContainsFocus(void *a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t IsAncestorOfEnvironment;
  void *v7;
  void *v8;

  v1 = a1;
  if (!v1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _UIFocusEnvironmentIsFocusedOrContainsFocus(__strong id<UIFocusEnvironment> _Nonnull)");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "handleFailureInFunction:file:lineNumber:description:", v8, CFSTR("UIFocusEnvironment.m"), 133, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("environment"));

  }
  +[UIFocusSystem focusSystemForEnvironment:](UIFocusSystem, "focusSystemForEnvironment:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if ((_UIInternalPreferenceUsesDefault_0(&_UIInternalPreference_FocusEnvironmentUseLegacyIsFocusedOrContainsFocusLogic, (uint64_t)CFSTR("FocusEnvironmentUseLegacyIsFocusedOrContainsFocusLogic")) & 1) != 0|| !byte_1EDDA7D6C)
  {
    IsAncestorOfEnvironment = objc_msgSend(v2, "_focusedItemIsContainedInEnvironment:includeSelf:", v1, 1);
  }
  else
  {
    objc_msgSend(v2, "focusedItem");
    v3 = (id)objc_claimAutoreleasedReturnValue();
    v4 = v3;
    if (v3 == v1)
    {
      IsAncestorOfEnvironment = 1;
    }
    else if (v3)
    {
      IsAncestorOfEnvironment = _UIFocusEnvironmentIsAncestorOfEnvironment(v1, v3);
    }
    else
    {
      IsAncestorOfEnvironment = 0;
    }

  }
  return IsAncestorOfEnvironment;
}

id _UIFocusEnvironmentFirstCommonAncestor(void *a1, void *a2)
{
  return _UITreeFirstCommonAncestor(a1, a2, sel_parentFocusEnvironment);
}

BOOL _UIFocusEnvironmentsHaveCommonHierarchy(void *a1, void *a2)
{
  _BOOL8 v2;
  id v4;
  id v5;
  id v6;

  v2 = 0;
  if (a1 && a2)
  {
    v4 = a2;
    v5 = a1;
    _UITreeFirstCommonAncestor(v5, v4, sel_parentFocusEnvironment);
    v6 = (id)objc_claimAutoreleasedReturnValue();

    v2 = v6 == v5 || v6 == v4;
  }
  return v2;
}

uint64_t _UIFocusEnvironmentShouldUpdateFocus(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v8;
  void *v9;

  v3 = a1;
  v4 = a2;
  if (!v4)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _UIFocusEnvironmentShouldUpdateFocus(__strong id<UIFocusEnvironment> _Nonnull, UIFocusUpdateContext *__strong _Nonnull)");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "handleFailureInFunction:file:lineNumber:description:", v9, CFSTR("UIFocusEnvironment.m"), 183, CFSTR("Attempted to validate a focus update with a nil context."));

  }
  if (_UIFocusItemIsViewOrRespondsToSelector(v3))
  {
    v5 = objc_msgSend(v3, "_shouldUpdateFocusInContext:", v4);
  }
  else
  {
    if (!_UIFocusEnvironmentIsViewOrViewControllerOrRespondsToSelector(v3))
    {
      v6 = 1;
      goto LABEL_9;
    }
    v5 = objc_msgSend(v3, "shouldUpdateFocusInContext:", v4);
  }
  v6 = v5;
LABEL_9:

  return v6;
}

uint64_t _UIFocusEnvironmentInheritedFocusMovementStyle(void *a1)
{
  id v1;
  uint64_t v2;
  void *v4;
  void *v5;
  _QWORD v6[5];
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;

  v1 = a1;
  if (!v1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "_UIFocusMovementStyle _UIFocusEnvironmentInheritedFocusMovementStyle(__strong id<UIFocusEnvironment> _Nonnull)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UIFocusEnvironment.m"), 198, CFSTR("Cannot determine preferred focus movement style for nil focus environment."), 0);

  }
  v7 = 0;
  v8 = &v7;
  v9 = 0x2020000000;
  v10 = 0;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = ___UIFocusEnvironmentInheritedFocusMovementStyle_block_invoke;
  v6[3] = &unk_1E16C6008;
  v6[4] = &v7;
  _UIFocusEnvironmentEnumerateAncestorEnvironments(v1, v6);
  v2 = v8[3];
  if (!v2)
  {
    v2 = 1;
    v8[3] = 1;
  }
  _Block_object_dispose(&v7, 8);

  return v2;
}

void sub_185BA09C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _UIFocusEnvironmentIsEligibleForFocusInteraction(void *a1)
{
  id v1;
  uint64_t v2;
  void *v4;
  void *v5;

  v1 = a1;
  if (!v1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _UIFocusEnvironmentIsEligibleForFocusInteraction(__strong id<UIFocusEnvironment> _Nonnull)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UIFocusEnvironment.m"), 223, CFSTR("Cannot determine the focus interaction eligibility for a nil focus environment."));

  }
  if (_UIFocusItemIsViewOrRespondsToSelector(v1))
    v2 = objc_msgSend(v1, "_isEligibleForFocusInteraction");
  else
    v2 = 1;

  return v2;
}

uint64_t _UIFocusEnvironmentIsEligibleForFocusOcclusion(void *a1, _BYTE *a2)
{
  id v3;
  char IsEligibleForFocusInteraction;
  uint64_t v5;
  void *v7;
  void *v8;

  v3 = a1;
  if (!v3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _UIFocusEnvironmentIsEligibleForFocusOcclusion(__strong id<UIFocusEnvironment> _Nonnull, BOOL * _Nullable)");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "handleFailureInFunction:file:lineNumber:description:", v8, CFSTR("UIFocusEnvironment.m"), 235, CFSTR("Cannot determine the focus occlusion eligibility for a nil focus environment."));

  }
  IsEligibleForFocusInteraction = _UIFocusEnvironmentIsEligibleForFocusInteraction(v3);
  if (a2)
    *a2 = IsEligibleForFocusInteraction;
  if ((IsEligibleForFocusInteraction & 1) != 0)
  {
    v5 = 1;
  }
  else if (_UIFocusItemIsViewOrRespondsToSelector(v3))
  {
    v5 = objc_msgSend(v3, "_isEligibleForFocusOcclusion");
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

uint64_t _UIFocusEnvironmentAndAncestorsAreEligibleForFocusInteraction(void *a1)
{
  id v1;
  uint64_t v2;
  void *v4;
  void *v5;
  _QWORD v6[5];
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  char v10;

  v1 = a1;
  if (!v1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _UIFocusEnvironmentAndAncestorsAreEligibleForFocusInteraction(__strong id<UIFocusEnvironment> _Nonnull)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UIFocusEnvironment.m"), 255, CFSTR("Cannot determine the focus interaction eligibility for a nil focus environment."));

  }
  v7 = 0;
  v8 = &v7;
  v9 = 0x2020000000;
  v10 = 1;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = ___UIFocusEnvironmentAndAncestorsAreEligibleForFocusInteraction_block_invoke;
  v6[3] = &unk_1E16C6008;
  v6[4] = &v7;
  _UIFocusEnvironmentEnumerateAncestorEnvironments(v1, v6);
  v2 = *((unsigned __int8 *)v8 + 24);
  _Block_object_dispose(&v7, 8);

  return v2;
}

void sub_185BA0CEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _UIFocusEnvironmentPreferredFocusMapContainer(void *a1)
{
  id v1;
  id v2;
  void *v4;
  void *v5;
  _QWORD v6[5];
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  void (*v11)(uint64_t);
  id v12;

  v1 = a1;
  if (!v1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "id<_UIFocusRegionContainer>  _Nullable _UIFocusEnvironmentPreferredFocusMapContainer(__strong id<UIFocusEnvironment> _Nonnull)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UIFocusEnvironment.m"), 283, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("environment"));

  }
  v7 = 0;
  v8 = &v7;
  v9 = 0x3032000000;
  v10 = __Block_byref_object_copy__82;
  v11 = __Block_byref_object_dispose__82;
  v12 = 0;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = ___UIFocusEnvironmentPreferredFocusMapContainer_block_invoke;
  v6[3] = &unk_1E16C6008;
  v6[4] = &v7;
  _UIFocusEnvironmentEnumerateAncestorEnvironments(v1, v6);
  v2 = (id)v8[5];
  _Block_object_dispose(&v7, 8);

  return v2;
}

void sub_185BA0E74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double _UIFocusEnvironmentContainerFrameInCoordinateSpace(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  double x;
  void *v7;
  void *v8;
  void *v9;
  double v10;
  CGRect v12;

  v3 = a1;
  v4 = a2;
  _UIFocusItemSafeCast(v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v12.origin.x = _UIFocusItemFrameInCoordinateSpace(v5, v4);
  x = v12.origin.x;
  if (CGRectIsNull(v12))
  {
    objc_msgSend(v3, "focusItemContainer");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "coordinateSpace");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = v8;
    if (v7 && v8)
    {
      objc_msgSend(v8, "bounds");
      objc_msgSend(v4, "convertRect:fromCoordinateSpace:", v9);
      x = v10;
    }

  }
  return x;
}

id _UIFocusEnvironmentPreferredNodeToFocusedItem(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  BOOL v7;
  id v8;
  _QWORD v10[4];
  id v11;
  id v12;
  uint64_t *v13;
  _QWORD *v14;
  _QWORD v15[5];
  id v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  void (*v21)(uint64_t);
  id v22;

  v3 = a1;
  v4 = a2;
  +[UIFocusSystem focusSystemForEnvironment:](UIFocusSystem, "focusSystemForEnvironment:", v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "focusedItem");
  v6 = (id)objc_claimAutoreleasedReturnValue();

  if (v6)
    v7 = v6 == v3;
  else
    v7 = 1;
  if (v7)
  {
    v8 = 0;
  }
  else
  {
    v17 = 0;
    v18 = &v17;
    v19 = 0x3032000000;
    v20 = __Block_byref_object_copy__82;
    v21 = __Block_byref_object_dispose__82;
    v22 = 0;
    v15[0] = 0;
    v15[1] = v15;
    v15[2] = 0x3032000000;
    v15[3] = __Block_byref_object_copy__82;
    v15[4] = __Block_byref_object_dispose__82;
    v16 = 0;
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = ___UIFocusEnvironmentPreferredNodeToFocusedItem_block_invoke;
    v10[3] = &unk_1E16C5FB8;
    v11 = v3;
    v13 = &v17;
    v14 = v15;
    v12 = v4;
    _UIFocusEnvironmentEnumerateAncestorEnvironments(v6, v10);
    v8 = (id)v18[5];

    _Block_object_dispose(v15, 8);
    _Block_object_dispose(&v17, 8);

  }
  return v8;
}

void sub_185BA11AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t _UIFocusEnvironmentRotaryFocusMovementAxis(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    if (_UIFocusEnvironmentIsViewOrViewControllerOrRespondsToSelector(v1))
      v3 = objc_msgSend(v2, "_rotaryFocusMovementAxis");
    else
      v3 = _UIFocusEnvironmentDefaultRotaryFocusMovementAxis(v2);
    v4 = v3;
  }
  else
  {
    v4 = -1;
  }

  return v4;
}

uint64_t _UIFocusEnvironmentDefaultRotaryFocusMovementAxis(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    objc_msgSend(v1, "focusItemContainer");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (_UIFocusItemContainerIsScrollableContainer(v3)
      && _UIFocusEnvironmentPrefersFocusContainment(v2))
    {
      v4 = _UIFocusItemScrollableContainerPrimaryAxis(v3);
      if (v4 == 2)
        v5 = 2;
      else
        v5 = -1;
      if (v4 == 1)
        v6 = 1;
      else
        v6 = v5;
    }
    else
    {
      v6 = -1;
    }

  }
  else
  {
    v6 = -1;
  }

  return v6;
}

uint64_t _UIFocusEnvironmentPrefersFocusContainment(void *a1)
{
  id v1;
  uint64_t IsScrollableContainer;
  void *v3;

  v1 = a1;
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    IsScrollableContainer = objc_msgSend(v1, "_prefersFocusContainment");
  }
  else
  {
    objc_msgSend(v1, "focusItemContainer");
    v3 = (void *)objc_claimAutoreleasedReturnValue();

    IsScrollableContainer = _UIFocusItemContainerIsScrollableContainer(v3);
    v1 = v3;
  }

  return IsScrollableContainer;
}

uint64_t _UIFocusEnvironmentResolvedRotaryFocusMovementAxis(void *a1, _QWORD *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  char v6;
  char v7;
  void *v8;
  void *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  void *v16;
  _QWORD v18[6];
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;

  v3 = a1;
  v4 = v3;
  v5 = -1;
  if (!v3)
    goto LABEL_19;
  v23 = 0;
  v24 = &v23;
  v25 = 0x3032000000;
  v26 = __Block_byref_object_copy__82;
  v27 = __Block_byref_object_dispose__82;
  v28 = 0;
  v19 = 0;
  v20 = &v19;
  v21 = 0x2020000000;
  v22 = -1;
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = ___UIFocusEnvironmentResolvedRotaryFocusMovementAxis_block_invoke;
  v18[3] = &unk_1E16C5FE0;
  v18[4] = &v19;
  v18[5] = &v23;
  _UIFocusEnvironmentEnumerateAncestorEnvironments(v3, v18);
  if (v20[3] == -1)
  {
    v6 = _UIInternalPreferenceUsesDefault_0(&_UIInternalPreference_FocusEnvironmentUseAncestorScrollableSizeForFallbackRotaryAxis, (uint64_t)CFSTR("FocusEnvironmentUseAncestorScrollableSizeForFallbackRotaryAxis"));
    v7 = byte_1EDDA7F94 ? v6 : 1;
    if ((v7 & 1) == 0)
    {
      _UIFocusNearestAncestorEnvironmentScrollableContainer(v4, 1);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = v8;
      if (v8)
      {
        objc_msgSend(v8, "scrollableContainer");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "visibleSize");
        v12 = v11;
        v14 = v13;

        if (v12 > v14)
        {
          v20[3] = 1;
          objc_msgSend(v9, "owningEnvironment");
          v15 = objc_claimAutoreleasedReturnValue();
LABEL_12:
          v16 = (void *)v24[5];
          v24[5] = v15;

          goto LABEL_13;
        }
        if (v14 > v12)
        {
          v20[3] = 2;
          objc_msgSend(v9, "owningEnvironment");
          v15 = objc_claimAutoreleasedReturnValue();
          goto LABEL_12;
        }
      }
LABEL_13:

    }
  }
  v5 = v20[3];
  if (v5 == -1)
  {
    v5 = 0;
    v20[3] = 0;
  }
  if (a2)
  {
    *a2 = objc_retainAutorelease((id)v24[5]);
    v5 = v20[3];
  }
  _Block_object_dispose(&v19, 8);
  _Block_object_dispose(&v23, 8);

LABEL_19:
  return v5;
}

void sub_185BA15A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

id __UIFocusEnvironmentPreferredFocusedView(void *a1, _BYTE *a2)
{
  id v3;
  int IsViewOrViewControllerOrRespondsToSelector;
  char v5;
  void *v6;

  v3 = a1;
  IsViewOrViewControllerOrRespondsToSelector = _UIFocusEnvironmentIsViewOrViewControllerOrRespondsToSelector(v3);
  v5 = IsViewOrViewControllerOrRespondsToSelector;
  if (IsViewOrViewControllerOrRespondsToSelector)
  {
    objc_msgSend(v3, "preferredFocusedView");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (!a2)
      goto LABEL_6;
    goto LABEL_5;
  }
  v6 = 0;
  if (a2)
LABEL_5:
    *a2 = v5;
LABEL_6:

  return v6;
}

id _UIFocusEnvironmentPreferredFocusEnvironments(void *a1)
{
  id v1;
  int IsViewOrViewControllerOrRespondsToSelector;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v1 = a1;
  IsViewOrViewControllerOrRespondsToSelector = _UIFocusEnvironmentIsViewOrViewControllerOrRespondsToSelector(v1);
  v3 = (id)MEMORY[0x1E0C9AA60];
  if (IsViewOrViewControllerOrRespondsToSelector)
  {
    objc_msgSend(v1, "preferredFocusEnvironments");
    v4 = objc_claimAutoreleasedReturnValue();
    v5 = (void *)v4;
    if (v4)
      v6 = (void *)v4;
    else
      v6 = v3;
    v3 = v6;

  }
  return v3;
}

id _UIFocusEnvironmentEffectivePreferredFocusEnvironments(void *a1, _BYTE *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  char IsKindOfUIView;
  void *v9;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  char v15;
  id v16;
  _QWORD v17[2];

  v17[1] = *MEMORY[0x1E0C80C00];
  v3 = a1;
  if (!v3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSArray<id<UIFocusEnvironment>> * _Nonnull _UIFocusEnvironmentEffectivePreferredFocusEnvironments(__strong id<UIFocusEnvironment> _Nonnull, BOOL * _Nullable)");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "handleFailureInFunction:file:lineNumber:description:", v14, CFSTR("UIFocusEnvironment.m"), 479, CFSTR("Cannot determine effective preferred focus environments for a nil environment."));

  }
  _UIFocusEnvironmentPreferredFocusEnvironments(v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "count");
  v6 = dyld_program_sdk_at_least();
  if (v5)
  {
    if (!v6 || objc_msgSend(v4, "indexOfObjectIdenticalTo:", v3) != 0x7FFFFFFFFFFFFFFFLL)
    {
      IsKindOfUIView = 0;
      if (!a2)
        goto LABEL_13;
      goto LABEL_12;
    }
    objc_msgSend(v4, "arrayByAddingObject:", v3);
    v7 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    if (!v6)
    {
      v15 = 0;
      __UIFocusEnvironmentPreferredFocusedView(v3, &v15);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      if (v11 || !v15)
      {
        v16 = v3;
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v16, 1);
        v12 = objc_claimAutoreleasedReturnValue();

        IsKindOfUIView = 0;
        v4 = (void *)v12;
      }
      else if (a2)
      {
        IsKindOfUIView = _IsKindOfUIView((uint64_t)v3);
      }
      else
      {
        IsKindOfUIView = 0;
      }

      if (a2)
        goto LABEL_12;
      goto LABEL_13;
    }
    v17[0] = v3;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v17, 1);
    v7 = objc_claimAutoreleasedReturnValue();
  }
  v9 = (void *)v7;

  IsKindOfUIView = 0;
  v4 = v9;
  if (a2)
LABEL_12:
    *a2 = IsKindOfUIView;
LABEL_13:

  return v4;
}

id _UIFocusEnvironmentCombinedPreferredFocusEnvironments(void *a1, void *a2, uint64_t a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v13;
  void *v14;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  if (!v5)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSArray<id<UIFocusEnvironment>> * _Nonnull _UIFocusEnvironmentCombinedPreferredFocusEnvironments(__strong id<UIFocusEnvironment> _Nonnull, NSArray<id<UIFocusEnvironment>> *__strong _Nonnull, _UIPreferredFocusedViewPrioritizationType)");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "handleFailureInFunction:file:lineNumber:description:", v14, CFSTR("UIFocusEnvironment.m"), 526, CFSTR("Cannot determine combined preferred focus environments for a nil environment."));

  }
  if (!v6)
    v6 = (id)MEMORY[0x1E0C9AA60];
  if (a3 == 2)
  {
    __UIFocusEnvironmentPreferredFocusedView(v5, 0);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (v7 && objc_msgSend(v6, "indexOfObjectIdenticalTo:", v7) == 0x7FFFFFFFFFFFFFFFLL)
    {
      objc_msgSend(v6, "arrayByAddingObject:", v7);
      v11 = objc_claimAutoreleasedReturnValue();

      v6 = (id)v11;
    }
    goto LABEL_15;
  }
  if (a3 == 1)
  {
    __UIFocusEnvironmentPreferredFocusedView(v5, 0);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (v7)
    {
      objc_msgSend(v6, "firstObject");
      v8 = (void *)objc_claimAutoreleasedReturnValue();

      if (v7 != v8)
      {
        v15[0] = v7;
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v15, 1);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "arrayByAddingObjectsFromArray:", v6);
        v10 = objc_claimAutoreleasedReturnValue();

        v6 = (id)v10;
      }
    }
    else if ((dyld_program_sdk_at_least() & 1) == 0)
    {

      v6 = (id)MEMORY[0x1E0C9AA60];
    }
LABEL_15:

  }
  return v6;
}

uint64_t _UIFocusEnvironmentAllowsFocusToLeaveViaHeading(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;

  v3 = a1;
  if (_UIFocusItemIsViewOrRespondsToSelector(v3))
    v4 = objc_msgSend(v3, "_allowsFocusToLeaveViaHeading:", a2);
  else
    v4 = 1;

  return v4;
}

id _UIFocusItemHaloEffect(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v5;
  void *v6;

  v1 = a1;
  if (!v1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "UIFocusHaloEffect * _Nullable _UIFocusItemHaloEffect(__strong id<UIFocusItem>)");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "handleFailureInFunction:file:lineNumber:description:", v6, CFSTR("UIFocusEnvironment.m"), 587, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("item != nil"));

  }
  if ((_UIFocusItemIsViewOrRespondsToSelector(v1) & 1) != 0)
    objc_msgSend(v1, "focusEffect");
  else
    +[UIFocusEffect effect](UIFocusEffect, "effect");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_resolvedEffectForItem:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

void sub_185BA1F98(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

id _activityItemsConfigurationForTarget(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  void *v6;

  v3 = a1;
  v4 = a2;
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v3, "_effectiveActivityItemsConfigurationForSender:", v4);
    v5 = objc_claimAutoreleasedReturnValue();
  }
  else if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v3, "_effectiveActivityItemsConfiguration");
    v5 = objc_claimAutoreleasedReturnValue();
  }
  else
  {
    if ((objc_opt_respondsToSelector() & 1) == 0)
    {
      v6 = 0;
      goto LABEL_8;
    }
    objc_msgSend(v3, "activityItemsConfiguration");
    v5 = objc_claimAutoreleasedReturnValue();
  }
  v6 = (void *)v5;
LABEL_8:

  return v6;
}

void sub_185BA2A30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _viewControllerToPresentFromBasedOnResponder(void *a1)
{
  id *v1;
  id *v2;
  void *v3;
  void *v5;

  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    -[UIView __viewDelegate](v1);
    v2 = (id *)objc_claimAutoreleasedReturnValue();
LABEL_5:
    v3 = v2;
    goto LABEL_6;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    v2 = v1;
    goto LABEL_5;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    _preferredUIWindowInWindowScene(v1);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "rootViewController");
    v3 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v3 = 0;
  }
LABEL_6:

  return v3;
}

id _preferredUIWindowInWindowScene(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  objc_msgSend(v1, "keyWindow");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v2)
  {
    objc_msgSend(v1, "_visibleWindows");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "firstObject");
    v2 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v2;
}

uint64_t _UIFocusHeadingIsEffectivelyLeft(unint64_t a1, void *a2)
{
  id v3;
  void *v4;
  int v5;
  unsigned int v6;
  unsigned int v7;

  v3 = a2;
  +[UIFocusSystem focusSystemForEnvironment:](UIFocusSystem, "focusSystemForEnvironment:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "_shouldReverseLayoutDirectionForEnvironment:", v3);

  if ((a1 & 4) != 0)
    v6 = 1;
  else
    v6 = (a1 >> 5) & 1;
  if ((a1 & 8) != 0)
    v7 = 1;
  else
    v7 = (a1 >> 4) & 1;
  if (v5)
    return v7;
  else
    return v6;
}

uint64_t _UIFocusHeadingIsEffectivelyRight(unint64_t a1, void *a2)
{
  id v3;
  void *v4;
  int v5;
  unsigned int v6;
  unsigned int v7;

  v3 = a2;
  +[UIFocusSystem focusSystemForEnvironment:](UIFocusSystem, "focusSystemForEnvironment:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "_shouldReverseLayoutDirectionForEnvironment:", v3);

  if ((a1 & 8) != 0)
    v6 = 1;
  else
    v6 = (a1 >> 4) & 1;
  if ((a1 & 4) != 0)
    v7 = 1;
  else
    v7 = (a1 >> 5) & 1;
  if (v5)
    return v7;
  else
    return v6;
}

double _UIVectorForFocusHeading(char a1)
{
  double result;
  double v2;

  result = -1.0;
  v2 = 0.0;
  if ((a1 & 4) != 0)
    v2 = -1.0;
  if ((a1 & 8) != 0)
    v2 = 1.0;
  if ((a1 & 0x20) == 0)
    result = v2;
  if ((a1 & 0x10) != 0)
    return 1.0;
  return result;
}

double _UIRectDeparturePointAlongFocusHeading(char a1, double a2, double a3, double a4, double a5)
{
  double MinX;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;

  if ((a1 & 0xC) != 0)
  {
    if ((a1 & 4) != 0)
      MinX = CGRectGetMinX(*(CGRect *)&a2);
    else
      MinX = CGRectGetMaxX(*(CGRect *)&a2);
  }
  else
  {
    MinX = CGRectGetMidX(*(CGRect *)&a2);
  }
  v11 = MinX;
  v12 = a2;
  v13 = a3;
  v14 = a4;
  v15 = a5;
  if ((a1 & 3) != 0)
  {
    if ((a1 & 1) != 0)
      CGRectGetMinY(*(CGRect *)&v12);
    else
      CGRectGetMaxY(*(CGRect *)&v12);
  }
  else
  {
    CGRectGetMidY(*(CGRect *)&v12);
  }
  return v11;
}

void _UIPointAxisAlignedDistanceAlongFocusHeading(char a1, double a2, double a3, double a4, double a5)
{
  if ((a1 & 3) != 0 && (a1 & 0xC) != 0)
  {
    hypot(a4 - a2, a5 - a3);
    _UIVectorForFocusHeading(a1);
  }
}

BOOL _UIRectIntersectsRectAlongFocusHeading(char a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9)
{
  double MinX;
  double MaxX;
  double v18;
  double MinY;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;

  if ((a1 & 3) != 0)
  {
    MinX = CGRectGetMinX(*(CGRect *)&a2);
    v30.origin.x = a6;
    v30.origin.y = a7;
    v30.size.width = a8;
    v30.size.height = a9;
    if (MinX < CGRectGetMaxX(v30))
    {
      v31.origin.x = a2;
      v31.origin.y = a3;
      v31.size.width = a4;
      v31.size.height = a5;
      MaxX = CGRectGetMaxX(v31);
      v32.origin.x = a6;
      v32.origin.y = a7;
      v32.size.width = a8;
      v32.size.height = a9;
      v18 = CGRectGetMinX(v32);
      return MaxX > v18;
    }
  }
  else if ((a1 & 0xC) != 0)
  {
    MinY = CGRectGetMinY(*(CGRect *)&a2);
    v33.origin.x = a6;
    v33.origin.y = a7;
    v33.size.width = a8;
    v33.size.height = a9;
    if (MinY < CGRectGetMaxY(v33))
    {
      v34.origin.x = a2;
      v34.origin.y = a3;
      v34.size.width = a4;
      v34.size.height = a5;
      MaxX = CGRectGetMaxY(v34);
      v35.origin.x = a6;
      v35.origin.y = a7;
      v35.size.width = a8;
      v35.size.height = a9;
      v18 = CGRectGetMinY(v35);
      return MaxX > v18;
    }
  }
  return 0;
}

double _UIFocusVelocityBasedInterpolationFactor(long double a1, long double a2)
{
  double v2;
  double v3;

  v2 = hypot(a1, a2);
  v3 = 1.0;
  if (v2 >= 1000.0)
    return fmin(fmax((v2 + -1000.0) / -10000.0 + 1.0, 0.0), 1.0);
  return v3;
}

uint64_t _UIFocusRectCompare(int a1, int a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  double v23;
  double v24;
  _BOOL4 v25;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;

  v18 = a4 + a6 * 0.5;
  v28.origin.x = a7;
  v28.origin.y = a8;
  v28.size.width = a9;
  v28.size.height = a10;
  if (CGRectGetMinY(v28) < v18)
  {
    v29.origin.x = a7;
    v29.origin.y = a8;
    v29.size.width = a9;
    v29.size.height = a10;
    if (v18 < CGRectGetMaxY(v29))
    {
      v30.origin.x = a7;
      v30.origin.y = a8;
      v30.size.width = a9;
      v34.size.width = a5;
      v30.size.height = a10;
      v34.origin.x = a3;
      v34.origin.y = a4;
      v34.size.height = a6;
      if (!CGRectContainsRect(v30, v34))
        goto LABEL_15;
    }
  }
  v19 = a8 + a10 * 0.5;
  v31.origin.x = a3;
  v31.origin.y = a4;
  v31.size.width = a5;
  v31.size.height = a6;
  if (CGRectGetMinY(v31) >= v19)
    goto LABEL_7;
  v32.origin.x = a3;
  v32.origin.y = a4;
  v32.size.width = a5;
  v32.size.height = a6;
  if (v19 >= CGRectGetMaxY(v32))
    goto LABEL_7;
  v33.origin.x = a3;
  v33.origin.y = a4;
  v35.size.width = a9;
  v33.size.width = a5;
  v33.size.height = a6;
  v35.origin.x = a7;
  v35.origin.y = a8;
  v35.size.height = a10;
  if (CGRectContainsRect(v33, v35))
  {
LABEL_7:
    v20 = -1;
    if (v18 > v19)
      v21 = 1;
    else
      v21 = -1;
    if (v18 <= v19)
      v20 = 1;
    if (a2)
      return v20;
    else
      return v21;
  }
  else
  {
LABEL_15:
    v23 = a3 + a5 * 0.5;
    v24 = a7 + a9 * 0.5;
    v25 = v23 >= v24;
    if (!a1)
      v25 = v23 <= v24;
    if (v25)
      return -1;
    else
      return 1;
  }
}

uint64_t _UIFocusItemCompare(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  double v37;
  double x;
  double v39;
  double v40;
  double y;
  double v42;
  double width;
  double height;
  BOOL IsNull;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  BOOL v51;
  double v52;
  void *v53;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  CGRect v60;
  CGRect v61;

  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "parentFocusEnvironment");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "parentFocusEnvironment");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  _UIFocusEnvironmentFirstCommonAncestor(v5, v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  +[UIFocusSystem focusSystemForEnvironment:](UIFocusSystem, "focusSystemForEnvironment:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "behavior");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "shouldUseAccessibilityCompareForItemGeometry");

  if (v10 && (objc_opt_respondsToSelector() & 1) != 0)
  {
    v11 = objc_msgSend(v3, "accessibilityCompareGeometry:", v4);
  }
  else
  {
    v12 = v7;
    v13 = v3;
    v14 = v4;
    v15 = v12;
    if (!v12)
    {
      objc_msgSend(v13, "parentFocusEnvironment");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "parentFocusEnvironment");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      _UIFocusEnvironmentFirstCommonAncestor(v16, v17);
      v15 = (void *)objc_claimAutoreleasedReturnValue();

    }
    +[UIFocusSystem focusSystemForEnvironment:](UIFocusSystem, "focusSystemForEnvironment:", v15);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "focusItemContainer");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "coordinateSpace");
    v20 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v13, "frame");
    v22 = v21;
    v24 = v23;
    v26 = v25;
    v28 = v27;
    objc_msgSend(v14, "frame");
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v36 = v35;
    if (v20)
    {
      v60.origin.x = _UIFocusItemFrameInCoordinateSpace(v13, v20);
      v55 = v34;
      v56 = v36;
      v37 = v22;
      x = v60.origin.x;
      v39 = v30;
      v40 = v24;
      y = v60.origin.y;
      v57 = v32;
      v58 = v28;
      v42 = v26;
      width = v60.size.width;
      height = v60.size.height;
      IsNull = CGRectIsNull(v60);
      if (!IsNull)
      {
        v37 = x;
        v40 = y;
        v42 = width;
      }
      v46 = v58;
      if (!IsNull)
        v46 = height;
      v59 = v46;
      v61.origin.x = _UIFocusItemFrameInCoordinateSpace(v14, v20);
      v47 = v61.origin.x;
      v48 = v61.origin.y;
      v49 = v61.size.width;
      v50 = v61.size.height;
      v51 = CGRectIsNull(v61);
      if (!v51)
        v39 = v47;
      v22 = v37;
      v36 = v56;
      v52 = v57;
      if (!v51)
        v52 = v48;
      v24 = v40;
      v30 = v39;
      v34 = v55;
      if (!v51)
        v34 = v49;
      v26 = v42;
      if (!v51)
        v36 = v50;
      v32 = v52;
      v28 = v59;
    }

    +[UIFocusSystem focusSystemForEnvironment:](UIFocusSystem, "focusSystemForEnvironment:", v12);
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = _UIFocusRectCompare(objc_msgSend(v53, "_shouldReverseLayoutDirectionForEnvironment:", v12), objc_msgSend(v53, "_shouldReverseLinearWrappingForEnvironment:", v12), v22, v24, v26, v28, v30, v32, v34, v36);

  }
  return v11;
}

id _UIFocusGetNextItemFromList(void *a1, void *a2, __int16 a3, int a4)
{
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  void *v13;
  void *v14;

  v7 = a1;
  v8 = a2;
  if (!v8)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "id<UIFocusItem>  _Nonnull _UIFocusGetNextItemFromList(id<UIFocusItem>  _Nullable __strong, NSArray<id<UIFocusItem>> *__strong _Nonnull, UIFocusHeading, BOOL)");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "handleFailureInFunction:file:lineNumber:description:", v14, CFSTR("UIFocusGeometry.m"), 371, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("list != nil"));

  }
  if (!objc_msgSend(v8, "count"))
    goto LABEL_11;
  if ((a3 & 0x300) != 0)
  {
    if ((a3 & 0x100) == 0)
    {
LABEL_6:
      v9 = objc_msgSend(v8, "count") - 1;
      goto LABEL_7;
    }
    goto LABEL_22;
  }
  if (!v7)
    goto LABEL_22;
  v10 = objc_msgSend(v8, "indexOfObject:", v7);
  if (v10 == 0x7FFFFFFFFFFFFFFFLL)
    goto LABEL_11;
  v9 = v10;
  if ((a3 & 0x10) == 0)
  {
    if ((a3 & 0x20) == 0)
    {
LABEL_23:
      objc_msgSend(v8, "objectAtIndexedSubscript:", v9);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_24;
    }
    if (v10)
    {
      v9 = v10 - 1;
      goto LABEL_7;
    }
    if (a4)
      goto LABEL_6;
LABEL_22:
    v9 = 0;
    goto LABEL_23;
  }
  if (v10 >= objc_msgSend(v8, "count") - 1)
  {
    if (a4)
      v9 = 0;
    goto LABEL_23;
  }
  ++v9;
LABEL_7:
  if (v9 != 0x7FFFFFFFFFFFFFFFLL)
    goto LABEL_23;
LABEL_11:
  v11 = 0;
LABEL_24:

  return v11;
}

void _UIFocusRectWithMinimumSize(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  CGRect v8;

  if (!CGRectIsNull(*(CGRect *)&a1))
  {
    v8.origin.x = a1;
    v8.origin.y = a2;
    v8.size.width = a3;
    v8.size.height = a4;
    CGRectStandardize(v8);
  }
}

__CFString *_UIStringFromFocusHeading(uint64_t a1)
{
  __int16 v1;
  void *v2;
  id v3;
  void *v4;
  void (**v5)(_QWORD, _QWORD);
  id v6;
  _QWORD v8[4];
  id v9;
  _QWORD *v10;
  _QWORD v11[3];
  char v12;

  if (!a1)
    return CFSTR("None");
  v1 = a1;
  objc_msgSend(MEMORY[0x1E0CB37A0], "string");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = 0;
  v11[1] = v11;
  v11[2] = 0x2020000000;
  v12 = 0;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = ___UIStringFromFocusHeading_block_invoke;
  v8[3] = &unk_1E16C60A8;
  v3 = v2;
  v9 = v3;
  v10 = v11;
  v4 = _Block_copy(v8);
  v5 = (void (**)(_QWORD, _QWORD))v4;
  if ((v1 & 1) != 0)
    (*((void (**)(void *, const __CFString *))v4 + 2))(v4, CFSTR("Up"));
  if ((v1 & 2) != 0)
    ((void (**)(_QWORD, const __CFString *))v5)[2](v5, CFSTR("Down"));
  if ((v1 & 4) != 0)
    ((void (**)(_QWORD, const __CFString *))v5)[2](v5, CFSTR("Left"));
  if ((v1 & 8) != 0)
    ((void (**)(_QWORD, const __CFString *))v5)[2](v5, CFSTR("Right"));
  if ((v1 & 0x20) != 0)
    ((void (**)(_QWORD, const __CFString *))v5)[2](v5, CFSTR("Previous"));
  if ((v1 & 0x10) != 0)
    ((void (**)(_QWORD, const __CFString *))v5)[2](v5, CFSTR("Next"));
  if ((v1 & 0x100) != 0)
    ((void (**)(_QWORD, const __CFString *))v5)[2](v5, CFSTR("First"));
  if ((v1 & 0x200) != 0)
    ((void (**)(_QWORD, const __CFString *))v5)[2](v5, CFSTR("Last"));
  v6 = v3;

  _Block_object_dispose(v11, 8);
  return (__CFString *)v6;
}

void sub_185BA50A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *_UIStringFromGroupFilter(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("None");
  if (a1 == 1)
    v1 = CFSTR("CurrentGroup");
  if (a1 == 2)
    return CFSTR("PrimaryItems");
  else
    return v1;
}

BOOL _UIFocusItemIsFocused(void *a1)
{
  id v1;
  void *v2;
  id v3;
  _BOOL8 v4;
  void *v6;
  void *v7;

  v1 = a1;
  if (!v1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _UIFocusItemIsFocused(__strong id<UIFocusItem> _Nonnull)");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, CFSTR("UIFocusItem.m"), 59, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("item"));

  }
  +[UIFocusSystem focusSystemForEnvironment:](UIFocusSystem, "focusSystemForEnvironment:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "focusedItem");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  v4 = v3 == v1;

  return v4;
}

uint64_t _UIFocusItemIsFocusedOrFocusable(void *a1)
{
  id v1;
  void *v2;
  uint64_t IsFocusedOrFocusableInFocusSystem;
  void *v5;
  void *v6;

  v1 = a1;
  if (!v1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _UIFocusItemIsFocusedOrFocusable(__strong id<UIFocusItem> _Nonnull)");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "handleFailureInFunction:file:lineNumber:description:", v6, CFSTR("UIFocusItem.m"), 66, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("item"));

  }
  +[UIFocusSystem focusSystemForEnvironment:](UIFocusSystem, "focusSystemForEnvironment:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
    IsFocusedOrFocusableInFocusSystem = __UIFocusItemIsFocusedOrFocusableInFocusSystem(v1, v2, 0, 1);
  else
    IsFocusedOrFocusableInFocusSystem = 0;

  return IsFocusedOrFocusableInFocusSystem;
}

uint64_t __UIFocusItemIsFocusedOrFocusableInFocusSystem(void *a1, void *a2, int a3, int a4)
{
  id v7;
  id v8;
  void *v9;
  int IsEligibleForFocusInteraction;
  _BOOL4 v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v16;
  void *v17;
  void *v18;
  void *v19;

  v7 = a1;
  v8 = a2;
  v9 = v8;
  if (v7)
  {
    if (v8)
      goto LABEL_3;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL __UIFocusItemIsFocusedOrFocusableInFocusSystem(__strong id<UIFocusItem>, UIFocusSystem *__strong, BOOL, BOOL)");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "handleFailureInFunction:file:lineNumber:description:", v17, CFSTR("UIFocusItem.m"), 34, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("item"));

    if (v9)
      goto LABEL_3;
  }
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL __UIFocusItemIsFocusedOrFocusableInFocusSystem(__strong id<UIFocusItem>, UIFocusSystem *__strong, BOOL, BOOL)");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "handleFailureInFunction:file:lineNumber:description:", v19, CFSTR("UIFocusItem.m"), 35, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("focusSystem"));

LABEL_3:
  if (_UIFocusItemCanBecomeFocused(v7, v9))
    IsEligibleForFocusInteraction = _UIFocusEnvironmentIsEligibleForFocusInteraction(v7);
  else
    IsEligibleForFocusInteraction = 0;
  v11 = 0;
  if ((IsEligibleForFocusInteraction & 1) == 0 && a4)
  {
    objc_msgSend(v9, "focusedItem");
    v12 = (id)objc_claimAutoreleasedReturnValue();
    v11 = v12 == v7;

  }
  v13 = IsEligibleForFocusInteraction | v11;
  if ((_DWORD)v13 == 1 && a3)
  {
    +[UIFocusSystem focusSystemForEnvironment:](UIFocusSystem, "focusSystemForEnvironment:", v7);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = v14 == v9;

  }
  return v13;
}

uint64_t _UIFocusItemIsFocusedOrFocusableInFocusSystem(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t IsFocusedOrFocusableInFocusSystem;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (!v3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _UIFocusItemIsFocusedOrFocusableInFocusSystem(__strong id<UIFocusItem> _Nonnull, UIFocusSystem *__strong _Nonnull)");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "handleFailureInFunction:file:lineNumber:description:", v9, CFSTR("UIFocusItem.m"), 76, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("item"));

    if (v5)
      goto LABEL_3;
LABEL_5:
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _UIFocusItemIsFocusedOrFocusableInFocusSystem(__strong id<UIFocusItem> _Nonnull, UIFocusSystem *__strong _Nonnull)");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, CFSTR("UIFocusItem.m"), 77, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("focusSystem"));

    goto LABEL_3;
  }
  if (!v4)
    goto LABEL_5;
LABEL_3:
  IsFocusedOrFocusableInFocusSystem = __UIFocusItemIsFocusedOrFocusableInFocusSystem(v3, v5, 1, 1);

  return IsFocusedOrFocusableInFocusSystem;
}

uint64_t _UIFocusItemIsFocusableInFocusSystem(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t IsFocusedOrFocusableInFocusSystem;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (!v3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _UIFocusItemIsFocusableInFocusSystem(__strong id<UIFocusItem> _Nonnull, UIFocusSystem *__strong _Nonnull)");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "handleFailureInFunction:file:lineNumber:description:", v9, CFSTR("UIFocusItem.m"), 83, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("item"));

    if (v5)
      goto LABEL_3;
LABEL_5:
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _UIFocusItemIsFocusableInFocusSystem(__strong id<UIFocusItem> _Nonnull, UIFocusSystem *__strong _Nonnull)");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, CFSTR("UIFocusItem.m"), 84, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("focusSystem"));

    goto LABEL_3;
  }
  if (!v4)
    goto LABEL_5;
LABEL_3:
  IsFocusedOrFocusableInFocusSystem = __UIFocusItemIsFocusedOrFocusableInFocusSystem(v3, v5, 1, 0);

  return IsFocusedOrFocusableInFocusSystem;
}

uint64_t _UIFocusItemCanBecomeFocused(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  int v6;
  uint64_t v7;
  void *v9;
  void *v10;

  v3 = a1;
  v4 = a2;
  if (!v3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _UIFocusItemCanBecomeFocused(__strong id<UIFocusItem> _Nonnull, UIFocusSystem *__strong _Nonnull)");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "handleFailureInFunction:file:lineNumber:description:", v10, CFSTR("UIFocusItem.m"), 92, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("item"));

  }
  if (objc_msgSend(v3, "canBecomeFocused"))
  {
    objc_msgSend(v4, "behavior");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "disablesFocusabilityForItemsContainingFocus");

    if (v6)
      v7 = objc_msgSend(v4, "_focusedItemIsContainedInEnvironment:includeSelf:", v3, 0) ^ 1;
    else
      v7 = 1;
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

uint64_t _UIFocusItemIsFocusableInFocusSystemWithSearchInfo(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (v5)
  {
    if (v6)
      goto LABEL_3;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _UIFocusItemIsFocusableInFocusSystemWithSearchInfo(__strong id<UIFocusItem> _Nonnull, UIFocusSystem *__strong _Nonnull, _UIFocusSearchInfo *__strong _Nonnull)");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "handleFailureInFunction:file:lineNumber:description:", v11, CFSTR("UIFocusItem.m"), 104, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("item"));

    if (v6)
      goto LABEL_3;
  }
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL _UIFocusItemIsFocusableInFocusSystemWithSearchInfo(__strong id<UIFocusItem> _Nonnull, UIFocusSystem *__strong _Nonnull, _UIFocusSearchInfo *__strong _Nonnull)");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "handleFailureInFunction:file:lineNumber:description:", v13, CFSTR("UIFocusItem.m"), 105, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("focusSystem"));

LABEL_3:
  v8 = 0;
  if (__UIFocusItemIsFocusedOrFocusableInFocusSystem(v5, v6, 1, 0))
    v8 = objc_msgSend(v7, "shouldIncludeFocusItem:", v5);

  return v8;
}

uint64_t _UIFocusItemIsLegacyTransparentFocusRegionInSearchContext(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  int IsViewOrRespondsToSelector;
  uint64_t v8;
  void *v10;
  void *v11;
  char IsFocusableInFocusSystemWithSearchInfo;
  void *v13;
  id v14;
  char v15;
  _QWORD v16[5];
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char v20;

  v3 = a1;
  v4 = a2;
  v17 = 0;
  v18 = &v17;
  v19 = 0x2020000000;
  v20 = 0;
  +[UIFocusSystem focusSystemForEnvironment:](UIFocusSystem, "focusSystemForEnvironment:", v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "behavior");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v6, "legacyIsTransparentFocusRegionSupported"))
  {

LABEL_6:
    goto LABEL_7;
  }
  IsViewOrRespondsToSelector = _UIFocusItemIsViewOrRespondsToSelector(v3);

  if (IsViewOrRespondsToSelector)
  {
    if (objc_msgSend(v3, "_isTransparentFocusRegion"))
    {
      *((_BYTE *)v18 + 24) = 1;
      goto LABEL_7;
    }
    objc_msgSend(v4, "focusSystem");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "searchInfo");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    IsFocusableInFocusSystemWithSearchInfo = _UIFocusItemIsFocusableInFocusSystemWithSearchInfo(v3, v10, v11);

    +[UIFocusSystem focusSystemForEnvironment:](UIFocusSystem, "focusSystemForEnvironment:", v3);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "focusedItem");
    v14 = (id)objc_claimAutoreleasedReturnValue();

    v15 = v14 == v3 ? 1 : IsFocusableInFocusSystemWithSearchInfo;
    if ((v15 & 1) == 0)
    {
      objc_msgSend(v3, "parentFocusEnvironment");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v16[0] = MEMORY[0x1E0C809B0];
      v16[1] = 3221225472;
      v16[2] = ___UIFocusItemIsLegacyTransparentFocusRegionInSearchContext_block_invoke;
      v16[3] = &unk_1E16C6008;
      v16[4] = &v17;
      _UIFocusEnvironmentEnumerateAncestorEnvironments(v5, v16);
      goto LABEL_6;
    }
  }
LABEL_7:
  v8 = *((unsigned __int8 *)v18 + 24);
  _Block_object_dispose(&v17, 8);

  return v8;
}

void sub_185BA5B38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _UIFocusItemIsTransparentFocusItem(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if (_UIFocusItemIsViewOrRespondsToSelector(v1))
    v2 = objc_msgSend(v1, "isTransparentFocusItem");
  else
    v2 = 0;

  return v2;
}

uint64_t _UITVFocusItemAllowsFocusInChildrenWhenFocused(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = a1;
  v2 = v1;
  if (v1 && _UIFocusItemIsViewOrRespondsToSelector(v1))
    v3 = objc_msgSend(v2, "_tvAllowsFocusInChildrenWhenFocused");
  else
    v3 = 0;

  return v3;
}

uint64_t _UITVFocusItemAddsChildFocusItemsBeforeSelf(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = a1;
  v2 = v1;
  if (v1 && _UIFocusItemIsViewOrRespondsToSelector(v1))
    v3 = objc_msgSend(v2, "_tvAddsChildFocusItemsBeforeSelf");
  else
    v3 = 0;

  return v3;
}

uint64_t _UITVFocusItemAddsChildFocusItemsButNotSelf(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = a1;
  v2 = v1;
  if (v1 && _UIFocusItemIsViewOrRespondsToSelector(v1))
    v3 = objc_msgSend(v2, "_tvAddsChildFocusItemsButNotSelf");
  else
    v3 = 0;

  return v3;
}

id _UIParentCoordinateSpaceForFocusItem(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  unint64_t v5;
  NSObject *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  int v15;
  void *v16;
  __int16 v17;
  void *v18;
  __int16 v19;
  void *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(v1, "parentFocusEnvironment");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "focusItemContainer");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "coordinateSpace");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v4)
  {
    if (os_variant_has_internal_diagnostics())
    {
      __UIFaultDebugAssertLog();
      v7 = objc_claimAutoreleasedReturnValue();
      if (!os_log_type_enabled(v7, OS_LOG_TYPE_FAULT))
        goto LABEL_8;
      objc_msgSend(v1, "debugDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v1, "parentFocusEnvironment");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "debugDescription");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v1, "parentFocusEnvironment");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "focusItemContainer");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "debugDescription");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138412802;
      v16 = v8;
      v17 = 2112;
      v18 = v10;
      v19 = 2112;
      v20 = v13;
      _os_log_fault_impl(&dword_185066000, v7, OS_LOG_TYPE_FAULT, "UIFocusItem: %@ with parentFocusEnvironment: %@  focusItemContainer: %@ has no coordinate space.", (uint8_t *)&v15, 0x20u);
LABEL_7:

LABEL_8:
      goto LABEL_9;
    }
    v5 = _UIParentCoordinateSpaceForFocusItem___s_category;
    if (!_UIParentCoordinateSpaceForFocusItem___s_category)
    {
      v5 = __UILogCategoryGetNode("Assert", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
      atomic_store(v5, (unint64_t *)&_UIParentCoordinateSpaceForFocusItem___s_category);
    }
    v6 = *(NSObject **)(v5 + 8);
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      v7 = v6;
      objc_msgSend(v1, "debugDescription");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v1, "parentFocusEnvironment");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "debugDescription");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v1, "parentFocusEnvironment");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "focusItemContainer");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "debugDescription");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 138412802;
      v16 = v8;
      v17 = 2112;
      v18 = v10;
      v19 = 2112;
      v20 = v13;
      _os_log_impl(&dword_185066000, v7, OS_LOG_TYPE_ERROR, "UIFocusItem: %@ with parentFocusEnvironment: %@  focusItemContainer: %@ has no coordinate space.", (uint8_t *)&v15, 0x20u);
      goto LABEL_7;
    }
  }
LABEL_9:

  return v4;
}

double _UIFocusItemFrameInCoordinateSpace(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  void *v8;
  double v9;

  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (!v3 || !v4)
    goto LABEL_8;
  if (_IsKindOfUIView((uint64_t)v3))
  {
    objc_msgSend(v3, "_focusRegionFrameInCoordinateSpace:", v5);
    v7 = v6;
    goto LABEL_9;
  }
  if ((_UIFocusItemIsViewOrRespondsToSelector(v3) & 1) == 0)
  {
LABEL_8:
    v7 = *MEMORY[0x1E0C9D628];
    goto LABEL_9;
  }
  _UIParentCoordinateSpaceForFocusItem(v3);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (v8)
  {
    objc_msgSend(v3, "frame");
    objc_msgSend(v8, "convertRect:toCoordinateSpace:", v5);
    v7 = v9;
  }
  else
  {
    v7 = *MEMORY[0x1E0C9D628];
  }

LABEL_9:
  return v7;
}

uint64_t _UIFocusItemDeferralModeForItem(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;

  v1 = a1;
  if (_UIFocusItemIsViewOrRespondsToSelector(v1))
  {
    v2 = objc_msgSend(v1, "_focusItemDeferralMode");
  }
  else
  {
    if (!_UIFocusItemIsViewOrRespondsToSelector(v1))
    {
      v3 = 0;
      goto LABEL_7;
    }
    v2 = objc_msgSend(v1, "focusItemDeferralMode");
  }
  v3 = v2;
LABEL_7:

  return v3;
}

uint64_t _UIFocusItemFocusSpeedBumpEdges(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if (_UIFocusItemIsViewOrRespondsToSelector(v1))
    v2 = objc_msgSend(v1, "_focusSpeedBumpEdges");
  else
    v2 = 0;

  return v2;
}

void sub_185BAA900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _UIFocusNearestAncestorEnvironmentScrollableContainer(void *a1, int a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v14;
  void *v15;

  v3 = a1;
  if (!v3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "_UIFocusEnvironmentScrollableContainerTuple * _Nullable _UIFocusNearestAncestorEnvironmentScrollableContainer(__strong id<UIFocusEnvironment> _Nonnull, BOOL)");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "handleFailureInFunction:file:lineNumber:description:", v15, CFSTR("UIFocusItemContainer.m"), 75, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("environment"));

  }
  v4 = _UIFocusEnvironmentParentEnvironment(v3);
  if (!v4)
  {
LABEL_22:
    v12 = 0;
    goto LABEL_23;
  }
  v5 = v4;
  v6 = v3;
  while (!_UIFocusEnvironmentIsViewOrViewControllerOrRespondsToSelector(v5))
  {
LABEL_19:
    v6 = v5;
    v5 = _UIFocusEnvironmentParentEnvironment(v5);
    if (!v5)
      goto LABEL_22;
  }
  objc_msgSend(v5, "focusItemContainer");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v7 && _UIFocusItemContainerIsScrollableContainer(v7))
  {
    v9 = v8;
    if (_UIFocusEnvironmentPrefersFocusContainment(v5))
    {
      +[_UIFocusEnvironmentScrollableContainerTuple tupleWithOwningEnvironment:scrollableContainer:](_UIFocusEnvironmentScrollableContainerTuple, "tupleWithOwningEnvironment:scrollableContainer:", v5, v9);
      v12 = (void *)objc_claimAutoreleasedReturnValue();

      goto LABEL_25;
    }

  }
  if (!a2
    || !_UIFocusEnvironmentIsViewOrViewControllerOrRespondsToSelector(v6)
    || (v10 = (id)objc_msgSend(v6, "_focusFallbackScroller")) == 0)
  {
    v11 = v5;
    goto LABEL_18;
  }
  v11 = v10;
  if (!_UIFocusEnvironmentPrefersFocusContainment(v10))
  {
LABEL_18:

    v5 = v11;
    goto LABEL_19;
  }
  objc_msgSend(v11, "focusItemContainer");
  v9 = (id)objc_claimAutoreleasedReturnValue();

  if (!v9)
  {
    v8 = 0;
    goto LABEL_18;
  }
  if (!_UIFocusItemContainerIsScrollableContainer(v9))
  {
    v8 = v9;
    goto LABEL_18;
  }
  +[_UIFocusEnvironmentScrollableContainerTuple tupleWithOwningEnvironment:scrollableContainer:](_UIFocusEnvironmentScrollableContainerTuple, "tupleWithOwningEnvironment:scrollableContainer:", v11, v9);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_25:

LABEL_23:
  return v12;
}

uint64_t _UIFocusItemContainerIsScrollableContainer(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v2 = objc_msgSend(v1, "conformsToProtocol:", &unk_1EDE18888);
  else
    v2 = 0;

  return v2;
}

id _UIFocusAncestorEnvironmentScrollableContainers(void *a1, int a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;

  v3 = a1;
  v4 = objc_alloc_init(MEMORY[0x1E0C99E10]);
  if (v3)
  {
    v5 = v3;
    do
    {
      _UIFocusNearestAncestorEnvironmentScrollableContainer(v5, a2);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      if (v6)
        objc_msgSend(v4, "addObject:", v6);
      v5 = (id)objc_msgSend(v6, "owningEnvironment");

    }
    while (v5);
  }
  objc_msgSend(v4, "array");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

void _UIFocusItemContainerAddChildItemsInContextWithOptions(void *a1, void *a2, int a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  _UIFocusPromiseRegion *v22;
  id v23;
  void *v24;
  objc_class *v25;
  void *v26;
  void *v27;
  __CFString *v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  CGFloat v36;
  _UIFocusPromiseRegion *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  _BYTE *v43;
  void *v44;
  _UIFocusItemRegion *v45;
  CGFloat v46;
  CGFloat v47;
  CGFloat v48;
  CGFloat v49;
  int v50;
  _UIFocusItemRegion *v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  void *v60;
  void *v61;
  void *v62;
  unint64_t v63;
  NSObject *v64;
  void *v65;
  id v66;
  objc_class *v67;
  __CFString *v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  objc_class *v72;
  void *v73;
  __CFString *v74;
  id v75;
  void *v76;
  objc_class *v77;
  void *v78;
  __CFString *v79;
  id v80;
  void *v81;
  objc_class *v82;
  void *v83;
  uint64_t v84;
  void *v85;
  id v86;
  id v87;
  uint64_t v88;
  _UIFocusGuideRegion *v89;
  _UIFocusContainerGuideRegion *v90;
  __CFString *v91;
  __CFString *v92;
  void *v93;
  __CFString *v94;
  void *v95;
  __CFString *v96;
  NSObject *v97;
  double v98;
  double v99;
  double v100;
  double v101;
  int v102;
  void *v103;
  id v104;
  void *v105;
  void *v106;
  void *v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  _QWORD v112[4];
  _UIFocusGuideRegion *v113;
  uint8_t buf[4];
  __CFString *v115;
  __int16 v116;
  __CFString *v117;
  __int16 v118;
  __CFString *v119;
  __int16 v120;
  __CFString *v121;
  _BYTE v122[128];
  uint64_t v123;

  v123 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  objc_msgSend(v5, "owningEnvironment");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "itemContainer");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "coordinateSpace");
  v107 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "searchArea");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "coordinateSpace");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = _UIFocusEnvironmentContainerFrameInCoordinateSpace(v7, v10);
  v13 = v12;
  v15 = v14;
  v17 = v16;
  objc_msgSend(v10, "bounds");
  v98 = v11;
  v99 = v13;
  v100 = v15;
  v101 = v17;
  if ((_UIRectSmartIntersectsRect(v18, v19, v20, v21, v11, v13, v15, v17) & 1) == 0
    && (a3 & 0x100) != 0
    && _UIFocusItemContainerIsLazy(v8))
  {
    v22 = [_UIFocusPromiseRegion alloc];
    v23 = v8;
    if (v23)
    {
      v24 = (void *)MEMORY[0x1E0CB3940];
      v25 = (objc_class *)objc_opt_class();
      NSStringFromClass(v25);
      v26 = v10;
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "stringWithFormat:", CFSTR("<%@: %p>"), v27, v23);
      v28 = (__CFString *)objc_claimAutoreleasedReturnValue();

      v10 = v26;
    }
    else
    {
      v28 = CFSTR("(nil)");
    }

    v37 = -[_UIFocusPromiseRegion initWithFrame:coordinateSpace:identifier:](v22, "initWithFrame:coordinateSpace:identifier:", v10, v28, v11, v13, v15, v17);
    v112[0] = MEMORY[0x1E0C809B0];
    v112[1] = 3221225472;
    v112[2] = ___UIFocusItemContainerAddChildItemsInContextWithOptions_block_invoke;
    v112[3] = &unk_1E16BDB20;
    v113 = (_UIFocusGuideRegion *)v5;
    -[_UIFocusPromiseRegion setContentFulfillmentHandler:](v37, "setContentFulfillmentHandler:", v112);
    objc_msgSend(v6, "addRegion:", v37);
    v89 = v113;
    goto LABEL_51;
  }
  v102 = a3;
  v104 = v5;
  v105 = v7;
  v103 = v9;
  objc_msgSend(v9, "frame");
  objc_msgSend(v107, "convertRect:fromCoordinateSpace:", v10);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v106 = v8;
  objc_msgSend(v8, "focusItemsInRect:");
  v37 = (_UIFocusPromiseRegion *)objc_claimAutoreleasedReturnValue();
  v108 = 0u;
  v109 = 0u;
  v110 = 0u;
  v111 = 0u;
  v38 = -[_UIFocusPromiseRegion countByEnumeratingWithState:objects:count:](v37, "countByEnumeratingWithState:objects:count:", &v108, v122, 16);
  if (v38)
  {
    v39 = v38;
    v40 = *(_QWORD *)v109;
    do
    {
      v41 = 0;
      do
      {
        if (*(_QWORD *)v109 != v40)
          objc_enumerationMutation(v37);
        v42 = *(void **)(*((_QWORD *)&v108 + 1) + 8 * v41);
        v43 = (_BYTE *)_MergedGlobals_1034;
        if (!_MergedGlobals_1034)
        {
          v43 = (_BYTE *)(__UILogCategoryGetNode("UIFocus", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16);
          atomic_store((unint64_t)v43, (unint64_t *)&_MergedGlobals_1034);
        }
        if ((*v43 & 1) != 0)
        {
          objc_msgSend(v42, "parentFocusEnvironment");
          v61 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v61, "focusItemContainer");
          v62 = (void *)objc_claimAutoreleasedReturnValue();

          if (v62 != v106)
          {
            v63 = qword_1ECD7D970;
            if (!qword_1ECD7D970)
            {
              v63 = __UILogCategoryGetNode("UIFocus", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
              atomic_store(v63, (unint64_t *)&qword_1ECD7D970);
            }
            v64 = *(id *)(v63 + 8);
            if (os_log_type_enabled(v64, OS_LOG_TYPE_ERROR))
            {
              if (v42)
              {
                v65 = (void *)MEMORY[0x1E0CB3940];
                v66 = v42;
                v67 = (objc_class *)objc_opt_class();
                NSStringFromClass(v67);
                v95 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v65, "stringWithFormat:", CFSTR("<%@: %p>"), v95, v66);
                v68 = (__CFString *)objc_claimAutoreleasedReturnValue();

              }
              else
              {
                v68 = CFSTR("(nil)");
              }
              v94 = v68;
              objc_msgSend(v42, "parentFocusEnvironment");
              v69 = objc_claimAutoreleasedReturnValue();
              v97 = v64;
              v93 = (void *)v69;
              if (v69)
              {
                v70 = (void *)MEMORY[0x1E0CB3940];
                v71 = v69;
                v72 = (objc_class *)objc_opt_class();
                NSStringFromClass(v72);
                v73 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v70, "stringWithFormat:", CFSTR("<%@: %p>"), v73, v71);
                v74 = (__CFString *)objc_claimAutoreleasedReturnValue();

              }
              else
              {
                v74 = CFSTR("(nil)");
              }
              v92 = v74;
              v75 = v106;
              if (v106)
              {
                v76 = (void *)MEMORY[0x1E0CB3940];
                v77 = (objc_class *)objc_opt_class();
                NSStringFromClass(v77);
                v78 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v76, "stringWithFormat:", CFSTR("<%@: %p>"), v78, v75);
                v79 = (__CFString *)objc_claimAutoreleasedReturnValue();

              }
              else
              {
                v79 = CFSTR("(nil)");
              }

              v91 = v79;
              v80 = v105;
              if (v105)
              {
                v81 = (void *)MEMORY[0x1E0CB3940];
                v82 = (objc_class *)objc_opt_class();
                NSStringFromClass(v82);
                v83 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v81, "stringWithFormat:", CFSTR("<%@: %p>"), v83, v80);
                v96 = (__CFString *)objc_claimAutoreleasedReturnValue();

              }
              else
              {
                v96 = CFSTR("(nil)");
              }

              *(_DWORD *)buf = 138413058;
              v115 = v94;
              v116 = 2112;
              v117 = v92;
              v118 = 2112;
              v119 = v91;
              v120 = 2112;
              v121 = v96;
              _os_log_impl(&dword_185066000, v97, OS_LOG_TYPE_ERROR, "UIFocusItem: %@ has mismatched parentFocusEnvironment: %@  from focusItemContainer: %@ with owningEnvironment: %@", buf, 0x2Au);

              v64 = v97;
            }

          }
        }
        objc_msgSend(v42, "focusItemContainer");
        v44 = (void *)objc_claimAutoreleasedReturnValue();
        if (v44)
        {
          _UIFocusRegionContainerFromEnvironmentAndContainer((uint64_t)v42, (uint64_t)v44);
          v45 = (_UIFocusItemRegion *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v6, "addRegionsInContainer:", v45);
        }
        else
        {
          objc_msgSend(v6, "searchInfo");
          v45 = (_UIFocusItemRegion *)objc_claimAutoreleasedReturnValue();
          if (-[_UIFocusItemRegion shouldIncludeFocusItem:](v45, "shouldIncludeFocusItem:", v42))
          {
            objc_msgSend(v42, "frame");
            v50 = _UIRectSmartIntersectsRect(v46, v47, v48, v49, v30, v32, v34, v36);

            if (!v50)
              goto LABEL_20;
            v51 = [_UIFocusItemRegion alloc];
            objc_msgSend(v42, "frame");
            v53 = v52;
            v55 = v54;
            v57 = v56;
            v59 = v58;
            objc_msgSend(v6, "focusSystem");
            v60 = (void *)objc_claimAutoreleasedReturnValue();
            v45 = -[_UIFocusItemRegion initWithFrame:coordinateSpace:item:focusSystem:](v51, "initWithFrame:coordinateSpace:item:focusSystem:", v107, v42, v60, v53, v55, v57, v59);

            objc_msgSend(v6, "addRegion:", v45);
          }
        }

LABEL_20:
        ++v41;
      }
      while (v39 != v41);
      v84 = -[_UIFocusPromiseRegion countByEnumeratingWithState:objects:count:](v37, "countByEnumeratingWithState:objects:count:", &v108, v122, 16);
      v39 = v84;
    }
    while (v84);
  }
  objc_msgSend(v6, "movementInfo");
  v85 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v106;
  v86 = v106;
  v87 = v85;
  if (_UIFocusItemIsViewOrRespondsToSelector(v86))
    v88 = objc_msgSend(v86, "_focusGuideBehaviorForFocusMovement:", v87);
  else
    v88 = 0;
  v9 = v103;

  v5 = v104;
  v7 = v105;
  if ((v102 & 0x10000) != 0)
  {
    if (v88 == 2)
    {
      v89 = -[_UIFocusGuideRegion initWithFrame:coordinateSpace:]([_UIFocusGuideRegion alloc], "initWithFrame:coordinateSpace:", v10, v98, v99, v100, v101);
      -[_UIFocusGuideRegion setOwningEnvironment:](v89, "setOwningEnvironment:", v105);
      objc_msgSend(v6, "addRegion:", v89);
      goto LABEL_51;
    }
    if (v88 == 1)
    {
      v89 = -[_UIFocusRegionContainerProxy initWithEnvironmentContainer:]([_UIFocusRegionContainerProxy alloc], "initWithEnvironmentContainer:", v104);
      -[_UIFocusGuideRegion setShouldCreateRegionForOwningItem:](v89, "setShouldCreateRegionForOwningItem:", 0);
      -[_UIFocusGuideRegion setShouldCreateRegionForGuideBehavior:](v89, "setShouldCreateRegionForGuideBehavior:", 0);
      -[_UIFocusGuideRegion setAllowsLazyLoading:](v89, "setAllowsLazyLoading:", 0);
      v90 = -[_UIFocusGuideRegion initWithFrame:coordinateSpace:]([_UIFocusContainerGuideRegion alloc], "initWithFrame:coordinateSpace:", v10, v98, v99, v100, v101);
      -[_UIFocusContainerGuideRegion setContentFocusRegionContainer:](v90, "setContentFocusRegionContainer:", v89);
      objc_msgSend(v6, "addRegion:", v90);

LABEL_51:
    }
  }

}

uint64_t _UIRectSmartIntersectsRect(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  _BOOL4 v26;
  CGFloat v27;
  CGFloat v28;
  _BOOL4 v29;
  CGFloat v30;
  CGFloat v31;
  CGFloat v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;

  if (CGRectIsNull(*(CGRect *)&a1))
    return 0;
  v33.origin.x = a5;
  v33.origin.y = a6;
  v33.size.width = a7;
  v33.size.height = a8;
  if (CGRectIsNull(v33))
    return 0;
  v34.origin.x = a1;
  v34.origin.y = a2;
  v34.size.width = a3;
  v34.size.height = a4;
  v35 = CGRectStandardize(v34);
  x = v35.origin.x;
  y = v35.origin.y;
  width = v35.size.width;
  height = v35.size.height;
  v35.origin.x = a5;
  v35.origin.y = a6;
  v35.size.width = a7;
  v35.size.height = a8;
  v36 = CGRectStandardize(v35);
  v21 = v36.origin.x;
  v22 = v36.origin.y;
  v23 = v36.size.width;
  v24 = v36.size.height;
  v31 = y;
  v32 = x;
  v36.origin.x = x;
  v36.origin.y = y;
  v36.size.width = width;
  v36.size.height = height;
  v25 = CGRectGetMinX(v36) + 0.0001;
  v37.origin.x = v21;
  v37.origin.y = v22;
  v37.size.width = v23;
  v37.size.height = v24;
  if (v25 <= CGRectGetMaxX(v37))
  {
    v38.origin.y = v31;
    v38.origin.x = x;
    v38.size.width = width;
    v38.size.height = height;
    v27 = CGRectGetMaxX(v38) + -0.0001;
    v39.origin.x = v21;
    v39.origin.y = v22;
    v39.size.width = v23;
    v39.size.height = v24;
    v26 = v27 >= CGRectGetMinX(v39);
  }
  else
  {
    v26 = 0;
  }
  v40.origin.x = x;
  v40.origin.y = v31;
  v40.size.width = width;
  v40.size.height = height;
  v28 = CGRectGetMinY(v40) + 0.0001;
  v41.origin.x = v21;
  v41.origin.y = v22;
  v41.size.width = v23;
  v41.size.height = v24;
  if (v28 <= CGRectGetMaxY(v41))
  {
    v42.origin.x = v32;
    v42.origin.y = v31;
    v42.size.width = width;
    v42.size.height = height;
    v30 = CGRectGetMaxY(v42) + -0.0001;
    v43.origin.x = v21;
    v43.origin.y = v22;
    v43.size.width = v23;
    v43.size.height = v24;
    v29 = v30 >= CGRectGetMinY(v43);
  }
  else
  {
    v29 = 0;
  }
  return v26 & v29;
}

uint64_t _UIFocusItemContainerIsLazy(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if (_UIFocusItemIsViewOrRespondsToSelector(v1))
    v2 = objc_msgSend(v1, "_isLazyFocusItemContainer");
  else
    v2 = 0;

  return v2;
}

uint64_t _UIFocusItemContainerSupportsInvalidatingFocusCache(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  objc_opt_class();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v2 = objc_msgSend((id)objc_opt_class(), "_supportsInvalidatingFocusCache");
  else
    v2 = 1;

  return v2;
}

id _UIFocusItemContainerExtantFocusItemsInRect(void *a1, double a2, double a3, double a4, double a5)
{
  id v9;
  void *v10;

  v9 = a1;
  if (_UIFocusItemIsViewOrRespondsToSelector(v9))
    objc_msgSend(v9, "_extantFocusItemsInRect:", a2, a3, a4, a5);
  else
    objc_msgSend(v9, "focusItemsInRect:", a2, a3, a4, a5);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

uint64_t _UISwiftUIFocusItemContainerReturnsSubviewsInFocusItemsInRect(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = a1;
  v2 = v1;
  if (v1 && _UIFocusItemIsViewOrRespondsToSelector(v1))
    v3 = objc_msgSend(v2, "_swiftuiReturnsSubviewsInFocusItemsInRect");
  else
    v3 = 0;

  return v3;
}

uint64_t _UIFocusItemScrollableContainerCanScrollX(void *a1)
{
  id v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;

  v1 = a1;
  if (_UIFocusItemScrollableContainerIsScrollViewOrRespondsToSelector(v1))
  {
    v2 = objc_msgSend(v1, "_focusCanScrollX");
  }
  else
  {
    objc_msgSend(v1, "contentSize");
    v4 = v3;
    objc_msgSend(v1, "visibleSize");
    v2 = v4 > v5;
  }

  return v2;
}

uint64_t _UIFocusItemScrollableContainerCanScrollY(void *a1)
{
  id v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;

  v1 = a1;
  if (_UIFocusItemScrollableContainerIsScrollViewOrRespondsToSelector(v1))
  {
    v2 = objc_msgSend(v1, "_focusCanScrollY");
  }
  else
  {
    objc_msgSend(v1, "contentSize");
    v4 = v3;
    objc_msgSend(v1, "visibleSize");
    v2 = v4 > v5;
  }

  return v2;
}

double _UIFocusItemScrollableContainerContentBounds(void *a1)
{
  id v1;
  double v2;
  double v3;

  v1 = a1;
  if (_UIFocusItemScrollableContainerIsScrollViewOrRespondsToSelector(v1))
  {
    objc_msgSend(v1, "_focusScrollableContentBounds");
    v3 = v2;
  }
  else
  {
    v3 = *MEMORY[0x1E0C9D538];
    objc_msgSend(v1, "contentSize");
  }

  return v3;
}

uint64_t _UIFocusItemScrollableContainerPrimaryAxis(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;

  v1 = a1;
  if (_UIFocusItemScrollableContainerIsScrollViewOrRespondsToSelector(v1))
    v2 = objc_msgSend(v1, "_focusPrimaryScrollableAxis");
  else
    v2 = _UIFocusItemScrollableContainerDefaultPrimaryAxis(v1);
  v3 = v2;

  return v3;
}

uint64_t _UIFocusItemScrollableContainerDefaultPrimaryAxis(void *a1)
{
  id v1;
  double v2;
  double v3;
  double v4;
  double v5;
  int CanScrollX;
  int CanScrollY;
  uint64_t v8;
  uint64_t v10;

  v1 = a1;
  objc_msgSend(v1, "contentSize");
  v3 = v2;
  v5 = v4;
  objc_msgSend(v1, "visibleSize");
  CanScrollX = _UIFocusItemScrollableContainerCanScrollX(v1);
  CanScrollY = _UIFocusItemScrollableContainerCanScrollY(v1);

  if (CanScrollX && CanScrollY)
  {
    v8 = 2;
    if (v5 <= v3)
      v8 = 0;
    if (v3 <= v5)
      return v8;
    else
      return 1;
  }
  else
  {
    v10 = 2;
    if (!CanScrollY)
      v10 = 0;
    if (CanScrollX)
      return 1;
    else
      return v10;
  }
}

id _UIFocusEngineCommonEnvironmentScrollableContainerForItems(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  _QWORD v14[4];
  id v15;

  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "item");
  v5 = objc_claimAutoreleasedReturnValue();
  if (v5
    && (v6 = (void *)v5,
        objc_msgSend(v4, "item"),
        v7 = (void *)objc_claimAutoreleasedReturnValue(),
        v7,
        v6,
        v7))
  {
    objc_msgSend(v3, "ancestorEnvironmentScrollableContainers");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "ancestorEnvironmentScrollableContainers");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v14[0] = MEMORY[0x1E0C809B0];
    v14[1] = 3221225472;
    v14[2] = ___UIFocusEngineCommonEnvironmentScrollableContainerForItems_block_invoke;
    v14[3] = &unk_1E16C62E8;
    v10 = v8;
    v15 = v10;
    v11 = objc_msgSend(v9, "indexOfObjectPassingTest:", v14);
    if (v11 == 0x7FFFFFFFFFFFFFFFLL)
    {
      v12 = 0;
    }
    else
    {
      objc_msgSend(v9, "objectAtIndex:", v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
    }

  }
  else
  {
    v12 = 0;
  }

  return v12;
}

uint64_t _UIFocusEngineScrollableContainerCanScroll(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((_UIFocusItemScrollableContainerCanScrollX(v1) & 1) != 0
    || _UIFocusItemScrollableContainerCanScrollY(v1))
  {
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v2 = objc_msgSend(v1, "_focusIsScrollableContainer");
    else
      v2 = 1;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

id _UIFocusEngineFirstScrollableContainerTupleThatScrollsForItem(void *a1)
{
  id v1;
  id v2;
  uint64_t v3;
  void *i;
  void *v5;
  void *v6;
  char CanScroll;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "ancestorEnvironmentScrollableContainers");
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v1 = (id)objc_claimAutoreleasedReturnValue();
  v2 = (id)objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v2)
  {
    v3 = *(_QWORD *)v10;
    while (2)
    {
      for (i = 0; i != v2; i = (char *)i + 1)
      {
        if (*(_QWORD *)v10 != v3)
          objc_enumerationMutation(v1);
        v5 = *(void **)(*((_QWORD *)&v9 + 1) + 8 * (_QWORD)i);
        objc_msgSend(v5, "scrollableContainer", (_QWORD)v9);
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        CanScroll = _UIFocusEngineScrollableContainerCanScroll(v6);

        if ((CanScroll & 1) != 0)
        {
          v2 = v5;
          goto LABEL_11;
        }
      }
      v2 = (id)objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
      if (v2)
        continue;
      break;
    }
  }
LABEL_11:

  return v2;
}

void sub_185BAE5B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _enumeratePreferredFocusEnvironments(void *a1, void *a2, void *a3, _QWORD *a4)
{
  id v7;
  id v8;
  void (**v9)(id, id, _QWORD *);
  char v10;
  uint64_t v11;
  void *v12;
  char v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _BYTE v35[128];
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a2;
  v9 = a3;
  if (v7)
  {
    if (v8)
      goto LABEL_3;
LABEL_35:
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void _enumeratePreferredFocusEnvironments(_UIFocusEnvironmentPreferenceEnumerator *__strong, _UIFocusEnvironmentPreferenceEnumerationContext *__strong, void (^__strong)(__strong id<_UIFocusEnvironmentPreferenceEnumerationContext>, _UIFocusEnvironmentPreferenceEnumerationResult *), _UIFocusEnvironmentPreferenceEnumerationResult *)");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "handleFailureInFunction:file:lineNumber:description:", v26, CFSTR("_UIFocusEnvironmentPreferenceEnumerator.m"), 477, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("context"));

    if (a4)
      goto LABEL_4;
LABEL_36:
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void _enumeratePreferredFocusEnvironments(_UIFocusEnvironmentPreferenceEnumerator *__strong, _UIFocusEnvironmentPreferenceEnumerationContext *__strong, void (^__strong)(__strong id<_UIFocusEnvironmentPreferenceEnumerationContext>, _UIFocusEnvironmentPreferenceEnumerationResult *), _UIFocusEnvironmentPreferenceEnumerationResult *)");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "handleFailureInFunction:file:lineNumber:description:", v28, CFSTR("_UIFocusEnvironmentPreferenceEnumerator.m"), 478, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("result"));

    goto LABEL_4;
  }
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void _enumeratePreferredFocusEnvironments(_UIFocusEnvironmentPreferenceEnumerator *__strong, _UIFocusEnvironmentPreferenceEnumerationContext *__strong, void (^__strong)(__strong id<_UIFocusEnvironmentPreferenceEnumerationContext>, _UIFocusEnvironmentPreferenceEnumerationResult *), _UIFocusEnvironmentPreferenceEnumerationResult *)");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "handleFailureInFunction:file:lineNumber:description:", v24, CFSTR("_UIFocusEnvironmentPreferenceEnumerator.m"), 476, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("enumerator"));

  if (!v8)
    goto LABEL_35;
LABEL_3:
  if (!a4)
    goto LABEL_36;
LABEL_4:
  v34 = 0;
  v10 = objc_msgSend(v8, "isInPreferredSubtree");
  if (v9 && (v10 & 1) != 0)
  {
    v9[2](v9, v8, &v34);
    if (v34 == 3)
      goto LABEL_14;
  }
  else
  {
    objc_msgSend(v8, "debugStack");
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)v11;
    if (v9 && v11)
    {
      v13 = objc_msgSend(v8, "isPreferredByItself");

      if ((v13 & 1) != 0)
        goto LABEL_13;
      objc_msgSend(v8, "debugStack");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      +[_UIDebugLogMessage messageWithString:](_UIDebugLogMessage, "messageWithString:", CFSTR("Not visiting node. Outside of preferred subtree."));
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "addMessage:", v14);

    }
  }
LABEL_13:
  if (objc_msgSend(v8, "prefersNothingFocused"))
  {
LABEL_14:
    *a4 = 3;
    goto LABEL_15;
  }
  if (v34 != 1)
  {
    if (v34 == 2)
      *a4 = 2;
    v32 = 0u;
    v33 = 0u;
    v30 = 0u;
    v31 = 0u;
    objc_msgSend(v8, "preferredEnvironments");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v30, v35, 16);
    if (v16)
    {
      v17 = v16;
      v18 = *(_QWORD *)v31;
      while (2)
      {
        for (i = 0; i != v17; ++i)
        {
          if (*(_QWORD *)v31 != v18)
            objc_enumerationMutation(v15);
          v20 = *(_QWORD *)(*((_QWORD *)&v30 + 1) + 8 * i);
          v29 = 0;
          objc_msgSend(v8, "pushEnvironment:", v20);
          _enumeratePreferredFocusEnvironments(v7, v8, v9, &v29);
          objc_msgSend(v8, "popEnvironment");
          if ((v29 & 0xFFFFFFFFFFFFFFFELL) == 2)
          {
            *a4 = v29;
            goto LABEL_29;
          }
        }
        v17 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v30, v35, 16);
        if (v17)
          continue;
        break;
      }
    }
LABEL_29:

    if (objc_msgSend(v8, "isInPreferredSubtree") && *a4 != 3)
    {
      objc_msgSend(v7, "didVisitAllPreferencesForEnvironmentHandler");
      v21 = objc_claimAutoreleasedReturnValue();
      v22 = (void *)v21;
      if (v21)
        (*(void (**)(uint64_t, id, _QWORD *))(v21 + 16))(v21, v8, a4);

    }
  }
LABEL_15:

}

void sub_185BB007C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  uint64_t v38;

  _Block_object_dispose(&a38, 8);
  _Block_object_dispose((const void *)(v38 - 200), 8);
  _Block_object_dispose((const void *)(v38 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_185BB07B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v11;
  va_list va;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  va_list va1;

  va_start(va1, a10);
  va_start(va, a10);
  v11 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_185BB0A60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_185BB0DC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185BB18B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id UIConfigurationColorTransformerGrayscale_block_invoke(uint64_t a1, void *a2)
{
  id v2;
  double v3;
  double v4;
  id v5;
  void *v6;
  double v8;
  double v9;
  double v10;
  double v11;

  v2 = a2;
  v10 = 0.0;
  v11 = 0.0;
  v8 = 0.0;
  v9 = 0.0;
  if (objc_msgSend(v2, "getRed:green:blue:alpha:", &v11, &v10, &v9, &v8))
  {
    v3 = v11 * 0.2126 + v10 * 0.7152 + v9 * 0.0722;
    if (v3 <= 0.0031308)
      v4 = v3 * 12.92;
    else
      v4 = pow(v3, 0.416666667) * 1.055 + -0.055;
    +[UIColor colorWithWhite:alpha:](UIColor, "colorWithWhite:alpha:", v4, v8);
    v5 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = v2;
  }
  v6 = v5;

  return v6;
}

id UIConfigurationColorTransformerPreferredTint_block_invoke_2(uint64_t a1, void *a2)
{
  return a2;
}

id UIConfigurationColorTransformerMonochromeTint_block_invoke_3()
{
  return +[UIColor _monochromeCellImageTintColor](UIColor, "_monochromeCellImageTintColor");
}

id UIConfigurationColorTransformerAlpha80Percent_block_invoke_4(uint64_t a1, void *a2)
{
  return _colorWithReducedAlpha(a2, 0.8);
}

id _colorWithReducedAlpha(void *a1, double a2)
{
  id v3;
  double v4;
  void *v5;

  v3 = a1;
  objc_msgSend(v3, "alphaComponent");
  objc_msgSend(v3, "colorWithAlphaComponent:", v4 * a2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

id UIConfigurationColorTransformerAlpha75Percent_block_invoke_5(uint64_t a1, void *a2)
{
  return _colorWithReducedAlpha(a2, 0.75);
}

id UIConfigurationColorTransformerAlpha65Percent_block_invoke_6(uint64_t a1, void *a2)
{
  return _colorWithReducedAlpha(a2, 0.65);
}

id UIConfigurationColorTransformerAlpha50Percent_block_invoke_7(uint64_t a1, void *a2)
{
  return _colorWithReducedAlpha(a2, 0.5);
}

id UIConfigurationColorTransformerAlpha30Percent_block_invoke_8(uint64_t a1, void *a2)
{
  return _colorWithReducedAlpha(a2, 0.3);
}

id UIConfigurationColorTransformerAlpha10Percent_block_invoke_9(uint64_t a1, void *a2)
{
  return _colorWithReducedAlpha(a2, 0.1);
}

id UIConfigurationColorTransformerAlpha70Percent_block_invoke_10(uint64_t a1, void *a2)
{
  return _colorWithReducedAlpha(a2, 0.7);
}

id UIConfigurationColorTransformerAlpha55Percent_block_invoke_11(uint64_t a1, void *a2)
{
  return _colorWithReducedAlpha(a2, 0.55);
}

id UIConfigurationColorTransformerAlpha18Percent_block_invoke_12(uint64_t a1, void *a2)
{
  return _colorWithReducedAlpha(a2, 0.18);
}

id UIConfigurationColorTransformerAlpha25Percent_block_invoke_13(uint64_t a1, void *a2)
{
  return _colorWithReducedAlpha(a2, 0.25);
}

id UIConfigurationColorTransformerAlpha17_5Percent_block_invoke_14(uint64_t a1, void *a2)
{
  return _colorWithReducedAlpha(a2, 0.175);
}

id UIConfigurationColorTransformerAlpha9_75Percent_block_invoke_15(uint64_t a1, void *a2)
{
  return _colorWithReducedAlpha(a2, 0.0975);
}

id UIConfigurationColorTransformerDynamicLightAlpha_block_invoke_16(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  _BOOL4 v4;
  void *v5;

  v2 = a2;
  +[UITraitCollection _currentTraitCollectionWithUnmarkedFallback]();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "userInterfaceStyle") == 1;

  _colorWithReducedAlpha(v2, dbl_18667C6E0[v4]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

id UIConfigurationColorTransformerSecondaySystemFillAt75PercentAlpha_block_invoke_17()
{
  void *v0;
  double v1;
  void *v2;

  +[UIColor secondarySystemFillColor](UIColor, "secondarySystemFillColor");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "alphaComponent");
  objc_msgSend(v0, "colorWithAlphaComponent:", v1 * 0.75);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

id UIConfigurationColorTransformerGrayscaleAlpha20_block_invoke_18(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;

  UIConfigurationColorTransformerGrayscale_block_invoke(a1, a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  _colorWithReducedAlpha(v2, 0.2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id UIConfigurationColorTransformerAddingWhite5_block_invoke_19(uint64_t a1, void *a2)
{
  return _colorByAddingWhite(a2, 0.05);
}

id _colorByAddingWhite(void *a1, double a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;

  v3 = a1;
  +[UIColor whiteColor](UIColor, "whiteColor");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "colorWithAlphaComponent:", a2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "_colorBlendedWithColor:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id UIConfigurationColorTransformerAddingWhite10_block_invoke_20(uint64_t a1, void *a2)
{
  return _colorByAddingWhite(a2, 0.1);
}

id UIConfigurationColorTransformerAddingWhite20_block_invoke_21(uint64_t a1, void *a2)
{
  return _colorByAddingWhite(a2, 0.2);
}

id UIConfigurationColorTransformerAddingWhite40_block_invoke_22(uint64_t a1, void *a2)
{
  return _colorByAddingWhite(a2, 0.4);
}

UIColor *UIConfigurationColorTransformerTertiaryLabelColor_block_invoke_23()
{
  return +[UIColor tertiaryLabelColor](UIColor, "tertiaryLabelColor");
}

id UIConfigurationColorTransformerIdentity_block_invoke_24(uint64_t a1, void *a2)
{
  return a2;
}

id UIConfigurationColorTransformerDesaturated_block_invoke_25(uint64_t a1, void *a2)
{
  return _colorDesaturated(a2, 0);
}

id _colorDesaturated(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  double v6;
  double v7;
  UIColor *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  UIColor *v15;
  void *v16;
  uint64_t v17;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;

  v3 = a1;
  +[UITraitCollection _currentTraitCollectionWithUnmarkedFallback]();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "userInterfaceStyle");

  if (v5 != 2)
  {
    v24 = 0.0;
    v25 = 0.0;
    v22 = 0.0;
    v23 = 0.0;
    objc_msgSend(v3, "getRed:green:blue:alpha:", &v25, &v24, &v23, &v22);
    v20 = 0.0;
    v21 = 0.0;
    v19 = 0.0;
    _NXRGBToHSB(&v21, &v20, &v19, v25, v24, v23);
    if (v19 == 0.0)
    {
      v7 = 1.25;
    }
    else
    {
      v7 = fmax(1.0 / v19, 1.0);
      if (v7 > 1.25)
        v7 = 1.25;
    }
    v13 = v19 * v7;
    v14 = v20 * (v7 + -1.25 + 1.0);
    v8 = [UIColor alloc];
    v9 = v21;
    v12 = v22;
    v10 = v14;
    v11 = v13;
    goto LABEL_13;
  }
  v24 = 0.0;
  v25 = 0.0;
  v22 = 0.0;
  v23 = 0.0;
  objc_msgSend(v3, "getRed:green:blue:alpha:", &v25, &v24, &v23, &v22);
  if (fabs(v25 + -1.0) > 0.001)
  {
    v6 = v23;
LABEL_10:
    v20 = 0.0;
    v21 = 0.0;
    v19 = 0.0;
    _NXRGBToHSB(&v21, &v20, &v19, v25, v24, v6);
    v8 = [UIColor alloc];
    v10 = v20;
    v9 = v21;
    v11 = v19 * 0.8;
    v12 = v22;
LABEL_13:
    v15 = -[UIColor initWithHue:saturation:brightness:alpha:](v8, "initWithHue:saturation:brightness:alpha:", v9, v10, v11, v12);
    goto LABEL_14;
  }
  v6 = v23;
  if (fabs(v24 + -1.0) > 0.001 || fabs(v23 + -1.0) > 0.001)
    goto LABEL_10;
  v15 = (UIColor *)v3;
LABEL_14:
  v16 = v15;
  if (a2)
  {
    _colorDesaturated(v15, a2 - 1);
    v17 = objc_claimAutoreleasedReturnValue();

    v16 = (void *)v17;
  }

  return v16;
}

id UIConfigurationColorTransformerDesaturatedSecondary_block_invoke_26(uint64_t a1, void *a2)
{
  return _colorDesaturated(a2, 1);
}

id UIConfigurationColorTransformerDesaturatedTertiary_block_invoke_27(uint64_t a1, void *a2)
{
  return _colorDesaturated(a2, 2);
}

const __CFString *_UIConfigurationColorTransformerIdentifierToString(unint64_t a1)
{
  if (a1 > 0x1C)
    return CFSTR("Custom");
  else
    return off_1E16C6558[a1];
}

id _UIConfigurationCompatibilityColorForHighlightedState(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  _QWORD v5[4];
  id v6;
  id v7;

  v1 = a1;
  v2 = v1;
  if (v1)
  {
    v5[0] = MEMORY[0x1E0C809B0];
    v5[1] = 3221225472;
    v5[2] = ___UIConfigurationCompatibilityColorForHighlightedState_block_invoke;
    v5[3] = &unk_1E16C6460;
    v7 = &__block_literal_global_7_3;
    v6 = v1;
    +[UIColor colorWithDynamicProvider:](UIColor, "colorWithDynamicProvider:", v5);
    v3 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v3 = 0;
  }

  return v3;
}

void sub_185BB60B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185BB6FB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185BB7578(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

CGPatternRef _UIFocusDebugImagePatternCreateWithType(CGPatternRef result, CGContext *a2)
{
  CGPatternRef v3;
  CGColorSpace *v4;
  CGColorSpace *Pattern;
  __int128 v6;
  const CGPatternCallbacks *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  CGAffineTransform *v12;
  CGFloat v13;
  CGFloat v14;
  CGAffineTransform v15;
  CGAffineTransform v16;
  CGAffineTransform v17;
  CGAffineTransform v18;
  _OWORD v19[3];

  if (result)
  {
    v3 = result;
    v4 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E0C9D988]);
    Pattern = CGColorSpaceCreatePattern(v4);
    CGContextSetFillColorSpace(a2, Pattern);
    CGColorSpaceRelease(Pattern);
    CGColorSpaceRelease(v4);
    switch((unint64_t)v3)
    {
      case 1uLL:
        v6 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 16);
        v19[0] = *MEMORY[0x1E0C9BAA8];
        v19[1] = v6;
        v19[2] = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 32);
        v7 = (const CGPatternCallbacks *)&_UIFocusDebugImagePatternCreateWithType_callbacks;
        v8 = 0;
        v9 = 0;
        v10 = 30.0;
        v11 = 30.0;
        v12 = (CGAffineTransform *)v19;
        goto LABEL_8;
      case 2uLL:
        CGAffineTransformMakeRotation(&v18, 0.785398163);
        v7 = (const CGPatternCallbacks *)&_UIFocusDebugImagePatternCreateWithType_callbacks_1;
        v10 = 22.5;
        v8 = 0;
        v9 = 0;
        v12 = &v18;
        goto LABEL_10;
      case 3uLL:
        CGAffineTransformMakeRotation(&v17, 0.785398163);
        v7 = (const CGPatternCallbacks *)&_UIFocusDebugImagePatternCreateWithType_callbacks_2;
        v8 = 0;
        v9 = 0;
        v10 = 30.0;
        v11 = 30.0;
        v12 = &v17;
        goto LABEL_8;
      case 4uLL:
        CGAffineTransformMakeRotation(&v16, 2.35619449);
        v7 = (const CGPatternCallbacks *)&_UIFocusDebugImagePatternCreateWithType_callbacks_3;
        v8 = 0;
        v9 = 0;
        v10 = 30.0;
        v11 = 30.0;
        v12 = &v16;
LABEL_8:
        v13 = 30.0;
        v14 = 30.0;
        goto LABEL_11;
      case 5uLL:
        CGAffineTransformMakeRotation(&v15, 2.35619449);
        v7 = (const CGPatternCallbacks *)&_UIFocusDebugImagePatternCreateWithType_callbacks_4;
        v10 = 22.5;
        v8 = 0;
        v9 = 0;
        v12 = &v15;
LABEL_10:
        v11 = 22.5;
        v13 = 22.5;
        v14 = 22.5;
LABEL_11:
        result = CGPatternCreate(0, *(CGRect *)&v8, v12, v13, v14, kCGPatternTilingConstantSpacing, 0, v7);
        break;
      default:
        result = 0;
        break;
    }
  }
  return result;
}

void _UICheckerStencilPattern(uint64_t a1, CGContext *a2)
{
  CGRect v3;
  CGRect v4;
  CGRect v5;
  CGRect v6;

  v3.origin.x = 0.5;
  v3.origin.y = 0.5;
  v3.size.width = 14.0;
  v3.size.height = 14.0;
  v4 = CGRectIntegral(v3);
  CGContextFillRect(a2, v4);
  v5.origin.x = 15.5;
  v5.origin.y = 15.5;
  v5.size.width = 14.0;
  v5.size.height = 14.0;
  v6 = CGRectIntegral(v5);
  CGContextFillRect(a2, v6);
}

void _UIDiamondStencilPattern(uint64_t a1, CGContext *a2)
{
  CGRect v3;
  CGRect v4;

  v3.origin.x = 0.0;
  v3.origin.y = 0.0;
  v3.size.width = 15.0;
  v3.size.height = 15.0;
  v4 = CGRectIntegral(v3);
  CGContextFillRect(a2, v4);
}

void _UILineStencilPattern(uint64_t a1, CGContext *a2)
{
  CGRect v3;
  CGRect v4;
  CGRect v5;
  CGRect v6;

  v3.origin.x = 0.0;
  v3.origin.y = 0.0;
  v3.size.width = 15.0;
  v3.size.height = 15.0;
  v4 = CGRectIntegral(v3);
  CGContextFillRect(a2, v4);
  v5.origin.x = 0.0;
  v5.origin.y = 15.0;
  v5.size.width = 15.0;
  v5.size.height = 15.0;
  v6 = CGRectIntegral(v5);
  CGContextFillRect(a2, v6);
}

void _UICircleStencilPattern(int a1, CGContextRef c)
{
  CGContextAddArc(c, 11.25, 11.25, 7.5, 0.0, 6.28318531, 1);
  CGContextFillPath(c);
}

id UITextAnimationsNewRenderController()
{
  void *v0;
  void *v1;
  uint64_t *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;

  _SwiftUITextAnimationProviderClass();
  v1 = v0;
  v2 = (uint64_t *)MEMORY[0x1E0C99750];
  if (!v0 || (objc_opt_respondsToSelector() & 1) == 0)
  {
    v3 = (void *)MEMORY[0x1E0C99DA0];
    v4 = *v2;
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "id<NSCustomTextRendering>  _Nonnull UITextAnimationsNewRenderController(void)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "raise:format:", v4, CFSTR("[SwiftUI] Missing SPI: %@."), v5);

  }
  objc_msgSend(v1, "animationRenderer");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v6)
  {
    v7 = (void *)MEMORY[0x1E0C99DA0];
    v8 = *v2;
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "id<NSCustomTextRendering>  _Nonnull UITextAnimationsNewRenderController(void)");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "raise:format:", v8, CFSTR("[SwiftUI] Returned nil: %@."), v9);

  }
  return v6;
}

void _SwiftUITextAnimationProviderClass()
{
  void (*v0)(void);
  id v1;
  void *v2;
  void *v3;
  _QWORD v4[5];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;

  v5 = 0;
  v6 = &v5;
  v7 = 0x2020000000;
  v0 = (void (*)(void))_MergedGlobals_1037;
  v8 = _MergedGlobals_1037;
  if (!_MergedGlobals_1037)
  {
    v4[0] = MEMORY[0x1E0C809B0];
    v4[1] = 3221225472;
    v4[2] = __getSwiftUITextAnimationProviderClassSymbolLoc_block_invoke;
    v4[3] = &unk_1E16B14C0;
    v4[4] = &v5;
    __getSwiftUITextAnimationProviderClassSymbolLoc_block_invoke(v4);
    v0 = (void (*)(void))v6[3];
  }
  _Block_object_dispose(&v5, 8);
  if (v0)
  {
    v0();
    v1 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class<NSTextAnimationProvider> _SwiftUITextAnimationProviderClass(void)");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UITextAnimationsBridge.m"), 24, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185BB999C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id UITextAnimationWithName(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v1 = a1;
  _SwiftUITextAnimationProviderClass();
  v3 = v2;
  if (!v2 || (objc_opt_respondsToSelector() & 1) == 0)
  {
    v4 = (void *)MEMORY[0x1E0C99DA0];
    v5 = *MEMORY[0x1E0C99750];
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "id  _Nullable UITextAnimationWithName(NSString *__strong _Nonnull)");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "raise:format:", v5, CFSTR("[SwiftUI] Missing SPI: %@."), v6);

  }
  objc_msgSend(v3, "animationWithName:", v1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

id UITextAnimationWithNameAndLocaleIdentifier(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;

  v3 = a1;
  v4 = a2;
  _SwiftUITextAnimationProviderClass();
  v6 = v5;
  if (!v5 || (objc_opt_respondsToSelector() & 1) == 0)
  {
    v7 = (void *)MEMORY[0x1E0C99DA0];
    v8 = *MEMORY[0x1E0C99750];
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "id  _Nullable UITextAnimationWithNameAndLocaleIdentifier(NSString *__strong _Nonnull, NSString *__strong _Nonnull)");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "raise:format:", v8, CFSTR("[SwiftUI] Missing SPI: %@."), v9);

  }
  objc_msgSend(v6, "animationWithName:localeIdentifier:", v3, v4);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

id UITextAnimationNamesForDomain(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v1 = a1;
  _SwiftUITextAnimationProviderClass();
  v3 = v2;
  if (!v2 || (objc_opt_respondsToSelector() & 1) == 0)
  {
    v4 = (void *)MEMORY[0x1E0C99DA0];
    v5 = *MEMORY[0x1E0C99750];
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSArray<NSString *> * _Nonnull UITextAnimationNamesForDomain(NSString * _Nullable __strong)");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "raise:format:", v5, CFSTR("[SwiftUI] Missing SPI: %@."), v6);

  }
  objc_msgSend(v3, "animationNamesForDomain:", v1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

void *__getSwiftUITextAnimationProviderClassSymbolLoc_block_invoke(_QWORD *a1)
{
  void *v2;
  void *result;
  void *v4;

  if (!qword_1ECD7D9D8)
    qword_1ECD7D9D8 = _sl_dlopen();
  v2 = (void *)qword_1ECD7D9D8;
  if (!qword_1ECD7D9D8)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    a1 = (_QWORD *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *SwiftUILibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("UITextAnimationsBridge.m"), 23, CFSTR("%s"), 0);

    __break(1u);
    free(v4);
  }
  result = dlsym(v2, "SwiftUITextAnimationProviderClass");
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = result;
  _MergedGlobals_1037 = *(_UNKNOWN **)(*(_QWORD *)(a1[4] + 8) + 24);
  return result;
}

void sub_185BBA73C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _UIAttributedTitleForTitle(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v13;
  _QWORD v14[2];

  v14[1] = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (a1)
  {
    v13 = *(_QWORD *)off_1E1678D90;
    v14[0] = v5;
    v7 = (void *)MEMORY[0x1E0C99D80];
    v8 = a1;
    objc_msgSend(v7, "dictionaryWithObjects:forKeys:count:", v14, &v13, 1);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = (void *)objc_msgSend(v9, "mutableCopy");

    if (objc_msgSend(v6, "count"))
      objc_msgSend(v10, "addEntriesFromDictionary:", v6);
    v11 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3498]), "initWithString:attributes:", v8, v10);

  }
  else
  {
    v11 = 0;
  }

  return v11;
}

double _UIFocusEngineSensitivityForEdgeLength(double a1)
{
  double v1;
  double v2;
  uint64_t v3;
  double v4;
  double v5;

  v1 = 6.0;
  v2 = 70.0;
  if (a1 >= 70.0)
  {
    v1 = 1.0;
    if (a1 <= 1700.0)
    {
      v3 = 0;
      v4 = 6.0;
      while (1)
      {
        v5 = *(double *)((char *)&_sensitivityKeyframes + v3);
        v1 = *(double *)((char *)&_sensitivityKeyframes + v3 + 8);
        if (v5 == a1)
          break;
        if (v5 >= a1)
        {
          if (v5 > a1)
            return v1 * ((a1 - v2) / (v5 - v2)) + v4 * (1.0 - (a1 - v2) / (v5 - v2));
        }
        else
        {
          v4 = *(double *)((char *)&_sensitivityKeyframes + v3 + 8);
          v2 = *(double *)((char *)&_sensitivityKeyframes + v3);
        }
        v3 += 16;
        if (v3 == 96)
        {
          v1 = 1.0;
          v5 = 1700.0;
          return v1 * ((a1 - v2) / (v5 - v2)) + v4 * (1.0 - (a1 - v2) / (v5 - v2));
        }
      }
    }
  }
  return v1;
}

double _UIFocusEngineAcceleratedSpeedForSpeed(uint64_t a1, int a2, int a3, double a4)
{
  double v5;
  double v6;
  double v7;
  _BOOL4 v8;
  double v9;
  double v10;
  double v11;
  double v12;
  unint64_t v13;
  double v14;
  uint64_t SensitivitySetting;

  v5 = 1.0;
  v6 = 0.5;
  if (!a3)
    v6 = 1.0;
  v7 = 0.1;
  if (a3)
    v7 = 0.15;
  if (a2)
  {
    v6 = -0.4;
    v7 = 3.38;
  }
  v8 = a1 == 2;
  if (a1 == 2)
    v5 = v6;
  v9 = 0.16;
  if (a1 == 2)
    v9 = v7;
  v10 = 15.0;
  if ((v8 & a2) != 0)
    v10 = 0.75;
  v11 = 225.0;
  if ((v8 & a2) != 0)
    v11 = 0.5625;
  if (v10 <= a4)
    v12 = (v5 + v10 * (v9 + v9)) * a4 - (v10 * (v5 + v10 * (v9 + v9)) - (v11 * v9 + v10 * v5));
  else
    v12 = a4 * a4 * v9 + v5 * a4;
  if (a1 == 2 && (v13 = UIFocusGetSensitivitySetting(), v13 < 3))
  {
    v14 = dbl_18667C850[v13];
  }
  else
  {
    SensitivitySetting = UIFocusGetSensitivitySetting();
    v14 = 0.65;
    if (SensitivitySetting != 1)
      v14 = 0.5;
    if (SensitivitySetting == 2)
      v14 = 0.8125;
  }
  return (v12 * v14 + (1.0 - v14) * a4) * 2.15;
}

id _UIFocusEngineJoystickTimer(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0C99E88], "timerWithTimeInterval:target:selector:userInfo:repeats:", a1, a2, 0, 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E58], "currentRunLoop");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "addTimer:forMode:", v2, *MEMORY[0x1E0C99860]);

  return v2;
}

void sub_185BC482C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185BC49F8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void _UIFocusRegionSearchContextAddChildItemsInEnvironmentContainer(void *a1, void *a2, void *a3, int a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  void *v21;
  void *v22;
  void *v23;
  int v24;
  void *v25;
  void *v26;
  char IsFocusableInFocusSystemWithSearchInfo;
  void *v28;
  void *v29;
  void *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  void *v39;
  void *v40;
  id v41;

  v7 = a1;
  v8 = a2;
  v9 = a3;
  v41 = v7;
  v10 = v8;
  objc_msgSend(v10, "focusItemContainer");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v11)
    goto LABEL_9;
  objc_msgSend(v41, "searchArea");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "coordinateSpace");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = _UIFocusEnvironmentContainerFrameInCoordinateSpace(v10, v13);
  v16 = v15;
  v18 = v17;
  v20 = v19;

  objc_msgSend(v41, "searchArea");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v13) = objc_msgSend(v21, "intersectsRect:", v14, v16, v18, v20);

  if (!(_DWORD)v13)
  {
LABEL_9:

    v28 = v41;
LABEL_10:

    goto LABEL_11;
  }
  _UIFocusItemSafeCast(v10);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v41, "searchInfo");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = objc_msgSend(v23, "treatFocusableItemAsLeaf");

  if (!v24 || _UITVFocusItemAllowsFocusInChildrenWhenFocused(v22) && _UIFocusItemIsFocused(v22) || !v22)
  {

  }
  else
  {
    objc_msgSend(v41, "focusSystem");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v41, "searchInfo");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    IsFocusableInFocusSystemWithSearchInfo = _UIFocusItemIsFocusableInFocusSystemWithSearchInfo(v22, v25, v26);

    if ((IsFocusableInFocusSystemWithSearchInfo & 1) != 0)
      goto LABEL_11;
  }
  if (v9)
  {
    +[_UIFocusEnvironmentContainerTuple tupleWithOwningEnvironment:itemContainer:](_UIFocusEnvironmentContainerTuple, "tupleWithOwningEnvironment:itemContainer:", v10, v9);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    _UIFocusItemContainerAddChildItemsInContextWithOptions(v29, v41, a4 & 0xFFFFFF);

  }
  if (_IsKindOfUIView((uint64_t)v10)
    && (_UIViewShouldReturnSubviewsInFocusItemsInRect() & 1) == 0
    && (_UISwiftUIFocusItemContainerReturnsSubviewsInFocusItemsInRect(v9) & 1) == 0)
  {
    objc_msgSend(v41, "searchArea");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "frame");
    v32 = v31;
    v34 = v33;
    v36 = v35;
    v38 = v37;
    objc_msgSend(v41, "searchArea");
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v39, "coordinateSpace");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "_childFocusRegionsInRect:inCoordinateSpace:", v40, v32, v34, v36, v38);
    v28 = (void *)objc_claimAutoreleasedReturnValue();

    if (v28)
      objc_msgSend(v41, "addRegionsInContainers:", v28);
    goto LABEL_10;
  }
LABEL_11:

}

void _UIFocusRegionSearchContextSearchForFocusRegionsInEnvironment(void *a1, void *a2, int a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  _UIFocusItemRegion *v21;
  void *v22;
  _UIFocusItemRegion *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  _UIFocusSpeedBumpRegion *v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  CGRect v38;
  CGRect v39;

  v5 = a1;
  v6 = a2;
  _UIFocusItemSafeCast(v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "focusItemContainer");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "coordinateSpace");
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = _UITVFocusItemAddsChildFocusItemsBeforeSelf(v7);
  objc_msgSend(v5, "searchArea");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "coordinateSpace");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v9)
    _UIFocusRegionSearchContextAddChildItemsInEnvironmentContainer(v5, v6, v8, a3 & 0xFFFFFF);
  if (v7 && (a3 & 1) != 0)
  {
    if ((_UITVFocusItemAddsChildFocusItemsButNotSelf(v7) & 1) == 0)
    {
      objc_msgSend(v5, "searchInfo", v36);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = objc_msgSend(v12, "shouldIncludeFocusItem:", v7);

      if (v13)
      {
        v14 = _UIFocusItemFrameInCoordinateSpace(v7, v11);
        v16 = v15;
        v18 = v17;
        v20 = v19;
        if (objc_msgSend(v10, "intersectsRect:"))
        {
          if ((_UIFocusItemIsLegacyTransparentFocusRegionInSearchContext(v7, v5) & 1) == 0)
          {
            v21 = [_UIFocusItemRegion alloc];
            objc_msgSend(v5, "focusSystem");
            v22 = (void *)objc_claimAutoreleasedReturnValue();
            v23 = -[_UIFocusItemRegion initWithFrame:coordinateSpace:item:focusSystem:](v21, "initWithFrame:coordinateSpace:item:focusSystem:", v11, v7, v22, v14, v16, v18, v20);

            objc_msgSend(v5, "addRegion:", v23);
          }
        }
      }
    }
    v24 = v5;
    v25 = v7;
  }
  else
  {
    v26 = v5;
    v27 = v7;
    if (!v7)
      goto LABEL_14;
  }
  v28 = _UIFocusItemFocusSpeedBumpEdges(v7);
  if (v28)
  {
    v29 = v28;
    objc_msgSend(v5, "coordinateSpace");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    v38.origin.x = _UIFocusItemFrameInCoordinateSpace(v7, v30);
    v39 = CGRectInset(v38, -1.0, -1.0);
    v31 = -[_UIFocusSpeedBumpRegion initWithFrame:coordinateSpace:speedBumpEdges:]([_UIFocusSpeedBumpRegion alloc], "initWithFrame:coordinateSpace:speedBumpEdges:", v30, v29, v39.origin.x, v39.origin.y, v39.size.width, v39.size.height);
    objc_msgSend(v5, "addRegion:", v31);

  }
LABEL_14:

  if ((v9 & 1) == 0)
    _UIFocusRegionSearchContextAddChildItemsInEnvironmentContainer(v5, v6, v8, a3 & 0xFFFFFF);
  v32 = v5;
  v33 = v7;
  v34 = v33;
  if (v7 && _IsKindOfUIView((uint64_t)v33))
  {
    objc_msgSend(v34, "focusGuides");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v32, "addRegionsInContainers:", v35);

  }
  v37 = v32;
  if ((_UIFocusItemContainerSupportsInvalidatingFocusCache(v8) & 1) == 0)
    objc_msgSend(v37, "markContainerAsProvidingDynamicContent");

}

uint64_t _UIEffectiveFocusRegionBoundariesForHeading(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (result)
  {
    if (result == 15)
    {
      return 111;
    }
    else
    {
      v2 = result & 0x10;
      if ((result & 0x24) != 0)
        v3 = result & 0x10 | 0x24;
      else
        v3 = result & 0x10;
      if ((result & 0x41) != 0)
        v3 |= 0x41uLL;
      if ((a2 & 1) != 0)
        v2 = v3;
      if ((result & 0x21) != 0)
        v4 = v2 | 0x21;
      else
        v4 = v2;
      if ((result & 0x44) != 0)
        v4 |= 0x44uLL;
      if ((a2 & 2) != 0)
        v2 = v4;
      if ((result & 0x28) != 0)
        v5 = v2 | 0x28;
      else
        v5 = v2;
      if ((result & 0x42) != 0)
        v5 |= 0x42uLL;
      if ((a2 & 0x24) != 0)
        v2 = v5;
      if ((result & 0x22) != 0)
        v6 = v2 | 0x22;
      else
        v6 = v2;
      if ((result & 0x48) != 0)
        v6 |= 0x48uLL;
      if ((a2 & 0x18) != 0)
        return v6;
      else
        return v2;
    }
  }
  return result;
}

_UIFocusRegionContainerProxy *_UIFocusRegionContainerFromEnvironmentAndContainer(uint64_t a1, uint64_t a2)
{
  id v2;
  void *v3;
  void *v4;
  _UIFocusRegionContainerProxy *v5;
  _UIFocusRegionContainerProxy *v6;

  +[_UIFocusEnvironmentContainerTuple tupleWithOwningEnvironment:itemContainer:](_UIFocusEnvironmentContainerTuple, "tupleWithOwningEnvironment:itemContainer:", a1, a2);
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "owningEnvironment");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "itemContainer");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3 == v4 && objc_msgSend(v3, "conformsToProtocol:", &unk_1EDE05E38))
    v5 = v3;
  else
    v5 = -[_UIFocusRegionContainerProxy initWithEnvironmentContainer:]([_UIFocusRegionContainerProxy alloc], "initWithEnvironmentContainer:", v2);
  v6 = v5;

  return v6;
}

void _UISnapshotVisitFocusRegion(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v11;
  id v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  id v26;
  char isKindOfClass;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t j;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t k;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t i;
  void *v42;
  int CanBecomeFocused;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t n;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t m;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  _BYTE v74[128];
  _BYTE v75[128];
  _BYTE v76[128];
  _BYTE v77[128];
  _BYTE v78[128];
  uint64_t v79;
  CGRect v80;
  CGRect v81;

  v79 = *MEMORY[0x1E0C80C00];
  v11 = a1;
  v12 = a2;
  v13 = a3;
  if (v13
    && (!(_DWORD)a4 || objc_msgSend(v12, "includeFocusGuides"))
    && objc_msgSend(v13, "_legacy_isEligibleForFocusInteraction"))
  {
    objc_msgSend(v13, "_focusRegionFrame");
    v15 = v14;
    v17 = v16;
    v19 = v18;
    v21 = v20;
    if ((a6 & 1) == 0)
    {
      objc_msgSend(v12, "viewSearchRect");
      v81.origin.x = v22;
      v81.origin.y = v23;
      v81.size.width = v24;
      v81.size.height = v25;
      v80.origin.x = v15;
      v80.origin.y = v17;
      v80.size.width = v19;
      v80.size.height = v21;
      if (!CGRectIntersectsRect(v80, v81))
      {
        v72 = 0u;
        v73 = 0u;
        v70 = 0u;
        v71 = 0u;
        objc_msgSend(v13, "_focusRegionGuides");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        v38 = objc_msgSend(v28, "countByEnumeratingWithState:objects:count:", &v70, v78, 16);
        if (v38)
        {
          v39 = v38;
          v40 = *(_QWORD *)v71;
          do
          {
            for (i = 0; i != v39; ++i)
            {
              if (*(_QWORD *)v71 != v40)
                objc_enumerationMutation(v28);
              _UISnapshotVisitFocusRegion(v11, v12, *(_QWORD *)(*((_QWORD *)&v70 + 1) + 8 * i), 1, a5, 0);
            }
            v39 = objc_msgSend(v28, "countByEnumeratingWithState:objects:count:", &v70, v78, 16);
          }
          while (v39);
        }
        goto LABEL_62;
      }
    }
    if ((a4 & 1) != 0)
    {
      v26 = v13;
      if (!_IsFocusContainerGuide_UIFocusContainerGuideClass)
        _IsFocusContainerGuide_UIFocusContainerGuideClass = objc_opt_class();
      isKindOfClass = objc_opt_isKindOfClass();

    }
    else
    {
      if (objc_msgSend(v13, "_isTransparentFocusRegion"))
      {
        _UIFocusChildLegacyRegionsInRegionForRequest(v13, v12);
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        v66 = 0u;
        v67 = 0u;
        v68 = 0u;
        v69 = 0u;
        v29 = objc_msgSend(v28, "countByEnumeratingWithState:objects:count:", &v66, v77, 16);
        if (v29)
        {
          v30 = v29;
          v31 = *(_QWORD *)v67;
          do
          {
            for (j = 0; j != v30; ++j)
            {
              if (*(_QWORD *)v67 != v31)
                objc_enumerationMutation(v28);
              _UISnapshotVisitFocusRegion(v11, v12, *(_QWORD *)(*((_QWORD *)&v66 + 1) + 8 * j), 0, 0, a6);
            }
            v30 = objc_msgSend(v28, "countByEnumeratingWithState:objects:count:", &v66, v77, 16);
          }
          while (v30);
        }
        v64 = 0u;
        v65 = 0u;
        v62 = 0u;
        v63 = 0u;
        objc_msgSend(v13, "_focusRegionGuides");
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        v34 = objc_msgSend(v33, "countByEnumeratingWithState:objects:count:", &v62, v76, 16);
        if (v34)
        {
          v35 = v34;
          v36 = *(_QWORD *)v63;
          do
          {
            for (k = 0; k != v35; ++k)
            {
              if (*(_QWORD *)v63 != v36)
                objc_enumerationMutation(v33);
              _UISnapshotVisitFocusRegion(v11, v12, *(_QWORD *)(*((_QWORD *)&v62 + 1) + 8 * k), 1, 0, a6);
            }
            v35 = objc_msgSend(v33, "countByEnumeratingWithState:objects:count:", &v62, v76, 16);
          }
          while (v35);
        }
        goto LABEL_61;
      }
      isKindOfClass = 0;
    }
    objc_msgSend(v12, "focusSystem");
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    CanBecomeFocused = _UIFocusItemCanBecomeFocused(v13, v42);

    objc_msgSend(v13, "_focusRegionFocusSystem");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    if (v28)
    {
      objc_msgSend(v12, "focusSystem");
      v44 = (void *)objc_claimAutoreleasedReturnValue();

      if (v44 == v28 && ((CanBecomeFocused ^ 1) & 1) == 0)
      {
LABEL_39:
        if ((isKindOfClass & 1) != 0)
        {
          if (objc_msgSend(v12, "includeFocusContainerGuides"))
            objc_msgSend(v11, "_addFocusContainerGuide:withFrame:", v13, v15, v17, v19, v21);
        }
        else
        {
          objc_msgSend(v11, "_addFocusableRegion:isFocusGuide:withFrame:", v13, a4, v15, v17, v19, v21);
        }
LABEL_54:
        v56 = 0u;
        v57 = 0u;
        v54 = 0u;
        v55 = 0u;
        objc_msgSend(v13, "_focusRegionGuides", 0);
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        v50 = objc_msgSend(v33, "countByEnumeratingWithState:objects:count:", &v54, v74, 16);
        if (v50)
        {
          v51 = v50;
          v52 = *(_QWORD *)v55;
          do
          {
            for (m = 0; m != v51; ++m)
            {
              if (*(_QWORD *)v55 != v52)
                objc_enumerationMutation(v33);
              _UISnapshotVisitFocusRegion(v11, v12, *(_QWORD *)(*((_QWORD *)&v54 + 1) + 8 * m), 1, a5, a6);
            }
            v51 = objc_msgSend(v33, "countByEnumeratingWithState:objects:count:", &v54, v74, 16);
          }
          while (v51);
        }
LABEL_61:

LABEL_62:
        goto LABEL_63;
      }
    }
    else if ((CanBecomeFocused & 1) != 0)
    {
      goto LABEL_39;
    }
    if (!(isKindOfClass & 1 | ((a5 & 1) == 0)))
      objc_msgSend(v11, "_occludeFocusInFrame:", v15, v17, v19, v21);
    _UIFocusChildLegacyRegionsInRegionForRequest(v13, v12);
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    v58 = 0u;
    v59 = 0u;
    v60 = 0u;
    v61 = 0u;
    v46 = objc_msgSend(v45, "countByEnumeratingWithState:objects:count:", &v58, v75, 16);
    if (v46)
    {
      v47 = v46;
      v48 = *(_QWORD *)v59;
      do
      {
        for (n = 0; n != v47; ++n)
        {
          if (*(_QWORD *)v59 != v48)
            objc_enumerationMutation(v45);
          _UISnapshotVisitFocusRegion(v11, v12, *(_QWORD *)(*((_QWORD *)&v58 + 1) + 8 * n), 0, a5, a6);
        }
        v47 = objc_msgSend(v45, "countByEnumeratingWithState:objects:count:", &v58, v75, 16);
      }
      while (v47);
    }

    goto LABEL_54;
  }
LABEL_63:

}

void _UICheckerStencilPattern_0(uint64_t a1, CGContext *a2)
{
  CGRect v3;
  CGRect v4;
  CGRect v5;
  CGRect v6;

  v3.origin.x = 0.5;
  v3.origin.y = 0.5;
  v3.size.width = 14.0;
  v3.size.height = 14.0;
  v4 = CGRectIntegral(v3);
  CGContextFillRect(a2, v4);
  v5.origin.x = 15.5;
  v5.origin.y = 15.5;
  v5.size.width = 14.0;
  v5.size.height = 14.0;
  v6 = CGRectIntegral(v5);
  CGContextFillRect(a2, v6);
}

void _UIDiamondStencilPattern_0(uint64_t a1, CGContext *a2)
{
  CGRect v3;
  CGRect v4;

  v3.origin.x = 0.0;
  v3.origin.y = 0.0;
  v3.size.width = 15.0;
  v3.size.height = 15.0;
  v4 = CGRectIntegral(v3);
  CGContextFillRect(a2, v4);
}

void _UILineStencilPattern_0(uint64_t a1, CGContext *a2)
{
  CGRect v3;
  CGRect v4;
  CGRect v5;
  CGRect v6;

  v3.origin.x = 0.0;
  v3.origin.y = 0.0;
  v3.size.width = 15.0;
  v3.size.height = 15.0;
  v4 = CGRectIntegral(v3);
  CGContextFillRect(a2, v4);
  v5.origin.x = 0.0;
  v5.origin.y = 15.0;
  v5.size.width = 15.0;
  v5.size.height = 15.0;
  v6 = CGRectIntegral(v5);
  CGContextFillRect(a2, v6);
}

void _UICircleStencilPattern_0(int a1, CGContextRef c)
{
  CGContextAddArc(c, 11.25, 11.25, 7.5, 0.0, 6.28318531, 1);
  CGContextFillPath(c);
}

id _UIFocusChildLegacyRegionsInRegionForRequest(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t i;
  void *v33;
  id v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _BYTE v40[128];
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = (void *)MEMORY[0x1E0C99DE8];
  objc_msgSend(v4, "viewSearchRect");
  objc_msgSend(v3, "_childFocusRegionsInRect:inCoordinateSpace:", 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "arrayWithArray:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if ((_IsKindOfUIView((uint64_t)v3) & 1) != 0 || (objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v3, "focusItemContainer");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    +[UIWindow _applicationKeyWindow](UIWindow, "_applicationKeyWindow");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v8, "__isKindOfUIResponder"))
    {
      objc_msgSend(v8, "_window");
      v10 = objc_claimAutoreleasedReturnValue();

      v9 = (void *)v10;
    }
    v35 = v4;
    objc_msgSend(v4, "viewSearchRect");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;
    objc_msgSend(v8, "coordinateSpace");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "convertRect:toCoordinateSpace:", v19, v12, v14, v16, v18);
    v21 = v20;
    v23 = v22;
    v25 = v24;
    v27 = v26;

    objc_msgSend(v8, "focusItemsInRect:", v21, v23, v25, v27);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    v36 = 0u;
    v37 = 0u;
    v38 = 0u;
    v39 = 0u;
    v29 = objc_msgSend(v28, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
    if (v29)
    {
      v30 = v29;
      v31 = *(_QWORD *)v37;
      do
      {
        for (i = 0; i != v30; ++i)
        {
          if (*(_QWORD *)v37 != v31)
            objc_enumerationMutation(v28);
          v33 = *(void **)(*((_QWORD *)&v36 + 1) + 8 * i);
          if ((_IsKindOfUIView((uint64_t)v33) & 1) != 0
            || objc_msgSend(v33, "conformsToProtocol:", &unk_1EDDD5198))
          {
            objc_msgSend(v7, "addObject:", v33);
          }
        }
        v30 = objc_msgSend(v28, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
      }
      while (v30);
    }

    v4 = v35;
  }

  return v7;
}

void sub_185BD5928(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

double _UIFocusMapDistanceToRegionBoundary(uint64_t a1, unsigned int a2, void *a3, uint64_t a4, uint64_t a5, void *a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  unint64_t v29;
  double MidY;
  char v31;
  double v32;
  double v33;
  double v34;
  CGFloat v35;
  double v36;
  double v37;
  double v38;
  double v39;
  _BOOL4 v40;
  _BOOL4 v41;
  double v42;
  double v43;
  double v44;
  double v45;
  uint64_t v46;
  CGFloat v47;
  double v48;
  double v49;
  double v50;
  double v51;
  long double v52;
  long double v53;
  _BOOL4 v55;
  unint64_t v56;
  BOOL v57;
  _BOOL4 v58;
  BOOL v59;
  BOOL v60;
  double MidX;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;

  v19 = a3;
  objc_msgSend(a6, "snapshotFrameForRegion:", a1);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v28 = objc_msgSend(v19, "heading");
  v29 = v28;
  if (a4)
  {
    if (a4 != 1)
    {
      v36 = 1.79769313e308;
      goto LABEL_27;
    }
    v62.origin.x = v21;
    v62.origin.y = v23;
    v62.size.width = v25;
    v62.size.height = v27;
    MidX = CGRectGetMidX(v62);
    v63.origin.x = v21;
    v63.origin.y = v23;
    v63.size.width = v25;
    v63.size.height = v27;
    MidY = CGRectGetMidY(v63);
    if ((a2 & 0x10) != 0)
      goto LABEL_10;
    if ((a2 & 0x20) != 0 && (v29 & 1) != 0 || (a2 & 0x40) != 0 && (v29 & 2) != 0)
    {
      v31 = 2;
    }
    else
    {
      v55 = (a2 & 0x20) == 0;
      if ((v29 & 2) == 0)
        v55 = 1;
      v31 = 1;
      if ((((a2 & 0x40) != 0) & v29) == 0 && v55)
      {
        v56 = v29 & 0x218;
        v57 = (a2 & 0x40) == 0 || v56 == 0;
        v58 = v57;
        v31 = 8;
        if ((((v29 & 0x124) != 0) & (a2 >> 5)) == 0 && v58)
        {
          v59 = (a2 & 0x20) == 0 || v56 == 0;
          v60 = v59;
          v31 = 4;
          if ((((v29 & 0x124) != 0) & (a2 >> 6)) == 0 && v60)
            goto LABEL_10;
        }
      }
    }
    MidX = _UIRectDeparturePointAlongFocusHeading(v31, v21, v23, v25, v27);
    MidY = v32;
LABEL_10:
    v33 = MidY;
    v64.origin.x = a7;
    v64.origin.y = a8;
    v64.size.width = a9;
    v64.size.height = a10;
    v34 = CGRectGetMidX(v64);
    v65.origin.x = a7;
    v65.origin.y = a8;
    v65.size.width = a9;
    v65.size.height = a10;
    v35 = CGRectGetMidY(v65);
    v36 = hypot(MidX - v34, v33 - v35);
    goto LABEL_27;
  }
  v37 = _UIRectDeparturePointAlongFocusHeading(v28, a7, a8, a9, a10);
  v39 = v38;
  v40 = (v29 & 3) != 0;
  if ((v29 & 0xC) == 0)
    v40 = 0;
  v41 = a5 == 2 && v40;
  if ((a2 & 0x10) != 0 || v41)
  {
    v66.origin.x = v21;
    v66.origin.y = v23;
    v66.size.width = v25;
    v66.size.height = v27;
    v47 = CGRectGetMidX(v66);
    v67.origin.x = v21;
    v67.origin.y = v23;
    v67.size.width = v25;
    v67.size.height = v27;
    v23 = CGRectGetMidY(v67);
    v21 = v47;
  }
  else
  {
    if ((a2 & 0x20) != 0)
    {
      v46 = (v29 >> 1) & 0x114 | (2 * (int)v29) & 0x228 | (__rbit32(v29) >> 30);
      v42 = v21;
      v43 = v23;
      v44 = v25;
      v45 = v27;
    }
    else
    {
      if ((a2 & 0x40) == 0)
        goto LABEL_25;
      v42 = v21;
      v43 = v23;
      v44 = v25;
      v45 = v27;
      LOBYTE(v46) = v29;
    }
    v21 = _UIRectDeparturePointAlongFocusHeading(v46, v42, v43, v44, v45);
    v23 = v48;
  }
LABEL_25:
  _UIPointAxisAlignedDistanceAlongFocusHeading(v29, v37, v39, v21, v23);
  v36 = v49;
  if (v41)
  {
    v50 = atan2(v23 - v39, v21 - v37);
    objc_msgSend(v19, "_velocity");
    v52 = v51;
    objc_msgSend(v19, "_velocity");
    v36 = v36 * (vabdd_f64(atan2(v52, v53), v50) / 0.785398163 + 1.0);
  }
LABEL_27:

  return round(v36);
}

void sub_185BDD854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  _Block_object_dispose(&a41, 8);
  _Unwind_Resume(a1);
}

CFTypeRef _OpaqueRetain(int a1, CFTypeRef cf)
{
  return CFRetain(cf);
}

void _OpaqueRelease(int a1, CFTypeRef cf)
{
  CFRelease(cf);
}

uint64_t _OpaqueIsEqual(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;

  if (a1 == a2)
    return 1;
  else
    return objc_msgSend(a1, "isEqual:", a2, v2, v3);
}

void _CGRectValueFree(int a1, void *a2)
{
  free(a2);
}

BOOL _CGRectValueIsEqual(CGRect *a1, CGRect *a2)
{
  return CGRectEqualToRect(*a1, *a2);
}

double _UIRectThatJustBarelyIntersectsRect(double a1, CGFloat y, CGFloat width, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  double x;
  double MaxX;
  CGFloat v16;
  CGFloat height;
  CGFloat v18;
  CGFloat MinX;
  CGFloat MinY;
  double v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  double MaxY;
  CGFloat v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  CGFloat v31;
  CGFloat v34;
  CGFloat v35;
  CGFloat rect;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;

  x = a1;
  MaxX = CGRectGetMaxX(*(CGRect *)&a1);
  v34 = a5;
  v37.origin.x = a5;
  v37.origin.y = a6;
  rect = a7;
  v37.size.width = a7;
  v37.size.height = a8;
  v16 = a8;
  v35 = a8;
  if (MaxX <= CGRectGetMinX(v37))
  {
    v18 = a6;
    v38.origin.x = a5;
    v38.origin.y = a6;
    v38.size.width = rect;
    v38.size.height = v16;
    MinX = CGRectGetMinX(v38);
    v39.origin.x = x;
    v39.origin.y = y;
    v39.size.width = width;
    v39.size.height = a4;
    MinY = CGRectGetMinY(v39);
    v40.origin.x = x;
    v40.origin.y = y;
    v40.size.width = width;
    v40.size.height = a4;
    v41.size.height = CGRectGetHeight(v40);
    v41.size.width = 90.0;
    v41.origin.x = MinX;
    v41.origin.y = MinY;
    v16 = v35;
    v63.origin.x = x;
    v63.origin.y = y;
    v63.size.width = width;
    v63.size.height = a4;
    v42 = CGRectUnion(v41, v63);
    x = v42.origin.x;
    y = v42.origin.y;
    width = v42.size.width;
    height = v42.size.height;
  }
  else
  {
    height = a4;
    v18 = a6;
  }
  v43.origin.x = x;
  v43.origin.y = y;
  v43.size.width = width;
  v43.size.height = height;
  v21 = CGRectGetMinX(v43);
  v22 = v34;
  v44.origin.x = v34;
  v44.origin.y = v18;
  v44.size.width = rect;
  v44.size.height = v16;
  if (v21 >= CGRectGetMaxX(v44))
  {
    v45.origin.x = v34;
    v45.origin.y = v18;
    v45.size.width = rect;
    v45.size.height = v16;
    v23 = CGRectGetMaxX(v45) + -90.0;
    v46.origin.x = x;
    v46.origin.y = y;
    v46.size.width = width;
    v46.size.height = height;
    v24 = CGRectGetMinY(v46);
    v47.origin.x = x;
    v47.origin.y = y;
    v47.size.width = width;
    v47.size.height = height;
    v48.size.height = CGRectGetHeight(v47);
    v48.size.width = 90.0;
    v48.origin.x = v23;
    v48.origin.y = v24;
    v22 = v34;
    v16 = v35;
    v64.origin.x = x;
    v64.origin.y = y;
    v64.size.width = width;
    v64.size.height = height;
    v49 = CGRectUnion(v48, v64);
    x = v49.origin.x;
    y = v49.origin.y;
    width = v49.size.width;
    height = v49.size.height;
  }
  v50.origin.x = x;
  v50.origin.y = y;
  v50.size.width = width;
  v50.size.height = height;
  MaxY = CGRectGetMaxY(v50);
  v51.origin.x = v22;
  v51.origin.y = v18;
  v51.size.width = rect;
  v51.size.height = v16;
  if (MaxY <= CGRectGetMinY(v51))
  {
    v52.origin.x = x;
    v52.origin.y = y;
    v52.size.width = width;
    v52.size.height = height;
    v26 = CGRectGetMinX(v52);
    v53.origin.x = v22;
    v53.origin.y = v18;
    v53.size.width = rect;
    v53.size.height = v16;
    v27 = v22;
    v28 = CGRectGetMinY(v53);
    v54.origin.x = x;
    v54.origin.y = y;
    v54.size.width = width;
    v54.size.height = height;
    v55.size.width = CGRectGetWidth(v54);
    v55.size.height = 90.0;
    v55.origin.x = v26;
    v55.origin.y = v28;
    v22 = v27;
    v16 = v35;
    v65.origin.x = x;
    v65.origin.y = y;
    v65.size.width = width;
    v65.size.height = height;
    v56 = CGRectUnion(v55, v65);
    x = v56.origin.x;
    y = v56.origin.y;
    width = v56.size.width;
    height = v56.size.height;
  }
  v57.origin.x = x;
  v57.origin.y = y;
  v57.size.width = width;
  v57.size.height = height;
  v29 = CGRectGetMinY(v57);
  v58.origin.x = v22;
  v58.origin.y = v18;
  v58.size.width = rect;
  v58.size.height = v16;
  if (v29 >= CGRectGetMaxY(v58))
  {
    v59.origin.x = x;
    v59.origin.y = y;
    v59.size.width = width;
    v59.size.height = height;
    v30 = CGRectGetMinX(v59);
    v60.origin.x = v22;
    v60.origin.y = v18;
    v60.size.width = rect;
    v60.size.height = v16;
    v31 = CGRectGetMaxY(v60) + -90.0;
    v61.origin.x = x;
    v61.origin.y = y;
    v61.size.width = width;
    v61.size.height = height;
    v62.size.width = CGRectGetWidth(v61);
    v62.size.height = 90.0;
    v62.origin.x = v30;
    v62.origin.y = v31;
    v66.origin.x = x;
    v66.origin.y = y;
    v66.size.width = width;
    v66.size.height = height;
    *(_QWORD *)&x = (unint64_t)CGRectUnion(v62, v66);
  }
  return x;
}

void sub_185BDFE7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185BE0DE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185BE1D14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185BE46F4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_185BE51DC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

uint64_t _uiktest_UIAXSetIgnoresAccessibilityEnabled(uint64_t result)
{
  __UIAXIgnoresAccessibilityEnabled = result;
  return result;
}

uint64_t _UIAXAssignFocusToItem(void *a1)
{
  return _UIAXAssignFocusToItemWithOptions(a1, 0);
}

uint64_t _UIAXAssignFocusToItemWithOptions(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  _UIAccessibilityFocusUpdateRequest *v8;
  id v9;

  v3 = a1;
  v4 = 0;
  if (v3 && __UIAXIgnoresAccessibilityEnabled | _kUIAccessibilityEnabled)
  {
    +[UIFocusSystem focusSystemForEnvironment:](UIFocusSystem, "focusSystemForEnvironment:", v3);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (v5)
    {
      _UIFocusEnvironmentContainingView(v3);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = v6;
      if (v6 && _UIFocusEnvironmentAndAncestorsAreEligibleForFocusInteraction(v6))
      {
        v8 = -[_UIFocusUpdateRequest initWithFocusSystem:environment:]([_UIAccessibilityFocusUpdateRequest alloc], "initWithFocusSystem:environment:", v5, v3);
        -[_UIAccessibilityFocusUpdateRequest setOptions:](v8, "setOptions:", a2);
        -[_UIFocusUpdateRequest setAllowsDeferral:](v8, "setAllowsDeferral:", 0);
        v9 = -[UIFocusUpdateContext _initWithFocusUpdateRequest:]([UIFocusUpdateContext alloc], "_initWithFocusUpdateRequest:", v8);
        v4 = objc_msgSend(v5, "_updateFocusImmediatelyWithContext:", v9);

      }
      else
      {
        v4 = 0;
      }

    }
    else
    {
      v4 = 0;
    }

  }
  return v4;
}

double _UIFocusShiftAndExpandRectAlongFocusMovement(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  id v9;
  int v10;
  char v11;
  double x;
  double y;
  double width;
  double height;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  double v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  CGFloat v32;
  int has_internal_diagnostics;
  int v34;
  NSObject *v36;
  unint64_t v37;
  NSObject *v38;
  CGFloat v39;
  CGFloat v40;
  uint8_t buf[16];
  uint8_t v42[16];
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;

  v9 = a1;
  v10 = objc_msgSend(v9, "_isLinearMovement");
  v11 = objc_msgSend(v9, "heading");

  v43.origin.x = a2;
  v43.origin.y = a3;
  v43.size.width = a4;
  v43.size.height = a5;
  v44 = CGRectIntegral(v43);
  x = v44.origin.x;
  y = v44.origin.y;
  width = v44.size.width;
  height = v44.size.height;
  v16 = CGRectGetWidth(v44);
  v45.origin.x = x;
  v45.origin.y = y;
  v45.size.width = width;
  v45.size.height = height;
  v17 = -CGRectGetHeight(v45);
  v18 = 0.0;
  if ((v11 & 1) != 0)
    v19 = v17;
  else
    v19 = 0.0;
  if ((v11 & 8) != 0)
    v20 = -v16;
  else
    v20 = 0.0;
  if ((v11 & 2) == 0)
    v17 = 0.0;
  if ((v11 & 4) != 0)
    v18 = -v16;
  v21 = x + v18;
  v22 = width - (v20 + v18);
  if (!v10)
  {
    v39 = y + v19;
    v40 = height - (v19 + v17);
    v23 = x + v18;
    v24 = _UIVectorForFocusHeading(v11);
    v25 = v22;
    v27 = v26;
    v46.origin.x = x;
    v46.origin.y = y;
    v46.size.width = width;
    v46.size.height = height;
    v28 = v24 * CGRectGetWidth(v46);
    v47.origin.x = x;
    v47.origin.y = y;
    v47.size.width = width;
    v47.size.height = height;
    v29 = v27 * CGRectGetHeight(v47);
    v48.origin.x = v23;
    v48.origin.y = v39;
    v48.size.height = v40;
    v48.size.width = v25;
    v49 = CGRectOffset(v48, v28, v29);
    v21 = v49.origin.x;
    v30 = v49.origin.y;
    v31 = v49.size.width;
    v32 = v49.size.height;
    has_internal_diagnostics = os_variant_has_internal_diagnostics();
    v34 = _UIRectSmartIntersectsRect(v21, v30, v31, v32, x, y, width, height);
    if (has_internal_diagnostics)
    {
      if (v34)
      {
        __UIFaultDebugAssertLog();
        v36 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v36, OS_LOG_TYPE_FAULT))
        {
          *(_WORD *)v42 = 0;
          _os_log_fault_impl(&dword_185066000, v36, OS_LOG_TYPE_FAULT, "Shifting focus search rect in search direction returned an overlapping rect -- this is a UIKit bug.", v42, 2u);
        }

      }
    }
    else if (v34)
    {
      v37 = _UIFocusShiftAndExpandRectAlongHeadingForNonLinearMovement___s_category;
      if (!_UIFocusShiftAndExpandRectAlongHeadingForNonLinearMovement___s_category)
      {
        v37 = __UILogCategoryGetNode("Assert", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
        atomic_store(v37, (unint64_t *)&_UIFocusShiftAndExpandRectAlongHeadingForNonLinearMovement___s_category);
      }
      v38 = *(NSObject **)(v37 + 8);
      if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_185066000, v38, OS_LOG_TYPE_ERROR, "Shifting focus search rect in search direction returned an overlapping rect -- this is a UIKit bug.", buf, 2u);
      }
    }
  }
  return v21;
}

void sub_185BE7014(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185BE8638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _UIFocusScrollOffsetResolverForOffsetResolverType(unint64_t a1)
{
  if (a1 > 3)
    return 0;
  else
    return (id)objc_opt_new();
}

const __CFString *_UIFocusScrollOffsetResolverStringForOffsetResolverType(unint64_t a1)
{
  if (a1 > 3)
    return CFSTR("_UIFocusScrollOffsetResolverTypeInvalid");
  else
    return off_1E16C6C48[a1];
}

id _UIFocusSoundRegistry()
{
  if (qword_1ECD7DBA0 != -1)
    dispatch_once(&qword_1ECD7DBA0, &__block_literal_global_146);
  return (id)qword_1ECD7DBA8;
}

void sub_185BE9384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185BE9660(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185BE9F90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double _UIEditMenuScaledArrowSize(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  double v4;
  double v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;

  v1 = a1;
  _UIEditMenuGetPlatformMetrics(objc_msgSend(v1, "userInterfaceIdiom"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(off_1E167A828, "preferredFontForTextStyle:compatibleWithTraitCollection:", CFSTR("UICTFontTextStyleSubhead"), v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "arrowSize");
  v5 = v4;
  v6 = v1;
  objc_msgSend(off_1E167A828, "preferredFontForTextStyle:compatibleWithTraitCollection:", CFSTR("UICTFontTextStyleSubhead"), v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "_scaledValueForValue:useLanguageAwareScaling:", 0, v5);
  v9 = v8;
  objc_msgSend(v6, "displayScale");
  v11 = v10;

  UIRoundToScale(v9, fmax(v11, 1.0));
  v13 = v12;

  objc_msgSend(v2, "arrowSize");
  v15 = v14;
  v16 = v6;
  objc_msgSend(off_1E167A828, "preferredFontForTextStyle:compatibleWithTraitCollection:", CFSTR("UICTFontTextStyleSubhead"), v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "_scaledValueForValue:useLanguageAwareScaling:", 0, v15);
  v19 = v18;
  objc_msgSend(v16, "displayScale");
  v21 = v20;

  UIRoundToScale(v19, fmax(v21, 1.0));
  return v13;
}

UICollectionViewCompositionalLayout *_UIEditMenuViewHorizontalCompositionalLayout(uint64_t a1, double a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  UICollectionViewCompositionalLayout *v18;
  void *v20;
  _QWORD v21[2];

  v21[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(off_1E1679980, "absoluteDimension:", 1.0 / a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(off_1E1679980, "fractionalHeightDimension:", 1.0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(off_1E16799A8, "sizeWithWidthDimension:heightDimension:", v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(off_1E1679968, "layoutAnchorWithEdges:", 2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  _UIEditMenuGetPlatformMetrics(a1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v3) = objc_msgSend(v7, "showsSeparatorBetweenItems");

  if ((_DWORD)v3)
  {
    objc_msgSend(off_1E16799B8, "supplementaryItemWithLayoutSize:elementKind:containerAnchor:", v5, CFSTR("_UIEditMenuListViewSeparator"), v6);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "setZIndex:", -1);
    v21[0] = v8;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v21, 1);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v9 = (void *)MEMORY[0x1E0C9AA60];
  }
  objc_msgSend(off_1E1679980, "estimatedDimension:", 80.0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(off_1E1679980, "fractionalHeightDimension:", 1.0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(off_1E16799A8, "sizeWithWidthDimension:heightDimension:", v10, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(off_1E1679998, "itemWithLayoutSize:supplementaryItems:", v12, v9);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = v13;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v20, 1);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(off_1E1679990, "verticalGroupWithLayoutSize:subitems:", v12, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(off_1E16799A0, "sectionWithGroup:", v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "setContentInsetsReference:", 1);
  v17 = (void *)objc_opt_new();
  objc_msgSend(v17, "setScrollDirection:", 1);
  objc_msgSend(v17, "setContentInsetsReference:", 1);
  v18 = -[UICollectionViewCompositionalLayout initWithSection:configuration:]([UICollectionViewCompositionalLayout alloc], "initWithSection:configuration:", v16, v17);

  return v18;
}

double _UIEditMenuScaledShadowOffset(void *a1)
{
  id v1;
  void *v2;
  double v3;
  double v4;
  id v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;

  v1 = a1;
  _UIEditMenuGetPlatformMetrics(objc_msgSend(v1, "userInterfaceIdiom"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "shadowOffset");
  v4 = v3;
  v5 = v1;
  objc_msgSend(off_1E167A828, "preferredFontForTextStyle:compatibleWithTraitCollection:", CFSTR("UICTFontTextStyleSubhead"), v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_scaledValueForValue:useLanguageAwareScaling:", 0, v4);
  v8 = v7;
  objc_msgSend(v5, "displayScale");
  v10 = v9;

  UIRoundToScale(v8, fmax(v10, 1.0));
  v12 = v11;

  objc_msgSend(v2, "shadowOffset");
  v14 = v13;
  v15 = v5;
  objc_msgSend(off_1E167A828, "preferredFontForTextStyle:compatibleWithTraitCollection:", CFSTR("UICTFontTextStyleSubhead"), v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "_scaledValueForValue:useLanguageAwareScaling:", 0, v14);
  v18 = v17;
  objc_msgSend(v15, "displayScale");
  v20 = v19;

  UIRoundToScale(v18, fmax(v20, 1.0));
  return v12;
}

void sub_185BEBDD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t _isGestureRecognizerLocationInsideView(void *a1, void *a2)
{
  id v3;
  uint64_t v4;

  v3 = a2;
  objc_msgSend(a1, "locationInView:", v3);
  v4 = objc_msgSend(v3, "pointInside:withEvent:", 0);

  return v4;
}

void _UIEditMenuAppendMenuToSnapshot(void *a1, void *a2, char a3)
{
  id v5;
  void *v6;
  id v7;
  _QWORD v8[4];
  id v9;
  char v10;

  v5 = a2;
  objc_msgSend(a1, "children");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = ___UIEditMenuAppendMenuToSnapshot_block_invoke;
  v8[3] = &unk_1E16C6CF0;
  v9 = v5;
  v10 = a3;
  v7 = v5;
  objc_msgSend(v6, "enumerateObjectsWithOptions:usingBlock:", 0, v8);

}

void _appendBezierPathForPoints(void *a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15)
{
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  id v38;

  v38 = a1;
  objc_msgSend(v38, "moveToPoint:", a8, a9);
  v30 = a2 / sqrt((a12 - a4) * (a12 - a4) + (a13 - a5) * (a13 - a5));
  objc_msgSend(v38, "addQuadCurveToPoint:controlPoint:", a4 + (a12 - a4) * v30, a5 + (a13 - a5) * v30, a4, a5);
  v31 = a3 / sqrt((a4 - a12) * (a4 - a12) + (a5 - a13) * (a5 - a13));
  objc_msgSend(v38, "addLineToPoint:", a12 + (a4 - a12) * v31, a13 + (a5 - a13) * v31);
  v32 = a7;
  v33 = a3 / sqrt((a6 - a12) * (a6 - a12) + (a7 - a13) * (a7 - a13));
  objc_msgSend(v38, "addQuadCurveToPoint:controlPoint:", a12 + (a6 - a12) * v33, a13 + (a7 - a13) * v33, a12, a13);
  v34 = a2 / sqrt((a12 - a6) * (a12 - a6) + (a13 - v32) * (a13 - v32));
  objc_msgSend(v38, "addLineToPoint:", a6 + (a12 - a6) * v34, v32 + (a13 - v32) * v34);
  objc_msgSend(v38, "addQuadCurveToPoint:controlPoint:", a10, a11, a6, a7);
  objc_msgSend(v38, "addLineToPoint:", a10 + a14, a11 + a15);
  objc_msgSend(v38, "addLineToPoint:", a8 + a14, a9 + a15);
  objc_msgSend(v38, "addLineToPoint:", a8, a9);

}

double LoupeConstrainPointHorizontally(double a1, double a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7, double a8, CGFloat a9)
{
  double v18;
  CGRect v20;
  CGRect v21;

  v20.origin.x = a3;
  v20.origin.y = a4;
  v20.size.width = a5;
  v20.size.height = a6;
  v21 = CGRectInset(v20, a9, 0.0);
  v18 = a7 * 0.5;
  if (a1 + a7 * 0.5 > v21.size.width)
    return v21.size.width - v18;
  if (a1 - v18 < a9)
    return v18 + a9;
  return a1;
}

UIStatusBarHideAnimationParameters *LoupeStatusBarAnimationParameters()
{
  UIStatusBarHideAnimationParameters *v0;

  v0 = -[UIStatusBarHideAnimationParameters initWithDefaultParameters]([UIStatusBarHideAnimationParameters alloc], "initWithDefaultParameters");
  -[UIStatusBarAnimationParameters setCurve:](v0, "setCurve:", 5);
  -[UIStatusBarAnimationParameters setDuration:](v0, "setDuration:", 0.2);
  return v0;
}

void sub_185BF30BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _UICollectionViewCellForView(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  char isKindOfClass;
  id v11;

  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v4 == v3)
  {
    v6 = 0;
    v7 = v4;
  }
  else
  {
    v6 = 0;
    v7 = v4;
    do
    {
      v8 = qword_1ECD79E10;
      v9 = v7;
      if (v8 != -1)
        dispatch_once(&qword_1ECD79E10, &__block_literal_global_212);
      isKindOfClass = objc_opt_isKindOfClass();

      if ((isKindOfClass & 1) != 0)
      {
        v11 = v9;

        v6 = v11;
      }
      objc_msgSend(v9, "superview");
      v7 = (id)objc_claimAutoreleasedReturnValue();

    }
    while (v7 && v7 != v3);
  }

  return v6;
}

void sub_185BF484C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,id a44)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a44);
  _Unwind_Resume(a1);
}

void sub_185BF4DA0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_185BF5E78(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 216), 8);
  _Unwind_Resume(a1);
}

void sub_185BF773C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185BF8A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

void sub_185BFCC80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,id location,id a34)
{
  objc_destroyWeak(&location);
  objc_destroyWeak(&a34);
  _Unwind_Resume(a1);
}

void sub_185BFCDD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getDDDetectionControllerClass_block_invoke_0(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7DBF8)
    qword_1ECD7DBF8 = _sl_dlopen();
  if (!qword_1ECD7DBF8)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *DataDetectorsUILibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("_UITextItemActionSheet.m"), 14, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("DDDetectionController");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getDDDetectionControllerClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("_UITextItemActionSheet.m"), 15, CFSTR("Unable to find class %s"), "DDDetectionController");

LABEL_8:
    __break(1u);
  }
  _MergedGlobals_1046 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_185C01CD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_185C01ED0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_185C032E8(_Unwind_Exception *a1)
{
  _UIQOSProcessingEnd();
  _Unwind_Resume(a1);
}

double _UIGetFocusEngineScrollConvergence()
{
  int v0;
  double result;
  int v2;

  if (_UIInternalPreferencesRevisionOnce != -1)
    dispatch_once(&_UIInternalPreferencesRevisionOnce, &__block_literal_global_4_20);
  v0 = _UIInternalPreferencesRevisionVar;
  result = 0.9934;
  if (_UIInternalPreferencesRevisionVar >= 1)
  {
    v2 = _UIInternalPreference_FocusEngineScrollConvergence;
    if (_UIInternalPreferencesRevisionVar != _UIInternalPreference_FocusEngineScrollConvergence)
    {
      while (v0 >= v2)
      {
        _UIInternalPreferenceSync(v0, &_UIInternalPreference_FocusEngineScrollConvergence, (uint64_t)CFSTR("FocusEngineScrollConvergence"), (uint64_t (*)(_DWORD *))_UIInternalPreferenceUpdateDouble);
        v2 = _UIInternalPreference_FocusEngineScrollConvergence;
        if (v0 == _UIInternalPreference_FocusEngineScrollConvergence)
          return 0.9934;
      }
      return *(double *)&qword_1ECD764F0;
    }
  }
  return result;
}

void sub_185C04D6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20,id a21,id a22)
{
  id *v22;
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(location);
  objc_destroyWeak(&a20);
  objc_destroyWeak(&a21);
  objc_destroyWeak(&a22);
  _Unwind_Resume(a1);
}

uint64_t UIFocusGetSensitivitySetting()
{
  uint64_t result;
  void *v1;
  void *v2;
  uint64_t v3;

  if (UIFocusGetSensitivitySetting_onceToken != -1)
    dispatch_once(&UIFocusGetSensitivitySetting_onceToken, &__block_literal_global_218);
  result = _UIFocusSensitivityCachedSetting;
  if (_UIFocusSensitivityCachedSetting == -1)
  {
    _UIKitUserDefaults();
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "objectForKey:", CFSTR("UIFocusSensitivitySetting"));
    v2 = (void *)objc_claimAutoreleasedReturnValue();

    if (v2)
      v3 = objc_msgSend(v2, "integerValue");
    else
      v3 = 1;
    _UIFocusSensitivityCachedSetting = v3;

    return _UIFocusSensitivityCachedSetting;
  }
  return result;
}

void _UIFocusClearCachedSensitivitySettingObserver()
{
  _UIFocusSensitivityCachedSetting = -1;
}

void UIFocusSetSensitivitySetting(uint64_t a1)
{
  void *v2;
  __CFNotificationCenter *DarwinNotifyCenter;
  id v4;

  _UIKitUserDefaults();
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setObject:forKey:", v2, CFSTR("UIFocusSensitivitySetting"));
  if (objc_msgSend(v4, "synchronize"))
  {
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    CFNotificationCenterPostNotification(DarwinNotifyCenter, CFSTR("UIFocusSensitivityUpdateNotification"), 0, 0, 1u);
    _UIFocusSensitivityCachedSetting = -1;
  }

}

_UIButtonBar *_newButtonBar(void *a1)
{
  id v1;
  _UIButtonBar *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  double v7;
  void *v8;
  double v9;
  void *v10;
  double v11;
  void *v12;

  v1 = a1;
  v2 = objc_alloc_init(_UIButtonBar);
  -[_UIButtonBar setMinimumInterItemSpace:](v2, "setMinimumInterItemSpace:", 8.0);
  -[_UIButtonBar setAllowsViewWrappers:](v2, "setAllowsViewWrappers:", 1);
  -[_UIButtonBar view](v2, "view");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setLayoutMargins:", 0.0, 0.0, 0.0, 0.0);

  -[_UIButtonBar view](v2, "view");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setInsetsLayoutMarginsFromSafeArea:", 0);

  -[_UIButtonBar view](v2, "view");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  -[_UIButtonBar view](v2, "view");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v7) = 1148682240;
  objc_msgSend(v6, "setContentCompressionResistancePriority:forAxis:", 0, v7);

  -[_UIButtonBar view](v2, "view");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v9) = 1148829696;
  objc_msgSend(v8, "setContentCompressionResistancePriority:forAxis:", 1, v9);

  -[_UIButtonBar view](v2, "view");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v11) = 1148846080;
  objc_msgSend(v10, "setContentHuggingPriority:forAxis:", 0, v11);

  -[_UIButtonBar set_appearanceDelegate:](v2, "set_appearanceDelegate:", v1);
  objc_opt_class();
  _UIButtonBarButtonMakerForVisualProvider();
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  -[_UIButtonBar setViewUpdater:](v2, "setViewUpdater:", v12);

  return v2;
}

id iconForVideoFile(void *a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  __int128 v8;
  CGImage *v9;
  CGImage *v10;
  id v11;
  CGImage *v12;
  id result;
  void *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  uint64_t v28;

  v2 = objc_msgSend(a1, "path");
  v23 = 0;
  v24 = (uint64_t)&v23;
  v25 = 0x3052000000;
  v26 = __Block_byref_object_copy__91;
  v27 = __Block_byref_object_dispose__91;
  v3 = (void *)_MergedGlobals_11_4;
  v28 = _MergedGlobals_11_4;
  if (!_MergedGlobals_11_4)
  {
    v18 = MEMORY[0x1E0C809B0];
    v19 = 3221225472;
    v20 = (uint64_t)__getAVURLAssetClass_block_invoke;
    v21 = &unk_1E16B14C0;
    v22 = &v23;
    __getAVURLAssetClass_block_invoke((uint64_t)&v18);
    v3 = *(void **)(v24 + 40);
  }
  _Block_object_dispose(&v23, 8);
  v4 = objc_msgSend(v3, "URLAssetWithURL:options:", objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:", v2), 0);
  v23 = 0;
  v24 = (uint64_t)&v23;
  v25 = 0x3052000000;
  v26 = __Block_byref_object_copy__91;
  v27 = __Block_byref_object_dispose__91;
  v5 = (void *)qword_1ECD7AE90;
  v28 = qword_1ECD7AE90;
  if (!qword_1ECD7AE90)
  {
    v18 = MEMORY[0x1E0C809B0];
    v19 = 3221225472;
    v20 = (uint64_t)__getAVAssetImageGeneratorClass_block_invoke;
    v21 = &unk_1E16B14C0;
    v22 = &v23;
    __getAVAssetImageGeneratorClass_block_invoke((uint64_t)&v18);
    v5 = *(void **)(v24 + 40);
  }
  _Block_object_dispose(&v23, 8);
  v6 = (void *)objc_msgSend(v5, "assetImageGeneratorWithAsset:", v4);
  objc_msgSend(v6, "setAppliesPreferredTrackTransform:", 1);
  v17 = 0;
  v18 = 0;
  v19 = (uint64_t)&v18;
  v20 = 0x2020000000;
  v7 = qword_1ECD7AE98;
  v21 = (void *)qword_1ECD7AE98;
  if (!qword_1ECD7AE98)
  {
    v23 = MEMORY[0x1E0C809B0];
    v24 = 3221225472;
    v25 = (uint64_t)__getkCMTimeZeroSymbolLoc_block_invoke;
    v26 = (void (*)(uint64_t, uint64_t))&unk_1E16B14C0;
    v27 = (void (*)(uint64_t))&v18;
    __getkCMTimeZeroSymbolLoc_block_invoke(&v23);
    v7 = *(_QWORD *)(v19 + 24);
  }
  _Block_object_dispose(&v18, 8);
  if (v7)
  {
    v8 = *(_OWORD *)v7;
    v16 = *(_QWORD *)(v7 + 16);
    v15 = v8;
    v9 = (CGImage *)objc_msgSend(v6, "copyCGImageAtTime:actualTime:error:", &v15, 0, &v17);
    if (v9)
    {
      v10 = v9;
      v11 = thumbnailSizedImageForImage(v9);
      CGImageRelease(v10);
      v12 = (CGImage *)objc_msgSend(v11, "CGImage");
      if (v12)
        return thumbnailSizedImageForImage(v12);
    }
    else
    {
      NSLog(CFSTR("UIWebFileUploadPanel: Error creating image for video '%@': %@"), v2, v17);
    }
    NSLog(CFSTR("UIWebFileUploadPanel: Error creating image for video: %@"), a1);
    return fallbackIconForFile((uint64_t)a1);
  }
  else
  {
    v14 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    result = (id)objc_msgSend(v14, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CMTime getkCMTimeZero(void)"), CFSTR("UIWebFileUploadPanel.m"), 65, CFSTR("%s"), dlerror());
    __break(1u);
  }
  return result;
}

void sub_185C0BED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id iconForImageFile(const __CFURL *a1)
{
  uint64_t v2;
  const __CFDictionary *v3;
  CGImageSource *v4;
  CGImage *ThumbnailAtIndex;
  CGImage *v6;
  id v7;
  _QWORD v9[3];
  _QWORD v10[4];

  v10[3] = *MEMORY[0x1E0C80C00];
  v2 = *MEMORY[0x1E0CBD2A0];
  v9[0] = *MEMORY[0x1E0CBD180];
  v9[1] = v2;
  v10[0] = MEMORY[0x1E0C9AAB0];
  v10[1] = &unk_1E1A957C0;
  v9[2] = *MEMORY[0x1E0CBD190];
  v10[2] = MEMORY[0x1E0C9AAB0];
  v3 = (const __CFDictionary *)objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v10, v9, 3);
  v4 = CGImageSourceCreateWithURL(a1, 0);
  ThumbnailAtIndex = CGImageSourceCreateThumbnailAtIndex(v4, 0, v3);
  if (ThumbnailAtIndex)
  {
    v6 = ThumbnailAtIndex;
    v7 = thumbnailSizedImageForImage(ThumbnailAtIndex);
    CFRelease(v6);
    CFRelease(v4);
  }
  else
  {
    NSLog(CFSTR("UIWebFileUploadPanel: Error creating thumbnail image for image: %@"), a1);
    CFRelease(v4);
    return fallbackIconForFile((uint64_t)a1);
  }
  return v7;
}

id fallbackIconForFile(uint64_t a1)
{
  return thumbnailSizedImageForImage((CGImage *)objc_msgSend((id)objc_msgSend((id)objc_msgSend((id)objc_msgSend(MEMORY[0x1E0D96D38], "interactionControllerWithURL:", a1), "icons"), "objectAtIndexedSubscript:", 0), "CGImage"));
}

id thumbnailSizedImageForImage(CGImage *a1)
{
  CGImage *v1;
  double Width;
  size_t Height;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  _QWORD *ContextStack;
  CGContext *v11;
  _QWORD *v13;
  CGContext *v14;
  id ImageFromCurrentImageContext;
  CGRect v16;

  if (!a1)
    return 0;
  v1 = a1;
  Width = (double)CGImageGetWidth(a1);
  Height = CGImageGetHeight(v1);
  v4 = (double)Height;
  if (Width != (double)Height)
  {
    v5 = round((Width - v4) * 0.5);
    v6 = round((v4 - Width) * 0.5);
    v7 = Width < (double)Height ? Width : (double)Height;
    if (Width < (double)Height)
    {
      v8 = 0.0;
    }
    else
    {
      v6 = 0.0;
      v8 = v5;
    }
    v9 = v7;
    v1 = CGImageCreateWithImageInRect(v1, *(CGRect *)(&v6 - 1));
    if (!v1)
      return 0;
  }
  _UIGraphicsBeginImageContextWithOptions(0, 0, 100.0, 100.0, 1.0);
  ContextStack = GetContextStack(0);
  if (*(int *)ContextStack < 1)
    v11 = 0;
  else
    v11 = (CGContext *)ContextStack[3 * (*(_DWORD *)ContextStack - 1) + 1];
  CGContextSetInterpolationQuality(v11, kCGInterpolationHigh);
  v13 = GetContextStack(0);
  if (*(int *)v13 < 1)
    v14 = 0;
  else
    v14 = (CGContext *)v13[3 * (*(_DWORD *)v13 - 1) + 1];
  v16.size.width = 100.0;
  v16.origin.x = 0.0;
  v16.origin.y = 0.0;
  v16.size.height = 100.0;
  CGContextDrawImage(v14, v16, v1);
  ImageFromCurrentImageContext = _UIGraphicsGetImageFromCurrentImageContext(0);
  UIGraphicsEndImageContext();
  return ImageFromCurrentImageContext;
}

Class __getAVURLAssetClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  AVKitLibrary();
  result = objc_getClass("AVURLAsset");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40))
  {
    _MergedGlobals_11_4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  }
  else
  {
    v3 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    result = (Class)objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAVURLAssetClass(void)_block_invoke"), CFSTR("UIWebFileUploadPanel.m"), 62, CFSTR("Unable to find class %s"), "AVURLAsset");
    __break(1u);
  }
  return result;
}

void AVKitLibrary()
{
  void *v0;
  void *v1;

  if (!AVKitLibraryCore_frameworkLibrary)
    AVKitLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!AVKitLibraryCore_frameworkLibrary)
  {
    v0 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v1 = (void *)objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AVKitLibrary(void)"), CFSTR("UIWebFileUploadPanel.m"), 60, CFSTR("%s"), 0);
    __break(1u);
    free(v1);
  }
}

Class __getAVAssetImageGeneratorClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;

  AVKitLibrary();
  result = objc_getClass("AVAssetImageGenerator");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40))
  {
    qword_1ECD7AE90 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  }
  else
  {
    v3 = (void *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    result = (Class)objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAVAssetImageGeneratorClass(void)_block_invoke"), CFSTR("UIWebFileUploadPanel.m"), 61, CFSTR("Unable to find class %s"), "AVAssetImageGenerator");
    __break(1u);
  }
  return result;
}

void *__getkCMTimeZeroSymbolLoc_block_invoke(_QWORD *a1)
{
  void *v2;
  void *result;
  void *v4;

  if (!qword_1ECD7AEA0)
    qword_1ECD7AEA0 = _sl_dlopen();
  v2 = (void *)qword_1ECD7AEA0;
  if (!qword_1ECD7AEA0)
  {
    a1 = (_QWORD *)objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v4 = (void *)objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:", objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CoreMediaLibrary(void)"), CFSTR("UIWebFileUploadPanel.m"), 64, CFSTR("%s"), 0);
    __break(1u);
    free(v4);
  }
  result = dlsym(v2, "kCMTimeZero");
  *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = result;
  qword_1ECD7AE98 = *(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 24);
  return result;
}

id otherButtonFont()
{
  void *v0;
  void *v1;

  objc_msgSend(off_1E167A830, "defaultFontDescriptorWithTextStyle:", CFSTR("UICTFontTextStyleSubhead"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(off_1E167A828, "fontWithDescriptor:size:", v0, 0.0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  return v1;
}

void sub_185C0F4A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double adjustedFontSize(uint64_t a1, void *a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t i;
  void *v13;
  void *v14;
  double v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  WebThreadLock();
  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  v8 = objc_msgSend(a2, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
  if (!v8)
    return a4;
  v9 = v8;
  v10 = *(_QWORD *)v19;
  v11 = a4;
  do
  {
    for (i = 0; i != v9; ++i)
    {
      if (*(_QWORD *)v19 != v10)
        objc_enumerationMutation(a2);
      v13 = (void *)objc_msgSend(*(id *)(*((_QWORD *)&v18 + 1) + 8 * i), "node");
      if (v13)
      {
        v14 = (void *)objc_msgSend(v13, "itemTitle");
        if (objc_msgSend(v14, "length"))
        {
          v17 = a4;
          objc_msgSend(v14, "_legacy_sizeWithFont:minFontSize:actualFontSize:forWidth:lineBreakMode:", a1, &v17, 0, 12.0, a3);
          if (v17 < v11 && v17 > 0.0)
            v11 = v17;
        }
      }
    }
    v9 = objc_msgSend(a2, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
  }
  while (v9);
  return v11;
}

__CFString *UIDefaultCountryCode()
{
  const __CFLocale *v0;
  const __CFLocale *v1;
  __CFString *v2;
  __CFString *v3;
  __CFString *v4;

  v0 = CFLocaleCopyCurrent();
  if (v0)
  {
    v1 = v0;
    objc_msgSend((id)CFLocaleGetValue(v0, (CFLocaleKey)*MEMORY[0x1E0C9B060]), "lowercaseString");
    v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
    CFRelease(v1);
  }
  else
  {
    v2 = 0;
  }
  if (v2)
    v3 = v2;
  else
    v3 = CFSTR("us");
  v4 = v3;

  return v4;
}

void UIFormattedPhoneStringByRemovingFromEnd(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  void *v13;

  v1 = a1;
  v2 = (void *)CPPhoneNumberCopyNetworkCountryCode();
  if (!v2)
  {
    UIDefaultCountryCode();
    v2 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v3 = objc_msgSend(v1, "length");
  v10 = 0;
  v11 = &v10;
  v12 = 0x2020000000;
  v4 = get_PNCopyFormattedNumberForDigitsWithCountryByRemovingAtIndexSymbolLoc_ptr;
  v13 = get_PNCopyFormattedNumberForDigitsWithCountryByRemovingAtIndexSymbolLoc_ptr;
  if (!get_PNCopyFormattedNumberForDigitsWithCountryByRemovingAtIndexSymbolLoc_ptr)
  {
    v5 = CorePhoneNumbersLibrary();
    v4 = dlsym(v5, "_PNCopyFormattedNumberForDigitsWithCountryByRemovingAtIndex");
    v11[3] = (uint64_t)v4;
    get_PNCopyFormattedNumberForDigitsWithCountryByRemovingAtIndexSymbolLoc_ptr = v4;
  }
  _Block_object_dispose(&v10, 8);
  if (v4)
  {
    v6 = (void *)((uint64_t (*)(id, void *, uint64_t))v4)(v1, v2, v3);

    v7 = v6;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CFStringRef _UIPNCopyFormattedNumberForDigitsWithCountryByRemovingAtIndex(CFStringRef, CFStringRef, CFIndex)");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "handleFailureInFunction:file:lineNumber:description:", v9, CFSTR("UIPhoneFormatUtilities.m"), 33, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185C165A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void UIPhonePrefixFromNumber(void *a1)
{
  id v1;
  void *v2;
  const __CFAllocator *v3;
  __CFString *v4;
  const __CFArray *ArrayBySeparatingStrings;
  const void *ValueAtIndex;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;

  v1 = a1;
  if (!v1)
  {
    v9 = 0;
    goto LABEL_9;
  }
  v2 = (void *)CPPhoneNumberCopyHomeCountryCode();
  if (!v2)
  {
    UIDefaultCountryCode();
    v2 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v3 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
  UIUnformattedPhoneNumberFromString(v1);
  v4 = (__CFString *)objc_claimAutoreleasedReturnValue();
  ArrayBySeparatingStrings = CFStringCreateArrayBySeparatingStrings(v3, v4, CFSTR(","));

  ValueAtIndex = CFArrayGetValueAtIndex(ArrayBySeparatingStrings, 0);
  v13 = 0;
  v14 = &v13;
  v15 = 0x2020000000;
  v7 = get_PNCopyPrefixForCountrySymbolLoc_ptr;
  v16 = get_PNCopyPrefixForCountrySymbolLoc_ptr;
  if (!get_PNCopyPrefixForCountrySymbolLoc_ptr)
  {
    v8 = CorePhoneNumbersLibrary();
    v7 = dlsym(v8, "_PNCopyPrefixForCountry");
    v14[3] = (uint64_t)v7;
    get_PNCopyPrefixForCountrySymbolLoc_ptr = v7;
  }
  _Block_object_dispose(&v13, 8);
  if (v7)
  {
    v9 = (void *)((uint64_t (*)(const void *, void *))v7)(ValueAtIndex, v2);
    CFRelease(ArrayBySeparatingStrings);

LABEL_9:
    v10 = v9;
    return;
  }
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CFStringRef _UIPNCopyPrefixForCountry(CFStringRef, CFStringRef)");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "handleFailureInFunction:file:lineNumber:description:", v12, CFSTR("UIPhoneFormatUtilities.m"), 35, CFSTR("%s"), dlerror());

  __break(1u);
}

void sub_185C16744(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void UIUnformattedPhoneNumberFromString(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;

  v1 = a1;
  v8 = 0;
  v9 = &v8;
  v10 = 0x2020000000;
  v2 = get_PNCreateStringByStrippingFormattingAndNotVisiblyAllowableSymbolLoc_ptr;
  v11 = get_PNCreateStringByStrippingFormattingAndNotVisiblyAllowableSymbolLoc_ptr;
  if (!get_PNCreateStringByStrippingFormattingAndNotVisiblyAllowableSymbolLoc_ptr)
  {
    v3 = CorePhoneNumbersLibrary();
    v2 = dlsym(v3, "_PNCreateStringByStrippingFormattingAndNotVisiblyAllowable");
    v9[3] = (uint64_t)v2;
    get_PNCreateStringByStrippingFormattingAndNotVisiblyAllowableSymbolLoc_ptr = v2;
  }
  _Block_object_dispose(&v8, 8);
  if (v2)
  {
    v4 = (void *)((uint64_t (*)(id))v2)(v1);

    v5 = v4;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CFStringRef _UIPNCreateStringByStrippingFormattingAndNotVisiblyAllowable(CFStringRef)");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "handleFailureInFunction:file:lineNumber:description:", v7, CFSTR("UIPhoneFormatUtilities.m"), 36, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185C1685C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id UIFormattedPhoneNumberFromString(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  UIDefaultCountryCode();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  UIFormattedPhoneNumberFromStringWithCountry(v1, v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

void UIFormattedPhoneNumberFromStringWithCountry(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  void *v14;

  v3 = a1;
  v4 = a2;
  v11 = 0;
  v12 = &v11;
  v13 = 0x2020000000;
  v5 = getPNCreateFormattedStringWithCountrySymbolLoc_ptr;
  v14 = getPNCreateFormattedStringWithCountrySymbolLoc_ptr;
  if (!getPNCreateFormattedStringWithCountrySymbolLoc_ptr)
  {
    v6 = CorePhoneNumbersLibrary();
    v5 = dlsym(v6, "PNCreateFormattedStringWithCountry");
    v12[3] = (uint64_t)v5;
    getPNCreateFormattedStringWithCountrySymbolLoc_ptr = v5;
  }
  _Block_object_dispose(&v11, 8);
  if (v5)
  {
    v7 = (void *)((uint64_t (*)(id, id, uint64_t, _QWORD))v5)(v3, v4, 2, 0);

    v8 = v7;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CFStringRef _UIPNCreateFormattedStringWithCountry(CFStringRef, CFStringRef, PNFormatLocalization, PNFormatCompression)");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "handleFailureInFunction:file:lineNumber:description:", v10, CFSTR("UIPhoneFormatUtilities.m"), 32, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185C169E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void UIPhoneNumberSuggestionForString(void *a1, unsigned int a2, void *a3)
{
  id v5;
  id v6;
  __CFString *v7;
  void *v8;
  void *v9;
  const __CFString *v10;
  id v11;
  const __CFString *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  void *v19;

  v5 = a1;
  v6 = a3;
  v15 = 0;
  v7 = UIDefaultCountryCode();
  v16 = 0;
  v17 = &v16;
  v18 = 0x2020000000;
  v8 = get_PNCopyFormattedNumberSuggestionForDigitsWithCountrySymbolLoc_ptr;
  v19 = get_PNCopyFormattedNumberSuggestionForDigitsWithCountrySymbolLoc_ptr;
  if (!get_PNCopyFormattedNumberSuggestionForDigitsWithCountrySymbolLoc_ptr)
  {
    v9 = CorePhoneNumbersLibrary();
    v8 = dlsym(v9, "_PNCopyFormattedNumberSuggestionForDigitsWithCountry");
    v17[3] = (uint64_t)v8;
    get_PNCopyFormattedNumberSuggestionForDigitsWithCountrySymbolLoc_ptr = v8;
  }
  _Block_object_dispose(&v16, 8);
  if (v8)
  {
    v10 = (const __CFString *)((uint64_t (*)(id, _QWORD, id, uint64_t *, __CFString *))v8)(v5, a2, v6, &v15, v7);
    v11 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    if (v10)
      v12 = v10;
    else
      v12 = &stru_1E16EDF20;
    objc_msgSend(v11, "addObject:", v12);
    if (v10)
      CFRelease(v10);

  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CFStringRef _UIPNCopyFormattedNumberSuggestionForDigitsWithCountry(CFStringRef, CFIndex, CFStringRef, CFIndex *, CFStringRef)");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "handleFailureInFunction:file:lineNumber:description:", v14, CFSTR("UIPhoneFormatUtilities.m"), 34, CFSTR("%s"), dlerror());

    __break(1u);
  }
}

void sub_185C16B70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *CorePhoneNumbersLibrary()
{
  void *v0;
  void *v2;
  void *v3;

  if (!CorePhoneNumbersLibraryCore_frameworkLibrary)
    CorePhoneNumbersLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = (void *)CorePhoneNumbersLibraryCore_frameworkLibrary;
  if (!CorePhoneNumbersLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *CorePhoneNumbersLibrary(void)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("UIPhoneFormatUtilities.m"), 31, CFSTR("%s"), 0);

    __break(1u);
    free(v3);
  }
  return v0;
}

UITargetedPreview *_UIControlMenuSupportTargetedPreviewOverViews(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  double v9;
  double x;
  double v11;
  double y;
  double v13;
  double width;
  double v15;
  double height;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  UITargetedPreview *v21;
  UIPreviewTarget *v22;
  void *v23;
  void *v24;
  UITargetedPreview *v25;
  UIView *v26;
  CGRect v28;
  CGRect v29;
  CGRect v30;

  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_msgSend(v5, "_window");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (__shouldUseView(v6, v5))
    {
      objc_msgSend(v6, "bounds");
      objc_msgSend(v5, "convertRect:fromView:", v6);
      x = v9;
      y = v11;
      width = v13;
      height = v15;
      if (!__shouldUseView(v7, v5))
      {
LABEL_10:
        v22 = -[UIPreviewTarget initWithContainer:center:]([UIPreviewTarget alloc], "initWithContainer:center:", v5, width * 0.5 + x, height * 0.5 + y);
        v23 = (void *)objc_opt_new();
        +[UIColor clearColor](UIColor, "clearColor");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "setBackgroundColor:", v24);

        v25 = [UITargetedPreview alloc];
        v26 = -[UIView initWithFrame:]([UIView alloc], "initWithFrame:", x, y, width, height);
        v21 = -[UITargetedPreview initWithView:parameters:target:](v25, "initWithView:parameters:target:", v26, v23, v22);

        goto LABEL_11;
      }
      objc_msgSend(v7, "bounds");
      objc_msgSend(v5, "convertRect:fromView:", v7);
      v30.origin.x = v17;
      v30.origin.y = v18;
      v30.size.width = v19;
      v30.size.height = v20;
      v28.origin.x = x;
      v28.origin.y = y;
      v28.size.width = width;
      v28.size.height = height;
      v29 = CGRectUnion(v28, v30);
    }
    else if (__shouldUseView(v7, v5))
    {
      objc_msgSend(v7, "bounds");
      objc_msgSend(v5, "convertRect:fromView:", v7);
    }
    else
    {
      objc_msgSend(v5, "bounds");
    }
    x = v29.origin.x;
    y = v29.origin.y;
    width = v29.size.width;
    height = v29.size.height;
    goto LABEL_10;
  }
  v21 = 0;
LABEL_11:

  return v21;
}

BOOL __shouldUseView(void *a1, void *a2)
{
  id v3;
  id v4;
  double v5;
  _BOOL8 v6;
  CGRect v8;

  v3 = a1;
  v4 = a2;
  if (v3
    && objc_msgSend(v3, "isDescendantOfView:", v4)
    && (objc_msgSend(v3, "isHidden") & 1) == 0
    && (objc_msgSend(v3, "alpha"), v5 >= 0.01))
  {
    objc_msgSend(v3, "bounds");
    v6 = !CGRectIsEmpty(v8);
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

id _UIControlMenuSupportDefaultMenuStyle(int a1)
{
  void *v2;

  +[_UIContextMenuStyle defaultStyle](_UIContextMenuStyle, "defaultStyle");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setPreferredLayout:", 3);
  objc_msgSend(v2, "set_orderMenuBasedOnPriority:", a1 ^ 1u);
  return v2;
}

void _UIControlMenuSupportUpdateStyleForBarButtons(void *a1, void *a2, void *a3, int a4, double a5, CGFloat a6)
{
  id v11;
  id v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  void *v28;
  double v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  double v39;
  double Width;
  uint64_t v41;
  uint64_t v42;
  _QWORD v43[5];
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;

  v11 = a1;
  v12 = a2;
  v13 = a3;
  _UIControlMenuSupportUpdateStyle(v11, v12, v13, a5, a6);
  if (a4)
  {
    objc_msgSend(v13, "view");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "bounds");
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v22 = v21;
    objc_msgSend(v13, "target");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "center");
    v25 = v24;
    v27 = v26;
    objc_msgSend(v12, "_screen");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "scale");
    UIRectCenteredAboutPointScale(v16, v18, v20, v22, v25, v27, v29);
    v31 = v30;
    v33 = v32;
    v35 = v34;
    v37 = v36;

    if (v11)
    {
      objc_msgSend(v11, "_preferredAnchor");
      objc_msgSend(v11, "_preferredAnchor");
    }
    else
    {
      v58 = 0;
      v56 = 0u;
      v57 = 0u;
      v53 = 0u;
      v54 = 0u;
      v55 = 0;
    }
    objc_msgSend(v14, "bounds");
    v38 = -(CGRectGetMidY(v59) + 22.0);
    if (v11)
    {
      objc_msgSend(v11, "_preferredAnchor");
      if (*((_QWORD *)&v50 + 1) == 2)
      {
        v60.origin.x = v31;
        v60.origin.y = v33;
        v60.size.width = v35;
        v60.size.height = v37;
        v39 = -(CGRectGetMinX(v60) + -8.0);
        objc_msgSend(v11, "set_allowsImmediateSelection:", 1);
        goto LABEL_10;
      }
    }
    else
    {
      v52 = 0;
      v50 = 0u;
      v51 = 0u;
    }
    objc_msgSend(v12, "bounds");
    Width = CGRectGetWidth(v61);
    v62.origin.x = v31;
    v62.origin.y = v33;
    v62.size.width = v35;
    v62.size.height = v37;
    v39 = Width - CGRectGetMaxX(v62) + -8.0;
    objc_msgSend(v11, "set_allowsImmediateSelection:", 1);
    if (!v11)
    {
      v42 = 0;
      v41 = 0;
      v49 = 0;
      v47 = 0u;
      v48 = 0u;
      v44 = 0u;
      v45 = 0u;
      v46 = 0;
      goto LABEL_12;
    }
LABEL_10:
    objc_msgSend(v11, "_preferredAnchor");
    v41 = v47;
    objc_msgSend(v11, "_preferredAnchor");
    v42 = *((_QWORD *)&v44 + 1);
LABEL_12:
    v43[0] = v41;
    v43[1] = v42;
    *(double *)&v43[2] = v38;
    *(double *)&v43[3] = v39;
    v43[4] = 0;
    objc_msgSend(v11, "set_preferredAnchor:", v43);

  }
}

void _UIControlMenuSupportUpdateStyle(void *a1, void *a2, void *a3, double a4, CGFloat a5)
{
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  char v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  char v27;
  uint64_t v28;
  double v29;
  double v30;
  void *v31;
  void *v32;
  int v33;
  double v34;
  void *v35;
  void *v36;
  double v37;
  _QWORD v38[5];
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;

  v9 = a1;
  v10 = a2;
  v11 = a3;
  objc_msgSend(v9, "setPreferredEdgeInsets:", 1.0, 1.0, 1.0, 1.0);
  objc_msgSend(v9, "setPreferredLayout:", 3);
  objc_msgSend(v11, "view");
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (v12)
    v13 = v12;
  else
    v13 = v10;
  objc_msgSend(v13, "bounds");
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;

  v39.origin.x = v15;
  v39.origin.y = v17;
  v39.size.width = v19;
  v39.size.height = v21;
  if (a5 >= CGRectGetMidY(v39))
  {
    v22 = 0;
    v23 = 4;
  }
  else
  {
    v40.origin.x = v15;
    v40.origin.y = v17;
    v40.size.width = v19;
    v40.size.height = v21;
    if (a5 >= CGRectGetMidY(v40))
    {
      v23 = 0;
      v22 = 1;
    }
    else
    {
      v22 = 0;
      v23 = 1;
    }
  }
  v41.origin.x = v15;
  v41.origin.y = v17;
  v41.size.width = v19;
  v41.size.height = v21;
  v24 = CGRectGetWidth(v41) * 0.05;
  if (v24 >= 2.0)
    v25 = v24;
  else
    v25 = 2.0;
  v42.origin.x = v15;
  v42.origin.y = v17;
  v42.size.width = v19;
  v42.size.height = v21;
  v26 = a4 - CGRectGetMidX(v42);
  if (v26 <= v25)
  {
    if (v26 >= -v25)
    {
      v28 = 0;
      v27 = 1;
    }
    else
    {
      v27 = 0;
      v28 = 2;
    }
  }
  else
  {
    v27 = 0;
    v28 = 8;
  }
  v29 = 0.0;
  v30 = 0.0;
  if ((v22 & 1) != 0)
    goto LABEL_21;
  if (v23 != 4)
  {
    if (v23 == 1)
      v30 = a5;
LABEL_21:
    if ((v27 & 1) != 0)
      goto LABEL_30;
    goto LABEL_22;
  }
  v43.origin.x = v15;
  v43.origin.y = v17;
  v43.size.width = v19;
  v43.size.height = v21;
  v30 = a5 - CGRectGetMaxY(v43);
  if ((v27 & 1) != 0)
    goto LABEL_30;
LABEL_22:
  objc_msgSend(v10, "traitCollection");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  _UIContextMenuGetPlatformMetrics(objc_msgSend(v31, "userInterfaceIdiom"));
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  v33 = objc_msgSend(v32, "wantsControlAlignmentWithHorizontalEdgeAdjustment");

  v34 = 0.0;
  if (v33)
  {
    objc_msgSend(v10, "traitCollection");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    _UIContextMenuGetPlatformMetrics(objc_msgSend(v35, "userInterfaceIdiom"));
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v36, "menuItemInternalPadding");
    v34 = v37;

  }
  if (v28 == 8)
  {
    v44.origin.x = v15;
    v44.origin.y = v17;
    v44.size.width = v19;
    v44.size.height = v21;
    v29 = v34 + a4 - CGRectGetMaxX(v44);
  }
  else if (v28 == 2)
  {
    v29 = a4 - v34;
  }
LABEL_30:
  v38[0] = v23;
  v38[1] = v28;
  *(double *)&v38[2] = v30;
  *(double *)&v38[3] = v29;
  v38[4] = 0;
  objc_msgSend(v9, "set_preferredAnchor:", v38);
  objc_msgSend(v9, "set_parentTraitEnvironmentForUserInterfaceStyle:", v10);

}

double _UIControlMenuAttachmentPointForRectInContainer(void *a1, double a2, double a3, double a4, double a5)
{
  id v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  double v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  double v22;
  void *v23;
  double v24;
  double v25;
  id v26;
  double v27;
  double v28;
  double v29;
  double v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double MidX;
  double v40;
  double v42;
  CGFloat rect;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;

  v9 = a1;
  v42 = a4;
  v10 = a4 * 0.5;
  v11 = a5;
  v12 = a5 * 0.5;
  objc_msgSend(v9, "_window");
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (v13)
  {
    objc_msgSend(v9, "bounds");
    rect = v14;
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v21 = a2 + v10;
    v22 = a3 + v12;
    objc_msgSend(v9, "_window");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v23, "_isTextEffectsWindow"))
    {
      objc_msgSend(v9, "convertPoint:toView:", v23, v21, a3 + v12);
      v21 = v24;
      v22 = v25;
      v26 = v23;

      objc_msgSend(v26, "_usableBounds");
      rect = v27;
      v16 = v28;
      v18 = v29;
      v20 = v30;
      v9 = v26;
    }
    objc_msgSend(v9, "traitCollection");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    _UIContextMenuGetPlatformMetrics(objc_msgSend(v31, "userInterfaceIdiom"));
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v32, "controlAttachmentYOffsetProvider");
    v33 = objc_claimAutoreleasedReturnValue();
    v34 = (void *)v33;
    if (v33)
      (*(void (**)(uint64_t, double, double))(v33 + 16))(v33, v42, v11);

    if ((objc_msgSend(v23, "_isRemoteInputHostWindow") & 1) == 0)
    {
      v44.origin.x = rect;
      v44.origin.y = v16;
      v44.size.width = v18;
      v44.size.height = v20;
      if (v22 <= CGRectGetMidY(v44))
      {
        v49.origin.x = rect;
        v49.origin.y = v16;
        v49.size.width = v18;
        v49.size.height = v20;
        if (v22 < CGRectGetMidY(v49))
        {
          v50.origin.x = 0.0;
          v50.origin.y = 0.0;
          v50.size.width = v42;
          v50.size.height = v11;
          CGRectGetMaxY(v50);
        }
      }
    }
    v45.origin.x = rect;
    v45.origin.y = v16;
    v45.size.width = v18;
    v45.size.height = v20;
    v36 = CGRectGetWidth(v45) * 0.05;
    if (v36 >= 2.0)
      v37 = v36;
    else
      v37 = 2.0;
    v46.origin.x = rect;
    v46.origin.y = v16;
    v46.size.width = v18;
    v46.size.height = v20;
    v38 = v21 - CGRectGetMidX(v46);
    if (v38 <= v37)
    {
      v40 = -v37;
      v35 = 0.0;
      if (v38 < v40)
      {
LABEL_17:

        goto LABEL_18;
      }
      v48.origin.x = 0.0;
      v48.origin.y = 0.0;
      v48.size.width = v42;
      v48.size.height = v11;
      MidX = CGRectGetMidX(v48);
    }
    else
    {
      v47.origin.x = 0.0;
      v47.origin.y = 0.0;
      v47.size.width = v42;
      v47.size.height = v11;
      MidX = CGRectGetMaxX(v47);
    }
    v35 = MidX;
    goto LABEL_17;
  }
  v35 = v10 + 0.0;
LABEL_18:

  return v35;
}

void _UIControlMenuSupportUpdateStyleWithHorizontalPreference(void *a1, void *a2, void *a3, double a4, double a5)
{
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double MidX;
  double v23;
  double v24;
  double v25;
  char v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  _QWORD v31[5];
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;

  v9 = a1;
  v10 = a2;
  v11 = a3;
  objc_msgSend(v9, "setPreferredEdgeInsets:", 1.0, 1.0, 1.0, 1.0);
  objc_msgSend(v9, "setPreferredLayout:", 3);
  objc_msgSend(v11, "view");
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  if (v12)
    v13 = v12;
  else
    v13 = v10;
  objc_msgSend(v13, "bounds");
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;

  v32.origin.x = v15;
  v32.origin.y = v17;
  v32.size.width = v19;
  v32.size.height = v21;
  MidX = CGRectGetMidX(v32);
  v33.origin.x = v15;
  v33.origin.y = v17;
  v33.size.width = v19;
  v33.size.height = v21;
  v23 = CGRectGetHeight(v33) * 0.05;
  if (v23 >= 2.0)
    v24 = v23;
  else
    v24 = 2.0;
  v34.origin.x = v15;
  v34.origin.y = v17;
  v34.size.width = v19;
  v34.size.height = v21;
  v25 = a5 - CGRectGetMidY(v34);
  if (v25 <= v24)
  {
    if (v25 >= -v24)
    {
      v27 = 0;
      v26 = 1;
    }
    else
    {
      v26 = 0;
      v27 = 1;
    }
  }
  else
  {
    v26 = 0;
    v27 = 4;
  }
  v28 = a4;
  if (a4 >= MidX)
  {
    v35.origin.x = v15;
    v35.origin.y = v17;
    v35.size.width = v19;
    v35.size.height = v21;
    v28 = a4 - CGRectGetMaxX(v35);
  }
  v29 = 0.0;
  if ((v26 & 1) == 0)
  {
    if (v27 == 4)
    {
      v36.origin.x = v15;
      v36.origin.y = v17;
      v36.size.width = v19;
      v36.size.height = v21;
      v29 = a5 - CGRectGetMaxY(v36);
    }
    else if (v27 == 1)
    {
      v29 = a5;
    }
  }
  v30 = 8;
  if (a4 < MidX)
    v30 = 2;
  v31[0] = v30;
  v31[1] = v27;
  *(double *)&v31[2] = v28;
  *(double *)&v31[3] = v29;
  v31[4] = 0;
  objc_msgSend(v9, "set_preferredAnchor:", v31);
  objc_msgSend(v9, "set_parentTraitEnvironmentForUserInterfaceStyle:", v10);

}

double _UIControlMenuAttachmentPointForRectInContainerForHorizontalAttachment(void *a1, double a2, double a3, CGFloat a4, CGFloat a5)
{
  id v9;
  void *v10;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;

  v9 = a1;
  objc_msgSend(v9, "_window");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (v10)
  {
    objc_msgSend(v9, "bounds");
    x = v22.origin.x;
    y = v22.origin.y;
    width = v22.size.width;
    height = v22.size.height;
    v21 = a2 + a4 * 0.5;
    v15 = a3 + a5 * 0.5;
    v16 = CGRectGetHeight(v22) * 0.05;
    if (v16 >= 2.0)
      v17 = v16;
    else
      v17 = 2.0;
    v23.origin.x = x;
    v23.origin.y = y;
    v23.size.width = width;
    v23.size.height = height;
    v18 = v15 - CGRectGetMidY(v23);
    if (v18 <= v17)
    {
      if (v18 >= -v17)
      {
        v25.origin.x = 0.0;
        v25.origin.y = 0.0;
        v25.size.width = a4;
        v25.size.height = a5;
        CGRectGetMidY(v25);
      }
    }
    else
    {
      v24.origin.x = 0.0;
      v24.origin.y = 0.0;
      v24.size.width = a4;
      v24.size.height = a5;
      CGRectGetMaxY(v24);
    }
    v26.origin.x = x;
    v26.origin.y = y;
    v26.size.width = width;
    v26.size.height = height;
    v19 = -20.0;
    if (v21 <= CGRectGetMidX(v26))
    {
      v27.origin.x = 0.0;
      v27.origin.y = 0.0;
      v27.size.width = a4;
      v27.size.height = a5;
      v19 = CGRectGetMaxX(v27) + 20.0;
    }
  }
  else
  {
    v19 = a4 * 0.5 + 0.0;
  }

  return v19;
}

void sub_185C18130(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

id _candidatesChoicesFromTextChoices(void *a1, void *a2)
{
  id v3;
  __CFString *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const __CFString *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(v3, "count"));
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v20 = 0u;
  v6 = v3;
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v18;
    if (v4)
      v10 = v4;
    else
      v10 = &stru_1E16EDF20;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v18 != v9)
          objc_enumerationMutation(v6);
        v12 = *(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * v11);
        v13 = objc_alloc(MEMORY[0x1E0DBDBE8]);
        v14 = (void *)objc_msgSend(v13, "initWithCandidate:forInput:", v12, v10, (_QWORD)v17);
        objc_msgSend(v5, "addObject:", v14);

        ++v11;
      }
      while (v8 != v11);
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    }
    while (v8);
  }

  v15 = (void *)objc_msgSend(v5, "copy");
  return v15;
}

unint64_t _candidateSourceIsSmartReply(void *a1)
{
  id v1;
  unint64_t v2;

  v1 = a1;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v2 = ((unint64_t)objc_msgSend(v1, "candidateProperty") >> 1) & 1;
  else
    v2 = 0;

  return v2;
}

unint64_t _replacementSourceIsSmartReply(void *a1)
{
  void *v1;
  void *v2;
  unint64_t IsSmartReply;

  objc_msgSend(a1, "candidateChoices");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "firstObject");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  IsSmartReply = _candidateSourceIsSmartReply(v2);

  return IsSmartReply;
}

void sub_185C216C4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

uint64_t _secureCandidateHashForCandidate(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v7;

  v1 = a1;
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    v2 = (void *)MEMORY[0x1E0C99DB8];
    objc_msgSend(v1, "methodSignatureForSelector:", sel_secureCandidateHash);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "invocationWithMethodSignature:", v3);
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v4, "setSelector:", sel_secureCandidateHash);
    objc_msgSend(v4, "setTarget:", v1);
    objc_msgSend(v4, "invoke");
    v7 = 0;
    objc_msgSend(v4, "getReturnValue:", &v7);
    v5 = v7;

  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void sub_185C2BF0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185C2E3F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185C2EB70(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_185C30128(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getBETextAlternativesClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  BrowserEngineKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("BETextAlternatives");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getBETextAlternativesClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getBETextAlternativesClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIKBInputDelegateManager.m"), 63, CFSTR("Unable to find class %s"), "BETextAlternatives");

    __break(1u);
  }
}

void BrowserEngineKitLibrary()
{
  void *v0;
  void *v1;
  void *v2;

  if (!BrowserEngineKitLibraryCore_frameworkLibrary)
    BrowserEngineKitLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!BrowserEngineKitLibraryCore_frameworkLibrary)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *BrowserEngineKitLibrary(void)");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("UIKBInputDelegateManager.m"), 57, CFSTR("%s"), 0);

    __break(1u);
    free(v2);
  }
}

id getBEAutoFillTextSuggestionClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getBEAutoFillTextSuggestionClass_softClass;
  v7 = getBEAutoFillTextSuggestionClass_softClass;
  if (!getBEAutoFillTextSuggestionClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getBEAutoFillTextSuggestionClass_block_invoke_0;
    v3[3] = &unk_1E16B14C0;
    v3[4] = &v4;
    __getBEAutoFillTextSuggestionClass_block_invoke_0((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_185C32600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getBEAutoFillTextSuggestionClass_block_invoke_0(uint64_t a1)
{
  void *v2;
  void *v3;

  BrowserEngineKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("BEAutoFillTextSuggestion");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getBEAutoFillTextSuggestionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getBEAutoFillTextSuggestionClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIKBInputDelegateManager.m"), 62, CFSTR("Unable to find class %s"), "BEAutoFillTextSuggestion");

    __break(1u);
  }
}

void __getBETextSuggestionClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  BrowserEngineKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("BETextSuggestion");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getBETextSuggestionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getBETextSuggestionClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIKBInputDelegateManager.m"), 58, CFSTR("Unable to find class %s"), "BETextSuggestion");

    __break(1u);
  }
}

void __getBEKeyEntryClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  BrowserEngineKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("BEKeyEntry");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getBEKeyEntryClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getBEKeyEntryClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIKBInputDelegateManager.m"), 59, CFSTR("Unable to find class %s"), "BEKeyEntry");

    __break(1u);
  }
}

void __getBETextDocumentRequestClass_block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;

  BrowserEngineKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("BETextDocumentRequest");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getBETextDocumentRequestClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getBETextDocumentRequestClass(void)_block_invoke");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("UIKBInputDelegateManager.m"), 60, CFSTR("Unable to find class %s"), "BETextDocumentRequest");

    __break(1u);
  }
}

void sub_185C33CF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185C34EA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185C355A8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

id _asCalendarDay(void *a1, void *a2, int a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  id v29;
  id v30;
  id obj;
  id v32;
  double v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _QWORD v38[4];
  id v39;
  _BYTE v40[128];
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v38[0] = MEMORY[0x1E0C809B0];
  v38[1] = 3221225472;
  v38[2] = ___asCalendarDay_block_invoke;
  v38[3] = &unk_1E16C7420;
  v6 = v5;
  v39 = v6;
  _UICalendarMap(a1, v38);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (a3)
  {
    v29 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v34 = 0u;
    v35 = 0u;
    v36 = 0u;
    v37 = 0u;
    obj = v7;
    v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v34, v40, 16);
    if (!v8)
      goto LABEL_16;
    v9 = v8;
    v10 = *(_QWORD *)v35;
    v30 = v6;
    while (1)
    {
      for (i = 0; i != v9; ++i)
      {
        if (*(_QWORD *)v35 != v10)
          objc_enumerationMutation(obj);
        v12 = *(void **)(*((_QWORD *)&v34 + 1) + 8 * i);
        v32 = 0;
        v33 = 0.0;
        objc_msgSend(v12, "date");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "rangeOfUnit:startDate:interval:forDate:", 4096, &v32, &v33, v13);
        v14 = v32;

        objc_msgSend(v14, "dateByAddingTimeInterval:", v33 + -1.0);
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = objc_msgSend(v6, "component:fromDate:", 8, v14);
        v17 = objc_msgSend(v6, "component:fromDate:", 8, v15);
        if (v16 != v17)
        {
          v18 = v17;
          v19 = v9;
          v20 = v10;
          objc_msgSend(v12, "components");
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          v22 = objc_msgSend(v21, "month");

          if (v16 == v22)
          {
            objc_msgSend(v12, "month");
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v23, "nextMonth");
            v24 = (void *)objc_claimAutoreleasedReturnValue();
            v10 = v20;
            v9 = v19;
            v6 = v30;
          }
          else
          {
            objc_msgSend(v12, "components");
            v25 = (void *)objc_claimAutoreleasedReturnValue();
            v26 = objc_msgSend(v25, "month");

            v10 = v20;
            v9 = v19;
            v6 = v30;
            if (v18 != v26)
              goto LABEL_14;
            objc_msgSend(v12, "month");
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v23, "previousMonth");
            v24 = (void *)objc_claimAutoreleasedReturnValue();
          }

          if (v24)
          {
            v27 = (void *)objc_msgSend(v12, "copyWithAssignedMonth:", v24);
            objc_msgSend(v29, "addObject:", v27);

          }
        }
LABEL_14:

      }
      v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v34, v40, 16);
      if (!v9)
      {
LABEL_16:

        objc_msgSend(obj, "arrayByAddingObjectsFromArray:", v29);
        v7 = (void *)objc_claimAutoreleasedReturnValue();

        break;
      }
    }
  }

  return v7;
}

id _UICalendarMap(void *a1, void *a2)
{
  id v3;
  void (**v4)(id, _QWORD);
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  v5 = v3;
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", objc_msgSend(v5, "count"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v7 = v5;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v16;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v16 != v10)
          objc_enumerationMutation(v7);
        v4[2](v4, *(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * v11));
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        if (v12)
          objc_msgSend(v6, "addObject:", v12, (_QWORD)v15);

        ++v11;
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v9);
  }

  v13 = (void *)objc_msgSend(v6, "copy");
  return v13;
}

_UIDatePickerCalendarDay *___asCalendarDay_block_invoke(uint64_t a1, uint64_t a2)
{
  void *v3;
  _UIDatePickerCalendarDay *v4;

  objc_msgSend(*(id *)(a1 + 32), "dateFromComponents:", a2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = -[_UIDatePickerCalendarDay initWithDate:calendar:]([_UIDatePickerCalendarDay alloc], "initWithDate:calendar:", v3, *(_QWORD *)(a1 + 32));

  return v4;
}

void sub_185C39E60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, id *a10)
{
  id *v10;
  uint64_t v11;

  objc_destroyWeak(v10);
  objc_destroyWeak(location);
  objc_destroyWeak(a10);
  objc_destroyWeak((id *)(v11 - 112));
  _Unwind_Resume(a1);
}

void sub_185C3CFA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getSSScreenshotMetadataHarvesterClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  void *v4;
  void *v5;

  if (!qword_1ECD7DC98)
    qword_1ECD7DC98 = _sl_dlopen();
  if (!qword_1ECD7DC98)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *ScreenshotServicesLibrary(void)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("UIScreenshotMetadataRequestAction.m"), 18, CFSTR("%s"), 0);

    goto LABEL_8;
  }
  result = objc_getClass("SSScreenshotMetadataHarvester");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getSSScreenshotMetadataHarvesterClass(void)_block_invoke");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("UIScreenshotMetadataRequestAction.m"), 19, CFSTR("Unable to find class %s"), "SSScreenshotMetadataHarvester");

LABEL_8:
    __break(1u);
  }
  _MergedGlobals_1051 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id _UIHyperExtenderClasses()
{
  if (qword_1ECD7DCA8 != -1)
    dispatch_once(&qword_1ECD7DCA8, &__block_literal_global_227);
  return (id)_MergedGlobals_1052;
}

void sub_185C3FDF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185C40198(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

uint64_t previewHandler_block_invoke(uint64_t a1, id *a2)
{
  id v2;
  void *v3;
  void *v4;
  int v5;

  v2 = *a2;
  if (!*a2)
    return 0;
  if (*((_BYTE *)v2 + 20))
  {
    objc_msgSend(*a2, "privateDelegate");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "previewInteraction");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v3, "_previewInteractionShouldFinishTransitionToPreview:", v4);

    if (!v5)
      return 4;
  }
  if (*((_BYTE *)v2 + 17) || (objc_msgSend(v2, "_canPerformPresentation") & 1) != 0)
    return 5;
  return *((_QWORD *)v2 + 1);
}

void postPreviewHandler_block_invoke_2(uint64_t a1, id *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  char v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  char v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  _BYTE *v20;

  v5 = *a2;
  if (v5)
  {
    if (v5[1] != 4)
    {
      v20 = v5;
      -[_UIPreviewInteractionClickImpl _delegateUpdatePreviewTransitionWithProgress:ended:](v5, 1, 1.0);
      v5 = v20;
      if (a4 == 5)
      {
        v6 = objc_msgSend(v20, "_performPresentationIfPossible");
        if (!objc_msgSend(v20, "_canPerformPresentation") || (v6 & 1) != 0)
        {
          objc_msgSend(v20, "previewClickInteraction");
          v7 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v7, "view");
          v8 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v20, "previewClickInteraction");
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v8, "removeInteraction:", v9);

          if (v20[22])
          {
            objc_msgSend(v20, "privateDelegate");
            v10 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v20, "previewInteraction");
            v11 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v10, "_previewInteractionOverrideViewForCommitPhase:", v11);
            v12 = (void *)objc_claimAutoreleasedReturnValue();

          }
          else
          {
            v12 = 0;
          }
          if (v12)
            v13 = 1;
          else
            v13 = v6;
          if ((v13 & 1) == 0)
          {
            objc_msgSend(v20, "view");
            v12 = (void *)objc_claimAutoreleasedReturnValue();
          }
          if (v12)
          {
            objc_msgSend(v20, "commitClickInteraction");
            v14 = (void *)objc_claimAutoreleasedReturnValue();

            if (!v14)
            {
              v15 = (void *)objc_opt_new();
              objc_msgSend(v20, "setCommitClickInteraction:", v15);

              objc_msgSend(v20, "commitClickInteraction");
              v16 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v16, "setAllowableMovement:", 1.79769313e308);

              objc_msgSend(v20, "commitClickInteraction");
              v17 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v17, "setDelegate:", v20);

            }
            objc_msgSend(v20, "commitClickInteraction");
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v12, "addInteraction:", v18);

            if ((v6 & 1) == 0)
            {
              objc_msgSend((id)UIApp, "_gestureEnvironment");
              v19 = (void *)objc_claimAutoreleasedReturnValue();
              -[UIGestureEnvironment _performTouchContinuationWithOverrideHitTestedView:]((uint64_t)v19, v12);

            }
          }

          goto LABEL_23;
        }
LABEL_22:
        -[_UIPreviewInteractionClickImpl _endInteractionDidComplete:wasCancelledByClient:]((uint64_t)v20, 1u, 0);
LABEL_23:
        v5 = v20;
        goto LABEL_24;
      }
LABEL_21:
      v20 = v5;
      goto LABEL_22;
    }
  }
  else
  {
    -[_UIPreviewInteractionClickImpl _delegateUpdatePreviewTransitionWithProgress:ended:](0, 1, 1.0);
    v5 = 0;
    if (a4 != 5)
      goto LABEL_21;
  }
LABEL_24:

}

uint64_t stateMachineSpec_block_invoke_5_2(uint64_t a1, id *a2)
{
  _BYTE *v2;
  void *v3;
  void *v4;
  int v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  id v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v2 = *a2;
  if (!*a2)
    return 0;
  if (v2[16])
  {
    objc_msgSend(*a2, "delegate");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "previewInteraction");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v3, "previewInteractionShouldBegin:", v4);

    if (!v5)
      return 1;
  }
  if (objc_msgSend((id)UIApp, "_isSpringBoard"))
  {
    v17 = 0u;
    v18 = 0u;
    v15 = 0u;
    v16 = 0u;
    objc_msgSend(v2, "view", 0);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "interactions");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)v16;
      while (2)
      {
        for (i = 0; i != v9; ++i)
        {
          if (*(_QWORD *)v16 != v10)
            objc_enumerationMutation(v7);
          v12 = *(void **)(*((_QWORD *)&v15 + 1) + 8 * i);
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0)
          {
            v14 = v12;
            objc_msgSend(v14, "setEnabled:", 0);
            objc_msgSend(v14, "_cancelLift");
            objc_msgSend(v2, "setAssociatedDragInteraction:", v14);

            goto LABEL_16;
          }
        }
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
        if (v9)
          continue;
        break;
      }
    }
LABEL_16:

  }
  return 2;
}

uint64_t stateMachineSpec_block_invoke_6_1(uint64_t a1, id *a2)
{
  id v2;
  void *v3;
  void *v4;

  v2 = *a2;
  if (!*a2)
    return 0;
  objc_msgSend(*a2, "exclusionRelationshipGestureRecognizer");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "_succeed");

  objc_msgSend(v2, "previewClickInteraction");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setAllowableMovement:", 20.0);

  return 3;
}

uint64_t stateMachineSpec_block_invoke_7_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD v4[2];

  v2 = *a2;
  if (!*a2)
    return 0;
  -[_UIPreviewInteractionClickImpl _delegateUpdateCommitTransitionWithProgress:ended:]((_BYTE *)*a2, 1, 1.0);
  v4[0] = v2;
  v4[1] = 1;
  return -[_UIPreviewInteractionClickImpl _handleTransitionToPossibleByEndingWithContext:](v2, (uint64_t)v4);
}

void ___getUTIForUnlocalizedAppCategoryDescription_block_invoke()
{
  id v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v0 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  v1 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  _addDescendantUTIsToSet(0, (uint64_t)CFSTR("public.app-category"), v1);
  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  v2 = v1;
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v14;
    do
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v14 != v5)
          objc_enumerationMutation(v2);
        v7 = *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * i);
        objc_msgSend(MEMORY[0x1E0CEC3F8], "_typeWithIdentifier:allowUndeclared:", v7, 1, (_QWORD)v13);
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "_localizedDescriptionDictionary");
        v9 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v9, "objectForKeyedSubscript:", CFSTR("LSDefaultLocalizedValue"));
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        if (v10)
          objc_msgSend(v0, "setObject:forKeyedSubscript:", v7, v10);

      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v4);
  }

  v11 = objc_msgSend(v0, "copy");
  v12 = (void *)_MergedGlobals_3_10;
  _MergedGlobals_3_10 = v11;

}

void _addDescendantUTIsToSet(unint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  objc_msgSend(MEMORY[0x1E0CEC3F8], "_typeWithIdentifier:allowUndeclared:", a2, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_childTypes");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v9 = v7;
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v25, v30, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v26;
    do
    {
      v13 = 0;
      do
      {
        if (*(_QWORD *)v26 != v12)
          objc_enumerationMutation(v9);
        objc_msgSend(*(id *)(*((_QWORD *)&v25 + 1) + 8 * v13), "identifier");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "addObject:", v14);

        ++v13;
      }
      while (v11 != v13);
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v25, v30, 16);
    }
    while (v11);
  }

  objc_msgSend(v5, "addObjectsFromArray:", v8);
  if (a1 <= 9)
  {
    v23 = 0u;
    v24 = 0u;
    v21 = 0u;
    v22 = 0u;
    v15 = v8;
    v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
    if (v16)
    {
      v17 = v16;
      v18 = *(_QWORD *)v22;
      v19 = a1 + 1;
      do
      {
        v20 = 0;
        do
        {
          if (*(_QWORD *)v22 != v18)
            objc_enumerationMutation(v15);
          _addDescendantUTIsToSet(v19, *(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * v20++), v5);
        }
        while (v17 != v20);
        v17 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
      }
      while (v17);
    }

  }
}

void sub_185C434F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  id *v16;
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

void sub_185C438AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185C44418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185C44864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id UIScenePresentationBinderLog()
{
  if (UIScenePresentationBinderLog_onceToken != -1)
    dispatch_once(&UIScenePresentationBinderLog_onceToken, &__block_literal_global_3_7);
  return (id)UIScenePresentationBinderLog___instance;
}

void sub_185C507D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185C511D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *NSStringFromUISceneRenderingMode(uint64_t a1)
{
  __CFString *v1;

  if (!a1)
    return CFSTR("Normal");
  if (a1 == 1)
  {
    v1 = CFSTR("Asynchronous");
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("unknown (%li)"), a1);
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v1;
}

UIScriptSwitcherButton *_GetButtonForInputMode(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  UIScriptSwitcherButton *v7;
  UIScriptSwitcherButton *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  _QWORD v16[4];
  id v17;

  v3 = a1;
  objc_msgSend(v3, "_iconLabelWithinMultiscriptSet");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(CFSTR("multiscript-"), "stringByAppendingString:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  +[UIImage kitImageNamed:](UIImage, "kitImageNamed:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = [UIScriptSwitcherButton alloc];
  v8 = -[UIScriptSwitcherButton initWithFrame:](v7, "initWithFrame:", *MEMORY[0x1E0C9D648], *(double *)(MEMORY[0x1E0C9D648] + 8), *(double *)(MEMORY[0x1E0C9D648] + 16), *(double *)(MEMORY[0x1E0C9D648] + 24));
  -[UIScriptSwitcherButton setIsLeading:](v8, "setIsLeading:", a2);
  objc_msgSend(off_1E167A828, "systemFontOfSize:weight:", 17.0, *(double *)off_1E167DC70);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  +[UIImageSymbolConfiguration configurationWithFont:](UIImageSymbolConfiguration, "configurationWithFont:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if ((_DWORD)a2)
  {
    -[UIScriptSwitcherButton setLeftImage:](v8, "setLeftImage:", v6);
    +[UIImage systemImageNamed:withConfiguration:](UIImage, "systemImageNamed:withConfiguration:", CFSTR("chevron.compact.right"), v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[UIScriptSwitcherButton setRightImage:](v8, "setRightImage:", v11);

  }
  else
  {
    +[UIImage systemImageNamed:withConfiguration:](UIImage, "systemImageNamed:withConfiguration:", CFSTR("chevron.compact.left"), v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    -[UIScriptSwitcherButton setLeftImage:](v8, "setLeftImage:", v12);

    -[UIScriptSwitcherButton setRightImage:](v8, "setRightImage:", v6);
  }
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = ___GetButtonForInputMode_block_invoke;
  v16[3] = &unk_1E16B2C10;
  v17 = v3;
  v13 = v3;
  +[UIAction actionWithHandler:](UIAction, "actionWithHandler:", v16);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  -[UIControl addAction:forControlEvents:](v8, "addAction:forControlEvents:", v14, 64);

  return v8;
}

UIAlternativeCandidatesButton *_GetAlternativeCandidatesButton(void *a1, uint64_t a2)
{
  id v3;
  UIAlternativeCandidatesButton *v4;
  UIAlternativeCandidatesButton *v5;

  v3 = a1;
  v4 = [UIAlternativeCandidatesButton alloc];
  v5 = -[UIAlternativeCandidatesButton initWithFrame:](v4, "initWithFrame:", *MEMORY[0x1E0C9D648], *(double *)(MEMORY[0x1E0C9D648] + 8), *(double *)(MEMORY[0x1E0C9D648] + 16), *(double *)(MEMORY[0x1E0C9D648] + 24));
  -[UIScriptSwitcherButton setIsLeading:](v5, "setIsLeading:", a2);
  -[UIControl addAction:forControlEvents:](v5, "addAction:forControlEvents:", v3, 64);

  return v5;
}

_UIBoxedAutoreleasePoolMark *_runLoopObserverCallout(uint64_t a1, uint64_t a2, void *a3)
{
  _UIBoxedAutoreleasePoolMark *result;

  switch(a2)
  {
    case 128:
      return (_UIBoxedAutoreleasePoolMark *)_popAutoreleasePool(a3);
    case 32:
      _popAutoreleasePool(a3);
      return _pushAutoreleasePool(a3);
    case 1:
      return _pushAutoreleasePool(a3);
  }
  return result;
}

uint64_t _popAutoreleasePool(void *a1)
{
  uint64_t result;
  uint64_t v3;
  id v4;
  void *v5;

  result = objc_msgSend(a1, "count");
  if (result)
  {
    v3 = result - 1;
    while (1)
    {
      v4 = (id)objc_msgSend((id)objc_msgSend(a1, "objectAtIndexedSubscript:", v3), "object");
      if (v4)
        break;
      result = objc_msgSend(a1, "removeObjectAtIndex:", v3--);
      if (v3 == -1)
        return result;
    }
    v5 = v4;
    MEMORY[0x186DC7F54](objc_msgSend(v4, "mark"));

    return objc_msgSend(a1, "removeObjectAtIndex:", v3);
  }
  return result;
}

_UIBoxedAutoreleasePoolMark *_pushAutoreleasePool(void *a1)
{
  _UIBoxedAutoreleasePoolMark *v2;
  _UIWeakReference *v3;

  v2 = -[_UIBoxedAutoreleasePoolMark initWithAutoreleasePoolMark:]([_UIBoxedAutoreleasePoolMark alloc], "initWithAutoreleasePoolMark:", MEMORY[0x186DC7F6C](0));
  v3 = -[_UIWeakReference initWithObject:]([_UIWeakReference alloc], "initWithObject:", v2);
  objc_msgSend(a1, "addObject:", v3);

  return v2;
}

void sub_185C54BDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185C54F30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185C5507C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_185C55244(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_185C5539C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_185C55504(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_185C5578C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185C569CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_185C56C98(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

_UIPortalView *_UIFrozenPortalWithSource(void *a1, void *a2)
{
  id v3;
  id v4;
  _UIPortalView *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;

  v3 = a2;
  v4 = a1;
  v5 = -[_UIPortalView initWithFrame:]([_UIPortalView alloc], "initWithFrame:", 0.0, 0.0, 1.0, 1.0);
  -[_UIPortalView setName:](v5, "setName:", v3);

  v6 = objc_msgSend(v4, "sourceContextID");
  -[_UIPortalView portalLayer](v5, "portalLayer");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setSourceContextId:", v6);

  v8 = objc_msgSend(v4, "sourceLayerRenderID");
  -[_UIPortalView portalLayer](v5, "portalLayer");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setSourceLayerRenderId:", v8);

  -[_UIPortalView _setGeometryFrozen:](v5, "_setGeometryFrozen:", 1);
  -[UIView setUserInteractionEnabled:](v5, "setUserInteractionEnabled:", 0);
  -[_UIPortalView setMatchesAlpha:](v5, "setMatchesAlpha:", 1);
  -[_UIPortalView setHidesSourceView:](v5, "setHidesSourceView:", 1);
  -[_UIPortalView setMatchesTransform:](v5, "setMatchesTransform:", 1);
  -[_UIPortalView setMatchesPosition:](v5, "setMatchesPosition:", 1);
  return v5;
}

double _UIPointerShapeOffsetFromModelPosition(void *a1, void *a2, double a3, double a4)
{
  id v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;

  v7 = a2;
  v8 = a1;
  objc_msgSend(v7, "referenceView");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "convertPoint:toView:", v9, a3, a4);
  v11 = v10;

  objc_msgSend(v7, "rect");
  v13 = v12;
  v15 = v14;

  return v11 - (v13 + v15 * 0.5);
}

void sub_185C58464(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *NSStringFromUISceneAppearanceStyle(unint64_t a1)
{
  if (a1 < 3)
    return off_1E16C8000[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("unknown (%li)"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *UIApplicationSceneClientSettingKeyDescription(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0x30)
    return 0;
  else
    return off_1E16C80D8[a1 - 1];
}

__CFString *UIApplicationSceneClientSettingValueDescription(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v4;
  void *v5;
  __CFString *v6;
  uint64_t v7;
  __objc2_class *v8;

  v4 = a3;
  v5 = v4;
  v6 = 0;
  switch(a1)
  {
    case 1:
    case 5:
      v8 = UIApplication;
      goto LABEL_14;
    case 2:
    case 6:
    case 10:
    case 11:
    case 14:
    case 21:
    case 25:
    case 27:
    case 28:
    case 33:
    case 45:
    case 48:
    case 49:
      BSSettingFlagIsYes();
      NSStringFromBOOL();
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_19;
    case 9:
      UIApplicationSceneStringForCompatibilityMode(objc_msgSend(v4, "integerValue"));
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_19;
    case 12:
      objc_msgSend(v4, "integerValue");
      BSInterfaceOrientationDescription();
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_19;
    case 13:
    case 43:
      objc_msgSend(v4, "unsignedIntegerValue");
      BSInterfaceOrientationMaskDescription();
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_19;
    case 15:
      UIApplicationSceneProximityDetectionModesDescription(objc_msgSend(v4, "unsignedIntegerValue"));
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_19;
    case 16:
    case 26:
    case 30:
    case 31:
    case 32:
    case 34:
    case 36:
    case 38:
    case 40:
    case 42:
    case 46:
      objc_msgSend(v4, "description");
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_19;
    case 17:
    case 18:
      _UIScreenEdgeSystemGestureModeDescription(objc_msgSend(v4, "integerValue"));
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_19;
    case 20:
      +[UIApplication _stringForBackgroundStyle:](UIApplication, "_stringForBackgroundStyle:", objc_msgSend(v4, "integerValue"));
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_19;
    case 22:
      _UIStringFromWhitePointAdaptivityStyle(objc_msgSend(v4, "integerValue"));
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_19;
    case 29:
      UIApplicationSceneStringForUserInterfaceStyle(objc_msgSend(v4, "integerValue"));
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_19;
    case 35:
      v8 = _UIStatusBar;
LABEL_14:
      -[__objc2_class stringForStatusBarStyle:](v8, "stringForStatusBarStyle:", objc_msgSend(v4, "integerValue"));
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_19;
    case 37:
      v6 = CFSTR("(redacted)");
      break;
    case 39:
      _UISceneStringFromActivationBias(objc_msgSend(v4, "integerValue"));
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_19;
    case 41:
      _NSStringFromUIPointerLockStatus(objc_msgSend(v4, "integerValue"));
      v7 = objc_claimAutoreleasedReturnValue();
      goto LABEL_19;
    case 47:
      _UIPhysicalButtonSuccinctConfigurationsDescriptionForSet(v4);
      v7 = objc_claimAutoreleasedReturnValue();
LABEL_19:
      v6 = (__CFString *)v7;
      break;
    default:
      break;
  }

  return v6;
}

uint64_t UIApplicationSceneClientSettingAppendCustomDescription(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  id *v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  _QWORD v16[4];
  id v17;
  id v18;
  _QWORD v19[4];
  id v20;
  id v21;
  id location;

  v5 = a2;
  v6 = a3;
  if (a1 == 42)
  {
    objc_initWeak(&location, v5);
    v12 = v6;
    objc_msgSend(v5, "activeMultilinePrefix");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 3221225472;
    v16[2] = __UIApplicationSceneClientSettingAppendCustomDescription_block_invoke_3;
    v16[3] = &unk_1E16B1500;
    v9 = &v18;
    objc_copyWeak(&v18, &location);
    v10 = v12;
    v17 = v10;
    objc_msgSend(v5, "appendBodySectionWithName:multilinePrefix:block:", CFSTR("multitaskingDragExclusionRects"), v13, v16);

    v11 = v17;
  }
  else
  {
    if (a1 != 34)
    {
      v14 = 0;
      goto LABEL_7;
    }
    objc_initWeak(&location, v5);
    v7 = v6;
    objc_msgSend(v5, "activeMultilinePrefix");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v19[0] = MEMORY[0x1E0C809B0];
    v19[1] = 3221225472;
    v19[2] = __UIApplicationSceneClientSettingAppendCustomDescription_block_invoke;
    v19[3] = &unk_1E16B1500;
    v9 = &v21;
    objc_copyWeak(&v21, &location);
    v10 = v7;
    v20 = v10;
    objc_msgSend(v5, "appendBodySectionWithName:multilinePrefix:block:", CFSTR("statusBarPartStyles"), v8, v19);

    v11 = v20;
  }

  objc_destroyWeak(v9);
  objc_destroyWeak(&location);
  v14 = 1;
LABEL_7:

  return v14;
}

void sub_185C5B690(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

const __CFString *UIApplicationSceneStringForApplicationStatusBarPart(uint64_t a1)
{
  const __CFString *result;

  result = CFSTR("(none)");
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = CFSTR("leading");
      break;
    case 2:
      result = CFSTR("trailing");
      break;
    case 3:
      goto LABEL_5;
    case 4:
      result = CFSTR("center");
      break;
    default:
      if (a1 == 0xFFFF)
        result = CFSTR("(all)");
      else
LABEL_5:
        result = CFSTR("(other)");
      break;
  }
  return result;
}

const __CFString *UIApplicationSceneStringForInterfaceOrientationMode(uint64_t a1)
{
  const __CFString *v1;
  const __CFString *v2;
  const __CFString *v3;
  const __CFString *v4;

  v1 = CFSTR("alwaysAll");
  v2 = CFSTR("legacy");
  if (a1 != 100)
    v2 = 0;
  if (a1 != 2)
    v1 = v2;
  v3 = CFSTR("unknown");
  v4 = CFSTR("dynamic");
  if (a1 != 1)
    v4 = 0;
  if (a1)
    v3 = v4;
  if (a1 <= 1)
    return v3;
  else
    return v1;
}

__CFString *UIApplicationSceneSettingKeyDescription(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0x2C)
    return 0;
  else
    return off_1E16C8288[a1 - 1];
}

__CFString *UIApplicationSceneSettingValueDescription(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v4;
  void *v5;
  __CFString *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const __CFString *v15;
  const __CFString *v16;
  const __CFString *v17;
  const __CFString *v18;
  objc_class *v19;
  uint64_t v20;
  CGRect v21;

  v4 = a3;
  v5 = v4;
  v6 = 0;
  switch(a1)
  {
    case 1:
    case 6:
    case 7:
    case 37:
    case 42:
      BSSettingFlagIsYes();
      NSStringFromBOOL();
      v9 = objc_claimAutoreleasedReturnValue();
      goto LABEL_5;
    case 2:
      +[UIApplication stringForStatusBarStyleOverrides:](UIApplication, "stringForStatusBarStyleOverrides:", objc_msgSend(v4, "integerValue"));
      v9 = objc_claimAutoreleasedReturnValue();
      goto LABEL_5;
    case 3:
      UIApplicationSceneDeactivationReasonMaskDescriptionComponents(objc_msgSend(v4, "unsignedIntegerValue"));
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "componentsJoinedByString:", CFSTR(", "));
      v12 = objc_claimAutoreleasedReturnValue();
      goto LABEL_32;
    case 4:
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%ld"), objc_msgSend(v4, "integerValue"));
      goto LABEL_3;
    case 10:
      UIApplicationSceneStringForUserInterfaceStyle(objc_msgSend(v4, "integerValue"));
      v9 = objc_claimAutoreleasedReturnValue();
      goto LABEL_5;
    case 13:
      objc_msgSend(v4, "integerValue");
      BSDeviceOrientationDescription();
      v9 = objc_claimAutoreleasedReturnValue();
      goto LABEL_5;
    case 19:
      v13 = objc_msgSend(v4, "integerValue");
      v6 = CFSTR("(none)");
      switch(v13)
      {
        case 0:
          goto LABEL_6;
        case 1:
          v6 = CFSTR("leading");
          break;
        case 2:
          v6 = CFSTR("trailing");
          break;
        case 3:
          goto LABEL_39;
        case 4:
          v6 = CFSTR("center");
          break;
        default:
          if (v13 == 0xFFFF)
            v6 = CFSTR("(all)");
          else
LABEL_39:
            v6 = CFSTR("(other)");
          break;
      }
      break;
    case 20:
      objc_msgSend(v4, "CGRectValue");
      NSStringFromCGRect(v21);
      v9 = objc_claimAutoreleasedReturnValue();
      goto LABEL_5;
    case 21:
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%lu"), objc_msgSend(v4, "unsignedIntegerValue"));
      goto LABEL_3;
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 43:
      v7 = (void *)MEMORY[0x1E0CB3940];
      objc_msgSend(v4, "doubleValue");
      objc_msgSend(v7, "stringWithFormat:", CFSTR("%.2f"), v8);
      goto LABEL_3;
    case 30:
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%x"), objc_msgSend(v4, "unsignedIntegerValue"));
      goto LABEL_3;
    case 31:
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%lx"), objc_msgSend(v4, "unsignedIntegerValue"));
LABEL_3:
      v9 = objc_claimAutoreleasedReturnValue();
      goto LABEL_5;
    case 33:
      _NSStringFromUIPointerLockStatus(objc_msgSend(v4, "integerValue"));
      v9 = objc_claimAutoreleasedReturnValue();
      goto LABEL_5;
    case 35:
      v14 = objc_msgSend(v4, "unsignedIntegerValue");
      v15 = CFSTR("alwaysAll");
      v16 = CFSTR("legacy");
      if (v14 != 100)
        v16 = 0;
      if (v14 != 2)
        v15 = v16;
      v17 = CFSTR("unknown");
      v18 = CFSTR("dynamic");
      if (v14 != 1)
        v18 = 0;
      if (v14)
        v17 = v18;
      if (v14 <= 1)
        v6 = (__CFString *)v17;
      else
        v6 = (__CFString *)v15;
      break;
    case 36:
      -[_UIEventDeferringEnvironmentsContainer environments](v4);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      _UIEventDeferringEnvironmentsContainerSetDescription(v11);
      v12 = objc_claimAutoreleasedReturnValue();
LABEL_32:
      v6 = (__CFString *)v12;

      break;
    case 38:
      v19 = (objc_class *)objc_opt_class();
      NSStringFromClass(v19);
      v9 = objc_claimAutoreleasedReturnValue();
      goto LABEL_5;
    case 39:
      v20 = objc_msgSend(v4, "unsignedIntegerValue");
      if ((unint64_t)(v20 - 1) > 2)
        v6 = CFSTR("notSupported");
      else
        v6 = off_1E16C83F0[v20 - 1];
      break;
    case 44:
      objc_msgSend(v4, "unsignedIntegerValue");
      _UISStringForSystemReferenceAngleMode();
      v9 = objc_claimAutoreleasedReturnValue();
LABEL_5:
      v6 = (__CFString *)v9;
      break;
    default:
      break;
  }
LABEL_6:

  return v6;
}

void __rip_break_invalid_began__(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  unint64_t v8;
  NSObject *v9;
  NSObject *v10;
  void *v11;
  int v12;
  id v13;
  __int16 v14;
  void *v15;
  __int16 v16;
  const char *v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  v8 = __rip_break_invalid_began_____s_category;
  if (!__rip_break_invalid_began_____s_category)
  {
    v8 = __UILogCategoryGetNode("ResponderIntegrityProtection", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
    atomic_store(v8, (unint64_t *)&__rip_break_invalid_began_____s_category);
  }
  v9 = *(NSObject **)(v8 + 8);
  if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
  {
    v10 = v9;
    objc_msgSend(v5, "diffToRecord:press:", v6, v7);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = 138412802;
    v13 = v7;
    v14 = 2112;
    v15 = v11;
    v16 = 2080;
    v17 = "__rip_break_invalid_began__";
    _os_log_impl(&dword_185066000, v10, OS_LOG_TYPE_ERROR, "Received presses began for a press that's already being tracked: %@\n%@\nSet a breakpoint in %s to debug this issue.", (uint8_t *)&v12, 0x20u);

  }
}

void __rip_break_invalid_ended__(void *a1)
{
  id v1;
  unint64_t v2;
  NSObject *v3;
  int v4;
  id v5;
  __int16 v6;
  const char *v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = __rip_break_invalid_ended_____s_category;
  if (!__rip_break_invalid_ended_____s_category)
  {
    v2 = __UILogCategoryGetNode("ResponderIntegrityProtection", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
    atomic_store(v2, (unint64_t *)&__rip_break_invalid_ended_____s_category);
  }
  v3 = *(NSObject **)(v2 + 8);
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    v4 = 138412546;
    v5 = v1;
    v6 = 2080;
    v7 = "__rip_break_invalid_ended__";
    _os_log_impl(&dword_185066000, v3, OS_LOG_TYPE_ERROR, "Received presses ended for a press that isn't tracked: %@\nSet a breakpoint in %s to debug this issue.", (uint8_t *)&v4, 0x16u);
  }

}

void __appendDescription(void *a1, void *a2, void *a3, int a4)
{
  id v7;
  unsigned int v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  objc_class *v14;
  void *v15;
  __CFString *v16;
  void *v17;
  id v18;

  v18 = a1;
  v7 = a3;
  if (a4 <= 0)
    v8 = 45;
  else
    v8 = 43;
  if (a4)
    v9 = v8;
  else
    v9 = 62;
  v10 = a2;
  objc_msgSend(v7, "responder");
  v11 = (id)objc_claimAutoreleasedReturnValue();

  if (v11 != v10)
  {
    objc_msgSend(v7, "responder");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if (v12)
    {
      v13 = (void *)MEMORY[0x1E0CB3940];
      v14 = (objc_class *)objc_opt_class();
      NSStringFromClass(v14);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "stringWithFormat:", CFSTR("<%@: %p>"), v15, v12);
      v16 = (__CFString *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v16 = CFSTR("(nil)");
    }
    objc_msgSend(v18, "appendFormat:", CFSTR("%c%c %@\n"), v9, v9, v16);

  }
  NSStringFromClass((Class)objc_msgSend(v7, "clazz"));
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "appendFormat:", CFSTR("  %c %@\n"), v9, v17);

}

void _rip_inject_method(objc_class *a1, const char *a2)
{
  void *v4;
  void (*v5)(void);
  objc_method *InstanceMethod;
  void (*v7)(void);
  const char *v8;
  unint64_t v9;
  NSObject *v10;
  NSObject *v11;
  void *v12;
  void *v13;
  _QWORD v14[6];
  uint8_t buf[4];
  void *v16;
  __int16 v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = ___rip_inject_method_block_invoke;
  v14[3] = &__block_descriptor_48_e14_v32__0_8_16_24lu32l8;
  v14[4] = a1;
  v14[5] = a2;
  v4 = _Block_copy(v14);
  v5 = imp_implementationWithBlock(v4);

  if (!class_addMethod(a1, a2, v5, "v@:@@"))
  {
    InstanceMethod = class_getInstanceMethod(a1, a2);
    v7 = method_setImplementation(InstanceMethod, v5);
    v8 = _rip_originalSelectorForSelector(a2, a1);
    if (!class_addMethod(a1, v8, v7, "v@:@@"))
    {
      v9 = _rip_inject_method___s_category;
      if (!_rip_inject_method___s_category)
      {
        v9 = __UILogCategoryGetNode("ResponderIntegrityProtection", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
        atomic_store(v9, (unint64_t *)&_rip_inject_method___s_category);
      }
      v10 = *(NSObject **)(v9 + 8);
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      {
        v11 = v10;
        NSStringFromClass(a1);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        NSStringFromSelector(a2);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412546;
        v16 = v12;
        v17 = 2112;
        v18 = v13;
        _os_log_impl(&dword_185066000, v11, OS_LOG_TYPE_ERROR, "Unable to add original method implementation for class %@ and selector %@. This will likely crash at runtime.", buf, 0x16u);

      }
    }
  }
}

void ___rip_inject_method_block_invoke(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  char *v10;
  objc_class *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  const char *v17;
  IMP MethodImplementation;
  objc_super v19;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v11 = *(objc_class **)(a1 + 32);
  v10 = *(char **)(a1 + 40);
  v12 = v7;
  v13 = v8;
  v14 = v9;
  if (sel_pressesBegan_withEvent_ == v10)
  {
    v15 = 0;
  }
  else if (sel_pressesChanged_withEvent_ == v10)
  {
    v15 = 1;
  }
  else if (sel_pressesEnded_withEvent_ == v10)
  {
    v15 = 3;
  }
  else if (sel_pressesCancelled_withEvent_ == v10)
  {
    v15 = 4;
  }
  else
  {
    v15 = 2;
  }
  +[_UIResponderIntegrityProtection rip](_UIResponderIntegrityProtection, "rip");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "responder:class:receivedPresses:inPhase:withEvent:", v12, v11, v13, v15, v14);

  v17 = _rip_originalSelectorForSelector(v10, v11);
  if (class_respondsToSelector(v11, v17))
  {
    MethodImplementation = class_getMethodImplementation(v11, v17);
    ((void (*)(id, char *, id, id))MethodImplementation)(v12, v10, v13, v14);
  }
  else if ((objc_class *)objc_opt_class() != v11)
  {
    v19.receiver = v12;
    v19.super_class = class_getSuperclass(v11);
    objc_msgSendSuper(&v19, v10, v13, v14);
  }

}

SEL _rip_originalSelectorForSelector(const char *a1, Class cls)
{
  void *v3;
  const char *Name;
  NSString *v5;
  SEL v6;

  v3 = (void *)MEMORY[0x1E0CB3940];
  Name = class_getName(cls);
  objc_msgSend(v3, "stringWithFormat:", CFSTR("_original_%s_%s"), Name, sel_getName(a1));
  v5 = (NSString *)objc_claimAutoreleasedReturnValue();
  v6 = NSSelectorFromString(v5);

  return v6;
}

uint64_t UIApplicationSceneCompatibilityModeForString(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("none")) & 1) != 0)
  {
    v2 = 0;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("scaledZoomedOut")) & 1) != 0)
  {
    v2 = 1;
  }
  else if (objc_msgSend(v1, "isEqualToString:", CFSTR("scaledZoomedIn")))
  {
    v2 = 2;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

__CFString *UIApplicationSceneProximityDetectionModesDescription(uint64_t a1)
{
  uint64_t v1;
  __CFString *v2;
  __CFString *v3;

  if (!a1)
  {
    v3 = CFSTR("none");
    return v3;
  }
  v1 = a1;
  objc_msgSend(MEMORY[0x1E0CB37A0], "stringWithString:", CFSTR("("));
  v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if ((v1 & 1) != 0)
  {
    -[__CFString appendString:](v2, "appendString:", CFSTR(" off"));
    v1 &= ~1uLL;
    if ((v1 & 2) == 0)
    {
LABEL_4:
      if ((v1 & 4) == 0)
        goto LABEL_5;
      goto LABEL_13;
    }
  }
  else if ((v1 & 2) == 0)
  {
    goto LABEL_4;
  }
  -[__CFString appendString:](v3, "appendString:", CFSTR(" wantsEvents"));
  v1 &= ~2uLL;
  if ((v1 & 4) == 0)
  {
LABEL_5:
    if ((v1 & 8) == 0)
      goto LABEL_6;
LABEL_14:
    -[__CFString appendString:](v3, "appendString:", CFSTR(" expectsInLandscape"));
    v1 &= ~8uLL;
    if (!v1)
      goto LABEL_8;
    goto LABEL_7;
  }
LABEL_13:
  -[__CFString appendString:](v3, "appendString:", CFSTR(" expectsInPortrait"));
  v1 &= ~4uLL;
  if ((v1 & 8) != 0)
    goto LABEL_14;
LABEL_6:
  if (v1)
LABEL_7:
    -[__CFString appendFormat:](v3, "appendFormat:", CFSTR(" %li"), v1);
LABEL_8:
  -[__CFString appendString:](v3, "appendString:", CFSTR(")"));
  return v3;
}

uint64_t UIApplicationSceneClassicModeForString(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("none")) & 1) != 0)
  {
    v2 = 0;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("phone")) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("4\" phone")) & 1) != 0)
  {
    v2 = 2;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("4.7\" phone")) & 1) != 0)
  {
    v2 = 3;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("5.5\" phone")) & 1) != 0)
  {
    v2 = 4;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("5.8\" rounded phone")) & 1) != 0)
  {
    v2 = 5;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("6.5\" rounded phone")) & 1) != 0)
  {
    v2 = 6;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("pad")) & 1) != 0)
  {
    v2 = 7;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("10.5\" pad")) & 1) != 0)
  {
    v2 = 8;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("12.9\" pad")) & 1) != 0)
  {
    v2 = 9;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("11\" rounded pad")) & 1) != 0)
  {
    v2 = 10;
  }
  else if (objc_msgSend(v1, "isEqualToString:", CFSTR("originalTV")))
  {
    v2 = 100;
  }
  else
  {
    v2 = -1;
  }

  return v2;
}

BOOL UIApplicationSceneClassicModeRepresentsPad(uint64_t a1)
{
  return (unint64_t)(a1 + 1) >= 8 && a1 != 100;
}

BOOL UIApplicationSceneClassicModeRepresentsPhone(uint64_t a1)
{
  return ((unint64_t)(a1 + 1) > 0xB || ((1 << (a1 + 1)) & 0xF03) == 0) && a1 != 100;
}

BOOL UIApplicationSceneClassicModeExpectsRoundedCorners(uint64_t a1)
{
  return ((unint64_t)(a1 + 1) > 0xA || ((1 << (a1 + 1)) & 0x73D) == 0) && a1 != 100;
}

__CFString *UIApplicationSceneStringForUserInterfaceStyle(unint64_t a1)
{
  if (a1 > 2)
    return 0;
  else
    return off_1E16C86B0[a1];
}

BOOL UIApplicationSceneDeactivationReasonIsValid(unint64_t a1)
{
  return a1 < 0x13 || a1 == 30;
}

uint64_t UIApplicationSceneDeactivationReasonMaskForReason(char a1)
{
  return 1 << a1;
}

unint64_t UIApplicationSceneDeactivationReasonMaskLessKeyboardSuppression(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFFEFFLL;
}

__CFString *_UIApplicationSceneLifecycleActionTypeDescription(unint64_t a1)
{
  if (a1 < 5)
    return off_1E16C8828[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(%lu)"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

const __CFString *_UIStatusBarAnimationTypeDescription(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("none");
  if (a1 == 1)
    v1 = CFSTR("fade");
  if (a1 == 2)
    return CFSTR("slide");
  else
    return v1;
}

void sub_185C65460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185C65E24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185C660FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185C66F10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185C673D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v8;
  va_list va;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a7);
  va_start(va, a7);
  v8 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_185C677DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_185C68AFC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

id _forceUnwrappedScene(uint64_t a1)
{
  id WeakRetained;
  NSObject *v3;
  unint64_t v4;
  NSObject *v5;
  uint8_t v6[16];
  uint8_t buf[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (os_variant_has_internal_diagnostics())
  {
    if (!WeakRetained)
    {
      __UIFaultDebugAssertLog();
      v3 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_FAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_fault_impl(&dword_185066000, v3, OS_LOG_TYPE_FAULT, "Scene component is not attached to a scene.", buf, 2u);
      }

    }
  }
  else if (!WeakRetained)
  {
    v4 = _forceUnwrappedScene___s_category;
    if (!_forceUnwrappedScene___s_category)
    {
      v4 = __UILogCategoryGetNode("Assert", (uint64_t)&g_UILogCategories, (uint64_t (*)(_BYTE *))__UILogCategoryNewNode)- 16;
      atomic_store(v4, (unint64_t *)&_forceUnwrappedScene___s_category);
    }
    v5 = *(NSObject **)(v4 + 8);
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_185066000, v5, OS_LOG_TYPE_ERROR, "Scene component is not attached to a scene.", v6, 2u);
    }
  }
  return WeakRetained;
}

void sub_185C6B5BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id __viewOrWindowFallbackForRTLProbing(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;

  v3 = a1;
  _UIFocusEnvironmentContainingView(a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    v6 = v4;
  }
  else
  {
    objc_msgSend(v3, "_windowScene");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "windows");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "firstObject");
    v6 = (id)objc_claimAutoreleasedReturnValue();

  }
  return v6;
}

id UIITunesStoreResolvedURLForHTTPURL(void *a1)
{
  void *v1;

  objc_msgSend(a1, "iTunesStoreURL");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (v1 && (objc_msgSend((id)UIApp, "canOpenURL:", v1) & 1) == 0)
  {

    v1 = 0;
  }
  return v1;
}

id ArrowBezierPath(uint64_t a1, double a2, double a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, double a8, double a9)
{
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  CGFloat Height;
  double v23;
  __double2 v24;
  double v25;
  double v26;
  double MinX;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  CGFloat v32;
  double v33;
  double MinY;
  double v35;
  double MaxX;
  double v37;
  double v38;
  CGFloat v39;
  double v40;
  double v41;
  double v43;
  double v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;
  CGRect v78;
  CGRect v79;

  +[UIBezierPath bezierPath](UIBezierPath, "bezierPath");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  if ((unint64_t)(a1 - 1) > 1)
  {
    v49.origin.x = a4;
    v49.origin.y = a5;
    v49.size.width = a6;
    v49.size.height = a7;
    Height = CGRectGetHeight(v49);
    v23 = atan2(Height * 0.5, 18.0);
    v24 = __sincos_stret(v23);
    v44 = v24.__cosval * a8;
    v25 = (1.0 - sin(v23 * 0.5)) * a8;
    if (a1 == 4)
    {
      v43 = v23;
      v35 = v25;
      v66.origin.x = a4;
      v66.origin.y = a5;
      v66.size.width = a6;
      v66.size.height = a7;
      MaxX = CGRectGetMaxX(v66);
      v67.origin.x = a4;
      v67.origin.y = a5;
      v67.size.width = a6;
      v67.size.height = a7;
      objc_msgSend(v17, "moveToPoint:", MaxX, CGRectGetMinY(v67));
      v68.origin.x = a4;
      v68.origin.y = a5;
      v68.size.width = a6;
      v68.size.height = a7;
      v37 = v35 + CGRectGetMaxX(v68);
      v69.origin.x = a4;
      v69.origin.y = a5;
      v69.size.width = a6;
      v69.size.height = a7;
      objc_msgSend(v17, "addLineToPoint:", v37, CGRectGetMinY(v69));
      v70.origin.x = a4;
      v70.origin.y = a5;
      v70.size.width = a6;
      v70.size.height = a7;
      v38 = v35 + CGRectGetMaxX(v70);
      v71.origin.x = a4;
      v71.origin.y = a5;
      v71.size.width = a6;
      v71.size.height = a7;
      objc_msgSend(v17, "addArcWithCenter:radius:startAngle:endAngle:clockwise:", 1, v38, CGRectGetMinY(v71) + a8, a8, 4.71238898, v43 + 4.71238898);
      v72.origin.x = a4;
      v72.origin.y = a5;
      v72.size.width = a6;
      v72.size.height = a7;
      v39 = CGRectGetMaxX(v72) + 18.0 + a8;
      v73.origin.x = a4;
      v73.origin.y = a5;
      v73.size.width = a6;
      v73.size.height = a7;
      objc_msgSend(v17, "addLineToPoint:", v39, CGRectGetMidY(v73));
      v74.origin.x = a4;
      v74.origin.y = a5;
      v74.size.width = a6;
      v74.size.height = a7;
      v40 = v24.__sinval * a8 + v35 + CGRectGetMaxX(v74);
      v75.origin.x = a4;
      v75.origin.y = a5;
      v75.size.width = a6;
      v75.size.height = a7;
      objc_msgSend(v17, "addLineToPoint:", v40, v44 + CGRectGetMaxY(v75) - a8);
      v76.origin.x = a4;
      v76.origin.y = a5;
      v76.size.width = a6;
      v76.size.height = a7;
      v41 = v35 + CGRectGetMaxX(v76);
      v77.origin.x = a4;
      v77.origin.y = a5;
      v77.size.width = a6;
      v77.size.height = a7;
      objc_msgSend(v17, "addArcWithCenter:radius:startAngle:endAngle:clockwise:", 1, v41, CGRectGetMaxY(v77) - a8, a8, 1.57079633 - v43);
      v78.origin.x = a4;
      v78.origin.y = a5;
      v78.size.width = a6;
      v78.size.height = a7;
      v33 = CGRectGetMaxX(v78);
    }
    else
    {
      v43 = v24.__sinval * a8;
      if (a1 != 3)
        goto LABEL_17;
      v26 = v25;
      v50.origin.x = a4;
      v50.origin.y = a5;
      v50.size.width = a6;
      v50.size.height = a7;
      MinX = CGRectGetMinX(v50);
      v51.origin.x = a4;
      v51.origin.y = a5;
      v51.size.width = a6;
      v51.size.height = a7;
      objc_msgSend(v17, "moveToPoint:", MinX, CGRectGetMinY(v51));
      v52.origin.x = a4;
      v52.origin.y = a5;
      v52.size.width = a6;
      v52.size.height = a7;
      v28 = CGRectGetMinX(v52) - v26;
      v53.origin.x = a4;
      v53.origin.y = a5;
      v53.size.width = a6;
      v53.size.height = a7;
      objc_msgSend(v17, "addLineToPoint:", v28, CGRectGetMinY(v53));
      v54.origin.x = a4;
      v54.origin.y = a5;
      v54.size.width = a6;
      v54.size.height = a7;
      v29 = CGRectGetMinX(v54) - v26;
      v55.origin.x = a4;
      v55.origin.y = a5;
      v55.size.width = a6;
      v55.size.height = a7;
      objc_msgSend(v17, "addArcWithCenter:radius:startAngle:endAngle:clockwise:", 0, v29, CGRectGetMinY(v55) + a8, a8, 4.71238898, 4.71238898 - v23);
      v56.origin.x = a4;
      v56.origin.y = a5;
      v56.size.width = a6;
      v56.size.height = a7;
      v30 = CGRectGetMinX(v56) + -18.0 - a8;
      v57.origin.x = a4;
      v57.origin.y = a5;
      v57.size.width = a6;
      v57.size.height = a7;
      objc_msgSend(v17, "addLineToPoint:", v30, CGRectGetMidY(v57));
      v58.origin.x = a4;
      v58.origin.y = a5;
      v58.size.width = a6;
      v58.size.height = a7;
      v31 = CGRectGetMinX(v58) - v26 - v43;
      v59.origin.x = a4;
      v59.origin.y = a5;
      v59.size.width = a6;
      v59.size.height = a7;
      objc_msgSend(v17, "addLineToPoint:", v31, v44 + CGRectGetMaxY(v59) - a8);
      v60.origin.x = a4;
      v60.origin.y = a5;
      v60.size.width = a6;
      v60.size.height = a7;
      v32 = CGRectGetMinX(v60) - v26;
      v61.origin.x = a4;
      v61.origin.y = a5;
      v61.size.width = a6;
      v61.size.height = a7;
      objc_msgSend(v17, "addArcWithCenter:radius:startAngle:endAngle:clockwise:", 0, v32, CGRectGetMaxY(v61) - a8, a8, v23 + 1.57079633);
      v62.origin.x = a4;
      v62.origin.y = a5;
      v62.size.width = a6;
      v62.size.height = a7;
      v33 = CGRectGetMinX(v62);
    }
    v21 = v33;
    goto LABEL_15;
  }
  v18 = 0.5 / a9;
  v45.origin.x = a4;
  v45.origin.y = a5;
  v45.size.width = a6;
  v45.size.height = a7;
  v19 = CGRectGetMinX(v45) + 9.0 + a8 + 1.0;
  if (a2 < v19)
    a2 = v19;
  v46.origin.x = a4;
  v46.origin.y = a5;
  v46.size.width = a6;
  v46.size.height = a7;
  v20 = CGRectGetMaxX(v46) + -9.0 - a8 + -1.0;
  if (a2 >= v20)
    a2 = v20;
  if (a1 == 1)
  {
    v63.origin.x = a4;
    v63.origin.y = a5;
    v63.size.width = a6;
    v63.size.height = a7;
    objc_msgSend(v17, "moveToPoint:", a2 - v18, CGRectGetMinY(v63) + -9.0);
    v64.origin.x = a4;
    v64.origin.y = a5;
    v64.size.width = a6;
    v64.size.height = a7;
    objc_msgSend(v17, "addLineToPoint:", a2 + -9.0 - v18, CGRectGetMinY(v64));
    v21 = a2 + 9.0 - v18;
    v65.origin.x = a4;
    v65.origin.y = a5;
    v65.size.width = a6;
    v65.size.height = a7;
    MinY = CGRectGetMinY(v65);
LABEL_16:
    objc_msgSend(v17, "addLineToPoint:", v21, MinY, *(_QWORD *)&v43);
    goto LABEL_17;
  }
  if (a1 == 2)
  {
    v47.origin.x = a4;
    v47.origin.y = a5;
    v47.size.width = a6;
    v47.size.height = a7;
    objc_msgSend(v17, "moveToPoint:", a2 - v18, CGRectGetMaxY(v47) + 9.0);
    v48.origin.x = a4;
    v48.origin.y = a5;
    v48.size.width = a6;
    v48.size.height = a7;
    objc_msgSend(v17, "addLineToPoint:", a2 + -9.0 - v18, CGRectGetMaxY(v48));
    v21 = a2 + 9.0 - v18;
LABEL_15:
    v79.origin.x = a4;
    v79.origin.y = a5;
    v79.size.width = a6;
    v79.size.height = a7;
    MinY = CGRectGetMaxY(v79);
    goto LABEL_16;
  }
LABEL_17:
  objc_msgSend(v17, "closePath", *(_QWORD *)&v43);
  return v17;
}

