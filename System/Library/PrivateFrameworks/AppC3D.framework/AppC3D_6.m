void sub_207EA96D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;

  __cxa_free_exception(v9);
  sub_207C99D78((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EA96F0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_207EA9704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  sub_207C99D78((uint64_t)&a17);
  sub_207CBE108(&a9);
  sub_207E9C208(&a13);
  _Unwind_Resume(a1);
}

void sub_207EA974C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207C99D78((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EA9760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25)
{
  sub_207C99D78((uint64_t)&a9);
  if (a24 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_207EA9820(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207C99D78((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EA9834(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_207EA9848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t i;
  _OWORD *v6;
  std::__shared_weak_count *v7;
  char *v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  __int128 v17;

  if (a1 != a2)
  {
    for (i = a1; i != a2; i += 24)
    {
      sub_207CFBA9C(&v15, i + 8);
      sub_207CFBA9C((std::__shared_weak_count_vtbl **)&v17, (uint64_t)&v15);
      v6 = *(_OWORD **)(a3 + 8);
      if ((unint64_t)v6 >= *(_QWORD *)(a3 + 16))
      {
        v8 = sub_207CFEE1C((char **)a3, (uint64_t)&v17);
        v9 = (std::__shared_weak_count *)*((_QWORD *)&v17 + 1);
        *(_QWORD *)(a3 + 8) = v8;
        if (!v9)
          goto LABEL_11;
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(p_shared_owners);
        while (__stlxr(v11 - 1, p_shared_owners));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
          v7 = v16;
          if (v16)
          {
LABEL_12:
            v12 = (unint64_t *)&v7->__shared_owners_;
            do
              v13 = __ldaxr(v12);
            while (__stlxr(v13 - 1, v12));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
              std::__shared_weak_count::__release_weak(v7);
            }
          }
        }
        else
        {
LABEL_11:
          v7 = v16;
          if (v16)
            goto LABEL_12;
        }
      }
      else
      {
        *v6 = v17;
        v17 = 0uLL;
        *(_QWORD *)(a3 + 8) = v6 + 1;
        v7 = v16;
        if (v16)
          goto LABEL_12;
      }
    }
  }
  return a3;
}

void sub_207EA9980(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_207C99D78((uint64_t)va1);
  sub_207CBD7E8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EA999C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_207CBD7E8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EA99B0(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  char **v8;
  char *v9[2];
  __int128 v10;

  v9[0] = 0;
  v9[1] = 0;
  v8 = v9;
  sub_207CFFB70(&v8, (std::__shared_weak_count_vtbl **)&v10);
  v7 = v10;
  sub_207CFF9E4((uint64_t)&v8, v9[0]);
  sub_207EA744C(a1, (uint64_t)&v7);
  sub_207EA0FC8(a2, (uint64_t)&v7);
  v4 = (std::__shared_weak_count *)*((_QWORD *)&v7 + 1);
  if (*((_QWORD *)&v7 + 1))
  {
    v5 = (unint64_t *)(*((_QWORD *)&v7 + 1) + 8);
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_207EA9A6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13)
{
  sub_207CFF9E4((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void sub_207EA9A84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  unint64_t *p_shared_owners;
  unint64_t v12;

  if (a10)
  {
    p_shared_owners = (unint64_t *)&a10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_207EA9AC8(int *a1, _QWORD *a2, _QWORD *a3, unsigned int a4)
{
  int v7;
  unsigned int v9;
  unsigned int v10;
  __int128 *v11;
  unsigned int v12;
  char v13;

  v7 = *a1;
  if (*a1 == 2)
  {
    if (a4 < 2)
      goto LABEL_8;
    v12 = 2;
    (*(void (**)(_QWORD *, unsigned int *))(*a2 + 104))(a2, &v12);
    if (v12 >= 3)
    {
      v10 = v12;
      v11 = sub_207EA9BF4();
      sub_208212838((std::string *)v11, v10, 2u);
    }
    v7 = *a1;
  }
  if (a4 >= 2 && v7 > 0)
  {
    (*(void (**)(_QWORD *))(*a2 + 16))(a2);
    sub_207EA9FA4(a2, (uint64_t)a3);
    (*(void (**)(_QWORD *))(*a2 + 24))(a2);
    return;
  }
LABEL_8:
  if (a4 >= 2)
    v9 = 2;
  else
    v9 = a4;
  if (v9 <= 1)
    sub_207EAA0BC((uint64_t)&v13, a2, a3);
  else
    sub_207EA9FA4(a2, (uint64_t)a3);
}

__int128 *sub_207EA9BF4()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452CDF0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452CDF0))
    return &xmmword_25452CDD8;
  v2 = sub_207EA9CD0();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_207CA40D8(&xmmword_25452CDD8, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_25452CDE8 = v2->__r_.__value_.__r.__words[2];
    xmmword_25452CDD8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452CDD8, &dword_207C77000);
  __cxa_guard_release(&qword_25452CDF0);
  return &xmmword_25452CDD8;
}

void sub_207EA9CB8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452CDF0);
  _Unwind_Resume(a1);
}

std::string *sub_207EA9CD0()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452CE10);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452CE10))
    return &stru_25452CDF8;
  sub_207EA9DC0((uint64_t)__p);
  sub_207D50234((char *)__p, &stru_25452CDF8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25452CDF8, &dword_207C77000);
  __cxa_guard_release(&qword_25452CE10);
  return &stru_25452CDF8;
}

void sub_207EA9D80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25452CE10);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25452CE10);
  _Unwind_Resume(a1);
}

void sub_207EA9DC0(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25452CE30);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25452CE30))
  {
    sub_2082159F8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::dictio::DictionarySample<>]", qword_25452CE18);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452CE18, &dword_207C77000);
    __cxa_guard_release(&qword_25452CE30);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25452CE50);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25452CE50))
  {
    v5 = sub_207D49434(qword_25452CE18, "<", 0);
    sub_207D49330(qword_25452CE18, 0, v5, qword_25452CE38);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452CE38, &dword_207C77000);
    __cxa_guard_release(&qword_25452CE50);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_25452CE70);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25452CE70))
  {
    sub_208215C6C((uint64_t)qword_25452CE38, (uint64_t)&xmmword_25452CE58);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452CE58, &dword_207C77000);
    __cxa_guard_release(&qword_25452CE70);
  }
  if (byte_25452CE6F < 0)
  {
    sub_207CA40D8((_BYTE *)a1, (void *)xmmword_25452CE58, *((unint64_t *)&xmmword_25452CE58 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_25452CE58;
    *(_QWORD *)(a1 + 16) = unk_25452CE68;
  }
}

void sub_207EA9F5C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452CE70);
  _Unwind_Resume(a1);
}

void sub_207EA9F74(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452CE50);
  _Unwind_Resume(a1);
}

void sub_207EA9F8C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452CE30);
  _Unwind_Resume(a1);
}

void sub_207EA9FA4(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  char **v8;
  char *v9[2];
  __int128 v10;

  v9[0] = 0;
  v9[1] = 0;
  v8 = v9;
  sub_207CFFB70(&v8, (std::__shared_weak_count_vtbl **)&v10);
  v7 = v10;
  sub_207CFF9E4((uint64_t)&v8, v9[0]);
  sub_207EAA1C0(a1, (uint64_t)&v7);
  sub_207EA0C5C(a2, (uint64_t)&v7);
  v4 = (std::__shared_weak_count *)*((_QWORD *)&v7 + 1);
  if (*((_QWORD *)&v7 + 1))
  {
    v5 = (unint64_t *)(*((_QWORD *)&v7 + 1) + 8);
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_207EAA060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13)
{
  sub_207CFF9E4((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void sub_207EAA078(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  unint64_t *p_shared_owners;
  unint64_t v12;

  if (a10)
  {
    p_shared_owners = (unint64_t *)&a10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_207EAA0BC(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;

  sub_20806CB1C(&v15);
  sub_207EACFC4(a2, (uint64_t)&v15);
  v6 = v15;
  v5 = v16;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  v9 = (std::__shared_weak_count *)a3[1];
  *a3 = v6;
  a3[1] = v5;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = v16;
  if (v16)
  {
    v13 = (unint64_t *)&v16->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_207EAA1AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207C99D78((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EAA1C0(_QWORD *a1, uint64_t a2)
{
  char *v4;
  unint64_t v5;
  unint64_t v6;
  _WORD *v7;
  int64_t v8;
  char *v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  __int128 v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  char *v23;
  char *v24;
  void *v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  void **v29;
  void **v30;
  void *v31;
  void *v32[2];
  void *__p[2];
  __int128 v34;
  unint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t *v38;
  int *v39;
  int v40;
  char v41;

  *(_OWORD *)__p = 0u;
  v34 = 0u;
  *(_OWORD *)v32 = 0u;
  sub_207E1F7E0((uint64_t)a1, (char **)v32);
  v35 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v34 - (unint64_t)__p[1]) >> 3);
  (*(void (**)(_QWORD *, unint64_t *))(*a1 + 120))(a1, &v35);
  v4 = (char *)v34;
  v5 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v34 - (unint64_t)__p[1]) >> 3);
  v6 = v35 - v5;
  if (v35 > v5)
  {
    sub_207EA1930((char **)&__p[1], v6);
    v7 = __p[1];
    v8 = v34 - (unint64_t)__p[1];
    if ((void *)v34 == __p[1])
      goto LABEL_23;
    goto LABEL_16;
  }
  if (v35 >= v5)
  {
    v7 = __p[1];
    v8 = v34 - (unint64_t)__p[1];
    if ((void *)v34 == __p[1])
      goto LABEL_23;
    goto LABEL_16;
  }
  v9 = (char *)__p[1] + 24 * v35;
  while (v4 != v9)
  {
    v10 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
    if (v10)
    {
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *, unint64_t))v10->__on_zero_shared)(v10, v6);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
    v4 -= 24;
  }
  *(_QWORD *)&v34 = v9;
  v7 = __p[1];
  v8 = v9 - (char *)__p[1];
  if (v9 != __p[1])
  {
LABEL_16:
    v13 = 24 * (v8 / 24);
    do
    {
      v14 = *a1;
      v36 = a1[1];
      v40 = 0;
      LODWORD(v37) = 2;
      (*(void (**)(_QWORD *, __int128 *))(v14 + 104))(a1, &v37);
      v15 = v37;
      v40 = v37;
      *(_QWORD *)&v37 = a1;
      *((_QWORD *)&v37 + 1) = v7;
      v38 = &v36;
      v39 = &v40;
      if ((int)v36 >= 1)
      {
        sub_207EAA6EC((uint64_t)&v37);
      }
      else if (v15 < 2)
      {
        sub_207EAACEC((uint64_t)&v41, (uint64_t)a1, (uint64_t)v7);
      }
      else
      {
        sub_207EAAEA4((uint64_t)a1, v7);
      }
      v7 += 12;
      v13 -= 24;
    }
    while (v13);
  }
LABEL_23:
  sub_2080941EC((uint64_t *)v32, (void ***)&v37);
  v16 = v37;
  v37 = 0uLL;
  v17 = *(std::__shared_weak_count **)(a2 + 8);
  *(_OWORD *)a2 = v16;
  if (v17)
  {
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(v18);
    while (__stlxr(v19 - 1, v18));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  v20 = (std::__shared_weak_count *)*((_QWORD *)&v37 + 1);
  if (*((_QWORD *)&v37 + 1))
  {
    v21 = (unint64_t *)(*((_QWORD *)&v37 + 1) + 8);
    do
      v22 = __ldaxr(v21);
    while (__stlxr(v22 - 1, v21));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
  v23 = (char *)__p[1];
  if (__p[1])
  {
    v24 = (char *)v34;
    v25 = __p[1];
    if ((void *)v34 != __p[1])
    {
      do
      {
        v26 = (std::__shared_weak_count *)*((_QWORD *)v24 - 1);
        if (v26)
        {
          v27 = (unint64_t *)&v26->__shared_owners_;
          do
            v28 = __ldaxr(v27);
          while (__stlxr(v28 - 1, v27));
          if (!v28)
          {
            ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
            std::__shared_weak_count::__release_weak(v26);
          }
        }
        v24 -= 24;
      }
      while (v24 != v23);
      v25 = __p[1];
    }
    *(_QWORD *)&v34 = v23;
    operator delete(v25);
  }
  v29 = (void **)v32[0];
  if (v32[0])
  {
    v30 = (void **)v32[1];
    v31 = v32[0];
    if (v32[1] != v32[0])
    {
      do
      {
        if (*((char *)v30 - 1) < 0)
          operator delete(*(v30 - 3));
        v30 -= 3;
      }
      while (v30 != v29);
      v31 = v32[0];
    }
    v32[1] = v29;
    operator delete(v31);
  }
}

void sub_207EAA4E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_207E9C128(&a9);
  _Unwind_Resume(a1);
}

void sub_207EAA4FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_207E9C128(&a9);
  _Unwind_Resume(a1);
}

void sub_207EAA510(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_207E9C128(&a9);
  _Unwind_Resume(a1);
}

void sub_207EAA524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_207E9C128(&a9);
  _Unwind_Resume(a1);
}

void sub_207EAA538(_QWORD *a1, char **a2)
{
  char *v4;
  unint64_t v5;
  unint64_t v6;
  char *v7;
  char *v8;
  char **v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;

  v17 = 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 3);
  (*(void (**)(_QWORD *, unint64_t *))(*a1 + 120))(a1, &v17);
  v4 = a2[1];
  v5 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *a2) >> 3);
  v6 = v17 - v5;
  if (v17 > v5)
  {
    sub_207EA1930(a2, v6);
    v9 = a2;
    v7 = *a2;
    v8 = v9[1];
    v10 = v8 - v7;
    if (v8 == v7)
      return;
    goto LABEL_16;
  }
  if (v17 >= v5)
  {
    v7 = *a2;
    v10 = v4 - v7;
    if (v4 == v7)
      return;
    goto LABEL_16;
  }
  v11 = (uint64_t)&(*a2)[24 * v17];
  while (v4 != (char *)v11)
  {
    v12 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldaxr(p_shared_owners);
      while (__stlxr(v14 - 1, p_shared_owners));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *, unint64_t))v12->__on_zero_shared)(v12, v6);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    v4 -= 24;
  }
  a2[1] = (char *)v11;
  v7 = *a2;
  v10 = v11 - (_QWORD)v7;
  if ((char *)v11 != v7)
  {
LABEL_16:
    v15 = 24 * (v10 / 24);
    do
    {
      v16 = *a1;
      v18 = a1[1];
      v19 = 2;
      (*(void (**)(_QWORD *, unsigned int *))(v16 + 104))(a1, &v19);
      if ((int)v18 >= 1)
      {
        sub_207EAA810((int *)&v18, (uint64_t)a1, (uint64_t)v7, v19);
      }
      else if (v19 < 2)
      {
        sub_207EAACEC((uint64_t)&v19, (uint64_t)a1, (uint64_t)v7);
      }
      else
      {
        sub_207EAAEA4(a1, v7, v19);
      }
      v7 += 24;
      v15 -= 24;
    }
    while (v15);
  }
}

void sub_207EAA6EC(uint64_t a1)
{
  uint64_t v1;
  _WORD *v2;
  int *v3;
  unsigned int v4;
  int v5;
  unsigned int v7;
  unsigned int v8;
  __int128 *v9;
  char v10;
  unsigned int v11;

  v1 = *(_QWORD *)a1;
  v2 = *(_WORD **)(a1 + 8);
  v3 = *(int **)(a1 + 16);
  v4 = **(_DWORD **)(a1 + 24);
  v5 = *v3;
  if (*v3 == 2)
  {
    if (v4 < 2)
      goto LABEL_9;
    v11 = 2;
    (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)v1 + 104))(v1, &v11);
    if (v11 >= 3)
    {
      v8 = v11;
      v9 = sub_207EAA93C();
      sub_208212838((std::string *)v9, v8, 2u);
    }
    v5 = *v3;
  }
  if (v5 >= 1 && v4 > 1)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 16))(v1);
    sub_207EAAEA4(v1, v2);
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
    return;
  }
LABEL_9:
  if (v4 >= 2)
    v7 = 2;
  else
    v7 = v4;
  if (v7 <= 1)
    sub_207EAACEC((uint64_t)&v10, v1, (uint64_t)v2);
  else
    sub_207EAAEA4(v1, v2);
}

void sub_207EAA810(int *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v7;
  unsigned int v9;
  unsigned int v10;
  __int128 *v11;
  unsigned int v12;
  char v13;

  v7 = *a1;
  if (*a1 == 2)
  {
    if (a4 < 2)
      goto LABEL_8;
    v12 = 2;
    (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    if (v12 >= 3)
    {
      v10 = v12;
      v11 = sub_207EAA93C();
      sub_208212838((std::string *)v11, v10, 2u);
    }
    v7 = *a1;
  }
  if (a4 >= 2 && v7 > 0)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
    sub_207EAAEA4(a2, a3, 2);
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
    return;
  }
LABEL_8:
  if (a4 >= 2)
    v9 = 2;
  else
    v9 = a4;
  if (v9 <= 1)
    sub_207EAACEC((uint64_t)&v13, a2, a3);
  else
    sub_207EAAEA4(a2, a3, 2);
}

__int128 *sub_207EAA93C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452CE90);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452CE90))
    return &xmmword_25452CE78;
  v2 = sub_207EAAA18();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_207CA40D8(&xmmword_25452CE78, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_25452CE88 = v2->__r_.__value_.__r.__words[2];
    xmmword_25452CE78 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452CE78, &dword_207C77000);
  __cxa_guard_release(&qword_25452CE90);
  return &xmmword_25452CE78;
}

void sub_207EAAA00(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452CE90);
  _Unwind_Resume(a1);
}

std::string *sub_207EAAA18()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452CEB0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452CEB0))
    return &stru_25452CE98;
  sub_207EAAB08((uint64_t)__p);
  sub_207D50234((char *)__p, &stru_25452CE98);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25452CE98, &dword_207C77000);
  __cxa_guard_release(&qword_25452CEB0);
  return &stru_25452CE98;
}

void sub_207EAAAC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25452CEB0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25452CEB0);
  _Unwind_Resume(a1);
}

void sub_207EAAB08(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25452CED0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25452CED0))
  {
    sub_2082159F8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cfio::DictionaryValueSample<>]", qword_25452CEB8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452CEB8, &dword_207C77000);
    __cxa_guard_release(&qword_25452CED0);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25452CEF0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25452CEF0))
  {
    v5 = sub_207D49434(qword_25452CEB8, "<", 0);
    sub_207D49330(qword_25452CEB8, 0, v5, qword_25452CED8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452CED8, &dword_207C77000);
    __cxa_guard_release(&qword_25452CEF0);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_25452CF10);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25452CF10))
  {
    sub_208215C6C((uint64_t)qword_25452CED8, (uint64_t)&xmmword_25452CEF8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452CEF8, &dword_207C77000);
    __cxa_guard_release(&qword_25452CF10);
  }
  if (byte_25452CF0F < 0)
  {
    sub_207CA40D8((_BYTE *)a1, (void *)xmmword_25452CEF8, *((unint64_t *)&xmmword_25452CEF8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_25452CEF8;
    *(_QWORD *)(a1 + 16) = unk_25452CF08;
  }
}

void sub_207EAACA4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452CF10);
  _Unwind_Resume(a1);
}

void sub_207EAACBC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452CEF0);
  _Unwind_Resume(a1);
}

void sub_207EAACD4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452CED0);
  _Unwind_Resume(a1);
}

void sub_207EAACEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int16 v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  __int128 v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  __int128 v18;
  __int16 v19;
  uint64_t v20;
  std::__shared_weak_count *v21;
  std::__shared_weak_count_vtbl *v22;
  std::__shared_weak_count *v23;

  v20 = 0;
  v21 = 0;
  sub_207EAC590(a2, &v19);
  v4 = v19;
  sub_207CFBA9C(&v22, (uint64_t)&v20);
  sub_207CFBA9C((std::__shared_weak_count_vtbl **)&v18, (uint64_t)&v22);
  v5 = v23;
  if (v23)
  {
    p_shared_owners = (unint64_t *)&v23->__shared_owners_;
    do
      v7 = __ldaxr(p_shared_owners);
    while (__stlxr(v7 - 1, p_shared_owners));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  *(_WORD *)a3 = v4;
  v8 = v18;
  v18 = 0uLL;
  v9 = *(std::__shared_weak_count **)(a3 + 16);
  *(_OWORD *)(a3 + 8) = v8;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v18 + 1);
  if (*((_QWORD *)&v18 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v18 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  v15 = v21;
  if (v21)
  {
    v16 = (unint64_t *)&v21->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
}

void sub_207EAAE60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  va_list va1;

  va_start(va1, a4);
  va_start(va, a4);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  sub_207C99D78((uint64_t)va1);
  sub_207CBD7E8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EAAE7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_207CBD7E8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EAAE90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_207CBD7E8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EAAEA4(uint64_t a1, _WORD *a2)
{
  _DWORD *v4;
  uint64_t v5;
  __int128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  __int128 v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  char *v36;
  char *v37;
  void *v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  char *v45;
  char *v46;
  void *v47;
  std::__shared_weak_count *v48;
  unint64_t *v49;
  unint64_t v50;
  __int128 v51;
  std::__shared_weak_count *v52;
  unint64_t *p_shared_owners;
  unint64_t v54;
  std::__shared_weak_count *v55;
  unint64_t *v56;
  unint64_t v57;
  std::__shared_weak_count *v58;
  unint64_t *v59;
  unint64_t v60;
  __int128 v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  std::__shared_weak_count *v65;
  unint64_t *v66;
  unint64_t v67;
  std::__shared_weak_count *v68;
  unint64_t *v69;
  unint64_t v70;
  unint64_t *v71;
  void *v72[2];
  void *v73;
  void *v74[2];
  uint64_t v75;
  __int128 v76;
  void *__p[2];
  void *v78;
  __int128 *v79;
  _DWORD *v80;
  char v81;

  __p[0] = a2;
  sub_207EAB7C4((_BYTE *)a1, (_WORD **)__p);
  switch(*a2)
  {
    case 0:
      LOBYTE(__p[0]) = 7;
      LOBYTE(__p[1]) = 7;
      v4 = operator new(4uLL);
      v78 = v4;
      *v4 = 0;
      v79 = (__int128 *)(v4 + 1);
      v80 = v4 + 1;
      v5 = *(_QWORD *)a1;
      v72[0] = *(void **)(a1 + 8);
      LODWORD(v74[0]) = 2;
      (*(void (**)(uint64_t, void **))(v5 + 104))(a1, v74);
      if (SLODWORD(v72[0]) < 1)
      {
        if (LODWORD(v74[0]) < 2)
        {
          sub_207E40F94((uint64_t)v74, (_BYTE *)a1, (uint64_t)__p);
        }
        else
        {
          v74[0] = __p;
          sub_207E41430((_BYTE *)a1, (_BYTE **)v74);
          sub_207E41118(LOBYTE(__p[0]), a1, (uint64_t)__p);
        }
      }
      else
      {
        sub_207E40C4C((int *)v72, (_BYTE *)a1, __p, v74[0]);
      }
      sub_207D01DD8((uint64_t)v74, (uint64_t)&__p[1]);
      v76 = *(_OWORD *)v74;
      sub_207EA2588((std::__shared_weak_count_vtbl **)v72, (uint64_t)&v76);
      v51 = *(_OWORD *)v72;
      v72[0] = 0;
      v72[1] = 0;
      v52 = (std::__shared_weak_count *)*((_QWORD *)a2 + 2);
      *(_OWORD *)(a2 + 4) = v51;
      if (v52)
      {
        p_shared_owners = (unint64_t *)&v52->__shared_owners_;
        do
          v54 = __ldaxr(p_shared_owners);
        while (__stlxr(v54 - 1, p_shared_owners));
        if (!v54)
        {
          ((void (*)(std::__shared_weak_count *))v52->__on_zero_shared)(v52);
          std::__shared_weak_count::__release_weak(v52);
        }
      }
      v55 = (std::__shared_weak_count *)v72[1];
      if (v72[1])
      {
        v56 = (unint64_t *)((char *)v72[1] + 8);
        do
          v57 = __ldaxr(v56);
        while (__stlxr(v57 - 1, v56));
        if (!v57)
        {
          ((void (*)(std::__shared_weak_count *))v55->__on_zero_shared)(v55);
          std::__shared_weak_count::__release_weak(v55);
        }
      }
      v58 = (std::__shared_weak_count *)*((_QWORD *)&v76 + 1);
      if (*((_QWORD *)&v76 + 1))
      {
        v59 = (unint64_t *)(*((_QWORD *)&v76 + 1) + 8);
        do
          v60 = __ldaxr(v59);
        while (__stlxr(v60 - 1, v59));
        if (!v60)
        {
          ((void (*)(std::__shared_weak_count *))v58->__on_zero_shared)(v58);
          std::__shared_weak_count::__release_weak(v58);
        }
      }
      if (v78)
      {
        v79 = (__int128 *)v78;
        operator delete(v78);
      }
      return;
    case 1:
      __p[0] = 0;
      __p[1] = 0;
      v78 = 0;
      (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 144))(a1, __p);
      sub_207CF8F18((uint64_t)__p, (CFStringRef *)v72);
      sub_207EA26E0((std::__shared_weak_count_vtbl **)v74, (uint64_t)v72);
      v6 = *(_OWORD *)v74;
      v74[0] = 0;
      v74[1] = 0;
      v7 = (std::__shared_weak_count *)*((_QWORD *)a2 + 2);
      *(_OWORD *)(a2 + 4) = v6;
      if (v7)
      {
        v8 = (unint64_t *)&v7->__shared_owners_;
        do
          v9 = __ldaxr(v8);
        while (__stlxr(v9 - 1, v8));
        if (!v9)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
      }
      v10 = (std::__shared_weak_count *)v74[1];
      if (v74[1])
      {
        v11 = (unint64_t *)((char *)v74[1] + 8);
        do
          v12 = __ldaxr(v11);
        while (__stlxr(v12 - 1, v11));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      v13 = (std::__shared_weak_count *)v72[1];
      if (v72[1])
      {
        v14 = (unint64_t *)((char *)v72[1] + 8);
        do
          v15 = __ldaxr(v14);
        while (__stlxr(v15 - 1, v14));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      if (SHIBYTE(v78) < 0)
        operator delete(__p[0]);
      return;
    case 2:
      LOBYTE(v72[0]) = 0;
      (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 32))(a1, v72);
      sub_207CF8E38(v72, (std::__shared_weak_count_vtbl **)v74);
      sub_207EA2838((std::__shared_weak_count_vtbl **)__p, (uint64_t)v74);
      v16 = *(_OWORD *)__p;
      __p[0] = 0;
      __p[1] = 0;
      v17 = (std::__shared_weak_count *)*((_QWORD *)a2 + 2);
      *(_OWORD *)(a2 + 4) = v16;
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldaxr(v18);
        while (__stlxr(v19 - 1, v18));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      v20 = (std::__shared_weak_count *)__p[1];
      if (__p[1])
      {
        v21 = (unint64_t *)((char *)__p[1] + 8);
        do
          v22 = __ldaxr(v21);
        while (__stlxr(v22 - 1, v21));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      v23 = (std::__shared_weak_count *)v74[1];
      if (!v74[1])
        return;
      v24 = (unint64_t *)((char *)v74[1] + 8);
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      break;
    case 3:
      v74[0] = 0;
      v74[1] = 0;
      v75 = 0;
      sub_207EAA538((_QWORD *)a1, (char **)v74);
      __p[1] = 0;
      v78 = 0;
      __p[0] = 0;
      sub_207CFED24((uint64_t)__p, 0xAAAAAAAAAAAAAAABLL * (((char *)v74[1] - (char *)v74[0]) >> 3));
      sub_207EAB948((uint64_t)v74[0], (uint64_t)v74[1], (uint64_t)__p);
      *(_OWORD *)v72 = *(_OWORD *)__p;
      v73 = v78;
      sub_207EA2DA8((uint64_t *)v72, (CFMutableArrayRef *)&v76);
      sub_207EA2990((std::__shared_weak_count_vtbl **)__p, (uint64_t)&v76);
      v26 = *(_OWORD *)__p;
      __p[0] = 0;
      __p[1] = 0;
      v27 = (std::__shared_weak_count *)*((_QWORD *)a2 + 2);
      *(_OWORD *)(a2 + 4) = v26;
      if (v27)
      {
        v28 = (unint64_t *)&v27->__shared_owners_;
        do
          v29 = __ldaxr(v28);
        while (__stlxr(v29 - 1, v28));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
      v30 = (std::__shared_weak_count *)__p[1];
      if (__p[1])
      {
        v31 = (unint64_t *)((char *)__p[1] + 8);
        do
          v32 = __ldaxr(v31);
        while (__stlxr(v32 - 1, v31));
        if (!v32)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      v33 = (std::__shared_weak_count *)*((_QWORD *)&v76 + 1);
      if (*((_QWORD *)&v76 + 1))
      {
        v34 = (unint64_t *)(*((_QWORD *)&v76 + 1) + 8);
        do
          v35 = __ldaxr(v34);
        while (__stlxr(v35 - 1, v34));
        if (!v35)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      v36 = (char *)v72[0];
      if (v72[0])
      {
        v37 = (char *)v72[1];
        v38 = v72[0];
        if (v72[1] != v72[0])
        {
          do
          {
            v39 = (std::__shared_weak_count *)*((_QWORD *)v37 - 1);
            if (v39)
            {
              v40 = (unint64_t *)&v39->__shared_owners_;
              do
                v41 = __ldaxr(v40);
              while (__stlxr(v41 - 1, v40));
              if (!v41)
              {
                ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
                std::__shared_weak_count::__release_weak(v39);
              }
            }
            v37 -= 16;
          }
          while (v37 != v36);
          v38 = v72[0];
        }
        v72[1] = v36;
        operator delete(v38);
      }
      v45 = (char *)v74[0];
      if (v74[0])
      {
        v46 = (char *)v74[1];
        v47 = v74[0];
        if (v74[1] != v74[0])
        {
          do
          {
            v48 = (std::__shared_weak_count *)*((_QWORD *)v46 - 1);
            if (v48)
            {
              v49 = (unint64_t *)&v48->__shared_owners_;
              do
                v50 = __ldaxr(v49);
              while (__stlxr(v50 - 1, v49));
              if (!v50)
              {
                ((void (*)(std::__shared_weak_count *))v48->__on_zero_shared)(v48);
                std::__shared_weak_count::__release_weak(v48);
              }
            }
            v46 -= 24;
          }
          while (v46 != v45);
          v47 = v74[0];
        }
        v74[1] = v45;
        operator delete(v47);
      }
      return;
    case 4:
      __p[1] = 0;
      v78 = 0;
      __p[0] = &__p[1];
      sub_207CFFB70(__p, (std::__shared_weak_count_vtbl **)v74);
      *(_OWORD *)v72 = *(_OWORD *)v74;
      sub_207CFF9E4((uint64_t)__p, (char *)__p[1]);
      v42 = *(_QWORD *)a1;
      v74[0] = *(void **)(a1 + 8);
      v43 = (int)v74[0];
      LODWORD(v76) = 0;
      LODWORD(__p[0]) = 2;
      (*(void (**)(uint64_t, void **))(v42 + 104))(a1, __p);
      v44 = LODWORD(__p[0]);
      LODWORD(v76) = __p[0];
      __p[0] = (void *)a1;
      __p[1] = v72;
      v78 = v74;
      v79 = &v76;
      if (v43 < 1)
      {
        if (v44 < 2)
          sub_207EABF84((uint64_t)&v81, a1, (uint64_t)v72);
        else
          sub_207EAA1C0(a1, v72, v44);
      }
      else
      {
        sub_207EABAB0((uint64_t)__p);
      }
      sub_207E01D24((std::__shared_weak_count_vtbl **)v74, (uint64_t)v72);
      sub_207EA2AE8((std::__shared_weak_count_vtbl **)__p, (uint64_t)v74);
      v61 = *(_OWORD *)__p;
      __p[0] = 0;
      __p[1] = 0;
      v62 = (std::__shared_weak_count *)*((_QWORD *)a2 + 2);
      *(_OWORD *)(a2 + 4) = v61;
      if (v62)
      {
        v63 = (unint64_t *)&v62->__shared_owners_;
        do
          v64 = __ldaxr(v63);
        while (__stlxr(v64 - 1, v63));
        if (!v64)
        {
          ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
          std::__shared_weak_count::__release_weak(v62);
        }
      }
      v65 = (std::__shared_weak_count *)__p[1];
      if (__p[1])
      {
        v66 = (unint64_t *)((char *)__p[1] + 8);
        do
          v67 = __ldaxr(v66);
        while (__stlxr(v67 - 1, v66));
        if (!v67)
        {
          ((void (*)(std::__shared_weak_count *))v65->__on_zero_shared)(v65);
          std::__shared_weak_count::__release_weak(v65);
        }
      }
      v68 = (std::__shared_weak_count *)v74[1];
      if (v74[1])
      {
        v69 = (unint64_t *)((char *)v74[1] + 8);
        do
          v70 = __ldaxr(v69);
        while (__stlxr(v70 - 1, v69));
        if (!v70)
        {
          ((void (*)(std::__shared_weak_count *))v68->__on_zero_shared)(v68);
          std::__shared_weak_count::__release_weak(v68);
        }
      }
      v23 = (std::__shared_weak_count *)v72[1];
      if (!v72[1])
        return;
      v71 = (unint64_t *)((char *)v72[1] + 8);
      do
        v25 = __ldaxr(v71);
      while (__stlxr(v25 - 1, v71));
      break;
    default:
      sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Foundation/FoundationIO/include/Kit/FoundationIO/DictionaryRefIO.h", 250, (uint64_t)"", 0, (uint64_t)"invalid value type identifier", 29, (void (*)(void **))sub_208216974);
      abort();
  }
  if (!v25)
  {
    ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
    std::__shared_weak_count::__release_weak(v23);
  }
}

void sub_207EAB68C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  sub_207C99D78((uint64_t)&a13);
  sub_207C99D78((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EAB6A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207C99D78((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EAB6BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, void *a19, uint64_t a20,void *__p,uint64_t a22)
{
  sub_207C99D78((uint64_t)&a17);
  if (!__p)
    _Unwind_Resume(a1);
  a22 = (uint64_t)__p;
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_207EAB7C4(_BYTE *a1, _WORD **a2)
{
  int v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *__p[2];
  uint64_t v13;
  __int16 v14;
  char *v15;

  if ((a1[12] & 2) != 0)
  {
    __p[0] = 0;
    __p[1] = 0;
    v13 = 0;
    (*(void (**)(_BYTE *, void **))(*(_QWORD *)a1 + 144))(a1, __p);
    v3 = SHIBYTE(v13);
    v4 = (char *)__p[0];
    v5 = (char *)operator new(0x118uLL);
    v6 = v5;
    if (v3 >= 0)
      v7 = (char *)__p;
    else
      v7 = v4;
    sub_208215780((uint64_t)v5, v7);
    v15 = v6;
    v14 = 0;
    sub_208094B90((uint64_t *)v6, &v14);
    v8 = v14;
    v9 = MEMORY[0x24BEDB7F0];
    v10 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v6 = *MEMORY[0x24BEDB7F0];
    v11 = *(_QWORD *)(v9 + 72);
    *(_QWORD *)&v6[*(_QWORD *)(v10 - 24)] = *(_QWORD *)(v9 + 64);
    *((_QWORD *)v6 + 3) = MEMORY[0x24BEDB848] + 16;
    *((_QWORD *)v6 + 2) = v11;
    if (v6[111] < 0)
      operator delete(*((void **)v6 + 11));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD027B8](v6 + 128);
    operator delete(v6);
    **a2 = v8;
    if (SHIBYTE(v13) < 0)
      operator delete(__p[0]);
  }
  else
  {
    LOWORD(__p[0]) = 0;
    (*(void (**)(_BYTE *, void **))(*(_QWORD *)a1 + 96))(a1, __p);
    **a2 = __p[0];
  }
}

void sub_207EAB90C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17)
{
  sub_2082155DC(&a17);
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_207EAB948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t i;
  _OWORD *v6;
  std::__shared_weak_count *v7;
  char *v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  __int128 v17;

  if (a1 != a2)
  {
    for (i = a1; i != a2; i += 24)
    {
      sub_207CFBA9C(&v15, i + 8);
      sub_207CFBA9C((std::__shared_weak_count_vtbl **)&v17, (uint64_t)&v15);
      v6 = *(_OWORD **)(a3 + 8);
      if ((unint64_t)v6 >= *(_QWORD *)(a3 + 16))
      {
        v8 = sub_207CFEE1C((char **)a3, (uint64_t)&v17);
        v9 = (std::__shared_weak_count *)*((_QWORD *)&v17 + 1);
        *(_QWORD *)(a3 + 8) = v8;
        if (!v9)
          goto LABEL_11;
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(p_shared_owners);
        while (__stlxr(v11 - 1, p_shared_owners));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
          v7 = v16;
          if (v16)
          {
LABEL_12:
            v12 = (unint64_t *)&v7->__shared_owners_;
            do
              v13 = __ldaxr(v12);
            while (__stlxr(v13 - 1, v12));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
              std::__shared_weak_count::__release_weak(v7);
            }
          }
        }
        else
        {
LABEL_11:
          v7 = v16;
          if (v16)
            goto LABEL_12;
        }
      }
      else
      {
        *v6 = v17;
        v17 = 0uLL;
        *(_QWORD *)(a3 + 8) = v6 + 1;
        v7 = v16;
        if (v16)
          goto LABEL_12;
      }
    }
  }
  return a3;
}

void sub_207EABA80(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_207C99D78((uint64_t)va1);
  sub_207CBD7E8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EABA9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_207CBD7E8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EABAB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v3;
  unsigned int v4;
  int v5;
  unsigned int v7;
  unsigned int v8;
  __int128 *v9;
  char v10;
  unsigned int v11;

  v1 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(int **)(a1 + 16);
  v4 = **(_DWORD **)(a1 + 24);
  v5 = *v3;
  if (*v3 == 2)
  {
    if (v4 < 2)
      goto LABEL_9;
    v11 = 2;
    (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)v1 + 104))(v1, &v11);
    if (v11 >= 3)
    {
      v8 = v11;
      v9 = sub_207EABBD4();
      sub_208212838((std::string *)v9, v8, 2u);
    }
    v5 = *v3;
  }
  if (v5 >= 1 && v4 > 1)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 16))(v1);
    sub_207EAA1C0(v1, v2, 2);
    (*(void (**)(uint64_t))(*(_QWORD *)v1 + 24))(v1);
    return;
  }
LABEL_9:
  if (v4 >= 2)
    v7 = 2;
  else
    v7 = v4;
  if (v7 <= 1)
    sub_207EABF84((uint64_t)&v10, v1, v2);
  else
    sub_207EAA1C0(v1, v2, 2);
}

__int128 *sub_207EABBD4()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452CF30);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452CF30))
    return &xmmword_25452CF18;
  v2 = sub_207EABCB0();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_207CA40D8(&xmmword_25452CF18, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_25452CF28 = v2->__r_.__value_.__r.__words[2];
    xmmword_25452CF18 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452CF18, &dword_207C77000);
  __cxa_guard_release(&qword_25452CF30);
  return &xmmword_25452CF18;
}

void sub_207EABC98(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452CF30);
  _Unwind_Resume(a1);
}

std::string *sub_207EABCB0()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452CF50);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452CF50))
    return &stru_25452CF38;
  sub_207EABDA0((uint64_t)__p);
  sub_207D50234((char *)__p, &stru_25452CF38);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25452CF38, &dword_207C77000);
  __cxa_guard_release(&qword_25452CF50);
  return &stru_25452CF38;
}

void sub_207EABD60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25452CF50);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25452CF50);
  _Unwind_Resume(a1);
}

void sub_207EABDA0(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25452CF70);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25452CF70))
  {
    sub_2082159F8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::cfio::DictionaryRefSample<>]", qword_25452CF58);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452CF58, &dword_207C77000);
    __cxa_guard_release(&qword_25452CF70);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25452CF90);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25452CF90))
  {
    v5 = sub_207D49434(qword_25452CF58, "<", 0);
    sub_207D49330(qword_25452CF58, 0, v5, qword_25452CF78);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452CF78, &dword_207C77000);
    __cxa_guard_release(&qword_25452CF90);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_25452CFB0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25452CFB0))
  {
    sub_208215C6C((uint64_t)qword_25452CF78, (uint64_t)&xmmword_25452CF98);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452CF98, &dword_207C77000);
    __cxa_guard_release(&qword_25452CFB0);
  }
  if (byte_25452CFAF < 0)
  {
    sub_207CA40D8((_BYTE *)a1, (void *)xmmword_25452CF98, *((unint64_t *)&xmmword_25452CF98 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_25452CF98;
    *(_QWORD *)(a1 + 16) = unk_25452CFA8;
  }
}

void sub_207EABF3C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452CFB0);
  _Unwind_Resume(a1);
}

void sub_207EABF54(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452CF90);
  _Unwind_Resume(a1);
}

void sub_207EABF6C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452CF70);
  _Unwind_Resume(a1);
}

void sub_207EABF84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;

  *((_QWORD *)&v16 + 1) = 0;
  v17 = 0;
  *(_QWORD *)&v16 = (char *)&v16 + 8;
  sub_207CFFB70(&v16, (std::__shared_weak_count_vtbl **)&v18);
  v15 = v18;
  sub_207CFF9E4((uint64_t)&v16, *((char **)&v16 + 1));
  sub_207EAC10C(a2, (uint64_t)&v15);
  sub_208093A80((std::__shared_weak_count_vtbl **)&v16, (uint64_t)&v15);
  v5 = v16;
  v16 = 0uLL;
  v6 = *(std::__shared_weak_count **)(a3 + 8);
  *(_OWORD *)a3 = v5;
  if (v6)
  {
    p_shared_owners = (unint64_t *)&v6->__shared_owners_;
    do
      v8 = __ldaxr(p_shared_owners);
    while (__stlxr(v8 - 1, p_shared_owners));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
  v9 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (*((_QWORD *)&v16 + 1))
  {
    v10 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v15 + 1);
  if (*((_QWORD *)&v15 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_207EAC0CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207C99D78((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EAC0E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207C99D78((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EAC0F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, char *a12)
{
  sub_207CFF9E4((uint64_t)&a11, a12);
  _Unwind_Resume(a1);
}

void sub_207EAC10C(uint64_t a1, uint64_t a2)
{
  char *v4;
  unint64_t v5;
  unint64_t v6;
  char *v7;
  int64_t v8;
  char *v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  std::__shared_weak_count *v15;
  unint64_t *v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  char *v21;
  char *v22;
  void *v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  void **v27;
  void **v28;
  void *v29;
  __int128 v30;
  void *v31[2];
  void *__p[2];
  __int128 v33;
  unsigned int v34;

  *(_OWORD *)__p = 0u;
  v33 = 0u;
  *(_OWORD *)v31 = 0u;
  sub_207E1F7E0(a1, (char **)v31);
  *(_QWORD *)&v30 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v33 - (unint64_t)__p[1]) >> 3);
  (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)a1 + 120))(a1, &v30);
  v4 = (char *)v33;
  v5 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v33 - (unint64_t)__p[1]) >> 3);
  v6 = v30 - v5;
  if ((unint64_t)v30 > v5)
  {
    sub_207EA1930((char **)&__p[1], v6);
    v7 = (char *)__p[1];
    v8 = v33 - (unint64_t)__p[1];
    if ((void *)v33 == __p[1])
      goto LABEL_18;
    goto LABEL_16;
  }
  if ((unint64_t)v30 >= v5)
  {
    v7 = (char *)__p[1];
    v8 = v33 - (unint64_t)__p[1];
    if ((void *)v33 == __p[1])
      goto LABEL_18;
    goto LABEL_16;
  }
  v9 = (char *)__p[1] + 24 * v30;
  while (v4 != v9)
  {
    v10 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
    if (v10)
    {
      p_shared_owners = (unint64_t *)&v10->__shared_owners_;
      do
        v12 = __ldaxr(p_shared_owners);
      while (__stlxr(v12 - 1, p_shared_owners));
      if (!v12)
      {
        ((void (*)(std::__shared_weak_count *, unint64_t))v10->__on_zero_shared)(v10, v6);
        std::__shared_weak_count::__release_weak(v10);
      }
    }
    v4 -= 24;
  }
  *(_QWORD *)&v33 = v9;
  v7 = (char *)__p[1];
  v8 = v9 - (char *)__p[1];
  if (v9 != __p[1])
  {
LABEL_16:
    v13 = 24 * (v8 / 24);
    do
    {
      v34 = 1;
      (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a1 + 104))(a1, &v34);
      sub_207EAC590(a1, v7, v34);
      v7 += 24;
      v13 -= 24;
    }
    while (v13);
  }
LABEL_18:
  sub_208093578((uint64_t *)v31, (void ***)&v30);
  v14 = v30;
  v30 = 0uLL;
  v15 = *(std::__shared_weak_count **)(a2 + 8);
  *(_OWORD *)a2 = v14;
  if (v15)
  {
    v16 = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(v16);
    while (__stlxr(v17 - 1, v16));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  v18 = (std::__shared_weak_count *)*((_QWORD *)&v30 + 1);
  if (*((_QWORD *)&v30 + 1))
  {
    v19 = (unint64_t *)(*((_QWORD *)&v30 + 1) + 8);
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  v21 = (char *)__p[1];
  if (__p[1])
  {
    v22 = (char *)v33;
    v23 = __p[1];
    if ((void *)v33 != __p[1])
    {
      do
      {
        v24 = (std::__shared_weak_count *)*((_QWORD *)v22 - 1);
        if (v24)
        {
          v25 = (unint64_t *)&v24->__shared_owners_;
          do
            v26 = __ldaxr(v25);
          while (__stlxr(v26 - 1, v25));
          if (!v26)
          {
            ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
            std::__shared_weak_count::__release_weak(v24);
          }
        }
        v22 -= 24;
      }
      while (v22 != v21);
      v23 = __p[1];
    }
    *(_QWORD *)&v33 = v21;
    operator delete(v23);
  }
  v27 = (void **)v31[0];
  if (v31[0])
  {
    v28 = (void **)v31[1];
    v29 = v31[0];
    if (v31[1] != v31[0])
    {
      do
      {
        if (*((char *)v28 - 1) < 0)
          operator delete(*(v28 - 3));
        v28 -= 3;
      }
      while (v28 != v27);
      v29 = v31[0];
    }
    v31[1] = v27;
    operator delete(v29);
  }
}

void sub_207EAC3D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207E9C128((void **)va);
  _Unwind_Resume(a1);
}

void sub_207EAC3E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207E9C128((void **)va);
  _Unwind_Resume(a1);
}

void sub_207EAC3FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207E9C128((void **)va);
  _Unwind_Resume(a1);
}

void sub_207EAC410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207E9C128((void **)va);
  _Unwind_Resume(a1);
}

void sub_207EAC424(uint64_t a1, char **a2)
{
  char *v4;
  unint64_t v5;
  unint64_t v6;
  char *v7;
  char *v8;
  char **v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unsigned int v17;

  v16 = 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 3);
  (*(void (**)(uint64_t, unint64_t *))(*(_QWORD *)a1 + 120))(a1, &v16);
  v4 = a2[1];
  v5 = 0xAAAAAAAAAAAAAAABLL * ((v4 - *a2) >> 3);
  v6 = v16 - v5;
  if (v16 > v5)
  {
    sub_207EA1930(a2, v6);
    v9 = a2;
    v7 = *a2;
    v8 = v9[1];
    v10 = v8 - v7;
    if (v8 == v7)
      return;
    goto LABEL_16;
  }
  if (v16 >= v5)
  {
    v7 = *a2;
    v10 = v4 - v7;
    if (v4 == v7)
      return;
    goto LABEL_16;
  }
  v11 = (uint64_t)&(*a2)[24 * v16];
  while (v4 != (char *)v11)
  {
    v12 = (std::__shared_weak_count *)*((_QWORD *)v4 - 1);
    if (v12)
    {
      p_shared_owners = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldaxr(p_shared_owners);
      while (__stlxr(v14 - 1, p_shared_owners));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *, unint64_t))v12->__on_zero_shared)(v12, v6);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    v4 -= 24;
  }
  a2[1] = (char *)v11;
  v7 = *a2;
  v10 = v11 - (_QWORD)v7;
  if ((char *)v11 != v7)
  {
LABEL_16:
    v15 = 24 * (v10 / 24);
    do
    {
      v17 = 1;
      (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a1 + 104))(a1, &v17);
      sub_207EAC590(a1, v7, v17);
      v7 += 24;
      v15 -= 24;
    }
    while (v15);
  }
}

void sub_207EAC590(uint64_t a1, _WORD *a2)
{
  _DWORD *v4;
  uint64_t v5;
  __int128 v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  unint64_t *v24;
  unint64_t v25;
  __int128 v26;
  std::__shared_weak_count *v27;
  unint64_t *v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  char *v36;
  char *v37;
  void *v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  __int128 v42;
  std::__shared_weak_count *v43;
  unint64_t *v44;
  unint64_t v45;
  std::__shared_weak_count *v46;
  unint64_t *v47;
  unint64_t v48;
  std::__shared_weak_count *v49;
  unint64_t *v50;
  unint64_t v51;
  unint64_t *v52;
  char *v53;
  char *v54;
  void *v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  __int128 v59;
  std::__shared_weak_count *v60;
  unint64_t *p_shared_owners;
  unint64_t v62;
  std::__shared_weak_count *v63;
  unint64_t *v64;
  unint64_t v65;
  std::__shared_weak_count *v66;
  unint64_t *v67;
  unint64_t v68;
  void *v69[2];
  void *v70;
  void *v71[2];
  uint64_t v72;
  __int128 v73;
  void *__p[2];
  void *v75;
  void *v76;
  _DWORD *v77;

  __p[0] = a2;
  sub_207EAB7C4((_BYTE *)a1, (_WORD **)__p);
  switch(*a2)
  {
    case 0:
      LOBYTE(__p[0]) = 7;
      LOBYTE(__p[1]) = 7;
      v4 = operator new(4uLL);
      v75 = v4;
      *v4 = 0;
      v76 = v4 + 1;
      v77 = v4 + 1;
      v5 = *(_QWORD *)a1;
      v69[0] = *(void **)(a1 + 8);
      LODWORD(v71[0]) = 2;
      (*(void (**)(uint64_t, void **))(v5 + 104))(a1, v71);
      if (SLODWORD(v69[0]) < 1)
      {
        if (LODWORD(v71[0]) < 2)
        {
          sub_207E40F94((uint64_t)v71, (_BYTE *)a1, (uint64_t)__p);
        }
        else
        {
          v71[0] = __p;
          sub_207E41430((_BYTE *)a1, (_BYTE **)v71);
          sub_207E41118(LOBYTE(__p[0]), a1, (uint64_t)__p);
        }
      }
      else
      {
        sub_207E40C4C((int *)v69, (_BYTE *)a1, __p, v71[0]);
      }
      sub_207D01DD8((uint64_t)v71, (uint64_t)&__p[1]);
      v73 = *(_OWORD *)v71;
      sub_207EA2588((std::__shared_weak_count_vtbl **)v69, (uint64_t)&v73);
      v59 = *(_OWORD *)v69;
      v69[0] = 0;
      v69[1] = 0;
      v60 = (std::__shared_weak_count *)*((_QWORD *)a2 + 2);
      *(_OWORD *)(a2 + 4) = v59;
      if (v60)
      {
        p_shared_owners = (unint64_t *)&v60->__shared_owners_;
        do
          v62 = __ldaxr(p_shared_owners);
        while (__stlxr(v62 - 1, p_shared_owners));
        if (!v62)
        {
          ((void (*)(std::__shared_weak_count *))v60->__on_zero_shared)(v60);
          std::__shared_weak_count::__release_weak(v60);
        }
      }
      v63 = (std::__shared_weak_count *)v69[1];
      if (v69[1])
      {
        v64 = (unint64_t *)((char *)v69[1] + 8);
        do
          v65 = __ldaxr(v64);
        while (__stlxr(v65 - 1, v64));
        if (!v65)
        {
          ((void (*)(std::__shared_weak_count *))v63->__on_zero_shared)(v63);
          std::__shared_weak_count::__release_weak(v63);
        }
      }
      v66 = (std::__shared_weak_count *)*((_QWORD *)&v73 + 1);
      if (*((_QWORD *)&v73 + 1))
      {
        v67 = (unint64_t *)(*((_QWORD *)&v73 + 1) + 8);
        do
          v68 = __ldaxr(v67);
        while (__stlxr(v68 - 1, v67));
        if (!v68)
        {
          ((void (*)(std::__shared_weak_count *))v66->__on_zero_shared)(v66);
          std::__shared_weak_count::__release_weak(v66);
        }
      }
      if (v75)
      {
        v76 = v75;
        operator delete(v75);
      }
      return;
    case 1:
      __p[0] = 0;
      __p[1] = 0;
      v75 = 0;
      (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 144))(a1, __p);
      sub_207CF8F18((uint64_t)__p, (CFStringRef *)v69);
      sub_207EA26E0((std::__shared_weak_count_vtbl **)v71, (uint64_t)v69);
      v6 = *(_OWORD *)v71;
      v71[0] = 0;
      v71[1] = 0;
      v7 = (std::__shared_weak_count *)*((_QWORD *)a2 + 2);
      *(_OWORD *)(a2 + 4) = v6;
      if (v7)
      {
        v8 = (unint64_t *)&v7->__shared_owners_;
        do
          v9 = __ldaxr(v8);
        while (__stlxr(v9 - 1, v8));
        if (!v9)
        {
          ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
          std::__shared_weak_count::__release_weak(v7);
        }
      }
      v10 = (std::__shared_weak_count *)v71[1];
      if (v71[1])
      {
        v11 = (unint64_t *)((char *)v71[1] + 8);
        do
          v12 = __ldaxr(v11);
        while (__stlxr(v12 - 1, v11));
        if (!v12)
        {
          ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
          std::__shared_weak_count::__release_weak(v10);
        }
      }
      v13 = (std::__shared_weak_count *)v69[1];
      if (v69[1])
      {
        v14 = (unint64_t *)((char *)v69[1] + 8);
        do
          v15 = __ldaxr(v14);
        while (__stlxr(v15 - 1, v14));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      if (SHIBYTE(v75) < 0)
        operator delete(__p[0]);
      return;
    case 2:
      LOBYTE(v69[0]) = 0;
      (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 32))(a1, v69);
      sub_207CF8E38(v69, (std::__shared_weak_count_vtbl **)v71);
      sub_207EA2838((std::__shared_weak_count_vtbl **)__p, (uint64_t)v71);
      v16 = *(_OWORD *)__p;
      __p[0] = 0;
      __p[1] = 0;
      v17 = (std::__shared_weak_count *)*((_QWORD *)a2 + 2);
      *(_OWORD *)(a2 + 4) = v16;
      if (v17)
      {
        v18 = (unint64_t *)&v17->__shared_owners_;
        do
          v19 = __ldaxr(v18);
        while (__stlxr(v19 - 1, v18));
        if (!v19)
        {
          ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
          std::__shared_weak_count::__release_weak(v17);
        }
      }
      v20 = (std::__shared_weak_count *)__p[1];
      if (__p[1])
      {
        v21 = (unint64_t *)((char *)__p[1] + 8);
        do
          v22 = __ldaxr(v21);
        while (__stlxr(v22 - 1, v21));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      v23 = (std::__shared_weak_count *)v71[1];
      if (!v71[1])
        return;
      v24 = (unint64_t *)((char *)v71[1] + 8);
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      break;
    case 3:
      v71[0] = 0;
      v71[1] = 0;
      v72 = 0;
      sub_207EAC424(a1, (char **)v71);
      __p[1] = 0;
      v75 = 0;
      __p[0] = 0;
      sub_207CFED24((uint64_t)__p, 0xAAAAAAAAAAAAAAABLL * (((char *)v71[1] - (char *)v71[0]) >> 3));
      sub_207EACE5C((uint64_t)v71[0], (uint64_t)v71[1], (uint64_t)__p);
      *(_OWORD *)v69 = *(_OWORD *)__p;
      v70 = v75;
      sub_207EA2DA8((uint64_t *)v69, (CFMutableArrayRef *)&v73);
      sub_207EA2990((std::__shared_weak_count_vtbl **)__p, (uint64_t)&v73);
      v26 = *(_OWORD *)__p;
      __p[0] = 0;
      __p[1] = 0;
      v27 = (std::__shared_weak_count *)*((_QWORD *)a2 + 2);
      *(_OWORD *)(a2 + 4) = v26;
      if (v27)
      {
        v28 = (unint64_t *)&v27->__shared_owners_;
        do
          v29 = __ldaxr(v28);
        while (__stlxr(v29 - 1, v28));
        if (!v29)
        {
          ((void (*)(std::__shared_weak_count *))v27->__on_zero_shared)(v27);
          std::__shared_weak_count::__release_weak(v27);
        }
      }
      v30 = (std::__shared_weak_count *)__p[1];
      if (__p[1])
      {
        v31 = (unint64_t *)((char *)__p[1] + 8);
        do
          v32 = __ldaxr(v31);
        while (__stlxr(v32 - 1, v31));
        if (!v32)
        {
          ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
          std::__shared_weak_count::__release_weak(v30);
        }
      }
      v33 = (std::__shared_weak_count *)*((_QWORD *)&v73 + 1);
      if (*((_QWORD *)&v73 + 1))
      {
        v34 = (unint64_t *)(*((_QWORD *)&v73 + 1) + 8);
        do
          v35 = __ldaxr(v34);
        while (__stlxr(v35 - 1, v34));
        if (!v35)
        {
          ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
          std::__shared_weak_count::__release_weak(v33);
        }
      }
      v36 = (char *)v69[0];
      if (v69[0])
      {
        v37 = (char *)v69[1];
        v38 = v69[0];
        if (v69[1] != v69[0])
        {
          do
          {
            v39 = (std::__shared_weak_count *)*((_QWORD *)v37 - 1);
            if (v39)
            {
              v40 = (unint64_t *)&v39->__shared_owners_;
              do
                v41 = __ldaxr(v40);
              while (__stlxr(v41 - 1, v40));
              if (!v41)
              {
                ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
                std::__shared_weak_count::__release_weak(v39);
              }
            }
            v37 -= 16;
          }
          while (v37 != v36);
          v38 = v69[0];
        }
        v69[1] = v36;
        operator delete(v38);
      }
      v53 = (char *)v71[0];
      if (v71[0])
      {
        v54 = (char *)v71[1];
        v55 = v71[0];
        if (v71[1] != v71[0])
        {
          do
          {
            v56 = (std::__shared_weak_count *)*((_QWORD *)v54 - 1);
            if (v56)
            {
              v57 = (unint64_t *)&v56->__shared_owners_;
              do
                v58 = __ldaxr(v57);
              while (__stlxr(v58 - 1, v57));
              if (!v58)
              {
                ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
                std::__shared_weak_count::__release_weak(v56);
              }
            }
            v54 -= 24;
          }
          while (v54 != v53);
          v55 = v71[0];
        }
        v71[1] = v53;
        operator delete(v55);
      }
      return;
    case 4:
      __p[1] = 0;
      v75 = 0;
      __p[0] = &__p[1];
      sub_207CFFB70(__p, (std::__shared_weak_count_vtbl **)v71);
      *(_OWORD *)v69 = *(_OWORD *)v71;
      sub_207CFF9E4((uint64_t)__p, (char *)__p[1]);
      LODWORD(__p[0]) = 1;
      (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 104))(a1, __p);
      sub_207EAC10C(a1, (uint64_t)v69);
      sub_207E01D24((std::__shared_weak_count_vtbl **)v71, (uint64_t)v69);
      sub_207EA2AE8((std::__shared_weak_count_vtbl **)__p, (uint64_t)v71);
      v42 = *(_OWORD *)__p;
      __p[0] = 0;
      __p[1] = 0;
      v43 = (std::__shared_weak_count *)*((_QWORD *)a2 + 2);
      *(_OWORD *)(a2 + 4) = v42;
      if (v43)
      {
        v44 = (unint64_t *)&v43->__shared_owners_;
        do
          v45 = __ldaxr(v44);
        while (__stlxr(v45 - 1, v44));
        if (!v45)
        {
          ((void (*)(std::__shared_weak_count *))v43->__on_zero_shared)(v43);
          std::__shared_weak_count::__release_weak(v43);
        }
      }
      v46 = (std::__shared_weak_count *)__p[1];
      if (__p[1])
      {
        v47 = (unint64_t *)((char *)__p[1] + 8);
        do
          v48 = __ldaxr(v47);
        while (__stlxr(v48 - 1, v47));
        if (!v48)
        {
          ((void (*)(std::__shared_weak_count *))v46->__on_zero_shared)(v46);
          std::__shared_weak_count::__release_weak(v46);
        }
      }
      v49 = (std::__shared_weak_count *)v71[1];
      if (v71[1])
      {
        v50 = (unint64_t *)((char *)v71[1] + 8);
        do
          v51 = __ldaxr(v50);
        while (__stlxr(v51 - 1, v50));
        if (!v51)
        {
          ((void (*)(std::__shared_weak_count *))v49->__on_zero_shared)(v49);
          std::__shared_weak_count::__release_weak(v49);
        }
      }
      v23 = (std::__shared_weak_count *)v69[1];
      if (!v69[1])
        return;
      v52 = (unint64_t *)((char *)v69[1] + 8);
      do
        v25 = __ldaxr(v52);
      while (__stlxr(v25 - 1, v52));
      break;
    default:
      sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Foundation/FoundationIO/include/Kit/FoundationIO/DictionaryRefIO.h", 250, (uint64_t)"", 0, (uint64_t)"invalid value type identifier", 29, (void (*)(void **))sub_208216974);
      abort();
  }
  if (!v25)
  {
    ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
    std::__shared_weak_count::__release_weak(v23);
  }
}

void sub_207EACD24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, void *a19, uint64_t a20,void *__p,uint64_t a22)
{
  sub_207C99D78((uint64_t)&a17);
  if (!__p)
    _Unwind_Resume(a1);
  a22 = (uint64_t)__p;
  operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_207EACE5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t i;
  _OWORD *v6;
  std::__shared_weak_count *v7;
  char *v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count_vtbl *v15;
  std::__shared_weak_count *v16;
  __int128 v17;

  if (a1 != a2)
  {
    for (i = a1; i != a2; i += 24)
    {
      sub_207CFBA9C(&v15, i + 8);
      sub_207CFBA9C((std::__shared_weak_count_vtbl **)&v17, (uint64_t)&v15);
      v6 = *(_OWORD **)(a3 + 8);
      if ((unint64_t)v6 >= *(_QWORD *)(a3 + 16))
      {
        v8 = sub_207CFEE1C((char **)a3, (uint64_t)&v17);
        v9 = (std::__shared_weak_count *)*((_QWORD *)&v17 + 1);
        *(_QWORD *)(a3 + 8) = v8;
        if (!v9)
          goto LABEL_11;
        p_shared_owners = (unint64_t *)&v9->__shared_owners_;
        do
          v11 = __ldaxr(p_shared_owners);
        while (__stlxr(v11 - 1, p_shared_owners));
        if (!v11)
        {
          ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
          std::__shared_weak_count::__release_weak(v9);
          v7 = v16;
          if (v16)
          {
LABEL_12:
            v12 = (unint64_t *)&v7->__shared_owners_;
            do
              v13 = __ldaxr(v12);
            while (__stlxr(v13 - 1, v12));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
              std::__shared_weak_count::__release_weak(v7);
            }
          }
        }
        else
        {
LABEL_11:
          v7 = v16;
          if (v16)
            goto LABEL_12;
        }
      }
      else
      {
        *v6 = v17;
        v17 = 0uLL;
        *(_QWORD *)(a3 + 8) = v6 + 1;
        v7 = v16;
        if (v16)
          goto LABEL_12;
      }
    }
  }
  return a3;
}

void sub_207EACF94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  sub_207C99D78((uint64_t)va1);
  sub_207CBD7E8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EACFB0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_207CBD7E8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EACFC4(_QWORD *a1, uint64_t a2)
{
  std::__shared_weak_count *v4;
  unint64_t *v5;
  unint64_t v6;
  __int128 v7;
  char **v8;
  char *v9[2];
  __int128 v10;

  v9[0] = 0;
  v9[1] = 0;
  v8 = v9;
  sub_207CFFB70(&v8, (std::__shared_weak_count_vtbl **)&v10);
  v7 = v10;
  sub_207CFF9E4((uint64_t)&v8, v9[0]);
  sub_207EAA1C0(a1, (uint64_t)&v7);
  sub_207EA0FC8(a2, (uint64_t)&v7);
  v4 = (std::__shared_weak_count *)*((_QWORD *)&v7 + 1);
  if (*((_QWORD *)&v7 + 1))
  {
    v5 = (unint64_t *)(*((_QWORD *)&v7 + 1) + 8);
    do
      v6 = __ldaxr(v5);
    while (__stlxr(v6 - 1, v5));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
}

void sub_207EAD080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, char *a13)
{
  sub_207CFF9E4((uint64_t)&a12, a13);
  _Unwind_Resume(a1);
}

void sub_207EAD098(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  unint64_t *p_shared_owners;
  unint64_t v12;

  if (a10)
  {
    p_shared_owners = (unint64_t *)&a10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))a10->__on_zero_shared)(a10);
      std::__shared_weak_count::__release_weak(a10);
    }
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_207EAD0DC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _OWORD *v4;
  _OWORD *v5;
  unsigned __int128 *v6;
  unsigned __int128 v7;
  _QWORD *result;

  v4 = operator new(0x100uLL);
  v5 = v4;
  *(_QWORD *)v4 = off_24C078070;
  *(_OWORD *)((char *)v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_OWORD *)((char *)v4 + 24) = *(_OWORD *)(a1 + 24);
  v4[3] = *(_OWORD *)(a1 + 48);
  *((_BYTE *)v4 + 64) = 0;
  *((_BYTE *)v4 + 88) = 0;
  if (*(_BYTE *)(a1 + 88))
  {
    v4[4] = *(_OWORD *)(a1 + 64);
    *((_QWORD *)v4 + 10) = *(_QWORD *)(a1 + 80);
    *(_QWORD *)(a1 + 72) = 0;
    *(_QWORD *)(a1 + 80) = 0;
    *(_QWORD *)(a1 + 64) = 0;
    *((_BYTE *)v4 + 88) = 1;
  }
  *((_BYTE *)v4 + 96) = 0;
  *((_BYTE *)v4 + 120) = 0;
  if (*(_BYTE *)(a1 + 120))
  {
    v4[6] = *(_OWORD *)(a1 + 96);
    *((_QWORD *)v4 + 14) = *(_QWORD *)(a1 + 112);
    *(_QWORD *)(a1 + 104) = 0;
    *(_QWORD *)(a1 + 112) = 0;
    *(_QWORD *)(a1 + 96) = 0;
    *((_BYTE *)v4 + 120) = 1;
  }
  *((_BYTE *)v4 + 160) = 0;
  v4[8] = *(_OWORD *)(a1 + 128);
  *((_QWORD *)v4 + 18) = *(_QWORD *)(a1 + 144);
  *((_BYTE *)v4 + 208) = 0;
  if (*(_BYTE *)(a1 + 208))
  {
    v4[10] = *(_OWORD *)(a1 + 160);
    *((_QWORD *)v4 + 22) = *(_QWORD *)(a1 + 176);
    *(_QWORD *)(a1 + 168) = 0;
    *(_QWORD *)(a1 + 176) = 0;
    *(_QWORD *)(a1 + 160) = 0;
    v6 = (unsigned __int128 *)(a1 + 192);
    do
      v7 = __ldaxp(v6);
    while (__stlxp(v7, v6));
    v4[12] = v7;
    *((_BYTE *)v4 + 208) = 1;
  }
  *((_BYTE *)v4 + 224) = 0;
  *((_BYTE *)v4 + 248) = 0;
  if (*(_BYTE *)(a1 + 248))
  {
    v4[14] = *(_OWORD *)(a1 + 224);
    *((_QWORD *)v4 + 30) = *(_QWORD *)(a1 + 240);
    *(_QWORD *)(a1 + 232) = 0;
    *(_QWORD *)(a1 + 240) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *((_BYTE *)v4 + 248) = 1;
  }
  *(_QWORD *)v4 = off_24C077FF0;
  *a2 = &off_24C078D18;
  a2[1] = v4;
  result = operator new(0x20uLL);
  *result = &off_24C078E28;
  result[1] = 0;
  result[2] = 0;
  result[3] = v5;
  a2[2] = result;
  return result;
}

void sub_207EAD25C(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_207EAD2E8(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_207EAD270(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = off_24C078070;
  sub_207D49CF4((uint64_t)(a1 + 6));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_207EAD2E8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = off_24C078070;
  sub_207D49CF4((uint64_t)(a1 + 6));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(a1);
  }
  else
  {
LABEL_5:
    operator delete(a1);
  }
}

uint64_t sub_207EAD360(uint64_t a1)
{
  return a1 + 48;
}

uint64_t sub_207EAD368(_QWORD *a1, _QWORD *lpsrc)
{
  uint64_t result;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  uint64_t i;
  uint64_t v11;

  result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C078D58, (const struct __class_type_info *)&unk_24C078030, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      v5 = a1[3];
      if (v5 != *(_QWORD *)(result + 24))
        return 0;
      v6 = (unsigned __int8 *)a1[4];
      v7 = *(unsigned __int8 **)(result + 32);
      v8 = &v6[v5];
      v9 = &v7[v5];
      if (v5)
      {
        for (i = v5 - 1; ; --i)
        {
          v11 = i;
          if (*v6 != *v7)
            break;
          ++v6;
          ++v7;
          if (!v11)
          {
            v7 = v9;
            v6 = v8;
            return v6 == v8 && v7 == v9;
          }
        }
        return 0;
      }
      return v6 == v8 && v7 == v9;
    }
  }
  return result;
}

void sub_207EAD430(uint64_t a1)
{
  __int128 *v2;
  void *__p;
  char v4;

  v2 = (__int128 *)sub_207EAE4CC();
  sub_207EAD4E4(a1);
  sub_207D49528(v2, (uint64_t)"{", (uint64_t)&__p, (uint64_t)",", a1 + 48, (uint64_t)"}");
  if (v4 < 0)
    operator delete(__p);
}

void sub_207EAD4C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_207EAD4E4(uint64_t a1)
{
  unsigned __int8 v2;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;

  v2 = atomic_load((unsigned __int8 *)&qword_25452D110);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25452D110))
  {
    v4 = sub_207EAE2D0();
    v5 = *((_QWORD *)v4 + 1);
    if (*((char *)v4 + 23) >= 0)
    {
      v6 = *((unsigned __int8 *)v4 + 23);
    }
    else
    {
      v4 = *(__int128 **)v4;
      v6 = v5;
    }
    sub_207CF75E4((char *)v4, v6, "::", 2, 0, (uint64_t)&v8);
    if (*(char *)(v9 - 1) < 0)
    {
      sub_207CA40D8(&xmmword_25452D0F8, *(void **)(v9 - 24), *(_QWORD *)(v9 - 16));
    }
    else
    {
      v7 = *(_OWORD *)(v9 - 24);
      qword_25452D108 = *(_QWORD *)(v9 - 8);
      xmmword_25452D0F8 = v7;
    }
    sub_207C99DE0(&v8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D0F8, &dword_207C77000);
    __cxa_guard_release(&qword_25452D110);
  }
  return sub_207EAE88C(&xmmword_25452D0F8, (uint64_t)"{", a1 + 8, (uint64_t)"}");
}

void sub_207EAD5F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_207C99DE0(&a9);
  __cxa_guard_abort(&qword_25452D110);
  _Unwind_Resume(a1);
}

void sub_207EAD614(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D110);
  _Unwind_Resume(a1);
}

void sub_207EAD62C(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 9;
}

void sub_207EAD658(uint64_t (***lpsrc)()@<X0>, _QWORD *a2@<X8>)
{
  sub_207F0677C(lpsrc, 9, a2);
}

_QWORD *sub_207EAD690(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = off_24C078070;
  sub_207D49CF4((uint64_t)(a1 + 6));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_207EAD708(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = off_24C078070;
  sub_207D49CF4((uint64_t)(a1 + 6));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(a1);
  }
  else
  {
LABEL_5:
    operator delete(a1);
  }
}

uint64_t sub_207EAD780(uint64_t a1)
{
  __int128 *v2;

  v2 = sub_207EADD6C();
  return sub_207EAD8D4(v2, (uint64_t)"{", a1 + 8, (uint64_t)",", a1 + 48, (uint64_t)"}");
}

uint64_t sub_207EAD7D8(uint64_t a1)
{
  uint64_t result;
  _BYTE v2[24];
  int v3;
  char v4;
  _QWORD v5[2];

  v3 = 0;
  sub_207EADB00((uint64_t)v5, (uint64_t)v2, a1 + 8);
  if (v3 == -1)
    sub_207CA9F48();
  v5[0] = &v4;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24C0765F8[v3])(v5, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24C0765E0[v3])(v5, v2);
  return result;
}

void sub_207EAD870(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;

  if (a13 != -1)
    ((void (*)(uint64_t, char *))off_24C0765E0[a13])(v13 - 17, &a10);
  _Unwind_Resume(exception_object);
}

void sub_207EAD8A8(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t sub_207EAD8D4(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  char v12;
  char v13;
  __int128 __dst;
  uint64_t v15;
  int v16;
  __int128 *p_dst;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 **p_p_dst;

  v16 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_207CA40D8(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v15 = *((_QWORD *)a1 + 2);
  }
  v16 = 1;
  p_dst = &__dst;
  v18 = a2;
  v19 = &__dst;
  v20 = a2;
  v21 = a2;
  sub_207CD45F4((uint64_t *)&v19, (uint64_t)&__dst);
  sub_207EADB00((uint64_t)&v13, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v18 = a4;
  v19 = &__dst;
  v20 = a4;
  v21 = a4;
  if (v16 == -1)
    sub_207CA9F48();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C0766E8[v16])(&p_p_dst, &__dst);
  sub_207D48768((uint64_t)&v12, (uint64_t)&__dst, a5);
  p_dst = &__dst;
  v18 = a6;
  v19 = &__dst;
  v20 = a6;
  v21 = a6;
  if (v16 == -1)
    sub_207CA9F48();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C0766E8[v16])(&p_p_dst, &__dst);
  if (v16 == -1)
    sub_207CA9F48();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C0765F8[v16])(&p_dst, &__dst);
  if (v16 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C0765E0[v16])(&p_dst, &__dst);
  return result;
}

void sub_207EADA70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EADA88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EADA9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EADAB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EADAC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EADAD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EADAEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EADB00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new(0x118uLL);
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  v5[4] = 0u;
  v5[5] = 0u;
  v5[6] = 0u;
  v5[7] = 0u;
  v5[8] = 0u;
  v5[9] = 0u;
  v5[10] = 0u;
  v5[11] = 0u;
  v5[12] = 0u;
  v5[13] = 0u;
  v5[14] = 0u;
  v5[15] = 0u;
  v5[16] = 0u;
  *((_QWORD *)v5 + 34) = 0;
  sub_207CA2878((uint64_t)v5);
  v21[0] = v5;
  sub_208076090((_QWORD *)v5 + 2, a3);
  v6 = *((_DWORD *)v5 + 30);
  if ((v6 & 0x10) != 0)
  {
    v9 = *((_QWORD *)v5 + 14);
    v10 = *((_QWORD *)v5 + 9);
    if (v9 < v10)
    {
      *((_QWORD *)v5 + 14) = v10;
      v9 = v10;
    }
    v11 = (const void *)*((_QWORD *)v5 + 8);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = (const void *)*((_QWORD *)v5 + 5);
    v7 = *((_QWORD *)v5 + 7) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_207C95C50();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD027B8](v14 + 128);
    operator delete((void *)v14);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_207CA9F48();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24C0765C8[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_207EADD30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;

  operator delete(v15);
  _Unwind_Resume(a1);
}

void sub_207EADD58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2082155DC((void **)va);
  _Unwind_Resume(a1);
}

__int128 *sub_207EADD6C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452CFD0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452CFD0))
    return &xmmword_25452CFB8;
  v2 = sub_207EADE48();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_207CA40D8(&xmmword_25452CFB8, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_25452CFC8 = v2->__r_.__value_.__r.__words[2];
    xmmword_25452CFB8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452CFB8, &dword_207C77000);
  __cxa_guard_release(&qword_25452CFD0);
  return &xmmword_25452CFB8;
}

void sub_207EADE30(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452CFD0);
  _Unwind_Resume(a1);
}

std::string *sub_207EADE48()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452CFF0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452CFF0))
    return &stru_25452CFD8;
  sub_207EAE0EC((uint64_t)__p);
  sub_207EADF38((char *)__p, &stru_25452CFD8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25452CFD8, &dword_207C77000);
  __cxa_guard_release(&qword_25452CFF0);
  return &stru_25452CFD8;
}

void sub_207EADEF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25452CFF0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25452CFF0);
  _Unwind_Resume(a1);
}

void sub_207EADF38(char *a1@<X0>, std::string *a2@<X8>)
{
  __int128 *v4;
  __int128 v5;
  __int128 *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void **v10;
  void **v11;
  void *v12;
  void *__p;
  void **v14;
  void *__dst[2];
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = sub_207EAE2D0();
  if (*((char *)v4 + 23) < 0)
  {
    sub_207CA40D8(__dst, *(void **)v4, *((_QWORD *)v4 + 1));
  }
  else
  {
    v5 = *v4;
    v16 = *((_QWORD *)v4 + 2);
    *(_OWORD *)__dst = v5;
  }
  v6 = sub_207D49134();
  if (*((char *)v6 + 23) < 0)
  {
    sub_207CA40D8(&v17, *(void **)v6, *((_QWORD *)v6 + 1));
  }
  else
  {
    v7 = *v6;
    v18 = *((_QWORD *)v6 + 2);
    v17 = v7;
  }
  sub_207CAA110(&__p, (uint64_t)__dst, 2uLL);
  sub_208215D20(a1, (uint64_t *)&__p, a2, v8, v9);
  v10 = (void **)__p;
  if (__p)
  {
    v11 = v14;
    v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = __p;
    }
    v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0)
    goto LABEL_19;
}

void sub_207EAE09C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_207C99DE0((void **)&a9);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_207EAE0EC(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25452D070);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25452D070))
  {
    sub_2082159F8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::con::Blob>]", qword_25452D058);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452D058, &dword_207C77000);
    __cxa_guard_release(&qword_25452D070);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25452D090);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25452D090))
  {
    v5 = sub_207D49434(qword_25452D058, "<", 0);
    sub_207D49330(qword_25452D058, 0, v5, qword_25452D078);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452D078, &dword_207C77000);
    __cxa_guard_release(&qword_25452D090);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_25452D0B0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25452D0B0))
  {
    sub_208215C6C((uint64_t)qword_25452D078, (uint64_t)&xmmword_25452D098);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D098, &dword_207C77000);
    __cxa_guard_release(&qword_25452D0B0);
  }
  if (byte_25452D0AF < 0)
  {
    sub_207CA40D8((_BYTE *)a1, (void *)xmmword_25452D098, *((unint64_t *)&xmmword_25452D098 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_25452D098;
    *(_QWORD *)(a1 + 16) = unk_25452D0A8;
  }
}

void sub_207EAE288(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D0B0);
  _Unwind_Resume(a1);
}

void sub_207EAE2A0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D090);
  _Unwind_Resume(a1);
}

void sub_207EAE2B8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D070);
  _Unwind_Resume(a1);
}

__int128 *sub_207EAE2D0()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D010);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D010))
    return &xmmword_25452CFF8;
  v2 = (char *)sub_207EAE3AC();
  if (v2[23] < 0)
  {
    sub_207CA40D8(&xmmword_25452CFF8, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_25452D008 = *((_QWORD *)v2 + 2);
    xmmword_25452CFF8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452CFF8, &dword_207C77000);
  __cxa_guard_release(&qword_25452D010);
  return &xmmword_25452CFF8;
}

void sub_207EAE394(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D010);
  _Unwind_Resume(a1);
}

void *sub_207EAE3AC()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D030);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25452D030))
  {
    sub_2082159F8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::con::Blob]", qword_25452D018);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452D018, &dword_207C77000);
    __cxa_guard_release(&qword_25452D030);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_25452D050);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D050))
    return &unk_25452D038;
  sub_208215C6C((uint64_t)qword_25452D018, (uint64_t)&unk_25452D038);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_25452D038, &dword_207C77000);
  __cxa_guard_release(&qword_25452D050);
  return &unk_25452D038;
}

void sub_207EAE49C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D050);
  _Unwind_Resume(a1);
}

void sub_207EAE4B4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D030);
  _Unwind_Resume(a1);
}

std::string *sub_207EAE4CC()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void *v8[3];
  void *v9[2];
  char v10;
  void *__dst[2];
  uint64_t v12;
  void *v13[2];
  uint64_t v14;
  __int128 v15;
  std::string::size_type v16;
  void *__p[2];
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25452D0D0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25452D0D0))
  {
    sub_207C96EE8(v9, "viz::PackageData");
    v2 = sub_207EAE2D0();
    if (*((char *)v2 + 23) < 0)
    {
      sub_207CA40D8(__dst, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      v12 = *((_QWORD *)v2 + 2);
      *(_OWORD *)__dst = v3;
    }
    *(_OWORD *)v13 = *(_OWORD *)"viz::Package";
    v14 = 0xC00000000000000;
    v4 = sub_207EAE794();
    if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_207CA40D8(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
    }
    else
    {
      v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
      v16 = v4->__r_.__value_.__r.__words[2];
      v15 = v5;
    }
    *(_OWORD *)__p = *(_OWORD *)"void";
    v18 = 0x400000000000000;
    sub_207CAA110(v8, (uint64_t)__dst, 4uLL);
    sub_208215D20((char *)v9, (uint64_t *)v8, &stru_25452D0B8, v6, v7);
    sub_207C99DE0(v8);
    if (SHIBYTE(v18) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v16) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v14) & 0x80000000) == 0)
          goto LABEL_13;
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v16) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v15);
    if ((SHIBYTE(v14) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v12) & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v13[0]);
    if ((SHIBYTE(v12) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v10 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25452D0B8, &dword_207C77000);
        __cxa_guard_release(&qword_25452D0D0);
        return &stru_25452D0B8;
      }
LABEL_20:
      operator delete(v9[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_20;
  }
  return &stru_25452D0B8;
}

void sub_207EAE6B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  sub_207C99DE0(&a10);
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_25452D0D0);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_25452D0D0);
  _Unwind_Resume(a1);
}

std::string *sub_207EAE794()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D0F0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D0F0))
    return &stru_25452D0D8;
  sub_2082159F8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 9U]", __p);
  sub_208215E98((uint64_t)__p, &stru_25452D0D8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25452D0D8, &dword_207C77000);
  __cxa_guard_release(&qword_25452D0F0);
  return &stru_25452D0D8;
}

void sub_207EAE84C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25452D0F0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25452D0F0);
  _Unwind_Resume(a1);
}

uint64_t sub_207EAE88C(__int128 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  char v8;
  __int128 __dst;
  uint64_t v10;
  int v11;
  __int128 *p_dst;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 **p_p_dst;

  v11 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_207CA40D8(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v10 = *((_QWORD *)a1 + 2);
  }
  v11 = 1;
  p_dst = &__dst;
  v13 = a2;
  v14 = &__dst;
  v15 = a2;
  v16 = a2;
  sub_207CD45F4((uint64_t *)&v14, (uint64_t)&__dst);
  sub_207EADB00((uint64_t)&v8, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v13 = a4;
  v14 = &__dst;
  v15 = a4;
  v16 = a4;
  if (v11 == -1)
    sub_207CA9F48();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C0766E8[v11])(&p_p_dst, &__dst);
  if (v11 == -1)
    sub_207CA9F48();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C0765F8[v11])(&p_dst, &__dst);
  if (v11 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C0765E0[v11])(&p_dst, &__dst);
  return result;
}

void sub_207EAE9CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EAE9E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EAE9F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EAEA0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EAEA20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EAEA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  __int128 v17;

  sub_2081F1E44(a2);
  v14 = "version";
  v15 = 7;
  LODWORD(v16) = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v5)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F3DDC(a2, &v16);
  v6 = *(_QWORD *)(a3 + 8);
  v14 = *(const char **)a3;
  v15 = v6;
  v7 = *(std::__shared_weak_count **)(a3 + 16);
  v16 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  v17 = *(_OWORD *)(a3 + 24);
  sub_207EAEB8C(a2, (uint64_t)&v14);
  v10 = v16;
  if (v16)
  {
    v11 = (unint64_t *)&v16->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(a2 + 56) = v13 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_207EAEB48(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (a12)
  {
    p_shared_owners = (unint64_t *)&a12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_207EAEB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  _BYTE *v6;
  _QWORD *v7;
  BOOL v8;
  BOOL v9;
  void **v10;
  unsigned __int8 *v11;
  int v12;
  void **v13;
  void **v14;
  size_t v15;
  int v16;
  size_t v17;
  void **v18;

  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "byte_size";
    v4 = a1 + 72;
    v6 = (_BYTE *)(a1 + 88);
    v5 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 9;
    v7 = (_QWORD *)(a1 + 80);
    if (!v5)
      *v6 = 1;
    goto LABEL_13;
  }
  v7 = (_QWORD *)(a1 + 80);
  v4 = a1 + 72;
  v6 = (_BYTE *)(a1 + 88);
  if (*(_BYTE *)(a1 + 88))
    v8 = *(_QWORD *)(a1 + 80) == 7;
  else
    v8 = 0;
  if (!v8
    || (**(_DWORD **)v4 == *(_DWORD *)"version"
      ? (v9 = *(_DWORD *)(*(_QWORD *)v4 + 3) == *(_DWORD *)"sion")
      : (v9 = 0),
        !v9))
  {
LABEL_13:
    v10 = *(void ***)a2;
    LOBYTE(v17) = 6;
    v18 = v10;
    v11 = (unsigned __int8 *)sub_2081F1A98(a1);
    v12 = *v11;
    *v11 = 6;
    LOBYTE(v17) = v12;
    v13 = (void **)*((_QWORD *)v11 + 1);
    *((_QWORD *)v11 + 1) = v18;
    v18 = v13;
    sub_20806DC2C(&v18, v12);
  }
  v15 = *(_QWORD *)(a2 + 24);
  v14 = *(void ***)(a2 + 32);
  if (v15
    && !v14
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v17 = v15;
  v18 = v14;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v16 = *v6;
    *(_QWORD *)v4 = "bytes";
    *v7 = 5;
    if (!v16)
      *v6 = 1;
  }
  sub_2081F1FC0(a1, &v17);
}

void sub_207EAED20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  void ***v9;

  sub_20806DC2C(v9, a9);
  _Unwind_Resume(a1);
}

void sub_207EAED38(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  __int128 v12;
  uint64_t *v13;
  uint64_t *v14[2];
  char v15;

  v4 = *(_QWORD *)a2;
  v5 = *(std::__shared_weak_count **)(a2 + 16);
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  v12 = *(_OWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v8 + 40))
  {
    v14[0] = (uint64_t *)(v8 + 16);
    sub_20821166C(v14, v4);
  }
  else
  {
    sub_208211974();
  }
  if ((_QWORD)v12
    && !*((_QWORD *)&v12 + 1)
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v9 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v9 + 40))
  {
    v13 = (uint64_t *)(v9 + 16);
    LODWORD(v14[0]) = v12;
    v14[1] = *((uint64_t **)&v12 + 1);
    sub_20820FC60((uint64_t)&v15, &v13, (unsigned int *)v14);
  }
  else
  {
    if (v12 > 0xFF)
    {
      if (WORD1(v12))
      {
        LOBYTE(v14[0]) = -58;
        *(_DWORD *)((char *)v14 + 1) = bswap32(v12);
      }
      else
      {
        LOBYTE(v14[0]) = -59;
        *(_WORD *)((char *)v14 + 1) = bswap32(v12) >> 16;
      }
      std::ostream::write();
    }
    else
    {
      LOBYTE(v14[0]) = -60;
      BYTE1(v14[0]) = v12;
      std::ostream::write();
    }
    std::ostream::write();
  }
  if (v5)
  {
    v10 = (unint64_t *)&v5->__shared_owners_;
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
}

void sub_207EAEF08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_207CBD7E8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EAEF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  __int128 v17;

  sub_2081F17E4(a2);
  v14 = "version";
  v15 = 7;
  LODWORD(v16) = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v5)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F20F8(a2, &v16);
  v6 = *(_QWORD *)(a3 + 8);
  v14 = *(const char **)a3;
  v15 = v6;
  v7 = *(std::__shared_weak_count **)(a3 + 16);
  v16 = v7;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
  }
  v17 = *(_OWORD *)(a3 + 24);
  sub_207EAF074(a2, (uint64_t *)&v14);
  v10 = v16;
  if (v16)
  {
    v11 = (unint64_t *)&v16->__shared_owners_;
    do
      v12 = __ldaxr(v11);
    while (__stlxr(v12 - 1, v11));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  v13 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(a2 + 56) = v13 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_207EAF030(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  unint64_t *p_shared_owners;
  unint64_t v14;

  if (a12)
  {
    p_shared_owners = (unint64_t *)&a12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))a12->__on_zero_shared)(a12);
      std::__shared_weak_count::__release_weak(a12);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_207EAF074(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  _BYTE *v6;
  _QWORD *v7;
  BOOL v8;
  BOOL v9;
  uint64_t v10;
  unsigned __int8 *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  int v16;
  size_t v17;
  uint64_t v18;

  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "byte_size";
    v4 = a1 + 72;
    v6 = (_BYTE *)(a1 + 88);
    v5 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 9;
    v7 = (_QWORD *)(a1 + 80);
    if (!v5)
      *v6 = 1;
    goto LABEL_13;
  }
  v7 = (_QWORD *)(a1 + 80);
  v4 = a1 + 72;
  v6 = (_BYTE *)(a1 + 88);
  if (*(_BYTE *)(a1 + 88))
    v8 = *(_QWORD *)(a1 + 80) == 7;
  else
    v8 = 0;
  if (!v8
    || (**(_DWORD **)v4 == *(_DWORD *)"version"
      ? (v9 = *(_DWORD *)(*(_QWORD *)v4 + 3) == *(_DWORD *)"sion")
      : (v9 = 0),
        !v9))
  {
LABEL_13:
    v10 = *a2;
    LOBYTE(v17) = 6;
    v18 = v10;
    v11 = (unsigned __int8 *)sub_2081F133C(a1);
    v12 = *v11;
    *v11 = 6;
    LOBYTE(v17) = v12;
    v13 = *((_QWORD *)v11 + 1);
    *((_QWORD *)v11 + 1) = v18;
    v18 = v13;
    sub_207D20660(&v18, v12);
  }
  v15 = a2[3];
  v14 = a2[4];
  if (v15
    && !v14
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v17 = v15;
  v18 = v14;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v16 = *v6;
    *(_QWORD *)v4 = "bytes";
    *v7 = 5;
    if (!v16)
      *v6 = 1;
  }
  sub_2081F1960(a1, &v17);
}

void sub_207EAF208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t *v9;

  sub_207D20660(v9, a9);
  _Unwind_Resume(a1);
}

void sub_207EAF220(uint64_t a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;

  v3 = *(std::__shared_weak_count **)(a2 + 16);
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v9 = *(_OWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 40))
  {
    v6 = *(_QWORD **)(a1 + 24);
    LOBYTE(v10) = *(_BYTE *)(a1 + 32);
    sub_207CBAB98(v6, (uint64_t)&v10, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
  if ((_QWORD)v9
    && !*((_QWORD *)&v9 + 1)
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v10 = v9;
  sub_208209034(a1, (std::string::size_type *)&v10);
  if (v3)
  {
    v7 = (unint64_t *)&v3->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
}

void sub_207EAF354(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_207CBD7E8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EAF368(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  __int128 v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t __src;
  uint64_t v12;
  std::__shared_weak_count *v13;
  __int128 v14;

  v3 = a2[1];
  __src = *a2;
  v12 = v3;
  v4 = (std::__shared_weak_count *)a2[2];
  v13 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  v14 = *(_OWORD *)(a2 + 3);
  sub_207D0B114(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&v12, 8);
  v7 = v14;
  if ((_QWORD)v14
    && !*((_QWORD *)&v14 + 1)
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  sub_207D0B114(a1 + 24, *(char **)(a1 + 32), *((char **)&v7 + 1), (char *)(*((_QWORD *)&v7 + 1) + v7), v7);
  v8 = v13;
  if (v13)
  {
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_207EAF490(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_207CBD7E8((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EAF4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  __int128 v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  _QWORD v11[2];
  std::__shared_weak_count *v12;
  __int128 v13;
  __int128 v14;

  v3 = *(_QWORD *)(a2 + 8);
  v11[0] = *(_QWORD *)a2;
  v11[1] = v3;
  v4 = *(std::__shared_weak_count **)(a2 + 16);
  v12 = v4;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  v13 = *(_OWORD *)(a2 + 24);
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a1 + 120))(a1, v11);
  v7 = v13;
  if ((_QWORD)v13
    && !*((_QWORD *)&v13 + 1)
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v14 = v7;
  (*(void (**)(uint64_t, __int128 *))(*(_QWORD *)a1 + 272))(a1, &v14);
  v8 = v12;
  if (v12)
  {
    v9 = (unint64_t *)&v12->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_207EAF5C0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_207CBD7E8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_207EAF5D4(uint64_t a1, uint64_t a2)
{
  int v4;
  char *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *exception;
  char v11;
  unint64_t v12;

  sub_2081F5F4C(a1);
  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "version";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v5 = (char *)sub_2081F6204((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v12 = 0;
  sub_20809778C(v5, &v12);
  if (HIDWORD(v12))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24C08F078;
    __cxa_throw(exception, (struct type_info *)&unk_24C08F090, (void (*)(void *))std::exception::~exception);
  }
  if (v12 >= 2)
    v6 = 2;
  else
    v6 = v12;
  if (v6 < 2)
    sub_207EAF6D0((uint64_t)&v11, a1, a2);
  else
    sub_207EAF83C(a1, a2);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(a1 + 48) = v7 - 8;
  *(_QWORD *)(a1 + 72) = v8 - 8;
  return a1;
}

void sub_207EAF6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  void *__p;
  void *v19;
  uint64_t v20;
  _OWORD v21[2];

  v15 = 0;
  __p = 0;
  v19 = 0;
  v20 = 0;
  sub_2080752AC((uint64_t)v21, (uint64_t)&__p);
  v16 = v21[0];
  v17 = v21[1];
  if (__p)
  {
    v19 = __p;
    operator delete(__p);
  }
  sub_207EAF9D8(a2, (uint64_t)&v15);
  v5 = v15;
  v6 = v16;
  if (*((_QWORD *)&v16 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v21[0] = v17;
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  v9 = *(std::__shared_weak_count **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = *((_QWORD *)&v6 + 1);
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  *(_OWORD *)(a3 + 24) = v21[0];
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (*((_QWORD *)&v16 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_207EAF80C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207CBD7E8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EAF820(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EAF83C(uint64_t a1, uint64_t a2)
{
  int v4;
  char *v5;
  size_t v6;
  char *v7;
  char *v8;
  int v9;
  char *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  _QWORD v15[2];
  void *__p;
  char *v17;
  char *v18;
  size_t __sz[2];
  __int128 v20;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "byte_size";
  *(_QWORD *)(a1 + 96) = 9;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v5 = (char *)sub_2081F6204((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  __sz[0] = 0;
  sub_20809778C(v5, __sz);
  v6 = __sz[0];
  *(_QWORD *)a2 = __sz[0];
  __p = 0;
  v17 = 0;
  v18 = 0;
  if (v6)
  {
    if ((v6 & 0x8000000000000000) != 0)
      sub_207CF94B8();
    v7 = (char *)operator new(v6);
    v8 = &v7[v6];
    __p = v7;
    v18 = &v7[v6];
    bzero(v7, v6);
    v17 = &v7[v6];
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  v15[0] = v8 - v7;
  v15[1] = v7;
  v9 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "bytes";
  *(_QWORD *)(a1 + 96) = 5;
  if (!v9)
    *(_BYTE *)(a1 + 104) = 1;
  v10 = (char *)sub_2081F6204((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  sub_2081F631C(v10, (uint64_t)v15);
  sub_2080752AC((uint64_t)__sz, (uint64_t)&__p);
  v14 = v20;
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)__sz;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  *(_OWORD *)(a2 + 24) = v14;
  if (__p)
  {
    v17 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EAF9B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EAF9D8(uint64_t a1, uint64_t a2)
{
  int v4;
  char *v5;
  size_t v6;
  char *v7;
  char *v8;
  int v9;
  char *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  _QWORD v15[2];
  void *__p;
  char *v17;
  char *v18;
  size_t __sz[2];
  __int128 v20;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "byte_size";
  *(_QWORD *)(a1 + 96) = 9;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v5 = (char *)sub_2081F6204((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  __sz[0] = 0;
  sub_20809778C(v5, __sz);
  v6 = __sz[0];
  *(_QWORD *)a2 = __sz[0];
  __p = 0;
  v17 = 0;
  v18 = 0;
  if (v6)
  {
    if ((v6 & 0x8000000000000000) != 0)
      sub_207CF94B8();
    v7 = (char *)operator new(v6);
    v8 = &v7[v6];
    __p = v7;
    v18 = &v7[v6];
    bzero(v7, v6);
    v17 = &v7[v6];
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  v15[0] = v8 - v7;
  v15[1] = v7;
  v9 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "bytes";
  *(_QWORD *)(a1 + 96) = 5;
  if (!v9)
    *(_BYTE *)(a1 + 104) = 1;
  v10 = (char *)sub_2081F6204((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  sub_2081F631C(v10, (uint64_t)v15);
  sub_2080752AC((uint64_t)__sz, (uint64_t)&__p);
  v14 = v20;
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)__sz;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  *(_OWORD *)(a2 + 24) = v14;
  if (__p)
  {
    v17 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EAFB50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_207EAFB74(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v7;
  char v8;

  v7 = 2;
  sub_20820BA20(a1[6], &v7);
  if (v7 <= 1)
  {
    sub_207EAFC4C((uint64_t)&v8, (uint64_t)a1, a2);
    return a1;
  }
  else
  {
    sub_207E17CA8(a1 + 2);
    sub_207EAFDB8((uint64_t)a1, a2);
    v4 = a1[4];
    v5 = *(_QWORD *)(v4 - 16) - (*(uint64_t (**)(_QWORD *))(a1[2] + 32))(a1 + 2) + *(_QWORD *)(v4 - 8);
    if (v5)
      (*(void (**)(_QWORD *, uint64_t))(a1[2] + 40))(a1 + 2, v5);
    a1[4] -= 16;
    return a1;
  }
}

void sub_207EAFC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  void *__p;
  void *v19;
  uint64_t v20;
  _OWORD v21[2];

  v15 = 0;
  __p = 0;
  v19 = 0;
  v20 = 0;
  sub_2080752AC((uint64_t)v21, (uint64_t)&__p);
  v16 = v21[0];
  v17 = v21[1];
  if (__p)
  {
    v19 = __p;
    operator delete(__p);
  }
  sub_207EAFF38(a2, (uint64_t)&v15);
  v5 = v15;
  v6 = v16;
  if (*((_QWORD *)&v16 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v21[0] = v17;
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  v9 = *(std::__shared_weak_count **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = *((_QWORD *)&v6 + 1);
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  *(_OWORD *)(a3 + 24) = v21[0];
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (*((_QWORD *)&v16 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_207EAFD88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207CBD7E8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EAFD9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EAFDB8(uint64_t a1, uint64_t a2)
{
  size_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::bad_cast *exception;
  std::bad_cast *v12;
  __int128 v13;
  void *__p;
  char *v15;
  char *v16;
  void *__src[2];
  __int128 v18;

  sub_20820BBEC(*(_QWORD *)(a1 + 48), (_QWORD *)a2);
  v4 = *(_QWORD *)a2;
  v15 = 0;
  v16 = 0;
  __p = 0;
  if (v4)
  {
    if ((v4 & 0x8000000000000000) != 0)
      sub_207CF94B8();
    v5 = (char *)operator new(v4);
    v6 = &v5[v4];
    __p = v5;
    v16 = &v5[v4];
    bzero(v5, v4);
    v15 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a1 + 48);
  LODWORD(__src[0]) = 0;
  __src[1] = 0;
  sub_20820C1BC(v7, (uint64_t)__src);
  if (v6 - v5 != LODWORD(__src[0]))
  {
    exception = (std::bad_cast *)__cxa_allocate_exception(8uLL);
    exception->__vftable = 0;
    v12 = std::bad_cast::bad_cast(exception);
    v12->__vftable = (std::bad_cast_vtbl *)&off_24C08EC20;
    __cxa_throw(v12, (struct type_info *)&unk_24C08EB40, (void (*)(void *))std::exception::~exception);
  }
  memcpy(v5, __src[1], v6 - v5);
  sub_2080752AC((uint64_t)__src, (uint64_t)&__p);
  v13 = v18;
  v8 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)__src;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  *(_OWORD *)(a2 + 24) = v13;
  if (__p)
  {
    v15 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EAFF14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EAFF38(uint64_t a1, uint64_t a2)
{
  size_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::bad_cast *exception;
  std::bad_cast *v12;
  __int128 v13;
  void *__p;
  char *v15;
  char *v16;
  void *__src[2];
  __int128 v18;

  sub_20820BBEC(*(_QWORD *)(a1 + 48), (_QWORD *)a2);
  v4 = *(_QWORD *)a2;
  v15 = 0;
  v16 = 0;
  __p = 0;
  if (v4)
  {
    if ((v4 & 0x8000000000000000) != 0)
      sub_207CF94B8();
    v5 = (char *)operator new(v4);
    v6 = &v5[v4];
    __p = v5;
    v16 = &v5[v4];
    bzero(v5, v4);
    v15 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = *(_QWORD *)(a1 + 48);
  LODWORD(__src[0]) = 0;
  __src[1] = 0;
  sub_20820C1BC(v7, (uint64_t)__src);
  if (v6 - v5 != LODWORD(__src[0]))
  {
    exception = (std::bad_cast *)__cxa_allocate_exception(8uLL);
    exception->__vftable = 0;
    v12 = std::bad_cast::bad_cast(exception);
    v12->__vftable = (std::bad_cast_vtbl *)&off_24C08EC20;
    __cxa_throw(v12, (struct type_info *)&unk_24C08EB40, (void (*)(void *))std::exception::~exception);
  }
  memcpy(v5, __src[1], v6 - v5);
  sub_2080752AC((uint64_t)__src, (uint64_t)&__p);
  v13 = v18;
  v8 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)__src;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  *(_OWORD *)(a2 + 24) = v13;
  if (__p)
  {
    v15 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EB0094(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_207EB00B8(uint64_t a1, uint64_t a2)
{
  int v4;
  char *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *exception;
  char v11;
  unint64_t v12;

  sub_2081F5AC0(a1);
  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "version";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v5 = (char *)sub_2081F5D78((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v12 = 0;
  sub_208097288(v5, &v12);
  if (HIDWORD(v12))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24C08F078;
    __cxa_throw(exception, (struct type_info *)&unk_24C08F090, (void (*)(void *))std::exception::~exception);
  }
  if (v12 >= 2)
    v6 = 2;
  else
    v6 = v12;
  if (v6 < 2)
    sub_207EB01B4((uint64_t)&v11, a1, a2);
  else
    sub_207EB0320(a1, a2);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(a1 + 48) = v7 - 8;
  *(_QWORD *)(a1 + 72) = v8 - 8;
  return a1;
}

void sub_207EB01B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  void *__p;
  void *v19;
  uint64_t v20;
  _OWORD v21[2];

  v15 = 0;
  __p = 0;
  v19 = 0;
  v20 = 0;
  sub_2080752AC((uint64_t)v21, (uint64_t)&__p);
  v16 = v21[0];
  v17 = v21[1];
  if (__p)
  {
    v19 = __p;
    operator delete(__p);
  }
  sub_207EB04BC(a2, (uint64_t)&v15);
  v5 = v15;
  v6 = v16;
  if (*((_QWORD *)&v16 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v21[0] = v17;
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  v9 = *(std::__shared_weak_count **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = *((_QWORD *)&v6 + 1);
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  *(_OWORD *)(a3 + 24) = v21[0];
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (*((_QWORD *)&v16 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_207EB02F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207CBD7E8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EB0304(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EB0320(uint64_t a1, uint64_t a2)
{
  int v4;
  char *v5;
  size_t v6;
  char *v7;
  char *v8;
  int v9;
  char *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  _QWORD v15[2];
  void *__p;
  char *v17;
  char *v18;
  size_t __sz[2];
  __int128 v20;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "byte_size";
  *(_QWORD *)(a1 + 96) = 9;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v5 = (char *)sub_2081F5D78((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  __sz[0] = 0;
  sub_208097288(v5, __sz);
  v6 = __sz[0];
  *(_QWORD *)a2 = __sz[0];
  __p = 0;
  v17 = 0;
  v18 = 0;
  if (v6)
  {
    if ((v6 & 0x8000000000000000) != 0)
      sub_207CF94B8();
    v7 = (char *)operator new(v6);
    v8 = &v7[v6];
    __p = v7;
    v18 = &v7[v6];
    bzero(v7, v6);
    v17 = &v7[v6];
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  v15[0] = v8 - v7;
  v15[1] = v7;
  v9 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "bytes";
  *(_QWORD *)(a1 + 96) = 5;
  if (!v9)
    *(_BYTE *)(a1 + 104) = 1;
  v10 = (char *)sub_2081F5D78((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  sub_2081F5E90(v10, (uint64_t)v15);
  sub_2080752AC((uint64_t)__sz, (uint64_t)&__p);
  v14 = v20;
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)__sz;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  *(_OWORD *)(a2 + 24) = v14;
  if (__p)
  {
    v17 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EB0498(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EB04BC(uint64_t a1, uint64_t a2)
{
  int v4;
  char *v5;
  size_t v6;
  char *v7;
  char *v8;
  int v9;
  char *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  __int128 v14;
  _QWORD v15[2];
  void *__p;
  char *v17;
  char *v18;
  size_t __sz[2];
  __int128 v20;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "byte_size";
  *(_QWORD *)(a1 + 96) = 9;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v5 = (char *)sub_2081F5D78((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  __sz[0] = 0;
  sub_208097288(v5, __sz);
  v6 = __sz[0];
  *(_QWORD *)a2 = __sz[0];
  __p = 0;
  v17 = 0;
  v18 = 0;
  if (v6)
  {
    if ((v6 & 0x8000000000000000) != 0)
      sub_207CF94B8();
    v7 = (char *)operator new(v6);
    v8 = &v7[v6];
    __p = v7;
    v18 = &v7[v6];
    bzero(v7, v6);
    v17 = &v7[v6];
  }
  else
  {
    v8 = 0;
    v7 = 0;
  }
  v15[0] = v8 - v7;
  v15[1] = v7;
  v9 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "bytes";
  *(_QWORD *)(a1 + 96) = 5;
  if (!v9)
    *(_BYTE *)(a1 + 104) = 1;
  v10 = (char *)sub_2081F5D78((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  sub_2081F5E90(v10, (uint64_t)v15);
  sub_2080752AC((uint64_t)__sz, (uint64_t)&__p);
  v14 = v20;
  v11 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)__sz;
  if (v11)
  {
    p_shared_owners = (unint64_t *)&v11->__shared_owners_;
    do
      v13 = __ldaxr(p_shared_owners);
    while (__stlxr(v13 - 1, p_shared_owners));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
      std::__shared_weak_count::__release_weak(v11);
    }
  }
  *(_OWORD *)(a2 + 24) = v14;
  if (__p)
  {
    v17 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EB0634(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EB0658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  void *__p;
  void *v19;
  uint64_t v20;
  _OWORD v21[2];

  v15 = 0;
  __p = 0;
  v19 = 0;
  v20 = 0;
  sub_2080752AC((uint64_t)v21, (uint64_t)&__p);
  v16 = v21[0];
  v17 = v21[1];
  if (__p)
  {
    v19 = __p;
    operator delete(__p);
  }
  sub_207EB08F0(a2, (uint64_t)&v15);
  v5 = v15;
  v6 = v16;
  if (*((_QWORD *)&v16 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v21[0] = v17;
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  v9 = *(std::__shared_weak_count **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = *((_QWORD *)&v6 + 1);
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  *(_OWORD *)(a3 + 24) = v21[0];
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (*((_QWORD *)&v16 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_207EB0794(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207CBD7E8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EB07A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EB07C4(uint64_t a1, uint64_t a2)
{
  size_t v4;
  char *v5;
  char *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  _QWORD v11[2];
  void *__p;
  char *v13;
  char *v14;
  _OWORD v15[2];

  sub_20820A270(a1, (_QWORD *)a2);
  v4 = *(_QWORD *)a2;
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v4)
  {
    if ((v4 & 0x8000000000000000) != 0)
      sub_207CF94B8();
    v5 = (char *)operator new(v4);
    v6 = &v5[v4];
    __p = v5;
    v14 = &v5[v4];
    bzero(v5, v4);
    v13 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v11[0] = v6 - v5;
  v11[1] = v5;
  sub_20820B268(a1, (uint64_t)v11);
  sub_2080752AC((uint64_t)v15, (uint64_t)&__p);
  v10 = v15[1];
  v7 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v15[0];
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *(_OWORD *)(a2 + 24) = v10;
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EB08CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EB08F0(uint64_t a1, uint64_t a2)
{
  size_t v4;
  char *v5;
  char *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  _QWORD v11[2];
  void *__p;
  char *v13;
  char *v14;
  _OWORD v15[2];

  sub_20820A270(a1, (_QWORD *)a2);
  v4 = *(_QWORD *)a2;
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v4)
  {
    if ((v4 & 0x8000000000000000) != 0)
      sub_207CF94B8();
    v5 = (char *)operator new(v4);
    v6 = &v5[v4];
    __p = v5;
    v14 = &v5[v4];
    bzero(v5, v4);
    v13 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v11[0] = v6 - v5;
  v11[1] = v5;
  sub_20820B268(a1, (uint64_t)v11);
  sub_2080752AC((uint64_t)v15, (uint64_t)&__p);
  v10 = v15[1];
  v7 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v15[0];
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *(_OWORD *)(a2 + 24) = v10;
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EB09F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EB0A1C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  std::logic_error *exception;
  char v13;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_207CA4068(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  v9 = *(_DWORD *)(a2[3] + v3);
  a2[6] = v3 + 4;
  if (v9 <= 1)
  {
    sub_207EB0B10((uint64_t)&v13, a2, a3);
  }
  else
  {
    sub_208072ECC(a2);
    sub_207EB0C7C(a2, a3);
    v10 = a2[12];
    v11 = a2[9];
    a2[6] = *(_QWORD *)(v10 - 8) + *(_QWORD *)(v11 - 8) + 8;
    a2[9] = v11 - 8;
    a2[12] = v10 - 8;
  }
}

void sub_207EB0AFC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_207EB0B10(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  void *__p;
  void *v19;
  uint64_t v20;
  _OWORD v21[2];

  v15 = 0;
  __p = 0;
  v19 = 0;
  v20 = 0;
  sub_2080752AC((uint64_t)v21, (uint64_t)&__p);
  v16 = v21[0];
  v17 = v21[1];
  if (__p)
  {
    v19 = __p;
    operator delete(__p);
  }
  sub_207EB0E98(a2, (uint64_t)&v15);
  v5 = v15;
  v6 = v16;
  if (*((_QWORD *)&v16 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v21[0] = v17;
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  v9 = *(std::__shared_weak_count **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = *((_QWORD *)&v6 + 1);
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  *(_OWORD *)(a3 + 24) = v21[0];
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (*((_QWORD *)&v16 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_207EB0C4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207CBD7E8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EB0C60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EB0C7C(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  size_t v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  size_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  std::logic_error *v16;
  std::logic_error *exception;
  __int128 v18;
  void *__p;
  char *v20;
  char *v21;
  _OWORD v22[2];

  v2 = a1[6];
  v3 = a1[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_207CA4068(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  v8 = *(_QWORD *)(a1[3] + v2);
  *(_QWORD *)a2 = v8;
  v9 = a1[6] + 8;
  a1[6] = v9;
  __p = 0;
  v20 = 0;
  v21 = 0;
  if (v8)
  {
    if ((v8 & 0x8000000000000000) != 0)
      sub_207CF94B8();
    v10 = (char *)operator new(v8);
    __p = v10;
    v21 = &v10[v8];
    bzero(v10, v8);
    v20 = &v10[v8];
    v11 = a1[7];
    v4 = v11 >= v9;
    v12 = v11 - v9;
    if (!v4)
      v12 = 0;
    if (v12 < v8)
    {
      v16 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      std::logic_error::logic_error(v16, "Not enough data to read binary blob");
      v16->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
      __cxa_throw(v16, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
    }
  }
  else
  {
    v10 = 0;
    v8 = 0;
  }
  memcpy(v10, (const void *)(a1[3] + v9), v8);
  a1[6] = v8 + v9;
  sub_2080752AC((uint64_t)v22, (uint64_t)&__p);
  v18 = v22[1];
  v13 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v22[0];
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  *(_OWORD *)(a2 + 24) = v18;
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EB0E50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EB0E98(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  size_t v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  size_t v12;
  std::__shared_weak_count *v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  std::logic_error *v16;
  std::logic_error *exception;
  __int128 v18;
  void *__p;
  char *v20;
  char *v21;
  _OWORD v22[2];

  v2 = a1[6];
  v3 = a1[7];
  v4 = v3 >= v2;
  v5 = v3 - v2;
  if (!v4)
    v5 = 0;
  if (v5 <= 7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_207CA4068(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  v8 = *(_QWORD *)(a1[3] + v2);
  *(_QWORD *)a2 = v8;
  v9 = a1[6] + 8;
  a1[6] = v9;
  __p = 0;
  v20 = 0;
  v21 = 0;
  if (v8)
  {
    if ((v8 & 0x8000000000000000) != 0)
      sub_207CF94B8();
    v10 = (char *)operator new(v8);
    __p = v10;
    v21 = &v10[v8];
    bzero(v10, v8);
    v20 = &v10[v8];
    v11 = a1[7];
    v4 = v11 >= v9;
    v12 = v11 - v9;
    if (!v4)
      v12 = 0;
    if (v12 < v8)
    {
      v16 = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
      std::logic_error::logic_error(v16, "Not enough data to read binary blob");
      v16->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
      __cxa_throw(v16, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
    }
  }
  else
  {
    v10 = 0;
    v8 = 0;
  }
  memcpy(v10, (const void *)(a1[3] + v9), v8);
  a1[6] = v8 + v9;
  sub_2080752AC((uint64_t)v22, (uint64_t)&__p);
  v18 = v22[1];
  v13 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v22[0];
  if (v13)
  {
    p_shared_owners = (unint64_t *)&v13->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
      std::__shared_weak_count::__release_weak(v13);
    }
  }
  *(_OWORD *)(a2 + 24) = v18;
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EB106C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EB10B4(int *a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  int v7;
  unsigned int v9;
  unsigned int v10;
  __int128 *v11;
  unsigned int v12;
  char v13;

  v7 = *a1;
  if (*a1 == 2)
  {
    if (a4 < 2)
      goto LABEL_8;
    v12 = 2;
    (*(void (**)(uint64_t, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    if (v12 >= 3)
    {
      v10 = v12;
      v11 = sub_207EB11E0();
      sub_208212838((std::string *)v11, v10, 2u);
    }
    v7 = *a1;
  }
  if (a4 >= 2 && v7 > 0)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 16))(a2);
    sub_207EB1548(a2, a3);
    (*(void (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
    return;
  }
LABEL_8:
  if (a4 >= 2)
    v9 = 2;
  else
    v9 = a4;
  if (v9 <= 1)
    sub_207EB13DC((uint64_t)&v13, a2, a3);
  else
    sub_207EB1548(a2, a3);
}

__int128 *sub_207EB11E0()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D130);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D130))
    return &xmmword_25452D118;
  v2 = (char *)sub_207EB12BC();
  if (v2[23] < 0)
  {
    sub_207CA40D8(&xmmword_25452D118, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_25452D128 = *((_QWORD *)v2 + 2);
    xmmword_25452D118 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D118, &dword_207C77000);
  __cxa_guard_release(&qword_25452D130);
  return &xmmword_25452D118;
}

void sub_207EB12A4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D130);
  _Unwind_Resume(a1);
}

void *sub_207EB12BC()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D150);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25452D150))
  {
    sub_2082159F8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::conio::BlobSample]", qword_25452D138);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452D138, &dword_207C77000);
    __cxa_guard_release(&qword_25452D150);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_25452D170);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D170))
    return &unk_25452D158;
  sub_208215C6C((uint64_t)qword_25452D138, (uint64_t)&unk_25452D158);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_25452D158, &dword_207C77000);
  __cxa_guard_release(&qword_25452D170);
  return &unk_25452D158;
}

void sub_207EB13AC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D170);
  _Unwind_Resume(a1);
}

void sub_207EB13C4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D150);
  _Unwind_Resume(a1);
}

void sub_207EB13DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  unint64_t *v7;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  void *__p;
  void *v19;
  uint64_t v20;
  _OWORD v21[2];

  v15 = 0;
  __p = 0;
  v19 = 0;
  v20 = 0;
  sub_2080752AC((uint64_t)v21, (uint64_t)&__p);
  v16 = v21[0];
  v17 = v21[1];
  if (__p)
  {
    v19 = __p;
    operator delete(__p);
  }
  sub_207EB1684(a2, (uint64_t)&v15);
  v5 = v15;
  v6 = v16;
  if (*((_QWORD *)&v16 + 1))
  {
    v7 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  v21[0] = v17;
  *(_QWORD *)a3 = v5;
  *(_QWORD *)(a3 + 8) = v6;
  v9 = *(std::__shared_weak_count **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = *((_QWORD *)&v6 + 1);
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  *(_OWORD *)(a3 + 24) = v21[0];
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v16 + 1);
  if (*((_QWORD *)&v16 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v16 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_207EB1518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207CBD7E8((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EB152C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EB1548(uint64_t a1, uint64_t a2)
{
  size_t v4;
  char *v5;
  char *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  _QWORD v11[2];
  void *__p;
  char *v13;
  char *v14;
  _OWORD v15[2];

  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 120))(a1);
  v4 = *(_QWORD *)a2;
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v4)
  {
    if ((v4 & 0x8000000000000000) != 0)
      sub_207CF94B8();
    v5 = (char *)operator new(v4);
    v6 = &v5[v4];
    __p = v5;
    v14 = &v5[v4];
    bzero(v5, v4);
    v13 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v11[0] = v6 - v5;
  v11[1] = v5;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a1 + 272))(a1, v11);
  sub_2080752AC((uint64_t)v15, (uint64_t)&__p);
  v10 = v15[1];
  v7 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v15[0];
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *(_OWORD *)(a2 + 24) = v10;
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EB1660(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EB1684(uint64_t a1, uint64_t a2)
{
  size_t v4;
  char *v5;
  char *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  __int128 v10;
  _QWORD v11[2];
  void *__p;
  char *v13;
  char *v14;
  _OWORD v15[2];

  (*(void (**)(uint64_t))(*(_QWORD *)a1 + 120))(a1);
  v4 = *(_QWORD *)a2;
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (v4)
  {
    if ((v4 & 0x8000000000000000) != 0)
      sub_207CF94B8();
    v5 = (char *)operator new(v4);
    v6 = &v5[v4];
    __p = v5;
    v14 = &v5[v4];
    bzero(v5, v4);
    v13 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v11[0] = v6 - v5;
  v11[1] = v5;
  (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)a1 + 272))(a1, v11);
  sub_2080752AC((uint64_t)v15, (uint64_t)&__p);
  v10 = v15[1];
  v7 = *(std::__shared_weak_count **)(a2 + 16);
  *(_OWORD *)(a2 + 8) = v15[0];
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  *(_OWORD *)(a2 + 24) = v10;
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EB179C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_207EB17C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  _BOOL8 v11;
  _QWORD v13[5];
  uint64_t *v14;
  _QWORD v15[5];
  _QWORD *v16;
  char v17;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[6];

  v29[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_207E372B8(v4, (uint64_t)v24);
  }
  else if (v5 == 1)
  {
    sub_207E370A0(v4, (uint64_t)v24);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    sub_207E02E5C(v4, (uint64_t)v24);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_207E372B8(v6, (uint64_t)v18);
  }
  else if (v7 == 1)
  {
    sub_207E370A0(v6, (uint64_t)v18);
  }
  else
  {
    if (v7)
      sub_207CA9F48();
    sub_207E02E5C(v6, (uint64_t)v18);
  }
  v15[0] = v24;
  v15[1] = &v25;
  v15[2] = &v26;
  v15[3] = &v27;
  v15[4] = &v28;
  v16 = v29;
  v13[0] = v18;
  v13[1] = &v19;
  v13[2] = &v20;
  v13[3] = &v21;
  v13[4] = &v22;
  v14 = &v23;
  if (!sub_207EFF314((uint64_t)&v17, v15, v13))
    goto LABEL_24;
  if (!*((_BYTE *)v16 + 24) || !*((_BYTE *)v14 + 24))
  {
    if ((*((_BYTE *)v16 + 24) != 0) == (*((_BYTE *)v14 + 24) != 0))
      goto LABEL_22;
LABEL_24:
    v11 = 0;
    goto LABEL_25;
  }
  v8 = (unsigned __int8 *)*v16;
  v9 = (unsigned __int8 *)v16[1];
  v10 = (unsigned __int8 *)*v14;
  if (&v9[-*v16] != (unsigned __int8 *)(v14[1] - *v14))
    goto LABEL_24;
  if (v8 != v9)
  {
    while (sub_207EFE5C8(v8, v10))
    {
      v8 += 96;
      v10 += 96;
      if (v8 == v9)
        goto LABEL_22;
    }
    goto LABEL_24;
  }
LABEL_22:
  if (*(unsigned __int8 *)(a1 + 200) != *(unsigned __int8 *)(a2 + 200))
    goto LABEL_24;
  v11 = sub_208206DF8((unsigned __int8 *)(a1 + 208), (_BYTE *)(a2 + 208)) == 0;
LABEL_25:
  sub_207D49CF4((uint64_t)v18);
  sub_207D49CF4((uint64_t)v24);
  return v11;
}

void sub_207EB19BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a23);
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_207EB19D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_207EB19EC(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076B88, 0);
  if (v4)
  {
    sub_207EB1DF8(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076BD0, 0);
    if (v5)
    {
      sub_207EB20F8(&v9, (uint64_t)v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076C58, 0);
      if (v6)
      {
        sub_207EB2378(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076CA0, 0);
        if (v7)
        {
          sub_207EB2678(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24C082C60)
            sub_207EB2890(&v9, (uint64_t)a1);
          else
            sub_207EB1B50(&v8, a1);
        }
      }
    }
  }
}

void sub_207EB1B50(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v14 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v9 = v14;
    if (v8 >= 1)
    {
      if (v8 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E3CE18((uint64_t)a2, v4, v9);
      goto LABEL_16;
    }
    sub_207E3CE18((uint64_t)a2, v4, v14);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v14 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v11 = v14;
    if (v10 >= 1)
    {
      if (v10 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E3C790((uint64_t)a2, v4, v11);
      goto LABEL_16;
    }
    sub_207E3C790((uint64_t)a2, v4, v14);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = a2[2];
    v14 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v7 = v14;
    if (v6 >= 1)
    {
      if (v6 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E12E90((uint64_t)a2, v4, v7);
LABEL_16:
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
      goto LABEL_17;
    }
    sub_207E12E90((uint64_t)a2, v4, v14);
  }
LABEL_17:
  v12 = v3 + 200;
  v13 = a2[2];
  v14 = 2;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
  if (v13 < 1)
  {
    sub_207E3D064(a2, v12);
  }
  else
  {
    if (v13 == 2)
    {
      v14 = 2;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_207E3D064(a2, v12);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

void sub_207EB1DF8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E383C8(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F1E44(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F3DDC(a2, &v18);
      sub_207E0BDBC(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E37A58(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F1E44(a2);
  v18 = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F3DDC(a2, &v18);
  sub_207E38AA4(a2, v3 + 200);
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_207EB20F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_208210C8C(&v20, 4u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v7 + 8);
    }
    sub_20820C2C0(*(_QWORD *)(a2 + 24));
    sub_207E39730(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_208210C8C(&v20, 5u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v8 + 8);
    }
    sub_20820C2C0(*(_QWORD *)(a2 + 24));
    sub_207E39614(a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_208210C8C(&v20, 6u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v6 + 8);
    }
    sub_20820C2C0(*(_QWORD *)(a2 + 24));
    sub_207E0E660(a2, v4, 6u);
  }
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_20820C0E8((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_208210C8C(&v20, 2u);
  }
  else
  {
    sub_208210F00((uint64_t)&v20, v14 + 8);
  }
  sub_20820C2C0(*(_QWORD *)(a2 + 24));
  sub_207E39ACC(a2, (char *)(v3 + 200));
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_20820C0E8((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_207EB2378(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A78C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F17E4(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F20F8(a2, &v18);
      sub_207E0F904(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A048(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F17E4(a2);
  v18 = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F20F8(a2, &v18);
  sub_207E3AC3C(a2, v3 + 200);
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

_QWORD *sub_207EB2678(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *result;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v20 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3BAE4(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        sub_207CBAB98(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_207E11040(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3B540(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v22 = v7;
  sub_207CBAB98(v11, (uint64_t)&v22, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_207CBAB98(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_207E3BD5C(a2, v3 + 200);
  v14 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v15 = *(_QWORD **)(a2 + 24);
    v24 = *(_BYTE *)(a2 + 32);
    sub_207CBAB98(v15, (uint64_t)&v24, 1);
  }
  v16 = *(_QWORD **)(a2 + 24);
  v25 = v14;
  result = sub_207CBAB98(v16, (uint64_t)&v25, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_207EB2890(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C21C(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C100(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    __src = 6;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E11EF8(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 2;
  sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_208072A10((_QWORD *)a2);
  sub_207E3C51C(a2, v3 + 200);
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v10 + 10) = *(_QWORD *)(a2 + 32) - v10 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
}

void sub_207EB2A48(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D28, 0);
  if (v4)
  {
    sub_207EB30EC(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D60, 0);
    if (v5)
    {
      sub_207EB359C(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076DE8, 0);
      if (v6)
      {
        sub_207EB3A28(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076E20, 0);
        if (v7)
        {
          sub_207EB3ED8(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24C082DE0)
            sub_207EB4534(&v9, a1);
          else
            sub_207EB2BAC(&v8, (uint64_t)a1);
        }
      }
    }
  }
}

void sub_207EB2BAC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  char v28;
  _BYTE *v29[27];
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v29);
    sub_207E0AB10((uint64_t)&v30, (uint64_t *)v29);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)&v30);
        if (!v45)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v28, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v31;
    *(_BYTE *)(v3 + 64) = 0;
    if (v34)
    {
      v8 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(_QWORD *)(v3 + 56) = v8;
      v32 = 0uLL;
      v33 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v36;
    v10 = v35;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v39)
    {
      v11 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(_QWORD *)(v3 + 112) = v11;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v42)
    {
      v12 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(_QWORD *)(v3 + 144) = v12;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = v43;
      *(_QWORD *)(v3 + 176) = v44;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v43;
    if (!(_QWORD)v43)
      goto LABEL_46;
    v15 = *((_QWORD *)&v43 + 1);
    v16 = (void *)v43;
    if (*((_QWORD *)&v43 + 1) == (_QWORD)v43)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v43;
LABEL_45:
    *((_QWORD *)&v43 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v29);
  sub_207E0AB10((uint64_t)&v30, (uint64_t *)v29);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v28, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v31;
    *(_BYTE *)(v3 + 64) = 0;
    if (v34)
    {
      v17 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(_QWORD *)(v3 + 56) = v17;
      v32 = 0uLL;
      v33 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v36;
    v19 = v35;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v39)
    {
      v20 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(_QWORD *)(v3 + 112) = v20;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v42)
    {
      v21 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(_QWORD *)(v3 + 144) = v21;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = v43;
      *(_QWORD *)(v3 + 176) = v44;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)&v30);
  if (v45)
  {
LABEL_38:
    v14 = v43;
    if (!(_QWORD)v43)
      goto LABEL_46;
    v23 = *((_QWORD *)&v43 + 1);
    v16 = (void *)v43;
    if (*((_QWORD *)&v43 + 1) == (_QWORD)v43)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v42 && SHIBYTE(v41) < 0)
    operator delete((void *)v40);
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (v34 && SHIBYTE(v33) < 0)
    operator delete((void *)v32);
  sub_207D49CF4((uint64_t)v29);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(_QWORD *)a2;
  v29[0] = *(_BYTE **)(a2 + 8);
  v25 = (int)v29[0];
  LODWORD(v30) = 6;
  (*(void (**)(uint64_t, uint64_t *))(v24 + 104))(a2, &v30);
  if (v25 < 1)
  {
    if (v30 < 3)
      sub_207E1EB04((uint64_t)&v30, a2, v4, v30);
    else
      sub_207E1ED78(a2, v4, v30);
  }
  else
  {
    sub_207E1E50C((int *)v29, a2, v4, v30);
  }
  v26 = *(_QWORD *)a2;
  v30 = *(_QWORD *)(a2 + 8);
  v27 = v30;
  LODWORD(v29[0]) = 2;
  (*(void (**)(uint64_t, _BYTE **))(v26 + 104))(a2, v29);
  if (v27 < 1)
  {
    if (LODWORD(v29[0]) < 2)
    {
      sub_207E40F94((uint64_t)v29, (_BYTE *)a2, v3 + 200);
    }
    else
    {
      v29[0] = (_BYTE *)(v3 + 200);
      sub_207E41430((_BYTE *)a2, v29);
      sub_207E41118(*(unsigned __int8 *)(v3 + 200), a2, v3 + 200);
    }
  }
  else
  {
    sub_207E40C4C((int *)&v30, (_BYTE *)a2, (_BYTE *)(v3 + 200), v29[0]);
  }
}

void sub_207EB30A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EB30EC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v27);
    sub_207E0AB10((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v27);
  sub_207E0AB10((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_207D49CF4((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E14108(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E3D3E8((uint64_t)v27, a2, (_BYTE *)(v3 + 200));
}

void sub_207EB3554(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EB359C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v25);
    sub_207E0AB10((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v25);
  sub_207E0AB10((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_207D49CF4((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E17BB8((uint64_t)v25, a2, v4);
  LODWORD(v25[0]) = 2;
  sub_20820BA20(a2[6], v25);
  sub_207E3E190((uint64_t)v25, a2, (unsigned __int8 *)(v3 + 200), v25[0]);
}

void sub_207EB39E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EB3A28(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v27);
    sub_207E0AB10((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v27);
  sub_207E0AB10((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_207D49CF4((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E19198(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E3E968((uint64_t)v27, a2, (_BYTE *)(v3 + 200));
}

void sub_207EB3E90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EB3ED8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  _BYTE *v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  void *__p;
  uint64_t v36;
  char v37;
  _BYTE v38[8];
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  char v47;
  __int128 v48;
  uint64_t v49;
  char v50;
  __int128 v51;
  uint64_t v52;
  unsigned __int8 v53;
  uint64_t v54;

  v54 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)&__p);
    sub_207E0AB10((uint64_t)v38, (uint64_t *)&__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v38);
        if (!v53)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v34, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v39;
    *(_BYTE *)(v3 + 64) = 0;
    if (v42)
    {
      v8 = v41;
      *(_OWORD *)(v3 + 40) = v40;
      *(_QWORD *)(v3 + 56) = v8;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v44;
    v10 = v43;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v47)
    {
      v11 = v46;
      *(_OWORD *)(v3 + 96) = v45;
      *(_QWORD *)(v3 + 112) = v11;
      v45 = 0uLL;
      v46 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v50)
    {
      v12 = v49;
      *(_OWORD *)(v3 + 128) = v48;
      *(_QWORD *)(v3 + 144) = v12;
      v48 = 0uLL;
      v49 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v53;
    if (v53)
    {
      *(_OWORD *)(v3 + 160) = v51;
      *(_QWORD *)(v3 + 176) = v52;
      v51 = 0uLL;
      v52 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v51;
    if (!(_QWORD)v51)
      goto LABEL_46;
    v15 = *((_QWORD *)&v51 + 1);
    v16 = (void *)v51;
    if (*((_QWORD *)&v51 + 1) == (_QWORD)v51)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v51;
LABEL_45:
    *((_QWORD *)&v51 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)&__p);
  sub_207E0AB10((uint64_t)v38, (uint64_t *)&__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v34, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v39;
    *(_BYTE *)(v3 + 64) = 0;
    if (v42)
    {
      v17 = v41;
      *(_OWORD *)(v3 + 40) = v40;
      *(_QWORD *)(v3 + 56) = v17;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v44;
    v19 = v43;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v47)
    {
      v20 = v46;
      *(_OWORD *)(v3 + 96) = v45;
      *(_QWORD *)(v3 + 112) = v20;
      v45 = 0uLL;
      v46 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v50)
    {
      v21 = v49;
      *(_OWORD *)(v3 + 128) = v48;
      *(_QWORD *)(v3 + 144) = v21;
      v48 = 0uLL;
      v49 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v53;
    if (v53)
    {
      *(_OWORD *)(v3 + 160) = v51;
      *(_QWORD *)(v3 + 176) = v52;
      v51 = 0uLL;
      v52 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v38);
  if (v53)
  {
LABEL_38:
    v14 = v51;
    if (!(_QWORD)v51)
      goto LABEL_46;
    v23 = *((_QWORD *)&v51 + 1);
    v16 = (void *)v51;
    if (*((_QWORD *)&v51 + 1) == (_QWORD)v51)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v50 && SHIBYTE(v49) < 0)
    operator delete((void *)v48);
  if (v47 && SHIBYTE(v46) < 0)
    operator delete((void *)v45);
  if (v42 && SHIBYTE(v41) < 0)
    operator delete((void *)v40);
  sub_207D49CF4((uint64_t)&__p);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  LODWORD(__p) = 6;
  sub_208209DC8(a2, &__p);
  v24 = __p;
  if (__p >= 6)
    v25 = 6;
  else
    v25 = __p;
  if (v25 < 3)
    sub_207E1B3DC((uint64_t)&__p, a2, v4, v25);
  else
    sub_207E1B5CC(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_20820B068(a2, (uint64_t)&__p);
      if (v37 < 0)
      {
        if (v36 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_80:
          v31 = 0;
          if (v37 < 0)
            goto LABEL_83;
          goto LABEL_69;
        }
      }
      else if (v37 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_80;
      }
      v31 = 1;
      if (v37 < 0)
LABEL_83:
        operator delete(__p);
LABEL_69:
      if (*(_BYTE *)(a2 + 131))
        v30 = 0;
      else
        v30 = v31;
    }
    while ((v30 & 1) != 0);
  }
  LODWORD(__p) = 2;
  sub_208209DC8(a2, &__p);
  v26 = (_BYTE *)(v3 + 200);
  v27 = __p;
  if (__p >= 2)
    v28 = 2;
  else
    v28 = __p;
  if (v28 < 2)
  {
    sub_207E3F710((uint64_t)&__p, a2, (uint64_t)v26);
  }
  else
  {
    LOBYTE(__p) = 0;
    sub_208209484(a2, &__p);
    v29 = __p;
    *v26 = (_BYTE)__p;
    sub_207E3F894(v29, a2, (uint64_t)v26);
  }
  if (v27 >= 2 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_20820B068(a2, (uint64_t)&__p);
      if (v37 < 0)
      {
        if (v36 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_99:
          v33 = 0;
          if (v37 < 0)
            goto LABEL_102;
          goto LABEL_88;
        }
      }
      else if (v37 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_99;
      }
      v33 = 1;
      if (v37 < 0)
LABEL_102:
        operator delete(__p);
LABEL_88:
      if (*(_BYTE *)(a2 + 131))
        v32 = 0;
      else
        v32 = v33;
    }
    while ((v32 & 1) != 0);
  }
}

void sub_207EB44EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EB4534(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v25);
    sub_207E0AB10((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v25);
  sub_207E0AB10((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_207D49CF4((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E1CD58((uint64_t)v25, a2, v4);
  sub_207E3FE24((uint64_t)v25, a2, (_BYTE *)(v3 + 200));
}

void sub_207EB4960(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

BOOL sub_207EB49A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  int v12;
  unsigned __int8 *v13;
  _BOOL8 v14;
  _QWORD v16[5];
  uint64_t *v17;
  _BYTE *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  _QWORD *v23;
  char v24;
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[6];

  v36[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_207E372B8(v4, (uint64_t)v31);
  }
  else if (v5 == 1)
  {
    sub_207E370A0(v4, (uint64_t)v31);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    sub_207E02E5C(v4, (uint64_t)v31);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_207E372B8(v6, (uint64_t)v25);
  }
  else if (v7 == 1)
  {
    sub_207E370A0(v6, (uint64_t)v25);
  }
  else
  {
    if (v7)
      sub_207CA9F48();
    sub_207E02E5C(v6, (uint64_t)v25);
  }
  v18 = v31;
  v19 = &v32;
  v20 = &v33;
  v21 = &v34;
  v22 = &v35;
  v23 = v36;
  v16[0] = v25;
  v16[1] = &v26;
  v16[2] = &v27;
  v16[3] = &v28;
  v16[4] = &v29;
  v17 = &v30;
  if (!sub_207EFF314((uint64_t)&v24, &v18, v16))
    goto LABEL_26;
  if (!*((_BYTE *)v23 + 24) || !*((_BYTE *)v17 + 24))
  {
    if ((*((_BYTE *)v23 + 24) != 0) == (*((_BYTE *)v17 + 24) != 0))
      goto LABEL_22;
LABEL_26:
    v14 = 0;
    goto LABEL_27;
  }
  v8 = (unsigned __int8 *)*v23;
  v9 = (unsigned __int8 *)v23[1];
  v10 = (unsigned __int8 *)*v17;
  if (&v9[-*v23] != (unsigned __int8 *)(v17[1] - *v17))
    goto LABEL_26;
  if (v8 != v9)
  {
    while (sub_207EFE5C8(v8, v10))
    {
      v8 += 96;
      v10 += 96;
      if (v8 == v9)
        goto LABEL_22;
    }
    goto LABEL_26;
  }
LABEL_22:
  if (*(unsigned __int8 *)(a1 + 200) != *(unsigned __int8 *)(a2 + 200))
    goto LABEL_26;
  if (*(_QWORD *)(a1 + 208) != *(_QWORD *)(a2 + 208))
    goto LABEL_26;
  v11 = *(unsigned __int8 **)(a1 + 216);
  v12 = *v11;
  v13 = *(unsigned __int8 **)(a2 + 216);
  if (v12 != *v13)
    goto LABEL_26;
  v18 = v16;
  v19 = (uint64_t *)v11;
  v20 = (uint64_t *)v13;
  v14 = sub_20807F93C(v12, (uint64_t)&v18);
LABEL_27:
  sub_207D49CF4((uint64_t)v25);
  sub_207D49CF4((uint64_t)v31);
  return v14;
}

void sub_207EB4BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a23);
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_207EB4BEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_207EB4C00(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076B88, 0);
  if (v4)
  {
    sub_207EB500C(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076BD0, 0);
    if (v5)
    {
      sub_207EB530C(&v9, (uint64_t)v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076C58, 0);
      if (v6)
      {
        sub_207EB558C(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076CA0, 0);
        if (v7)
        {
          sub_207EB588C(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24C082C60)
            sub_207EB5AA4(&v9, (uint64_t)a1);
          else
            sub_207EB4D64(&v8, a1);
        }
      }
    }
  }
}

void sub_207EB4D64(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  __int128 *v12;
  int v13;
  unsigned int v14;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v14 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v9 = v14;
    if (v8 >= 1)
    {
      if (v8 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E3CE18((uint64_t)a2, v4, v9);
      goto LABEL_16;
    }
    sub_207E3CE18((uint64_t)a2, v4, v14);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v14 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v11 = v14;
    if (v10 >= 1)
    {
      if (v10 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E3C790((uint64_t)a2, v4, v11);
      goto LABEL_16;
    }
    sub_207E3C790((uint64_t)a2, v4, v14);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = a2[2];
    v14 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v7 = v14;
    if (v6 >= 1)
    {
      if (v6 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E12E90((uint64_t)a2, v4, v7);
LABEL_16:
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
      goto LABEL_17;
    }
    sub_207E12E90((uint64_t)a2, v4, v14);
  }
LABEL_17:
  v12 = (__int128 *)(v3 + 200);
  v13 = a2[2];
  v14 = 2;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
  if (v13 < 1)
  {
    sub_207E45818(a2, v12);
  }
  else
  {
    if (v13 == 2)
    {
      v14 = 2;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_207E45818(a2, v12);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

void sub_207EB500C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E383C8(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F1E44(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F3DDC(a2, &v18);
      sub_207E0BDBC(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E37A58(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F1E44(a2);
  v18 = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F3DDC(a2, &v18);
  sub_207E43104(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_207EB530C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_208210C8C(&v20, 4u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v7 + 8);
    }
    sub_20820C2C0(*(_QWORD *)(a2 + 24));
    sub_207E39730(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_208210C8C(&v20, 5u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v8 + 8);
    }
    sub_20820C2C0(*(_QWORD *)(a2 + 24));
    sub_207E39614(a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_208210C8C(&v20, 6u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v6 + 8);
    }
    sub_20820C2C0(*(_QWORD *)(a2 + 24));
    sub_207E0E660(a2, v4, 6u);
  }
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_20820C0E8((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_208210C8C(&v20, 2u);
  }
  else
  {
    sub_208210F00((uint64_t)&v20, v14 + 8);
  }
  sub_20820C2C0(*(_QWORD *)(a2 + 24));
  sub_207E439D0(a2, (__int128 *)(v3 + 200));
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_20820C0E8((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_207EB558C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A78C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F17E4(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F20F8(a2, &v18);
      sub_207E0F904(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A048(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F17E4(a2);
  v18 = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F20F8(a2, &v18);
  sub_207E44324(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

_QWORD *sub_207EB588C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *result;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v20 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3BAE4(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        sub_207CBAB98(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_207E11040(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3B540(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v22 = v7;
  sub_207CBAB98(v11, (uint64_t)&v22, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_207CBAB98(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_207E44BF0(a2, (__int128 *)(v3 + 200));
  v14 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v15 = *(_QWORD **)(a2 + 24);
    v24 = *(_BYTE *)(a2 + 32);
    sub_207CBAB98(v15, (uint64_t)&v24, 1);
  }
  v16 = *(_QWORD **)(a2 + 24);
  v25 = v14;
  result = sub_207CBAB98(v16, (uint64_t)&v25, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_207EB5AA4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C21C(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C100(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    __src = 6;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E11EF8(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 2;
  sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_208072A10((_QWORD *)a2);
  sub_207E453C4(a2, (__int128 *)(v3 + 200));
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v10 + 10) = *(_QWORD *)(a2 + 32) - v10 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
}

void sub_207EB5C5C(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D28, 0);
  if (v4)
  {
    sub_207EB6298(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D60, 0);
    if (v5)
    {
      sub_207EB6748(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076DE8, 0);
      if (v6)
      {
        sub_207EB6BD4(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076E20, 0);
        if (v7)
        {
          sub_207EB7084(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24C082DE0)
            sub_207EB75E0(&v9, a1);
          else
            sub_207EB5DC0(&v8, (uint64_t)a1);
        }
      }
    }
  }
}

void sub_207EB5DC0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  uint64_t v27[27];
  unsigned int v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v27);
    sub_207E0AB10((uint64_t)&v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)&v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v27);
  sub_207E0AB10((uint64_t)&v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)&v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_207D49CF4((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(_QWORD *)a2;
  v27[0] = *(_QWORD *)(a2 + 8);
  v25 = v27[0];
  v28 = 6;
  (*(void (**)(uint64_t, unsigned int *))(v24 + 104))(a2, &v28);
  if (v25 < 1)
  {
    if (v28 < 3)
      sub_207E1EB04((uint64_t)&v28, a2, v4, v28);
    else
      sub_207E1ED78(a2, v4, v28);
  }
  else
  {
    sub_207E1E50C((int *)v27, a2, v4, v28);
  }
  v27[0] = *(_QWORD *)(a2 + 8);
  sub_207E50490((int *)v27, (_BYTE *)a2, (_BYTE *)(v3 + 200));
}

void sub_207EB6250(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EB6298(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v27);
    sub_207E0AB10((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v27);
  sub_207E0AB10((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_207D49CF4((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E14108(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E45E88((uint64_t)v27, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_207EB6700(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EB6748(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v25);
    sub_207E0AB10((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v25);
  sub_207E0AB10((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_207D49CF4((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E17BB8((uint64_t)v25, a2, v4);
  LODWORD(v25[0]) = 2;
  sub_20820BA20(a2[6], v25);
  sub_207E47FDC((uint64_t)v25, a2, (unsigned __int8 *)(v3 + 200), v25[0]);
}

void sub_207EB6B8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EB6BD4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v27);
    sub_207E0AB10((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v27);
  sub_207E0AB10((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_207D49CF4((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E19198(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E49E10((uint64_t)v27, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_207EB703C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EB7084(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  char v26;
  char v27;
  char v28;
  void *__p[2];
  char v30;
  _BYTE v31[8];
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)__p);
    sub_207E0AB10((uint64_t)v31, (uint64_t *)__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v31);
        if (!v46)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v28, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v8 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v8;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v37;
    v10 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v11 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v11;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v12 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v12;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v15 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v44;
LABEL_45:
    *((_QWORD *)&v44 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)__p);
  sub_207E0AB10((uint64_t)v31, (uint64_t *)__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v28, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v17 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v17;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v37;
    v19 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v20 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v20;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v21 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v21;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v31);
  if (v46)
  {
LABEL_38:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v23 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  sub_207D49CF4((uint64_t)__p);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  LODWORD(__p[0]) = 6;
  sub_208209DC8(a2, __p);
  v24 = __p[0];
  if (LODWORD(__p[0]) >= 6)
    v25 = 6;
  else
    v25 = __p[0];
  if (v25 < 3)
    sub_207E1B3DC((uint64_t)__p, a2, v4, v25);
  else
    sub_207E1B5CC(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_20820B068(a2, (uint64_t)__p);
      if (v30 < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_76:
          v27 = 0;
          if (v30 < 0)
            goto LABEL_79;
          goto LABEL_65;
        }
      }
      else if (v30 == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_76;
      }
      v27 = 1;
      if (v30 < 0)
LABEL_79:
        operator delete(__p[0]);
LABEL_65:
      if (*(_BYTE *)(a2 + 131))
        v26 = 0;
      else
        v26 = v27;
    }
    while ((v26 & 1) != 0);
  }
  sub_207E4BF64((uint64_t)__p, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_207EB7598(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EB75E0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v25);
    sub_207E0AB10((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v25);
  sub_207E0AB10((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_207D49CF4((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E1CD58((uint64_t)v25, a2, v4);
  sub_207E4DDC0((uint64_t)v25, a2, v3 + 200);
}

void sub_207EB7A0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

BOOL sub_207EB7A54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  int v12;
  unsigned __int8 *v13;
  _BOOL8 v14;
  _QWORD v16[5];
  uint64_t *v17;
  _BYTE *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  _QWORD *v23;
  char v24;
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[6];

  v36[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_207E372B8(v4, (uint64_t)v31);
  }
  else if (v5 == 1)
  {
    sub_207E370A0(v4, (uint64_t)v31);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    sub_207E02E5C(v4, (uint64_t)v31);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_207E372B8(v6, (uint64_t)v25);
  }
  else if (v7 == 1)
  {
    sub_207E370A0(v6, (uint64_t)v25);
  }
  else
  {
    if (v7)
      sub_207CA9F48();
    sub_207E02E5C(v6, (uint64_t)v25);
  }
  v18 = v31;
  v19 = &v32;
  v20 = &v33;
  v21 = &v34;
  v22 = &v35;
  v23 = v36;
  v16[0] = v25;
  v16[1] = &v26;
  v16[2] = &v27;
  v16[3] = &v28;
  v16[4] = &v29;
  v17 = &v30;
  if (!sub_207EFF314((uint64_t)&v24, &v18, v16))
    goto LABEL_26;
  if (!*((_BYTE *)v23 + 24) || !*((_BYTE *)v17 + 24))
  {
    if ((*((_BYTE *)v23 + 24) != 0) == (*((_BYTE *)v17 + 24) != 0))
      goto LABEL_22;
LABEL_26:
    v14 = 0;
    goto LABEL_27;
  }
  v8 = (unsigned __int8 *)*v23;
  v9 = (unsigned __int8 *)v23[1];
  v10 = (unsigned __int8 *)*v17;
  if (&v9[-*v23] != (unsigned __int8 *)(v17[1] - *v17))
    goto LABEL_26;
  if (v8 != v9)
  {
    while (sub_207EFE5C8(v8, v10))
    {
      v8 += 96;
      v10 += 96;
      if (v8 == v9)
        goto LABEL_22;
    }
    goto LABEL_26;
  }
LABEL_22:
  if (*(unsigned __int8 *)(a1 + 200) != *(unsigned __int8 *)(a2 + 200))
    goto LABEL_26;
  if (*(_QWORD *)(a1 + 208) != *(_QWORD *)(a2 + 208))
    goto LABEL_26;
  v11 = *(unsigned __int8 **)(a1 + 216);
  v12 = *v11;
  v13 = *(unsigned __int8 **)(a2 + 216);
  if (v12 != *v13)
    goto LABEL_26;
  v18 = v16;
  v19 = (uint64_t *)v11;
  v20 = (uint64_t *)v13;
  v14 = sub_20807F93C(v12, (uint64_t)&v18);
LABEL_27:
  sub_207D49CF4((uint64_t)v25);
  sub_207D49CF4((uint64_t)v31);
  return v14;
}

void sub_207EB7C7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a23);
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_207EB7C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_207EB7CAC(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  uint64_t *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076B88, 0);
  if (v4)
  {
    sub_207EB80B8(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076BD0, 0);
    if (v5)
    {
      sub_207EB83B8(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076C58, 0);
      if (v6)
      {
        sub_207EB8638(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076CA0, 0);
        if (v7)
        {
          sub_207EB8938(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24C082C60)
            sub_207EB8B50(&v9, (uint64_t)a1);
          else
            sub_207EB7E10(&v8, a1);
        }
      }
    }
  }
}

void sub_207EB7E10(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  __int128 *v12;
  int v13;
  unsigned int v14;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v14 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v9 = v14;
    if (v8 >= 1)
    {
      if (v8 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E3CE18((uint64_t)a2, v4, v9);
      goto LABEL_16;
    }
    sub_207E3CE18((uint64_t)a2, v4, v14);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v14 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v11 = v14;
    if (v10 >= 1)
    {
      if (v10 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E3C790((uint64_t)a2, v4, v11);
      goto LABEL_16;
    }
    sub_207E3C790((uint64_t)a2, v4, v14);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = a2[2];
    v14 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v7 = v14;
    if (v6 >= 1)
    {
      if (v6 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E12E90((uint64_t)a2, v4, v7);
LABEL_16:
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
      goto LABEL_17;
    }
    sub_207E12E90((uint64_t)a2, v4, v14);
  }
LABEL_17:
  v12 = (__int128 *)(v3 + 200);
  v13 = a2[2];
  v14 = 2;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
  if (v13 < 1)
  {
    sub_207E5550C(a2, v12);
  }
  else
  {
    if (v13 == 2)
    {
      v14 = 2;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_207E5550C(a2, v12);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

void sub_207EB80B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E383C8(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F1E44(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F3DDC(a2, &v18);
      sub_207E0BDBC(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E37A58(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F1E44(a2);
  v18 = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F3DDC(a2, &v18);
  sub_207E52574(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_207EB83B8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = a2[3];
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_208210C8C(&v20, 4u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v7 + 8);
    }
    sub_20820C2C0(a2[3]);
    sub_207E39730((uint64_t)a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = a2[3];
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_208210C8C(&v20, 5u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v8 + 8);
    }
    sub_20820C2C0(a2[3]);
    sub_207E39614((uint64_t)a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = a2[3];
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_208210C8C(&v20, 6u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v6 + 8);
    }
    sub_20820C2C0(a2[3]);
    sub_207E0E660((uint64_t)a2, v4, 6u);
  }
  v9 = a2[3];
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_20820C0E8((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = a2[3];
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_208210C8C(&v20, 2u);
  }
  else
  {
    sub_208210F00((uint64_t)&v20, v14 + 8);
  }
  sub_20820C2C0(a2[3]);
  sub_207E531EC(a2, (__int128 *)(v3 + 200));
  v15 = a2[3];
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_20820C0E8((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_207EB8638(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A78C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F17E4(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F20F8(a2, &v18);
      sub_207E0F904(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A048(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F17E4(a2);
  v18 = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F20F8(a2, &v18);
  sub_207E53BA8(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

_QWORD *sub_207EB8938(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *result;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v20 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3BAE4(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        sub_207CBAB98(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_207E11040(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3B540(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v22 = v7;
  sub_207CBAB98(v11, (uint64_t)&v22, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_207CBAB98(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_207E54820(a2, (__int128 *)(v3 + 200));
  v14 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v15 = *(_QWORD **)(a2 + 24);
    v24 = *(_BYTE *)(a2 + 32);
    sub_207CBAB98(v15, (uint64_t)&v24, 1);
  }
  v16 = *(_QWORD **)(a2 + 24);
  v25 = v14;
  result = sub_207CBAB98(v16, (uint64_t)&v25, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_207EB8B50(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C21C(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C100(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    __src = 6;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E11EF8(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 2;
  sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_208072A10((_QWORD *)a2);
  sub_207E5505C(a2, (__int128 *)(v3 + 200));
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v10 + 10) = *(_QWORD *)(a2 + 32) - v10 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
}

void sub_207EB8D08(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  uint64_t *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D28, 0);
  if (v4)
  {
    sub_207EB9344(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D60, 0);
    if (v5)
    {
      sub_207EB989C(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076DE8, 0);
      if (v6)
      {
        sub_207EB9D28(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076E20, 0);
        if (v7)
        {
          sub_207EBA280(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24C082DE0)
            sub_207EBA7DC(&v9, a1);
          else
            sub_207EB8E6C(&v8, (uint64_t)a1);
        }
      }
    }
  }
}

void sub_207EB8E6C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  uint64_t v27[27];
  unsigned int v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v27);
    sub_207E0AB10((uint64_t)&v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)&v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v27);
  sub_207E0AB10((uint64_t)&v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)&v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_207D49CF4((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(_QWORD *)a2;
  v27[0] = *(_QWORD *)(a2 + 8);
  v25 = v27[0];
  v28 = 6;
  (*(void (**)(uint64_t, unsigned int *))(v24 + 104))(a2, &v28);
  if (v25 < 1)
  {
    if (v28 < 3)
      sub_207E1EB04((uint64_t)&v28, a2, v4, v28);
    else
      sub_207E1ED78(a2, v4, v28);
  }
  else
  {
    sub_207E1E50C((int *)v27, a2, v4, v28);
  }
  v27[0] = *(_QWORD *)(a2 + 8);
  sub_207E64190((int *)v27, (_BYTE *)a2, (_BYTE *)(v3 + 200));
}

void sub_207EB92FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EB9344(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *exception;
  char v32;
  uint64_t v33[27];
  _BYTE v34[8];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v33);
    sub_207E0AB10((uint64_t)v34, v33);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v34);
        if (!v49)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v32, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v8 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v8;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v40;
    v10 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v11 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v11;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v12 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v12;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v15 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v47;
LABEL_45:
    *((_QWORD *)&v47 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v33);
  sub_207E0AB10((uint64_t)v34, v33);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v32, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v17 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v17;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v40;
    v19 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v20 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v20;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v21 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v21;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v34);
  if (v49)
  {
LABEL_38:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v23 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v46 && SHIBYTE(v45) < 0)
    operator delete((void *)v44);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  sub_207D49CF4((uint64_t)v33);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E14108(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_2081F5F4C(a2);
  v26 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v26)
    *(_BYTE *)(a2 + 104) = 1;
  v27 = (char *)sub_2081F6204((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v33[0] = 0;
  sub_20809778C(v27, v33);
  if (HIDWORD(v33[0]))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24C08F078;
    __cxa_throw(exception, (struct type_info *)&unk_24C08F090, (void (*)(void *))std::exception::~exception);
  }
  if (LODWORD(v33[0]) >= 2)
    v28 = 2;
  else
    v28 = v33[0];
  sub_207E55BE4(a2, (unsigned __int8 *)(v3 + 200), v28);
  v29 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v29 - 8);
  v30 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(a2 + 48) = v29 - 8;
  *(_QWORD *)(a2 + 72) = v30 - 8;
}

void sub_207EB9854(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EB989C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v25);
    sub_207E0AB10((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v25);
  sub_207E0AB10((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_207D49CF4((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E17BB8((uint64_t)v25, a2, v4);
  LODWORD(v25[0]) = 2;
  sub_20820BA20(a2[6], v25);
  sub_207E58EAC((uint64_t)v25, a2, (unsigned __int8 *)(v3 + 200), v25[0]);
}

void sub_207EB9CE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EB9D28(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *exception;
  char v32;
  uint64_t v33[27];
  _BYTE v34[8];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v33);
    sub_207E0AB10((uint64_t)v34, v33);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v34);
        if (!v49)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v32, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v8 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v8;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v40;
    v10 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v11 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v11;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v12 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v12;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v15 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v47;
LABEL_45:
    *((_QWORD *)&v47 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v33);
  sub_207E0AB10((uint64_t)v34, v33);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v32, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v17 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v17;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v40;
    v19 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v20 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v20;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v21 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v21;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v34);
  if (v49)
  {
LABEL_38:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v23 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v46 && SHIBYTE(v45) < 0)
    operator delete((void *)v44);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  sub_207D49CF4((uint64_t)v33);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E19198(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_2081F5AC0(a2);
  v26 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v26)
    *(_BYTE *)(a2 + 104) = 1;
  v27 = (char *)sub_2081F5D78((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v33[0] = 0;
  sub_208097288(v27, v33);
  if (HIDWORD(v33[0]))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24C08F078;
    __cxa_throw(exception, (struct type_info *)&unk_24C08F090, (void (*)(void *))std::exception::~exception);
  }
  if (LODWORD(v33[0]) >= 2)
    v28 = 2;
  else
    v28 = v33[0];
  sub_207E5B664(a2, (unsigned __int8 *)(v3 + 200), v28);
  v29 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v29 - 8);
  v30 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(a2 + 48) = v29 - 8;
  *(_QWORD *)(a2 + 72) = v30 - 8;
}

void sub_207EBA238(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EBA280(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  char v26;
  char v27;
  char v28;
  void *__p[2];
  char v30;
  _BYTE v31[8];
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)__p);
    sub_207E0AB10((uint64_t)v31, (uint64_t *)__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v31);
        if (!v46)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v28, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v8 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v8;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v37;
    v10 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v11 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v11;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v12 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v12;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v15 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v44;
LABEL_45:
    *((_QWORD *)&v44 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)__p);
  sub_207E0AB10((uint64_t)v31, (uint64_t *)__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v28, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v17 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v17;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v37;
    v19 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v20 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v20;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v21 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v21;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v31);
  if (v46)
  {
LABEL_38:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v23 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  sub_207D49CF4((uint64_t)__p);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  LODWORD(__p[0]) = 6;
  sub_208209DC8(a2, __p);
  v24 = __p[0];
  if (LODWORD(__p[0]) >= 6)
    v25 = 6;
  else
    v25 = __p[0];
  if (v25 < 3)
    sub_207E1B3DC((uint64_t)__p, a2, v4, v25);
  else
    sub_207E1B5CC(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_20820B068(a2, (uint64_t)__p);
      if (v30 < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_76:
          v27 = 0;
          if (v30 < 0)
            goto LABEL_79;
          goto LABEL_65;
        }
      }
      else if (v30 == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_76;
      }
      v27 = 1;
      if (v30 < 0)
LABEL_79:
        operator delete(__p[0]);
LABEL_65:
      if (*(_BYTE *)(a2 + 131))
        v26 = 0;
      else
        v26 = v27;
    }
    while ((v26 & 1) != 0);
  }
  sub_207E5E92C((uint64_t)__p, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_207EBA794(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EBA7DC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v25);
    sub_207E0AB10((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v25);
  sub_207E0AB10((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_207D49CF4((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E1CD58((uint64_t)v25, a2, v4);
  sub_207E6110C((uint64_t)v25, a2, v3 + 200);
}

void sub_207EBAC08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

BOOL sub_207EBAC50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  int v12;
  unsigned __int8 *v13;
  _BOOL8 v14;
  _QWORD v16[5];
  uint64_t *v17;
  _BYTE *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  _QWORD *v23;
  char v24;
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[6];

  v36[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_207E372B8(v4, (uint64_t)v31);
  }
  else if (v5 == 1)
  {
    sub_207E370A0(v4, (uint64_t)v31);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    sub_207E02E5C(v4, (uint64_t)v31);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_207E372B8(v6, (uint64_t)v25);
  }
  else if (v7 == 1)
  {
    sub_207E370A0(v6, (uint64_t)v25);
  }
  else
  {
    if (v7)
      sub_207CA9F48();
    sub_207E02E5C(v6, (uint64_t)v25);
  }
  v18 = v31;
  v19 = &v32;
  v20 = &v33;
  v21 = &v34;
  v22 = &v35;
  v23 = v36;
  v16[0] = v25;
  v16[1] = &v26;
  v16[2] = &v27;
  v16[3] = &v28;
  v16[4] = &v29;
  v17 = &v30;
  if (!sub_207EFF314((uint64_t)&v24, &v18, v16))
    goto LABEL_26;
  if (!*((_BYTE *)v23 + 24) || !*((_BYTE *)v17 + 24))
  {
    if ((*((_BYTE *)v23 + 24) != 0) == (*((_BYTE *)v17 + 24) != 0))
      goto LABEL_22;
LABEL_26:
    v14 = 0;
    goto LABEL_27;
  }
  v8 = (unsigned __int8 *)*v23;
  v9 = (unsigned __int8 *)v23[1];
  v10 = (unsigned __int8 *)*v17;
  if (&v9[-*v23] != (unsigned __int8 *)(v17[1] - *v17))
    goto LABEL_26;
  if (v8 != v9)
  {
    while (sub_207EFE5C8(v8, v10))
    {
      v8 += 96;
      v10 += 96;
      if (v8 == v9)
        goto LABEL_22;
    }
    goto LABEL_26;
  }
LABEL_22:
  if (*(unsigned __int8 *)(a1 + 200) != *(unsigned __int8 *)(a2 + 200))
    goto LABEL_26;
  if (*(_QWORD *)(a1 + 208) != *(_QWORD *)(a2 + 208))
    goto LABEL_26;
  v11 = *(unsigned __int8 **)(a1 + 216);
  v12 = *v11;
  v13 = *(unsigned __int8 **)(a2 + 216);
  if (v12 != *v13)
    goto LABEL_26;
  v18 = v16;
  v19 = (uint64_t *)v11;
  v20 = (uint64_t *)v13;
  v14 = sub_20807F93C(v12, (uint64_t)&v18);
LABEL_27:
  sub_207D49CF4((uint64_t)v25);
  sub_207D49CF4((uint64_t)v31);
  return v14;
}

void sub_207EBAE78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a23);
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_207EBAE94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_207EBAEA8(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  uint64_t *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076B88, 0);
  if (v4)
  {
    sub_207EBB2B4(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076BD0, 0);
    if (v5)
    {
      sub_207EBB5B4(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076C58, 0);
      if (v6)
      {
        sub_207EBB834(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076CA0, 0);
        if (v7)
        {
          sub_207EBBB34(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24C082C60)
            sub_207EBBD4C(&v9, (uint64_t)a1);
          else
            sub_207EBB00C(&v8, a1);
        }
      }
    }
  }
}

void sub_207EBB00C(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  __int128 *v12;
  int v13;
  unsigned int v14;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v14 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v9 = v14;
    if (v8 >= 1)
    {
      if (v8 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E3CE18((uint64_t)a2, v4, v9);
      goto LABEL_16;
    }
    sub_207E3CE18((uint64_t)a2, v4, v14);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v14 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v11 = v14;
    if (v10 >= 1)
    {
      if (v10 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E3C790((uint64_t)a2, v4, v11);
      goto LABEL_16;
    }
    sub_207E3C790((uint64_t)a2, v4, v14);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = a2[2];
    v14 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v7 = v14;
    if (v6 >= 1)
    {
      if (v6 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E12E90((uint64_t)a2, v4, v7);
LABEL_16:
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
      goto LABEL_17;
    }
    sub_207E12E90((uint64_t)a2, v4, v14);
  }
LABEL_17:
  v12 = (__int128 *)(v3 + 200);
  v13 = a2[2];
  v14 = 2;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
  if (v13 < 1)
  {
    sub_207E6B698(a2, v12);
  }
  else
  {
    if (v13 == 2)
    {
      v14 = 2;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_207E6B698(a2, v12);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

void sub_207EBB2B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E383C8(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F1E44(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F3DDC(a2, &v18);
      sub_207E0BDBC(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E37A58(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F1E44(a2);
  v18 = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F3DDC(a2, &v18);
  sub_207E68700(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_207EBB5B4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = a2[3];
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_208210C8C(&v20, 4u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v7 + 8);
    }
    sub_20820C2C0(a2[3]);
    sub_207E39730((uint64_t)a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = a2[3];
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_208210C8C(&v20, 5u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v8 + 8);
    }
    sub_20820C2C0(a2[3]);
    sub_207E39614((uint64_t)a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = a2[3];
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_208210C8C(&v20, 6u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v6 + 8);
    }
    sub_20820C2C0(a2[3]);
    sub_207E0E660((uint64_t)a2, v4, 6u);
  }
  v9 = a2[3];
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_20820C0E8((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = a2[3];
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_208210C8C(&v20, 2u);
  }
  else
  {
    sub_208210F00((uint64_t)&v20, v14 + 8);
  }
  sub_20820C2C0(a2[3]);
  sub_207E69378(a2, (__int128 *)(v3 + 200));
  v15 = a2[3];
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_20820C0E8((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_207EBB834(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A78C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F17E4(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F20F8(a2, &v18);
      sub_207E0F904(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A048(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F17E4(a2);
  v18 = 2;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F20F8(a2, &v18);
  sub_207E69D34(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

_QWORD *sub_207EBBB34(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *result;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v20 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3BAE4(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        sub_207CBAB98(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_207E11040(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3B540(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v22 = v7;
  sub_207CBAB98(v11, (uint64_t)&v22, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_207CBAB98(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_207E6A9AC(a2, (__int128 *)(v3 + 200));
  v14 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v15 = *(_QWORD **)(a2 + 24);
    v24 = *(_BYTE *)(a2 + 32);
    sub_207CBAB98(v15, (uint64_t)&v24, 1);
  }
  v16 = *(_QWORD **)(a2 + 24);
  v25 = v14;
  result = sub_207CBAB98(v16, (uint64_t)&v25, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_207EBBD4C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C21C(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C100(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    __src = 6;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E11EF8(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 2;
  sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_208072A10((_QWORD *)a2);
  sub_207E6B1E8(a2, (__int128 *)(v3 + 200));
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v10 + 10) = *(_QWORD *)(a2 + 32) - v10 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
}

void sub_207EBBF04(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  uint64_t *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D28, 0);
  if (v4)
  {
    sub_207EBC540(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D60, 0);
    if (v5)
    {
      sub_207EBCA98(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076DE8, 0);
      if (v6)
      {
        sub_207EBCF24(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076E20, 0);
        if (v7)
        {
          sub_207EBD47C(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24C082DE0)
            sub_207EBD9D8(&v9, a1);
          else
            sub_207EBC068(&v8, (uint64_t)a1);
        }
      }
    }
  }
}

void sub_207EBC068(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  uint64_t v27[27];
  unsigned int v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v27);
    sub_207E0AB10((uint64_t)&v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)&v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v27);
  sub_207E0AB10((uint64_t)&v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)&v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_207D49CF4((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(_QWORD *)a2;
  v27[0] = *(_QWORD *)(a2 + 8);
  v25 = v27[0];
  v28 = 6;
  (*(void (**)(uint64_t, unsigned int *))(v24 + 104))(a2, &v28);
  if (v25 < 1)
  {
    if (v28 < 3)
      sub_207E1EB04((uint64_t)&v28, a2, v4, v28);
    else
      sub_207E1ED78(a2, v4, v28);
  }
  else
  {
    sub_207E1E50C((int *)v27, a2, v4, v28);
  }
  v27[0] = *(_QWORD *)(a2 + 8);
  sub_207E7AC5C((int *)v27, (_BYTE *)a2, (_BYTE *)(v3 + 200));
}

void sub_207EBC4F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EBC540(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *exception;
  char v32;
  uint64_t v33[27];
  _BYTE v34[8];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v33);
    sub_207E0AB10((uint64_t)v34, v33);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v34);
        if (!v49)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v32, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v8 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v8;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v40;
    v10 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v11 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v11;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v12 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v12;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v15 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v47;
LABEL_45:
    *((_QWORD *)&v47 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v33);
  sub_207E0AB10((uint64_t)v34, v33);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v32, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v17 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v17;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v40;
    v19 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v20 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v20;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v21 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v21;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v34);
  if (v49)
  {
LABEL_38:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v23 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v46 && SHIBYTE(v45) < 0)
    operator delete((void *)v44);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  sub_207D49CF4((uint64_t)v33);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E14108(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_2081F5F4C(a2);
  v26 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v26)
    *(_BYTE *)(a2 + 104) = 1;
  v27 = (char *)sub_2081F6204((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v33[0] = 0;
  sub_20809778C(v27, v33);
  if (HIDWORD(v33[0]))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24C08F078;
    __cxa_throw(exception, (struct type_info *)&unk_24C08F090, (void (*)(void *))std::exception::~exception);
  }
  if (LODWORD(v33[0]) >= 2)
    v28 = 2;
  else
    v28 = v33[0];
  sub_207E6BD70(a2, (unsigned __int8 *)(v3 + 200), v28);
  v29 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v29 - 8);
  v30 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(a2 + 48) = v29 - 8;
  *(_QWORD *)(a2 + 72) = v30 - 8;
}

void sub_207EBCA50(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EBCA98(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v25);
    sub_207E0AB10((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v25);
  sub_207E0AB10((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_207D49CF4((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E17BB8((uint64_t)v25, a2, v4);
  LODWORD(v25[0]) = 2;
  sub_20820BA20(a2[6], v25);
  sub_207E6F208((uint64_t)v25, a2, (unsigned __int8 *)(v3 + 200), v25[0]);
}

void sub_207EBCEDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EBCF24(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *exception;
  char v32;
  uint64_t v33[27];
  _BYTE v34[8];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v33);
    sub_207E0AB10((uint64_t)v34, v33);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v34);
        if (!v49)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v32, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v8 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v8;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v40;
    v10 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v11 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v11;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v12 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v12;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v15 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v47;
LABEL_45:
    *((_QWORD *)&v47 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v33);
  sub_207E0AB10((uint64_t)v34, v33);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v32, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v17 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v17;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v40;
    v19 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v20 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v20;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v21 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v21;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v34);
  if (v49)
  {
LABEL_38:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v23 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v46 && SHIBYTE(v45) < 0)
    operator delete((void *)v44);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  sub_207D49CF4((uint64_t)v33);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E19198(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_2081F5AC0(a2);
  v26 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v26)
    *(_BYTE *)(a2 + 104) = 1;
  v27 = (char *)sub_2081F5D78((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v33[0] = 0;
  sub_208097288(v27, v33);
  if (HIDWORD(v33[0]))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24C08F078;
    __cxa_throw(exception, (struct type_info *)&unk_24C08F090, (void (*)(void *))std::exception::~exception);
  }
  if (LODWORD(v33[0]) >= 2)
    v28 = 2;
  else
    v28 = v33[0];
  sub_207E71BA0(a2, (unsigned __int8 *)(v3 + 200), v28);
  v29 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v29 - 8);
  v30 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v30 - 8);
  *(_QWORD *)(a2 + 48) = v29 - 8;
  *(_QWORD *)(a2 + 72) = v30 - 8;
}

void sub_207EBD434(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EBD47C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  char v26;
  char v27;
  char v28;
  void *__p[2];
  char v30;
  _BYTE v31[8];
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)__p);
    sub_207E0AB10((uint64_t)v31, (uint64_t *)__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v31);
        if (!v46)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v28, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v8 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v8;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v37;
    v10 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v11 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v11;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v12 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v12;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v15 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v44;
LABEL_45:
    *((_QWORD *)&v44 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)__p);
  sub_207E0AB10((uint64_t)v31, (uint64_t *)__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v28, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v17 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v17;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v37;
    v19 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v20 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v20;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v21 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v21;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v31);
  if (v46)
  {
LABEL_38:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v23 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  sub_207D49CF4((uint64_t)__p);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  LODWORD(__p[0]) = 6;
  sub_208209DC8(a2, __p);
  v24 = __p[0];
  if (LODWORD(__p[0]) >= 6)
    v25 = 6;
  else
    v25 = __p[0];
  if (v25 < 3)
    sub_207E1B3DC((uint64_t)__p, a2, v4, v25);
  else
    sub_207E1B5CC(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_20820B068(a2, (uint64_t)__p);
      if (v30 < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_76:
          v27 = 0;
          if (v30 < 0)
            goto LABEL_79;
          goto LABEL_65;
        }
      }
      else if (v30 == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_76;
      }
      v27 = 1;
      if (v30 < 0)
LABEL_79:
        operator delete(__p[0]);
LABEL_65:
      if (*(_BYTE *)(a2 + 131))
        v26 = 0;
      else
        v26 = v27;
    }
    while ((v26 & 1) != 0);
  }
  sub_207E75038((uint64_t)__p, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_207EBD990(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EBD9D8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v25);
    sub_207E0AB10((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v25);
  sub_207E0AB10((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_207D49CF4((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E1CD58((uint64_t)v25, a2, v4);
  sub_207E779F8((uint64_t)v25, a2, v3 + 200);
}

void sub_207EBDE04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_207EBDE4C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _OWORD *v4;
  _OWORD *v5;
  unsigned __int128 *v6;
  unsigned __int128 v7;
  _QWORD *result;

  v4 = operator new(0xF0uLL);
  v5 = v4;
  *(_QWORD *)v4 = off_24C073610;
  *(_OWORD *)((char *)v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  v4[2] = *(_OWORD *)(a1 + 32);
  *((_BYTE *)v4 + 48) = 0;
  *((_BYTE *)v4 + 72) = 0;
  if (*(_BYTE *)(a1 + 72))
  {
    v4[3] = *(_OWORD *)(a1 + 48);
    *((_QWORD *)v4 + 8) = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 56) = 0;
    *(_QWORD *)(a1 + 64) = 0;
    *(_QWORD *)(a1 + 48) = 0;
    *((_BYTE *)v4 + 72) = 1;
  }
  *((_BYTE *)v4 + 80) = 0;
  *((_BYTE *)v4 + 104) = 0;
  if (*(_BYTE *)(a1 + 104))
  {
    v4[5] = *(_OWORD *)(a1 + 80);
    *((_QWORD *)v4 + 12) = *(_QWORD *)(a1 + 96);
    *(_QWORD *)(a1 + 88) = 0;
    *(_QWORD *)(a1 + 96) = 0;
    *(_QWORD *)(a1 + 80) = 0;
    *((_BYTE *)v4 + 104) = 1;
  }
  *((_BYTE *)v4 + 144) = 0;
  v4[7] = *(_OWORD *)(a1 + 112);
  *((_QWORD *)v4 + 16) = *(_QWORD *)(a1 + 128);
  *((_BYTE *)v4 + 192) = 0;
  if (*(_BYTE *)(a1 + 192))
  {
    v4[9] = *(_OWORD *)(a1 + 144);
    *((_QWORD *)v4 + 20) = *(_QWORD *)(a1 + 160);
    *(_QWORD *)(a1 + 152) = 0;
    *(_QWORD *)(a1 + 160) = 0;
    *(_QWORD *)(a1 + 144) = 0;
    v6 = (unsigned __int128 *)(a1 + 176);
    do
      v7 = __ldaxp(v6);
    while (__stlxp(v7, v6));
    v4[11] = v7;
    *((_BYTE *)v4 + 192) = 1;
  }
  *((_BYTE *)v4 + 208) = 0;
  *((_BYTE *)v4 + 232) = 0;
  if (*(_BYTE *)(a1 + 232))
  {
    v4[13] = *(_OWORD *)(a1 + 208);
    *((_QWORD *)v4 + 28) = *(_QWORD *)(a1 + 224);
    *(_QWORD *)(a1 + 216) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 208) = 0;
    *((_BYTE *)v4 + 232) = 1;
  }
  *(_QWORD *)v4 = off_24C073590;
  *a2 = &off_24C078D18;
  a2[1] = v4;
  result = operator new(0x20uLL);
  *result = &off_24C078E28;
  result[1] = 0;
  result[2] = 0;
  result[3] = v5;
  a2[2] = result;
  return result;
}

void sub_207EBDFC4(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_207D4F044(v1);
  _Unwind_Resume(a1);
}

BOOL sub_207EBDFD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  int v12;
  unsigned __int8 *v13;
  _BOOL8 v14;
  _QWORD v16[5];
  uint64_t *v17;
  _BYTE *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  _QWORD *v23;
  char v24;
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[6];

  v36[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_207E372B8(v4, (uint64_t)v31);
  }
  else if (v5 == 1)
  {
    sub_207E370A0(v4, (uint64_t)v31);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    sub_207E02E5C(v4, (uint64_t)v31);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_207E372B8(v6, (uint64_t)v25);
  }
  else if (v7 == 1)
  {
    sub_207E370A0(v6, (uint64_t)v25);
  }
  else
  {
    if (v7)
      sub_207CA9F48();
    sub_207E02E5C(v6, (uint64_t)v25);
  }
  v18 = v31;
  v19 = &v32;
  v20 = &v33;
  v21 = &v34;
  v22 = &v35;
  v23 = v36;
  v16[0] = v25;
  v16[1] = &v26;
  v16[2] = &v27;
  v16[3] = &v28;
  v16[4] = &v29;
  v17 = &v30;
  if (!sub_207EFF314((uint64_t)&v24, &v18, v16))
    goto LABEL_26;
  if (!*((_BYTE *)v23 + 24) || !*((_BYTE *)v17 + 24))
  {
    if ((*((_BYTE *)v23 + 24) != 0) == (*((_BYTE *)v17 + 24) != 0))
      goto LABEL_22;
LABEL_26:
    v14 = 0;
    goto LABEL_27;
  }
  v8 = (unsigned __int8 *)*v23;
  v9 = (unsigned __int8 *)v23[1];
  v10 = (unsigned __int8 *)*v17;
  if (&v9[-*v23] != (unsigned __int8 *)(v17[1] - *v17))
    goto LABEL_26;
  if (v8 != v9)
  {
    while (sub_207EFE5C8(v8, v10))
    {
      v8 += 96;
      v10 += 96;
      if (v8 == v9)
        goto LABEL_22;
    }
    goto LABEL_26;
  }
LABEL_22:
  if (*(unsigned __int8 *)(a1 + 200) != *(unsigned __int8 *)(a2 + 200))
    goto LABEL_26;
  if (*(_QWORD *)(a1 + 208) != *(_QWORD *)(a2 + 208))
    goto LABEL_26;
  v11 = *(unsigned __int8 **)(a1 + 216);
  v12 = *v11;
  v13 = *(unsigned __int8 **)(a2 + 216);
  if (v12 != *v13)
    goto LABEL_26;
  v18 = v16;
  v19 = (uint64_t *)v11;
  v20 = (uint64_t *)v13;
  v14 = sub_20807F93C(v12, (uint64_t)&v18);
LABEL_27:
  sub_207D49CF4((uint64_t)v25);
  sub_207D49CF4((uint64_t)v31);
  return v14;
}

void sub_207EBE200(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a23);
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_207EBE21C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_207EBE230(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  uint64_t *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076B88, 0);
  if (v4)
  {
    sub_207EBE63C(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076BD0, 0);
    if (v5)
    {
      sub_207EBFF0C(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076C58, 0);
      if (v6)
      {
        sub_207EC0B48(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076CA0, 0);
        if (v7)
        {
          sub_207EC2418(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24C082C60)
            sub_207EC2E6C(&v9, (uint64_t)a1);
          else
            sub_207EBE394(&v8, a1);
        }
      }
    }
  }
}

void sub_207EBE394(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  __int128 *v12;
  int v13;
  unsigned int v14;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v14 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v9 = v14;
    if (v8 >= 1)
    {
      if (v8 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E3CE18((uint64_t)a2, v4, v9);
      goto LABEL_16;
    }
    sub_207E3CE18((uint64_t)a2, v4, v14);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v14 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v11 = v14;
    if (v10 >= 1)
    {
      if (v10 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E3C790((uint64_t)a2, v4, v11);
      goto LABEL_16;
    }
    sub_207E3C790((uint64_t)a2, v4, v14);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = a2[2];
    v14 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v7 = v14;
    if (v6 >= 1)
    {
      if (v6 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E12E90((uint64_t)a2, v4, v7);
LABEL_16:
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
      goto LABEL_17;
    }
    sub_207E12E90((uint64_t)a2, v4, v14);
  }
LABEL_17:
  v12 = (__int128 *)(v3 + 200);
  v13 = a2[2];
  v14 = 1;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
  if (v13 < 1)
  {
    sub_207EC34D4(a2, v12);
  }
  else
  {
    if (v13 == 2)
    {
      v14 = 1;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_207EC34D4(a2, v12);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

void sub_207EBE63C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E383C8(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F1E44(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F3DDC(a2, &v18);
      sub_207E0BDBC(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E37A58(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F1E44(a2);
  v18 = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F3DDC(a2, &v18);
  sub_207EBE93C(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_207EBE93C(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  int v6;
  unsigned __int8 *v7;
  uint64_t v8;
  int v9;
  _BYTE *v10;
  _QWORD *v11;
  BOOL v12;
  unsigned __int8 *v13;
  int v14;
  void **v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  __int128 v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  __int128 *v24;
  void **v25;

  v21 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v22 = *((_QWORD *)a2 + 2);
  v23 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "value_type";
    *(_QWORD *)(a1 + 80) = 10;
    if (!v6)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v24 = &v21;
  sub_207E392A0(a1, (_BYTE **)&v24);
  v7 = *(unsigned __int8 **)(a1 + 40);
  if (*v7 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "size";
    v8 = a1 + 72;
    v10 = (_BYTE *)(a1 + 88);
    v9 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 4;
    v11 = (_QWORD *)(a1 + 80);
    if (!v9)
      *v10 = 1;
    goto LABEL_16;
  }
  v11 = (_QWORD *)(a1 + 80);
  v8 = a1 + 72;
  v10 = (_BYTE *)(a1 + 88);
  if (!*(_BYTE *)(a1 + 88)
    || *(_QWORD *)(a1 + 80) != 7
    || (**(_DWORD **)v8 == *(_DWORD *)"version"
      ? (v12 = *(_DWORD *)(*(_QWORD *)v8 + 3) == *(_DWORD *)"sion")
      : (v12 = 0),
        !v12))
  {
LABEL_16:
    LOBYTE(v24) = 6;
    v25 = (void **)*((_QWORD *)&v21 + 1);
    v13 = (unsigned __int8 *)sub_2081F1A98(a1);
    v14 = *v13;
    *v13 = v24;
    LOBYTE(v24) = v14;
    v15 = (void **)*((_QWORD *)v13 + 1);
    *((_QWORD *)v13 + 1) = v25;
    v25 = v15;
    sub_20806DC2C(&v25, v14);
    v7 = *(unsigned __int8 **)(a1 + 40);
  }
  if (*v7 <= 1u)
  {
    v16 = *v10;
    *(_QWORD *)v8 = "lines2";
    *v11 = 6;
    if (!v16)
      *v10 = 1;
  }
  sub_2081F1E44(a1);
  sub_207EBEB9C(v21, (uint64_t)&v21, a1);
  v17 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a1 + 56) = v17 - 8;
  if (*(_BYTE *)(a1 + 88))
    *v10 = 0;
  v18 = v23;
  if (v23)
  {
    v19 = (unint64_t *)&v23->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
}

void sub_207EBEB68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  void ***v13;

  sub_20806DC2C(v13, a13);
  sub_207DCBDC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EBEB88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207DCBDC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

unsigned __int8 **sub_207EBEB9C(int a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 **result;
  _QWORD v4[2];

  v4[0] = a2;
  v4[1] = a3;
  switch(a1)
  {
    case 0:
      result = sub_207EBECC4(v4);
      break;
    case 1:
      result = sub_207EBEE98(v4);
      break;
    case 2:
      result = sub_207EBF06C(v4);
      break;
    case 3:
      result = sub_207EBF240(v4);
      break;
    case 5:
      result = sub_207EBF414(v4);
      break;
    case 6:
      result = sub_207EBF5E8(v4);
      break;
    case 7:
      result = sub_207EBF7BC(v4);
      break;
    case 8:
      result = sub_207EBF990(v4);
      break;
    case 11:
      result = sub_207EBFB64(v4);
      break;
    case 12:
      result = sub_207EBFD38(v4);
      break;
    default:
      sub_2082056D4(a1);
  }
  return result;
}

unsigned __int8 **sub_207EBECC4(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  size_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 0);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 1;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) == 0;
  if (!v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_19;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F1E44((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2081F1FC0(v10, &v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 2;
      sub_2081F1FC0(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 4;
      if (!--v6)
        return result;
    }
LABEL_19:
    abort();
  }
  do
  {
    sub_2081F1E44((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2081F1FC0(v7, &v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 2;
    sub_2081F1FC0(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 4;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207EBEE98(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 1);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 2uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F1E44((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2081F4624(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 4;
      sub_2081F4624(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 8;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F1E44((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2081F4624(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 4;
    sub_2081F4624(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 8;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207EBF06C(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 2);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F1E44((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2081F4894(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 8;
      sub_2081F4894(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 16;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F1E44((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2081F4894(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 8;
    sub_2081F4894(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 16;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207EBF240(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 3);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F1E44((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2081F4B04(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 16;
      sub_2081F4B04(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 32;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F1E44((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2081F4B04(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 16;
    sub_2081F4B04(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 32;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207EBF414(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  size_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 5);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 1;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) == 0;
  if (!v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_19;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F1E44((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2081F43B4(v10, &v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 2;
      sub_2081F43B4(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 4;
      if (!--v6)
        return result;
    }
LABEL_19:
    abort();
  }
  do
  {
    sub_2081F1E44((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2081F43B4(v7, &v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 2;
    sub_2081F43B4(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 4;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207EBF5E8(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 6);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 2uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F1E44((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2081F44EC(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 4;
      sub_2081F44EC(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 8;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F1E44((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2081F44EC(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 4;
    sub_2081F44EC(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 8;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207EBF7BC(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 7);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F1E44((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2081F475C(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 8;
      sub_2081F475C(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 16;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F1E44((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2081F475C(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 8;
    sub_2081F475C(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 16;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207EBF990(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 8);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F1E44((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2081F49CC(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 16;
      sub_2081F49CC(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 32;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F1E44((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2081F49CC(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 16;
    sub_2081F49CC(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 32;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207EBFB64(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 11);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F1E44((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2081F50E4(v10, (float **)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 8;
      sub_2081F50E4(v11, (float **)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 16;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F1E44((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2081F50E4(v7, (float **)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 8;
    sub_2081F50E4(v8, (float **)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 16;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207EBFD38(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 12);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F1E44((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2081F5504(v10, &v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 16;
      sub_2081F5504(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 32;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F1E44((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2081F5504(v7, &v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 16;
    sub_2081F5504(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 32;
    --v6;
  }
  while (v6);
  return result;
}

void sub_207EBFF0C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = a2[3];
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_208210C8C(&v20, 4u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v7 + 8);
    }
    sub_20820C2C0(a2[3]);
    sub_207E39730((uint64_t)a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = a2[3];
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_208210C8C(&v20, 5u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v8 + 8);
    }
    sub_20820C2C0(a2[3]);
    sub_207E39614((uint64_t)a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = a2[3];
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_208210C8C(&v20, 6u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v6 + 8);
    }
    sub_20820C2C0(a2[3]);
    sub_207E0E660((uint64_t)a2, v4, 6u);
  }
  v9 = a2[3];
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_20820C0E8((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = a2[3];
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_208210C8C(&v20, 1u);
  }
  else
  {
    sub_208210F00((uint64_t)&v20, v14 + 8);
  }
  sub_20820C2C0(a2[3]);
  sub_207EC018C(a2, (__int128 *)(v3 + 200));
  v15 = a2[3];
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_20820C0E8((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_207EC018C(uint64_t *a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  __int128 v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t *v14[3];
  __int128 v15;

  v11 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v12 = *((_QWORD *)a2 + 2);
  v13 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v6 = a1[3];
  if (*(_BYTE *)(v6 + 40))
  {
    v14[0] = (uint64_t *)(v6 + 16);
    sub_2082100A4(v14, v11);
  }
  else
  {
    if ((char)v11 < 0)
    {
      LOBYTE(v14[0]) = -52;
      BYTE1(v14[0]) = v11;
    }
    else
    {
      LOBYTE(v14[0]) = v11;
    }
    std::ostream::write();
  }
  v7 = a1[3];
  if (*(_BYTE *)(v7 + 40))
  {
    v14[0] = (uint64_t *)(v7 + 16);
    sub_20821166C(v14, *((unint64_t *)&v11 + 1));
  }
  else
  {
    sub_208211974();
  }
  v15 = xmmword_24C076898;
  v14[0] = (uint64_t *)&v11;
  v14[1] = a1;
  v14[2] = (uint64_t *)&v15;
  sub_207EC02F0(v11, v14);
  v8 = v13;
  if (v13)
  {
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_207EC02DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207DCBDC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_207EC02F0(int a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int *v18;
  unint64_t v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  BOOL v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int16 *v40;
  unint64_t v41;
  BOOL v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int *v48;
  unint64_t v49;
  BOOL v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  BOOL v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int *v64;
  unint64_t v65;
  BOOL v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t *v72;
  unint64_t v73;
  BOOL v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  __int128 v91;
  uint64_t v92;

  v92 = *MEMORY[0x24BDAC8D0];
  switch(a1)
  {
    case 0:
      v3 = *a2;
      result = (uint64_t)sub_20807EB10((unsigned __int8 **)(*a2 + 16), 0);
      v5 = *(_QWORD *)(v3 + 16);
      v7 = *(_QWORD *)(v5 + 40);
      v6 = *(char **)(v5 + 48);
      if (v6)
        v8 = 1;
      else
        v8 = v7 == 0;
      if (!v8)
      {
        result = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v9 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v9 + 40))
      {
        for (*(_QWORD *)&v91 = v9 + 16; v7; --v7)
          result = (uint64_t)sub_2082100A4((uint64_t **)&v91, *v6++);
      }
      else
      {
        for (; v7; --v7)
        {
          v78 = *v6;
          if (v78 < 0)
          {
            LOBYTE(v91) = -52;
            BYTE1(v91) = v78;
          }
          else
          {
            LOBYTE(v91) = *v6;
          }
          result = std::ostream::write();
          ++v6;
        }
      }
      break;
    case 1:
      v10 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 1);
      v11 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v11 + 40);
      v12 = *(_QWORD *)(v11 + 48);
      if (v12)
        v14 = 0;
      else
        v14 = v13 >= 2;
      if (v14
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_144;
      }
      v15 = a2[1];
      *(_QWORD *)&v91 = v13 >> 1;
      *((_QWORD *)&v91 + 1) = v12;
      result = sub_20820B4B0(*(_QWORD *)(v15 + 24), &v91);
      break;
    case 2:
      v16 = *a2;
      result = (uint64_t)sub_20807EB10((unsigned __int8 **)(*a2 + 16), 2);
      v17 = *(_QWORD *)(v16 + 16);
      v19 = *(_QWORD *)(v17 + 40);
      v18 = *(unsigned int **)(v17 + 48);
      if (v18)
        v20 = 0;
      else
        v20 = v19 >= 4;
      if (v20)
      {
        result = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v21 = v19 >> 2;
      v22 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v22 + 40))
      {
        *(_QWORD *)&v91 = v22 + 16;
        if (v19 >= 4)
        {
          v23 = 4 * v21;
          do
          {
            result = (uint64_t)sub_208210C8C((uint64_t **)&v91, *v18++);
            v23 -= 4;
          }
          while (v23);
        }
      }
      else if (v19 >= 4)
      {
        v79 = v22 + 8;
        v80 = 4 * v21;
        do
        {
          result = sub_208210F00((uint64_t)&v91, v79);
          ++v18;
          v80 -= 4;
        }
        while (v80);
      }
      break;
    case 3:
      v24 = *a2;
      result = (uint64_t)sub_20807EB10((unsigned __int8 **)(*a2 + 16), 3);
      v25 = *(_QWORD *)(v24 + 16);
      v27 = *(_QWORD *)(v25 + 40);
      v26 = *(unint64_t **)(v25 + 48);
      if (v26)
        v28 = 0;
      else
        v28 = v27 >= 8;
      if (v28)
      {
        result = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v29 = v27 >> 3;
      v30 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v30 + 40))
      {
        *(_QWORD *)&v91 = v30 + 16;
        if (v27 >= 8)
        {
          v31 = 8 * v29;
          do
          {
            result = (uint64_t)sub_20821166C((uint64_t **)&v91, *v26++);
            v31 -= 8;
          }
          while (v31);
        }
      }
      else if (v27 >= 8)
      {
        v81 = 8 * v29;
        do
        {
          ++v26;
          result = sub_208211974();
          v81 -= 8;
        }
        while (v81);
      }
      break;
    case 5:
      v32 = *a2;
      result = (uint64_t)sub_20807EB10((unsigned __int8 **)(*a2 + 16), 5);
      v33 = *(_QWORD *)(v32 + 16);
      v35 = *(_QWORD *)(v33 + 40);
      v34 = *(_BYTE **)(v33 + 48);
      if (v34)
        v36 = 1;
      else
        v36 = v35 == 0;
      if (!v36)
      {
        result = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v37 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v37 + 40))
      {
        for (*(_QWORD *)&v91 = v37 + 16; v35; --v35)
          result = (uint64_t)sub_20820FF5C((uint64_t **)&v91, (char)*v34++);
      }
      else
      {
        for (; v35; --v35)
        {
          v82 = (char)*v34;
          if (v82 > -33)
          {
            LOBYTE(v91) = *v34;
          }
          else
          {
            LOBYTE(v91) = -48;
            BYTE1(v91) = v82;
          }
          result = std::ostream::write();
          ++v34;
        }
      }
      break;
    case 6:
      v38 = *a2;
      result = (uint64_t)sub_20807EB10((unsigned __int8 **)(*a2 + 16), 6);
      v39 = *(_QWORD *)(v38 + 16);
      v41 = *(_QWORD *)(v39 + 40);
      v40 = *(__int16 **)(v39 + 48);
      if (v40)
        v42 = 0;
      else
        v42 = v41 >= 2;
      if (v42)
      {
        result = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v43 = v41 >> 1;
      v44 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v44 + 40))
      {
        *(_QWORD *)&v91 = v44 + 16;
        if (v41 >= 2)
        {
          v45 = 2 * v43;
          do
          {
            result = (uint64_t)sub_2082101E8((uint64_t **)&v91, *v40++);
            v45 -= 2;
          }
          while (v45);
        }
      }
      else if (v41 >= 2)
      {
        v83 = 2 * v43;
        do
        {
          ++v40;
          result = sub_2082104AC();
          v83 -= 2;
        }
        while (v83);
      }
      break;
    case 7:
      v46 = *a2;
      result = (uint64_t)sub_20807EB10((unsigned __int8 **)(*a2 + 16), 7);
      v47 = *(_QWORD *)(v46 + 16);
      v49 = *(_QWORD *)(v47 + 40);
      v48 = *(unsigned int **)(v47 + 48);
      if (v48)
        v50 = 0;
      else
        v50 = v49 >= 4;
      if (v50)
      {
        result = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v51 = v49 >> 2;
      v52 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v52 + 40))
      {
        *(_QWORD *)&v91 = v52 + 16;
        if (v49 >= 4)
        {
          v53 = 4 * v51;
          do
          {
            result = (uint64_t)sub_208210774((uint64_t **)&v91, *v48++);
            v53 -= 4;
          }
          while (v53);
        }
      }
      else if (v49 >= 4)
      {
        v84 = 4 * v51;
        do
        {
          ++v48;
          result = sub_208210B90();
          v84 -= 4;
        }
        while (v84);
      }
      break;
    case 8:
      v54 = *a2;
      result = (uint64_t)sub_20807EB10((unsigned __int8 **)(*a2 + 16), 8);
      v55 = *(_QWORD *)(v54 + 16);
      v57 = *(_QWORD *)(v55 + 40);
      v56 = *(unint64_t **)(v55 + 48);
      if (v56)
        v58 = 0;
      else
        v58 = v57 >= 8;
      if (v58)
      {
        result = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v59 = v57 >> 3;
      v60 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v60 + 40))
      {
        *(_QWORD *)&v91 = v60 + 16;
        if (v57 >= 8)
        {
          v61 = 8 * v59;
          do
          {
            result = (uint64_t)sub_208210FF0((uint64_t **)&v91, *v56++);
            v61 -= 8;
          }
          while (v61);
        }
      }
      else if (v57 >= 8)
      {
        v85 = 8 * v59;
        do
        {
          ++v56;
          result = sub_20821152C();
          v85 -= 8;
        }
        while (v85);
      }
      break;
    case 11:
      v62 = *a2;
      result = (uint64_t)sub_20807EB10((unsigned __int8 **)(*a2 + 16), 11);
      v63 = *(_QWORD *)(v62 + 16);
      v65 = *(_QWORD *)(v63 + 40);
      v64 = *(unsigned int **)(v63 + 48);
      if (v64)
        v66 = 0;
      else
        v66 = v65 >= 4;
      if (v66)
      {
        result = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v67 = v65 >> 2;
      v68 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v68 + 40))
      {
        *(_QWORD *)&v91 = v68 + 16;
        if (v65 >= 4)
        {
          v69 = 4 * v67;
          do
          {
            result = (uint64_t)sub_208211A6C((uint64_t)&v90, (uint64_t **)&v91, v64++);
            v69 -= 4;
          }
          while (v69);
        }
      }
      else if (v65 >= 4)
      {
        v86 = 4 * v67;
        do
        {
          v87 = *v64;
          LOBYTE(v91) = -54;
          *(_DWORD *)((char *)&v91 + 1) = bswap32(v87);
          result = std::ostream::write();
          ++v64;
          v86 -= 4;
        }
        while (v86);
      }
      break;
    case 12:
      v70 = *a2;
      result = (uint64_t)sub_20807EB10((unsigned __int8 **)(*a2 + 16), 12);
      v71 = *(_QWORD *)(v70 + 16);
      v73 = *(_QWORD *)(v71 + 40);
      v72 = *(unint64_t **)(v71 + 48);
      if (v72)
        v74 = 0;
      else
        v74 = v73 >= 8;
      if (v74)
      {
        result = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
        if ((_DWORD)result)
LABEL_144:
          abort();
      }
      v75 = v73 >> 3;
      v76 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v76 + 40))
      {
        *(_QWORD *)&v91 = v76 + 16;
        if (v73 >= 8)
        {
          v77 = 8 * v75;
          do
          {
            result = (uint64_t)sub_208211B48((uint64_t)&v90, (uint64_t **)&v91, v72++);
            v77 -= 8;
          }
          while (v77);
        }
      }
      else if (v73 >= 8)
      {
        v88 = 8 * v75;
        do
        {
          v89 = *v72;
          LOBYTE(v91) = -53;
          *(_QWORD *)((char *)&v91 + 1) = bswap64(v89);
          result = std::ostream::write();
          ++v72;
          v88 -= 8;
        }
        while (v88);
      }
      break;
    default:
      sub_2082056D4(a1);
  }
  return result;
}

void sub_207EC0B48(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A78C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F17E4(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F20F8(a2, &v18);
      sub_207E0F904(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A048(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F17E4(a2);
  v18 = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F20F8(a2, &v18);
  sub_207EC0E48(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_207EC0E48(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  int v6;
  unsigned __int8 *v7;
  uint64_t v8;
  int v9;
  _BYTE *v10;
  _QWORD *v11;
  BOOL v12;
  unsigned __int8 *v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  __int128 v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  __int128 *v24;
  uint64_t v25;

  v21 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v22 = *((_QWORD *)a2 + 2);
  v23 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "value_type";
    *(_QWORD *)(a1 + 80) = 10;
    if (!v6)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v24 = &v21;
  sub_207E3B438(a1, (_BYTE **)&v24);
  v7 = *(unsigned __int8 **)(a1 + 40);
  if (*v7 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "size";
    v8 = a1 + 72;
    v10 = (_BYTE *)(a1 + 88);
    v9 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 4;
    v11 = (_QWORD *)(a1 + 80);
    if (!v9)
      *v10 = 1;
    goto LABEL_16;
  }
  v11 = (_QWORD *)(a1 + 80);
  v8 = a1 + 72;
  v10 = (_BYTE *)(a1 + 88);
  if (!*(_BYTE *)(a1 + 88)
    || *(_QWORD *)(a1 + 80) != 7
    || (**(_DWORD **)v8 == *(_DWORD *)"version"
      ? (v12 = *(_DWORD *)(*(_QWORD *)v8 + 3) == *(_DWORD *)"sion")
      : (v12 = 0),
        !v12))
  {
LABEL_16:
    LOBYTE(v24) = 6;
    v25 = *((_QWORD *)&v21 + 1);
    v13 = (unsigned __int8 *)sub_2081F133C(a1);
    v14 = *v13;
    *v13 = v24;
    LOBYTE(v24) = v14;
    v15 = *((_QWORD *)v13 + 1);
    *((_QWORD *)v13 + 1) = v25;
    v25 = v15;
    sub_207D20660(&v25, v14);
    v7 = *(unsigned __int8 **)(a1 + 40);
  }
  if (*v7 <= 1u)
  {
    v16 = *v10;
    *(_QWORD *)v8 = "lines2";
    *v11 = 6;
    if (!v16)
      *v10 = 1;
  }
  sub_2081F17E4(a1);
  sub_207EC10A8(v21, (uint64_t)&v21, a1);
  v17 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a1 + 56) = v17 - 8;
  if (*(_BYTE *)(a1 + 88))
    *v10 = 0;
  v18 = v23;
  if (v23)
  {
    v19 = (unint64_t *)&v23->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
}

void sub_207EC1074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  uint64_t *v13;

  sub_207D20660(v13, a13);
  sub_207DCBDC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EC1094(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207DCBDC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

unsigned __int8 **sub_207EC10A8(int a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 **result;
  _QWORD v4[2];

  v4[0] = a2;
  v4[1] = a3;
  switch(a1)
  {
    case 0:
      result = sub_207EC11D0(v4);
      break;
    case 1:
      result = sub_207EC13A4(v4);
      break;
    case 2:
      result = sub_207EC1578(v4);
      break;
    case 3:
      result = sub_207EC174C(v4);
      break;
    case 5:
      result = sub_207EC1920(v4);
      break;
    case 6:
      result = sub_207EC1AF4(v4);
      break;
    case 7:
      result = sub_207EC1CC8(v4);
      break;
    case 8:
      result = sub_207EC1E9C(v4);
      break;
    case 11:
      result = sub_207EC2070(v4);
      break;
    case 12:
      result = sub_207EC2244(v4);
      break;
    default:
      sub_2082056D4(a1);
  }
  return result;
}

unsigned __int8 **sub_207EC11D0(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  size_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 0);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 1;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) == 0;
  if (!v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_19;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F17E4((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2081F1960(v10, &v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 2;
      sub_2081F1960(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 4;
      if (!--v6)
        return result;
    }
LABEL_19:
    abort();
  }
  do
  {
    sub_2081F17E4((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2081F1960(v7, &v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 2;
    sub_2081F1960(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 4;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207EC13A4(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 1);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 2uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F17E4((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2081F2940(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 4;
      sub_2081F2940(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 8;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F17E4((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2081F2940(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 4;
    sub_2081F2940(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 8;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207EC1578(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 2);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F17E4((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2081F2BB0(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 8;
      sub_2081F2BB0(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 16;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F17E4((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2081F2BB0(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 8;
    sub_2081F2BB0(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 16;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207EC174C(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 3);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F17E4((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2081F2E20(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 16;
      sub_2081F2E20(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 32;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F17E4((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2081F2E20(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 16;
    sub_2081F2E20(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 32;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207EC1920(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  size_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 5);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 1;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) == 0;
  if (!v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_19;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F17E4((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2081F26D0(v10, &v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 2;
      sub_2081F26D0(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 4;
      if (!--v6)
        return result;
    }
LABEL_19:
    abort();
  }
  do
  {
    sub_2081F17E4((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2081F26D0(v7, &v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 2;
    sub_2081F26D0(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 4;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207EC1AF4(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 6);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 2uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F17E4((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2081F2808(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 4;
      sub_2081F2808(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 8;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F17E4((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2081F2808(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 4;
    sub_2081F2808(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 8;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207EC1CC8(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 7);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F17E4((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2081F2A78(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 8;
      sub_2081F2A78(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 16;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F17E4((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2081F2A78(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 8;
    sub_2081F2A78(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 16;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207EC1E9C(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 8);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F17E4((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2081F2CE8(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 16;
      sub_2081F2CE8(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 32;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F17E4((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2081F2CE8(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 16;
    sub_2081F2CE8(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 32;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207EC2070(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 11);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F17E4((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2081F3400(v10, (float **)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 8;
      sub_2081F3400(v11, (float **)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 16;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F17E4((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2081F3400(v7, (float **)&v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 8;
    sub_2081F3400(v8, (float **)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 16;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207EC2244(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 12);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F17E4((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 2;
      v14 = v4;
      sub_2081F3820(v10, &v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 2;
      v14 = v4 + 16;
      sub_2081F3820(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 32;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F17E4((uint64_t)result);
    v7 = a1[1];
    v13 = 2;
    v14 = v4;
    sub_2081F3820(v7, &v13);
    v8 = a1[1];
    v13 = 2;
    v14 = v4 + 16;
    sub_2081F3820(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 32;
    --v6;
  }
  while (v6);
  return result;
}

_QWORD *sub_207EC2418(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *result;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v20 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3BAE4(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        sub_207CBAB98(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_207E11040(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3B540(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v22 = v7;
  sub_207CBAB98(v11, (uint64_t)&v22, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_207CBAB98(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_207EC2630(a2, (__int128 *)(v3 + 200));
  v14 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v15 = *(_QWORD **)(a2 + 24);
    v24 = *(_BYTE *)(a2 + 32);
    sub_207CBAB98(v15, (uint64_t)&v24, 1);
  }
  v16 = *(_QWORD **)(a2 + 24);
  v25 = v14;
  result = sub_207CBAB98(v16, (uint64_t)&v25, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_207EC2630(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  _QWORD v13[3];
  __int128 v14;

  v10 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v11 = *((_QWORD *)a2 + 2);
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  LOBYTE(v13[0]) = v10;
  sub_208208D08(a1, (unsigned __int8 *)v13);
  if (*(_QWORD *)(a1 + 40))
  {
    v6 = *(_QWORD **)(a1 + 24);
    LOBYTE(v13[0]) = *(_BYTE *)(a1 + 32);
    sub_207CBAB98(v6, (uint64_t)v13, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
  v14 = xmmword_24C076898;
  v13[0] = &v10;
  v13[1] = a1;
  v13[2] = &v14;
  sub_207EC2750(v10, v13);
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_207EC273C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207DCBDC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EC2750(int a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  BOOL v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;

  switch(a1)
  {
    case 0:
      v3 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 0);
      v4 = *(_QWORD *)(v3 + 16);
      v6 = *(_QWORD *)(v4 + 40);
      v5 = *(unsigned __int8 **)(v4 + 48);
      if (v5)
        v7 = 1;
      else
        v7 = v6 == 0;
      if (v7)
      {
        if (!v6)
          return;
        goto LABEL_65;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_65:
        v54 = a2[1];
        do
        {
          sub_208208D08(v54, v5++);
          --v6;
        }
        while (v6);
        return;
      }
      goto LABEL_112;
    case 1:
      v8 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 1);
      v9 = *(_QWORD *)(v8 + 16);
      v11 = *(_QWORD *)(v9 + 40);
      v10 = *(_QWORD *)(v9 + 48);
      if (v10)
        v12 = 0;
      else
        v12 = v11 >= 2;
      if (!v12)
      {
        if (v11 < 2)
          return;
        goto LABEL_69;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_69:
        v55 = a2[1];
        v56 = *(_QWORD *)(v55 + 40);
        v57 = v11 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          if (v56)
          {
            v58 = *(_QWORD **)(v55 + 24);
            v89 = *(_BYTE *)(v55 + 32);
            sub_207CBAB98(v58, (uint64_t)&v89, 1);
          }
          v10 += 2;
          std::ostream::operator<<();
          v56 = *(_QWORD *)(v55 + 40) + 1;
          *(_QWORD *)(v55 + 40) = v56;
          v57 -= 2;
        }
        while (v57);
        return;
      }
      goto LABEL_112;
    case 2:
      v13 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 2);
      v14 = *(_QWORD *)(v13 + 16);
      v16 = *(_QWORD *)(v14 + 40);
      v15 = *(_QWORD *)(v14 + 48);
      if (v15)
        v17 = 0;
      else
        v17 = v16 >= 4;
      if (!v17)
      {
        if (v16 < 4)
          return;
        goto LABEL_74;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_74:
        v59 = a2[1];
        v60 = *(_QWORD *)(v59 + 40);
        v61 = v16 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          if (v60)
          {
            v62 = *(_QWORD **)(v59 + 24);
            v90 = *(_BYTE *)(v59 + 32);
            sub_207CBAB98(v62, (uint64_t)&v90, 1);
          }
          v15 += 4;
          std::ostream::operator<<();
          v60 = *(_QWORD *)(v59 + 40) + 1;
          *(_QWORD *)(v59 + 40) = v60;
          v61 -= 4;
        }
        while (v61);
        return;
      }
      goto LABEL_112;
    case 3:
      v18 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 3);
      v19 = *(_QWORD *)(v18 + 16);
      v21 = *(_QWORD *)(v19 + 40);
      v20 = *(_QWORD *)(v19 + 48);
      if (v20)
        v22 = 0;
      else
        v22 = v21 >= 8;
      if (!v22)
      {
        if (v21 < 8)
          return;
        goto LABEL_79;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_79:
        v63 = a2[1];
        v64 = *(_QWORD *)(v63 + 40);
        v65 = v21 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          if (v64)
          {
            v66 = *(_QWORD **)(v63 + 24);
            v91 = *(_BYTE *)(v63 + 32);
            sub_207CBAB98(v66, (uint64_t)&v91, 1);
          }
          v20 += 8;
          std::ostream::operator<<();
          v64 = *(_QWORD *)(v63 + 40) + 1;
          *(_QWORD *)(v63 + 40) = v64;
          v65 -= 8;
        }
        while (v65);
        return;
      }
      goto LABEL_112;
    case 5:
      v23 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 5);
      v24 = *(_QWORD *)(v23 + 16);
      v26 = *(_QWORD *)(v24 + 40);
      v25 = *(char **)(v24 + 48);
      if (v25)
        v27 = 1;
      else
        v27 = v26 == 0;
      if (v27)
      {
        if (!v26)
          return;
        goto LABEL_84;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_84:
        v68 = a2[1];
        do
        {
          sub_208208B24(v68, v25++);
          --v26;
        }
        while (v26);
        return;
      }
      goto LABEL_112;
    case 6:
      v28 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 6);
      v29 = *(_QWORD *)(v28 + 16);
      v31 = *(_QWORD *)(v29 + 40);
      v30 = *(_QWORD *)(v29 + 48);
      if (v30)
        v32 = 0;
      else
        v32 = v31 >= 2;
      if (!v32)
      {
        if (v31 < 2)
          return;
        goto LABEL_88;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_88:
        v69 = a2[1];
        v70 = *(_QWORD *)(v69 + 40);
        v71 = v31 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          if (v70)
          {
            v72 = *(_QWORD **)(v69 + 24);
            v92 = *(_BYTE *)(v69 + 32);
            sub_207CBAB98(v72, (uint64_t)&v92, 1);
          }
          v30 += 2;
          std::ostream::operator<<();
          v70 = *(_QWORD *)(v69 + 40) + 1;
          *(_QWORD *)(v69 + 40) = v70;
          v71 -= 2;
        }
        while (v71);
        return;
      }
      goto LABEL_112;
    case 7:
      v33 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 7);
      v34 = *(_QWORD *)(v33 + 16);
      v36 = *(_QWORD *)(v34 + 40);
      v35 = *(_QWORD *)(v34 + 48);
      if (v35)
        v37 = 0;
      else
        v37 = v36 >= 4;
      if (!v37)
      {
        if (v36 < 4)
          return;
        goto LABEL_93;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_93:
        v73 = a2[1];
        v74 = *(_QWORD *)(v73 + 40);
        v75 = v36 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          if (v74)
          {
            v76 = *(_QWORD **)(v73 + 24);
            v93 = *(_BYTE *)(v73 + 32);
            sub_207CBAB98(v76, (uint64_t)&v93, 1);
          }
          v35 += 4;
          std::ostream::operator<<();
          v74 = *(_QWORD *)(v73 + 40) + 1;
          *(_QWORD *)(v73 + 40) = v74;
          v75 -= 4;
        }
        while (v75);
        return;
      }
      goto LABEL_112;
    case 8:
      v38 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 8);
      v39 = *(_QWORD *)(v38 + 16);
      v41 = *(_QWORD *)(v39 + 40);
      v40 = *(_QWORD *)(v39 + 48);
      if (v40)
        v42 = 0;
      else
        v42 = v41 >= 8;
      if (!v42)
      {
        if (v41 < 8)
          return;
        goto LABEL_98;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_98:
        v77 = a2[1];
        v78 = *(_QWORD *)(v77 + 40);
        v79 = v41 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          if (v78)
          {
            v80 = *(_QWORD **)(v77 + 24);
            v94 = *(_BYTE *)(v77 + 32);
            sub_207CBAB98(v80, (uint64_t)&v94, 1);
          }
          v40 += 8;
          std::ostream::operator<<();
          v78 = *(_QWORD *)(v77 + 40) + 1;
          *(_QWORD *)(v77 + 40) = v78;
          v79 -= 8;
        }
        while (v79);
        return;
      }
      goto LABEL_112;
    case 11:
      v43 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 11);
      v44 = *(_QWORD *)(v43 + 16);
      v46 = *(_QWORD *)(v44 + 40);
      v45 = *(_QWORD *)(v44 + 48);
      if (v45)
        v47 = 0;
      else
        v47 = v46 >= 4;
      if (!v47)
      {
        if (v46 < 4)
          return;
        goto LABEL_103;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_103:
        v81 = a2[1];
        v82 = *(_QWORD *)(v81 + 40);
        v83 = v46 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          if (v82)
          {
            v84 = *(_QWORD **)(v81 + 24);
            v95 = *(_BYTE *)(v81 + 32);
            sub_207CBAB98(v84, (uint64_t)&v95, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v81 + 24) + *(_QWORD *)(**(_QWORD **)(v81 + 24) - 24) + 16) = 9;
          v45 += 4;
          std::ostream::operator<<();
          v82 = *(_QWORD *)(v81 + 40) + 1;
          *(_QWORD *)(v81 + 40) = v82;
          v83 -= 4;
        }
        while (v83);
        return;
      }
      goto LABEL_112;
    case 12:
      v48 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 12);
      v49 = *(_QWORD *)(v48 + 16);
      v51 = *(_QWORD *)(v49 + 40);
      v50 = *(_QWORD *)(v49 + 48);
      if (v50)
        v52 = 0;
      else
        v52 = v51 >= 8;
      if (v52)
      {
        if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
        {
LABEL_112:
          abort();
        }
      }
      else if (v51 < 8)
      {
        return;
      }
      v85 = a2[1];
      v86 = *(_QWORD *)(v85 + 40);
      v87 = v51 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        if (v86)
        {
          v88 = *(_QWORD **)(v85 + 24);
          v96 = *(_BYTE *)(v85 + 32);
          sub_207CBAB98(v88, (uint64_t)&v96, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v85 + 24) + *(_QWORD *)(**(_QWORD **)(v85 + 24) - 24) + 16) = 17;
        v50 += 8;
        std::ostream::operator<<();
        v86 = *(_QWORD *)(v85 + 40) + 1;
        *(_QWORD *)(v85 + 40) = v86;
        v87 -= 8;
      }
      while (v87);
      return;
    default:
      sub_2082056D4(a1);
  }
}

void sub_207EC2E6C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C21C(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C100(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    __src = 6;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E11EF8(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 1;
  sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_208072A10((_QWORD *)a2);
  sub_207EC3024(a2, (__int128 *)(v3 + 200));
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v10 + 10) = *(_QWORD *)(a2 + 32) - v10 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
}

void sub_207EC3024(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  _QWORD __src[3];
  __int128 v13;

  v9 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v10 = *((_QWORD *)a2 + 2);
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  LOBYTE(__src[0]) = v9;
  sub_207D0B114(a1 + 24, *(char **)(a1 + 32), (char *)__src, (char *)__src + 1, 1);
  sub_207D0B114(a1 + 24, *(char **)(a1 + 32), (char *)&v9 + 8, (char *)&v10, 8);
  v13 = xmmword_24C076898;
  __src[0] = &v9;
  __src[1] = a1;
  __src[2] = &v13;
  sub_207EC3148(v9, __src);
  v6 = v11;
  if (v11)
  {
    v7 = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_207EC3134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207DCBDC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

char *sub_207EC3148(int a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  char *v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  BOOL v44;
  char *result;

  switch(a1)
  {
    case 0:
      v3 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 0);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v4 + 40);
      v6 = *(char **)(v4 + 48);
      if (v6)
        v7 = 1;
      else
        v7 = v5 == 0;
      if (!v7)
        goto LABEL_27;
      goto LABEL_7;
    case 1:
      v9 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 1);
      v10 = *(_QWORD *)(v9 + 16);
      v12 = *(_QWORD *)(v10 + 40);
      v11 = *(char **)(v10 + 48);
      if (v11)
        v13 = 0;
      else
        v13 = v12 >= 2;
      if (!v13)
        goto LABEL_37;
      goto LABEL_36;
    case 2:
      v14 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 2);
      v15 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v15 + 40);
      v11 = *(char **)(v15 + 48);
      if (v11)
        v17 = 0;
      else
        v17 = v16 >= 4;
      if (!v17)
        goto LABEL_59;
      goto LABEL_58;
    case 3:
      v18 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 3);
      v19 = *(_QWORD *)(v18 + 16);
      v20 = *(_QWORD *)(v19 + 40);
      v11 = *(char **)(v19 + 48);
      if (v11)
        v21 = 0;
      else
        v21 = v20 >= 8;
      if (!v21)
        goto LABEL_71;
      goto LABEL_70;
    case 5:
      v22 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 5);
      v23 = *(_QWORD *)(v22 + 16);
      v5 = *(_QWORD *)(v23 + 40);
      v6 = *(char **)(v23 + 48);
      if (v6)
        v24 = 1;
      else
        v24 = v5 == 0;
      if (v24)
      {
LABEL_7:
        v8 = a2[1];
      }
      else
      {
LABEL_27:
        if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v8 = a2[1], sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)))
        {
LABEL_77:
          abort();
        }
      }
      result = sub_207D0B114(v8 + 24, *(char **)(v8 + 32), v6, &v6[v5], v5);
      break;
    case 6:
      v25 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 6);
      v26 = *(_QWORD *)(v25 + 16);
      v12 = *(_QWORD *)(v26 + 40);
      v11 = *(char **)(v26 + 48);
      if (v11)
        v27 = 0;
      else
        v27 = v12 >= 2;
      if (!v27)
        goto LABEL_37;
LABEL_36:
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_77;
      }
LABEL_37:
      v28 = v12 & 0xFFFFFFFFFFFFFFFELL;
      v29 = a2[1];
      if (v11)
        v30 = 1;
      else
        v30 = v28 == 0;
      if (!v30)
        goto LABEL_75;
      goto LABEL_76;
    case 7:
      v31 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 7);
      v32 = *(_QWORD *)(v31 + 16);
      v16 = *(_QWORD *)(v32 + 40);
      v11 = *(char **)(v32 + 48);
      if (v11)
        v33 = 0;
      else
        v33 = v16 >= 4;
      if (!v33)
        goto LABEL_59;
      goto LABEL_58;
    case 8:
      v34 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 8);
      v35 = *(_QWORD *)(v34 + 16);
      v20 = *(_QWORD *)(v35 + 40);
      v11 = *(char **)(v35 + 48);
      if (v11)
        v36 = 0;
      else
        v36 = v20 >= 8;
      if (!v36)
        goto LABEL_71;
      goto LABEL_70;
    case 11:
      v37 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 11);
      v38 = *(_QWORD *)(v37 + 16);
      v16 = *(_QWORD *)(v38 + 40);
      v11 = *(char **)(v38 + 48);
      if (v11)
        v39 = 0;
      else
        v39 = v16 >= 4;
      if (!v39)
        goto LABEL_59;
LABEL_58:
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_77;
      }
LABEL_59:
      v28 = v16 & 0xFFFFFFFFFFFFFFFCLL;
      v29 = a2[1];
      if (v11)
        v40 = 1;
      else
        v40 = v28 == 0;
      if (!v40)
        goto LABEL_75;
      goto LABEL_76;
    case 12:
      v41 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 12);
      v42 = *(_QWORD *)(v41 + 16);
      v20 = *(_QWORD *)(v42 + 40);
      v11 = *(char **)(v42 + 48);
      if (v11)
        v43 = 0;
      else
        v43 = v20 >= 8;
      if (!v43)
        goto LABEL_71;
LABEL_70:
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_77;
      }
LABEL_71:
      v28 = v20 & 0xFFFFFFFFFFFFFFF8;
      v29 = a2[1];
      if (v11)
        v44 = 1;
      else
        v44 = v28 == 0;
      if (v44)
        goto LABEL_76;
LABEL_75:
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_77;
      }
LABEL_76:
      result = sub_207D0B114(v29 + 24, *(char **)(v29 + 32), v11, &v11[v28], v28);
      break;
    default:
      sub_2082056D4(a1);
  }
  return result;
}

void sub_207EC34D4(_BYTE *a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  _BYTE *v12[3];
  __int128 v13;

  v9 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v10 = *((_QWORD *)a2 + 2);
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v12[0] = &v9;
  sub_207E3D2B0(a1, v12);
  (*(void (**)(_BYTE *, char *))(*(_QWORD *)a1 + 120))(a1, (char *)&v9 + 8);
  v13 = xmmword_24C076898;
  v12[0] = &v9;
  v12[1] = a1;
  v12[2] = &v13;
  sub_207EC35D0(v9, v12);
  v6 = v11;
  if (v11)
  {
    v7 = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_207EC35BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207DCBDC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

unsigned __int8 **sub_207EC35D0(int a1, _QWORD *a2)
{
  uint64_t v3;
  unsigned __int8 **result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  BOOL v53;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;

  switch(a1)
  {
    case 0:
      v3 = *a2;
      result = sub_20807EB10((unsigned __int8 **)(*a2 + 16), 0);
      v5 = *(_QWORD *)(v3 + 16);
      v7 = *(_QWORD *)(v5 + 40);
      v6 = *(_QWORD *)(v5 + 48);
      if (v6)
        v8 = 1;
      else
        v8 = v7 == 0;
      if (v8)
      {
        if (!v7)
          return result;
        goto LABEL_65;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_65:
        v55 = a2[1];
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v55 + 80))(v55, v6++);
          --v7;
        }
        while (v7);
        return result;
      }
      goto LABEL_104;
    case 1:
      v9 = *a2;
      result = sub_20807EB10((unsigned __int8 **)(*a2 + 16), 1);
      v10 = *(_QWORD *)(v9 + 16);
      v12 = *(_QWORD *)(v10 + 40);
      v11 = *(_QWORD *)(v10 + 48);
      if (v11)
        v13 = 0;
      else
        v13 = v12 >= 2;
      if (!v13)
      {
        if (v12 < 2)
          return result;
        goto LABEL_69;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_69:
        v56 = a2[1];
        v57 = v12 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v56 + 96))(v56, v11);
          v11 += 2;
          v57 -= 2;
        }
        while (v57);
        return result;
      }
      goto LABEL_104;
    case 2:
      v14 = *a2;
      result = sub_20807EB10((unsigned __int8 **)(*a2 + 16), 2);
      v15 = *(_QWORD *)(v14 + 16);
      v17 = *(_QWORD *)(v15 + 40);
      v16 = *(_QWORD *)(v15 + 48);
      if (v16)
        v18 = 0;
      else
        v18 = v17 >= 4;
      if (!v18)
      {
        if (v17 < 4)
          return result;
        goto LABEL_73;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_73:
        v58 = a2[1];
        v59 = v17 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v58 + 104))(v58, v16);
          v16 += 4;
          v59 -= 4;
        }
        while (v59);
        return result;
      }
      goto LABEL_104;
    case 3:
      v19 = *a2;
      result = sub_20807EB10((unsigned __int8 **)(*a2 + 16), 3);
      v20 = *(_QWORD *)(v19 + 16);
      v22 = *(_QWORD *)(v20 + 40);
      v21 = *(_QWORD *)(v20 + 48);
      if (v21)
        v23 = 0;
      else
        v23 = v22 >= 8;
      if (!v23)
      {
        if (v22 < 8)
          return result;
        goto LABEL_77;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_77:
        v60 = a2[1];
        v61 = v22 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v60 + 120))(v60, v21);
          v21 += 8;
          v61 -= 8;
        }
        while (v61);
        return result;
      }
      goto LABEL_104;
    case 5:
      v24 = *a2;
      result = sub_20807EB10((unsigned __int8 **)(*a2 + 16), 5);
      v25 = *(_QWORD *)(v24 + 16);
      v27 = *(_QWORD *)(v25 + 40);
      v26 = *(_QWORD *)(v25 + 48);
      if (v26)
        v28 = 1;
      else
        v28 = v27 == 0;
      if (v28)
      {
        if (!v27)
          return result;
        goto LABEL_81;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_81:
        v63 = a2[1];
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v63 + 88))(v63, v26++);
          --v27;
        }
        while (v27);
        return result;
      }
      goto LABEL_104;
    case 6:
      v29 = *a2;
      result = sub_20807EB10((unsigned __int8 **)(*a2 + 16), 6);
      v30 = *(_QWORD *)(v29 + 16);
      v32 = *(_QWORD *)(v30 + 40);
      v31 = *(_QWORD *)(v30 + 48);
      if (v31)
        v33 = 0;
      else
        v33 = v32 >= 2;
      if (!v33)
      {
        if (v32 < 2)
          return result;
        goto LABEL_85;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_85:
        v64 = a2[1];
        v65 = v32 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v64 + 48))(v64, v31);
          v31 += 2;
          v65 -= 2;
        }
        while (v65);
        return result;
      }
      goto LABEL_104;
    case 7:
      v34 = *a2;
      result = sub_20807EB10((unsigned __int8 **)(*a2 + 16), 7);
      v35 = *(_QWORD *)(v34 + 16);
      v37 = *(_QWORD *)(v35 + 40);
      v36 = *(_QWORD *)(v35 + 48);
      if (v36)
        v38 = 0;
      else
        v38 = v37 >= 4;
      if (!v38)
      {
        if (v37 < 4)
          return result;
        goto LABEL_89;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_89:
        v66 = a2[1];
        v67 = v37 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v66 + 56))(v66, v36);
          v36 += 4;
          v67 -= 4;
        }
        while (v67);
        return result;
      }
      goto LABEL_104;
    case 8:
      v39 = *a2;
      result = sub_20807EB10((unsigned __int8 **)(*a2 + 16), 8);
      v40 = *(_QWORD *)(v39 + 16);
      v42 = *(_QWORD *)(v40 + 40);
      v41 = *(_QWORD *)(v40 + 48);
      if (v41)
        v43 = 0;
      else
        v43 = v42 >= 8;
      if (!v43)
      {
        if (v42 < 8)
          return result;
        goto LABEL_93;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_93:
        v68 = a2[1];
        v69 = v42 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v68 + 72))(v68, v41);
          v41 += 8;
          v69 -= 8;
        }
        while (v69);
        return result;
      }
      goto LABEL_104;
    case 11:
      v44 = *a2;
      result = sub_20807EB10((unsigned __int8 **)(*a2 + 16), 11);
      v45 = *(_QWORD *)(v44 + 16);
      v47 = *(_QWORD *)(v45 + 40);
      v46 = *(_QWORD *)(v45 + 48);
      if (v46)
        v48 = 0;
      else
        v48 = v47 >= 4;
      if (!v48)
      {
        if (v47 < 4)
          return result;
        goto LABEL_97;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_97:
        v70 = a2[1];
        v71 = v47 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v70 + 128))(v70, v46);
          v46 += 4;
          v71 -= 4;
        }
        while (v71);
        return result;
      }
      goto LABEL_104;
    case 12:
      v49 = *a2;
      result = sub_20807EB10((unsigned __int8 **)(*a2 + 16), 12);
      v50 = *(_QWORD *)(v49 + 16);
      v52 = *(_QWORD *)(v50 + 40);
      v51 = *(_QWORD *)(v50 + 48);
      if (v51)
        v53 = 0;
      else
        v53 = v52 >= 8;
      if (v53)
      {
        if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
        {
LABEL_104:
          abort();
        }
      }
      else if (v52 < 8)
      {
        return result;
      }
      v72 = a2[1];
      v73 = v52 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v72 + 136))(v72, v51);
        v51 += 8;
        v73 -= 8;
      }
      while (v73);
      return result;
    default:
      sub_2082056D4(a1);
  }
}

void sub_207EC3BAC(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D28, 0);
  if (v4)
  {
    sub_207EC4260(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D60, 0);
    if (v5)
    {
      sub_207EC6628(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076DE8, 0);
      if (v6)
      {
        sub_207EC7E3C(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076E20, 0);
        if (v7)
        {
          sub_207ECA204(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24C082DE0)
            sub_207ECBAF0(&v9, a1);
          else
            sub_207EC3D10(&v8, (uint64_t)a1);
        }
      }
    }
  }
}

void sub_207EC3D10(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  _BYTE *v30[26];
  _BYTE v31[24];
  __int128 v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  __int128 __p;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v30);
    sub_207E0AB10((uint64_t)v31, (uint64_t *)v30);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v31);
        if (!v45)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(uint64_t *, uint64_t))off_24C0765B0[v6])(&v29, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = *(_OWORD *)&v31[8];
    *(_BYTE *)(v3 + 64) = 0;
    if (v34)
    {
      v8 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(_QWORD *)(v3 + 56) = v8;
      v32 = 0uLL;
      v33 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v36;
    v10 = v35;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v39)
    {
      v11 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(_QWORD *)(v3 + 112) = v11;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v42)
    {
      v12 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(_QWORD *)(v3 + 144) = v12;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = __p;
      *(_QWORD *)(v3 + 176) = v44;
      __p = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = __p;
    if (!(_QWORD)__p)
      goto LABEL_46;
    v15 = *((_QWORD *)&__p + 1);
    v16 = (void *)__p;
    if (*((_QWORD *)&__p + 1) == (_QWORD)__p)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)__p;
LABEL_45:
    *((_QWORD *)&__p + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v30);
  sub_207E0AB10((uint64_t)v31, (uint64_t *)v30);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(uint64_t *, uint64_t))off_24C0765B0[v7])(&v29, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = *(_OWORD *)&v31[8];
    *(_BYTE *)(v3 + 64) = 0;
    if (v34)
    {
      v17 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(_QWORD *)(v3 + 56) = v17;
      v32 = 0uLL;
      v33 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v36;
    v19 = v35;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v39)
    {
      v20 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(_QWORD *)(v3 + 112) = v20;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v42)
    {
      v21 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(_QWORD *)(v3 + 144) = v21;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = __p;
      *(_QWORD *)(v3 + 176) = v44;
      __p = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v31);
  if (v45)
  {
LABEL_38:
    v14 = __p;
    if (!(_QWORD)__p)
      goto LABEL_46;
    v23 = *((_QWORD *)&__p + 1);
    v16 = (void *)__p;
    if (*((_QWORD *)&__p + 1) == (_QWORD)__p)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v42 && SHIBYTE(v41) < 0)
    operator delete((void *)v40);
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (v34 && SHIBYTE(v33) < 0)
    operator delete((void *)v32);
  sub_207D49CF4((uint64_t)v30);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(_QWORD *)a2;
  v30[0] = *(_BYTE **)(a2 + 8);
  v25 = (int)v30[0];
  *(_DWORD *)v31 = 6;
  (*(void (**)(uint64_t, _BYTE *))(v24 + 104))(a2, v31);
  if (v25 < 1)
  {
    if (*(_DWORD *)v31 < 3u)
      sub_207E1EB04((uint64_t)v31, a2, v4, *(unsigned int *)v31);
    else
      sub_207E1ED78(a2, v4, *(unsigned int *)v31);
  }
  else
  {
    sub_207E1E50C((int *)v30, a2, v4, *(unsigned int *)v31);
  }
  v26 = *(_QWORD *)a2;
  v29 = *(_QWORD *)(a2 + 8);
  v27 = v29;
  LODWORD(v30[0]) = 1;
  (*(void (**)(uint64_t, _BYTE **))(v26 + 104))(a2, v30);
  if (v27 < 1)
  {
    v30[0] = (_BYTE *)(v3 + 200);
    sub_207E41430((_BYTE *)a2, v30);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, v3 + 208);
    *(_OWORD *)v31 = xmmword_24C076898;
    v28 = *(unsigned __int8 *)(v3 + 200);
    v30[0] = (_BYTE *)(v3 + 200);
    v30[1] = (_BYTE *)a2;
    v30[2] = v31;
    sub_207ECDC24(v28, v30);
  }
  else
  {
    sub_207ECD774((int *)&v29, (_BYTE *)a2, (_BYTE *)(v3 + 200));
  }
}

void sub_207EC4218(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EC4260(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v27);
    sub_207E0AB10((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v27);
  sub_207E0AB10((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_207D49CF4((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E14108(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207EC4710((uint64_t)v27, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_207EC46C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EC4710(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v5;
  char *v6;
  int v7;
  int v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *exception;
  _BYTE *v14;

  sub_2081F5F4C(a2);
  v5 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v5)
    *(_BYTE *)(a2 + 104) = 1;
  v6 = (char *)sub_2081F6204((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v14 = 0;
  sub_20809778C(v6, &v14);
  if (HIDWORD(v14))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24C08F078;
    __cxa_throw(exception, (struct type_info *)&unk_24C08F090, (void (*)(void *))std::exception::~exception);
  }
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value_type";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v14 = a3;
  sub_207E3DB44((uint64_t *)a2, &v14);
  v8 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "size";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v8)
    *(_BYTE *)(a2 + 104) = 1;
  v9 = (char *)sub_2081F6204((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v14 = 0;
  sub_20809778C(v9, &v14);
  *((_QWORD *)a3 + 1) = v14;
  v10 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "lines2";
  *(_QWORD *)(a2 + 96) = 6;
  if (!v10)
    *(_BYTE *)(a2 + 104) = 1;
  sub_2081F5F4C(a2);
  sub_207EC48A0(*a3, (uint64_t)a3, a2);
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(a2 + 48) = v11 - 8;
  *(_QWORD *)(a2 + 72) = v12 - 8;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v11 - 16);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v12 - 16);
  *(_QWORD *)(a2 + 48) = v11 - 16;
  *(_QWORD *)(a2 + 72) = v12 - 16;
}

void sub_207EC48A0(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_207EC49C8(v3);
      break;
    case 1:
      sub_207EC4C80(v3);
      break;
    case 2:
      sub_207EC4F44(v3);
      break;
    case 3:
      sub_207EC520C(v3);
      break;
    case 5:
      sub_207EC5544(v3);
      break;
    case 6:
      sub_207EC57FC(v3);
      break;
    case 7:
      sub_207EC5AC0(v3);
      break;
    case 8:
      sub_207EC5D88(v3);
      break;
    case 11:
      sub_207EC60C0(v3);
      break;
    case 12:
      sub_207EC6374(v3);
      break;
    default:
      sub_2082056D4(a1);
  }
}

void sub_207EC49C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  void *__p;
  void *v21;
  char *v22;
  uint64_t v23;
  char *v24;

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_207CF94B8();
    v4 = (char *)operator new(4 * v2);
    v5 = &v4[v3];
    __p = v4;
    v22 = &v4[v3];
    bzero(v4, 4 * v2);
    v21 = v5;
  }
  if (v2)
  {
    v6 = (_QWORD *)a1[1];
    v7 = 2;
    do
    {
      sub_2081F5F4C((uint64_t)v6);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v8 = (uint64_t *)a1[1], v23 = 2, v24 = (char *)__p + v7 - 2, v9 = (char *)sub_2081F6204(v8), ++v8[14], sub_2081F631C(v9, (uint64_t)&v23), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v10 = (uint64_t *)a1[1];
      v23 = 2;
      v24 = (char *)__p + v7;
      v11 = (char *)sub_2081F6204(v10);
      ++v10[14];
      sub_2081F631C(v11, (uint64_t)&v23);
      v6 = (_QWORD *)a1[1];
      v12 = v6[6];
      v6[4] = *(_QWORD *)(v12 - 8);
      v13 = v6[9];
      v6[14] = *(_QWORD *)(v13 - 8);
      v6[6] = v12 - 8;
      v6[9] = v13 - 8;
      v7 += 4;
      --v2;
    }
    while (v2);
  }
  sub_20807DA08(&v23, 0, (uint64_t)&__p);
  v15 = v23;
  v14 = v24;
  if ((*(_BYTE *)(v23 + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v16 = *a1;
  v17 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  if (__p)
  {
    v21 = __p;
    operator delete(__p);
  }
}

void sub_207EC4C18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC4C80(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (4 * v2 < 0)
      sub_207DCF3A0();
    __p = operator new(8 * v2);
    v19 = (char *)__p + 8 * v2;
    bzero(__p, 8 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 4;
    do
    {
      sub_2081F5F4C((uint64_t)v3);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v5 = (uint64_t *)a1[1], v20 = 2, v21 = (char *)__p + v4 - 4, v6 = (char *)sub_2081F6204(v5), ++v5[14], sub_2081F7078(v6, (uint64_t)&v20), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 2;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2081F6204(v7);
      ++v7[14];
      sub_2081F7078(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 8;
      --v2;
    }
    while (v2);
  }
  sub_20807DD4C(&v20, 1, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if ((*(_BYTE *)(v20 + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_207EC4EDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC4F44(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 62)
      sub_207CA420C();
    __p = operator new(16 * v2);
    v19 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 8;
    do
    {
      sub_2081F5F4C((uint64_t)v3);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v5 = (uint64_t *)a1[1], v20 = 2, v21 = (char *)__p + v4 - 8, v6 = (char *)sub_2081F6204(v5), ++v5[14], sub_2081F71F0(v6, (uint64_t)&v20), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 2;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2081F6204(v7);
      ++v7[14];
      sub_2081F71F0(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  sub_20807E094(&v20, 2, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if ((*(_BYTE *)(v20 + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_207EC51A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC520C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  char *v9;
  _BYTE *v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  _BYTE *v14;
  _BYTE *v15;
  const void *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  void *__p;
  void *v22;
  char *v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*a1 + 8);
  v22 = 0;
  v23 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 61)
      sub_207CA420C();
    __p = operator new(32 * v2);
    v23 = (char *)__p + 32 * v2;
    bzero(__p, 32 * v2);
    v22 = v23;
  }
  if (v2)
  {
    v3 = 0;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_2081F5F4C((uint64_t)v4);
      v7 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_29;
      }
      v8 = (uint64_t *)a1[1];
      v9 = (char *)sub_2081F6204(v8);
      ++v8[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_2081F8AC4(v9, (uint64_t)&v24);
      v10 = v24;
      if (v25 != v24)
      {
        memmove(&v7[v3], v24, v25 - v24);
        v10 = v24;
      }
      if (v10)
      {
        v25 = v10;
        operator delete(v10);
      }
      v11 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_29:
        abort();
      }
      v12 = (uint64_t *)a1[1];
      v13 = (char *)sub_2081F6204(v12);
      ++v12[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_2081F8AC4(v13, (uint64_t)&v24);
      v14 = v24;
      if (v25 != v24)
      {
        memmove(&v11[v3 + 16], v24, v25 - v24);
        v14 = v24;
      }
      if (v14)
      {
        v25 = v14;
        operator delete(v14);
      }
      v4 = (_QWORD *)a1[1];
      v5 = v4[6];
      v4[4] = *(_QWORD *)(v5 - 8);
      v6 = v4[9];
      v4[14] = *(_QWORD *)(v6 - 8);
      v4[6] = v5 - 8;
      v4[9] = v6 - 8;
      v3 += 32;
      --v2;
    }
    while (v2);
  }
  sub_20807E3DC(&v24, 3, (uint64_t)&__p);
  v16 = v24;
  v15 = v25;
  if ((v24[56] & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v17 = *a1;
  v18 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v15;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  if (__p)
  {
    v22 = __p;
    operator delete(__p);
  }
}

void sub_207EC54C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC5544(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  void *__p;
  void *v21;
  char *v22;
  uint64_t v23;
  char *v24;

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_207CA420C();
    v4 = (char *)operator new(4 * v2);
    v5 = &v4[v3];
    __p = v4;
    v22 = &v4[v3];
    bzero(v4, 4 * v2);
    v21 = v5;
  }
  if (v2)
  {
    v6 = (_QWORD *)a1[1];
    v7 = 2;
    do
    {
      sub_2081F5F4C((uint64_t)v6);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v8 = (uint64_t *)a1[1], v23 = 2, v24 = (char *)__p + v7 - 2, v9 = (char *)sub_2081F6204(v8), ++v8[14], sub_2081F6E98(v9, (uint64_t)&v23), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v10 = (uint64_t *)a1[1];
      v23 = 2;
      v24 = (char *)__p + v7;
      v11 = (char *)sub_2081F6204(v10);
      ++v10[14];
      sub_2081F6E98(v11, (uint64_t)&v23);
      v6 = (_QWORD *)a1[1];
      v12 = v6[6];
      v6[4] = *(_QWORD *)(v12 - 8);
      v13 = v6[9];
      v6[14] = *(_QWORD *)(v13 - 8);
      v6[6] = v12 - 8;
      v6[9] = v13 - 8;
      v7 += 4;
      --v2;
    }
    while (v2);
  }
  sub_20807D868(&v23, 5, (uint64_t)&__p);
  v15 = v23;
  v14 = v24;
  if ((*(_BYTE *)(v23 + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v16 = *a1;
  v17 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  if (__p)
  {
    v21 = __p;
    operator delete(__p);
  }
}

void sub_207EC5794(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC57FC(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (4 * v2 < 0)
      sub_207CA420C();
    __p = operator new(8 * v2);
    v19 = (char *)__p + 8 * v2;
    bzero(__p, 8 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 4;
    do
    {
      sub_2081F5F4C((uint64_t)v3);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v5 = (uint64_t *)a1[1], v20 = 2, v21 = (char *)__p + v4 - 4, v6 = (char *)sub_2081F6204(v5), ++v5[14], sub_2081F6F88(v6, (uint64_t)&v20), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 2;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2081F6204(v7);
      ++v7[14];
      sub_2081F6F88(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 8;
      --v2;
    }
    while (v2);
  }
  sub_20807DBA8(&v20, 6, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if ((*(_BYTE *)(v20 + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_207EC5A58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC5AC0(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 62)
      sub_207CA420C();
    __p = operator new(16 * v2);
    v19 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 8;
    do
    {
      sub_2081F5F4C((uint64_t)v3);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v5 = (uint64_t *)a1[1], v20 = 2, v21 = (char *)__p + v4 - 8, v6 = (char *)sub_2081F6204(v5), ++v5[14], sub_2081F7134(v6, (uint64_t)&v20), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 2;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2081F6204(v7);
      ++v7[14];
      sub_2081F7134(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  sub_20807DEF0(&v20, 7, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if ((*(_BYTE *)(v20 + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_207EC5D20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC5D88(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  char *v9;
  _BYTE *v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  _BYTE *v14;
  _BYTE *v15;
  const void *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  void *__p;
  void *v22;
  char *v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*a1 + 8);
  v22 = 0;
  v23 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 61)
      sub_207CA420C();
    __p = operator new(32 * v2);
    v23 = (char *)__p + 32 * v2;
    bzero(__p, 32 * v2);
    v22 = v23;
  }
  if (v2)
  {
    v3 = 0;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_2081F5F4C((uint64_t)v4);
      v7 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_29;
      }
      v8 = (uint64_t *)a1[1];
      v9 = (char *)sub_2081F6204(v8);
      ++v8[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_2081F8788(v9, (uint64_t)&v24);
      v10 = v24;
      if (v25 != v24)
      {
        memmove(&v7[v3], v24, v25 - v24);
        v10 = v24;
      }
      if (v10)
      {
        v25 = v10;
        operator delete(v10);
      }
      v11 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_29:
        abort();
      }
      v12 = (uint64_t *)a1[1];
      v13 = (char *)sub_2081F6204(v12);
      ++v12[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_2081F8788(v13, (uint64_t)&v24);
      v14 = v24;
      if (v25 != v24)
      {
        memmove(&v11[v3 + 16], v24, v25 - v24);
        v14 = v24;
      }
      if (v14)
      {
        v25 = v14;
        operator delete(v14);
      }
      v4 = (_QWORD *)a1[1];
      v5 = v4[6];
      v4[4] = *(_QWORD *)(v5 - 8);
      v6 = v4[9];
      v4[14] = *(_QWORD *)(v6 - 8);
      v4[6] = v5 - 8;
      v4[9] = v6 - 8;
      v3 += 32;
      --v2;
    }
    while (v2);
  }
  sub_20807E238(&v24, 8, (uint64_t)&__p);
  v16 = v24;
  v15 = v25;
  if ((v24[56] & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v17 = *a1;
  v18 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v15;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  if (__p)
  {
    v22 = __p;
    operator delete(__p);
  }
}

void sub_207EC603C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC60C0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  void *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 62)
      sub_207D0CD58();
    __p = operator new(16 * v2);
    v21 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v20 = v21;
  }
  if (v2)
  {
    v3 = 8;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_2081F5F4C((uint64_t)v4);
      v5 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v6 = (uint64_t *)a1[1], v7 = sub_2081F6204(v6), ++v6[14], sub_2081F75DC(v7, (float *)&v5[v3 - 8]), (v8 = (char *)__p) == 0)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v9 = (uint64_t *)a1[1];
      v10 = sub_2081F6204(v9);
      ++v9[14];
      sub_2081F75DC(v10, (float *)&v8[v3]);
      v4 = (_QWORD *)a1[1];
      v11 = v4[6];
      v4[4] = *(_QWORD *)(v11 - 8);
      v12 = v4[9];
      v4[14] = *(_QWORD *)(v12 - 8);
      v4[6] = v11 - 8;
      v4[9] = v12 - 8;
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  sub_20807E580(v22, 11, (uint64_t)&__p);
  v14 = v22[0];
  v13 = v22[1];
  if ((*(_BYTE *)(v22[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
}

void sub_207EC630C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC6374(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  void *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 61)
      sub_207CA420C();
    __p = operator new(32 * v2);
    v21 = (char *)__p + 32 * v2;
    bzero(__p, 32 * v2);
    v20 = v21;
  }
  if (v2)
  {
    v3 = 16;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_2081F5F4C((uint64_t)v4);
      v5 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v6 = (uint64_t *)a1[1], v7 = sub_2081F6204(v6), ++v6[14], sub_2081F76E4(v7, (double *)&v5[v3 - 16]), (v8 = (char *)__p) == 0)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v9 = (uint64_t *)a1[1];
      v10 = sub_2081F6204(v9);
      ++v9[14];
      sub_2081F76E4(v10, (double *)&v8[v3]);
      v4 = (_QWORD *)a1[1];
      v11 = v4[6];
      v4[4] = *(_QWORD *)(v11 - 8);
      v12 = v4[9];
      v4[14] = *(_QWORD *)(v12 - 8);
      v4[6] = v11 - 8;
      v4[9] = v12 - 8;
      v3 += 32;
      --v2;
    }
    while (v2);
  }
  sub_20807E724(v22, 12, (uint64_t)&__p);
  v14 = v22[0];
  v13 = v22[1];
  if ((*(_BYTE *)(v22[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
}

void sub_207EC65C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_207EC6628(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v25;
  uint64_t v26[27];
  _BYTE v27[8];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v26);
    sub_207E0AB10((uint64_t)v27, v26);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v27);
        if (!v42)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v25, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v8 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v8;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v33;
    v10 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v11 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v11;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v12 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v12;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v15 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v40;
LABEL_45:
    *((_QWORD *)&v40 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v26);
  sub_207E0AB10((uint64_t)v27, v26);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v25, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v17 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v17;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v33;
    v19 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v20 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v20;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v21 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v21;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v27);
  if (v42)
  {
LABEL_38:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v23 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (v36 && SHIBYTE(v35) < 0)
    operator delete((void *)v34);
  if (v31 && SHIBYTE(v30) < 0)
    operator delete((void *)v29);
  sub_207D49CF4((uint64_t)v26);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E17BB8((uint64_t)v26, a2, v4);
  LODWORD(v26[0]) = 1;
  sub_20820BA20(a2[6], v26);
  return sub_207EC6AB4((uint64_t)v26, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_207EC6A6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_207EC6AB4(uint64_t a1, _QWORD *a2, unsigned __int8 *a3)
{
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD v10[3];
  __int128 v11;

  v5 = a2 + 2;
  sub_207E17CA8(a2 + 2);
  LOBYTE(v10[0]) = 0;
  sub_20820B6F8(a2[6], v10);
  *a3 = v10[0];
  sub_20820BBEC(a2[6], (_QWORD *)a3 + 1);
  v11 = xmmword_24C076898;
  v6 = *a3;
  v10[0] = a3;
  v10[1] = a2;
  v10[2] = &v11;
  sub_207EC6B7C(v6, v10);
  v7 = a2[4];
  result = (*(uint64_t (**)(_QWORD *))(a2[2] + 32))(v5);
  v9 = *(_QWORD *)(v7 - 16) - result + *(_QWORD *)(v7 - 8);
  if (v9)
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(*v5 + 40))(v5, v9);
  a2[4] -= 16;
  return result;
}

void sub_207EC6B7C(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_207EC6C24(a2);
      break;
    case 1:
      sub_207EC6DE4(a2);
      break;
    case 2:
      sub_207EC6FB4(a2);
      break;
    case 3:
      sub_207EC7188(a2);
      break;
    case 5:
      sub_207EC735C(a2);
      break;
    case 6:
      sub_207EC751C(a2);
      break;
    case 7:
      sub_207EC76EC(a2);
      break;
    case 8:
      sub_207EC78C0(a2);
      break;
    case 11:
      sub_207EC7A94(a2);
      break;
    case 12:
      sub_207EC7C68(a2);
      break;
    default:
      sub_2082056D4(a1);
  }
}

void sub_207EC6C24(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_207CF94B8();
    v4 = operator new(4 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = *(_QWORD *)(a1[1] + 48);
      do
      {
        sub_20820B6F8(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_20807DA08(v16, 0, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_207EC6D84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC6DE4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_207DCF3A0();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 2 * v6;
      do
      {
        sub_20820B88C(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_20807DD4C(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EC6F54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC6FB4(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_207CA420C();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_20820BA20(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_20807E094(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EC7128(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC7188(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_20820BBEC(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_20807E3DC(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EC72FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC735C(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_207CA420C();
    v4 = operator new(4 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = *(_QWORD *)(a1[1] + 48);
      do
      {
        sub_20820B648(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_20807D868(v16, 5, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_207EC74BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC751C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_207CA420C();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 2 * v6;
      do
      {
        sub_20820B7DC(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_20807DBA8(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EC768C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC76EC(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_207CA420C();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_20820B970(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_20807DEF0(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EC7860(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC78C0(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_20820BB04(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_20807E238(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EC7A34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC7A94(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_207D0CD58();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_20820BCC8(v7, (float *)v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_20807E580(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EC7C08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC7C68(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_20820BDF8(v7, (double *)v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_20807E724(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EC7DDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC7E3C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v27);
    sub_207E0AB10((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v27);
  sub_207E0AB10((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_207D49CF4((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E19198(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207EC82EC((uint64_t)v27, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_207EC82A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EC82EC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v5;
  char *v6;
  int v7;
  int v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *exception;
  _BYTE *v14;

  sub_2081F5AC0(a2);
  v5 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v5)
    *(_BYTE *)(a2 + 104) = 1;
  v6 = (char *)sub_2081F5D78((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v14 = 0;
  sub_208097288(v6, &v14);
  if (HIDWORD(v14))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24C08F078;
    __cxa_throw(exception, (struct type_info *)&unk_24C08F090, (void (*)(void *))std::exception::~exception);
  }
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value_type";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v14 = a3;
  sub_207E3F0C4((uint64_t *)a2, &v14);
  v8 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "size";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v8)
    *(_BYTE *)(a2 + 104) = 1;
  v9 = (char *)sub_2081F5D78((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v14 = 0;
  sub_208097288(v9, &v14);
  *((_QWORD *)a3 + 1) = v14;
  v10 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "lines2";
  *(_QWORD *)(a2 + 96) = 6;
  if (!v10)
    *(_BYTE *)(a2 + 104) = 1;
  sub_2081F5AC0(a2);
  sub_207EC847C(*a3, (uint64_t)a3, a2);
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(a2 + 48) = v11 - 8;
  *(_QWORD *)(a2 + 72) = v12 - 8;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v11 - 16);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v12 - 16);
  *(_QWORD *)(a2 + 48) = v11 - 16;
  *(_QWORD *)(a2 + 72) = v12 - 16;
}

void sub_207EC847C(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_207EC85A4(v3);
      break;
    case 1:
      sub_207EC885C(v3);
      break;
    case 2:
      sub_207EC8B20(v3);
      break;
    case 3:
      sub_207EC8DE8(v3);
      break;
    case 5:
      sub_207EC9120(v3);
      break;
    case 6:
      sub_207EC93D8(v3);
      break;
    case 7:
      sub_207EC969C(v3);
      break;
    case 8:
      sub_207EC9964(v3);
      break;
    case 11:
      sub_207EC9C9C(v3);
      break;
    case 12:
      sub_207EC9F50(v3);
      break;
    default:
      sub_2082056D4(a1);
  }
}

void sub_207EC85A4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  void *__p;
  void *v21;
  char *v22;
  uint64_t v23;
  char *v24;

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_207CF94B8();
    v4 = (char *)operator new(4 * v2);
    v5 = &v4[v3];
    __p = v4;
    v22 = &v4[v3];
    bzero(v4, 4 * v2);
    v21 = v5;
  }
  if (v2)
  {
    v6 = (_QWORD *)a1[1];
    v7 = 2;
    do
    {
      sub_2081F5AC0((uint64_t)v6);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v8 = (uint64_t *)a1[1], v23 = 2, v24 = (char *)__p + v7 - 2, v9 = (char *)sub_2081F5D78(v8), ++v8[14], sub_2081F5E90(v9, (uint64_t)&v23), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v10 = (uint64_t *)a1[1];
      v23 = 2;
      v24 = (char *)__p + v7;
      v11 = (char *)sub_2081F5D78(v10);
      ++v10[14];
      sub_2081F5E90(v11, (uint64_t)&v23);
      v6 = (_QWORD *)a1[1];
      v12 = v6[6];
      v6[4] = *(_QWORD *)(v12 - 8);
      v13 = v6[9];
      v6[14] = *(_QWORD *)(v13 - 8);
      v6[6] = v12 - 8;
      v6[9] = v13 - 8;
      v7 += 4;
      --v2;
    }
    while (v2);
  }
  sub_20807DA08(&v23, 0, (uint64_t)&__p);
  v15 = v23;
  v14 = v24;
  if ((*(_BYTE *)(v23 + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v16 = *a1;
  v17 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  if (__p)
  {
    v21 = __p;
    operator delete(__p);
  }
}

void sub_207EC87F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC885C(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (4 * v2 < 0)
      sub_207DCF3A0();
    __p = operator new(8 * v2);
    v19 = (char *)__p + 8 * v2;
    bzero(__p, 8 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 4;
    do
    {
      sub_2081F5AC0((uint64_t)v3);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v5 = (uint64_t *)a1[1], v20 = 2, v21 = (char *)__p + v4 - 4, v6 = (char *)sub_2081F5D78(v5), ++v5[14], sub_2081F65B8(v6, (uint64_t)&v20), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 2;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2081F5D78(v7);
      ++v7[14];
      sub_2081F65B8(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 8;
      --v2;
    }
    while (v2);
  }
  sub_20807DD4C(&v20, 1, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if ((*(_BYTE *)(v20 + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_207EC8AB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC8B20(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 62)
      sub_207CA420C();
    __p = operator new(16 * v2);
    v19 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 8;
    do
    {
      sub_2081F5AC0((uint64_t)v3);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v5 = (uint64_t *)a1[1], v20 = 2, v21 = (char *)__p + v4 - 8, v6 = (char *)sub_2081F5D78(v5), ++v5[14], sub_2081F6730(v6, (uint64_t)&v20), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 2;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2081F5D78(v7);
      ++v7[14];
      sub_2081F6730(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  sub_20807E094(&v20, 2, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if ((*(_BYTE *)(v20 + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_207EC8D80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC8DE8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  char *v9;
  _BYTE *v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  _BYTE *v14;
  _BYTE *v15;
  const void *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  void *__p;
  void *v22;
  char *v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*a1 + 8);
  v22 = 0;
  v23 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 61)
      sub_207CA420C();
    __p = operator new(32 * v2);
    v23 = (char *)__p + 32 * v2;
    bzero(__p, 32 * v2);
    v22 = v23;
  }
  if (v2)
  {
    v3 = 0;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_2081F5AC0((uint64_t)v4);
      v7 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_29;
      }
      v8 = (uint64_t *)a1[1];
      v9 = (char *)sub_2081F5D78(v8);
      ++v8[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_2081F80CC(v9, (uint64_t)&v24);
      v10 = v24;
      if (v25 != v24)
      {
        memmove(&v7[v3], v24, v25 - v24);
        v10 = v24;
      }
      if (v10)
      {
        v25 = v10;
        operator delete(v10);
      }
      v11 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_29:
        abort();
      }
      v12 = (uint64_t *)a1[1];
      v13 = (char *)sub_2081F5D78(v12);
      ++v12[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_2081F80CC(v13, (uint64_t)&v24);
      v14 = v24;
      if (v25 != v24)
      {
        memmove(&v11[v3 + 16], v24, v25 - v24);
        v14 = v24;
      }
      if (v14)
      {
        v25 = v14;
        operator delete(v14);
      }
      v4 = (_QWORD *)a1[1];
      v5 = v4[6];
      v4[4] = *(_QWORD *)(v5 - 8);
      v6 = v4[9];
      v4[14] = *(_QWORD *)(v6 - 8);
      v4[6] = v5 - 8;
      v4[9] = v6 - 8;
      v3 += 32;
      --v2;
    }
    while (v2);
  }
  sub_20807E3DC(&v24, 3, (uint64_t)&__p);
  v16 = v24;
  v15 = v25;
  if ((v24[56] & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v17 = *a1;
  v18 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v15;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  if (__p)
  {
    v22 = __p;
    operator delete(__p);
  }
}

void sub_207EC909C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC9120(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  void *__p;
  void *v21;
  char *v22;
  uint64_t v23;
  char *v24;

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_207CA420C();
    v4 = (char *)operator new(4 * v2);
    v5 = &v4[v3];
    __p = v4;
    v22 = &v4[v3];
    bzero(v4, 4 * v2);
    v21 = v5;
  }
  if (v2)
  {
    v6 = (_QWORD *)a1[1];
    v7 = 2;
    do
    {
      sub_2081F5AC0((uint64_t)v6);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v8 = (uint64_t *)a1[1], v23 = 2, v24 = (char *)__p + v7 - 2, v9 = (char *)sub_2081F5D78(v8), ++v8[14], sub_2081F63D8(v9, (uint64_t)&v23), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v10 = (uint64_t *)a1[1];
      v23 = 2;
      v24 = (char *)__p + v7;
      v11 = (char *)sub_2081F5D78(v10);
      ++v10[14];
      sub_2081F63D8(v11, (uint64_t)&v23);
      v6 = (_QWORD *)a1[1];
      v12 = v6[6];
      v6[4] = *(_QWORD *)(v12 - 8);
      v13 = v6[9];
      v6[14] = *(_QWORD *)(v13 - 8);
      v6[6] = v12 - 8;
      v6[9] = v13 - 8;
      v7 += 4;
      --v2;
    }
    while (v2);
  }
  sub_20807D868(&v23, 5, (uint64_t)&__p);
  v15 = v23;
  v14 = v24;
  if ((*(_BYTE *)(v23 + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v16 = *a1;
  v17 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  if (__p)
  {
    v21 = __p;
    operator delete(__p);
  }
}

void sub_207EC9370(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC93D8(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (4 * v2 < 0)
      sub_207CA420C();
    __p = operator new(8 * v2);
    v19 = (char *)__p + 8 * v2;
    bzero(__p, 8 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 4;
    do
    {
      sub_2081F5AC0((uint64_t)v3);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v5 = (uint64_t *)a1[1], v20 = 2, v21 = (char *)__p + v4 - 4, v6 = (char *)sub_2081F5D78(v5), ++v5[14], sub_2081F64C8(v6, (uint64_t)&v20), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 2;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2081F5D78(v7);
      ++v7[14];
      sub_2081F64C8(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 8;
      --v2;
    }
    while (v2);
  }
  sub_20807DBA8(&v20, 6, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if ((*(_BYTE *)(v20 + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_207EC9634(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC969C(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 62)
      sub_207CA420C();
    __p = operator new(16 * v2);
    v19 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 8;
    do
    {
      sub_2081F5AC0((uint64_t)v3);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v5 = (uint64_t *)a1[1], v20 = 2, v21 = (char *)__p + v4 - 8, v6 = (char *)sub_2081F5D78(v5), ++v5[14], sub_2081F6674(v6, (uint64_t)&v20), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 2;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2081F5D78(v7);
      ++v7[14];
      sub_2081F6674(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  sub_20807DEF0(&v20, 7, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if ((*(_BYTE *)(v20 + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_207EC98FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC9964(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  char *v9;
  _BYTE *v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  _BYTE *v14;
  _BYTE *v15;
  const void *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  void *__p;
  void *v22;
  char *v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*a1 + 8);
  v22 = 0;
  v23 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 61)
      sub_207CA420C();
    __p = operator new(32 * v2);
    v23 = (char *)__p + 32 * v2;
    bzero(__p, 32 * v2);
    v22 = v23;
  }
  if (v2)
  {
    v3 = 0;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_2081F5AC0((uint64_t)v4);
      v7 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_29;
      }
      v8 = (uint64_t *)a1[1];
      v9 = (char *)sub_2081F5D78(v8);
      ++v8[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_2081F7A10(v9, (uint64_t)&v24);
      v10 = v24;
      if (v25 != v24)
      {
        memmove(&v7[v3], v24, v25 - v24);
        v10 = v24;
      }
      if (v10)
      {
        v25 = v10;
        operator delete(v10);
      }
      v11 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_29:
        abort();
      }
      v12 = (uint64_t *)a1[1];
      v13 = (char *)sub_2081F5D78(v12);
      ++v12[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_2081F7A10(v13, (uint64_t)&v24);
      v14 = v24;
      if (v25 != v24)
      {
        memmove(&v11[v3 + 16], v24, v25 - v24);
        v14 = v24;
      }
      if (v14)
      {
        v25 = v14;
        operator delete(v14);
      }
      v4 = (_QWORD *)a1[1];
      v5 = v4[6];
      v4[4] = *(_QWORD *)(v5 - 8);
      v6 = v4[9];
      v4[14] = *(_QWORD *)(v6 - 8);
      v4[6] = v5 - 8;
      v4[9] = v6 - 8;
      v3 += 32;
      --v2;
    }
    while (v2);
  }
  sub_20807E238(&v24, 8, (uint64_t)&__p);
  v16 = v24;
  v15 = v25;
  if ((v24[56] & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v17 = *a1;
  v18 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v15;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  if (__p)
  {
    v22 = __p;
    operator delete(__p);
  }
}

void sub_207EC9C18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC9C9C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  void *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 62)
      sub_207D0CD58();
    __p = operator new(16 * v2);
    v21 = (char *)__p + 16 * v2;
    bzero(__p, 16 * v2);
    v20 = v21;
  }
  if (v2)
  {
    v3 = 8;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_2081F5AC0((uint64_t)v4);
      v5 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v6 = (uint64_t *)a1[1], v7 = sub_2081F5D78(v6), ++v6[14], sub_2081F6B44(v7, (float *)&v5[v3 - 8]), (v8 = (char *)__p) == 0)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v9 = (uint64_t *)a1[1];
      v10 = sub_2081F5D78(v9);
      ++v9[14];
      sub_2081F6B44(v10, (float *)&v8[v3]);
      v4 = (_QWORD *)a1[1];
      v11 = v4[6];
      v4[4] = *(_QWORD *)(v11 - 8);
      v12 = v4[9];
      v4[14] = *(_QWORD *)(v12 - 8);
      v4[6] = v11 - 8;
      v4[9] = v12 - 8;
      v3 += 16;
      --v2;
    }
    while (v2);
  }
  sub_20807E580(v22, 11, (uint64_t)&__p);
  v14 = v22[0];
  v13 = v22[1];
  if ((*(_BYTE *)(v22[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
}

void sub_207EC9EE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EC9F50(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  void *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((unint64_t)(4 * v2) >> 61)
      sub_207CA420C();
    __p = operator new(32 * v2);
    v21 = (char *)__p + 32 * v2;
    bzero(__p, 32 * v2);
    v20 = v21;
  }
  if (v2)
  {
    v3 = 16;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_2081F5AC0((uint64_t)v4);
      v5 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v6 = (uint64_t *)a1[1], v7 = sub_2081F5D78(v6), ++v6[14], sub_2081F6C74(v7, (double *)&v5[v3 - 16]), (v8 = (char *)__p) == 0)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v9 = (uint64_t *)a1[1];
      v10 = sub_2081F5D78(v9);
      ++v9[14];
      sub_2081F6C74(v10, (double *)&v8[v3]);
      v4 = (_QWORD *)a1[1];
      v11 = v4[6];
      v4[4] = *(_QWORD *)(v11 - 8);
      v12 = v4[9];
      v4[14] = *(_QWORD *)(v12 - 8);
      v4[6] = v11 - 8;
      v4[9] = v12 - 8;
      v3 += 32;
      --v2;
    }
    while (v2);
  }
  sub_20807E724(v22, 12, (uint64_t)&__p);
  v14 = v22[0];
  v13 = v22[1];
  if ((*(_BYTE *)(v22[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
}

void sub_207ECA19C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECA204(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  void *__p;
  uint64_t v33;
  _BYTE *v34;
  _BYTE v35[24];
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)&__p);
    sub_207E0AB10((uint64_t)v35, (uint64_t *)&__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v35);
        if (!v49)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v31, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = *(_OWORD *)&v35[8];
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v8 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v8;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v40;
    v10 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v11 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v11;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v12 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v12;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v15 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v47;
LABEL_45:
    *((_QWORD *)&v47 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)&__p);
  sub_207E0AB10((uint64_t)v35, (uint64_t *)&__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v31, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = *(_OWORD *)&v35[8];
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v17 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v17;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v40;
    v19 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v20 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v20;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v21 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v21;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v35);
  if (v49)
  {
LABEL_38:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v23 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v46 && SHIBYTE(v45) < 0)
    operator delete((void *)v44);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  sub_207D49CF4((uint64_t)&__p);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  LODWORD(__p) = 6;
  sub_208209DC8(a2, &__p);
  v24 = __p;
  if (__p >= 6)
    v25 = 6;
  else
    v25 = __p;
  if (v25 < 3)
    sub_207E1B3DC((uint64_t)&__p, a2, v4, v25);
  else
    sub_207E1B5CC(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_20820B068(a2, (uint64_t)&__p);
      if (SHIBYTE(v34) < 0)
      {
        if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_92:
          v30 = 0;
          if (SHIBYTE(v34) < 0)
            goto LABEL_95;
          goto LABEL_81;
        }
      }
      else if (SHIBYTE(v34) == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_92;
      }
      v30 = 1;
      if (SHIBYTE(v34) < 0)
LABEL_95:
        operator delete(__p);
LABEL_81:
      if (*(_BYTE *)(a2 + 131))
        v29 = 0;
      else
        v29 = v30;
    }
    while ((v29 & 1) != 0);
  }
  LODWORD(__p) = 1;
  sub_208209DC8(a2, &__p);
  LOBYTE(__p) = 0;
  sub_208209484(a2, &__p);
  *(_BYTE *)(v3 + 200) = (_BYTE)__p;
  sub_20820A270(a2, (_QWORD *)(v3 + 208));
  *(_OWORD *)v35 = xmmword_24C076898;
  v26 = *(unsigned __int8 *)(v3 + 200);
  __p = (void *)(v3 + 200);
  v33 = a2;
  v34 = v35;
  sub_207ECA858(v26, &__p);
  if (!*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_20820B068(a2, (uint64_t)&__p);
      if (SHIBYTE(v34) < 0)
      {
        if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_77:
          v28 = 0;
          if (SHIBYTE(v34) < 0)
            goto LABEL_80;
          goto LABEL_66;
        }
      }
      else if (SHIBYTE(v34) == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_77;
      }
      v28 = 1;
      if (SHIBYTE(v34) < 0)
LABEL_80:
        operator delete(__p);
LABEL_66:
      if (*(_BYTE *)(a2 + 131))
        v27 = 0;
      else
        v27 = v28;
    }
    while ((v27 & 1) != 0);
  }
}

void sub_207ECA810(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207ECA858(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_207ECA900(a2);
      break;
    case 1:
      sub_207ECAABC(a2);
      break;
    case 2:
      sub_207ECAC88(a2);
      break;
    case 3:
      sub_207ECAE58(a2);
      break;
    case 5:
      sub_207ECB028(a2);
      break;
    case 6:
      sub_207ECB1E4(a2);
      break;
    case 7:
      sub_207ECB3B0(a2);
      break;
    case 8:
      sub_207ECB580(a2);
      break;
    case 11:
      sub_207ECB750(a2);
      break;
    case 12:
      sub_207ECB920(a2);
      break;
    default:
      sub_2082056D4(a1);
  }
}

void sub_207ECA900(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_207CF94B8();
    v4 = operator new(4 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = a1[1];
      do
      {
        sub_208209484(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_20807DA08(v16, 0, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_207ECAA5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECAABC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_207DCF3A0();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        sub_208209920(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_20807DD4C(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECAC28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECAC88(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_207CA420C();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_208209DC8(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_20807E094(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECADF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECAE58(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_20820A270(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_20807E3DC(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECAFC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECB028(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v14 = 0;
  v15 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_207CA420C();
    v4 = operator new(4 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = a1[1];
      do
      {
        sub_20820923C(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_20807D868(v16, 5, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if ((*(_BYTE *)(v16[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_207ECB184(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECB1E4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_207CA420C();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        sub_2082096CC(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_20807DBA8(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECB350(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECB3B0(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_207CA420C();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_208209B74(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_20807DEF0(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECB520(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECB580(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_20820A01C(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_20807E238(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECB6F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECB750(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_207D0CD58();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_20820A740(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_20807E580(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECB8C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECB920(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_20820A994(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_20807E724(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECBA90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECBAF0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v25);
    sub_207E0AB10((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v25);
  sub_207E0AB10((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_207D49CF4((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E1CD58((uint64_t)v25, a2, v4);
  sub_207ECBF64((uint64_t)v25, a2, v3 + 200);
}

void sub_207ECBF1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207ECBF64(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  std::logic_error *exception;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_207CA4068(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  a2[6] = v3 + 4;
  sub_208072ECC(a2);
  sub_207ECC034(a2, a3);
  v9 = a2[12];
  v10 = a2[9];
  a2[6] = *(_QWORD *)(v9 - 8) + *(_QWORD *)(v10 - 8) + 8;
  a2[9] = v10 - 8;
  a2[12] = v9 - 8;
}

void sub_207ECC020(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_207ECC034(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  BOOL v7;
  unint64_t v8;
  std::logic_error *exception;
  _QWORD v10[3];
  __int128 v11;

  v2 = a1[6];
  v3 = a1[7];
  if (v3 <= v2)
    goto LABEL_6;
  v4 = a1[3];
  v5 = *(unsigned __int8 *)(v4 + v2);
  v6 = v2 + 1;
  a1[6] = v6;
  *(_BYTE *)a2 = v5;
  v7 = v3 >= v6;
  v8 = v3 - v6;
  if (!v7)
    v8 = 0;
  if (v8 <= 7)
  {
LABEL_6:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_207CA4068(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(v4 + v6);
  a1[6] += 8;
  v11 = xmmword_24C076898;
  v10[0] = a2;
  v10[1] = a1;
  v10[2] = &v11;
  sub_207ECC134(v5, v10);
}

void sub_207ECC10C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_207ECC120(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_207ECC134(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_207ECC1DC(a2);
      break;
    case 1:
      sub_207ECC3FC(a2);
      break;
    case 2:
      sub_207ECC624(a2);
      break;
    case 3:
      sub_207ECC850(a2);
      break;
    case 5:
      sub_207ECCA7C(a2);
      break;
    case 6:
      sub_207ECCC9C(a2);
      break;
    case 7:
      sub_207ECCEC4(a2);
      break;
    case 8:
      sub_207ECD0F0(a2);
      break;
    case 11:
      sub_207ECD31C(a2);
      break;
    case 12:
      sub_207ECD548(a2);
      break;
    default:
      sub_2082056D4(a1);
  }
}

void sub_207ECC1DC(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_207CF94B8();
    v4 = (char *)operator new(4 * v2);
    v5 = &v4[v3];
    __p = v4;
    v21 = &v4[v3];
    bzero(v4, v3);
    v20 = &v4[v3];
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  v6 = v5 - v4;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  memcpy(v4, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_20807DA08(v22, 0, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if ((*(_BYTE *)(v22[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECC38C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECC3FC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_207DCF3A0();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v22 = &v5[2 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_20807DD4C(v23, 1, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECC5B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECC624(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_207CA420C();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v22 = &v5[4 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_20807E094(v23, 2, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECC7E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECC850(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v22 = &v5[8 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_20807E3DC(v23, 3, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECCA0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECCA7C(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_207CA420C();
    v4 = (char *)operator new(4 * v2);
    v5 = &v4[v3];
    __p = v4;
    v21 = &v4[v3];
    bzero(v4, v3);
    v20 = &v4[v3];
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  v6 = v5 - v4;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  memcpy(v4, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_20807D868(v22, 5, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if ((*(_BYTE *)(v22[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECCC2C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECCC9C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_207CA420C();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v22 = &v5[2 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_20807DBA8(v23, 6, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECCE54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECCEC4(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_207CA420C();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v22 = &v5[4 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_20807DEF0(v23, 7, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECD080(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECD0F0(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v22 = &v5[8 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_20807E238(v23, 8, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECD2AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECD31C(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_207D0CD58();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v22 = &v5[4 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_20807E580(v23, 11, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECD4D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECD548(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v21 = 0;
  v22 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v22 = &v5[8 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_20807E724(v23, 12, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if ((*(_BYTE *)(v23[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECD704(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECD774(int *a1, _BYTE *a2, _BYTE *a3)
{
  int v5;
  int v7;
  unsigned int v8;
  __int128 *v9;
  _BYTE *v10[3];
  __int128 v11;

  v5 = *a1;
  if (*a1 == 2)
  {
    LODWORD(v10[0]) = 1;
    (*(void (**)(_BYTE *, _BYTE **))(*(_QWORD *)a2 + 104))(a2, v10);
    if (LODWORD(v10[0]) >= 2)
    {
      v8 = v10[0];
      v9 = sub_207ECD874();
      sub_208212838((std::string *)v9, v8, 1u);
    }
    v5 = *a1;
  }
  if (v5 >= 1)
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 16))(a2);
  v10[0] = a3;
  sub_207E41430(a2, v10);
  (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)a2 + 120))(a2, a3 + 8);
  v11 = xmmword_24C076898;
  v7 = *a3;
  v10[0] = a3;
  v10[1] = a2;
  v10[2] = &v11;
  sub_207ECDC24(v7, v10);
  if (v5 >= 1)
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 24))(a2);
}

__int128 *sub_207ECD874()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D510);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D510))
    return &xmmword_25452D4F8;
  v2 = sub_207ECD950();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_207CA40D8(&xmmword_25452D4F8, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_25452D508 = v2->__r_.__value_.__r.__words[2];
    xmmword_25452D4F8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D4F8, &dword_207C77000);
  __cxa_guard_release(&qword_25452D510);
  return &xmmword_25452D4F8;
}

void sub_207ECD938(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D510);
  _Unwind_Resume(a1);
}

std::string *sub_207ECD950()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D530);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D530))
    return &stru_25452D518;
  sub_207ECDA40((uint64_t)__p);
  sub_207D50234((char *)__p, &stru_25452D518);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25452D518, &dword_207C77000);
  __cxa_guard_release(&qword_25452D530);
  return &stru_25452D518;
}

void sub_207ECDA00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25452D530);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25452D530);
  _Unwind_Resume(a1);
}

void sub_207ECDA40(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25452D550);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25452D550))
  {
    sub_2082159F8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::conio::LinesSample<2>]", qword_25452D538);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452D538, &dword_207C77000);
    __cxa_guard_release(&qword_25452D550);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25452D570);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25452D570))
  {
    v5 = sub_207D49434(qword_25452D538, "<", 0);
    sub_207D49330(qword_25452D538, 0, v5, qword_25452D558);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452D558, &dword_207C77000);
    __cxa_guard_release(&qword_25452D570);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_25452D590);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25452D590))
  {
    sub_208215C6C((uint64_t)qword_25452D558, (uint64_t)&xmmword_25452D578);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D578, &dword_207C77000);
    __cxa_guard_release(&qword_25452D590);
  }
  if (byte_25452D58F < 0)
  {
    sub_207CA40D8((_BYTE *)a1, (void *)xmmword_25452D578, *((unint64_t *)&xmmword_25452D578 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_25452D578;
    *(_QWORD *)(a1 + 16) = unk_25452D588;
  }
}

void sub_207ECDBDC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D590);
  _Unwind_Resume(a1);
}

void sub_207ECDBF4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D570);
  _Unwind_Resume(a1);
}

void sub_207ECDC0C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D550);
  _Unwind_Resume(a1);
}

void sub_207ECDC24(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_207ECDCCC(a2);
      break;
    case 1:
      sub_207ECDE74(a2);
      break;
    case 2:
      sub_207ECE030(a2);
      break;
    case 3:
      sub_207ECE1F0(a2);
      break;
    case 5:
      sub_207ECE3B0(a2);
      break;
    case 6:
      sub_207ECE558(a2);
      break;
    case 7:
      sub_207ECE714(a2);
      break;
    case 8:
      sub_207ECE8D4(a2);
      break;
    case 11:
      sub_207ECEA94(a2);
      break;
    case 12:
      sub_207ECEC54(a2);
      break;
    default:
      sub_2082056D4(a1);
  }
}

void sub_207ECDCCC(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  _QWORD v15[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_207CF94B8();
    v4 = (char *)operator new(4 * v2);
    __p = v4;
    v14 = &v4[v3];
    bzero(v4, v3);
    v13 = &v4[v3];
    v5 = a1[1];
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 80))(v5, v4++);
      --v3;
    }
    while (v3);
  }
  sub_20807DA08(v15, 0, (uint64_t)&__p);
  v7 = v15[0];
  v6 = v15[1];
  if ((*(_BYTE *)(v15[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECDE14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECDE74(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_207DCF3A0();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 96))(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_20807DD4C(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECDFD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECE030(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_207CA420C();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 104))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_20807E094(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECE190(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECE1F0(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 120))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_20807E3DC(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECE350(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECE3B0(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  _QWORD v15[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v13 = 0;
  v14 = 0;
  __p = 0;
  if (4 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_207CA420C();
    v4 = (char *)operator new(4 * v2);
    __p = v4;
    v14 = &v4[v3];
    bzero(v4, v3);
    v13 = &v4[v3];
    v5 = a1[1];
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 88))(v5, v4++);
      --v3;
    }
    while (v3);
  }
  sub_20807D868(v15, 5, (uint64_t)&__p);
  v7 = v15[0];
  v6 = v15[1];
  if ((*(_BYTE *)(v15[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECE4F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECE558(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 < 0)
      sub_207CA420C();
    v4 = 8 * v2;
    v5 = (char *)operator new(8 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 48))(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_20807DBA8(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECE6B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECE714(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_207CA420C();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 56))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_20807DEF0(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECE874(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECE8D4(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 72))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_20807E238(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECEA34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECEA94(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 62)
      sub_207D0CD58();
    v4 = 16 * v2;
    v5 = (char *)operator new(16 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 128))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_20807E580(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECEBF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ECEC54(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v3 = 4 * v2;
  v16 = 0;
  v17 = 0;
  __p = 0;
  if (4 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 32 * v2;
    v5 = (char *)operator new(32 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 136))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_20807E724(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if ((*(_BYTE *)(v18[0] + 56) & 3) != 0
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ECEDB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_207ECEE14@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _OWORD *v4;
  _OWORD *v5;
  unsigned __int128 *v6;
  unsigned __int128 v7;
  _QWORD *result;

  v4 = operator new(0xF0uLL);
  v5 = v4;
  *(_QWORD *)v4 = off_24C0789B0;
  *(_OWORD *)((char *)v4 + 8) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  v4[2] = *(_OWORD *)(a1 + 32);
  *((_BYTE *)v4 + 48) = 0;
  *((_BYTE *)v4 + 72) = 0;
  if (*(_BYTE *)(a1 + 72))
  {
    v4[3] = *(_OWORD *)(a1 + 48);
    *((_QWORD *)v4 + 8) = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 56) = 0;
    *(_QWORD *)(a1 + 64) = 0;
    *(_QWORD *)(a1 + 48) = 0;
    *((_BYTE *)v4 + 72) = 1;
  }
  *((_BYTE *)v4 + 80) = 0;
  *((_BYTE *)v4 + 104) = 0;
  if (*(_BYTE *)(a1 + 104))
  {
    v4[5] = *(_OWORD *)(a1 + 80);
    *((_QWORD *)v4 + 12) = *(_QWORD *)(a1 + 96);
    *(_QWORD *)(a1 + 88) = 0;
    *(_QWORD *)(a1 + 96) = 0;
    *(_QWORD *)(a1 + 80) = 0;
    *((_BYTE *)v4 + 104) = 1;
  }
  *((_BYTE *)v4 + 144) = 0;
  v4[7] = *(_OWORD *)(a1 + 112);
  *((_QWORD *)v4 + 16) = *(_QWORD *)(a1 + 128);
  *((_BYTE *)v4 + 192) = 0;
  if (*(_BYTE *)(a1 + 192))
  {
    v4[9] = *(_OWORD *)(a1 + 144);
    *((_QWORD *)v4 + 20) = *(_QWORD *)(a1 + 160);
    *(_QWORD *)(a1 + 152) = 0;
    *(_QWORD *)(a1 + 160) = 0;
    *(_QWORD *)(a1 + 144) = 0;
    v6 = (unsigned __int128 *)(a1 + 176);
    do
      v7 = __ldaxp(v6);
    while (__stlxp(v7, v6));
    v4[11] = v7;
    *((_BYTE *)v4 + 192) = 1;
  }
  *((_BYTE *)v4 + 208) = 0;
  *((_BYTE *)v4 + 232) = 0;
  if (*(_BYTE *)(a1 + 232))
  {
    v4[13] = *(_OWORD *)(a1 + 208);
    *((_QWORD *)v4 + 28) = *(_QWORD *)(a1 + 224);
    *(_QWORD *)(a1 + 216) = 0;
    *(_QWORD *)(a1 + 224) = 0;
    *(_QWORD *)(a1 + 208) = 0;
    *((_BYTE *)v4 + 232) = 1;
  }
  *(_QWORD *)v4 = off_24C078930;
  *a2 = &off_24C078D18;
  a2[1] = v4;
  result = operator new(0x20uLL);
  *result = &off_24C078E28;
  result[1] = 0;
  result[2] = 0;
  result[3] = v5;
  a2[2] = result;
  return result;
}

void sub_207ECEF8C(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_207ECF018(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_207ECEFA0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = off_24C0789B0;
  sub_207D49CF4((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_207ECF018(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = off_24C0789B0;
  sub_207D49CF4((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(a1);
  }
  else
  {
LABEL_5:
    operator delete(a1);
  }
}

uint64_t sub_207ECF090(uint64_t a1)
{
  return a1 + 32;
}

uint64_t sub_207ECF098(_QWORD *a1, _QWORD *lpsrc)
{
  uint64_t result;
  uint64_t v5;
  unsigned __int8 *v6;
  int v7;
  unsigned __int8 *v8;
  _QWORD v9[3];
  char v10;

  result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C078D58, (const struct __class_type_info *)&unk_24C078970, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return 1;
    }
    else
    {
      v5 = result;
      v6 = (unsigned __int8 *)a1[1];
      v7 = *v6;
      v8 = *(unsigned __int8 **)(v5 + 8);
      if (v7 == *v8)
      {
        v9[0] = &v10;
        v9[1] = v6;
        v9[2] = v8;
        return sub_20807F93C(v7, (uint64_t)v9);
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

void sub_207ECF140(uint64_t a1)
{
  __int128 *v2;
  void *__p;
  char v4;

  v2 = (__int128 *)sub_207ED03EC();
  sub_207ECF1F4(a1);
  sub_207D49528(v2, (uint64_t)"{", (uint64_t)&__p, (uint64_t)",", a1 + 32, (uint64_t)"}");
  if (v4 < 0)
    operator delete(__p);
}

void sub_207ECF1D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_207ECF1F4(uint64_t a1)
{
  unsigned __int8 v2;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;

  v2 = atomic_load((unsigned __int8 *)&qword_25452D730);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25452D730))
  {
    v4 = sub_207ED003C();
    v5 = *((_QWORD *)v4 + 1);
    if (*((char *)v4 + 23) >= 0)
    {
      v6 = *((unsigned __int8 *)v4 + 23);
    }
    else
    {
      v4 = *(__int128 **)v4;
      v6 = v5;
    }
    sub_207CF75E4((char *)v4, v6, "::", 2, 0, (uint64_t)&v8);
    if (*(char *)(v9 - 1) < 0)
    {
      sub_207CA40D8(&xmmword_25452D718, *(void **)(v9 - 24), *(_QWORD *)(v9 - 16));
    }
    else
    {
      v7 = *(_OWORD *)(v9 - 24);
      qword_25452D728 = *(_QWORD *)(v9 - 8);
      xmmword_25452D718 = v7;
    }
    sub_207C99DE0(&v8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D718, &dword_207C77000);
    __cxa_guard_release(&qword_25452D730);
  }
  return sub_207ED07AC(&xmmword_25452D718, (uint64_t)"{", (unsigned __int8 **)(a1 + 8), (uint64_t)"}");
}

void sub_207ECF304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_207C99DE0(&a9);
  __cxa_guard_abort(&qword_25452D730);
  _Unwind_Resume(a1);
}

void sub_207ECF324(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D730);
  _Unwind_Resume(a1);
}

void sub_207ECF33C(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 13;
}

void sub_207ECF368(uint64_t (***lpsrc)()@<X0>, _QWORD *a2@<X8>)
{
  sub_207F0677C(lpsrc, 13, a2);
}

_QWORD *sub_207ECF3A0(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = off_24C0789B0;
  sub_207D49CF4((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_207ECF418(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = off_24C0789B0;
  sub_207D49CF4((uint64_t)(a1 + 4));
  v2 = (std::__shared_weak_count *)a1[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(a1);
  }
  else
  {
LABEL_5:
    operator delete(a1);
  }
}

uint64_t sub_207ECF490(uint64_t a1)
{
  __int128 *v2;

  v2 = sub_207ECFAD8();
  return sub_207ECF5E4(v2, (uint64_t)"{", (unsigned __int8 **)(a1 + 8), (uint64_t)",", a1 + 32, (uint64_t)"}");
}

uint64_t sub_207ECF4E8(uint64_t a1)
{
  uint64_t result;
  _BYTE v2[24];
  int v3;
  char v4;
  _QWORD v5[2];

  v3 = 0;
  sub_207ECF810((uint64_t)v5, (uint64_t)v2, (unsigned __int8 **)(a1 + 8));
  if (v3 == -1)
    sub_207CA9F48();
  v5[0] = &v4;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24C0765F8[v3])(v5, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24C0765E0[v3])(v5, v2);
  return result;
}

void sub_207ECF580(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;

  if (a13 != -1)
    ((void (*)(uint64_t, char *))off_24C0765E0[a13])(v13 - 17, &a10);
  _Unwind_Resume(exception_object);
}

void sub_207ECF5B8(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t sub_207ECF5E4(__int128 *a1, uint64_t a2, unsigned __int8 **a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  char v12;
  char v13;
  __int128 __dst;
  uint64_t v15;
  int v16;
  __int128 *p_dst;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 **p_p_dst;

  v16 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_207CA40D8(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v15 = *((_QWORD *)a1 + 2);
  }
  v16 = 1;
  p_dst = &__dst;
  v18 = a2;
  v19 = &__dst;
  v20 = a2;
  v21 = a2;
  sub_207CD45F4((uint64_t *)&v19, (uint64_t)&__dst);
  sub_207ECF810((uint64_t)&v13, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v18 = a4;
  v19 = &__dst;
  v20 = a4;
  v21 = a4;
  if (v16 == -1)
    sub_207CA9F48();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C0766E8[v16])(&p_p_dst, &__dst);
  sub_207D48768((uint64_t)&v12, (uint64_t)&__dst, a5);
  p_dst = &__dst;
  v18 = a6;
  v19 = &__dst;
  v20 = a6;
  v21 = a6;
  if (v16 == -1)
    sub_207CA9F48();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C0766E8[v16])(&p_p_dst, &__dst);
  if (v16 == -1)
    sub_207CA9F48();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C0765F8[v16])(&p_dst, &__dst);
  if (v16 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C0765E0[v16])(&p_dst, &__dst);
  return result;
}

void sub_207ECF780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207ECF798(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207ECF7AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207ECF7C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207ECF7D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207ECF7E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207ECF7FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207ECF810(uint64_t a1, uint64_t a2, unsigned __int8 **a3)
{
  char *v5;
  _QWORD *v6;
  _QWORD *v7;
  int v8;
  size_t v9;
  void **v10;
  unint64_t v11;
  unint64_t v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *__dst[2];
  unint64_t v22;
  _QWORD *v23[5];
  _QWORD *v24;

  v5 = (char *)operator new(0x118uLL);
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_OWORD *)v5 + 2) = 0u;
  *((_OWORD *)v5 + 3) = 0u;
  *((_OWORD *)v5 + 4) = 0u;
  *((_OWORD *)v5 + 5) = 0u;
  *((_OWORD *)v5 + 6) = 0u;
  *((_OWORD *)v5 + 7) = 0u;
  *((_OWORD *)v5 + 8) = 0u;
  *((_OWORD *)v5 + 9) = 0u;
  *((_OWORD *)v5 + 10) = 0u;
  *((_OWORD *)v5 + 11) = 0u;
  *((_OWORD *)v5 + 12) = 0u;
  *((_OWORD *)v5 + 13) = 0u;
  *((_OWORD *)v5 + 14) = 0u;
  *((_OWORD *)v5 + 15) = 0u;
  *((_OWORD *)v5 + 16) = 0u;
  *((_QWORD *)v5 + 34) = 0;
  sub_207CA2878((uint64_t)v5);
  v24 = v5;
  v6 = sub_207CBAB98((_QWORD *)v5 + 2, (uint64_t)"{", 1);
  LOBYTE(v23[0]) = **a3;
  v7 = sub_208205930(v6, v23);
  sub_207CBAB98(v7, (uint64_t)",", 1);
  v23[0] = v5 + 16;
  sub_20807AB0C(**a3, a3, v23);
  sub_207CBAB98((_QWORD *)v5 + 2, (uint64_t)"}", 1);
  v8 = *((_DWORD *)v5 + 30);
  if ((v8 & 0x10) != 0)
  {
    v11 = *((_QWORD *)v5 + 14);
    v12 = *((_QWORD *)v5 + 9);
    if (v11 < v12)
    {
      *((_QWORD *)v5 + 14) = v12;
      v11 = v12;
    }
    v13 = (const void *)*((_QWORD *)v5 + 8);
    v9 = v11 - (_QWORD)v13;
    if (v11 - (unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v8 & 8) == 0)
    {
      v9 = 0;
      HIBYTE(v22) = 0;
      v10 = __dst;
      goto LABEL_14;
    }
    v13 = (const void *)*((_QWORD *)v5 + 5);
    v9 = *((_QWORD *)v5 + 7) - (_QWORD)v13;
    if (v9 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_207C95C50();
  }
  if (v9 >= 0x17)
  {
    v14 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v14 = v9 | 7;
    v15 = v14 + 1;
    v10 = (void **)operator new(v14 + 1);
    __dst[1] = (void *)v9;
    v22 = v15 | 0x8000000000000000;
    __dst[0] = v10;
    goto LABEL_13;
  }
  HIBYTE(v22) = v9;
  v10 = __dst;
  if (v9)
LABEL_13:
    memmove(v10, v13, v9);
LABEL_14:
  *((_BYTE *)v10 + v9) = 0;
  v16 = v24;
  if (v24)
  {
    v17 = MEMORY[0x24BEDB7F0];
    v18 = *MEMORY[0x24BEDB7F0];
    *v24 = *MEMORY[0x24BEDB7F0];
    v19 = *(_QWORD *)(v17 + 72);
    *(_QWORD *)((char *)v16 + *(_QWORD *)(v18 - 24)) = *(_QWORD *)(v17 + 64);
    v16[3] = MEMORY[0x24BEDB848] + 16;
    v16[2] = v19;
    if (*((char *)v16 + 111) < 0)
      operator delete((void *)v16[11]);
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD027B8](v16 + 16);
    operator delete(v16);
  }
  v23[0] = (_QWORD *)a2;
  v23[1] = __dst;
  v23[2] = (_QWORD *)a2;
  v23[3] = __dst;
  v23[4] = __dst;
  v20 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v20 == -1)
    sub_207CA9F48();
  v24 = v23;
  ((void (*)(_QWORD **, uint64_t))off_24C0765C8[v20])(&v24, a2);
  if (SHIBYTE(v22) < 0)
    operator delete(__dst[0]);
}

void sub_207ECFA9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;

  operator delete(v15);
  _Unwind_Resume(a1);
}

void sub_207ECFAC4(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_2082155DC((void **)(v1 - 56));
  _Unwind_Resume(a1);
}

__int128 *sub_207ECFAD8()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D5B0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D5B0))
    return &xmmword_25452D598;
  v2 = sub_207ECFBB4();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_207CA40D8(&xmmword_25452D598, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_25452D5A8 = v2->__r_.__value_.__r.__words[2];
    xmmword_25452D598 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D598, &dword_207C77000);
  __cxa_guard_release(&qword_25452D5B0);
  return &xmmword_25452D598;
}

void sub_207ECFB9C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D5B0);
  _Unwind_Resume(a1);
}

std::string *sub_207ECFBB4()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D5D0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D5D0))
    return &stru_25452D5B8;
  sub_207ECFE58((uint64_t)__p);
  sub_207ECFCA4((char *)__p, &stru_25452D5B8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25452D5B8, &dword_207C77000);
  __cxa_guard_release(&qword_25452D5D0);
  return &stru_25452D5B8;
}

void sub_207ECFC64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25452D5D0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25452D5D0);
  _Unwind_Resume(a1);
}

void sub_207ECFCA4(char *a1@<X0>, std::string *a2@<X8>)
{
  __int128 *v4;
  __int128 v5;
  __int128 *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void **v10;
  void **v11;
  void *v12;
  void *__p;
  void **v14;
  void *__dst[2];
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = sub_207ED003C();
  if (*((char *)v4 + 23) < 0)
  {
    sub_207CA40D8(__dst, *(void **)v4, *((_QWORD *)v4 + 1));
  }
  else
  {
    v5 = *v4;
    v16 = *((_QWORD *)v4 + 2);
    *(_OWORD *)__dst = v5;
  }
  v6 = sub_207D49134();
  if (*((char *)v6 + 23) < 0)
  {
    sub_207CA40D8(&v17, *(void **)v6, *((_QWORD *)v6 + 1));
  }
  else
  {
    v7 = *v6;
    v18 = *((_QWORD *)v6 + 2);
    v17 = v7;
  }
  sub_207CAA110(&__p, (uint64_t)__dst, 2uLL);
  sub_208215D20(a1, (uint64_t *)&__p, a2, v8, v9);
  v10 = (void **)__p;
  if (__p)
  {
    v11 = v14;
    v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = __p;
    }
    v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0)
    goto LABEL_19;
}

void sub_207ECFE08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_207C99DE0((void **)&a9);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_207ECFE58(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25452D690);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25452D690))
  {
    sub_2082159F8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::con::Lines<3>>]", qword_25452D678);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452D678, &dword_207C77000);
    __cxa_guard_release(&qword_25452D690);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25452D6B0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25452D6B0))
  {
    v5 = sub_207D49434(qword_25452D678, "<", 0);
    sub_207D49330(qword_25452D678, 0, v5, qword_25452D698);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452D698, &dword_207C77000);
    __cxa_guard_release(&qword_25452D6B0);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_25452D6D0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25452D6D0))
  {
    sub_208215C6C((uint64_t)qword_25452D698, (uint64_t)&xmmword_25452D6B8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D6B8, &dword_207C77000);
    __cxa_guard_release(&qword_25452D6D0);
  }
  if (byte_25452D6CF < 0)
  {
    sub_207CA40D8((_BYTE *)a1, (void *)xmmword_25452D6B8, *((unint64_t *)&xmmword_25452D6B8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_25452D6B8;
    *(_QWORD *)(a1 + 16) = unk_25452D6C8;
  }
}

void sub_207ECFFF4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D6D0);
  _Unwind_Resume(a1);
}

void sub_207ED000C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D6B0);
  _Unwind_Resume(a1);
}

void sub_207ED0024(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D690);
  _Unwind_Resume(a1);
}

__int128 *sub_207ED003C()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D5F0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D5F0))
    return &xmmword_25452D5D8;
  v2 = sub_207ED0118();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_207CA40D8(&xmmword_25452D5D8, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_25452D5E8 = v2->__r_.__value_.__r.__words[2];
    xmmword_25452D5D8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D5D8, &dword_207C77000);
  __cxa_guard_release(&qword_25452D5F0);
  return &xmmword_25452D5D8;
}

void sub_207ED0100(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D5F0);
  _Unwind_Resume(a1);
}

std::string *sub_207ED0118()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D610);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D610))
    return &stru_25452D5F8;
  sub_207ED0208((uint64_t)__p);
  sub_207E36DD8((char *)__p, &stru_25452D5F8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25452D5F8, &dword_207C77000);
  __cxa_guard_release(&qword_25452D610);
  return &stru_25452D5F8;
}

void sub_207ED01C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25452D610);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25452D610);
  _Unwind_Resume(a1);
}

void sub_207ED0208(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25452D630);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25452D630))
  {
    sub_2082159F8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::con::Lines<3>]", qword_25452D618);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452D618, &dword_207C77000);
    __cxa_guard_release(&qword_25452D630);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25452D650);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25452D650))
  {
    v5 = sub_207D49434(qword_25452D618, "<", 0);
    sub_207D49330(qword_25452D618, 0, v5, qword_25452D638);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452D638, &dword_207C77000);
    __cxa_guard_release(&qword_25452D650);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_25452D670);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25452D670))
  {
    sub_208215C6C((uint64_t)qword_25452D638, (uint64_t)&xmmword_25452D658);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D658, &dword_207C77000);
    __cxa_guard_release(&qword_25452D670);
  }
  if (byte_25452D66F < 0)
  {
    sub_207CA40D8((_BYTE *)a1, (void *)xmmword_25452D658, *((unint64_t *)&xmmword_25452D658 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_25452D658;
    *(_QWORD *)(a1 + 16) = unk_25452D668;
  }
}

void sub_207ED03A4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D670);
  _Unwind_Resume(a1);
}

void sub_207ED03BC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D650);
  _Unwind_Resume(a1);
}

void sub_207ED03D4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D630);
  _Unwind_Resume(a1);
}

std::string *sub_207ED03EC()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void *v8[3];
  void *v9[2];
  char v10;
  void *__dst[2];
  uint64_t v12;
  void *v13[2];
  uint64_t v14;
  __int128 v15;
  std::string::size_type v16;
  void *__p[2];
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25452D6F0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25452D6F0))
  {
    sub_207C96EE8(v9, "viz::PackageData");
    v2 = sub_207ED003C();
    if (*((char *)v2 + 23) < 0)
    {
      sub_207CA40D8(__dst, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      v12 = *((_QWORD *)v2 + 2);
      *(_OWORD *)__dst = v3;
    }
    *(_OWORD *)v13 = *(_OWORD *)"viz::Package";
    v14 = 0xC00000000000000;
    v4 = sub_207ED06B4();
    if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_207CA40D8(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
    }
    else
    {
      v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
      v16 = v4->__r_.__value_.__r.__words[2];
      v15 = v5;
    }
    *(_OWORD *)__p = *(_OWORD *)"void";
    v18 = 0x400000000000000;
    sub_207CAA110(v8, (uint64_t)__dst, 4uLL);
    sub_208215D20((char *)v9, (uint64_t *)v8, &stru_25452D6D8, v6, v7);
    sub_207C99DE0(v8);
    if (SHIBYTE(v18) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v16) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v14) & 0x80000000) == 0)
          goto LABEL_13;
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v16) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v15);
    if ((SHIBYTE(v14) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v12) & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v13[0]);
    if ((SHIBYTE(v12) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v10 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25452D6D8, &dword_207C77000);
        __cxa_guard_release(&qword_25452D6F0);
        return &stru_25452D6D8;
      }
LABEL_20:
      operator delete(v9[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_20;
  }
  return &stru_25452D6D8;
}

void sub_207ED05D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  sub_207C99DE0(&a10);
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_25452D6F0);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_25452D6F0);
  _Unwind_Resume(a1);
}

std::string *sub_207ED06B4()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D710);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D710))
    return &stru_25452D6F8;
  sub_2082159F8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 13U]", __p);
  sub_208215E98((uint64_t)__p, &stru_25452D6F8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25452D6F8, &dword_207C77000);
  __cxa_guard_release(&qword_25452D710);
  return &stru_25452D6F8;
}

void sub_207ED076C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25452D710);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25452D710);
  _Unwind_Resume(a1);
}

uint64_t sub_207ED07AC(__int128 *a1, uint64_t a2, unsigned __int8 **a3, uint64_t a4)
{
  uint64_t result;
  char v8;
  __int128 __dst;
  uint64_t v10;
  int v11;
  __int128 *p_dst;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 **p_p_dst;

  v11 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_207CA40D8(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v10 = *((_QWORD *)a1 + 2);
  }
  v11 = 1;
  p_dst = &__dst;
  v13 = a2;
  v14 = &__dst;
  v15 = a2;
  v16 = a2;
  sub_207CD45F4((uint64_t *)&v14, (uint64_t)&__dst);
  sub_207ECF810((uint64_t)&v8, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v13 = a4;
  v14 = &__dst;
  v15 = a4;
  v16 = a4;
  if (v11 == -1)
    sub_207CA9F48();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C0766E8[v11])(&p_p_dst, &__dst);
  if (v11 == -1)
    sub_207CA9F48();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C0765F8[v11])(&p_dst, &__dst);
  if (v11 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C0765E0[v11])(&p_dst, &__dst);
  return result;
}

void sub_207ED08EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207ED0904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207ED0918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207ED092C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207ED0940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

BOOL sub_207ED0954(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  unsigned __int8 *v11;
  int v12;
  unsigned __int8 *v13;
  _BOOL8 v14;
  _QWORD v16[5];
  uint64_t *v17;
  _BYTE *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  _QWORD *v23;
  char v24;
  _BYTE v25[16];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[16];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[6];

  v36[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_207E372B8(v4, (uint64_t)v31);
  }
  else if (v5 == 1)
  {
    sub_207E370A0(v4, (uint64_t)v31);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    sub_207E02E5C(v4, (uint64_t)v31);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_207E372B8(v6, (uint64_t)v25);
  }
  else if (v7 == 1)
  {
    sub_207E370A0(v6, (uint64_t)v25);
  }
  else
  {
    if (v7)
      sub_207CA9F48();
    sub_207E02E5C(v6, (uint64_t)v25);
  }
  v18 = v31;
  v19 = &v32;
  v20 = &v33;
  v21 = &v34;
  v22 = &v35;
  v23 = v36;
  v16[0] = v25;
  v16[1] = &v26;
  v16[2] = &v27;
  v16[3] = &v28;
  v16[4] = &v29;
  v17 = &v30;
  if (!sub_207EFF314((uint64_t)&v24, &v18, v16))
    goto LABEL_26;
  if (!*((_BYTE *)v23 + 24) || !*((_BYTE *)v17 + 24))
  {
    if ((*((_BYTE *)v23 + 24) != 0) == (*((_BYTE *)v17 + 24) != 0))
      goto LABEL_22;
LABEL_26:
    v14 = 0;
    goto LABEL_27;
  }
  v8 = (unsigned __int8 *)*v23;
  v9 = (unsigned __int8 *)v23[1];
  v10 = (unsigned __int8 *)*v17;
  if (&v9[-*v23] != (unsigned __int8 *)(v17[1] - *v17))
    goto LABEL_26;
  if (v8 != v9)
  {
    while (sub_207EFE5C8(v8, v10))
    {
      v8 += 96;
      v10 += 96;
      if (v8 == v9)
        goto LABEL_22;
    }
    goto LABEL_26;
  }
LABEL_22:
  if (*(unsigned __int8 *)(a1 + 200) != *(unsigned __int8 *)(a2 + 200))
    goto LABEL_26;
  if (*(_QWORD *)(a1 + 208) != *(_QWORD *)(a2 + 208))
    goto LABEL_26;
  v11 = *(unsigned __int8 **)(a1 + 216);
  v12 = *v11;
  v13 = *(unsigned __int8 **)(a2 + 216);
  if (v12 != *v13)
    goto LABEL_26;
  v18 = v16;
  v19 = (uint64_t *)v11;
  v20 = (uint64_t *)v13;
  v14 = sub_20807F93C(v12, (uint64_t)&v18);
LABEL_27:
  sub_207D49CF4((uint64_t)v25);
  sub_207D49CF4((uint64_t)v31);
  return v14;
}

void sub_207ED0B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a23);
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_207ED0B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_207ED0BAC(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  uint64_t *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076B88, 0);
  if (v4)
  {
    sub_207ED0FB8(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = (uint64_t *)__dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076BD0, 0);
    if (v5)
    {
      sub_207ED2888(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076C58, 0);
      if (v6)
      {
        sub_207ED34C4(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076CA0, 0);
        if (v7)
        {
          sub_207ED4D94(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24C082C60)
            sub_207ED57E8(&v9, (uint64_t)a1);
          else
            sub_207ED0D10(&v8, a1);
        }
      }
    }
  }
}

void sub_207ED0D10(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  __int128 *v12;
  int v13;
  unsigned int v14;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v14 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v9 = v14;
    if (v8 >= 1)
    {
      if (v8 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E3CE18((uint64_t)a2, v4, v9);
      goto LABEL_16;
    }
    sub_207E3CE18((uint64_t)a2, v4, v14);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v14 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v11 = v14;
    if (v10 >= 1)
    {
      if (v10 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E3C790((uint64_t)a2, v4, v11);
      goto LABEL_16;
    }
    sub_207E3C790((uint64_t)a2, v4, v14);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = a2[2];
    v14 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v7 = v14;
    if (v6 >= 1)
    {
      if (v6 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E12E90((uint64_t)a2, v4, v7);
LABEL_16:
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
      goto LABEL_17;
    }
    sub_207E12E90((uint64_t)a2, v4, v14);
  }
LABEL_17:
  v12 = (__int128 *)(v3 + 200);
  v13 = a2[2];
  v14 = 1;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
  if (v13 < 1)
  {
    sub_207ED5E50(a2, v12);
  }
  else
  {
    if (v13 == 2)
    {
      v14 = 1;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_207ED5E50(a2, v12);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

void sub_207ED0FB8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E383C8(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F1E44(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F3DDC(a2, &v18);
      sub_207E0BDBC(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E37A58(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F1E44(a2);
  v18 = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F3DDC(a2, &v18);
  sub_207ED12B8(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_207ED12B8(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  int v6;
  unsigned __int8 *v7;
  uint64_t v8;
  int v9;
  _BYTE *v10;
  _QWORD *v11;
  BOOL v12;
  unsigned __int8 *v13;
  int v14;
  void **v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  __int128 v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  __int128 *v24;
  void **v25;

  v21 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v22 = *((_QWORD *)a2 + 2);
  v23 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "value_type";
    *(_QWORD *)(a1 + 80) = 10;
    if (!v6)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v24 = &v21;
  sub_207E392A0(a1, (_BYTE **)&v24);
  v7 = *(unsigned __int8 **)(a1 + 40);
  if (*v7 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "size";
    v8 = a1 + 72;
    v10 = (_BYTE *)(a1 + 88);
    v9 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 4;
    v11 = (_QWORD *)(a1 + 80);
    if (!v9)
      *v10 = 1;
    goto LABEL_16;
  }
  v11 = (_QWORD *)(a1 + 80);
  v8 = a1 + 72;
  v10 = (_BYTE *)(a1 + 88);
  if (!*(_BYTE *)(a1 + 88)
    || *(_QWORD *)(a1 + 80) != 7
    || (**(_DWORD **)v8 == *(_DWORD *)"version"
      ? (v12 = *(_DWORD *)(*(_QWORD *)v8 + 3) == *(_DWORD *)"sion")
      : (v12 = 0),
        !v12))
  {
LABEL_16:
    LOBYTE(v24) = 6;
    v25 = (void **)*((_QWORD *)&v21 + 1);
    v13 = (unsigned __int8 *)sub_2081F1A98(a1);
    v14 = *v13;
    *v13 = v24;
    LOBYTE(v24) = v14;
    v15 = (void **)*((_QWORD *)v13 + 1);
    *((_QWORD *)v13 + 1) = v25;
    v25 = v15;
    sub_20806DC2C(&v25, v14);
    v7 = *(unsigned __int8 **)(a1 + 40);
  }
  if (*v7 <= 1u)
  {
    v16 = *v10;
    *(_QWORD *)v8 = "lines3";
    *v11 = 6;
    if (!v16)
      *v10 = 1;
  }
  sub_2081F1E44(a1);
  sub_207ED1518(v21, (uint64_t)&v21, a1);
  v17 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a1 + 56) = v17 - 8;
  if (*(_BYTE *)(a1 + 88))
    *v10 = 0;
  v18 = v23;
  if (v23)
  {
    v19 = (unint64_t *)&v23->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
}

void sub_207ED14E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  void ***v13;

  sub_20806DC2C(v13, a13);
  sub_207DCBDC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207ED1504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207DCBDC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

unsigned __int8 **sub_207ED1518(int a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 **result;
  _QWORD v4[2];

  v4[0] = a2;
  v4[1] = a3;
  switch(a1)
  {
    case 0:
      result = sub_207ED1640(v4);
      break;
    case 1:
      result = sub_207ED1814(v4);
      break;
    case 2:
      result = sub_207ED19E8(v4);
      break;
    case 3:
      result = sub_207ED1BBC(v4);
      break;
    case 5:
      result = sub_207ED1D90(v4);
      break;
    case 6:
      result = sub_207ED1F64(v4);
      break;
    case 7:
      result = sub_207ED2138(v4);
      break;
    case 8:
      result = sub_207ED230C(v4);
      break;
    case 11:
      result = sub_207ED24E0(v4);
      break;
    case 12:
      result = sub_207ED26B4(v4);
      break;
    default:
      sub_2082056D4(a1);
  }
  return result;
}

unsigned __int8 **sub_207ED1640(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  size_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 0);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 1;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) == 0;
  if (!v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_19;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F1E44((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2081F1FC0(v10, &v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 3;
      sub_2081F1FC0(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 6;
      if (!--v6)
        return result;
    }
LABEL_19:
    abort();
  }
  do
  {
    sub_2081F1E44((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2081F1FC0(v7, &v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 3;
    sub_2081F1FC0(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 6;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207ED1814(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 1);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 2uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F1E44((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2081F4624(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 6;
      sub_2081F4624(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 12;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F1E44((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2081F4624(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 6;
    sub_2081F4624(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 12;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207ED19E8(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 2);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F1E44((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2081F4894(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 12;
      sub_2081F4894(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 24;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F1E44((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2081F4894(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 12;
    sub_2081F4894(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 24;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207ED1BBC(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 3);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F1E44((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2081F4B04(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 24;
      sub_2081F4B04(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 48;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F1E44((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2081F4B04(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 24;
    sub_2081F4B04(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 48;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207ED1D90(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  size_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 5);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 1;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) == 0;
  if (!v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_19;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F1E44((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2081F43B4(v10, &v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 3;
      sub_2081F43B4(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 6;
      if (!--v6)
        return result;
    }
LABEL_19:
    abort();
  }
  do
  {
    sub_2081F1E44((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2081F43B4(v7, &v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 3;
    sub_2081F43B4(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 6;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207ED1F64(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 6);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 2uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F1E44((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2081F44EC(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 6;
      sub_2081F44EC(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 12;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F1E44((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2081F44EC(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 6;
    sub_2081F44EC(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 12;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207ED2138(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 7);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F1E44((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2081F475C(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 12;
      sub_2081F475C(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 24;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F1E44((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2081F475C(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 12;
    sub_2081F475C(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 24;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207ED230C(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 8);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F1E44((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2081F49CC(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 24;
      sub_2081F49CC(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 48;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F1E44((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2081F49CC(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 24;
    sub_2081F49CC(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 48;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207ED24E0(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 11);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F1E44((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2081F50E4(v10, (float **)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 12;
      sub_2081F50E4(v11, (float **)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 24;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F1E44((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2081F50E4(v7, (float **)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 12;
    sub_2081F50E4(v8, (float **)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 24;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207ED26B4(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 12);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F1E44((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2081F5504(v10, &v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 24;
      sub_2081F5504(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 48;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F1E44((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2081F5504(v7, &v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 24;
    sub_2081F5504(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 48;
    --v6;
  }
  while (v6);
  return result;
}

void sub_207ED2888(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = a2[3];
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_208210C8C(&v20, 4u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v7 + 8);
    }
    sub_20820C2C0(a2[3]);
    sub_207E39730((uint64_t)a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = a2[3];
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_208210C8C(&v20, 5u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v8 + 8);
    }
    sub_20820C2C0(a2[3]);
    sub_207E39614((uint64_t)a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = a2[3];
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_208210C8C(&v20, 6u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v6 + 8);
    }
    sub_20820C2C0(a2[3]);
    sub_207E0E660((uint64_t)a2, v4, 6u);
  }
  v9 = a2[3];
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_20820C0E8((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = a2[3];
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_208210C8C(&v20, 1u);
  }
  else
  {
    sub_208210F00((uint64_t)&v20, v14 + 8);
  }
  sub_20820C2C0(a2[3]);
  sub_207ED2B08(a2, (__int128 *)(v3 + 200));
  v15 = a2[3];
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_20820C0E8((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_207ED2B08(uint64_t *a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  __int128 v11;
  uint64_t v12;
  std::__shared_weak_count *v13;
  uint64_t *v14[3];
  __int128 v15;

  v11 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v12 = *((_QWORD *)a2 + 2);
  v13 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v6 = a1[3];
  if (*(_BYTE *)(v6 + 40))
  {
    v14[0] = (uint64_t *)(v6 + 16);
    sub_2082100A4(v14, v11);
  }
  else
  {
    if ((char)v11 < 0)
    {
      LOBYTE(v14[0]) = -52;
      BYTE1(v14[0]) = v11;
    }
    else
    {
      LOBYTE(v14[0]) = v11;
    }
    std::ostream::write();
  }
  v7 = a1[3];
  if (*(_BYTE *)(v7 + 40))
  {
    v14[0] = (uint64_t *)(v7 + 16);
    sub_20821166C(v14, *((unint64_t *)&v11 + 1));
  }
  else
  {
    sub_208211974();
  }
  v15 = xmmword_24C0768A8;
  v14[0] = (uint64_t *)&v11;
  v14[1] = a1;
  v14[2] = (uint64_t *)&v15;
  sub_207ED2C6C(v11, v14);
  v8 = v13;
  if (v13)
  {
    v9 = (unint64_t *)&v13->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
}

void sub_207ED2C58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207DCBDC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_207ED2C6C(int a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int *v18;
  unint64_t v19;
  BOOL v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  BOOL v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int16 *v40;
  unint64_t v41;
  BOOL v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int *v48;
  unint64_t v49;
  BOOL v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  BOOL v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unsigned int *v64;
  unint64_t v65;
  BOOL v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t *v72;
  unint64_t v73;
  BOOL v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  __int128 v91;
  uint64_t v92;

  v92 = *MEMORY[0x24BDAC8D0];
  switch(a1)
  {
    case 0:
      v3 = *a2;
      result = (uint64_t)sub_20807EB10((unsigned __int8 **)(*a2 + 16), 0);
      v5 = *(_QWORD *)(v3 + 16);
      v7 = *(_QWORD *)(v5 + 40);
      v6 = *(char **)(v5 + 48);
      if (v6)
        v8 = 1;
      else
        v8 = v7 == 0;
      if (!v8)
      {
        result = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v9 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v9 + 40))
      {
        for (*(_QWORD *)&v91 = v9 + 16; v7; --v7)
          result = (uint64_t)sub_2082100A4((uint64_t **)&v91, *v6++);
      }
      else
      {
        for (; v7; --v7)
        {
          v78 = *v6;
          if (v78 < 0)
          {
            LOBYTE(v91) = -52;
            BYTE1(v91) = v78;
          }
          else
          {
            LOBYTE(v91) = *v6;
          }
          result = std::ostream::write();
          ++v6;
        }
      }
      break;
    case 1:
      v10 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 1);
      v11 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v11 + 40);
      v12 = *(_QWORD *)(v11 + 48);
      if (v12)
        v14 = 0;
      else
        v14 = v13 >= 2;
      if (v14
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_144;
      }
      v15 = a2[1];
      *(_QWORD *)&v91 = v13 >> 1;
      *((_QWORD *)&v91 + 1) = v12;
      result = sub_20820B4B0(*(_QWORD *)(v15 + 24), &v91);
      break;
    case 2:
      v16 = *a2;
      result = (uint64_t)sub_20807EB10((unsigned __int8 **)(*a2 + 16), 2);
      v17 = *(_QWORD *)(v16 + 16);
      v19 = *(_QWORD *)(v17 + 40);
      v18 = *(unsigned int **)(v17 + 48);
      if (v18)
        v20 = 0;
      else
        v20 = v19 >= 4;
      if (v20)
      {
        result = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v21 = v19 >> 2;
      v22 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v22 + 40))
      {
        *(_QWORD *)&v91 = v22 + 16;
        if (v19 >= 4)
        {
          v23 = 4 * v21;
          do
          {
            result = (uint64_t)sub_208210C8C((uint64_t **)&v91, *v18++);
            v23 -= 4;
          }
          while (v23);
        }
      }
      else if (v19 >= 4)
      {
        v79 = v22 + 8;
        v80 = 4 * v21;
        do
        {
          result = sub_208210F00((uint64_t)&v91, v79);
          ++v18;
          v80 -= 4;
        }
        while (v80);
      }
      break;
    case 3:
      v24 = *a2;
      result = (uint64_t)sub_20807EB10((unsigned __int8 **)(*a2 + 16), 3);
      v25 = *(_QWORD *)(v24 + 16);
      v27 = *(_QWORD *)(v25 + 40);
      v26 = *(unint64_t **)(v25 + 48);
      if (v26)
        v28 = 0;
      else
        v28 = v27 >= 8;
      if (v28)
      {
        result = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v29 = v27 >> 3;
      v30 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v30 + 40))
      {
        *(_QWORD *)&v91 = v30 + 16;
        if (v27 >= 8)
        {
          v31 = 8 * v29;
          do
          {
            result = (uint64_t)sub_20821166C((uint64_t **)&v91, *v26++);
            v31 -= 8;
          }
          while (v31);
        }
      }
      else if (v27 >= 8)
      {
        v81 = 8 * v29;
        do
        {
          ++v26;
          result = sub_208211974();
          v81 -= 8;
        }
        while (v81);
      }
      break;
    case 5:
      v32 = *a2;
      result = (uint64_t)sub_20807EB10((unsigned __int8 **)(*a2 + 16), 5);
      v33 = *(_QWORD *)(v32 + 16);
      v35 = *(_QWORD *)(v33 + 40);
      v34 = *(_BYTE **)(v33 + 48);
      if (v34)
        v36 = 1;
      else
        v36 = v35 == 0;
      if (!v36)
      {
        result = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v37 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v37 + 40))
      {
        for (*(_QWORD *)&v91 = v37 + 16; v35; --v35)
          result = (uint64_t)sub_20820FF5C((uint64_t **)&v91, (char)*v34++);
      }
      else
      {
        for (; v35; --v35)
        {
          v82 = (char)*v34;
          if (v82 > -33)
          {
            LOBYTE(v91) = *v34;
          }
          else
          {
            LOBYTE(v91) = -48;
            BYTE1(v91) = v82;
          }
          result = std::ostream::write();
          ++v34;
        }
      }
      break;
    case 6:
      v38 = *a2;
      result = (uint64_t)sub_20807EB10((unsigned __int8 **)(*a2 + 16), 6);
      v39 = *(_QWORD *)(v38 + 16);
      v41 = *(_QWORD *)(v39 + 40);
      v40 = *(__int16 **)(v39 + 48);
      if (v40)
        v42 = 0;
      else
        v42 = v41 >= 2;
      if (v42)
      {
        result = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v43 = v41 >> 1;
      v44 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v44 + 40))
      {
        *(_QWORD *)&v91 = v44 + 16;
        if (v41 >= 2)
        {
          v45 = 2 * v43;
          do
          {
            result = (uint64_t)sub_2082101E8((uint64_t **)&v91, *v40++);
            v45 -= 2;
          }
          while (v45);
        }
      }
      else if (v41 >= 2)
      {
        v83 = 2 * v43;
        do
        {
          ++v40;
          result = sub_2082104AC();
          v83 -= 2;
        }
        while (v83);
      }
      break;
    case 7:
      v46 = *a2;
      result = (uint64_t)sub_20807EB10((unsigned __int8 **)(*a2 + 16), 7);
      v47 = *(_QWORD *)(v46 + 16);
      v49 = *(_QWORD *)(v47 + 40);
      v48 = *(unsigned int **)(v47 + 48);
      if (v48)
        v50 = 0;
      else
        v50 = v49 >= 4;
      if (v50)
      {
        result = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v51 = v49 >> 2;
      v52 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v52 + 40))
      {
        *(_QWORD *)&v91 = v52 + 16;
        if (v49 >= 4)
        {
          v53 = 4 * v51;
          do
          {
            result = (uint64_t)sub_208210774((uint64_t **)&v91, *v48++);
            v53 -= 4;
          }
          while (v53);
        }
      }
      else if (v49 >= 4)
      {
        v84 = 4 * v51;
        do
        {
          ++v48;
          result = sub_208210B90();
          v84 -= 4;
        }
        while (v84);
      }
      break;
    case 8:
      v54 = *a2;
      result = (uint64_t)sub_20807EB10((unsigned __int8 **)(*a2 + 16), 8);
      v55 = *(_QWORD *)(v54 + 16);
      v57 = *(_QWORD *)(v55 + 40);
      v56 = *(unint64_t **)(v55 + 48);
      if (v56)
        v58 = 0;
      else
        v58 = v57 >= 8;
      if (v58)
      {
        result = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v59 = v57 >> 3;
      v60 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v60 + 40))
      {
        *(_QWORD *)&v91 = v60 + 16;
        if (v57 >= 8)
        {
          v61 = 8 * v59;
          do
          {
            result = (uint64_t)sub_208210FF0((uint64_t **)&v91, *v56++);
            v61 -= 8;
          }
          while (v61);
        }
      }
      else if (v57 >= 8)
      {
        v85 = 8 * v59;
        do
        {
          ++v56;
          result = sub_20821152C();
          v85 -= 8;
        }
        while (v85);
      }
      break;
    case 11:
      v62 = *a2;
      result = (uint64_t)sub_20807EB10((unsigned __int8 **)(*a2 + 16), 11);
      v63 = *(_QWORD *)(v62 + 16);
      v65 = *(_QWORD *)(v63 + 40);
      v64 = *(unsigned int **)(v63 + 48);
      if (v64)
        v66 = 0;
      else
        v66 = v65 >= 4;
      if (v66)
      {
        result = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
        if ((_DWORD)result)
          goto LABEL_144;
      }
      v67 = v65 >> 2;
      v68 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v68 + 40))
      {
        *(_QWORD *)&v91 = v68 + 16;
        if (v65 >= 4)
        {
          v69 = 4 * v67;
          do
          {
            result = (uint64_t)sub_208211A6C((uint64_t)&v90, (uint64_t **)&v91, v64++);
            v69 -= 4;
          }
          while (v69);
        }
      }
      else if (v65 >= 4)
      {
        v86 = 4 * v67;
        do
        {
          v87 = *v64;
          LOBYTE(v91) = -54;
          *(_DWORD *)((char *)&v91 + 1) = bswap32(v87);
          result = std::ostream::write();
          ++v64;
          v86 -= 4;
        }
        while (v86);
      }
      break;
    case 12:
      v70 = *a2;
      result = (uint64_t)sub_20807EB10((unsigned __int8 **)(*a2 + 16), 12);
      v71 = *(_QWORD *)(v70 + 16);
      v73 = *(_QWORD *)(v71 + 40);
      v72 = *(unint64_t **)(v71 + 48);
      if (v72)
        v74 = 0;
      else
        v74 = v73 >= 8;
      if (v74)
      {
        result = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
        if ((_DWORD)result)
LABEL_144:
          abort();
      }
      v75 = v73 >> 3;
      v76 = *(_QWORD *)(a2[1] + 24);
      if (*(_BYTE *)(v76 + 40))
      {
        *(_QWORD *)&v91 = v76 + 16;
        if (v73 >= 8)
        {
          v77 = 8 * v75;
          do
          {
            result = (uint64_t)sub_208211B48((uint64_t)&v90, (uint64_t **)&v91, v72++);
            v77 -= 8;
          }
          while (v77);
        }
      }
      else if (v73 >= 8)
      {
        v88 = 8 * v75;
        do
        {
          v89 = *v72;
          LOBYTE(v91) = -53;
          *(_QWORD *)((char *)&v91 + 1) = bswap64(v89);
          result = std::ostream::write();
          ++v72;
          v88 -= 8;
        }
        while (v88);
      }
      break;
    default:
      sub_2082056D4(a1);
  }
  return result;
}

void sub_207ED34C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A78C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F17E4(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F20F8(a2, &v18);
      sub_207E0F904(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A048(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F17E4(a2);
  v18 = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F20F8(a2, &v18);
  sub_207ED37C4(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_207ED37C4(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  int v6;
  unsigned __int8 *v7;
  uint64_t v8;
  int v9;
  _BYTE *v10;
  _QWORD *v11;
  BOOL v12;
  unsigned __int8 *v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  __int128 v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  __int128 *v24;
  uint64_t v25;

  v21 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v22 = *((_QWORD *)a2 + 2);
  v23 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "value_type";
    *(_QWORD *)(a1 + 80) = 10;
    if (!v6)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v24 = &v21;
  sub_207E3B438(a1, (_BYTE **)&v24);
  v7 = *(unsigned __int8 **)(a1 + 40);
  if (*v7 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "size";
    v8 = a1 + 72;
    v10 = (_BYTE *)(a1 + 88);
    v9 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 80) = 4;
    v11 = (_QWORD *)(a1 + 80);
    if (!v9)
      *v10 = 1;
    goto LABEL_16;
  }
  v11 = (_QWORD *)(a1 + 80);
  v8 = a1 + 72;
  v10 = (_BYTE *)(a1 + 88);
  if (!*(_BYTE *)(a1 + 88)
    || *(_QWORD *)(a1 + 80) != 7
    || (**(_DWORD **)v8 == *(_DWORD *)"version"
      ? (v12 = *(_DWORD *)(*(_QWORD *)v8 + 3) == *(_DWORD *)"sion")
      : (v12 = 0),
        !v12))
  {
LABEL_16:
    LOBYTE(v24) = 6;
    v25 = *((_QWORD *)&v21 + 1);
    v13 = (unsigned __int8 *)sub_2081F133C(a1);
    v14 = *v13;
    *v13 = v24;
    LOBYTE(v24) = v14;
    v15 = *((_QWORD *)v13 + 1);
    *((_QWORD *)v13 + 1) = v25;
    v25 = v15;
    sub_207D20660(&v25, v14);
    v7 = *(unsigned __int8 **)(a1 + 40);
  }
  if (*v7 <= 1u)
  {
    v16 = *v10;
    *(_QWORD *)v8 = "lines3";
    *v11 = 6;
    if (!v16)
      *v10 = 1;
  }
  sub_2081F17E4(a1);
  sub_207ED3A24(v21, (uint64_t)&v21, a1);
  v17 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a1 + 56) = v17 - 8;
  if (*(_BYTE *)(a1 + 88))
    *v10 = 0;
  v18 = v23;
  if (v23)
  {
    v19 = (unint64_t *)&v23->__shared_owners_;
    do
      v20 = __ldaxr(v19);
    while (__stlxr(v20 - 1, v19));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
}

void sub_207ED39F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 a13)
{
  uint64_t *v13;

  sub_207D20660(v13, a13);
  sub_207DCBDC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207ED3A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207DCBDC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

unsigned __int8 **sub_207ED3A24(int a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 **result;
  _QWORD v4[2];

  v4[0] = a2;
  v4[1] = a3;
  switch(a1)
  {
    case 0:
      result = sub_207ED3B4C(v4);
      break;
    case 1:
      result = sub_207ED3D20(v4);
      break;
    case 2:
      result = sub_207ED3EF4(v4);
      break;
    case 3:
      result = sub_207ED40C8(v4);
      break;
    case 5:
      result = sub_207ED429C(v4);
      break;
    case 6:
      result = sub_207ED4470(v4);
      break;
    case 7:
      result = sub_207ED4644(v4);
      break;
    case 8:
      result = sub_207ED4818(v4);
      break;
    case 11:
      result = sub_207ED49EC(v4);
      break;
    case 12:
      result = sub_207ED4BC0(v4);
      break;
    default:
      sub_2082056D4(a1);
  }
  return result;
}

unsigned __int8 **sub_207ED3B4C(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  size_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 0);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 1;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) == 0;
  if (!v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_19;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F17E4((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2081F1960(v10, &v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 3;
      sub_2081F1960(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 6;
      if (!--v6)
        return result;
    }
LABEL_19:
    abort();
  }
  do
  {
    sub_2081F17E4((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2081F1960(v7, &v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 3;
    sub_2081F1960(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 6;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207ED3D20(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 1);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 2uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F17E4((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2081F2940(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 6;
      sub_2081F2940(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 12;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F17E4((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2081F2940(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 6;
    sub_2081F2940(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 12;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207ED3EF4(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 2);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F17E4((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2081F2BB0(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 12;
      sub_2081F2BB0(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 24;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F17E4((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2081F2BB0(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 12;
    sub_2081F2BB0(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 24;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207ED40C8(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 3);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F17E4((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2081F2E20(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 24;
      sub_2081F2E20(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 48;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F17E4((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2081F2E20(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 24;
    sub_2081F2E20(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 48;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207ED429C(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  size_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 5);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 1;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) == 0;
  if (!v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_19;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F17E4((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2081F26D0(v10, &v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 3;
      sub_2081F26D0(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 6;
      if (!--v6)
        return result;
    }
LABEL_19:
    abort();
  }
  do
  {
    sub_2081F17E4((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2081F26D0(v7, &v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 3;
    sub_2081F26D0(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 6;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207ED4470(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 6);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 2uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F17E4((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2081F2808(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 6;
      sub_2081F2808(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 12;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F17E4((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2081F2808(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 6;
    sub_2081F2808(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 12;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207ED4644(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 7);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F17E4((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2081F2A78(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 12;
      sub_2081F2A78(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 24;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F17E4((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2081F2A78(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 12;
    sub_2081F2A78(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 24;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207ED4818(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 8);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F17E4((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2081F2CE8(v10, (uint64_t)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 24;
      sub_2081F2CE8(v11, (uint64_t)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 48;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F17E4((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2081F2CE8(v7, (uint64_t)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 24;
    sub_2081F2CE8(v8, (uint64_t)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 48;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207ED49EC(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 11);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 4uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F17E4((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2081F3400(v10, (float **)&v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 12;
      sub_2081F3400(v11, (float **)&v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 24;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F17E4((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2081F3400(v7, (float **)&v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 12;
    sub_2081F3400(v8, (float **)&v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 24;
    --v6;
  }
  while (v6);
  return result;
}

unsigned __int8 **sub_207ED4BC0(_QWORD *a1)
{
  uint64_t v2;
  unsigned __int8 **result;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *a1;
  result = sub_20807EB10((unsigned __int8 **)(*a1 + 16), 12);
  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 48);
  if (v4)
    v5 = 0;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40) >= 8uLL;
  if (v5)
  {
    result = (unsigned __int8 **)sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((_DWORD)result)
      goto LABEL_20;
  }
  v6 = *(_QWORD *)(*a1 + 8);
  if (!v6)
    return result;
  result = (unsigned __int8 **)a1[1];
  if (!v4)
  {
    while (1)
    {
      sub_2081F17E4((uint64_t)result);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v10 = a1[1];
      v13 = 3;
      v14 = v4;
      sub_2081F3820(v10, &v13);
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        break;
      }
      v11 = a1[1];
      v13 = 3;
      v14 = v4 + 24;
      sub_2081F3820(v11, &v13);
      result = (unsigned __int8 **)a1[1];
      v12 = result[7];
      result[5] = (unsigned __int8 *)*((_QWORD *)v12 - 1);
      result[7] = v12 - 8;
      if (*((_BYTE *)result + 88))
        *((_BYTE *)result + 88) = 0;
      v4 += 48;
      if (!--v6)
        return result;
    }
LABEL_20:
    abort();
  }
  do
  {
    sub_2081F17E4((uint64_t)result);
    v7 = a1[1];
    v13 = 3;
    v14 = v4;
    sub_2081F3820(v7, &v13);
    v8 = a1[1];
    v13 = 3;
    v14 = v4 + 24;
    sub_2081F3820(v8, &v13);
    result = (unsigned __int8 **)a1[1];
    v9 = result[7];
    result[5] = (unsigned __int8 *)*((_QWORD *)v9 - 1);
    result[7] = v9 - 8;
    if (*((_BYTE *)result + 88))
      *((_BYTE *)result + 88) = 0;
    v4 += 48;
    --v6;
  }
  while (v6);
  return result;
}

_QWORD *sub_207ED4D94(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *result;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v20 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3BAE4(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        sub_207CBAB98(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_207E11040(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3B540(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v22 = v7;
  sub_207CBAB98(v11, (uint64_t)&v22, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_207CBAB98(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_207ED4FAC(a2, (__int128 *)(v3 + 200));
  v14 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v15 = *(_QWORD **)(a2 + 24);
    v24 = *(_BYTE *)(a2 + 32);
    sub_207CBAB98(v15, (uint64_t)&v24, 1);
  }
  v16 = *(_QWORD **)(a2 + 24);
  v25 = v14;
  result = sub_207CBAB98(v16, (uint64_t)&v25, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_207ED4FAC(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  _QWORD *v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  __int128 v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  _QWORD v13[3];
  __int128 v14;

  v10 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v11 = *((_QWORD *)a2 + 2);
  v12 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  LOBYTE(v13[0]) = v10;
  sub_208208D08(a1, (unsigned __int8 *)v13);
  if (*(_QWORD *)(a1 + 40))
  {
    v6 = *(_QWORD **)(a1 + 24);
    LOBYTE(v13[0]) = *(_BYTE *)(a1 + 32);
    sub_207CBAB98(v6, (uint64_t)v13, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
  v14 = xmmword_24C0768A8;
  v13[0] = &v10;
  v13[1] = a1;
  v13[2] = &v14;
  sub_207ED50CC(v10, v13);
  v7 = v12;
  if (v12)
  {
    v8 = (unint64_t *)&v12->__shared_owners_;
    do
      v9 = __ldaxr(v8);
    while (__stlxr(v9 - 1, v8));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
}

void sub_207ED50B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207DCBDC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207ED50CC(int a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  BOOL v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  char v89;
  char v90;
  char v91;
  char v92;
  char v93;
  char v94;
  char v95;
  char v96;

  switch(a1)
  {
    case 0:
      v3 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 0);
      v4 = *(_QWORD *)(v3 + 16);
      v6 = *(_QWORD *)(v4 + 40);
      v5 = *(unsigned __int8 **)(v4 + 48);
      if (v5)
        v7 = 1;
      else
        v7 = v6 == 0;
      if (v7)
      {
        if (!v6)
          return;
        goto LABEL_65;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_65:
        v54 = a2[1];
        do
        {
          sub_208208D08(v54, v5++);
          --v6;
        }
        while (v6);
        return;
      }
      goto LABEL_112;
    case 1:
      v8 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 1);
      v9 = *(_QWORD *)(v8 + 16);
      v11 = *(_QWORD *)(v9 + 40);
      v10 = *(_QWORD *)(v9 + 48);
      if (v10)
        v12 = 0;
      else
        v12 = v11 >= 2;
      if (!v12)
      {
        if (v11 < 2)
          return;
        goto LABEL_69;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_69:
        v55 = a2[1];
        v56 = *(_QWORD *)(v55 + 40);
        v57 = v11 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          if (v56)
          {
            v58 = *(_QWORD **)(v55 + 24);
            v89 = *(_BYTE *)(v55 + 32);
            sub_207CBAB98(v58, (uint64_t)&v89, 1);
          }
          v10 += 2;
          std::ostream::operator<<();
          v56 = *(_QWORD *)(v55 + 40) + 1;
          *(_QWORD *)(v55 + 40) = v56;
          v57 -= 2;
        }
        while (v57);
        return;
      }
      goto LABEL_112;
    case 2:
      v13 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 2);
      v14 = *(_QWORD *)(v13 + 16);
      v16 = *(_QWORD *)(v14 + 40);
      v15 = *(_QWORD *)(v14 + 48);
      if (v15)
        v17 = 0;
      else
        v17 = v16 >= 4;
      if (!v17)
      {
        if (v16 < 4)
          return;
        goto LABEL_74;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_74:
        v59 = a2[1];
        v60 = *(_QWORD *)(v59 + 40);
        v61 = v16 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          if (v60)
          {
            v62 = *(_QWORD **)(v59 + 24);
            v90 = *(_BYTE *)(v59 + 32);
            sub_207CBAB98(v62, (uint64_t)&v90, 1);
          }
          v15 += 4;
          std::ostream::operator<<();
          v60 = *(_QWORD *)(v59 + 40) + 1;
          *(_QWORD *)(v59 + 40) = v60;
          v61 -= 4;
        }
        while (v61);
        return;
      }
      goto LABEL_112;
    case 3:
      v18 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 3);
      v19 = *(_QWORD *)(v18 + 16);
      v21 = *(_QWORD *)(v19 + 40);
      v20 = *(_QWORD *)(v19 + 48);
      if (v20)
        v22 = 0;
      else
        v22 = v21 >= 8;
      if (!v22)
      {
        if (v21 < 8)
          return;
        goto LABEL_79;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_79:
        v63 = a2[1];
        v64 = *(_QWORD *)(v63 + 40);
        v65 = v21 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          if (v64)
          {
            v66 = *(_QWORD **)(v63 + 24);
            v91 = *(_BYTE *)(v63 + 32);
            sub_207CBAB98(v66, (uint64_t)&v91, 1);
          }
          v20 += 8;
          std::ostream::operator<<();
          v64 = *(_QWORD *)(v63 + 40) + 1;
          *(_QWORD *)(v63 + 40) = v64;
          v65 -= 8;
        }
        while (v65);
        return;
      }
      goto LABEL_112;
    case 5:
      v23 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 5);
      v24 = *(_QWORD *)(v23 + 16);
      v26 = *(_QWORD *)(v24 + 40);
      v25 = *(char **)(v24 + 48);
      if (v25)
        v27 = 1;
      else
        v27 = v26 == 0;
      if (v27)
      {
        if (!v26)
          return;
        goto LABEL_84;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_84:
        v68 = a2[1];
        do
        {
          sub_208208B24(v68, v25++);
          --v26;
        }
        while (v26);
        return;
      }
      goto LABEL_112;
    case 6:
      v28 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 6);
      v29 = *(_QWORD *)(v28 + 16);
      v31 = *(_QWORD *)(v29 + 40);
      v30 = *(_QWORD *)(v29 + 48);
      if (v30)
        v32 = 0;
      else
        v32 = v31 >= 2;
      if (!v32)
      {
        if (v31 < 2)
          return;
        goto LABEL_88;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_88:
        v69 = a2[1];
        v70 = *(_QWORD *)(v69 + 40);
        v71 = v31 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          if (v70)
          {
            v72 = *(_QWORD **)(v69 + 24);
            v92 = *(_BYTE *)(v69 + 32);
            sub_207CBAB98(v72, (uint64_t)&v92, 1);
          }
          v30 += 2;
          std::ostream::operator<<();
          v70 = *(_QWORD *)(v69 + 40) + 1;
          *(_QWORD *)(v69 + 40) = v70;
          v71 -= 2;
        }
        while (v71);
        return;
      }
      goto LABEL_112;
    case 7:
      v33 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 7);
      v34 = *(_QWORD *)(v33 + 16);
      v36 = *(_QWORD *)(v34 + 40);
      v35 = *(_QWORD *)(v34 + 48);
      if (v35)
        v37 = 0;
      else
        v37 = v36 >= 4;
      if (!v37)
      {
        if (v36 < 4)
          return;
        goto LABEL_93;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_93:
        v73 = a2[1];
        v74 = *(_QWORD *)(v73 + 40);
        v75 = v36 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          if (v74)
          {
            v76 = *(_QWORD **)(v73 + 24);
            v93 = *(_BYTE *)(v73 + 32);
            sub_207CBAB98(v76, (uint64_t)&v93, 1);
          }
          v35 += 4;
          std::ostream::operator<<();
          v74 = *(_QWORD *)(v73 + 40) + 1;
          *(_QWORD *)(v73 + 40) = v74;
          v75 -= 4;
        }
        while (v75);
        return;
      }
      goto LABEL_112;
    case 8:
      v38 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 8);
      v39 = *(_QWORD *)(v38 + 16);
      v41 = *(_QWORD *)(v39 + 40);
      v40 = *(_QWORD *)(v39 + 48);
      if (v40)
        v42 = 0;
      else
        v42 = v41 >= 8;
      if (!v42)
      {
        if (v41 < 8)
          return;
        goto LABEL_98;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_98:
        v77 = a2[1];
        v78 = *(_QWORD *)(v77 + 40);
        v79 = v41 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          if (v78)
          {
            v80 = *(_QWORD **)(v77 + 24);
            v94 = *(_BYTE *)(v77 + 32);
            sub_207CBAB98(v80, (uint64_t)&v94, 1);
          }
          v40 += 8;
          std::ostream::operator<<();
          v78 = *(_QWORD *)(v77 + 40) + 1;
          *(_QWORD *)(v77 + 40) = v78;
          v79 -= 8;
        }
        while (v79);
        return;
      }
      goto LABEL_112;
    case 11:
      v43 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 11);
      v44 = *(_QWORD *)(v43 + 16);
      v46 = *(_QWORD *)(v44 + 40);
      v45 = *(_QWORD *)(v44 + 48);
      if (v45)
        v47 = 0;
      else
        v47 = v46 >= 4;
      if (!v47)
      {
        if (v46 < 4)
          return;
        goto LABEL_103;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_103:
        v81 = a2[1];
        v82 = *(_QWORD *)(v81 + 40);
        v83 = v46 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          if (v82)
          {
            v84 = *(_QWORD **)(v81 + 24);
            v95 = *(_BYTE *)(v81 + 32);
            sub_207CBAB98(v84, (uint64_t)&v95, 1);
          }
          *(_QWORD *)(*(_QWORD *)(v81 + 24) + *(_QWORD *)(**(_QWORD **)(v81 + 24) - 24) + 16) = 9;
          v45 += 4;
          std::ostream::operator<<();
          v82 = *(_QWORD *)(v81 + 40) + 1;
          *(_QWORD *)(v81 + 40) = v82;
          v83 -= 4;
        }
        while (v83);
        return;
      }
      goto LABEL_112;
    case 12:
      v48 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 12);
      v49 = *(_QWORD *)(v48 + 16);
      v51 = *(_QWORD *)(v49 + 40);
      v50 = *(_QWORD *)(v49 + 48);
      if (v50)
        v52 = 0;
      else
        v52 = v51 >= 8;
      if (v52)
      {
        if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
        {
LABEL_112:
          abort();
        }
      }
      else if (v51 < 8)
      {
        return;
      }
      v85 = a2[1];
      v86 = *(_QWORD *)(v85 + 40);
      v87 = v51 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        if (v86)
        {
          v88 = *(_QWORD **)(v85 + 24);
          v96 = *(_BYTE *)(v85 + 32);
          sub_207CBAB98(v88, (uint64_t)&v96, 1);
        }
        *(_QWORD *)(*(_QWORD *)(v85 + 24) + *(_QWORD *)(**(_QWORD **)(v85 + 24) - 24) + 16) = 17;
        v50 += 8;
        std::ostream::operator<<();
        v86 = *(_QWORD *)(v85 + 40) + 1;
        *(_QWORD *)(v85 + 40) = v86;
        v87 -= 8;
      }
      while (v87);
      return;
    default:
      sub_2082056D4(a1);
  }
}

void sub_207ED57E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C21C(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C100(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    __src = 6;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E11EF8(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 1;
  sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_208072A10((_QWORD *)a2);
  sub_207ED59A0(a2, (__int128 *)(v3 + 200));
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v10 + 10) = *(_QWORD *)(a2 + 32) - v10 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
}

void sub_207ED59A0(uint64_t a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  _QWORD __src[3];
  __int128 v13;

  v9 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v10 = *((_QWORD *)a2 + 2);
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  LOBYTE(__src[0]) = v9;
  sub_207D0B114(a1 + 24, *(char **)(a1 + 32), (char *)__src, (char *)__src + 1, 1);
  sub_207D0B114(a1 + 24, *(char **)(a1 + 32), (char *)&v9 + 8, (char *)&v10, 8);
  v13 = xmmword_24C0768A8;
  __src[0] = &v9;
  __src[1] = a1;
  __src[2] = &v13;
  sub_207ED5AC4(v9, __src);
  v6 = v11;
  if (v11)
  {
    v7 = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_207ED5AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207DCBDC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

char *sub_207ED5AC4(int a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  char *v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  unint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  BOOL v44;
  char *result;

  switch(a1)
  {
    case 0:
      v3 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 0);
      v4 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v4 + 40);
      v6 = *(char **)(v4 + 48);
      if (v6)
        v7 = 1;
      else
        v7 = v5 == 0;
      if (!v7)
        goto LABEL_27;
      goto LABEL_7;
    case 1:
      v9 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 1);
      v10 = *(_QWORD *)(v9 + 16);
      v12 = *(_QWORD *)(v10 + 40);
      v11 = *(char **)(v10 + 48);
      if (v11)
        v13 = 0;
      else
        v13 = v12 >= 2;
      if (!v13)
        goto LABEL_37;
      goto LABEL_36;
    case 2:
      v14 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 2);
      v15 = *(_QWORD *)(v14 + 16);
      v16 = *(_QWORD *)(v15 + 40);
      v11 = *(char **)(v15 + 48);
      if (v11)
        v17 = 0;
      else
        v17 = v16 >= 4;
      if (!v17)
        goto LABEL_59;
      goto LABEL_58;
    case 3:
      v18 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 3);
      v19 = *(_QWORD *)(v18 + 16);
      v20 = *(_QWORD *)(v19 + 40);
      v11 = *(char **)(v19 + 48);
      if (v11)
        v21 = 0;
      else
        v21 = v20 >= 8;
      if (!v21)
        goto LABEL_71;
      goto LABEL_70;
    case 5:
      v22 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 5);
      v23 = *(_QWORD *)(v22 + 16);
      v5 = *(_QWORD *)(v23 + 40);
      v6 = *(char **)(v23 + 48);
      if (v6)
        v24 = 1;
      else
        v24 = v5 == 0;
      if (v24)
      {
LABEL_7:
        v8 = a2[1];
      }
      else
      {
LABEL_27:
        if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v8 = a2[1], sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)))
        {
LABEL_77:
          abort();
        }
      }
      result = sub_207D0B114(v8 + 24, *(char **)(v8 + 32), v6, &v6[v5], v5);
      break;
    case 6:
      v25 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 6);
      v26 = *(_QWORD *)(v25 + 16);
      v12 = *(_QWORD *)(v26 + 40);
      v11 = *(char **)(v26 + 48);
      if (v11)
        v27 = 0;
      else
        v27 = v12 >= 2;
      if (!v27)
        goto LABEL_37;
LABEL_36:
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_77;
      }
LABEL_37:
      v28 = v12 & 0xFFFFFFFFFFFFFFFELL;
      v29 = a2[1];
      if (v11)
        v30 = 1;
      else
        v30 = v28 == 0;
      if (!v30)
        goto LABEL_75;
      goto LABEL_76;
    case 7:
      v31 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 7);
      v32 = *(_QWORD *)(v31 + 16);
      v16 = *(_QWORD *)(v32 + 40);
      v11 = *(char **)(v32 + 48);
      if (v11)
        v33 = 0;
      else
        v33 = v16 >= 4;
      if (!v33)
        goto LABEL_59;
      goto LABEL_58;
    case 8:
      v34 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 8);
      v35 = *(_QWORD *)(v34 + 16);
      v20 = *(_QWORD *)(v35 + 40);
      v11 = *(char **)(v35 + 48);
      if (v11)
        v36 = 0;
      else
        v36 = v20 >= 8;
      if (!v36)
        goto LABEL_71;
      goto LABEL_70;
    case 11:
      v37 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 11);
      v38 = *(_QWORD *)(v37 + 16);
      v16 = *(_QWORD *)(v38 + 40);
      v11 = *(char **)(v38 + 48);
      if (v11)
        v39 = 0;
      else
        v39 = v16 >= 4;
      if (!v39)
        goto LABEL_59;
LABEL_58:
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_77;
      }
LABEL_59:
      v28 = v16 & 0xFFFFFFFFFFFFFFFCLL;
      v29 = a2[1];
      if (v11)
        v40 = 1;
      else
        v40 = v28 == 0;
      if (!v40)
        goto LABEL_75;
      goto LABEL_76;
    case 12:
      v41 = *a2;
      sub_20807EB10((unsigned __int8 **)(*a2 + 16), 12);
      v42 = *(_QWORD *)(v41 + 16);
      v20 = *(_QWORD *)(v42 + 40);
      v11 = *(char **)(v42 + 48);
      if (v11)
        v43 = 0;
      else
        v43 = v20 >= 8;
      if (!v43)
        goto LABEL_71;
LABEL_70:
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_77;
      }
LABEL_71:
      v28 = v20 & 0xFFFFFFFFFFFFFFF8;
      v29 = a2[1];
      if (v11)
        v44 = 1;
      else
        v44 = v28 == 0;
      if (v44)
        goto LABEL_76;
LABEL_75:
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_77;
      }
LABEL_76:
      result = sub_207D0B114(v29 + 24, *(char **)(v29 + 32), v11, &v11[v28], v28);
      break;
    default:
      sub_2082056D4(a1);
  }
  return result;
}

void sub_207ED5E50(_BYTE *a1, __int128 *a2)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  std::__shared_weak_count *v11;
  _BYTE *v12[3];
  __int128 v13;

  v9 = *a2;
  v3 = (std::__shared_weak_count *)*((_QWORD *)a2 + 3);
  v10 = *((_QWORD *)a2 + 2);
  v11 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  v12[0] = &v9;
  sub_207E3D2B0(a1, v12);
  (*(void (**)(_BYTE *, char *))(*(_QWORD *)a1 + 120))(a1, (char *)&v9 + 8);
  v13 = xmmword_24C0768A8;
  v12[0] = &v9;
  v12[1] = a1;
  v12[2] = &v13;
  sub_207ED5F4C(v9, v12);
  v6 = v11;
  if (v11)
  {
    v7 = (unint64_t *)&v11->__shared_owners_;
    do
      v8 = __ldaxr(v7);
    while (__stlxr(v8 - 1, v7));
    if (!v8)
    {
      ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
      std::__shared_weak_count::__release_weak(v6);
    }
  }
}

void sub_207ED5F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207DCBDC4((uint64_t)&a9);
  _Unwind_Resume(a1);
}

unsigned __int8 **sub_207ED5F4C(int a1, _QWORD *a2)
{
  uint64_t v3;
  unsigned __int8 **result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  BOOL v53;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;

  switch(a1)
  {
    case 0:
      v3 = *a2;
      result = sub_20807EB10((unsigned __int8 **)(*a2 + 16), 0);
      v5 = *(_QWORD *)(v3 + 16);
      v7 = *(_QWORD *)(v5 + 40);
      v6 = *(_QWORD *)(v5 + 48);
      if (v6)
        v8 = 1;
      else
        v8 = v7 == 0;
      if (v8)
      {
        if (!v7)
          return result;
        goto LABEL_65;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_65:
        v55 = a2[1];
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v55 + 80))(v55, v6++);
          --v7;
        }
        while (v7);
        return result;
      }
      goto LABEL_104;
    case 1:
      v9 = *a2;
      result = sub_20807EB10((unsigned __int8 **)(*a2 + 16), 1);
      v10 = *(_QWORD *)(v9 + 16);
      v12 = *(_QWORD *)(v10 + 40);
      v11 = *(_QWORD *)(v10 + 48);
      if (v11)
        v13 = 0;
      else
        v13 = v12 >= 2;
      if (!v13)
      {
        if (v12 < 2)
          return result;
        goto LABEL_69;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_69:
        v56 = a2[1];
        v57 = v12 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v56 + 96))(v56, v11);
          v11 += 2;
          v57 -= 2;
        }
        while (v57);
        return result;
      }
      goto LABEL_104;
    case 2:
      v14 = *a2;
      result = sub_20807EB10((unsigned __int8 **)(*a2 + 16), 2);
      v15 = *(_QWORD *)(v14 + 16);
      v17 = *(_QWORD *)(v15 + 40);
      v16 = *(_QWORD *)(v15 + 48);
      if (v16)
        v18 = 0;
      else
        v18 = v17 >= 4;
      if (!v18)
      {
        if (v17 < 4)
          return result;
        goto LABEL_73;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_73:
        v58 = a2[1];
        v59 = v17 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v58 + 104))(v58, v16);
          v16 += 4;
          v59 -= 4;
        }
        while (v59);
        return result;
      }
      goto LABEL_104;
    case 3:
      v19 = *a2;
      result = sub_20807EB10((unsigned __int8 **)(*a2 + 16), 3);
      v20 = *(_QWORD *)(v19 + 16);
      v22 = *(_QWORD *)(v20 + 40);
      v21 = *(_QWORD *)(v20 + 48);
      if (v21)
        v23 = 0;
      else
        v23 = v22 >= 8;
      if (!v23)
      {
        if (v22 < 8)
          return result;
        goto LABEL_77;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_77:
        v60 = a2[1];
        v61 = v22 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v60 + 120))(v60, v21);
          v21 += 8;
          v61 -= 8;
        }
        while (v61);
        return result;
      }
      goto LABEL_104;
    case 5:
      v24 = *a2;
      result = sub_20807EB10((unsigned __int8 **)(*a2 + 16), 5);
      v25 = *(_QWORD *)(v24 + 16);
      v27 = *(_QWORD *)(v25 + 40);
      v26 = *(_QWORD *)(v25 + 48);
      if (v26)
        v28 = 1;
      else
        v28 = v27 == 0;
      if (v28)
      {
        if (!v27)
          return result;
        goto LABEL_81;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_81:
        v63 = a2[1];
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v63 + 88))(v63, v26++);
          --v27;
        }
        while (v27);
        return result;
      }
      goto LABEL_104;
    case 6:
      v29 = *a2;
      result = sub_20807EB10((unsigned __int8 **)(*a2 + 16), 6);
      v30 = *(_QWORD *)(v29 + 16);
      v32 = *(_QWORD *)(v30 + 40);
      v31 = *(_QWORD *)(v30 + 48);
      if (v31)
        v33 = 0;
      else
        v33 = v32 >= 2;
      if (!v33)
      {
        if (v32 < 2)
          return result;
        goto LABEL_85;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_85:
        v64 = a2[1];
        v65 = v32 & 0xFFFFFFFFFFFFFFFELL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v64 + 48))(v64, v31);
          v31 += 2;
          v65 -= 2;
        }
        while (v65);
        return result;
      }
      goto LABEL_104;
    case 7:
      v34 = *a2;
      result = sub_20807EB10((unsigned __int8 **)(*a2 + 16), 7);
      v35 = *(_QWORD *)(v34 + 16);
      v37 = *(_QWORD *)(v35 + 40);
      v36 = *(_QWORD *)(v35 + 48);
      if (v36)
        v38 = 0;
      else
        v38 = v37 >= 4;
      if (!v38)
      {
        if (v37 < 4)
          return result;
        goto LABEL_89;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_89:
        v66 = a2[1];
        v67 = v37 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v66 + 56))(v66, v36);
          v36 += 4;
          v67 -= 4;
        }
        while (v67);
        return result;
      }
      goto LABEL_104;
    case 8:
      v39 = *a2;
      result = sub_20807EB10((unsigned __int8 **)(*a2 + 16), 8);
      v40 = *(_QWORD *)(v39 + 16);
      v42 = *(_QWORD *)(v40 + 40);
      v41 = *(_QWORD *)(v40 + 48);
      if (v41)
        v43 = 0;
      else
        v43 = v42 >= 8;
      if (!v43)
      {
        if (v42 < 8)
          return result;
        goto LABEL_93;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_93:
        v68 = a2[1];
        v69 = v42 & 0xFFFFFFFFFFFFFFF8;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v68 + 72))(v68, v41);
          v41 += 8;
          v69 -= 8;
        }
        while (v69);
        return result;
      }
      goto LABEL_104;
    case 11:
      v44 = *a2;
      result = sub_20807EB10((unsigned __int8 **)(*a2 + 16), 11);
      v45 = *(_QWORD *)(v44 + 16);
      v47 = *(_QWORD *)(v45 + 40);
      v46 = *(_QWORD *)(v45 + 48);
      if (v46)
        v48 = 0;
      else
        v48 = v47 >= 4;
      if (!v48)
      {
        if (v47 < 4)
          return result;
        goto LABEL_97;
      }
      if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_97:
        v70 = a2[1];
        v71 = v47 & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v70 + 128))(v70, v46);
          v46 += 4;
          v71 -= 4;
        }
        while (v71);
        return result;
      }
      goto LABEL_104;
    case 12:
      v49 = *a2;
      result = sub_20807EB10((unsigned __int8 **)(*a2 + 16), 12);
      v50 = *(_QWORD *)(v49 + 16);
      v52 = *(_QWORD *)(v50 + 40);
      v51 = *(_QWORD *)(v50 + 48);
      if (v51)
        v53 = 0;
      else
        v53 = v52 >= 8;
      if (v53)
      {
        if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
        {
LABEL_104:
          abort();
        }
      }
      else if (v52 < 8)
      {
        return result;
      }
      v72 = a2[1];
      v73 = v52 & 0xFFFFFFFFFFFFFFF8;
      do
      {
        result = (unsigned __int8 **)(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v72 + 136))(v72, v51);
        v51 += 8;
        v73 -= 8;
      }
      while (v73);
      return result;
    default:
      sub_2082056D4(a1);
  }
}

void sub_207ED6528(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D28, 0);
  if (v4)
  {
    sub_207ED6BDC(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D60, 0);
    if (v5)
    {
      sub_207ED9104(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076DE8, 0);
      if (v6)
      {
        sub_207EDAA78(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076E20, 0);
        if (v7)
        {
          sub_207EDCFA0(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24C082DE0)
            sub_207EDE9EC(&v9, a1);
          else
            sub_207ED668C(&v8, (uint64_t)a1);
        }
      }
    }
  }
}

void sub_207ED668C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  _BYTE *v30[26];
  _BYTE v31[24];
  __int128 v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  __int128 __p;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v30);
    sub_207E0AB10((uint64_t)v31, (uint64_t *)v30);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v31);
        if (!v45)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(uint64_t *, uint64_t))off_24C0765B0[v6])(&v29, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = *(_OWORD *)&v31[8];
    *(_BYTE *)(v3 + 64) = 0;
    if (v34)
    {
      v8 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(_QWORD *)(v3 + 56) = v8;
      v32 = 0uLL;
      v33 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v36;
    v10 = v35;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v39)
    {
      v11 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(_QWORD *)(v3 + 112) = v11;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v42)
    {
      v12 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(_QWORD *)(v3 + 144) = v12;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = __p;
      *(_QWORD *)(v3 + 176) = v44;
      __p = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = __p;
    if (!(_QWORD)__p)
      goto LABEL_46;
    v15 = *((_QWORD *)&__p + 1);
    v16 = (void *)__p;
    if (*((_QWORD *)&__p + 1) == (_QWORD)__p)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)__p;
LABEL_45:
    *((_QWORD *)&__p + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v30);
  sub_207E0AB10((uint64_t)v31, (uint64_t *)v30);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(uint64_t *, uint64_t))off_24C0765B0[v7])(&v29, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = *(_OWORD *)&v31[8];
    *(_BYTE *)(v3 + 64) = 0;
    if (v34)
    {
      v17 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(_QWORD *)(v3 + 56) = v17;
      v32 = 0uLL;
      v33 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v36;
    v19 = v35;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v39)
    {
      v20 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(_QWORD *)(v3 + 112) = v20;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v42)
    {
      v21 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(_QWORD *)(v3 + 144) = v21;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = __p;
      *(_QWORD *)(v3 + 176) = v44;
      __p = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v31);
  if (v45)
  {
LABEL_38:
    v14 = __p;
    if (!(_QWORD)__p)
      goto LABEL_46;
    v23 = *((_QWORD *)&__p + 1);
    v16 = (void *)__p;
    if (*((_QWORD *)&__p + 1) == (_QWORD)__p)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v42 && SHIBYTE(v41) < 0)
    operator delete((void *)v40);
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (v34 && SHIBYTE(v33) < 0)
    operator delete((void *)v32);
  sub_207D49CF4((uint64_t)v30);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(_QWORD *)a2;
  v30[0] = *(_BYTE **)(a2 + 8);
  v25 = (int)v30[0];
  *(_DWORD *)v31 = 6;
  (*(void (**)(uint64_t, _BYTE *))(v24 + 104))(a2, v31);
  if (v25 < 1)
  {
    if (*(_DWORD *)v31 < 3u)
      sub_207E1EB04((uint64_t)v31, a2, v4, *(unsigned int *)v31);
    else
      sub_207E1ED78(a2, v4, *(unsigned int *)v31);
  }
  else
  {
    sub_207E1E50C((int *)v30, a2, v4, *(unsigned int *)v31);
  }
  v26 = *(_QWORD *)a2;
  v29 = *(_QWORD *)(a2 + 8);
  v27 = v29;
  LODWORD(v30[0]) = 1;
  (*(void (**)(uint64_t, _BYTE **))(v26 + 104))(a2, v30);
  if (v27 < 1)
  {
    v30[0] = (_BYTE *)(v3 + 200);
    sub_207E41430((_BYTE *)a2, v30);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 120))(a2, v3 + 208);
    *(_OWORD *)v31 = xmmword_24C0768A8;
    v28 = *(unsigned __int8 *)(v3 + 200);
    v30[0] = (_BYTE *)(v3 + 200);
    v30[1] = (_BYTE *)a2;
    v30[2] = v31;
    sub_207EE0C80(v28, v30);
  }
  else
  {
    sub_207EE07D0((int *)&v29, (_BYTE *)a2, (_BYTE *)(v3 + 200));
  }
}

void sub_207ED6B94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207ED6BDC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v27);
    sub_207E0AB10((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v27);
  sub_207E0AB10((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_207D49CF4((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E14108(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207ED708C((uint64_t)v27, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_207ED7044(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207ED708C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v5;
  char *v6;
  int v7;
  int v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *exception;
  _BYTE *v14;

  sub_2081F5F4C(a2);
  v5 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v5)
    *(_BYTE *)(a2 + 104) = 1;
  v6 = (char *)sub_2081F6204((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v14 = 0;
  sub_20809778C(v6, &v14);
  if (HIDWORD(v14))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24C08F078;
    __cxa_throw(exception, (struct type_info *)&unk_24C08F090, (void (*)(void *))std::exception::~exception);
  }
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value_type";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v14 = a3;
  sub_207E3DB44((uint64_t *)a2, &v14);
  v8 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "size";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v8)
    *(_BYTE *)(a2 + 104) = 1;
  v9 = (char *)sub_2081F6204((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v14 = 0;
  sub_20809778C(v9, &v14);
  *((_QWORD *)a3 + 1) = v14;
  v10 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "lines3";
  *(_QWORD *)(a2 + 96) = 6;
  if (!v10)
    *(_BYTE *)(a2 + 104) = 1;
  sub_2081F5F4C(a2);
  sub_207ED721C(*a3, (uint64_t)a3, a2);
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(a2 + 48) = v11 - 8;
  *(_QWORD *)(a2 + 72) = v12 - 8;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v11 - 16);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v12 - 16);
  *(_QWORD *)(a2 + 48) = v11 - 16;
  *(_QWORD *)(a2 + 72) = v12 - 16;
}

void sub_207ED721C(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_207ED7344(v3);
      break;
    case 1:
      sub_207ED761C(v3);
      break;
    case 2:
      sub_207ED7904(v3);
      break;
    case 3:
      sub_207ED7BF0(v3);
      break;
    case 5:
      sub_207ED7F4C(v3);
      break;
    case 6:
      sub_207ED8224(v3);
      break;
    case 7:
      sub_207ED850C(v3);
      break;
    case 8:
      sub_207ED87F8(v3);
      break;
    case 11:
      sub_207ED8B54(v3);
      break;
    case 12:
      sub_207ED8E2C(v3);
      break;
    default:
      sub_2082056D4(a1);
  }
}

void sub_207ED7344(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  void *__p;
  void *v21;
  char *v22;
  uint64_t v23;
  char *v24;

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_207CF94B8();
    v4 = (char *)operator new(6 * v2);
    v5 = &v4[v3];
    __p = v4;
    v22 = &v4[v3];
    bzero(v4, 6 * v2);
    v21 = v5;
  }
  if (v2)
  {
    v6 = (_QWORD *)a1[1];
    v7 = 3;
    do
    {
      sub_2081F5F4C((uint64_t)v6);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v8 = (uint64_t *)a1[1], v23 = 3, v24 = (char *)__p + v7 - 3, v9 = (char *)sub_2081F6204(v8), ++v8[14], sub_2081F631C(v9, (uint64_t)&v23), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v10 = (uint64_t *)a1[1];
      v23 = 3;
      v24 = (char *)__p + v7;
      v11 = (char *)sub_2081F6204(v10);
      ++v10[14];
      sub_2081F631C(v11, (uint64_t)&v23);
      v6 = (_QWORD *)a1[1];
      v12 = v6[6];
      v6[4] = *(_QWORD *)(v12 - 8);
      v13 = v6[9];
      v6[14] = *(_QWORD *)(v13 - 8);
      v6[6] = v12 - 8;
      v6[9] = v13 - 8;
      v7 += 6;
      --v2;
    }
    while (v2);
  }
  sub_20807DA08(&v23, 0, (uint64_t)&__p);
  v15 = v23;
  v14 = v24;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v16 = *a1;
  v17 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  if (__p)
  {
    v21 = __p;
    operator delete(__p);
  }
}

void sub_207ED75B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ED761C(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (6 * v2)
  {
    if (6 * v2 < 0)
      sub_207DCF3A0();
    __p = operator new(12 * v2);
    v19 = (char *)__p + 12 * v2;
    bzero(__p, 12 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 6;
    do
    {
      sub_2081F5F4C((uint64_t)v3);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v5 = (uint64_t *)a1[1], v20 = 3, v21 = (char *)__p + v4 - 6, v6 = (char *)sub_2081F6204(v5), ++v5[14], sub_2081F7078(v6, (uint64_t)&v20), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 3;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2081F6204(v7);
      ++v7[14];
      sub_2081F7078(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 12;
      --v2;
    }
    while (v2);
  }
  sub_20807DD4C(&v20, 1, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v20 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_207ED789C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ED7904(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 62)
      sub_207CA420C();
    __p = operator new(24 * v2);
    v19 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 12;
    do
    {
      sub_2081F5F4C((uint64_t)v3);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v5 = (uint64_t *)a1[1], v20 = 3, v21 = (char *)__p + v4 - 12, v6 = (char *)sub_2081F6204(v5), ++v5[14], sub_2081F71F0(v6, (uint64_t)&v20), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 3;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2081F6204(v7);
      ++v7[14];
      sub_2081F71F0(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 24;
      --v2;
    }
    while (v2);
  }
  sub_20807E094(&v20, 2, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v20 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_207ED7B88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ED7BF0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  char *v9;
  _BYTE *v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  _BYTE *v14;
  _BYTE *v15;
  const void *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  void *__p;
  void *v22;
  char *v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*a1 + 8);
  v22 = 0;
  v23 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 61)
      sub_207CA420C();
    __p = operator new(48 * v2);
    v23 = (char *)__p + 48 * v2;
    bzero(__p, 48 * v2);
    v22 = v23;
  }
  if (v2)
  {
    v3 = 0;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_2081F5F4C((uint64_t)v4);
      v7 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_29;
      }
      v8 = (uint64_t *)a1[1];
      v9 = (char *)sub_2081F6204(v8);
      ++v8[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_2081F8AC4(v9, (uint64_t)&v24);
      v10 = v24;
      if (v25 != v24)
      {
        memmove(&v7[v3], v24, v25 - v24);
        v10 = v24;
      }
      if (v10)
      {
        v25 = v10;
        operator delete(v10);
      }
      v11 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_29:
        abort();
      }
      v12 = (uint64_t *)a1[1];
      v13 = (char *)sub_2081F6204(v12);
      ++v12[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_2081F8AC4(v13, (uint64_t)&v24);
      v14 = v24;
      if (v25 != v24)
      {
        memmove(&v11[v3 + 24], v24, v25 - v24);
        v14 = v24;
      }
      if (v14)
      {
        v25 = v14;
        operator delete(v14);
      }
      v4 = (_QWORD *)a1[1];
      v5 = v4[6];
      v4[4] = *(_QWORD *)(v5 - 8);
      v6 = v4[9];
      v4[14] = *(_QWORD *)(v6 - 8);
      v4[6] = v5 - 8;
      v4[9] = v6 - 8;
      v3 += 48;
      --v2;
    }
    while (v2);
  }
  sub_20807E3DC(&v24, 3, (uint64_t)&__p);
  v16 = v24;
  v15 = v25;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *((_QWORD *)v24 + 7), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v17 = *a1;
  v18 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v15;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  if (__p)
  {
    v22 = __p;
    operator delete(__p);
  }
}

void sub_207ED7EC8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ED7F4C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  void *__p;
  void *v21;
  char *v22;
  uint64_t v23;
  char *v24;

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_207CA420C();
    v4 = (char *)operator new(6 * v2);
    v5 = &v4[v3];
    __p = v4;
    v22 = &v4[v3];
    bzero(v4, 6 * v2);
    v21 = v5;
  }
  if (v2)
  {
    v6 = (_QWORD *)a1[1];
    v7 = 3;
    do
    {
      sub_2081F5F4C((uint64_t)v6);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v8 = (uint64_t *)a1[1], v23 = 3, v24 = (char *)__p + v7 - 3, v9 = (char *)sub_2081F6204(v8), ++v8[14], sub_2081F6E98(v9, (uint64_t)&v23), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v10 = (uint64_t *)a1[1];
      v23 = 3;
      v24 = (char *)__p + v7;
      v11 = (char *)sub_2081F6204(v10);
      ++v10[14];
      sub_2081F6E98(v11, (uint64_t)&v23);
      v6 = (_QWORD *)a1[1];
      v12 = v6[6];
      v6[4] = *(_QWORD *)(v12 - 8);
      v13 = v6[9];
      v6[14] = *(_QWORD *)(v13 - 8);
      v6[6] = v12 - 8;
      v6[9] = v13 - 8;
      v7 += 6;
      --v2;
    }
    while (v2);
  }
  sub_20807D868(&v23, 5, (uint64_t)&__p);
  v15 = v23;
  v14 = v24;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v16 = *a1;
  v17 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  if (__p)
  {
    v21 = __p;
    operator delete(__p);
  }
}

void sub_207ED81BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ED8224(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (6 * v2)
  {
    if (6 * v2 < 0)
      sub_207CA420C();
    __p = operator new(12 * v2);
    v19 = (char *)__p + 12 * v2;
    bzero(__p, 12 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 6;
    do
    {
      sub_2081F5F4C((uint64_t)v3);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v5 = (uint64_t *)a1[1], v20 = 3, v21 = (char *)__p + v4 - 6, v6 = (char *)sub_2081F6204(v5), ++v5[14], sub_2081F6F88(v6, (uint64_t)&v20), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 3;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2081F6204(v7);
      ++v7[14];
      sub_2081F6F88(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 12;
      --v2;
    }
    while (v2);
  }
  sub_20807DBA8(&v20, 6, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v20 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_207ED84A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ED850C(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 62)
      sub_207CA420C();
    __p = operator new(24 * v2);
    v19 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 12;
    do
    {
      sub_2081F5F4C((uint64_t)v3);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v5 = (uint64_t *)a1[1], v20 = 3, v21 = (char *)__p + v4 - 12, v6 = (char *)sub_2081F6204(v5), ++v5[14], sub_2081F7134(v6, (uint64_t)&v20), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 3;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2081F6204(v7);
      ++v7[14];
      sub_2081F7134(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 24;
      --v2;
    }
    while (v2);
  }
  sub_20807DEF0(&v20, 7, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v20 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_207ED8790(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ED87F8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  char *v9;
  _BYTE *v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  _BYTE *v14;
  _BYTE *v15;
  const void *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  void *__p;
  void *v22;
  char *v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*a1 + 8);
  v22 = 0;
  v23 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 61)
      sub_207CA420C();
    __p = operator new(48 * v2);
    v23 = (char *)__p + 48 * v2;
    bzero(__p, 48 * v2);
    v22 = v23;
  }
  if (v2)
  {
    v3 = 0;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_2081F5F4C((uint64_t)v4);
      v7 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_29;
      }
      v8 = (uint64_t *)a1[1];
      v9 = (char *)sub_2081F6204(v8);
      ++v8[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_2081F8788(v9, (uint64_t)&v24);
      v10 = v24;
      if (v25 != v24)
      {
        memmove(&v7[v3], v24, v25 - v24);
        v10 = v24;
      }
      if (v10)
      {
        v25 = v10;
        operator delete(v10);
      }
      v11 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_29:
        abort();
      }
      v12 = (uint64_t *)a1[1];
      v13 = (char *)sub_2081F6204(v12);
      ++v12[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_2081F8788(v13, (uint64_t)&v24);
      v14 = v24;
      if (v25 != v24)
      {
        memmove(&v11[v3 + 24], v24, v25 - v24);
        v14 = v24;
      }
      if (v14)
      {
        v25 = v14;
        operator delete(v14);
      }
      v4 = (_QWORD *)a1[1];
      v5 = v4[6];
      v4[4] = *(_QWORD *)(v5 - 8);
      v6 = v4[9];
      v4[14] = *(_QWORD *)(v6 - 8);
      v4[6] = v5 - 8;
      v4[9] = v6 - 8;
      v3 += 48;
      --v2;
    }
    while (v2);
  }
  sub_20807E238(&v24, 8, (uint64_t)&__p);
  v16 = v24;
  v15 = v25;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *((_QWORD *)v24 + 7), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v17 = *a1;
  v18 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v15;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  if (__p)
  {
    v22 = __p;
    operator delete(__p);
  }
}

void sub_207ED8AD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ED8B54(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  void *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 62)
      sub_207D0CD58();
    __p = operator new(24 * v2);
    v21 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v20 = v21;
  }
  if (v2)
  {
    v3 = 12;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_2081F5F4C((uint64_t)v4);
      v5 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v6 = (uint64_t *)a1[1], v7 = sub_2081F6204(v6), ++v6[14], sub_2081F75DC(v7, (float *)&v5[v3 - 12]), (v8 = (char *)__p) == 0)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v9 = (uint64_t *)a1[1];
      v10 = sub_2081F6204(v9);
      ++v9[14];
      sub_2081F75DC(v10, (float *)&v8[v3]);
      v4 = (_QWORD *)a1[1];
      v11 = v4[6];
      v4[4] = *(_QWORD *)(v11 - 8);
      v12 = v4[9];
      v4[14] = *(_QWORD *)(v12 - 8);
      v4[6] = v11 - 8;
      v4[9] = v12 - 8;
      v3 += 24;
      --v2;
    }
    while (v2);
  }
  sub_20807E580(v22, 11, (uint64_t)&__p);
  v14 = v22[0];
  v13 = v22[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
}

void sub_207ED8DC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ED8E2C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  void *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 61)
      sub_207CA420C();
    __p = operator new(48 * v2);
    v21 = (char *)__p + 48 * v2;
    bzero(__p, 48 * v2);
    v20 = v21;
  }
  if (v2)
  {
    v3 = 24;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_2081F5F4C((uint64_t)v4);
      v5 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v6 = (uint64_t *)a1[1], v7 = sub_2081F6204(v6), ++v6[14], sub_2081F76E4(v7, (double *)&v5[v3 - 24]), (v8 = (char *)__p) == 0)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v9 = (uint64_t *)a1[1];
      v10 = sub_2081F6204(v9);
      ++v9[14];
      sub_2081F76E4(v10, (double *)&v8[v3]);
      v4 = (_QWORD *)a1[1];
      v11 = v4[6];
      v4[4] = *(_QWORD *)(v11 - 8);
      v12 = v4[9];
      v4[14] = *(_QWORD *)(v12 - 8);
      v4[6] = v11 - 8;
      v4[9] = v12 - 8;
      v3 += 48;
      --v2;
    }
    while (v2);
  }
  sub_20807E724(v22, 12, (uint64_t)&__p);
  v14 = v22[0];
  v13 = v22[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
}

void sub_207ED909C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_207ED9104(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v25;
  uint64_t v26[27];
  _BYTE v27[8];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v26);
    sub_207E0AB10((uint64_t)v27, v26);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v27);
        if (!v42)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v25, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v8 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v8;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v33;
    v10 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v11 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v11;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v12 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v12;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v15 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v40;
LABEL_45:
    *((_QWORD *)&v40 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v26);
  sub_207E0AB10((uint64_t)v27, v26);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v25, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v17 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v17;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v33;
    v19 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v20 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v20;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v21 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v21;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v27);
  if (v42)
  {
LABEL_38:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v23 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (v36 && SHIBYTE(v35) < 0)
    operator delete((void *)v34);
  if (v31 && SHIBYTE(v30) < 0)
    operator delete((void *)v29);
  sub_207D49CF4((uint64_t)v26);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E17BB8((uint64_t)v26, a2, v4);
  LODWORD(v26[0]) = 1;
  sub_20820BA20(a2[6], v26);
  return sub_207ED9590((uint64_t)v26, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_207ED9548(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_207ED9590(uint64_t a1, _QWORD *a2, unsigned __int8 *a3)
{
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD v10[3];
  __int128 v11;

  v5 = a2 + 2;
  sub_207E17CA8(a2 + 2);
  LOBYTE(v10[0]) = 0;
  sub_20820B6F8(a2[6], v10);
  *a3 = v10[0];
  sub_20820BBEC(a2[6], (_QWORD *)a3 + 1);
  v11 = xmmword_24C0768A8;
  v6 = *a3;
  v10[0] = a3;
  v10[1] = a2;
  v10[2] = &v11;
  sub_207ED9658(v6, v10);
  v7 = a2[4];
  result = (*(uint64_t (**)(_QWORD *))(a2[2] + 32))(v5);
  v9 = *(_QWORD *)(v7 - 16) - result + *(_QWORD *)(v7 - 8);
  if (v9)
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(*v5 + 40))(v5, v9);
  a2[4] -= 16;
  return result;
}

void sub_207ED9658(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_207ED9700(a2);
      break;
    case 1:
      sub_207ED98E0(a2);
      break;
    case 2:
      sub_207ED9AD4(a2);
      break;
    case 3:
      sub_207ED9CCC(a2);
      break;
    case 5:
      sub_207ED9EC4(a2);
      break;
    case 6:
      sub_207EDA0A4(a2);
      break;
    case 7:
      sub_207EDA298(a2);
      break;
    case 8:
      sub_207EDA490(a2);
      break;
    case 11:
      sub_207EDA688(a2);
      break;
    case 12:
      sub_207EDA880(a2);
      break;
    default:
      sub_2082056D4(a1);
  }
}

void sub_207ED9700(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = 3 * *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  v3 = 2 * v2;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_207CF94B8();
    v4 = operator new(2 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = *(_QWORD *)(a1[1] + 48);
      do
      {
        sub_20820B6F8(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_20807DA08(v16, 0, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_207ED9880(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ED98E0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_207DCF3A0();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 2 * v6;
      do
      {
        sub_20820B88C(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_20807DD4C(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ED9A74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ED9AD4(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_207CA420C();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_20820BA20(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_20807E094(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ED9C6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ED9CCC(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_20820BBEC(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_20807E3DC(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207ED9E64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207ED9EC4(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = 3 * *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  v3 = 2 * v2;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_207CA420C();
    v4 = operator new(2 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = *(_QWORD *)(a1[1] + 48);
      do
      {
        sub_20820B648(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_20807D868(v16, 5, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_207EDA044(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDA0A4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_207CA420C();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 2 * v6;
      do
      {
        sub_20820B7DC(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_20807DBA8(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EDA238(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDA298(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_207CA420C();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_20820B970(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_20807DEF0(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EDA430(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDA490(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_20820BB04(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_20807E238(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EDA628(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDA688(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_207D0CD58();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 4 * v6;
      do
      {
        sub_20820BCC8(v7, (float *)v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_20807E580(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EDA820(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDA880(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = *(_QWORD *)(a1[1] + 48);
      v8 = 8 * v6;
      do
      {
        sub_20820BDF8(v7, (double *)v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_20807E724(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EDAA18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDAA78(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v27);
    sub_207E0AB10((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v27);
  sub_207E0AB10((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_207D49CF4((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E19198(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207EDAF28((uint64_t)v27, a2, (unsigned __int8 *)(v3 + 200));
}

void sub_207EDAEE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EDAF28(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v5;
  char *v6;
  int v7;
  int v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *exception;
  _BYTE *v14;

  sub_2081F5AC0(a2);
  v5 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v5)
    *(_BYTE *)(a2 + 104) = 1;
  v6 = (char *)sub_2081F5D78((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v14 = 0;
  sub_208097288(v6, &v14);
  if (HIDWORD(v14))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24C08F078;
    __cxa_throw(exception, (struct type_info *)&unk_24C08F090, (void (*)(void *))std::exception::~exception);
  }
  v7 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value_type";
  *(_QWORD *)(a2 + 96) = 10;
  if (!v7)
    *(_BYTE *)(a2 + 104) = 1;
  v14 = a3;
  sub_207E3F0C4((uint64_t *)a2, &v14);
  v8 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "size";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v8)
    *(_BYTE *)(a2 + 104) = 1;
  v9 = (char *)sub_2081F5D78((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v14 = 0;
  sub_208097288(v9, &v14);
  *((_QWORD *)a3 + 1) = v14;
  v10 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "lines3";
  *(_QWORD *)(a2 + 96) = 6;
  if (!v10)
    *(_BYTE *)(a2 + 104) = 1;
  sub_2081F5AC0(a2);
  sub_207EDB0B8(*a3, (uint64_t)a3, a2);
  v11 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(a2 + 48) = v11 - 8;
  *(_QWORD *)(a2 + 72) = v12 - 8;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v11 - 16);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v12 - 16);
  *(_QWORD *)(a2 + 48) = v11 - 16;
  *(_QWORD *)(a2 + 72) = v12 - 16;
}

void sub_207EDB0B8(int a1, uint64_t a2, uint64_t a3)
{
  _QWORD v3[2];

  v3[0] = a2;
  v3[1] = a3;
  switch(a1)
  {
    case 0:
      sub_207EDB1E0(v3);
      break;
    case 1:
      sub_207EDB4B8(v3);
      break;
    case 2:
      sub_207EDB7A0(v3);
      break;
    case 3:
      sub_207EDBA8C(v3);
      break;
    case 5:
      sub_207EDBDE8(v3);
      break;
    case 6:
      sub_207EDC0C0(v3);
      break;
    case 7:
      sub_207EDC3A8(v3);
      break;
    case 8:
      sub_207EDC694(v3);
      break;
    case 11:
      sub_207EDC9F0(v3);
      break;
    case 12:
      sub_207EDCCC8(v3);
      break;
    default:
      sub_2082056D4(a1);
  }
}

void sub_207EDB1E0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  void *__p;
  void *v21;
  char *v22;
  uint64_t v23;
  char *v24;

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_207CF94B8();
    v4 = (char *)operator new(6 * v2);
    v5 = &v4[v3];
    __p = v4;
    v22 = &v4[v3];
    bzero(v4, 6 * v2);
    v21 = v5;
  }
  if (v2)
  {
    v6 = (_QWORD *)a1[1];
    v7 = 3;
    do
    {
      sub_2081F5AC0((uint64_t)v6);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v8 = (uint64_t *)a1[1], v23 = 3, v24 = (char *)__p + v7 - 3, v9 = (char *)sub_2081F5D78(v8), ++v8[14], sub_2081F5E90(v9, (uint64_t)&v23), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v10 = (uint64_t *)a1[1];
      v23 = 3;
      v24 = (char *)__p + v7;
      v11 = (char *)sub_2081F5D78(v10);
      ++v10[14];
      sub_2081F5E90(v11, (uint64_t)&v23);
      v6 = (_QWORD *)a1[1];
      v12 = v6[6];
      v6[4] = *(_QWORD *)(v12 - 8);
      v13 = v6[9];
      v6[14] = *(_QWORD *)(v13 - 8);
      v6[6] = v12 - 8;
      v6[9] = v13 - 8;
      v7 += 6;
      --v2;
    }
    while (v2);
  }
  sub_20807DA08(&v23, 0, (uint64_t)&__p);
  v15 = v23;
  v14 = v24;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v16 = *a1;
  v17 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  if (__p)
  {
    v21 = __p;
    operator delete(__p);
  }
}

void sub_207EDB450(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDB4B8(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (6 * v2)
  {
    if (6 * v2 < 0)
      sub_207DCF3A0();
    __p = operator new(12 * v2);
    v19 = (char *)__p + 12 * v2;
    bzero(__p, 12 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 6;
    do
    {
      sub_2081F5AC0((uint64_t)v3);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v5 = (uint64_t *)a1[1], v20 = 3, v21 = (char *)__p + v4 - 6, v6 = (char *)sub_2081F5D78(v5), ++v5[14], sub_2081F65B8(v6, (uint64_t)&v20), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 3;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2081F5D78(v7);
      ++v7[14];
      sub_2081F65B8(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 12;
      --v2;
    }
    while (v2);
  }
  sub_20807DD4C(&v20, 1, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v20 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_207EDB738(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDB7A0(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 62)
      sub_207CA420C();
    __p = operator new(24 * v2);
    v19 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 12;
    do
    {
      sub_2081F5AC0((uint64_t)v3);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v5 = (uint64_t *)a1[1], v20 = 3, v21 = (char *)__p + v4 - 12, v6 = (char *)sub_2081F5D78(v5), ++v5[14], sub_2081F6730(v6, (uint64_t)&v20), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 3;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2081F5D78(v7);
      ++v7[14];
      sub_2081F6730(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 24;
      --v2;
    }
    while (v2);
  }
  sub_20807E094(&v20, 2, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v20 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_207EDBA24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDBA8C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  char *v9;
  _BYTE *v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  _BYTE *v14;
  _BYTE *v15;
  const void *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  void *__p;
  void *v22;
  char *v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*a1 + 8);
  v22 = 0;
  v23 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 61)
      sub_207CA420C();
    __p = operator new(48 * v2);
    v23 = (char *)__p + 48 * v2;
    bzero(__p, 48 * v2);
    v22 = v23;
  }
  if (v2)
  {
    v3 = 0;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_2081F5AC0((uint64_t)v4);
      v7 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_29;
      }
      v8 = (uint64_t *)a1[1];
      v9 = (char *)sub_2081F5D78(v8);
      ++v8[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_2081F80CC(v9, (uint64_t)&v24);
      v10 = v24;
      if (v25 != v24)
      {
        memmove(&v7[v3], v24, v25 - v24);
        v10 = v24;
      }
      if (v10)
      {
        v25 = v10;
        operator delete(v10);
      }
      v11 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_29:
        abort();
      }
      v12 = (uint64_t *)a1[1];
      v13 = (char *)sub_2081F5D78(v12);
      ++v12[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_2081F80CC(v13, (uint64_t)&v24);
      v14 = v24;
      if (v25 != v24)
      {
        memmove(&v11[v3 + 24], v24, v25 - v24);
        v14 = v24;
      }
      if (v14)
      {
        v25 = v14;
        operator delete(v14);
      }
      v4 = (_QWORD *)a1[1];
      v5 = v4[6];
      v4[4] = *(_QWORD *)(v5 - 8);
      v6 = v4[9];
      v4[14] = *(_QWORD *)(v6 - 8);
      v4[6] = v5 - 8;
      v4[9] = v6 - 8;
      v3 += 48;
      --v2;
    }
    while (v2);
  }
  sub_20807E3DC(&v24, 3, (uint64_t)&__p);
  v16 = v24;
  v15 = v25;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *((_QWORD *)v24 + 7), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v17 = *a1;
  v18 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v15;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  if (__p)
  {
    v22 = __p;
    operator delete(__p);
  }
}

void sub_207EDBD64(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDBDE8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  char *v9;
  uint64_t *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_owners;
  unint64_t v19;
  void *__p;
  void *v21;
  char *v22;
  uint64_t v23;
  char *v24;

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_207CA420C();
    v4 = (char *)operator new(6 * v2);
    v5 = &v4[v3];
    __p = v4;
    v22 = &v4[v3];
    bzero(v4, 6 * v2);
    v21 = v5;
  }
  if (v2)
  {
    v6 = (_QWORD *)a1[1];
    v7 = 3;
    do
    {
      sub_2081F5AC0((uint64_t)v6);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v8 = (uint64_t *)a1[1], v23 = 3, v24 = (char *)__p + v7 - 3, v9 = (char *)sub_2081F5D78(v8), ++v8[14], sub_2081F63D8(v9, (uint64_t)&v23), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v10 = (uint64_t *)a1[1];
      v23 = 3;
      v24 = (char *)__p + v7;
      v11 = (char *)sub_2081F5D78(v10);
      ++v10[14];
      sub_2081F63D8(v11, (uint64_t)&v23);
      v6 = (_QWORD *)a1[1];
      v12 = v6[6];
      v6[4] = *(_QWORD *)(v12 - 8);
      v13 = v6[9];
      v6[14] = *(_QWORD *)(v13 - 8);
      v6[6] = v12 - 8;
      v6[9] = v13 - 8;
      v7 += 6;
      --v2;
    }
    while (v2);
  }
  sub_20807D868(&v23, 5, (uint64_t)&__p);
  v15 = v23;
  v14 = v24;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v16 = *a1;
  v17 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v14;
  if (v17)
  {
    p_shared_owners = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldaxr(p_shared_owners);
    while (__stlxr(v19 - 1, p_shared_owners));
    if (!v19)
    {
      ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
      std::__shared_weak_count::__release_weak(v17);
    }
  }
  if (__p)
  {
    v21 = __p;
    operator delete(__p);
  }
}

void sub_207EDC058(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDC0C0(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (6 * v2)
  {
    if (6 * v2 < 0)
      sub_207CA420C();
    __p = operator new(12 * v2);
    v19 = (char *)__p + 12 * v2;
    bzero(__p, 12 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 6;
    do
    {
      sub_2081F5AC0((uint64_t)v3);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v5 = (uint64_t *)a1[1], v20 = 3, v21 = (char *)__p + v4 - 6, v6 = (char *)sub_2081F5D78(v5), ++v5[14], sub_2081F64C8(v6, (uint64_t)&v20), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 3;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2081F5D78(v7);
      ++v7[14];
      sub_2081F64C8(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 12;
      --v2;
    }
    while (v2);
  }
  sub_20807DBA8(&v20, 6, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v20 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_207EDC340(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDC3A8(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  char *v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *p_shared_owners;
  unint64_t v16;
  void *__p;
  void *v18;
  char *v19;
  uint64_t v20;
  char *v21;

  v2 = *(_QWORD *)(*a1 + 8);
  v18 = 0;
  v19 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 62)
      sub_207CA420C();
    __p = operator new(24 * v2);
    v19 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v18 = v19;
  }
  if (v2)
  {
    v3 = (_QWORD *)a1[1];
    v4 = 12;
    do
    {
      sub_2081F5AC0((uint64_t)v3);
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v5 = (uint64_t *)a1[1], v20 = 3, v21 = (char *)__p + v4 - 12, v6 = (char *)sub_2081F5D78(v5), ++v5[14], sub_2081F6674(v6, (uint64_t)&v20), !__p)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27,
             (uint64_t)"",
             0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v7 = (uint64_t *)a1[1];
      v20 = 3;
      v21 = (char *)__p + v4;
      v8 = (char *)sub_2081F5D78(v7);
      ++v7[14];
      sub_2081F6674(v8, (uint64_t)&v20);
      v3 = (_QWORD *)a1[1];
      v9 = v3[6];
      v3[4] = *(_QWORD *)(v9 - 8);
      v10 = v3[9];
      v3[14] = *(_QWORD *)(v10 - 8);
      v3[6] = v9 - 8;
      v3[9] = v10 - 8;
      v4 += 24;
      --v2;
    }
    while (v2);
  }
  sub_20807DEF0(&v20, 7, (uint64_t)&__p);
  v12 = v20;
  v11 = v21;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v20 + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v13 = *a1;
  v14 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v11;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v16 = __ldaxr(p_shared_owners);
    while (__stlxr(v16 - 1, p_shared_owners));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v14);
    }
  }
  if (__p)
  {
    v18 = __p;
    operator delete(__p);
  }
}

void sub_207EDC62C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDC694(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  char *v9;
  _BYTE *v10;
  char *v11;
  uint64_t *v12;
  char *v13;
  _BYTE *v14;
  _BYTE *v15;
  const void *v16;
  uint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *p_shared_owners;
  unint64_t v20;
  void *__p;
  void *v22;
  char *v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;

  v2 = *(_QWORD *)(*a1 + 8);
  v22 = 0;
  v23 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 61)
      sub_207CA420C();
    __p = operator new(48 * v2);
    v23 = (char *)__p + 48 * v2;
    bzero(__p, 48 * v2);
    v22 = v23;
  }
  if (v2)
  {
    v3 = 0;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_2081F5AC0((uint64_t)v4);
      v7 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_29;
      }
      v8 = (uint64_t *)a1[1];
      v9 = (char *)sub_2081F5D78(v8);
      ++v8[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_2081F7A10(v9, (uint64_t)&v24);
      v10 = v24;
      if (v25 != v24)
      {
        memmove(&v7[v3], v24, v25 - v24);
        v10 = v24;
      }
      if (v10)
      {
        v25 = v10;
        operator delete(v10);
      }
      v11 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
LABEL_29:
        abort();
      }
      v12 = (uint64_t *)a1[1];
      v13 = (char *)sub_2081F5D78(v12);
      ++v12[14];
      v24 = 0;
      v25 = 0;
      v26 = 0;
      sub_2081F7A10(v13, (uint64_t)&v24);
      v14 = v24;
      if (v25 != v24)
      {
        memmove(&v11[v3 + 24], v24, v25 - v24);
        v14 = v24;
      }
      if (v14)
      {
        v25 = v14;
        operator delete(v14);
      }
      v4 = (_QWORD *)a1[1];
      v5 = v4[6];
      v4[4] = *(_QWORD *)(v5 - 8);
      v6 = v4[9];
      v4[14] = *(_QWORD *)(v6 - 8);
      v4[6] = v5 - 8;
      v4[9] = v6 - 8;
      v3 += 48;
      --v2;
    }
    while (v2);
  }
  sub_20807E238(&v24, 8, (uint64_t)&__p);
  v16 = v24;
  v15 = v25;
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *((_QWORD *)v24 + 7), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v17 = *a1;
  v18 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v15;
  if (v18)
  {
    p_shared_owners = (unint64_t *)&v18->__shared_owners_;
    do
      v20 = __ldaxr(p_shared_owners);
    while (__stlxr(v20 - 1, p_shared_owners));
    if (!v20)
    {
      ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
      std::__shared_weak_count::__release_weak(v18);
    }
  }
  if (__p)
  {
    v22 = __p;
    operator delete(__p);
  }
}

void sub_207EDC96C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, void *a12, uint64_t a13)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDC9F0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  void *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 62)
      sub_207D0CD58();
    __p = operator new(24 * v2);
    v21 = (char *)__p + 24 * v2;
    bzero(__p, 24 * v2);
    v20 = v21;
  }
  if (v2)
  {
    v3 = 12;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_2081F5AC0((uint64_t)v4);
      v5 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v6 = (uint64_t *)a1[1], v7 = sub_2081F5D78(v6), ++v6[14], sub_2081F6B44(v7, (float *)&v5[v3 - 12]), (v8 = (char *)__p) == 0)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v9 = (uint64_t *)a1[1];
      v10 = sub_2081F5D78(v9);
      ++v9[14];
      sub_2081F6B44(v10, (float *)&v8[v3]);
      v4 = (_QWORD *)a1[1];
      v11 = v4[6];
      v4[4] = *(_QWORD *)(v11 - 8);
      v12 = v4[9];
      v4[14] = *(_QWORD *)(v12 - 8);
      v4[6] = v11 - 8;
      v4[9] = v12 - 8;
      v3 += 24;
      --v2;
    }
    while (v2);
  }
  sub_20807E580(v22, 11, (uint64_t)&__p);
  v14 = v22[0];
  v13 = v22[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
}

void sub_207EDCC60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDCCC8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char *v5;
  uint64_t *v6;
  unint64_t v7;
  char *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  void *__p;
  void *v20;
  char *v21;
  _QWORD v22[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  __p = 0;
  if (6 * v2)
  {
    if ((unint64_t)(6 * v2) >> 61)
      sub_207CA420C();
    __p = operator new(48 * v2);
    v21 = (char *)__p + 48 * v2;
    bzero(__p, 48 * v2);
    v20 = v21;
  }
  if (v2)
  {
    v3 = 24;
    v4 = (_QWORD *)a1[1];
    do
    {
      sub_2081F5AC0((uint64_t)v4);
      v5 = (char *)__p;
      if (!__p
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0, (void (*)(void **))sub_208216974)|| (v6 = (uint64_t *)a1[1], v7 = sub_2081F5D78(v6), ++v6[14], sub_2081F6C74(v7, (double *)&v5[v3 - 24]), (v8 = (char *)__p) == 0)&& sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)"", 0,
             (void (*)(void **))sub_208216974))
      {
        abort();
      }
      v9 = (uint64_t *)a1[1];
      v10 = sub_2081F5D78(v9);
      ++v9[14];
      sub_2081F6C74(v10, (double *)&v8[v3]);
      v4 = (_QWORD *)a1[1];
      v11 = v4[6];
      v4[4] = *(_QWORD *)(v11 - 8);
      v12 = v4[9];
      v4[14] = *(_QWORD *)(v12 - 8);
      v4[6] = v11 - 8;
      v4[9] = v12 - 8;
      v3 += 48;
      --v2;
    }
    while (v2);
  }
  sub_20807E724(v22, 12, (uint64_t)&__p);
  v14 = v22[0];
  v13 = v22[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v20 = __p;
    operator delete(__p);
  }
}

void sub_207EDCF38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDCFA0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  char v27;
  char v28;
  char v29;
  char v30;
  char v31;
  void *__p;
  uint64_t v33;
  _BYTE *v34;
  _BYTE v35[24];
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)&__p);
    sub_207E0AB10((uint64_t)v35, (uint64_t *)&__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v35);
        if (!v49)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v31, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = *(_OWORD *)&v35[8];
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v8 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v8;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v40;
    v10 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v11 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v11;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v12 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v12;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v15 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v47;
LABEL_45:
    *((_QWORD *)&v47 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)&__p);
  sub_207E0AB10((uint64_t)v35, (uint64_t *)&__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v31, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = *(_OWORD *)&v35[8];
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v17 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v17;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v40;
    v19 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v20 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v20;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v21 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v21;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v35);
  if (v49)
  {
LABEL_38:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v23 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v46 && SHIBYTE(v45) < 0)
    operator delete((void *)v44);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  sub_207D49CF4((uint64_t)&__p);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  LODWORD(__p) = 6;
  sub_208209DC8(a2, &__p);
  v24 = __p;
  if (__p >= 6)
    v25 = 6;
  else
    v25 = __p;
  if (v25 < 3)
    sub_207E1B3DC((uint64_t)&__p, a2, v4, v25);
  else
    sub_207E1B5CC(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_20820B068(a2, (uint64_t)&__p);
      if (SHIBYTE(v34) < 0)
      {
        if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_92:
          v30 = 0;
          if (SHIBYTE(v34) < 0)
            goto LABEL_95;
          goto LABEL_81;
        }
      }
      else if (SHIBYTE(v34) == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_92;
      }
      v30 = 1;
      if (SHIBYTE(v34) < 0)
LABEL_95:
        operator delete(__p);
LABEL_81:
      if (*(_BYTE *)(a2 + 131))
        v29 = 0;
      else
        v29 = v30;
    }
    while ((v29 & 1) != 0);
  }
  LODWORD(__p) = 1;
  sub_208209DC8(a2, &__p);
  LOBYTE(__p) = 0;
  sub_208209484(a2, &__p);
  *(_BYTE *)(v3 + 200) = (_BYTE)__p;
  sub_20820A270(a2, (_QWORD *)(v3 + 208));
  *(_OWORD *)v35 = xmmword_24C0768A8;
  v26 = *(unsigned __int8 *)(v3 + 200);
  __p = (void *)(v3 + 200);
  v33 = a2;
  v34 = v35;
  sub_207EDD5F4(v26, &__p);
  if (!*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_20820B068(a2, (uint64_t)&__p);
      if (SHIBYTE(v34) < 0)
      {
        if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_77:
          v28 = 0;
          if (SHIBYTE(v34) < 0)
            goto LABEL_80;
          goto LABEL_66;
        }
      }
      else if (SHIBYTE(v34) == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_77;
      }
      v28 = 1;
      if (SHIBYTE(v34) < 0)
LABEL_80:
        operator delete(__p);
LABEL_66:
      if (*(_BYTE *)(a2 + 131))
        v27 = 0;
      else
        v27 = v28;
    }
    while ((v27 & 1) != 0);
  }
}

void sub_207EDD5AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EDD5F4(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_207EDD69C(a2);
      break;
    case 1:
      sub_207EDD878(a2);
      break;
    case 2:
      sub_207EDDA68(a2);
      break;
    case 3:
      sub_207EDDC5C(a2);
      break;
    case 5:
      sub_207EDDE50(a2);
      break;
    case 6:
      sub_207EDE02C(a2);
      break;
    case 7:
      sub_207EDE21C(a2);
      break;
    case 8:
      sub_207EDE410(a2);
      break;
    case 11:
      sub_207EDE604(a2);
      break;
    case 12:
      sub_207EDE7F8(a2);
      break;
    default:
      sub_2082056D4(a1);
  }
}

void sub_207EDD69C(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = 3 * *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  v3 = 2 * v2;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_207CF94B8();
    v4 = operator new(2 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = a1[1];
      do
      {
        sub_208209484(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_20807DA08(v16, 0, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_207EDD818(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDD878(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_207DCF3A0();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        sub_208209920(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_20807DD4C(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EDDA08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDDA68(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_207CA420C();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_208209DC8(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_20807E094(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EDDBFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDDC5C(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_20820A270(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_20807E3DC(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EDDDF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDDE50(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  _BYTE *v4;
  size_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  unint64_t *p_shared_owners;
  unint64_t v12;
  void *__p;
  _BYTE *v14;
  _BYTE *v15;
  _QWORD v16[2];

  v2 = 3 * *(_QWORD *)(*a1 + 8);
  v14 = 0;
  v15 = 0;
  v3 = 2 * v2;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_207CA420C();
    v4 = operator new(2 * v2);
    __p = v4;
    v15 = &v4[v3];
    bzero(v4, v3);
    v14 = &v4[v3];
    v5 = v3;
    if (v3)
    {
      v6 = a1[1];
      do
      {
        sub_20820923C(v6, v4++);
        --v5;
      }
      while (v5);
    }
  }
  sub_20807D868(v16, 5, (uint64_t)&__p);
  v8 = v16[0];
  v7 = v16[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v16[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v9 = *a1;
  v10 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  if (v10)
  {
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v12 = __ldaxr(p_shared_owners);
    while (__stlxr(v12 - 1, p_shared_owners));
    if (!v12)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v10);
    }
  }
  if (__p)
  {
    v14 = __p;
    operator delete(__p);
  }
}

void sub_207EDDFCC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDE02C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_207CA420C();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        sub_2082096CC(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_20807DBA8(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EDE1BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDE21C(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_207CA420C();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_208209B74(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_20807DEF0(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EDE3B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDE410(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_20820A01C(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_20807E238(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EDE5A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDE604(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_207D0CD58();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        sub_20820A740(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_20807E580(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EDE798(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDE7F8(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        sub_20820A994(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_20807E724(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EDE98C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDE9EC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v25);
    sub_207E0AB10((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v25);
  sub_207E0AB10((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_207D49CF4((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E1CD58((uint64_t)v25, a2, v4);
  sub_207EDEE60((uint64_t)v25, a2, v3 + 200);
}

void sub_207EDEE18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EDEE60(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  std::logic_error *exception;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_207CA4068(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  a2[6] = v3 + 4;
  sub_208072ECC(a2);
  sub_207EDEF30(a2, a3);
  v9 = a2[12];
  v10 = a2[9];
  a2[6] = *(_QWORD *)(v9 - 8) + *(_QWORD *)(v10 - 8) + 8;
  a2[9] = v10 - 8;
  a2[12] = v9 - 8;
}

void sub_207EDEF1C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_207EDEF30(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  BOOL v7;
  unint64_t v8;
  std::logic_error *exception;
  _QWORD v10[3];
  __int128 v11;

  v2 = a1[6];
  v3 = a1[7];
  if (v3 <= v2)
    goto LABEL_6;
  v4 = a1[3];
  v5 = *(unsigned __int8 *)(v4 + v2);
  v6 = v2 + 1;
  a1[6] = v6;
  *(_BYTE *)a2 = v5;
  v7 = v3 >= v6;
  v8 = v3 - v6;
  if (!v7)
    v8 = 0;
  if (v8 <= 7)
  {
LABEL_6:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_207CA4068(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(v4 + v6);
  a1[6] += 8;
  v11 = xmmword_24C0768A8;
  v10[0] = a2;
  v10[1] = a1;
  v10[2] = &v11;
  sub_207EDF030(v5, v10);
}

void sub_207EDF008(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_207EDF01C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_207EDF030(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_207EDF0D8(a2);
      break;
    case 1:
      sub_207EDF318(a2);
      break;
    case 2:
      sub_207EDF564(a2);
      break;
    case 3:
      sub_207EDF7B4(a2);
      break;
    case 5:
      sub_207EDFA04(a2);
      break;
    case 6:
      sub_207EDFC44(a2);
      break;
    case 7:
      sub_207EDFE90(a2);
      break;
    case 8:
      sub_207EE00E0(a2);
      break;
    case 11:
      sub_207EE0330(a2);
      break;
    case 12:
      sub_207EE0580(a2);
      break;
    default:
      sub_2082056D4(a1);
  }
}

void sub_207EDF0D8(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = 3 * *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  v3 = 2 * v2;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_207CF94B8();
    v4 = (char *)operator new(2 * v2);
    v5 = &v4[v3];
    __p = v4;
    v21 = &v4[v3];
    bzero(v4, v3);
    v20 = &v4[v3];
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  v6 = v5 - v4;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  memcpy(v4, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_20807DA08(v22, 0, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EDF2A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDF318(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_207DCF3A0();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v22 = &v5[2 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_20807DD4C(v23, 1, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EDF4F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDF564(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_207CA420C();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v22 = &v5[4 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_20807E094(v23, 2, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EDF744(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDF7B4(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v22 = &v5[8 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_20807E3DC(v23, 3, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EDF994(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDFA04(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  char *v5;
  size_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  std::logic_error *exception;
  void *__p;
  char *v20;
  char *v21;
  _QWORD v22[2];

  v2 = 3 * *(_QWORD *)(*a1 + 8);
  v20 = 0;
  v21 = 0;
  v3 = 2 * v2;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_207CA420C();
    v4 = (char *)operator new(2 * v2);
    v5 = &v4[v3];
    __p = v4;
    v21 = &v4[v3];
    bzero(v4, v3);
    v20 = &v4[v3];
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  v6 = v5 - v4;
  v7 = (_QWORD *)a1[1];
  v8 = v7[6];
  v9 = v7[7];
  v10 = v9 >= v8;
  v11 = v9 - v8;
  if (!v10)
    v11 = 0;
  if (v11 < v6)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  memcpy(v4, (const void *)(v7[3] + v8), v6);
  v7[6] += v6;
  sub_20807D868(v22, 5, (uint64_t)&__p);
  v13 = v22[0];
  v12 = v22[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v22[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v14 = *a1;
  v15 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v12;
  if (v15)
  {
    p_shared_owners = (unint64_t *)&v15->__shared_owners_;
    do
      v17 = __ldaxr(p_shared_owners);
    while (__stlxr(v17 - 1, p_shared_owners));
    if (!v17)
    {
      ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
      std::__shared_weak_count::__release_weak(v15);
    }
  }
  if (__p)
  {
    v20 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EDFBD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDFC44(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_207CA420C();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v22 = &v5[2 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_20807DBA8(v23, 6, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EDFE20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EDFE90(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_207CA420C();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v22 = &v5[4 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_20807DEF0(v23, 7, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EE0070(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EE00E0(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v22 = &v5[8 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_20807E238(v23, 8, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EE02C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EE0330(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_207D0CD58();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v22 = &v5[4 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_20807E580(v23, 11, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EE0510(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EE0580(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  size_t v4;
  char *v5;
  char *v6;
  size_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  BOOL v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *p_shared_owners;
  unint64_t v18;
  std::logic_error *exception;
  void *__p;
  char *v21;
  char *v22;
  _QWORD v23[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v21 = 0;
  v22 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v22 = &v5[8 * v3];
    bzero(v5, v4);
    v6 = &v5[v4];
    v21 = &v5[v4];
  }
  else
  {
    v6 = 0;
    v5 = 0;
  }
  v7 = v6 - v5;
  v8 = (_QWORD *)a1[1];
  v9 = v8[6];
  v10 = v8[7];
  v11 = v10 >= v9;
  v12 = v10 - v9;
  if (!v11)
    v12 = 0;
  if (v12 < v7)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Not enough data to read span");
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8C0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  memcpy(v5, (const void *)(v8[3] + v9), v7);
  v8[6] += v7;
  sub_20807E724(v23, 12, (uint64_t)&__p);
  v14 = v23[0];
  v13 = v23[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v23[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v15 = *a1;
  v16 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = v13;
  if (v16)
  {
    p_shared_owners = (unint64_t *)&v16->__shared_owners_;
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (__p)
  {
    v21 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EE0760(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EE07D0(int *a1, _BYTE *a2, _BYTE *a3)
{
  int v5;
  int v7;
  unsigned int v8;
  __int128 *v9;
  _BYTE *v10[3];
  __int128 v11;

  v5 = *a1;
  if (*a1 == 2)
  {
    LODWORD(v10[0]) = 1;
    (*(void (**)(_BYTE *, _BYTE **))(*(_QWORD *)a2 + 104))(a2, v10);
    if (LODWORD(v10[0]) >= 2)
    {
      v8 = v10[0];
      v9 = sub_207EE08D0();
      sub_208212838((std::string *)v9, v8, 1u);
    }
    v5 = *a1;
  }
  if (v5 >= 1)
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 16))(a2);
  v10[0] = a3;
  sub_207E41430(a2, v10);
  (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)a2 + 120))(a2, a3 + 8);
  v11 = xmmword_24C0768A8;
  v7 = *a3;
  v10[0] = a3;
  v10[1] = a2;
  v10[2] = &v11;
  sub_207EE0C80(v7, v10);
  if (v5 >= 1)
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 24))(a2);
}

__int128 *sub_207EE08D0()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D750);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D750))
    return &xmmword_25452D738;
  v2 = sub_207EE09AC();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_207CA40D8(&xmmword_25452D738, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_25452D748 = v2->__r_.__value_.__r.__words[2];
    xmmword_25452D738 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D738, &dword_207C77000);
  __cxa_guard_release(&qword_25452D750);
  return &xmmword_25452D738;
}

void sub_207EE0994(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D750);
  _Unwind_Resume(a1);
}

std::string *sub_207EE09AC()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D770);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D770))
    return &stru_25452D758;
  sub_207EE0A9C((uint64_t)__p);
  sub_207E36DD8((char *)__p, &stru_25452D758);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25452D758, &dword_207C77000);
  __cxa_guard_release(&qword_25452D770);
  return &stru_25452D758;
}

void sub_207EE0A5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25452D770);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25452D770);
  _Unwind_Resume(a1);
}

void sub_207EE0A9C(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25452D790);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25452D790))
  {
    sub_2082159F8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::conio::LinesSample<3>]", qword_25452D778);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452D778, &dword_207C77000);
    __cxa_guard_release(&qword_25452D790);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25452D7B0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25452D7B0))
  {
    v5 = sub_207D49434(qword_25452D778, "<", 0);
    sub_207D49330(qword_25452D778, 0, v5, qword_25452D798);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452D798, &dword_207C77000);
    __cxa_guard_release(&qword_25452D7B0);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_25452D7D0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25452D7D0))
  {
    sub_208215C6C((uint64_t)qword_25452D798, (uint64_t)&xmmword_25452D7B8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D7B8, &dword_207C77000);
    __cxa_guard_release(&qword_25452D7D0);
  }
  if (byte_25452D7CF < 0)
  {
    sub_207CA40D8((_BYTE *)a1, (void *)xmmword_25452D7B8, *((unint64_t *)&xmmword_25452D7B8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_25452D7B8;
    *(_QWORD *)(a1 + 16) = unk_25452D7C8;
  }
}

void sub_207EE0C38(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D7D0);
  _Unwind_Resume(a1);
}

void sub_207EE0C50(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D7B0);
  _Unwind_Resume(a1);
}

void sub_207EE0C68(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D790);
  _Unwind_Resume(a1);
}

void sub_207EE0C80(int a1, _QWORD *a2)
{
  switch(a1)
  {
    case 0:
      sub_207EE0D28(a2);
      break;
    case 1:
      sub_207EE0EF0(a2);
      break;
    case 2:
      sub_207EE10D0(a2);
      break;
    case 3:
      sub_207EE12B4(a2);
      break;
    case 5:
      sub_207EE1498(a2);
      break;
    case 6:
      sub_207EE1660(a2);
      break;
    case 7:
      sub_207EE1840(a2);
      break;
    case 8:
      sub_207EE1A24(a2);
      break;
    case 11:
      sub_207EE1C08(a2);
      break;
    case 12:
      sub_207EE1DEC(a2);
      break;
    default:
      sub_2082056D4(a1);
  }
}

void sub_207EE0D28(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  _QWORD v15[2];

  v2 = 3 * *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  v3 = 2 * v2;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_207CF94B8();
    v4 = (char *)operator new(2 * v2);
    __p = v4;
    v14 = &v4[v3];
    bzero(v4, v3);
    v13 = &v4[v3];
    v5 = a1[1];
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 80))(v5, v4++);
      --v3;
    }
    while (v3);
  }
  sub_20807DA08(v15, 0, (uint64_t)&__p);
  v7 = v15[0];
  v6 = v15[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EE0E90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EE0EF0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_207DCF3A0();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 96))(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_20807DD4C(v18, 1, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EE1070(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EE10D0(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_207CA420C();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 104))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_20807E094(v18, 2, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EE1254(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EE12B4(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 120))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_20807E3DC(v18, 3, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EE1438(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EE1498(_QWORD *a1)
{
  uint64_t v2;
  size_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  void *__p;
  char *v13;
  char *v14;
  _QWORD v15[2];

  v2 = 3 * *(_QWORD *)(*a1 + 8);
  v13 = 0;
  v14 = 0;
  v3 = 2 * v2;
  __p = 0;
  if (2 * v2)
  {
    if ((v3 & 0x8000000000000000) != 0)
      sub_207CA420C();
    v4 = (char *)operator new(2 * v2);
    __p = v4;
    v14 = &v4[v3];
    bzero(v4, v3);
    v13 = &v4[v3];
    v5 = a1[1];
    do
    {
      (*(void (**)(uint64_t, char *))(*(_QWORD *)v5 + 88))(v5, v4++);
      --v3;
    }
    while (v3);
  }
  sub_20807D868(v15, 5, (uint64_t)&__p);
  v7 = v15[0];
  v6 = v15[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v15[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v8 = *a1;
  v9 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  if (v9)
  {
    p_shared_owners = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  if (__p)
  {
    v13 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EE1600(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EE1660(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 < 0)
      sub_207CA420C();
    v4 = 12 * v2;
    v5 = (char *)operator new(12 * v2);
    __p = v5;
    v17 = &v5[2 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 1;
      v7 = a1[1];
      v8 = 2 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 48))(v7, v5);
        v5 += 2;
        v8 -= 2;
      }
      while (v8);
    }
  }
  sub_20807DBA8(v18, 6, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EE17E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EE1840(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_207CA420C();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 56))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_20807DEF0(v18, 7, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EE19C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EE1A24(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 72))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_20807E238(v18, 8, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EE1BA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EE1C08(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 62)
      sub_207D0CD58();
    v4 = 24 * v2;
    v5 = (char *)operator new(24 * v2);
    __p = v5;
    v17 = &v5[4 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 2;
      v7 = a1[1];
      v8 = 4 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 128))(v7, v5);
        v5 += 4;
        v8 -= 4;
      }
      while (v8);
    }
  }
  sub_20807E580(v18, 11, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EE1D8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EE1DEC(_QWORD *a1)
{
  uint64_t v2;
  unint64_t v3;
  int64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  void *__p;
  char *v16;
  char *v17;
  _QWORD v18[2];

  v2 = *(_QWORD *)(*a1 + 8);
  v16 = 0;
  v17 = 0;
  v3 = 6 * v2;
  __p = 0;
  if (6 * v2)
  {
    if (v3 >> 61)
      sub_207CA420C();
    v4 = 48 * v2;
    v5 = (char *)operator new(48 * v2);
    __p = v5;
    v17 = &v5[8 * v3];
    bzero(v5, v4);
    v16 = &v5[v4];
    if (v4)
    {
      v6 = v4 >> 3;
      v7 = a1[1];
      v8 = 8 * v6;
      do
      {
        (*(void (**)(uint64_t, char *))(*(_QWORD *)v7 + 136))(v7, v5);
        v5 += 8;
        v8 -= 8;
      }
      while (v8);
    }
  }
  sub_20807E724(v18, 12, (uint64_t)&__p);
  v10 = v18[0];
  v9 = v18[1];
  if (__ROR8__(0xAAAAAAAAAAAAAAABLL * *(_QWORD *)(v18[0] + 56), 1) >= 0x2AAAAAAAAAAAAAABuLL
    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Container/src/Lines.cpp", 43, (uint64_t)"this->numbers.Size() % (N * 2) == 0", 35, (uint64_t)&unk_208224959, 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v11 = *a1;
  v12 = *(std::__shared_weak_count **)(*a1 + 24);
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  if (v12)
  {
    p_shared_owners = (unint64_t *)&v12->__shared_owners_;
    do
      v14 = __ldaxr(p_shared_owners);
    while (__stlxr(v14 - 1, p_shared_owners));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  if (__p)
  {
    v16 = (char *)__p;
    operator delete(__p);
  }
}

void sub_207EE1F70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL sub_207EE1FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  _BOOL8 v11;
  _QWORD v13[5];
  unsigned __int8 **v14;
  _QWORD v15[5];
  unsigned __int8 **v16;
  char v17;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[6];

  v29[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_207E372B8(v4, (uint64_t)v24);
  }
  else if (v5 == 1)
  {
    sub_207E370A0(v4, (uint64_t)v24);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    sub_207E02E5C(v4, (uint64_t)v24);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_207E372B8(v6, (uint64_t)v18);
  }
  else if (v7 == 1)
  {
    sub_207E370A0(v6, (uint64_t)v18);
  }
  else
  {
    if (v7)
      sub_207CA9F48();
    sub_207E02E5C(v6, (uint64_t)v18);
  }
  v15[0] = v24;
  v15[1] = &v25;
  v15[2] = &v26;
  v15[3] = &v27;
  v15[4] = &v28;
  v16 = (unsigned __int8 **)v29;
  v13[0] = v18;
  v13[1] = &v19;
  v13[2] = &v20;
  v13[3] = &v21;
  v13[4] = &v22;
  v14 = (unsigned __int8 **)&v23;
  if (sub_207EFF314((uint64_t)&v17, v15, v13))
  {
    if (*((_BYTE *)v16 + 24) && *((_BYTE *)v14 + 24))
    {
      v8 = *v16;
      v9 = v16[1];
      v10 = *v14;
      if (v9 - *v16 == v14[1] - *v14)
      {
        if (v8 != v9)
        {
          while (sub_207EFE5C8(v8, v10))
          {
            v8 += 96;
            v10 += 96;
            if (v8 == v9)
              goto LABEL_23;
          }
          goto LABEL_22;
        }
LABEL_23:
        v11 = sub_208086898((int *)(a1 + 200), (int *)(a2 + 200));
        goto LABEL_24;
      }
    }
    else if ((*((_BYTE *)v16 + 24) != 0) == (*((_BYTE *)v14 + 24) != 0))
    {
      goto LABEL_23;
    }
  }
LABEL_22:
  v11 = 0;
LABEL_24:
  sub_207D49CF4((uint64_t)v18);
  sub_207D49CF4((uint64_t)v24);
  return v11;
}

void sub_207EE21B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a23);
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_207EE21D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_207EE21E8(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076B88, 0);
  if (v4)
  {
    sub_207EE2560(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076BD0, 0);
    if (v5)
    {
      sub_207EE2800(&v9, (uint64_t)v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076C58, 0);
      if (v6)
      {
        sub_207EE29F4(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076CA0, 0);
        if (v7)
        {
          sub_207EE2C94(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24C082C60)
            sub_207EE2E6C(&v9, (uint64_t)a1);
          else
            sub_207EE234C(&v8, a1);
        }
      }
    }
  }
}

void sub_207EE234C(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    LODWORD(v12) = 4;
    (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v12);
    v9 = v12;
    if (v8 < 1)
    {
      sub_207E3CE18((uint64_t)a2, v4, v12);
      goto LABEL_17;
    }
    if (v8 == 2)
    {
      LODWORD(v12) = 3;
      (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v12);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_207E3CE18((uint64_t)a2, v4, v9);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    LODWORD(v12) = 5;
    (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v12);
    v11 = v12;
    if (v10 < 1)
    {
      sub_207E3C790((uint64_t)a2, v4, v12);
      goto LABEL_17;
    }
    if (v10 == 2)
    {
      LODWORD(v12) = 3;
      (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v12);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_207E3C790((uint64_t)a2, v4, v11);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = a2[2];
    LODWORD(v12) = 6;
    (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v12);
    v7 = v12;
    if (v6 < 1)
    {
      sub_207E12E90((uint64_t)a2, v4, v12);
      goto LABEL_17;
    }
    if (v6 == 2)
    {
      LODWORD(v12) = 3;
      (*(void (**)(_DWORD *, uint64_t *))(*(_QWORD *)a2 + 104))(a2, &v12);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_207E12E90((uint64_t)a2, v4, v7);
  }
  (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
LABEL_17:
  v12 = *((_QWORD *)a2 + 1);
  sub_207E839E0((int *)&v12, (uint64_t)a2, v3 + 200);
}

void sub_207EE2560(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v16 = "version";
    v17 = 7;
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E383C8(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F1E44(a2);
      v16 = "version";
      v17 = 7;
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F3DDC(a2, &v18);
      sub_207E0BDBC(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v16 = "version";
    v17 = 7;
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E37A58(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_207E7F2C0((uint64_t)&v16, a2, v3 + 200);
}

void sub_207EE2800(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v7 + 40))
    {
      v15 = (uint64_t *)(v7 + 16);
      sub_208210C8C(&v15, 4u);
    }
    else
    {
      sub_208210F00((uint64_t)&v15, v7 + 8);
    }
    sub_20820C2C0(*(_QWORD *)(a2 + 24));
    sub_207E39730(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v8 + 40))
    {
      v15 = (uint64_t *)(v8 + 16);
      sub_208210C8C(&v15, 5u);
    }
    else
    {
      sub_208210F00((uint64_t)&v15, v8 + 8);
    }
    sub_20820C2C0(*(_QWORD *)(a2 + 24));
    sub_207E39614(a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v6 + 40))
    {
      v15 = (uint64_t *)(v6 + 16);
      sub_208210C8C(&v15, 6u);
    }
    else
    {
      sub_208210F00((uint64_t)&v15, v6 + 8);
    }
    sub_20820C2C0(*(_QWORD *)(a2 + 24));
    sub_207E0E660(a2, v4, 6u);
  }
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_20820C0E8((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v14 + 40))
  {
    v15 = (uint64_t *)(v14 + 16);
    sub_208210C8C(&v15, 2u);
  }
  else
  {
    sub_208210F00((uint64_t)&v15, v14 + 8);
  }
  sub_207E80318((uint64_t)&v15, a2, (int *)(v3 + 200));
}

void sub_207EE29F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v16 = "version";
    v17 = 7;
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A78C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F17E4(a2);
      v16 = "version";
      v17 = 7;
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F20F8(a2, &v18);
      sub_207E0F904(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v16 = "version";
    v17 = 7;
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A048(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_207E81944((uint64_t)&v16, a2, v3 + 200);
}

_QWORD *sub_207EE2C94(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v18 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v8, (uint64_t)&v18, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3BAE4(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v16 = *(_BYTE *)(a2 + 32);
        sub_207CBAB98(v6, (uint64_t)&v16, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_207E11040(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v10, (uint64_t)&v19, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v17 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v9, (uint64_t)&v17, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3B540(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v20 = v7;
  sub_207CBAB98(v11, (uint64_t)&v20, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v21 = *(_BYTE *)(a2 + 32);
    sub_207CBAB98(v13, (uint64_t)&v21, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  return sub_207E82730((uint64_t)&v15, a2, v3 + 200);
}

char *sub_207EE2E6C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C21C(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C100(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    __src = 6;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E11EF8(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 2;
  sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  return sub_207E83460((uint64_t)&__src, (_QWORD *)a2, (int *)(v3 + 200));
}

void sub_207EE2FEC(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D28, 0);
  if (v4)
  {
    sub_207EE3678(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D60, 0);
    if (v5)
    {
      sub_207EE3B24(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076DE8, 0);
      if (v6)
      {
        sub_207EE3F94(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076E20, 0);
        if (v7)
        {
          sub_207EE4440(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24C082DE0)
            sub_207EE4A84(&v9, a1);
          else
            sub_207EE3150(&v8, (uint64_t *)a1);
        }
      }
    }
  }
}

void sub_207EE3150(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  void (**v28)(int);
  char v29;
  uint64_t v30[27];
  unsigned int v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v30);
    sub_207E0AB10((uint64_t)&v31, v30);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)&v31);
        if (!v46)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v29, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v8 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v8;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v37;
    v10 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v11 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v11;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v12 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v12;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v15 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v44;
LABEL_45:
    *((_QWORD *)&v44 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v30);
  sub_207E0AB10((uint64_t)&v31, v30);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v29, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v17 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v17;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v37;
    v19 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v20 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v20;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v21 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v21;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)&v31);
  if (v46)
  {
LABEL_38:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v23 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  sub_207D49CF4((uint64_t)v30);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *a2;
  v30[0] = a2[1];
  v25 = v30[0];
  v31 = 6;
  (*(void (**)(uint64_t *, unsigned int *))(v24 + 104))(a2, &v31);
  if (v25 < 1)
  {
    if (v31 < 3)
      sub_207E1EB04((uint64_t)&v31, (uint64_t)a2, v4, v31);
    else
      sub_207E1ED78((uint64_t)a2, v4, v31);
  }
  else
  {
    sub_207E1E50C((int *)v30, (uint64_t)a2, v4, v31);
  }
  v26 = *a2;
  v30[0] = a2[1];
  v27 = v30[0];
  v31 = 2;
  (*(void (**)(uint64_t *, unsigned int *))(v26 + 104))(a2, &v31);
  v28 = (void (**)(int))(v3 + 200);
  if (v27 < 1)
  {
    if (v31 < 2)
      sub_207E95244((uint64_t)&v31, (uint64_t)a2, (uint64_t)v28);
    else
      sub_207E95440((uint64_t)a2, (void (**)(int))(v3 + 200));
  }
  else
  {
    sub_207E94D68((int *)v30, (uint64_t)a2, v28, v31);
  }
}

void sub_207EE3630(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_207EE3678(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v27;
  uint64_t v28[27];
  _BYTE v29[8];
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v28);
    sub_207E0AB10((uint64_t)v29, v28);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v29);
        if (!v44)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v27, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v8 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v8;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v35;
    v10 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v11 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v11;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v12 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v12;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v15 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v42;
LABEL_45:
    *((_QWORD *)&v42 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v28);
  sub_207E0AB10((uint64_t)v29, v28);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v27, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v17 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v17;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v35;
    v19 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v20 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v20;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v21 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v21;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v29);
  if (v44)
  {
LABEL_38:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v23 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v33 && SHIBYTE(v32) < 0)
    operator delete((void *)v31);
  sub_207D49CF4((uint64_t)v28);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E14108(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  return sub_207E84A1C(a2, v3 + 200);
}

void sub_207EE3ADC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_207EE3B24(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v25;
  uint64_t v26[27];
  _BYTE v27[8];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v26);
    sub_207E0AB10((uint64_t)v27, v26);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v27);
        if (!v42)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v25, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v8 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v8;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v33;
    v10 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v11 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v11;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v12 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v12;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v15 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v40;
LABEL_45:
    *((_QWORD *)&v40 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v26);
  sub_207E0AB10((uint64_t)v27, v26);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v25, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v17 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v17;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v33;
    v19 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v20 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v20;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v21 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v21;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v27);
  if (v42)
  {
LABEL_38:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v23 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (v36 && SHIBYTE(v35) < 0)
    operator delete((void *)v34);
  if (v31 && SHIBYTE(v30) < 0)
    operator delete((void *)v29);
  sub_207D49CF4((uint64_t)v26);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E17BB8((uint64_t)v26, a2, v4);
  return sub_207E882B8(a2, (int *)(v3 + 200));
}

void sub_207EE3F4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_207EE3F94(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v27;
  uint64_t v28[27];
  _BYTE v29[8];
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v28);
    sub_207E0AB10((uint64_t)v29, v28);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v29);
        if (!v44)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v27, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v8 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v8;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v35;
    v10 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v11 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v11;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v12 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v12;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v15 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v42;
LABEL_45:
    *((_QWORD *)&v42 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v28);
  sub_207E0AB10((uint64_t)v29, v28);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v27, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v17 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v17;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v35;
    v19 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v20 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v20;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v21 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v21;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v29);
  if (v44)
  {
LABEL_38:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v23 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v33 && SHIBYTE(v32) < 0)
    operator delete((void *)v31);
  sub_207D49CF4((uint64_t)v28);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E19198(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  return sub_207E8AE9C(a2, v3 + 200);
}

void sub_207EE43F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EE4440(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  void *__p;
  uint64_t v34;
  char v35;
  _BYTE v36[8];
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  uint64_t v47;
  char v48;
  __int128 v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)&__p);
    sub_207E0AB10((uint64_t)v36, (uint64_t *)&__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v36);
        if (!v51)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v32, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v37;
    *(_BYTE *)(v3 + 64) = 0;
    if (v40)
    {
      v8 = v39;
      *(_OWORD *)(v3 + 40) = v38;
      *(_QWORD *)(v3 + 56) = v8;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v42;
    v10 = v41;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v45)
    {
      v11 = v44;
      *(_OWORD *)(v3 + 96) = v43;
      *(_QWORD *)(v3 + 112) = v11;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v48)
    {
      v12 = v47;
      *(_OWORD *)(v3 + 128) = v46;
      *(_QWORD *)(v3 + 144) = v12;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v51;
    if (v51)
    {
      *(_OWORD *)(v3 + 160) = v49;
      *(_QWORD *)(v3 + 176) = v50;
      v49 = 0uLL;
      v50 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v49;
    if (!(_QWORD)v49)
      goto LABEL_46;
    v15 = *((_QWORD *)&v49 + 1);
    v16 = (void *)v49;
    if (*((_QWORD *)&v49 + 1) == (_QWORD)v49)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v49;
LABEL_45:
    *((_QWORD *)&v49 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)&__p);
  sub_207E0AB10((uint64_t)v36, (uint64_t *)&__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v32, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v37;
    *(_BYTE *)(v3 + 64) = 0;
    if (v40)
    {
      v17 = v39;
      *(_OWORD *)(v3 + 40) = v38;
      *(_QWORD *)(v3 + 56) = v17;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v42;
    v19 = v41;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v45)
    {
      v20 = v44;
      *(_OWORD *)(v3 + 96) = v43;
      *(_QWORD *)(v3 + 112) = v20;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v48)
    {
      v21 = v47;
      *(_OWORD *)(v3 + 128) = v46;
      *(_QWORD *)(v3 + 144) = v21;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v51;
    if (v51)
    {
      *(_OWORD *)(v3 + 160) = v49;
      *(_QWORD *)(v3 + 176) = v50;
      v49 = 0uLL;
      v50 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v36);
  if (v51)
  {
LABEL_38:
    v14 = v49;
    if (!(_QWORD)v49)
      goto LABEL_46;
    v23 = *((_QWORD *)&v49 + 1);
    v16 = (void *)v49;
    if (*((_QWORD *)&v49 + 1) == (_QWORD)v49)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v48 && SHIBYTE(v47) < 0)
    operator delete((void *)v46);
  if (v45 && SHIBYTE(v44) < 0)
    operator delete((void *)v43);
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  sub_207D49CF4((uint64_t)&__p);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  LODWORD(__p) = 6;
  sub_208209DC8(a2, &__p);
  v24 = __p;
  if (__p >= 6)
    v25 = 6;
  else
    v25 = __p;
  if (v25 < 3)
    sub_207E1B3DC((uint64_t)&__p, a2, v4, v25);
  else
    sub_207E1B5CC(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_20820B068(a2, (uint64_t)&__p);
      if (v35 < 0)
      {
        if (v34 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_80:
          v29 = 0;
          if (v35 < 0)
            goto LABEL_83;
          goto LABEL_69;
        }
      }
      else if (v35 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_80;
      }
      v29 = 1;
      if (v35 < 0)
LABEL_83:
        operator delete(__p);
LABEL_69:
      if (*(_BYTE *)(a2 + 131))
        v28 = 0;
      else
        v28 = v29;
    }
    while ((v28 & 1) != 0);
  }
  LODWORD(__p) = 2;
  sub_208209DC8(a2, &__p);
  v26 = __p;
  if (__p >= 2)
    v27 = 2;
  else
    v27 = __p;
  if (v27 < 2)
    sub_207E8E57C((uint64_t)&__p, a2, v3 + 200);
  else
    sub_207E8E778(a2, (int *)(v3 + 200));
  if (v26 >= 2 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_20820B068(a2, (uint64_t)&__p);
      if (v35 < 0)
      {
        if (v34 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_99:
          v31 = 0;
          if (v35 < 0)
            goto LABEL_102;
          goto LABEL_88;
        }
      }
      else if (v35 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_99;
      }
      v31 = 1;
      if (v35 < 0)
LABEL_102:
        operator delete(__p);
LABEL_88:
      if (*(_BYTE *)(a2 + 131))
        v30 = 0;
      else
        v30 = v31;
    }
    while ((v30 & 1) != 0);
  }
}

void sub_207EE4A3C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EE4A84(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v25);
    sub_207E0AB10((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v25);
  sub_207E0AB10((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_207D49CF4((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E1CD58((uint64_t)v25, a2, v4);
  sub_207E91240((uint64_t)v25, a2, (int *)(v3 + 200));
}

void sub_207EE4EB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_207EE4EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v11;
  _QWORD v13[5];
  unsigned __int8 **v14;
  _QWORD v15[5];
  unsigned __int8 **v16;
  char v17;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[6];

  v29[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_207E372B8(v4, (uint64_t)v24);
  }
  else if (v5 == 1)
  {
    sub_207E370A0(v4, (uint64_t)v24);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    sub_207E02E5C(v4, (uint64_t)v24);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_207E372B8(v6, (uint64_t)v18);
  }
  else if (v7 == 1)
  {
    sub_207E370A0(v6, (uint64_t)v18);
  }
  else
  {
    if (v7)
      sub_207CA9F48();
    sub_207E02E5C(v6, (uint64_t)v18);
  }
  v15[0] = v24;
  v15[1] = &v25;
  v15[2] = &v26;
  v15[3] = &v27;
  v15[4] = &v28;
  v16 = (unsigned __int8 **)v29;
  v13[0] = v18;
  v13[1] = &v19;
  v13[2] = &v20;
  v13[3] = &v21;
  v13[4] = &v22;
  v14 = (unsigned __int8 **)&v23;
  if (sub_207EFF314((uint64_t)&v17, v15, v13))
  {
    if (*((_BYTE *)v16 + 24) && *((_BYTE *)v14 + 24))
    {
      v8 = *v16;
      v9 = v16[1];
      v10 = *v14;
      if (v9 - *v16 == v14[1] - *v14)
      {
        if (v8 != v9)
        {
          while (sub_207EFE5C8(v8, v10))
          {
            v8 += 96;
            v10 += 96;
            if (v8 == v9)
              goto LABEL_23;
          }
          goto LABEL_22;
        }
LABEL_23:
        v11 = sub_20806E468((uint64_t *)(a1 + 200), (uint64_t *)(a2 + 200));
        goto LABEL_24;
      }
    }
    else if ((*((_BYTE *)v16 + 24) != 0) == (*((_BYTE *)v14 + 24) != 0))
    {
      goto LABEL_23;
    }
  }
LABEL_22:
  v11 = 0;
LABEL_24:
  sub_207D49CF4((uint64_t)v18);
  sub_207D49CF4((uint64_t)v24);
  return v11;
}

void sub_207EE50E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a23);
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_207EE50FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_207EE5110(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076B88, 0);
  if (v4)
  {
    sub_207EE551C(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076BD0, 0);
    if (v5)
    {
      sub_207EE57BC(&v9, (uint64_t)v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076C58, 0);
      if (v6)
      {
        sub_207EE5A3C(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076CA0, 0);
        if (v7)
        {
          sub_207EE5CDC(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24C082C60)
            sub_207EE5EF4(&v9, (uint64_t)a1);
          else
            sub_207EE5274(&v8, a1);
        }
      }
    }
  }
}

void sub_207EE5274(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  uint64_t *v12;
  int v13;
  unsigned int v14;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v14 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v9 = v14;
    if (v8 >= 1)
    {
      if (v8 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E3CE18((uint64_t)a2, v4, v9);
      goto LABEL_16;
    }
    sub_207E3CE18((uint64_t)a2, v4, v14);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v14 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v11 = v14;
    if (v10 >= 1)
    {
      if (v10 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E3C790((uint64_t)a2, v4, v11);
      goto LABEL_16;
    }
    sub_207E3C790((uint64_t)a2, v4, v14);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = a2[2];
    v14 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v7 = v14;
    if (v6 >= 1)
    {
      if (v6 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E12E90((uint64_t)a2, v4, v7);
LABEL_16:
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
      goto LABEL_17;
    }
    sub_207E12E90((uint64_t)a2, v4, v14);
  }
LABEL_17:
  v12 = (uint64_t *)(v3 + 200);
  v13 = a2[2];
  v14 = 2;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
  if (v13 < 1)
  {
    sub_207E9F6D0(a2, v12);
  }
  else
  {
    if (v13 == 2)
    {
      v14 = 2;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_207E9F6D0(a2, v12);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

void sub_207EE551C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v16 = "version";
    v17 = 7;
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E383C8(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F1E44(a2);
      v16 = "version";
      v17 = 7;
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F3DDC(a2, &v18);
      sub_207E0BDBC(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v16 = "version";
    v17 = 7;
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E37A58(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_207E9B7FC((uint64_t)&v16, a2, v3 + 200);
}

void sub_207EE57BC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_208210C8C(&v20, 4u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v7 + 8);
    }
    sub_20820C2C0(*(_QWORD *)(a2 + 24));
    sub_207E39730(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_208210C8C(&v20, 5u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v8 + 8);
    }
    sub_20820C2C0(*(_QWORD *)(a2 + 24));
    sub_207E39614(a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_208210C8C(&v20, 6u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v6 + 8);
    }
    sub_20820C2C0(*(_QWORD *)(a2 + 24));
    sub_207E0E660(a2, v4, 6u);
  }
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_20820C0E8((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_208210C8C(&v20, 2u);
  }
  else
  {
    sub_208210F00((uint64_t)&v20, v14 + 8);
  }
  sub_20820C2C0(*(_QWORD *)(a2 + 24));
  sub_207E9BC4C(a2, (uint64_t *)(v3 + 200));
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_20820C0E8((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_207EE5A3C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v16 = "version";
    v17 = 7;
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A78C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F17E4(a2);
      v16 = "version";
      v17 = 7;
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F20F8(a2, &v18);
      sub_207E0F904(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v16 = "version";
    v17 = 7;
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A048(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_207E9D5C0((uint64_t)&v16, a2, v3 + 200);
}

_QWORD *sub_207EE5CDC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *result;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v20 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3BAE4(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        sub_207CBAB98(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_207E11040(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3B540(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v22 = v7;
  sub_207CBAB98(v11, (uint64_t)&v22, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_207CBAB98(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_207E9DA10(a2, (uint64_t *)(v3 + 200));
  v14 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v15 = *(_QWORD **)(a2 + 24);
    v24 = *(_BYTE *)(a2 + 32);
    sub_207CBAB98(v15, (uint64_t)&v24, 1);
  }
  v16 = *(_QWORD **)(a2 + 24);
  v25 = v14;
  result = sub_207CBAB98(v16, (uint64_t)&v25, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_207EE5EF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C21C(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C100(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    __src = 6;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E11EF8(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 2;
  sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_208072A10((_QWORD *)a2);
  sub_207E9E84C(a2, (uint64_t *)(v3 + 200));
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v10 + 10) = *(_QWORD *)(a2 + 32) - v10 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
}

void sub_207EE60AC(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D28, 0);
  if (v4)
  {
    sub_207EE6738(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D60, 0);
    if (v5)
    {
      sub_207EE6BE4(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076DE8, 0);
      if (v6)
      {
        sub_207EE7054(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076E20, 0);
        if (v7)
        {
          sub_207EE7500(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24C082DE0)
            sub_207EE7B44(&v9, a1);
          else
            sub_207EE6210(&v8, (uint64_t *)a1);
        }
      }
    }
  }
}

void sub_207EE6210(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  _QWORD *v28;
  char v29;
  uint64_t v30[27];
  unsigned int v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v30);
    sub_207E0AB10((uint64_t)&v31, v30);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)&v31);
        if (!v46)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v29, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v8 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v8;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v37;
    v10 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v11 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v11;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v12 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v12;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v15 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v44;
LABEL_45:
    *((_QWORD *)&v44 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v30);
  sub_207E0AB10((uint64_t)&v31, v30);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v29, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v17 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v17;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v37;
    v19 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v20 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v20;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v21 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v21;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)&v31);
  if (v46)
  {
LABEL_38:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v23 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  sub_207D49CF4((uint64_t)v30);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *a2;
  v30[0] = a2[1];
  v25 = v30[0];
  v31 = 6;
  (*(void (**)(uint64_t *, unsigned int *))(v24 + 104))(a2, &v31);
  if (v25 < 1)
  {
    if (v31 < 3)
      sub_207E1EB04((uint64_t)&v31, (uint64_t)a2, v4, v31);
    else
      sub_207E1ED78((uint64_t)a2, v4, v31);
  }
  else
  {
    sub_207E1E50C((int *)v30, (uint64_t)a2, v4, v31);
  }
  v26 = *a2;
  v30[0] = a2[1];
  v27 = v30[0];
  v31 = 2;
  (*(void (**)(uint64_t *, unsigned int *))(v26 + 104))(a2, &v31);
  v28 = (_QWORD *)(v3 + 200);
  if (v27 < 1)
  {
    if (v31 < 2)
      sub_207EAA0BC((uint64_t)&v31, a2, v28);
    else
      sub_207EA9FA4(a2, v3 + 200);
  }
  else
  {
    sub_207EA9AC8((int *)v30, a2, v28, v31);
  }
}

void sub_207EE66F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_207EE6738(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v27;
  uint64_t v28[27];
  _BYTE v29[8];
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v28);
    sub_207E0AB10((uint64_t)v29, v28);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v29);
        if (!v44)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v27, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v8 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v8;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v35;
    v10 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v11 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v11;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v12 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v12;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v15 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v42;
LABEL_45:
    *((_QWORD *)&v42 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v28);
  sub_207E0AB10((uint64_t)v29, v28);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v27, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v17 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v17;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v35;
    v19 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v20 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v20;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v21 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v21;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v29);
  if (v44)
  {
LABEL_38:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v23 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v33 && SHIBYTE(v32) < 0)
    operator delete((void *)v31);
  sub_207D49CF4((uint64_t)v28);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E14108(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  return sub_207EA0684(a2, (_QWORD *)(v3 + 200));
}

void sub_207EE6B9C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_207EE6BE4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v25;
  uint64_t v26[27];
  _BYTE v27[8];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v26);
    sub_207E0AB10((uint64_t)v27, v26);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v27);
        if (!v42)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v25, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v8 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v8;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v33;
    v10 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v11 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v11;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v12 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v12;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v15 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v40;
LABEL_45:
    *((_QWORD *)&v40 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v26);
  sub_207E0AB10((uint64_t)v27, v26);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v25, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v17 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v17;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v33;
    v19 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v20 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v20;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v21 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v21;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v27);
  if (v42)
  {
LABEL_38:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v23 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (v36 && SHIBYTE(v35) < 0)
    operator delete((void *)v34);
  if (v31 && SHIBYTE(v30) < 0)
    operator delete((void *)v29);
  sub_207D49CF4((uint64_t)v26);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E17BB8((uint64_t)v26, a2, v4);
  return sub_207EA10DC(a2, (_QWORD *)(v3 + 200));
}

void sub_207EE700C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_207EE7054(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v27;
  uint64_t v28[27];
  _BYTE v29[8];
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v28);
    sub_207E0AB10((uint64_t)v29, v28);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v29);
        if (!v44)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v27, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v8 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v8;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v35;
    v10 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v11 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v11;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v12 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v12;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v15 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v42;
LABEL_45:
    *((_QWORD *)&v42 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v28);
  sub_207E0AB10((uint64_t)v29, v28);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v27, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v17 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v17;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v35;
    v19 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v20 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v20;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v21 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v21;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v29);
  if (v44)
  {
LABEL_38:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v23 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v33 && SHIBYTE(v32) < 0)
    operator delete((void *)v31);
  sub_207D49CF4((uint64_t)v28);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E19198(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  return sub_207EA4110(a2, (_QWORD *)(v3 + 200));
}

void sub_207EE74B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EE7500(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  void *__p;
  uint64_t v34;
  char v35;
  _BYTE v36[8];
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  uint64_t v47;
  char v48;
  __int128 v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)&__p);
    sub_207E0AB10((uint64_t)v36, (uint64_t *)&__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v36);
        if (!v51)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v32, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v37;
    *(_BYTE *)(v3 + 64) = 0;
    if (v40)
    {
      v8 = v39;
      *(_OWORD *)(v3 + 40) = v38;
      *(_QWORD *)(v3 + 56) = v8;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v42;
    v10 = v41;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v45)
    {
      v11 = v44;
      *(_OWORD *)(v3 + 96) = v43;
      *(_QWORD *)(v3 + 112) = v11;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v48)
    {
      v12 = v47;
      *(_OWORD *)(v3 + 128) = v46;
      *(_QWORD *)(v3 + 144) = v12;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v51;
    if (v51)
    {
      *(_OWORD *)(v3 + 160) = v49;
      *(_QWORD *)(v3 + 176) = v50;
      v49 = 0uLL;
      v50 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v49;
    if (!(_QWORD)v49)
      goto LABEL_46;
    v15 = *((_QWORD *)&v49 + 1);
    v16 = (void *)v49;
    if (*((_QWORD *)&v49 + 1) == (_QWORD)v49)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v49;
LABEL_45:
    *((_QWORD *)&v49 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)&__p);
  sub_207E0AB10((uint64_t)v36, (uint64_t *)&__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v32, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v37;
    *(_BYTE *)(v3 + 64) = 0;
    if (v40)
    {
      v17 = v39;
      *(_OWORD *)(v3 + 40) = v38;
      *(_QWORD *)(v3 + 56) = v17;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v42;
    v19 = v41;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v45)
    {
      v20 = v44;
      *(_OWORD *)(v3 + 96) = v43;
      *(_QWORD *)(v3 + 112) = v20;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v48)
    {
      v21 = v47;
      *(_OWORD *)(v3 + 128) = v46;
      *(_QWORD *)(v3 + 144) = v21;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v51;
    if (v51)
    {
      *(_OWORD *)(v3 + 160) = v49;
      *(_QWORD *)(v3 + 176) = v50;
      v49 = 0uLL;
      v50 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v36);
  if (v51)
  {
LABEL_38:
    v14 = v49;
    if (!(_QWORD)v49)
      goto LABEL_46;
    v23 = *((_QWORD *)&v49 + 1);
    v16 = (void *)v49;
    if (*((_QWORD *)&v49 + 1) == (_QWORD)v49)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v48 && SHIBYTE(v47) < 0)
    operator delete((void *)v46);
  if (v45 && SHIBYTE(v44) < 0)
    operator delete((void *)v43);
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  sub_207D49CF4((uint64_t)&__p);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  LODWORD(__p) = 6;
  sub_208209DC8(a2, &__p);
  v24 = __p;
  if (__p >= 6)
    v25 = 6;
  else
    v25 = __p;
  if (v25 < 3)
    sub_207E1B3DC((uint64_t)&__p, a2, v4, v25);
  else
    sub_207E1B5CC(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_20820B068(a2, (uint64_t)&__p);
      if (v35 < 0)
      {
        if (v34 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_80:
          v29 = 0;
          if (v35 < 0)
            goto LABEL_83;
          goto LABEL_69;
        }
      }
      else if (v35 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_80;
      }
      v29 = 1;
      if (v35 < 0)
LABEL_83:
        operator delete(__p);
LABEL_69:
      if (*(_BYTE *)(a2 + 131))
        v28 = 0;
      else
        v28 = v29;
    }
    while ((v28 & 1) != 0);
  }
  LODWORD(__p) = 2;
  sub_208209DC8(a2, &__p);
  v26 = __p;
  if (__p >= 2)
    v27 = 2;
  else
    v27 = __p;
  if (v27 < 2)
    sub_207EA4A58((uint64_t)&__p, a2, (_QWORD *)(v3 + 200));
  else
    sub_207EA4940(a2, v3 + 200);
  if (v26 >= 2 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_20820B068(a2, (uint64_t)&__p);
      if (v35 < 0)
      {
        if (v34 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_99:
          v31 = 0;
          if (v35 < 0)
            goto LABEL_102;
          goto LABEL_88;
        }
      }
      else if (v35 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_99;
      }
      v31 = 1;
      if (v35 < 0)
LABEL_102:
        operator delete(__p);
LABEL_88:
      if (*(_BYTE *)(a2 + 131))
        v30 = 0;
      else
        v30 = v31;
    }
    while ((v30 & 1) != 0);
  }
}

void sub_207EE7AFC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EE7B44(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v25);
    sub_207E0AB10((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v25);
  sub_207E0AB10((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_207D49CF4((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E1CD58((uint64_t)v25, a2, v4);
  sub_207EA713C((uint64_t)v25, a2, (_QWORD *)(v3 + 200));
}

void sub_207EE7F70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

BOOL sub_207EE7FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  unsigned __int8 *v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  _BOOL8 v19;
  _QWORD v21[5];
  uint64_t *v22;
  _QWORD v23[5];
  _QWORD *v24;
  char v25;
  _BYTE v26[16];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[16];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[6];

  v37[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_207E372B8(v4, (uint64_t)v32);
  }
  else if (v5 == 1)
  {
    sub_207E370A0(v4, (uint64_t)v32);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    sub_207E02E5C(v4, (uint64_t)v32);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_207E372B8(v6, (uint64_t)v26);
  }
  else if (v7 == 1)
  {
    sub_207E370A0(v6, (uint64_t)v26);
  }
  else
  {
    if (v7)
      sub_207CA9F48();
    sub_207E02E5C(v6, (uint64_t)v26);
  }
  v23[0] = v32;
  v23[1] = &v33;
  v23[2] = &v34;
  v23[3] = &v35;
  v23[4] = &v36;
  v24 = v37;
  v21[0] = v26;
  v21[1] = &v27;
  v21[2] = &v28;
  v21[3] = &v29;
  v21[4] = &v30;
  v22 = &v31;
  if (!sub_207EFF314((uint64_t)&v25, v23, v21))
    goto LABEL_35;
  if (!*((_BYTE *)v24 + 24) || !*((_BYTE *)v22 + 24))
  {
    if ((*((_BYTE *)v24 + 24) != 0) == (*((_BYTE *)v22 + 24) != 0))
      goto LABEL_22;
LABEL_35:
    v19 = 0;
    goto LABEL_36;
  }
  v8 = (unsigned __int8 *)*v24;
  v9 = (unsigned __int8 *)v24[1];
  v10 = (unsigned __int8 *)*v22;
  if (&v9[-*v24] != (unsigned __int8 *)(v22[1] - *v22))
    goto LABEL_35;
  if (v8 != v9)
  {
    while (sub_207EFE5C8(v8, v10))
    {
      v8 += 96;
      v10 += 96;
      if (v8 == v9)
        goto LABEL_22;
    }
    goto LABEL_35;
  }
LABEL_22:
  if (*(_QWORD *)(a1 + 200) != *(_QWORD *)(a2 + 200))
    goto LABEL_35;
  v11 = *(_QWORD *)(a1 + 224);
  if (v11 != *(_QWORD *)(a2 + 224))
    goto LABEL_35;
  v12 = *(unsigned __int8 **)(a1 + 232);
  v13 = *(unsigned __int8 **)(a2 + 232);
  v14 = &v12[v11];
  v15 = &v13[v11];
  if (v11)
  {
    v16 = v11 - 1;
    while (1)
    {
      v17 = v16;
      if (*v12 != *v13)
        goto LABEL_35;
      ++v12;
      ++v13;
      --v16;
      if (!v17)
      {
        v13 = v15;
        v12 = v14;
        break;
      }
    }
  }
  v19 = v12 == v14 && v13 == v15;
LABEL_36:
  sub_207D49CF4((uint64_t)v26);
  sub_207D49CF4((uint64_t)v32);
  return v19;
}

void sub_207EE81FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a23);
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_207EE821C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_207EE8230(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076B88, 0);
  if (v4)
  {
    sub_207EE863C(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076BD0, 0);
    if (v5)
    {
      sub_207EE88DC(&v9, (uint64_t)v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076C58, 0);
      if (v6)
      {
        sub_207EE8B5C(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076CA0, 0);
        if (v7)
        {
          sub_207EE8DFC(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24C082C60)
            sub_207EE9014(&v9, (uint64_t)a1);
          else
            sub_207EE8394(&v8, a1);
        }
      }
    }
  }
}

void sub_207EE8394(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v14 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v9 = v14;
    if (v8 >= 1)
    {
      if (v8 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E3CE18((uint64_t)a2, v4, v9);
      goto LABEL_16;
    }
    sub_207E3CE18((uint64_t)a2, v4, v14);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v14 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v11 = v14;
    if (v10 >= 1)
    {
      if (v10 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E3C790((uint64_t)a2, v4, v11);
      goto LABEL_16;
    }
    sub_207E3C790((uint64_t)a2, v4, v14);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = a2[2];
    v14 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v7 = v14;
    if (v6 >= 1)
    {
      if (v6 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E12E90((uint64_t)a2, v4, v7);
LABEL_16:
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
      goto LABEL_17;
    }
    sub_207E12E90((uint64_t)a2, v4, v14);
  }
LABEL_17:
  v12 = v3 + 200;
  v13 = a2[2];
  v14 = 2;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
  if (v13 < 1)
  {
    sub_207EAF4A4((uint64_t)a2, v12);
  }
  else
  {
    if (v13 == 2)
    {
      v14 = 2;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_207EAF4A4((uint64_t)a2, v12);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

void sub_207EE863C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v16 = "version";
    v17 = 7;
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E383C8(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F1E44(a2);
      v16 = "version";
      v17 = 7;
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F3DDC(a2, &v18);
      sub_207E0BDBC(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v16 = "version";
    v17 = 7;
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E37A58(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_207EAEA34((uint64_t)&v16, a2, v3 + 200);
}

void sub_207EE88DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_208210C8C(&v20, 4u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v7 + 8);
    }
    sub_20820C2C0(*(_QWORD *)(a2 + 24));
    sub_207E39730(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_208210C8C(&v20, 5u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v8 + 8);
    }
    sub_20820C2C0(*(_QWORD *)(a2 + 24));
    sub_207E39614(a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_208210C8C(&v20, 6u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v6 + 8);
    }
    sub_20820C2C0(*(_QWORD *)(a2 + 24));
    sub_207E0E660(a2, v4, 6u);
  }
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_20820C0E8((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_208210C8C(&v20, 2u);
  }
  else
  {
    sub_208210F00((uint64_t)&v20, v14 + 8);
  }
  sub_20820C2C0(*(_QWORD *)(a2 + 24));
  sub_207EAED38(a2, v3 + 200);
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_20820C0E8((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_207EE8B5C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  const char *v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v16 = "version";
    v17 = 7;
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A78C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F17E4(a2);
      v16 = "version";
      v17 = 7;
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F20F8(a2, &v18);
      sub_207E0F904(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v16 = "version";
    v17 = 7;
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A048(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_207EAEF1C((uint64_t)&v16, a2, v3 + 200);
}

_QWORD *sub_207EE8DFC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *result;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v20 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3BAE4(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        sub_207CBAB98(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_207E11040(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3B540(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v22 = v7;
  sub_207CBAB98(v11, (uint64_t)&v22, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_207CBAB98(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_207EAF220(a2, v3 + 200);
  v14 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v15 = *(_QWORD **)(a2 + 24);
    v24 = *(_BYTE *)(a2 + 32);
    sub_207CBAB98(v15, (uint64_t)&v24, 1);
  }
  v16 = *(_QWORD **)(a2 + 24);
  v25 = v14;
  result = sub_207CBAB98(v16, (uint64_t)&v25, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_207EE9014(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C21C(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C100(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    __src = 6;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E11EF8(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 2;
  sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_208072A10((_QWORD *)a2);
  sub_207EAF368(a2, (uint64_t *)(v3 + 200));
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v10 + 10) = *(_QWORD *)(a2 + 32) - v10 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
}

void sub_207EE91CC(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D28, 0);
  if (v4)
  {
    sub_207EE9858(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D60, 0);
    if (v5)
    {
      sub_207EE9D04(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076DE8, 0);
      if (v6)
      {
        sub_207EEA174(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076E20, 0);
        if (v7)
        {
          sub_207EEA620(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24C082DE0)
            sub_207EEAC64(&v9, a1);
          else
            sub_207EE9330(&v8, (uint64_t *)a1);
        }
      }
    }
  }
}

void sub_207EE9330(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  char v29;
  uint64_t v30[27];
  unsigned int v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  unsigned __int8 v46;
  uint64_t v47;

  v47 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v30);
    sub_207E0AB10((uint64_t)&v31, v30);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)&v31);
        if (!v46)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v29, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v8 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v8;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v37;
    v10 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v11 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v11;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v12 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v12;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v15 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v44;
LABEL_45:
    *((_QWORD *)&v44 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v30);
  sub_207E0AB10((uint64_t)&v31, v30);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v29, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v32;
    *(_BYTE *)(v3 + 64) = 0;
    if (v35)
    {
      v17 = v34;
      *(_OWORD *)(v3 + 40) = v33;
      *(_QWORD *)(v3 + 56) = v17;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v37;
    v19 = v36;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v40)
    {
      v20 = v39;
      *(_OWORD *)(v3 + 96) = v38;
      *(_QWORD *)(v3 + 112) = v20;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v43)
    {
      v21 = v42;
      *(_OWORD *)(v3 + 128) = v41;
      *(_QWORD *)(v3 + 144) = v21;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v46;
    if (v46)
    {
      *(_OWORD *)(v3 + 160) = v44;
      *(_QWORD *)(v3 + 176) = v45;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)&v31);
  if (v46)
  {
LABEL_38:
    v14 = v44;
    if (!(_QWORD)v44)
      goto LABEL_46;
    v23 = *((_QWORD *)&v44 + 1);
    v16 = (void *)v44;
    if (*((_QWORD *)&v44 + 1) == (_QWORD)v44)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  sub_207D49CF4((uint64_t)v30);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *a2;
  v30[0] = a2[1];
  v25 = v30[0];
  v31 = 6;
  (*(void (**)(uint64_t *, unsigned int *))(v24 + 104))(a2, &v31);
  if (v25 < 1)
  {
    if (v31 < 3)
      sub_207E1EB04((uint64_t)&v31, (uint64_t)a2, v4, v31);
    else
      sub_207E1ED78((uint64_t)a2, v4, v31);
  }
  else
  {
    sub_207E1E50C((int *)v30, (uint64_t)a2, v4, v31);
  }
  v26 = *a2;
  v30[0] = a2[1];
  v27 = v30[0];
  v31 = 2;
  (*(void (**)(uint64_t *, unsigned int *))(v26 + 104))(a2, &v31);
  v28 = v3 + 200;
  if (v27 < 1)
  {
    if (v31 < 2)
      sub_207EB13DC((uint64_t)&v31, (uint64_t)a2, v28);
    else
      sub_207EB1548((uint64_t)a2, v3 + 200);
  }
  else
  {
    sub_207EB10B4((int *)v30, (uint64_t)a2, v28, v31);
  }
}

void sub_207EE9810(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_207EE9858(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v27;
  uint64_t v28[27];
  _BYTE v29[8];
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v28);
    sub_207E0AB10((uint64_t)v29, v28);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v29);
        if (!v44)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v27, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v8 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v8;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v35;
    v10 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v11 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v11;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v12 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v12;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v15 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v42;
LABEL_45:
    *((_QWORD *)&v42 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v28);
  sub_207E0AB10((uint64_t)v29, v28);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v27, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v17 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v17;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v35;
    v19 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v20 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v20;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v21 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v21;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v29);
  if (v44)
  {
LABEL_38:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v23 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v33 && SHIBYTE(v32) < 0)
    operator delete((void *)v31);
  sub_207D49CF4((uint64_t)v28);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E14108(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  return sub_207EAF5D4(a2, v3 + 200);
}

void sub_207EE9CBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

_QWORD *sub_207EE9D04(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v25;
  uint64_t v26[27];
  _BYTE v27[8];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  unsigned __int8 v42;
  uint64_t v43;

  v43 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v26);
    sub_207E0AB10((uint64_t)v27, v26);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v27);
        if (!v42)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v25, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v8 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v8;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v33;
    v10 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v11 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v11;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v12 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v12;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v15 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v40;
LABEL_45:
    *((_QWORD *)&v40 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v26);
  sub_207E0AB10((uint64_t)v27, v26);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v25, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v28;
    *(_BYTE *)(v3 + 64) = 0;
    if (v31)
    {
      v17 = v30;
      *(_OWORD *)(v3 + 40) = v29;
      *(_QWORD *)(v3 + 56) = v17;
      v29 = 0uLL;
      v30 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v33;
    v19 = v32;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v36)
    {
      v20 = v35;
      *(_OWORD *)(v3 + 96) = v34;
      *(_QWORD *)(v3 + 112) = v20;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v39)
    {
      v21 = v38;
      *(_OWORD *)(v3 + 128) = v37;
      *(_QWORD *)(v3 + 144) = v21;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v42;
    if (v42)
    {
      *(_OWORD *)(v3 + 160) = v40;
      *(_QWORD *)(v3 + 176) = v41;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v27);
  if (v42)
  {
LABEL_38:
    v14 = v40;
    if (!(_QWORD)v40)
      goto LABEL_46;
    v23 = *((_QWORD *)&v40 + 1);
    v16 = (void *)v40;
    if (*((_QWORD *)&v40 + 1) == (_QWORD)v40)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (v36 && SHIBYTE(v35) < 0)
    operator delete((void *)v34);
  if (v31 && SHIBYTE(v30) < 0)
    operator delete((void *)v29);
  sub_207D49CF4((uint64_t)v26);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E17BB8((uint64_t)v26, a2, v4);
  return sub_207EAFB74(a2, v3 + 200);
}

void sub_207EEA12C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_207EEA174(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  char v27;
  uint64_t v28[27];
  _BYTE v29[8];
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v28);
    sub_207E0AB10((uint64_t)v29, v28);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v29);
        if (!v44)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v27, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v8 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v8;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v35;
    v10 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v11 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v11;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v12 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v12;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v15 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v42;
LABEL_45:
    *((_QWORD *)&v42 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v28);
  sub_207E0AB10((uint64_t)v29, v28);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v27, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v17 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v17;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v35;
    v19 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v20 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v20;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v21 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v21;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v29);
  if (v44)
  {
LABEL_38:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v23 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v33 && SHIBYTE(v32) < 0)
    operator delete((void *)v31);
  sub_207D49CF4((uint64_t)v28);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E19198(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  return sub_207EB00B8(a2, v3 + 200);
}

void sub_207EEA5D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EEA620(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  void *__p;
  uint64_t v34;
  char v35;
  _BYTE v36[8];
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  uint64_t v47;
  char v48;
  __int128 v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52;

  v52 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)&__p);
    sub_207E0AB10((uint64_t)v36, (uint64_t *)&__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v36);
        if (!v51)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v32, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v37;
    *(_BYTE *)(v3 + 64) = 0;
    if (v40)
    {
      v8 = v39;
      *(_OWORD *)(v3 + 40) = v38;
      *(_QWORD *)(v3 + 56) = v8;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v42;
    v10 = v41;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v45)
    {
      v11 = v44;
      *(_OWORD *)(v3 + 96) = v43;
      *(_QWORD *)(v3 + 112) = v11;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v48)
    {
      v12 = v47;
      *(_OWORD *)(v3 + 128) = v46;
      *(_QWORD *)(v3 + 144) = v12;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v51;
    if (v51)
    {
      *(_OWORD *)(v3 + 160) = v49;
      *(_QWORD *)(v3 + 176) = v50;
      v49 = 0uLL;
      v50 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v49;
    if (!(_QWORD)v49)
      goto LABEL_46;
    v15 = *((_QWORD *)&v49 + 1);
    v16 = (void *)v49;
    if (*((_QWORD *)&v49 + 1) == (_QWORD)v49)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v49;
LABEL_45:
    *((_QWORD *)&v49 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)&__p);
  sub_207E0AB10((uint64_t)v36, (uint64_t *)&__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v32, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v37;
    *(_BYTE *)(v3 + 64) = 0;
    if (v40)
    {
      v17 = v39;
      *(_OWORD *)(v3 + 40) = v38;
      *(_QWORD *)(v3 + 56) = v17;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v42;
    v19 = v41;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v45)
    {
      v20 = v44;
      *(_OWORD *)(v3 + 96) = v43;
      *(_QWORD *)(v3 + 112) = v20;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v48)
    {
      v21 = v47;
      *(_OWORD *)(v3 + 128) = v46;
      *(_QWORD *)(v3 + 144) = v21;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v51;
    if (v51)
    {
      *(_OWORD *)(v3 + 160) = v49;
      *(_QWORD *)(v3 + 176) = v50;
      v49 = 0uLL;
      v50 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v36);
  if (v51)
  {
LABEL_38:
    v14 = v49;
    if (!(_QWORD)v49)
      goto LABEL_46;
    v23 = *((_QWORD *)&v49 + 1);
    v16 = (void *)v49;
    if (*((_QWORD *)&v49 + 1) == (_QWORD)v49)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v48 && SHIBYTE(v47) < 0)
    operator delete((void *)v46);
  if (v45 && SHIBYTE(v44) < 0)
    operator delete((void *)v43);
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  sub_207D49CF4((uint64_t)&__p);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  LODWORD(__p) = 6;
  sub_208209DC8(a2, &__p);
  v24 = __p;
  if (__p >= 6)
    v25 = 6;
  else
    v25 = __p;
  if (v25 < 3)
    sub_207E1B3DC((uint64_t)&__p, a2, v4, v25);
  else
    sub_207E1B5CC(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_20820B068(a2, (uint64_t)&__p);
      if (v35 < 0)
      {
        if (v34 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_80:
          v29 = 0;
          if (v35 < 0)
            goto LABEL_83;
          goto LABEL_69;
        }
      }
      else if (v35 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_80;
      }
      v29 = 1;
      if (v35 < 0)
LABEL_83:
        operator delete(__p);
LABEL_69:
      if (*(_BYTE *)(a2 + 131))
        v28 = 0;
      else
        v28 = v29;
    }
    while ((v28 & 1) != 0);
  }
  LODWORD(__p) = 2;
  sub_208209DC8(a2, &__p);
  v26 = __p;
  if (__p >= 2)
    v27 = 2;
  else
    v27 = __p;
  if (v27 < 2)
    sub_207EB0658((uint64_t)&__p, a2, v3 + 200);
  else
    sub_207EB07C4(a2, v3 + 200);
  if (v26 >= 2 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_20820B068(a2, (uint64_t)&__p);
      if (v35 < 0)
      {
        if (v34 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_99:
          v31 = 0;
          if (v35 < 0)
            goto LABEL_102;
          goto LABEL_88;
        }
      }
      else if (v35 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_99;
      }
      v31 = 1;
      if (v35 < 0)
LABEL_102:
        operator delete(__p);
LABEL_88:
      if (*(_BYTE *)(a2 + 131))
        v30 = 0;
      else
        v30 = v31;
    }
    while ((v30 & 1) != 0);
  }
}

void sub_207EEAC1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EEAC64(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v25);
    sub_207E0AB10((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v25);
  sub_207E0AB10((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_207D49CF4((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E1CD58((uint64_t)v25, a2, v4);
  sub_207EB0A1C((uint64_t)v25, a2, v3 + 200);
}

void sub_207EEB090(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_207EEB0D8(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C078330;
  sub_207D49CF4(a1 + 128);
  if (*(char *)(a1 + 119) < 0)
  {
    operator delete(*(void **)(a1 + 96));
    if ((*(char *)(a1 + 95) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(a1 + 63) & 0x80000000) == 0)
        goto LABEL_4;
LABEL_8:
      operator delete(*(void **)(a1 + 40));
      if ((*(char *)(a1 + 31) & 0x80000000) == 0)
        return a1;
      goto LABEL_9;
    }
  }
  else if ((*(char *)(a1 + 95) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 72));
  if (*(char *)(a1 + 63) < 0)
    goto LABEL_8;
LABEL_4:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_9:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_207EEB170(uint64_t result, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  unsigned __int128 *v12;
  unsigned __int128 v13;

  *(_QWORD *)result = off_24C078330;
  v2 = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(result + 24) = *(_QWORD *)(a2 + 24);
  *(_OWORD *)(result + 8) = v2;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 8) = 0;
  *(_DWORD *)(result + 32) = *(_DWORD *)(a2 + 32);
  v3 = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(result + 56) = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(result + 40) = v3;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  *(_DWORD *)(result + 64) = *(_DWORD *)(a2 + 64);
  v4 = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(result + 88) = *(_QWORD *)(a2 + 88);
  *(_OWORD *)(result + 72) = v4;
  *(_QWORD *)(a2 + 80) = 0;
  *(_QWORD *)(a2 + 88) = 0;
  *(_QWORD *)(a2 + 72) = 0;
  v5 = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(result + 112) = *(_QWORD *)(a2 + 112);
  *(_OWORD *)(result + 96) = v5;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = 0;
  *(_QWORD *)(a2 + 96) = 0;
  v6 = *(_OWORD *)(a2 + 128);
  *(_BYTE *)(result + 144) = 0;
  *(_OWORD *)(result + 128) = v6;
  *(_BYTE *)(result + 168) = 0;
  if (*(_BYTE *)(a2 + 168))
  {
    v7 = *(_OWORD *)(a2 + 144);
    *(_QWORD *)(result + 160) = *(_QWORD *)(a2 + 160);
    *(_OWORD *)(result + 144) = v7;
    *(_QWORD *)(a2 + 152) = 0;
    *(_QWORD *)(a2 + 160) = 0;
    *(_QWORD *)(a2 + 144) = 0;
    *(_BYTE *)(result + 168) = 1;
  }
  *(_BYTE *)(result + 176) = 0;
  *(_BYTE *)(result + 200) = 0;
  if (*(_BYTE *)(a2 + 200))
  {
    v8 = *(_OWORD *)(a2 + 176);
    *(_QWORD *)(result + 192) = *(_QWORD *)(a2 + 192);
    *(_OWORD *)(result + 176) = v8;
    *(_QWORD *)(a2 + 184) = 0;
    *(_QWORD *)(a2 + 192) = 0;
    *(_QWORD *)(a2 + 176) = 0;
    *(_BYTE *)(result + 200) = 1;
  }
  v9 = *(_OWORD *)(a2 + 208);
  v10 = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(result + 240) = 0;
  *(_QWORD *)(result + 224) = v10;
  *(_OWORD *)(result + 208) = v9;
  *(_BYTE *)(result + 288) = 0;
  if (*(_BYTE *)(a2 + 288))
  {
    v11 = *(_OWORD *)(a2 + 240);
    *(_QWORD *)(result + 256) = *(_QWORD *)(a2 + 256);
    *(_OWORD *)(result + 240) = v11;
    *(_QWORD *)(a2 + 248) = 0;
    *(_QWORD *)(a2 + 256) = 0;
    *(_QWORD *)(a2 + 240) = 0;
    v12 = (unsigned __int128 *)(a2 + 272);
    do
      v13 = __ldaxp(v12);
    while (__stlxp(v13, v12));
    *(_OWORD *)(result + 272) = v13;
    *(_BYTE *)(result + 288) = 1;
  }
  *(_BYTE *)(result + 304) = 0;
  *(_BYTE *)(result + 328) = 0;
  if (*(_BYTE *)(a2 + 328))
  {
    *(_QWORD *)(result + 304) = 0;
    *(_QWORD *)(result + 312) = 0;
    *(_QWORD *)(result + 320) = 0;
    *(_OWORD *)(result + 304) = *(_OWORD *)(a2 + 304);
    *(_QWORD *)(result + 320) = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a2 + 304) = 0;
    *(_QWORD *)(a2 + 312) = 0;
    *(_QWORD *)(a2 + 320) = 0;
    *(_BYTE *)(result + 328) = 1;
  }
  *(_QWORD *)result = off_24C0782B0;
  return result;
}

void sub_207EEB300(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C078330;
  sub_207D49CF4(a1 + 128);
  if (*(char *)(a1 + 119) < 0)
  {
    operator delete(*(void **)(a1 + 96));
    if ((*(char *)(a1 + 95) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(a1 + 63) & 0x80000000) == 0)
        goto LABEL_4;
LABEL_9:
      operator delete(*(void **)(a1 + 40));
      if ((*(char *)(a1 + 31) & 0x80000000) == 0)
        goto LABEL_5;
LABEL_10:
      operator delete(*(void **)(a1 + 8));
      operator delete((void *)a1);
      return;
    }
  }
  else if ((*(char *)(a1 + 95) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 72));
  if (*(char *)(a1 + 63) < 0)
    goto LABEL_9;
LABEL_4:
  if (*(char *)(a1 + 31) < 0)
    goto LABEL_10;
LABEL_5:
  operator delete((void *)a1);
}

uint64_t sub_207EEB398(uint64_t a1)
{
  return a1 + 128;
}

unsigned __int8 **sub_207EEB3A0(char *a1, char *lpsrc)
{
  unsigned __int8 **result;
  unsigned __int8 **v5[6];
  _QWORD v6[6];

  result = (unsigned __int8 **)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C078D58, (const struct __class_type_info *)&unk_24C0782F0, 0);
  if (result)
  {
    if (a1 == lpsrc)
    {
      return (unsigned __int8 **)1;
    }
    else
    {
      v6[0] = a1 + 8;
      v6[1] = a1 + 32;
      v6[2] = a1 + 40;
      v6[3] = a1 + 64;
      v6[4] = a1 + 72;
      v6[5] = a1 + 96;
      v5[0] = result + 1;
      v5[1] = result + 4;
      v5[2] = result + 5;
      v5[3] = result + 8;
      v5[4] = result + 9;
      v5[5] = result + 12;
      return (unsigned __int8 **)sub_207EECABC((uint64_t)v6, v5);
    }
  }
  return result;
}

void sub_207EEB460(uint64_t a1)
{
  __int128 *v2;
  void *__p;
  char v4;

  v2 = (__int128 *)sub_207EECD34();
  sub_207EEB514(a1);
  sub_207D49528(v2, (uint64_t)"{", (uint64_t)&__p, (uint64_t)",", a1 + 128, (uint64_t)"}");
  if (v4 < 0)
    operator delete(__p);
}

void sub_207EEB4F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_207EEB514(uint64_t a1)
{
  unsigned __int8 v2;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;

  v2 = atomic_load((unsigned __int8 *)&qword_25452D2D0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25452D2D0))
  {
    v4 = sub_207EEC774();
    v5 = *((_QWORD *)v4 + 1);
    if (*((char *)v4 + 23) >= 0)
    {
      v6 = *((unsigned __int8 *)v4 + 23);
    }
    else
    {
      v4 = *(__int128 **)v4;
      v6 = v5;
    }
    sub_207CF75E4((char *)v4, v6, "::", 2, 0, (uint64_t)&v8);
    if (*(char *)(v9 - 1) < 0)
    {
      sub_207CA40D8(&xmmword_25452D2B8, *(void **)(v9 - 24), *(_QWORD *)(v9 - 16));
    }
    else
    {
      v7 = *(_OWORD *)(v9 - 24);
      qword_25452D2C8 = *(_QWORD *)(v9 - 8);
      xmmword_25452D2B8 = v7;
    }
    sub_207C99DE0(&v8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D2B8, &dword_207C77000);
    __cxa_guard_release(&qword_25452D2D0);
  }
  return sub_207EED0F4(&xmmword_25452D2B8, (__int128 *)"{", (__int128 *)(a1 + 8), (__int128 *)"}");
}

void sub_207EEB624(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_207C99DE0(&a9);
  __cxa_guard_abort(&qword_25452D2D0);
  _Unwind_Resume(a1);
}

void sub_207EEB644(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D2D0);
  _Unwind_Resume(a1);
}

void sub_207EEB65C(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 10;
}

void sub_207EEB688(uint64_t (***lpsrc)()@<X0>, _QWORD *a2@<X8>)
{
  sub_207F0677C(lpsrc, 10, a2);
}

uint64_t sub_207EEB6C0(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C078330;
  sub_207D49CF4(a1 + 128);
  if (*(char *)(a1 + 119) < 0)
  {
    operator delete(*(void **)(a1 + 96));
    if ((*(char *)(a1 + 95) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(a1 + 63) & 0x80000000) == 0)
        goto LABEL_4;
LABEL_8:
      operator delete(*(void **)(a1 + 40));
      if ((*(char *)(a1 + 31) & 0x80000000) == 0)
        return a1;
      goto LABEL_9;
    }
  }
  else if ((*(char *)(a1 + 95) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 72));
  if (*(char *)(a1 + 63) < 0)
    goto LABEL_8;
LABEL_4:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_9:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_207EEB758(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C078330;
  sub_207D49CF4(a1 + 128);
  if (*(char *)(a1 + 119) < 0)
  {
    operator delete(*(void **)(a1 + 96));
    if ((*(char *)(a1 + 95) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(a1 + 63) & 0x80000000) == 0)
        goto LABEL_4;
LABEL_9:
      operator delete(*(void **)(a1 + 40));
      if ((*(char *)(a1 + 31) & 0x80000000) == 0)
        goto LABEL_5;
LABEL_10:
      operator delete(*(void **)(a1 + 8));
      operator delete((void *)a1);
      return;
    }
  }
  else if ((*(char *)(a1 + 95) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 72));
  if (*(char *)(a1 + 63) < 0)
    goto LABEL_9;
LABEL_4:
  if (*(char *)(a1 + 31) < 0)
    goto LABEL_10;
LABEL_5:
  operator delete((void *)a1);
}

uint64_t sub_207EEB7F0(uint64_t a1)
{
  __int128 *v2;

  v2 = sub_207EEC210();
  return sub_207EEB914(v2, (__int128 *)"{", (__int128 *)(a1 + 8), (__int128 *)",", a1 + 128, (__int128 *)"}");
}

uint64_t sub_207EEB848(uint64_t a1)
{
  return sub_207EEC970(a1 + 8);
}

void sub_207EEB850(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t sub_207EEB87C(uint64_t a1)
{
  *(_QWORD *)a1 = off_24C078330;
  sub_207D49CF4(a1 + 128);
  if (*(char *)(a1 + 119) < 0)
  {
    operator delete(*(void **)(a1 + 96));
    if ((*(char *)(a1 + 95) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(a1 + 63) & 0x80000000) == 0)
        goto LABEL_4;
LABEL_8:
      operator delete(*(void **)(a1 + 40));
      if ((*(char *)(a1 + 31) & 0x80000000) == 0)
        return a1;
      goto LABEL_9;
    }
  }
  else if ((*(char *)(a1 + 95) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*(void **)(a1 + 72));
  if (*(char *)(a1 + 63) < 0)
    goto LABEL_8;
LABEL_4:
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
    return a1;
LABEL_9:
  operator delete(*(void **)(a1 + 8));
  return a1;
}

uint64_t sub_207EEB914(__int128 *a1, __int128 *a2, __int128 *a3, __int128 *a4, uint64_t a5, __int128 *a6)
{
  uint64_t result;
  __int128 v12;
  uint64_t v13;
  int v14;
  __int128 *v15;
  __int128 *v16;
  __int128 *v17;
  __int128 *v18;
  __int128 *v19;
  uint64_t v20;
  char v21;
  __int128 *v22;
  const char *v23;
  __int128 *v24;
  const char *v25;
  const char *v26;
  __int128 **v27;

  v14 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_207CA40D8(&v12, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    v12 = *a1;
    v13 = *((_QWORD *)a1 + 2);
  }
  v14 = 1;
  v15 = &v12;
  v16 = a2;
  v17 = &v12;
  v18 = a2;
  v19 = a2;
  sub_207CD45F4((uint64_t *)&v17, (uint64_t)&v12);
  v15 = a3;
  v16 = (__int128 *)((char *)a3 + 24);
  v17 = a3 + 2;
  v18 = (__int128 *)((char *)a3 + 56);
  v19 = a3 + 4;
  v20 = (uint64_t)a3 + 88;
  v22 = &v12;
  v23 = "{";
  v24 = &v12;
  v25 = "{";
  v26 = "{";
  if (v14 == -1)
    goto LABEL_12;
  v27 = &v22;
  ((void (*)(__int128 ***, __int128 *))off_24C0766E8[v14])(&v27, &v12);
  LOBYTE(v22) = 1;
  v23 = (const char *)&v12;
  v24 = (__int128 *)&v21;
  sub_207EEBBF4((uint64_t)&v15, (uint64_t)&v22);
  v22 = &v12;
  v23 = "}";
  v24 = &v12;
  v25 = "}";
  v26 = "}";
  if (v14 == -1)
LABEL_12:
    sub_207CA9F48();
  v27 = &v22;
  ((void (*)(__int128 ***, __int128 *))off_24C0766E8[v14])(&v27, &v12);
  v15 = &v12;
  v16 = a4;
  v17 = &v12;
  v18 = a4;
  v19 = a4;
  if (v14 == -1)
    sub_207CA9F48();
  v22 = (__int128 *)&v15;
  ((void (*)(__int128 **, __int128 *))off_24C0766E8[v14])(&v22, &v12);
  sub_207D48768((uint64_t)&v27, (uint64_t)&v12, a5);
  v15 = &v12;
  v16 = a6;
  v17 = &v12;
  v18 = a6;
  v19 = a6;
  if (v14 == -1)
    sub_207CA9F48();
  v22 = (__int128 *)&v15;
  ((void (*)(__int128 **, __int128 *))off_24C0766E8[v14])(&v22, &v12);
  if (v14 == -1)
    sub_207CA9F48();
  v15 = (__int128 *)&v22;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C0765F8[v14])(&v15, &v12);
  if (v14 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C0765E0[v14])(&v15, &v12);
  return result;
}

void sub_207EEBB64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207CA9EF0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EEBB7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207CA9EF0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EEBB90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207CA9EF0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EEBBA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207CA9EF0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EEBBB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207CA9EF0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EEBBCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207CA9EF0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EEBBE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207CA9EF0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_207EEBBF4(uint64_t a1, uint64_t a2)
{
  const char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  uint64_t v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  const char *v19;
  uint64_t v20;
  const char *v21;
  const char *v22;
  uint64_t *v23;

  v4 = *(const char **)a1;
  if (!*(_BYTE *)a2)
  {
    v18 = *(_QWORD *)(a2 + 8);
    v19 = ",";
    v20 = v18;
    v21 = ",";
    v22 = ",";
    v5 = *(unsigned int *)(v18 + 24);
    if ((_DWORD)v5 == -1)
      goto LABEL_21;
    v23 = &v18;
    ((void (*)(uint64_t **))off_24C0766E8[v5])(&v23);
  }
  *(_BYTE *)a2 = 0;
  v18 = *(_QWORD *)(a2 + 8);
  v19 = v4;
  v20 = v18;
  v21 = v4;
  v22 = v4;
  v6 = *(unsigned int *)(v18 + 24);
  if ((_DWORD)v6 == -1)
    goto LABEL_21;
  v23 = &v18;
  ((void (*)(uint64_t **))off_24C0766D0[v6])(&v23);
  if (!*(_BYTE *)a2)
  {
    v18 = *(_QWORD *)(a2 + 8);
    v19 = ",";
    v20 = v18;
    v21 = ",";
    v22 = ",";
    v7 = *(unsigned int *)(v18 + 24);
    if ((_DWORD)v7 == -1)
      goto LABEL_21;
    v23 = &v18;
    ((void (*)(uint64_t **))off_24C0766E8[v7])(&v23);
  }
  *(_BYTE *)a2 = 0;
  sub_207EEBFA4((uint64_t)&v18, *(_QWORD *)(a2 + 8));
  v8 = *(const char **)(a1 + 16);
  if (!*(_BYTE *)a2)
  {
    v18 = *(_QWORD *)(a2 + 8);
    v19 = ",";
    v20 = v18;
    v21 = ",";
    v22 = ",";
    v9 = *(unsigned int *)(v18 + 24);
    if ((_DWORD)v9 == -1)
      goto LABEL_21;
    v23 = &v18;
    ((void (*)(uint64_t **))off_24C0766E8[v9])(&v23);
  }
  *(_BYTE *)a2 = 0;
  v18 = *(_QWORD *)(a2 + 8);
  v19 = v8;
  v20 = v18;
  v21 = v8;
  v22 = v8;
  v10 = *(unsigned int *)(v18 + 24);
  if ((_DWORD)v10 == -1)
    goto LABEL_21;
  v23 = &v18;
  ((void (*)(uint64_t **))off_24C0766D0[v10])(&v23);
  sub_207EEBE9C(a2, *(unsigned int **)(a1 + 24));
  v11 = *(const char **)(a1 + 32);
  if (!*(_BYTE *)a2)
  {
    v18 = *(_QWORD *)(a2 + 8);
    v19 = ",";
    v20 = v18;
    v21 = ",";
    v22 = ",";
    v12 = *(unsigned int *)(v18 + 24);
    if ((_DWORD)v12 == -1)
      goto LABEL_21;
    v23 = &v18;
    ((void (*)(uint64_t **))off_24C0766E8[v12])(&v23);
  }
  *(_BYTE *)a2 = 0;
  v18 = *(_QWORD *)(a2 + 8);
  v19 = v11;
  v20 = v18;
  v21 = v11;
  v22 = v11;
  v13 = *(unsigned int *)(v18 + 24);
  if ((_DWORD)v13 == -1)
    goto LABEL_21;
  v23 = &v18;
  ((void (*)(uint64_t **))off_24C0766D0[v13])(&v23);
  v14 = *(const char **)(a1 + 40);
  if (!*(_BYTE *)a2)
  {
    v18 = *(_QWORD *)(a2 + 8);
    v19 = ",";
    v20 = v18;
    v21 = ",";
    v22 = ",";
    v15 = *(unsigned int *)(v18 + 24);
    if ((_DWORD)v15 == -1)
      goto LABEL_21;
    v23 = &v18;
    ((void (*)(uint64_t **))off_24C0766E8[v15])(&v23);
  }
  *(_BYTE *)a2 = 0;
  v18 = *(_QWORD *)(a2 + 8);
  v19 = v14;
  v20 = v18;
  v21 = v14;
  v22 = v14;
  v16 = *(unsigned int *)(v18 + 24);
  if ((_DWORD)v16 == -1)
LABEL_21:
    sub_207CA9F48();
  v23 = &v18;
  return ((uint64_t (*)(uint64_t **))off_24C0766D0[v16])(&v23);
}

void sub_207EEBE9C(uint64_t a1, unsigned int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  std::string v7;
  uint64_t v8;
  std::string *v9;
  uint64_t v10;
  std::string *v11;
  std::string *v12;
  uint64_t *v13;

  if (!*(_BYTE *)a1)
  {
    v8 = *(_QWORD *)(a1 + 8);
    v9 = (std::string *)",";
    v10 = v8;
    v11 = (std::string *)",";
    v12 = (std::string *)",";
    v4 = *(unsigned int *)(v8 + 24);
    if ((_DWORD)v4 == -1)
      sub_207CA9F48();
    v7.__r_.__value_.__r.__words[0] = (std::string::size_type)&v8;
    ((void (*)(std::string *))off_24C0766E8[v4])(&v7);
  }
  *(_BYTE *)a1 = 0;
  v5 = *(_QWORD *)(a1 + 8);
  std::to_string(&v7, *a2);
  v8 = v5;
  v9 = &v7;
  v10 = v5;
  v11 = &v7;
  v12 = &v7;
  v6 = *(unsigned int *)(v5 + 24);
  if ((_DWORD)v6 == -1)
    sub_207CA9F48();
  v13 = &v8;
  ((void (*)(uint64_t **, uint64_t))off_24C0765C8[v6])(&v13, v5);
  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v7.__r_.__value_.__l.__data_);
}

void sub_207EEBF88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EEBFA4(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  int v4;
  size_t v5;
  void **v6;
  unint64_t v7;
  unint64_t v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *__dst[2];
  unint64_t v18;
  _QWORD v19[5];
  _QWORD *v20;

  v3 = operator new(0x118uLL);
  *v3 = 0u;
  v3[1] = 0u;
  v3[2] = 0u;
  v3[3] = 0u;
  v3[4] = 0u;
  v3[5] = 0u;
  v3[6] = 0u;
  v3[7] = 0u;
  v3[8] = 0u;
  v3[9] = 0u;
  v3[10] = 0u;
  v3[11] = 0u;
  v3[12] = 0u;
  v3[13] = 0u;
  v3[14] = 0u;
  v3[15] = 0u;
  v3[16] = 0u;
  *((_QWORD *)v3 + 34) = 0;
  sub_207CA2878((uint64_t)v3);
  v19[0] = v3;
  std::ostream::operator<<();
  v4 = *((_DWORD *)v3 + 30);
  if ((v4 & 0x10) != 0)
  {
    v7 = *((_QWORD *)v3 + 14);
    v8 = *((_QWORD *)v3 + 9);
    if (v7 < v8)
    {
      *((_QWORD *)v3 + 14) = v8;
      v7 = v8;
    }
    v9 = (const void *)*((_QWORD *)v3 + 8);
    v5 = v7 - (_QWORD)v9;
    if (v7 - (unint64_t)v9 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v4 & 8) == 0)
    {
      v5 = 0;
      HIBYTE(v18) = 0;
      v6 = __dst;
      goto LABEL_14;
    }
    v9 = (const void *)*((_QWORD *)v3 + 5);
    v5 = *((_QWORD *)v3 + 7) - (_QWORD)v9;
    if (v5 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_207C95C50();
  }
  if (v5 >= 0x17)
  {
    v10 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v10 = v5 | 7;
    v11 = v10 + 1;
    v6 = (void **)operator new(v10 + 1);
    __dst[1] = (void *)v5;
    v18 = v11 | 0x8000000000000000;
    __dst[0] = v6;
    goto LABEL_13;
  }
  HIBYTE(v18) = v5;
  v6 = __dst;
  if (v5)
LABEL_13:
    memmove(v6, v9, v5);
LABEL_14:
  *((_BYTE *)v6 + v5) = 0;
  v12 = v19[0];
  if (v19[0])
  {
    v13 = MEMORY[0x24BEDB7F0];
    v14 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v19[0] = *MEMORY[0x24BEDB7F0];
    v15 = *(_QWORD *)(v13 + 72);
    *(_QWORD *)(v12 + *(_QWORD *)(v14 - 24)) = *(_QWORD *)(v13 + 64);
    *(_QWORD *)(v12 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v12 + 16) = v15;
    if (*(char *)(v12 + 111) < 0)
      operator delete(*(void **)(v12 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD027B8](v12 + 128);
    operator delete((void *)v12);
  }
  v19[0] = a2;
  v19[1] = __dst;
  v19[2] = a2;
  v19[3] = __dst;
  v19[4] = __dst;
  v16 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v16 == -1)
    sub_207CA9F48();
  v20 = v19;
  ((void (*)(_QWORD **, uint64_t))off_24C0765C8[v16])(&v20, a2);
  if (SHIBYTE(v18) < 0)
    operator delete(__dst[0]);
}

void sub_207EEC1D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;

  operator delete(v15);
  _Unwind_Resume(a1);
}

void sub_207EEC1FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2082155DC((void **)va);
  _Unwind_Resume(a1);
}

__int128 *sub_207EEC210()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D190);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D190))
    return &xmmword_25452D178;
  v2 = sub_207EEC2EC();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_207CA40D8(&xmmword_25452D178, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_25452D188 = v2->__r_.__value_.__r.__words[2];
    xmmword_25452D178 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D178, &dword_207C77000);
  __cxa_guard_release(&qword_25452D190);
  return &xmmword_25452D178;
}

void sub_207EEC2D4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D190);
  _Unwind_Resume(a1);
}

std::string *sub_207EEC2EC()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D1B0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D1B0))
    return &stru_25452D198;
  sub_207EEC590((uint64_t)__p);
  sub_207EEC3DC((char *)__p, &stru_25452D198);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25452D198, &dword_207C77000);
  __cxa_guard_release(&qword_25452D1B0);
  return &stru_25452D198;
}

void sub_207EEC39C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25452D1B0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25452D1B0);
  _Unwind_Resume(a1);
}

void sub_207EEC3DC(char *a1@<X0>, std::string *a2@<X8>)
{
  __int128 *v4;
  __int128 v5;
  __int128 *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void **v10;
  void **v11;
  void *v12;
  void *__p;
  void **v14;
  void *__dst[2];
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = sub_207EEC774();
  if (*((char *)v4 + 23) < 0)
  {
    sub_207CA40D8(__dst, *(void **)v4, *((_QWORD *)v4 + 1));
  }
  else
  {
    v5 = *v4;
    v16 = *((_QWORD *)v4 + 2);
    *(_OWORD *)__dst = v5;
  }
  v6 = sub_207D49134();
  if (*((char *)v6 + 23) < 0)
  {
    sub_207CA40D8(&v17, *(void **)v6, *((_QWORD *)v6 + 1));
  }
  else
  {
    v7 = *v6;
    v18 = *((_QWORD *)v6 + 2);
    v17 = v7;
  }
  sub_207CAA110(&__p, (uint64_t)__dst, 2uLL);
  sub_208215D20(a1, (uint64_t *)&__p, a2, v8, v9);
  v10 = (void **)__p;
  if (__p)
  {
    v11 = v14;
    v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = __p;
    }
    v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0)
    goto LABEL_19;
}

void sub_207EEC540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_207C99DE0((void **)&a9);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_207EEC590(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25452D230);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25452D230))
  {
    sub_2082159F8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::viz::TextLog>]", qword_25452D218);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452D218, &dword_207C77000);
    __cxa_guard_release(&qword_25452D230);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25452D250);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25452D250))
  {
    v5 = sub_207D49434(qword_25452D218, "<", 0);
    sub_207D49330(qword_25452D218, 0, v5, qword_25452D238);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452D238, &dword_207C77000);
    __cxa_guard_release(&qword_25452D250);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_25452D270);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25452D270))
  {
    sub_208215C6C((uint64_t)qword_25452D238, (uint64_t)&xmmword_25452D258);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D258, &dword_207C77000);
    __cxa_guard_release(&qword_25452D270);
  }
  if (byte_25452D26F < 0)
  {
    sub_207CA40D8((_BYTE *)a1, (void *)xmmword_25452D258, *((unint64_t *)&xmmword_25452D258 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_25452D258;
    *(_QWORD *)(a1 + 16) = unk_25452D268;
  }
}

void sub_207EEC72C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D270);
  _Unwind_Resume(a1);
}

void sub_207EEC744(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D250);
  _Unwind_Resume(a1);
}

void sub_207EEC75C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D230);
  _Unwind_Resume(a1);
}

__int128 *sub_207EEC774()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D1D0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D1D0))
    return &xmmword_25452D1B8;
  v2 = (char *)sub_207EEC850();
  if (v2[23] < 0)
  {
    sub_207CA40D8(&xmmword_25452D1B8, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_25452D1C8 = *((_QWORD *)v2 + 2);
    xmmword_25452D1B8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D1B8, &dword_207C77000);
  __cxa_guard_release(&qword_25452D1D0);
  return &xmmword_25452D1B8;
}

void sub_207EEC838(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D1D0);
  _Unwind_Resume(a1);
}

void *sub_207EEC850()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D1F0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25452D1F0))
  {
    sub_2082159F8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::TextLog]", qword_25452D1D8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452D1D8, &dword_207C77000);
    __cxa_guard_release(&qword_25452D1F0);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_25452D210);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D210))
    return &unk_25452D1F8;
  sub_208215C6C((uint64_t)qword_25452D1D8, (uint64_t)&unk_25452D1F8);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_25452D1F8, &dword_207C77000);
  __cxa_guard_release(&qword_25452D210);
  return &unk_25452D1F8;
}

void sub_207EEC940(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D210);
  _Unwind_Resume(a1);
}

void sub_207EEC958(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D1F0);
  _Unwind_Resume(a1);
}

uint64_t sub_207EEC970(uint64_t a1)
{
  uint64_t result;
  _DWORD v2[6];
  int v3;
  _QWORD v4[6];
  char v5;
  _DWORD *v6;
  const char *v7;
  char *v8;
  const char *v9;
  const char *v10;
  _QWORD *v11;

  v3 = 0;
  v4[0] = a1;
  v4[1] = a1 + 24;
  v4[2] = a1 + 32;
  v4[3] = a1 + 56;
  v4[4] = a1 + 64;
  v4[5] = a1 + 88;
  sub_207CD4504(v2, "{");
  LOBYTE(v6) = 1;
  v7 = (const char *)v2;
  v8 = &v5;
  sub_207EEBBF4((uint64_t)v4, (uint64_t)&v6);
  v6 = v2;
  v7 = "}";
  v8 = (char *)v2;
  v9 = "}";
  v10 = "}";
  if (v3 == -1)
    sub_207CA9F48();
  v11 = &v6;
  ((void (*)(_QWORD **, _DWORD *))off_24C0766E8[v3])(&v11, v2);
  if (v3 == -1)
    sub_207CA9F48();
  v4[0] = &v6;
  result = ((uint64_t (*)(_QWORD *, _DWORD *))off_24C0765F8[v3])(v4, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD *, _DWORD *))off_24C0765E0[v3])(v4, v2);
  return result;
}

void sub_207EECA94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EECAA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_207EECABC(uint64_t a1, unsigned __int8 ***a2)
{
  const void **v2;
  unsigned __int8 **v3;
  uint64_t v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  int v7;
  unsigned __int8 **v10;
  uint64_t result;
  unsigned __int8 *v12;
  unsigned __int8 *v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned __int8 *v16;
  int v17;
  unsigned __int8 *v18;
  unsigned __int8 *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned __int8 *v23;
  int v24;
  unsigned __int8 *v25;
  unsigned __int8 *v26;
  unsigned __int8 *v27;
  uint64_t v28;
  unsigned __int8 *v29;
  unsigned __int8 *v30;
  int v31;
  unsigned __int8 *v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;
  int v37;
  BOOL v39;

  v2 = *(const void ***)a1;
  v3 = *a2;
  v4 = *(unsigned __int8 *)(*(_QWORD *)a1 + 23);
  if ((v4 & 0x80u) == 0)
    v5 = (unsigned __int8 *)*(unsigned __int8 *)(*(_QWORD *)a1 + 23);
  else
    v5 = *(unsigned __int8 **)(*(_QWORD *)a1 + 8);
  v6 = (unsigned __int8 *)*((unsigned __int8 *)v3 + 23);
  v7 = (char)v6;
  if ((char)v6 < 0)
    v6 = v3[1];
  if (v5 != v6)
    return 0;
  if (v7 >= 0)
    v10 = *a2;
  else
    v10 = (unsigned __int8 **)*v3;
  if ((v4 & 0x80) != 0)
  {
    if (memcmp(*v2, v10, *(_QWORD *)(*(_QWORD *)a1 + 8)))
      return 0;
  }
  else if (*(_BYTE *)(*(_QWORD *)a1 + 23))
  {
    while (*(unsigned __int8 *)v2 == *(unsigned __int8 *)v10)
    {
      v2 = (const void **)((char *)v2 + 1);
      v10 = (unsigned __int8 **)((char *)v10 + 1);
      if (!--v4)
        goto LABEL_18;
    }
    return 0;
  }
LABEL_18:
  if (**(_DWORD **)(a1 + 8) != *(_DWORD *)a2[1])
    return 0;
  v12 = *(unsigned __int8 **)(a1 + 16);
  v13 = (unsigned __int8 *)a2[2];
  v14 = v12[23];
  if ((v14 & 0x80u) == 0)
    v15 = (unsigned __int8 *)v12[23];
  else
    v15 = (unsigned __int8 *)*((_QWORD *)v12 + 1);
  v16 = (unsigned __int8 *)v13[23];
  v17 = (char)v16;
  if ((char)v16 < 0)
    v16 = (unsigned __int8 *)*((_QWORD *)v13 + 1);
  if (v15 != v16)
    return 0;
  if (v17 >= 0)
    v18 = (unsigned __int8 *)a2[2];
  else
    v18 = *(unsigned __int8 **)v13;
  if ((v14 & 0x80) != 0)
  {
    if (memcmp(*(const void **)v12, v18, *((_QWORD *)v12 + 1)))
      return 0;
  }
  else if (v12[23])
  {
    while (*v12 == *v18)
    {
      ++v12;
      ++v18;
      if (!--v14)
        goto LABEL_34;
    }
    return 0;
  }
LABEL_34:
  if (**(_DWORD **)(a1 + 24) != *(_DWORD *)a2[3])
    return 0;
  v19 = *(unsigned __int8 **)(a1 + 32);
  v20 = (unsigned __int8 *)a2[4];
  v21 = v19[23];
  if ((v21 & 0x80u) == 0)
    v22 = (unsigned __int8 *)v19[23];
  else
    v22 = (unsigned __int8 *)*((_QWORD *)v19 + 1);
  v23 = (unsigned __int8 *)v20[23];
  v24 = (char)v23;
  if ((char)v23 < 0)
    v23 = (unsigned __int8 *)*((_QWORD *)v20 + 1);
  if (v22 != v23)
    return 0;
  if (v24 >= 0)
    v25 = (unsigned __int8 *)a2[4];
  else
    v25 = *(unsigned __int8 **)v20;
  if ((v21 & 0x80) != 0)
  {
    if (!memcmp(*(const void **)v19, v25, *((_QWORD *)v19 + 1)))
      goto LABEL_50;
    return 0;
  }
  if (v19[23])
  {
    while (*v19 == *v25)
    {
      ++v19;
      ++v25;
      if (!--v21)
        goto LABEL_50;
    }
    return 0;
  }
LABEL_50:
  v26 = *(unsigned __int8 **)(a1 + 40);
  v27 = (unsigned __int8 *)a2[5];
  v28 = v26[23];
  if ((v28 & 0x80u) == 0)
    v29 = (unsigned __int8 *)v26[23];
  else
    v29 = (unsigned __int8 *)*((_QWORD *)v26 + 1);
  v30 = (unsigned __int8 *)v27[23];
  v31 = (char)v30;
  if ((char)v30 < 0)
    v30 = (unsigned __int8 *)*((_QWORD *)v27 + 1);
  if (v29 != v30)
    return 0;
  if (v31 >= 0)
    v32 = (unsigned __int8 *)a2[5];
  else
    v32 = *(unsigned __int8 **)v27;
  if ((v28 & 0x80) != 0)
    return memcmp(*(const void **)v26, v32, *((_QWORD *)v26 + 1)) == 0;
  if (!v26[23])
    return 1;
  v33 = v28 - 1;
  do
  {
    v35 = *v26++;
    v34 = v35;
    v37 = *v32++;
    v36 = v37;
    v39 = v33-- != 0;
    result = v34 == v36;
  }
  while (v34 == v36 && v39);
  return result;
}

std::string *sub_207EECD34()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void *v8[3];
  void *v9[2];
  char v10;
  void *__dst[2];
  uint64_t v12;
  void *v13[2];
  uint64_t v14;
  __int128 v15;
  std::string::size_type v16;
  void *__p[2];
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25452D290);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25452D290))
  {
    sub_207C96EE8(v9, "viz::PackageData");
    v2 = sub_207EEC774();
    if (*((char *)v2 + 23) < 0)
    {
      sub_207CA40D8(__dst, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      v12 = *((_QWORD *)v2 + 2);
      *(_OWORD *)__dst = v3;
    }
    *(_OWORD *)v13 = *(_OWORD *)"viz::Package";
    v14 = 0xC00000000000000;
    v4 = sub_207EECFFC();
    if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_207CA40D8(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
    }
    else
    {
      v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
      v16 = v4->__r_.__value_.__r.__words[2];
      v15 = v5;
    }
    *(_OWORD *)__p = *(_OWORD *)"void";
    v18 = 0x400000000000000;
    sub_207CAA110(v8, (uint64_t)__dst, 4uLL);
    sub_208215D20((char *)v9, (uint64_t *)v8, &stru_25452D278, v6, v7);
    sub_207C99DE0(v8);
    if (SHIBYTE(v18) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v16) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v14) & 0x80000000) == 0)
          goto LABEL_13;
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v16) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v15);
    if ((SHIBYTE(v14) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v12) & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v13[0]);
    if ((SHIBYTE(v12) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v10 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25452D278, &dword_207C77000);
        __cxa_guard_release(&qword_25452D290);
        return &stru_25452D278;
      }
LABEL_20:
      operator delete(v9[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_20;
  }
  return &stru_25452D278;
}

void sub_207EECF18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  sub_207C99DE0(&a10);
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_25452D290);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_25452D290);
  _Unwind_Resume(a1);
}

std::string *sub_207EECFFC()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D2B0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D2B0))
    return &stru_25452D298;
  sub_2082159F8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 10U]", __p);
  sub_208215E98((uint64_t)__p, &stru_25452D298);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25452D298, &dword_207C77000);
  __cxa_guard_release(&qword_25452D2B0);
  return &stru_25452D298;
}

void sub_207EED0B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25452D2B0);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25452D2B0);
  _Unwind_Resume(a1);
}

uint64_t sub_207EED0F4(__int128 *a1, __int128 *a2, __int128 *a3, __int128 *a4)
{
  uint64_t result;
  __int128 v8;
  uint64_t v9;
  int v10;
  __int128 *v11;
  __int128 *v12;
  __int128 *v13;
  __int128 *v14;
  __int128 *v15;
  uint64_t v16;
  char v17;
  __int128 *v18;
  const char *v19;
  __int128 *v20;
  const char *v21;
  const char *v22;
  __int128 **v23;

  v10 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_207CA40D8(&v8, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    v8 = *a1;
    v9 = *((_QWORD *)a1 + 2);
  }
  v10 = 1;
  v11 = &v8;
  v12 = a2;
  v13 = &v8;
  v14 = a2;
  v15 = a2;
  sub_207CD45F4((uint64_t *)&v13, (uint64_t)&v8);
  v11 = a3;
  v12 = (__int128 *)((char *)a3 + 24);
  v13 = a3 + 2;
  v14 = (__int128 *)((char *)a3 + 56);
  v15 = a3 + 4;
  v16 = (uint64_t)a3 + 88;
  v18 = &v8;
  v19 = "{";
  v20 = &v8;
  v21 = "{";
  v22 = "{";
  if (v10 == -1)
    goto LABEL_11;
  v23 = &v18;
  ((void (*)(__int128 ***, __int128 *))off_24C0766E8[v10])(&v23, &v8);
  LOBYTE(v18) = 1;
  v19 = (const char *)&v8;
  v20 = (__int128 *)&v17;
  sub_207EEBBF4((uint64_t)&v11, (uint64_t)&v18);
  v18 = &v8;
  v19 = "}";
  v20 = &v8;
  v21 = "}";
  v22 = "}";
  if (v10 == -1)
LABEL_11:
    sub_207CA9F48();
  v23 = &v18;
  ((void (*)(__int128 ***, __int128 *))off_24C0766E8[v10])(&v23, &v8);
  v11 = &v8;
  v12 = a4;
  v13 = &v8;
  v14 = a4;
  v15 = a4;
  if (v10 == -1)
    sub_207CA9F48();
  v18 = (__int128 *)&v11;
  ((void (*)(__int128 **, __int128 *))off_24C0766E8[v10])(&v18, &v8);
  if (v10 == -1)
    sub_207CA9F48();
  v11 = (__int128 *)&v18;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C0765F8[v10])(&v11, &v8);
  if (v10 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C0765E0[v10])(&v11, &v8);
  return result;
}

void sub_207EED2E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207CA9EF0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EED300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207CA9EF0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EED314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207CA9EF0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EED328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207CA9EF0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EED33C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207CA9EF0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_207EED350(uint64_t a1, __int128 *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)a1 = off_24C078330;
  v4 = *a2;
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 2);
  *(_OWORD *)(a1 + 8) = v4;
  *((_QWORD *)a2 + 1) = 0;
  *((_QWORD *)a2 + 2) = 0;
  *(_QWORD *)a2 = 0;
  *(_DWORD *)(a1 + 32) = *((_DWORD *)a2 + 6);
  v5 = a2[2];
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 6);
  *(_OWORD *)(a1 + 40) = v5;
  *((_QWORD *)a2 + 5) = 0;
  *((_QWORD *)a2 + 6) = 0;
  *((_QWORD *)a2 + 4) = 0;
  *(_DWORD *)(a1 + 64) = *((_DWORD *)a2 + 14);
  v6 = a2[4];
  *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 10);
  *(_OWORD *)(a1 + 72) = v6;
  *((_QWORD *)a2 + 9) = 0;
  *((_QWORD *)a2 + 10) = 0;
  *((_QWORD *)a2 + 8) = 0;
  v7 = *(__int128 *)((char *)a2 + 88);
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 13);
  *(_OWORD *)(a1 + 96) = v7;
  *((_QWORD *)a2 + 12) = 0;
  *((_QWORD *)a2 + 13) = 0;
  *((_QWORD *)a2 + 11) = 0;
  sub_207D47D34(a1 + 128, a3);
  *(_QWORD *)a1 = off_24C0782B0;
  return a1;
}

void sub_207EED424(_Unwind_Exception *exception_object)
{
  char *v1;
  void **v2;
  void **v3;
  void **v4;
  void **v5;

  if (v1[119] < 0)
  {
    operator delete(*v5);
    if ((v1[95] & 0x80000000) == 0)
    {
LABEL_3:
      if ((v1[63] & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v1[95] & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v4);
  if ((v1[63] & 0x80000000) == 0)
  {
LABEL_4:
    if ((v1[31] & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_9;
  }
LABEL_8:
  operator delete(*v3);
  if ((v1[31] & 0x80000000) == 0)
LABEL_5:
    _Unwind_Resume(exception_object);
LABEL_9:
  operator delete(*v2);
  _Unwind_Resume(exception_object);
}

uint64_t sub_207EED490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v11;
  _BYTE *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t *v17;
  unsigned __int8 **v18;
  _BYTE *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t *v23;
  unsigned __int8 **v24;
  char v25;
  _BYTE v26[16];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[16];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[6];

  v37[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_207E372B8(v4, (uint64_t)v32);
  }
  else if (v5 == 1)
  {
    sub_207E370A0(v4, (uint64_t)v32);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    sub_207E02E5C(v4, (uint64_t)v32);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_207E372B8(v6, (uint64_t)v26);
  }
  else if (v7 == 1)
  {
    sub_207E370A0(v6, (uint64_t)v26);
  }
  else
  {
    if (v7)
      sub_207CA9F48();
    sub_207E02E5C(v6, (uint64_t)v26);
  }
  v19 = v32;
  v20 = &v33;
  v21 = &v34;
  v22 = &v35;
  v23 = &v36;
  v24 = (unsigned __int8 **)v37;
  v13 = v26;
  v14 = &v27;
  v15 = &v28;
  v16 = &v29;
  v17 = &v30;
  v18 = (unsigned __int8 **)&v31;
  if (sub_207EFF314((uint64_t)&v25, &v19, &v13))
  {
    if (*((_BYTE *)v24 + 24) && *((_BYTE *)v18 + 24))
    {
      v8 = *v24;
      v9 = v24[1];
      v10 = *v18;
      if (v9 - *v24 == v18[1] - *v18)
      {
        if (v8 != v9)
        {
          while (sub_207EFE5C8(v8, v10))
          {
            v8 += 96;
            v10 += 96;
            if (v8 == v9)
              goto LABEL_23;
          }
          goto LABEL_22;
        }
LABEL_23:
        v19 = (_BYTE *)(a1 + 200);
        v20 = (uint64_t *)(a1 + 224);
        v21 = (uint64_t *)(a1 + 232);
        v22 = (uint64_t *)(a1 + 256);
        v23 = (uint64_t *)(a1 + 264);
        v24 = (unsigned __int8 **)(a1 + 288);
        v13 = (_BYTE *)(a2 + 200);
        v14 = (uint64_t *)(a2 + 224);
        v15 = (uint64_t *)(a2 + 232);
        v16 = (uint64_t *)(a2 + 256);
        v17 = (uint64_t *)(a2 + 264);
        v18 = (unsigned __int8 **)(a2 + 288);
        v11 = sub_207EED6F4((uint64_t)&v25, (uint64_t)&v19, (uint64_t)&v13);
        goto LABEL_24;
      }
    }
    else if ((*((_BYTE *)v24 + 24) != 0) == (*((_BYTE *)v18 + 24) != 0))
    {
      goto LABEL_23;
    }
  }
LABEL_22:
  v11 = 0;
LABEL_24:
  sub_207D49CF4((uint64_t)v26);
  sub_207D49CF4((uint64_t)v32);
  return v11;
}

void sub_207EED6C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a23);
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_207EED6E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

uint64_t sub_207EED6F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 *v5;
  unsigned __int8 **v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  int v10;
  unsigned __int8 *v11;
  uint64_t result;
  unsigned __int8 *v13;
  unsigned __int8 **v14;
  uint64_t v15;
  unsigned __int8 *v16;
  unsigned __int8 *v17;
  int v18;
  unsigned __int8 *v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  int v24;
  BOOL v26;
  char v27;

  if ((sub_207EED87C((uint64_t)&v27, a2, (unsigned __int8 **)a3) & 1) == 0)
    return 0;
  if (**(_DWORD **)(a2 + 24) != **(_DWORD **)(a3 + 24))
    return 0;
  v5 = *(unsigned __int8 **)(a2 + 32);
  v6 = *(unsigned __int8 ***)(a3 + 32);
  v7 = v5[23];
  if ((v7 & 0x80u) == 0)
    v8 = (unsigned __int8 *)v5[23];
  else
    v8 = (unsigned __int8 *)*((_QWORD *)v5 + 1);
  v9 = (unsigned __int8 *)*((unsigned __int8 *)v6 + 23);
  v10 = (char)v9;
  if ((char)v9 < 0)
    v9 = v6[1];
  if (v8 != v9)
    return 0;
  if (v10 >= 0)
    v11 = *(unsigned __int8 **)(a3 + 32);
  else
    v11 = *v6;
  if ((v7 & 0x80) != 0)
  {
    if (!memcmp(*(const void **)v5, v11, *((_QWORD *)v5 + 1)))
      goto LABEL_20;
    return 0;
  }
  if (v5[23])
  {
    while (*v5 == *v11)
    {
      ++v5;
      ++v11;
      if (!--v7)
        goto LABEL_20;
    }
    return 0;
  }
LABEL_20:
  v13 = *(unsigned __int8 **)(a2 + 40);
  v14 = *(unsigned __int8 ***)(a3 + 40);
  v15 = v13[23];
  if ((v15 & 0x80u) == 0)
    v16 = (unsigned __int8 *)v13[23];
  else
    v16 = (unsigned __int8 *)*((_QWORD *)v13 + 1);
  v17 = (unsigned __int8 *)*((unsigned __int8 *)v14 + 23);
  v18 = (char)v17;
  if ((char)v17 < 0)
    v17 = v14[1];
  if (v16 != v17)
    return 0;
  if (v18 >= 0)
    v19 = *(unsigned __int8 **)(a3 + 40);
  else
    v19 = *v14;
  if ((v15 & 0x80) != 0)
    return memcmp(*(const void **)v13, v19, *((_QWORD *)v13 + 1)) == 0;
  if (!v13[23])
    return 1;
  v20 = v15 - 1;
  do
  {
    v22 = *v13++;
    v21 = v22;
    v24 = *v19++;
    v23 = v24;
    v26 = v20-- != 0;
    result = v21 == v23;
  }
  while (v21 == v23 && v26);
  return result;
}

uint64_t sub_207EED87C(uint64_t a1, uint64_t a2, unsigned __int8 **a3)
{
  const void **v4;
  unsigned __int8 *v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unsigned __int8 *v12;
  uint64_t result;
  unsigned __int8 *v14;
  unsigned __int8 **v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned __int8 *v18;
  int v19;
  unsigned __int8 *v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  int v25;
  BOOL v27;

  v4 = *(const void ***)a2;
  v5 = *a3;
  v6 = *(unsigned __int8 *)(*(_QWORD *)a2 + 23);
  v7 = *(_QWORD *)(*(_QWORD *)a2 + 8);
  if ((v6 & 0x80u) == 0)
    v8 = *(unsigned __int8 *)(*(_QWORD *)a2 + 23);
  else
    v8 = *(_QWORD *)(*(_QWORD *)a2 + 8);
  v9 = v5[23];
  v10 = (char)v9;
  if ((v9 & 0x80u) != 0)
    v9 = *((_QWORD *)v5 + 1);
  if (v8 != v9)
    return 0;
  if (v10 >= 0)
    v12 = v5;
  else
    v12 = *(unsigned __int8 **)v5;
  if ((v6 & 0x80) != 0)
  {
    if (memcmp(*v4, v12, v7))
      return 0;
  }
  else if ((_DWORD)v6)
  {
    while (*(unsigned __int8 *)v4 == *v12)
    {
      v4 = (const void **)((char *)v4 + 1);
      ++v12;
      if (!--v6)
        goto LABEL_18;
    }
    return 0;
  }
LABEL_18:
  if (**(unsigned __int8 **)(a2 + 8) != *a3[1])
    return 0;
  v14 = *(unsigned __int8 **)(a2 + 16);
  v15 = (unsigned __int8 **)a3[2];
  v16 = v14[23];
  if ((v16 & 0x80u) == 0)
    v17 = (unsigned __int8 *)v14[23];
  else
    v17 = (unsigned __int8 *)*((_QWORD *)v14 + 1);
  v18 = (unsigned __int8 *)*((unsigned __int8 *)v15 + 23);
  v19 = (char)v18;
  if ((char)v18 < 0)
    v18 = v15[1];
  if (v17 != v18)
    return 0;
  if (v19 >= 0)
    v20 = a3[2];
  else
    v20 = *v15;
  if ((v16 & 0x80) != 0)
    return memcmp(*(const void **)v14, v20, *((_QWORD *)v14 + 1)) == 0;
  if (!v14[23])
    return 1;
  v21 = v16 - 1;
  do
  {
    v23 = *v14++;
    v22 = v23;
    v25 = *v20++;
    v24 = v25;
    v27 = v21-- != 0;
    result = v22 == v24;
  }
  while (v22 == v24 && v27);
  return result;
}

void sub_207EED9E4(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076B88, 0);
  if (v4)
  {
    sub_207EEDD74(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076BD0, 0);
    if (v5)
    {
      sub_207EEE388(&v9, (uint64_t)v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076C58, 0);
      if (v6)
      {
        sub_207EEE794(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076CA0, 0);
        if (v7)
        {
          sub_207EEEC24(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24C082C60)
            sub_207EEEF20(&v9, (uint64_t)a1);
          else
            sub_207EEDB48(&v8, a1);
        }
      }
    }
  }
}

void sub_207EEDB48(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v12 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    v9 = v12;
    if (v8 < 1)
    {
      sub_207E3CE18((uint64_t)a2, v4, v12);
      goto LABEL_17;
    }
    if (v8 == 2)
    {
      v12 = 3;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_207E3CE18((uint64_t)a2, v4, v9);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v12 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    v11 = v12;
    if (v10 < 1)
    {
      sub_207E3C790((uint64_t)a2, v4, v12);
      goto LABEL_17;
    }
    if (v10 == 2)
    {
      v12 = 3;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_207E3C790((uint64_t)a2, v4, v11);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = a2[2];
    v12 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    v7 = v12;
    if (v6 < 1)
    {
      sub_207E12E90((uint64_t)a2, v4, v12);
      goto LABEL_17;
    }
    if (v6 == 2)
    {
      v12 = 3;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_207E12E90((uint64_t)a2, v4, v7);
  }
  (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
LABEL_17:
  v12 = 1;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v12);
  sub_207EEF418((uint64_t)a2, (__int128 *)(v3 + 200));
}

void sub_207EEDD74(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E383C8(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F1E44(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F3DDC(a2, &v18);
      sub_207E0BDBC(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E37A58(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F1E44(a2);
  v18 = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F3DDC(a2, &v18);
  sub_207EEE074(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_207EEE074(uint64_t a1, __int128 *a2)
{
  BOOL v3;
  int *v4;
  int v5;
  int v6;
  BOOL v7;
  unsigned __int8 *v8;
  int v9;
  void **v10;
  void *v11[2];
  char v12;
  unsigned __int8 v13;
  void *v14;
  char v15;
  int v16;
  void *v17;
  char v18;
  void *__p;
  char v20;
  char v21;
  unint64_t v22;

  sub_207EEE204(v11, a2);
  sub_2081F42A4(a1, (uint64_t)v11);
  if (*(_BYTE *)(a1 + 88))
    v3 = *(_QWORD *)(a1 + 80) == 7;
  else
    v3 = 0;
  if (!v3
    || ((v4 = *(int **)(a1 + 72), v5 = *v4, v6 = *(int *)((char *)v4 + 3), v5 == *(_DWORD *)"version")
      ? (v7 = v6 == *(_DWORD *)"sion")
      : (v7 = 0),
        !v7))
  {
    v21 = 6;
    v22 = v13;
    v8 = (unsigned __int8 *)sub_2081F1A98(a1);
    v9 = *v8;
    *v8 = v21;
    v21 = v9;
    v10 = (void **)*((_QWORD *)v8 + 1);
    *((_QWORD *)v8 + 1) = v22;
    v22 = (unint64_t)v10;
    sub_20806DC2C((void ***)&v22, v9);
  }
  sub_2081F42A4(a1, (uint64_t)&v14);
  sub_2081F3DDC(a1, &v16);
  sub_2081F42A4(a1, (uint64_t)&v17);
  sub_2081F42A4(a1, (uint64_t)&__p);
  if (v20 < 0)
  {
    operator delete(__p);
    if ((v18 & 0x80000000) == 0)
    {
LABEL_13:
      if ((v15 & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_18;
    }
  }
  else if ((v18 & 0x80000000) == 0)
  {
    goto LABEL_13;
  }
  operator delete(v17);
  if ((v15 & 0x80000000) == 0)
  {
LABEL_14:
    if ((v12 & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(v11[0]);
    return;
  }
LABEL_18:
  operator delete(v14);
  if (v12 < 0)
    goto LABEL_19;
}

void sub_207EEE1D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void ***v9;
  uint64_t v10;

  sub_20806DC2C(v9, *(unsigned __int8 *)(v10 - 32));
  sub_207E0A7B0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EEE1F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207E0A7B0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

_BYTE *sub_207EEE204(_BYTE *__dst, __int128 *a2)
{
  __int128 v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  _BYTE *v8;
  __int128 v9;

  if (*((char *)a2 + 23) < 0)
  {
    sub_207CA40D8(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
    __dst[24] = *((_BYTE *)a2 + 24);
    v5 = __dst + 32;
    if ((*((char *)a2 + 55) & 0x80000000) == 0)
      goto LABEL_3;
  }
  else
  {
    v4 = *a2;
    *((_QWORD *)__dst + 2) = *((_QWORD *)a2 + 2);
    *(_OWORD *)__dst = v4;
    __dst[24] = *((_BYTE *)a2 + 24);
    v5 = __dst + 32;
    if ((*((char *)a2 + 55) & 0x80000000) == 0)
    {
LABEL_3:
      v6 = a2[2];
      *((_QWORD *)v5 + 2) = *((_QWORD *)a2 + 6);
      *(_OWORD *)v5 = v6;
      goto LABEL_6;
    }
  }
  sub_207CA40D8(v5, *((void **)a2 + 4), *((_QWORD *)a2 + 5));
LABEL_6:
  *((_DWORD *)__dst + 14) = *((_DWORD *)a2 + 14);
  if (*((char *)a2 + 87) < 0)
  {
    sub_207CA40D8(__dst + 64, *((void **)a2 + 8), *((_QWORD *)a2 + 9));
  }
  else
  {
    v7 = a2[4];
    *((_QWORD *)__dst + 10) = *((_QWORD *)a2 + 10);
    *((_OWORD *)__dst + 4) = v7;
  }
  v8 = __dst + 88;
  if (*((char *)a2 + 111) < 0)
  {
    sub_207CA40D8(v8, *((void **)a2 + 11), *((_QWORD *)a2 + 12));
  }
  else
  {
    v9 = *(__int128 *)((char *)a2 + 88);
    *((_QWORD *)__dst + 13) = *((_QWORD *)a2 + 13);
    *(_OWORD *)v8 = v9;
  }
  return __dst;
}

void sub_207EEE314(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;

  if (*(char *)(v1 + 87) < 0)
  {
    operator delete(*v3);
    if ((*(char *)(v1 + 55) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v1 + 23) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((*(char *)(v1 + 55) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v2);
  if ((*(char *)(v1 + 23) & 0x80000000) == 0)
LABEL_4:
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_207EEE388(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v7 + 40))
    {
      v15 = (uint64_t *)(v7 + 16);
      sub_208210C8C(&v15, 4u);
    }
    else
    {
      sub_208210F00((uint64_t)&v15, v7 + 8);
    }
    sub_20820C2C0(*(_QWORD *)(a2 + 24));
    sub_207E39730(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v8 + 40))
    {
      v15 = (uint64_t *)(v8 + 16);
      sub_208210C8C(&v15, 5u);
    }
    else
    {
      sub_208210F00((uint64_t)&v15, v8 + 8);
    }
    sub_20820C2C0(*(_QWORD *)(a2 + 24));
    sub_207E39614(a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v6 + 40))
    {
      v15 = (uint64_t *)(v6 + 16);
      sub_208210C8C(&v15, 6u);
    }
    else
    {
      sub_208210F00((uint64_t)&v15, v6 + 8);
    }
    sub_20820C2C0(*(_QWORD *)(a2 + 24));
    sub_207E0E660(a2, v4, 6u);
  }
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_20820C0E8((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v14 + 40))
  {
    v15 = (uint64_t *)(v14 + 16);
    sub_208210C8C(&v15, 1u);
  }
  else
  {
    sub_208210F00((uint64_t)&v15, v14 + 8);
  }
  sub_207EEE578(a2, (__int128 *)(v3 + 200));
}

void sub_207EEE578(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9[2];
  char v10;
  char v11;
  void *v12[2];
  char v13;
  unsigned int v14;
  void *v15[2];
  char v16;
  void *__p[2];
  char v18;
  uint64_t *v19;
  char v20;

  sub_207EEE204(v9, a2);
  v3 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v3 + 40))
  {
    v19 = (uint64_t *)(v3 + 16);
    sub_208211D5C((uint64_t)&v20, &v19, (const void **)v9);
  }
  else
  {
    sub_208212184((uint64_t)&v19, v3 + 8, (uint64_t)v9);
  }
  v4 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v4 + 40))
  {
    v19 = (uint64_t *)(v4 + 16);
    sub_2082100A4(&v19, v11);
  }
  else
  {
    if (v11 < 0)
    {
      LOBYTE(v19) = -52;
      BYTE1(v19) = v11;
    }
    else
    {
      LOBYTE(v19) = v11;
    }
    std::ostream::write();
  }
  v5 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v5 + 40))
  {
    v19 = (uint64_t *)(v5 + 16);
    sub_208211D5C((uint64_t)&v20, &v19, (const void **)v12);
  }
  else
  {
    sub_208212184((uint64_t)&v19, v5 + 8, (uint64_t)v12);
  }
  v6 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v6 + 40))
  {
    v19 = (uint64_t *)(v6 + 16);
    sub_208210C8C(&v19, v14);
  }
  else
  {
    sub_208210F00((uint64_t)&v19, v6 + 8);
  }
  v7 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v7 + 40))
  {
    v19 = (uint64_t *)(v7 + 16);
    sub_208211D5C((uint64_t)&v20, &v19, (const void **)v15);
  }
  else
  {
    sub_208212184((uint64_t)&v19, v7 + 8, (uint64_t)v15);
  }
  v8 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v8 + 40))
  {
    v19 = (uint64_t *)(v8 + 16);
    sub_208211D5C((uint64_t)&v20, &v19, (const void **)__p);
  }
  else
  {
    sub_208212184((uint64_t)&v19, v8 + 8, (uint64_t)__p);
  }
  if (v18 < 0)
  {
    operator delete(__p[0]);
    if ((v16 & 0x80000000) == 0)
    {
LABEL_24:
      if ((v13 & 0x80000000) == 0)
        goto LABEL_25;
      goto LABEL_29;
    }
  }
  else if ((v16 & 0x80000000) == 0)
  {
    goto LABEL_24;
  }
  operator delete(v15[0]);
  if ((v13 & 0x80000000) == 0)
  {
LABEL_25:
    if ((v10 & 0x80000000) == 0)
      return;
LABEL_30:
    operator delete(v9[0]);
    return;
  }
LABEL_29:
  operator delete(v12[0]);
  if (v10 < 0)
    goto LABEL_30;
}

void sub_207EEE780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207E0A7B0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EEE794(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A78C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F17E4(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F20F8(a2, &v18);
      sub_207E0F904(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A048(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F17E4(a2);
  v18 = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F20F8(a2, &v18);
  sub_207EEEA94(a2, (__int128 *)(v3 + 200));
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_207EEEA94(uint64_t a1, __int128 *a2)
{
  BOOL v3;
  int *v4;
  int v5;
  int v6;
  BOOL v7;
  unsigned __int8 *v8;
  int v9;
  uint64_t v10;
  void *v11[2];
  char v12;
  unsigned __int8 v13;
  void *v14;
  char v15;
  int v16;
  void *v17;
  char v18;
  void *__p;
  char v20;
  char v21;
  uint64_t v22;

  sub_207EEE204(v11, a2);
  sub_2081F25C0(a1, (uint64_t)v11);
  if (*(_BYTE *)(a1 + 88))
    v3 = *(_QWORD *)(a1 + 80) == 7;
  else
    v3 = 0;
  if (!v3
    || ((v4 = *(int **)(a1 + 72), v5 = *v4, v6 = *(int *)((char *)v4 + 3), v5 == *(_DWORD *)"version")
      ? (v7 = v6 == *(_DWORD *)"sion")
      : (v7 = 0),
        !v7))
  {
    v21 = 6;
    v22 = v13;
    v8 = (unsigned __int8 *)sub_2081F133C(a1);
    v9 = *v8;
    *v8 = v21;
    v21 = v9;
    v10 = *((_QWORD *)v8 + 1);
    *((_QWORD *)v8 + 1) = v22;
    v22 = v10;
    sub_207D20660(&v22, v9);
  }
  sub_2081F25C0(a1, (uint64_t)&v14);
  sub_2081F20F8(a1, &v16);
  sub_2081F25C0(a1, (uint64_t)&v17);
  sub_2081F25C0(a1, (uint64_t)&__p);
  if (v20 < 0)
  {
    operator delete(__p);
    if ((v18 & 0x80000000) == 0)
    {
LABEL_13:
      if ((v15 & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_18;
    }
  }
  else if ((v18 & 0x80000000) == 0)
  {
    goto LABEL_13;
  }
  operator delete(v17);
  if ((v15 & 0x80000000) == 0)
  {
LABEL_14:
    if ((v12 & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(v11[0]);
    return;
  }
LABEL_18:
  operator delete(v14);
  if (v12 < 0)
    goto LABEL_19;
}

void sub_207EEEBF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;
  uint64_t v10;

  sub_207D20660(v9, *(unsigned __int8 *)(v10 - 32));
  sub_207E0A7B0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EEEC10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207E0A7B0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207EEEC24(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v16 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v8, (uint64_t)&v16, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3BAE4(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v14 = *(_BYTE *)(a2 + 32);
        sub_207CBAB98(v6, (uint64_t)&v14, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_207E11040(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v17 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v10, (uint64_t)&v17, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v15 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v9, (uint64_t)&v15, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3B540(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v18 = v7;
  sub_207CBAB98(v11, (uint64_t)&v18, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v19 = *(_BYTE *)(a2 + 32);
    sub_207CBAB98(v13, (uint64_t)&v19, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_207EEEDF8(a2, (__int128 *)(v3 + 200));
}

void sub_207EEEDF8(uint64_t a1, __int128 *a2)
{
  _QWORD *v3;
  void *__dst[2];
  char v5;
  unsigned __int8 v6[8];
  void *v7;
  char v8;
  void *v9;
  char v10;
  void *__p;
  char v12;
  char v13;

  sub_207EEE204(__dst, a2);
  sub_208208DC4(a1, (uint64_t)__dst);
  sub_208208D08(a1, v6);
  sub_208208DC4(a1, (uint64_t)&v7);
  if (*(_QWORD *)(a1 + 40))
  {
    v3 = *(_QWORD **)(a1 + 24);
    v13 = *(_BYTE *)(a1 + 32);
    sub_207CBAB98(v3, (uint64_t)&v13, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
  sub_208208DC4(a1, (uint64_t)&v9);
  sub_208208DC4(a1, (uint64_t)&__p);
  if (v12 < 0)
  {
    operator delete(__p);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_5:
      if ((v8 & 0x80000000) == 0)
        goto LABEL_6;
      goto LABEL_10;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_5;
  }
  operator delete(v9);
  if ((v8 & 0x80000000) == 0)
  {
LABEL_6:
    if ((v5 & 0x80000000) == 0)
      return;
LABEL_11:
    operator delete(__dst[0]);
    return;
  }
LABEL_10:
  operator delete(v7);
  if (v5 < 0)
    goto LABEL_11;
}

void sub_207EEEF0C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_207E0A7B0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EEEF20(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  int __src;
  uint64_t v11;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v11, 4);
    v7 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C21C(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v11, 4);
    v8 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C100(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    __src = 6;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v11, 4);
    v6 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E11EF8(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 1;
  sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v11, 4);
  sub_207EEF09C(a2, (__int128 *)(v3 + 200));
}

void sub_207EEF09C(uint64_t a1, __int128 *a2)
{
  int64_t v3;
  int64_t v4;
  char *p_dst;
  int64_t v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  int64_t v11;
  int64_t v12;
  char *p_p;
  int64_t v14;
  void *__dst;
  int64_t v16;
  unsigned __int8 v17;
  char v18;
  char v19[7];
  void *v20;
  int64_t v21;
  unsigned __int8 v22;
  char v23[4];
  char v24[4];
  void *v25;
  int64_t v26;
  unsigned __int8 v27;
  void *__p;
  int64_t v29;
  unsigned __int8 v30;
  int64_t __src;
  uint64_t v32;

  sub_207EEE204(&__dst, a2);
  v3 = v17;
  if ((v17 & 0x80u) != 0)
    v3 = v16;
  __src = v3;
  sub_207D0B114(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&v32, 8);
  if ((char)v17 < 0)
  {
    p_dst = (char *)__dst;
    v4 = v16;
    if (!__dst && v16)
    {
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_208224846, 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_42;
      }
      p_dst = 0;
    }
  }
  else
  {
    v4 = v17;
    p_dst = (char *)&__dst;
  }
  sub_207D0B114(a1 + 24, *(char **)(a1 + 32), p_dst, &p_dst[v4], v4);
  sub_207D0B114(a1 + 24, *(char **)(a1 + 32), &v18, v19, 1);
  v6 = v22;
  if ((v22 & 0x80u) != 0)
    v6 = v21;
  __src = v6;
  sub_207D0B114(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&v32, 8);
  if ((char)v22 < 0)
  {
    v7 = (char *)v20;
    v8 = v21;
    if (!v20 && v21)
    {
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_208224846, 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_42;
      }
      v7 = 0;
    }
  }
  else
  {
    v7 = (char *)&v20;
    v8 = v22;
  }
  sub_207D0B114(a1 + 24, *(char **)(a1 + 32), v7, &v7[v8], v8);
  sub_207D0B114(a1 + 24, *(char **)(a1 + 32), v23, v24, 4);
  v9 = v27;
  if ((v27 & 0x80u) != 0)
    v9 = v26;
  __src = v9;
  sub_207D0B114(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&v32, 8);
  if ((char)v27 < 0)
  {
    v10 = (char *)v25;
    v11 = v26;
    if (!v25 && v26)
    {
      if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_208224846, 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_42;
      }
      v10 = 0;
    }
  }
  else
  {
    v10 = (char *)&v25;
    v11 = v27;
  }
  sub_207D0B114(a1 + 24, *(char **)(a1 + 32), v10, &v10[v11], v11);
  v12 = v30;
  if ((v30 & 0x80u) != 0)
    v12 = v29;
  __src = v12;
  sub_207D0B114(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&v32, 8);
  if (((char)v30 & 0x80000000) == 0)
  {
    p_p = (char *)&__p;
    v14 = v30;
    goto LABEL_33;
  }
  p_p = (char *)__p;
  v14 = v29;
  if (!__p && v29)
  {
    if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_208224846, 0, (void (*)(void **))sub_208216974))
    {
      p_p = 0;
      goto LABEL_33;
    }
LABEL_42:
    abort();
  }
LABEL_33:
  sub_207D0B114(a1 + 24, *(char **)(a1 + 32), p_p, &p_p[v14], v14);
  if ((char)v30 < 0)
  {
    operator delete(__p);
    if (((char)v27 & 0x80000000) == 0)
    {
LABEL_35:
      if (((char)v22 & 0x80000000) == 0)
        goto LABEL_36;
      goto LABEL_40;
    }
  }
  else if (((char)v27 & 0x80000000) == 0)
  {
    goto LABEL_35;
  }
  operator delete(v25);
  if (((char)v22 & 0x80000000) == 0)
  {
LABEL_36:
    if (((char)v17 & 0x80000000) == 0)
      return;
LABEL_41:
    operator delete(__dst);
    return;
  }
LABEL_40:
  operator delete(v20);
  if ((char)v17 < 0)
    goto LABEL_41;
}

void sub_207EEF404(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_207E0A7B0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EEF418(uint64_t a1, __int128 *a2)
{
  void *v3[2];
  char v4;
  uint64_t v5;
  void *v6;
  char v7;
  uint64_t v8;
  void *v9;
  char v10;
  void *__p;
  char v12;

  sub_207EEE204(v3, a2);
  (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 144))(a1, v3);
  (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)a1 + 80))(a1, &v5);
  (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 144))(a1, &v6);
  (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)a1 + 104))(a1, &v8);
  (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 144))(a1, &v9);
  (*(void (**)(uint64_t, void **))(*(_QWORD *)a1 + 144))(a1, &__p);
  if (v12 < 0)
  {
    operator delete(__p);
    if ((v10 & 0x80000000) == 0)
    {
LABEL_3:
      if ((v7 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  else if ((v10 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(v9);
  if ((v7 & 0x80000000) == 0)
  {
LABEL_4:
    if ((v4 & 0x80000000) == 0)
      return;
LABEL_9:
    operator delete(v3[0]);
    return;
  }
LABEL_8:
  operator delete(v6);
  if (v4 < 0)
    goto LABEL_9;
}

void sub_207EEF530(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207E0A7B0((uint64_t)&a9);
  _Unwind_Resume(a1);
}

double sub_207EEF544(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  double result;
  _QWORD *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v9 = a2;
  v10 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D28, 0);
  if (v4)
    return sub_207EEFBFC(&v10, (uint64_t)v4);
  v10 = a2;
  v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D60, 0);
  if (v6)
  {
    sub_207EF0328(&v10, v6);
  }
  else
  {
    v10 = a2;
    v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076DE8, 0);
    if (v7)
    {
      return sub_207EF07E8(&v10, (uint64_t)v7);
    }
    else
    {
      v10 = a2;
      v8 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076E20, 0);
      if (v8)
      {
        return sub_207EF0F14(&v10, (uint64_t)v8);
      }
      else
      {
        v10 = a2;
        if (*a1 == &off_24C082DE0)
          return sub_207EF1638(&v10, a1);
        else
          sub_207EEF6A8(&v9, a1);
      }
    }
  }
  return result;
}

uint64_t sub_207EEF6A8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v27;
  uint64_t v28[27];
  unsigned int v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v28);
    sub_207E0AB10((uint64_t)&v29, v28);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)&v29);
        if (!v44)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v27, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v8 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v8;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v35;
    v10 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v11 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v11;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v12 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v12;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v15 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v42;
LABEL_45:
    *((_QWORD *)&v42 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v28);
  sub_207E0AB10((uint64_t)&v29, v28);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v27, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v17 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v17;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v35;
    v19 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v20 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v20;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v21 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v21;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)&v29);
  if (v44)
  {
LABEL_38:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v23 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v33 && SHIBYTE(v32) < 0)
    operator delete((void *)v31);
  sub_207D49CF4((uint64_t)v28);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *a2;
  v28[0] = a2[1];
  v25 = v28[0];
  v29 = 6;
  (*(void (**)(_QWORD *, unsigned int *))(v24 + 104))(a2, &v29);
  if (v25 < 1)
  {
    if (v29 < 3)
      sub_207E1EB04((uint64_t)&v29, (uint64_t)a2, v4, v29);
    else
      sub_207E1ED78((uint64_t)a2, v4, v29);
  }
  else
  {
    sub_207E1E50C((int *)v28, (uint64_t)a2, v4, v29);
  }
  LODWORD(v28[0]) = 1;
  (*(void (**)(_QWORD *, uint64_t *))(*a2 + 104))(a2, v28);
  (*(void (**)(_QWORD *, uint64_t))(*a2 + 144))(a2, v3 + 200);
  (*(void (**)(_QWORD *, uint64_t))(*a2 + 80))(a2, v3 + 224);
  (*(void (**)(_QWORD *, uint64_t))(*a2 + 144))(a2, v3 + 232);
  (*(void (**)(_QWORD *, uint64_t))(*a2 + 104))(a2, v3 + 256);
  (*(void (**)(_QWORD *, uint64_t))(*a2 + 144))(a2, v3 + 264);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(*a2 + 144))(a2, v3 + 288);
}

void sub_207EEFBB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_207EEFBFC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v27);
    sub_207E0AB10((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v27);
  sub_207E0AB10((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_207D49CF4((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E14108(a2, v4);
  v27[0] = (uint64_t)"value";
  v27[1] = 5;
  v27[2] = v3 + 200;
  return sub_207EF00A0(a2, (uint64_t)v27);
}

void sub_207EF0058(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_207EF00A0(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  int v5;
  char *v6;
  void **v7;
  __int128 v8;
  char *v9;
  void **v10;
  void **v11;
  char *v12;
  void **v13;
  void **v14;
  void **v15;
  void **v16;
  double result;
  uint64_t v18;
  uint64_t v19;
  _QWORD *exception;
  __int128 v21;
  uint64_t v22;

  v3 = *(unsigned __int8 *)(a1 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)a2;
  if (!v3)
    *(_BYTE *)(a1 + 104) = 1;
  v4 = *(_QWORD *)(a2 + 16);
  sub_2081F5F4C(a1);
  v5 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "version";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v5)
    *(_BYTE *)(a1 + 104) = 1;
  v6 = (char *)sub_2081F6204((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  *(_QWORD *)&v21 = 0;
  sub_20809778C(v6, &v21);
  if (DWORD1(v21))
    goto LABEL_17;
  v7 = (void **)sub_2081F6204((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v22 = 0;
  v21 = 0uLL;
  sub_208097C8C(v7, (uint64_t)&v21);
  if (*(char *)(v4 + 23) < 0)
    operator delete(*(void **)v4);
  v8 = v21;
  *(_QWORD *)(v4 + 16) = v22;
  *(_OWORD *)v4 = v8;
  v9 = (char *)sub_2081F6204((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  *(_QWORD *)&v21 = 0;
  sub_20809778C(v9, &v21);
  if ((unint64_t)v21 >= 0x100)
    goto LABEL_17;
  *(_BYTE *)(v4 + 24) = v21;
  v10 = (void **)sub_2081F6204((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v22 = 0;
  v21 = 0uLL;
  sub_208097C8C(v10, (uint64_t)&v21);
  v11 = (void **)(v4 + 32);
  if (*(char *)(v4 + 55) < 0)
    operator delete(*v11);
  *(_OWORD *)v11 = v21;
  *(_QWORD *)(v4 + 48) = v22;
  v12 = (char *)sub_2081F6204((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  *(_QWORD *)&v21 = 0;
  sub_20809778C(v12, &v21);
  if (DWORD1(v21))
  {
LABEL_17:
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24C08F078;
    __cxa_throw(exception, (struct type_info *)&unk_24C08F090, (void (*)(void *))std::exception::~exception);
  }
  *(_DWORD *)(v4 + 56) = v21;
  v13 = (void **)sub_2081F6204((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v22 = 0;
  v21 = 0uLL;
  sub_208097C8C(v13, (uint64_t)&v21);
  v14 = (void **)(v4 + 64);
  if (*(char *)(v4 + 87) < 0)
    operator delete(*v14);
  *(_OWORD *)v14 = v21;
  *(_QWORD *)(v4 + 80) = v22;
  v15 = (void **)sub_2081F6204((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v22 = 0;
  v21 = 0uLL;
  sub_208097C8C(v15, (uint64_t)&v21);
  v16 = (void **)(v4 + 88);
  if (*(char *)(v4 + 111) < 0)
    operator delete(*v16);
  result = *(double *)&v21;
  *(_OWORD *)v16 = v21;
  *(_QWORD *)(v4 + 104) = v22;
  v18 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v18 - 8);
  v19 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(a1 + 48) = v18 - 8;
  *(_QWORD *)(a1 + 72) = v19 - 8;
  return result;
}

void sub_207EF02FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

void sub_207EF0328(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v27);
    sub_207E0AB10((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v27);
  sub_207E0AB10((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_207D49CF4((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E17BB8((uint64_t)v27, a2, v4);
  LODWORD(v27[0]) = 1;
  v25 = a2[6];
  v24 = a2 + 6;
  sub_20820BA20(v25, v27);
  sub_20820C000(*v24, (void **)(v3 + 200));
  sub_20820B6F8(*v24, (_BYTE *)(v3 + 224));
  sub_20820C000(*v24, (void **)(v3 + 232));
  sub_20820BA20(*v24, (_DWORD *)(v3 + 256));
  sub_20820C000(*v24, (void **)(v3 + 264));
  sub_20820C000(*v24, (void **)(v3 + 288));
}

void sub_207EF07A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_207EF07E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  char v26;
  uint64_t v27[27];
  _BYTE v28[8];
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  char v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  char v40;
  __int128 v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;

  v44 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v27);
    sub_207E0AB10((uint64_t)v28, v27);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v28);
        if (!v43)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v26, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v8 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v8;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v34;
    v10 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v11 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v11;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v12 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v12;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v15 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v41;
LABEL_45:
    *((_QWORD *)&v41 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v27);
  sub_207E0AB10((uint64_t)v28, v27);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v26, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v29;
    *(_BYTE *)(v3 + 64) = 0;
    if (v32)
    {
      v17 = v31;
      *(_OWORD *)(v3 + 40) = v30;
      *(_QWORD *)(v3 + 56) = v17;
      v30 = 0uLL;
      v31 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v34;
    v19 = v33;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v37)
    {
      v20 = v36;
      *(_OWORD *)(v3 + 96) = v35;
      *(_QWORD *)(v3 + 112) = v20;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v40)
    {
      v21 = v39;
      *(_OWORD *)(v3 + 128) = v38;
      *(_QWORD *)(v3 + 144) = v21;
      v38 = 0uLL;
      v39 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v43;
    if (v43)
    {
      *(_OWORD *)(v3 + 160) = v41;
      *(_QWORD *)(v3 + 176) = v42;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v28);
  if (v43)
  {
LABEL_38:
    v14 = v41;
    if (!(_QWORD)v41)
      goto LABEL_46;
    v23 = *((_QWORD *)&v41 + 1);
    v16 = (void *)v41;
    if (*((_QWORD *)&v41 + 1) == (_QWORD)v41)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v40 && SHIBYTE(v39) < 0)
    operator delete((void *)v38);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  if (v32 && SHIBYTE(v31) < 0)
    operator delete((void *)v30);
  sub_207D49CF4((uint64_t)v27);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E19198(a2, v4);
  v27[0] = (uint64_t)"value";
  v27[1] = 5;
  v27[2] = v3 + 200;
  return sub_207EF0C8C(a2, (uint64_t)v27);
}

void sub_207EF0C44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_207EF0C8C(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  int v5;
  char *v6;
  void **v7;
  __int128 v8;
  char *v9;
  void **v10;
  void **v11;
  char *v12;
  void **v13;
  void **v14;
  void **v15;
  void **v16;
  double result;
  uint64_t v18;
  uint64_t v19;
  _QWORD *exception;
  __int128 v21;
  uint64_t v22;

  v3 = *(unsigned __int8 *)(a1 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)a2;
  if (!v3)
    *(_BYTE *)(a1 + 104) = 1;
  v4 = *(_QWORD *)(a2 + 16);
  sub_2081F5AC0(a1);
  v5 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "version";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v5)
    *(_BYTE *)(a1 + 104) = 1;
  v6 = (char *)sub_2081F5D78((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  *(_QWORD *)&v21 = 0;
  sub_208097288(v6, &v21);
  if (DWORD1(v21))
    goto LABEL_17;
  v7 = (void **)sub_2081F5D78((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v22 = 0;
  v21 = 0uLL;
  sub_207D21A34(v7, (uint64_t)&v21);
  if (*(char *)(v4 + 23) < 0)
    operator delete(*(void **)v4);
  v8 = v21;
  *(_QWORD *)(v4 + 16) = v22;
  *(_OWORD *)v4 = v8;
  v9 = (char *)sub_2081F5D78((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  *(_QWORD *)&v21 = 0;
  sub_208097288(v9, &v21);
  if ((unint64_t)v21 >= 0x100)
    goto LABEL_17;
  *(_BYTE *)(v4 + 24) = v21;
  v10 = (void **)sub_2081F5D78((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v22 = 0;
  v21 = 0uLL;
  sub_207D21A34(v10, (uint64_t)&v21);
  v11 = (void **)(v4 + 32);
  if (*(char *)(v4 + 55) < 0)
    operator delete(*v11);
  *(_OWORD *)v11 = v21;
  *(_QWORD *)(v4 + 48) = v22;
  v12 = (char *)sub_2081F5D78((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  *(_QWORD *)&v21 = 0;
  sub_208097288(v12, &v21);
  if (DWORD1(v21))
  {
LABEL_17:
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24C08F078;
    __cxa_throw(exception, (struct type_info *)&unk_24C08F090, (void (*)(void *))std::exception::~exception);
  }
  *(_DWORD *)(v4 + 56) = v21;
  v13 = (void **)sub_2081F5D78((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v22 = 0;
  v21 = 0uLL;
  sub_207D21A34(v13, (uint64_t)&v21);
  v14 = (void **)(v4 + 64);
  if (*(char *)(v4 + 87) < 0)
    operator delete(*v14);
  *(_OWORD *)v14 = v21;
  *(_QWORD *)(v4 + 80) = v22;
  v15 = (void **)sub_2081F5D78((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v22 = 0;
  v21 = 0uLL;
  sub_207D21A34(v15, (uint64_t)&v21);
  v16 = (void **)(v4 + 88);
  if (*(char *)(v4 + 111) < 0)
    operator delete(*v16);
  result = *(double *)&v21;
  *(_OWORD *)v16 = v21;
  *(_QWORD *)(v4 + 104) = v22;
  v18 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v18 - 8);
  v19 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v19 - 8);
  *(_QWORD *)(a1 + 48) = v18 - 8;
  *(_QWORD *)(a1 + 72) = v19 - 8;
  return result;
}

void sub_207EF0EE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(a10);
  _Unwind_Resume(exception_object);
}

double sub_207EF0F14(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  char v26;
  char v27;
  void **v28;
  void **v29;
  double result;
  uint64_t v31;
  void **v32;
  int v33;
  int v34;
  void **v35;
  char v36;
  void *__p[2];
  uint64_t v38;
  _BYTE v39[8];
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  char v48;
  __int128 v49;
  uint64_t v50;
  char v51;
  __int128 v52;
  uint64_t v53;
  unsigned __int8 v54;
  uint64_t v55;

  v55 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)__p);
    sub_207E0AB10((uint64_t)v39, (uint64_t *)__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v39);
        if (!v54)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v36, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v40;
    *(_BYTE *)(v3 + 64) = 0;
    if (v43)
    {
      v8 = v42;
      *(_OWORD *)(v3 + 40) = v41;
      *(_QWORD *)(v3 + 56) = v8;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v45;
    v10 = v44;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v48)
    {
      v11 = v47;
      *(_OWORD *)(v3 + 96) = v46;
      *(_QWORD *)(v3 + 112) = v11;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v51)
    {
      v12 = v50;
      *(_OWORD *)(v3 + 128) = v49;
      *(_QWORD *)(v3 + 144) = v12;
      v49 = 0uLL;
      v50 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v54;
    if (v54)
    {
      *(_OWORD *)(v3 + 160) = v52;
      *(_QWORD *)(v3 + 176) = v53;
      v52 = 0uLL;
      v53 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v52;
    if (!(_QWORD)v52)
      goto LABEL_46;
    v15 = *((_QWORD *)&v52 + 1);
    v16 = (void *)v52;
    if (*((_QWORD *)&v52 + 1) == (_QWORD)v52)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v52;
LABEL_45:
    *((_QWORD *)&v52 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)__p);
  sub_207E0AB10((uint64_t)v39, (uint64_t *)__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v36, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v40;
    *(_BYTE *)(v3 + 64) = 0;
    if (v43)
    {
      v17 = v42;
      *(_OWORD *)(v3 + 40) = v41;
      *(_QWORD *)(v3 + 56) = v17;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v45;
    v19 = v44;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v48)
    {
      v20 = v47;
      *(_OWORD *)(v3 + 96) = v46;
      *(_QWORD *)(v3 + 112) = v20;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v51)
    {
      v21 = v50;
      *(_OWORD *)(v3 + 128) = v49;
      *(_QWORD *)(v3 + 144) = v21;
      v49 = 0uLL;
      v50 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v54;
    if (v54)
    {
      *(_OWORD *)(v3 + 160) = v52;
      *(_QWORD *)(v3 + 176) = v53;
      v52 = 0uLL;
      v53 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v39);
  if (v54)
  {
LABEL_38:
    v14 = v52;
    if (!(_QWORD)v52)
      goto LABEL_46;
    v23 = *((_QWORD *)&v52 + 1);
    v16 = (void *)v52;
    if (*((_QWORD *)&v52 + 1) == (_QWORD)v52)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v51 && SHIBYTE(v50) < 0)
    operator delete((void *)v49);
  if (v48 && SHIBYTE(v47) < 0)
    operator delete((void *)v46);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  sub_207D49CF4((uint64_t)__p);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  LODWORD(__p[0]) = 6;
  sub_208209DC8(a2, __p);
  v24 = __p[0];
  if (LODWORD(__p[0]) >= 6)
    v25 = 6;
  else
    v25 = __p[0];
  if (v25 < 3)
    sub_207E1B3DC((uint64_t)__p, a2, v4, v25);
  else
    sub_207E1B5CC(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_20820B068(a2, (uint64_t)__p);
      if (SHIBYTE(v38) < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_78:
          v27 = 0;
          if (SHIBYTE(v38) < 0)
            goto LABEL_81;
          goto LABEL_67;
        }
      }
      else if (SHIBYTE(v38) == 1 && *(unsigned __int8 *)(a2 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_78;
      }
      v27 = 1;
      if (SHIBYTE(v38) < 0)
LABEL_81:
        operator delete(__p[0]);
LABEL_67:
      if (*(_BYTE *)(a2 + 131))
        v26 = 0;
      else
        v26 = v27;
    }
    while ((v26 & 1) != 0);
  }
  LODWORD(__p[0]) = 1;
  sub_208209DC8(a2, __p);
  ++*(_QWORD *)(a2 + 80);
  if (*(_BYTE *)(a2 + 128) && *(_BYTE *)(a2 + 131))
  {
    *(_BYTE *)(a2 + 132) = 1;
  }
  else
  {
    sub_20820B068(a2, (uint64_t)__p);
    v28 = (void **)(v3 + 200);
    if (*(char *)(v3 + 223) < 0)
      operator delete(*v28);
    *(_OWORD *)v28 = *(_OWORD *)__p;
    *(_QWORD *)(v3 + 216) = v38;
    ++*(_QWORD *)(a2 + 104);
  }
  sub_208209484(a2, (_BYTE *)(v3 + 224));
  ++*(_QWORD *)(a2 + 80);
  if (*(_BYTE *)(a2 + 128) && *(_BYTE *)(a2 + 131))
  {
    *(_BYTE *)(a2 + 132) = 1;
  }
  else
  {
    sub_20820B068(a2, (uint64_t)__p);
    v29 = (void **)(v3 + 232);
    if (*(char *)(v3 + 255) < 0)
      operator delete(*v29);
    *(_OWORD *)v29 = *(_OWORD *)__p;
    *(_QWORD *)(v3 + 248) = v38;
    ++*(_QWORD *)(a2 + 104);
  }
  sub_208209DC8(a2, (_DWORD *)(v3 + 256));
  v31 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a2 + 80) = v31 + 1;
  if (*(_BYTE *)(a2 + 128) && *(_BYTE *)(a2 + 131))
  {
    *(_BYTE *)(a2 + 132) = 1;
    *(_QWORD *)(a2 + 80) = v31 + 2;
LABEL_98:
    *(_BYTE *)(a2 + 132) = 1;
    return result;
  }
  sub_20820B068(a2, (uint64_t)__p);
  v32 = (void **)(v3 + 264);
  if (*(char *)(v3 + 287) < 0)
    operator delete(*v32);
  result = *(double *)__p;
  *(_OWORD *)v32 = *(_OWORD *)__p;
  *(_QWORD *)(v3 + 280) = v38;
  ++*(_QWORD *)(a2 + 104);
  v33 = *(unsigned __int8 *)(a2 + 128);
  v34 = *(unsigned __int8 *)(a2 + 131);
  ++*(_QWORD *)(a2 + 80);
  if (v33 && v34)
    goto LABEL_98;
  sub_20820B068(a2, (uint64_t)__p);
  v35 = (void **)(v3 + 288);
  if (*(char *)(v3 + 311) < 0)
    operator delete(*v35);
  result = *(double *)__p;
  *(_OWORD *)v35 = *(_OWORD *)__p;
  *(_QWORD *)(v3 + 304) = v38;
  ++*(_QWORD *)(a2 + 104);
  return result;
}

void sub_207EF15F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_207EF1638(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  BOOL v26;
  unint64_t v27;
  std::logic_error *exception;
  char v30;
  uint64_t v31[27];
  _BYTE v32[8];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  char v44;
  __int128 v45;
  uint64_t v46;
  unsigned __int8 v47;
  uint64_t v48;

  v48 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v31);
    sub_207E0AB10((uint64_t)v32, v31);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v32);
        if (!v47)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v30, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v33;
    *(_BYTE *)(v3 + 64) = 0;
    if (v36)
    {
      v8 = v35;
      *(_OWORD *)(v3 + 40) = v34;
      *(_QWORD *)(v3 + 56) = v8;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v38;
    v10 = v37;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v41)
    {
      v11 = v40;
      *(_OWORD *)(v3 + 96) = v39;
      *(_QWORD *)(v3 + 112) = v11;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v44)
    {
      v12 = v43;
      *(_OWORD *)(v3 + 128) = v42;
      *(_QWORD *)(v3 + 144) = v12;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v47;
    if (v47)
    {
      *(_OWORD *)(v3 + 160) = v45;
      *(_QWORD *)(v3 + 176) = v46;
      v45 = 0uLL;
      v46 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v45;
    if (!(_QWORD)v45)
      goto LABEL_46;
    v15 = *((_QWORD *)&v45 + 1);
    v16 = (void *)v45;
    if (*((_QWORD *)&v45 + 1) == (_QWORD)v45)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v45;
LABEL_45:
    *((_QWORD *)&v45 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v31);
  sub_207E0AB10((uint64_t)v32, v31);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v30, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v33;
    *(_BYTE *)(v3 + 64) = 0;
    if (v36)
    {
      v17 = v35;
      *(_OWORD *)(v3 + 40) = v34;
      *(_QWORD *)(v3 + 56) = v17;
      v34 = 0uLL;
      v35 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v38;
    v19 = v37;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v41)
    {
      v20 = v40;
      *(_OWORD *)(v3 + 96) = v39;
      *(_QWORD *)(v3 + 112) = v20;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v44)
    {
      v21 = v43;
      *(_OWORD *)(v3 + 128) = v42;
      *(_QWORD *)(v3 + 144) = v21;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v47;
    if (v47)
    {
      *(_OWORD *)(v3 + 160) = v45;
      *(_QWORD *)(v3 + 176) = v46;
      v45 = 0uLL;
      v46 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v32);
  if (v47)
  {
LABEL_38:
    v14 = v45;
    if (!(_QWORD)v45)
      goto LABEL_46;
    v23 = *((_QWORD *)&v45 + 1);
    v16 = (void *)v45;
    if (*((_QWORD *)&v45 + 1) == (_QWORD)v45)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v44 && SHIBYTE(v43) < 0)
    operator delete((void *)v42);
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v36 && SHIBYTE(v35) < 0)
    operator delete((void *)v34);
  sub_207D49CF4((uint64_t)v31);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E1CD58((uint64_t)v31, a2, v4);
  v24 = a2[6];
  v25 = a2[7];
  v26 = v25 >= v24;
  v27 = v25 - v24;
  if (!v26)
    v27 = 0;
  if (v27 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_207CA4068(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  a2[6] = v24 + 4;
  return sub_207EF1B14(a2, v3 + 200);
}

void sub_207EF1AB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_207EF1B14(_QWORD *a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  BOOL v7;
  unint64_t v8;
  std::logic_error *exception;

  sub_20807321C(a1, a2);
  v4 = a1[6];
  if (a1[7] <= v4)
    goto LABEL_6;
  *(_BYTE *)(a2 + 24) = *(_BYTE *)(a1[3] + v4);
  ++a1[6];
  sub_20807321C(a1, a2 + 32);
  v5 = a1[6];
  v6 = a1[7];
  v7 = v6 >= v5;
  v8 = v6 - v5;
  if (!v7)
    v8 = 0;
  if (v8 <= 3)
  {
LABEL_6:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_207CA4068(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  *(_DWORD *)(a2 + 56) = *(_DWORD *)(a1[3] + v5);
  a1[6] += 4;
  sub_20807321C(a1, a2 + 64);
  return sub_20807321C(a1, a2 + 88);
}

void sub_207EF1BF4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_207EF1C08(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_207EF1C1C(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C0785A0;
  sub_207D49CF4(a1 + 80);
  if (*(_BYTE *)(a1 + 72) && *(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    if (!*(_BYTE *)(a1 + 40))
      goto LABEL_7;
  }
  else if (!*(_BYTE *)(a1 + 40))
  {
    goto LABEL_7;
  }
  if (*(char *)(a1 + 39) < 0)
    operator delete(*(void **)(a1 + 16));
LABEL_7:
  v2 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

uint64_t sub_207EF1C98(uint64_t a1)
{
  void *v2;

  if (*(_BYTE *)(a1 + 64) && *(char *)(a1 + 63) < 0)
  {
    operator delete(*(void **)(a1 + 40));
    if (!*(_BYTE *)(a1 + 32))
      goto LABEL_7;
  }
  else if (!*(_BYTE *)(a1 + 32))
  {
    goto LABEL_7;
  }
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
LABEL_7:
  v2 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

__n128 sub_207EF1D04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  uint64_t v9;
  unsigned __int128 *v10;
  unsigned __int128 v11;

  v2 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)a1 = off_24C0785A0;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  if (*(_BYTE *)(a2 + 40))
  {
    v3 = *(_OWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = v3;
    *(_QWORD *)(a2 + 24) = 0;
    *(_QWORD *)(a2 + 32) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_BYTE *)(a1 + 40) = 1;
  }
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 72) = 0;
  if (*(_BYTE *)(a2 + 72))
  {
    v4 = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = v4;
    *(_QWORD *)(a2 + 56) = 0;
    *(_QWORD *)(a2 + 64) = 0;
    *(_QWORD *)(a2 + 48) = 0;
    *(_BYTE *)(a1 + 72) = 1;
  }
  v5 = *(_OWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 96) = 0;
  *(_OWORD *)(a1 + 80) = v5;
  *(_BYTE *)(a1 + 120) = 0;
  if (*(_BYTE *)(a2 + 120))
  {
    v6 = *(_OWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = v6;
    *(_QWORD *)(a2 + 104) = 0;
    *(_QWORD *)(a2 + 112) = 0;
    *(_QWORD *)(a2 + 96) = 0;
    *(_BYTE *)(a1 + 120) = 1;
  }
  *(_BYTE *)(a1 + 128) = 0;
  *(_BYTE *)(a1 + 152) = 0;
  if (*(_BYTE *)(a2 + 152))
  {
    v7 = *(_OWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = v7;
    *(_QWORD *)(a2 + 136) = 0;
    *(_QWORD *)(a2 + 144) = 0;
    *(_QWORD *)(a2 + 128) = 0;
    *(_BYTE *)(a1 + 152) = 1;
  }
  result = *(__n128 *)(a2 + 160);
  v9 = *(_QWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 192) = 0;
  *(_QWORD *)(a1 + 176) = v9;
  *(__n128 *)(a1 + 160) = result;
  *(_BYTE *)(a1 + 240) = 0;
  if (*(_BYTE *)(a2 + 240))
  {
    result = *(__n128 *)(a2 + 192);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(__n128 *)(a1 + 192) = result;
    *(_QWORD *)(a2 + 200) = 0;
    *(_QWORD *)(a2 + 208) = 0;
    *(_QWORD *)(a2 + 192) = 0;
    v10 = (unsigned __int128 *)(a2 + 224);
    do
      v11 = __ldaxp(v10);
    while (__stlxp(v11, v10));
    *(_OWORD *)(a1 + 224) = v11;
    *(_BYTE *)(a1 + 240) = 1;
  }
  *(_BYTE *)(a1 + 256) = 0;
  *(_BYTE *)(a1 + 280) = 0;
  if (*(_BYTE *)(a2 + 280))
  {
    *(_QWORD *)(a1 + 256) = 0;
    *(_QWORD *)(a1 + 264) = 0;
    *(_QWORD *)(a1 + 272) = 0;
    result = *(__n128 *)(a2 + 256);
    *(__n128 *)(a1 + 256) = result;
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a2 + 256) = 0;
    *(_QWORD *)(a2 + 264) = 0;
    *(_QWORD *)(a2 + 272) = 0;
    *(_BYTE *)(a1 + 280) = 1;
  }
  return result;
}

void sub_207EF1E88(void **a1)
{
  void *v2;

  *a1 = off_24C0785A0;
  sub_207D49CF4((uint64_t)(a1 + 10));
  if (*((_BYTE *)a1 + 72) && *((char *)a1 + 71) < 0)
  {
    operator delete(a1[6]);
    if (!*((_BYTE *)a1 + 40))
      goto LABEL_7;
  }
  else if (!*((_BYTE *)a1 + 40))
  {
    goto LABEL_7;
  }
  if (*((char *)a1 + 39) < 0)
    operator delete(a1[2]);
LABEL_7:
  v2 = a1[1];
  a1[1] = 0;
  if (v2)
    operator delete(v2);
  operator delete(a1);
}

uint64_t sub_207EF1F04(uint64_t a1)
{
  return a1 + 80;
}

uint64_t sub_207EF1F0C(const void **a1, const void **lpsrc)
{
  uint64_t result;

  result = (uint64_t)__dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C078D58, (const struct __class_type_info *)&unk_24C078560, 0);
  if (result)
  {
    if (a1 == lpsrc)
      return 1;
    else
      return sub_207F098AC(a1 + 1, (uint64_t *)(result + 8));
  }
  return result;
}

void sub_207EF1F70(uint64_t a1)
{
  __int128 *v2;
  void *__p;
  char v4;

  v2 = (__int128 *)sub_207EF3014();
  sub_207EF2024(a1);
  sub_207D49528(v2, (uint64_t)"{", (uint64_t)&__p, (uint64_t)",", a1 + 80, (uint64_t)"}");
  if (v4 < 0)
    operator delete(__p);
}

void sub_207EF2008(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t sub_207EF2024(uint64_t a1)
{
  unsigned __int8 v2;
  __int128 *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  void *v8;
  uint64_t v9;

  v2 = atomic_load((unsigned __int8 *)&qword_25452D430);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25452D430))
  {
    v4 = sub_207EF2E18();
    v5 = *((_QWORD *)v4 + 1);
    if (*((char *)v4 + 23) >= 0)
    {
      v6 = *((unsigned __int8 *)v4 + 23);
    }
    else
    {
      v4 = *(__int128 **)v4;
      v6 = v5;
    }
    sub_207CF75E4((char *)v4, v6, "::", 2, 0, (uint64_t)&v8);
    if (*(char *)(v9 - 1) < 0)
    {
      sub_207CA40D8(&xmmword_25452D418, *(void **)(v9 - 24), *(_QWORD *)(v9 - 16));
    }
    else
    {
      v7 = *(_OWORD *)(v9 - 24);
      qword_25452D428 = *(_QWORD *)(v9 - 8);
      xmmword_25452D418 = v7;
    }
    sub_207C99DE0(&v8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D418, &dword_207C77000);
    __cxa_guard_release(&qword_25452D430);
  }
  return sub_207EF33D4(&xmmword_25452D418, (uint64_t)"{", (uint64_t *)(a1 + 8), (uint64_t)"}");
}

void sub_207EF2134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  sub_207C99DE0(&a9);
  __cxa_guard_abort(&qword_25452D430);
  _Unwind_Resume(a1);
}

void sub_207EF2154(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D430);
  _Unwind_Resume(a1);
}

void sub_207EF216C(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 8;
  strcpy((char *)a1, "cv3d.viz");
  *(_DWORD *)(a1 + 24) = 11;
}

void sub_207EF2198(uint64_t (***lpsrc)()@<X0>, _QWORD *a2@<X8>)
{
  sub_207F0677C(lpsrc, 11, a2);
}

uint64_t sub_207EF21D0(uint64_t a1)
{
  void *v2;

  *(_QWORD *)a1 = off_24C0785A0;
  sub_207D49CF4(a1 + 80);
  if (*(_BYTE *)(a1 + 72) && *(char *)(a1 + 71) < 0)
  {
    operator delete(*(void **)(a1 + 48));
    if (!*(_BYTE *)(a1 + 40))
      goto LABEL_7;
  }
  else if (!*(_BYTE *)(a1 + 40))
  {
    goto LABEL_7;
  }
  if (*(char *)(a1 + 39) < 0)
    operator delete(*(void **)(a1 + 16));
LABEL_7:
  v2 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

void sub_207EF224C(void **a1)
{
  void *v2;

  *a1 = off_24C0785A0;
  sub_207D49CF4((uint64_t)(a1 + 10));
  if (*((_BYTE *)a1 + 72) && *((char *)a1 + 71) < 0)
  {
    operator delete(a1[6]);
    if (!*((_BYTE *)a1 + 40))
      goto LABEL_7;
  }
  else if (!*((_BYTE *)a1 + 40))
  {
    goto LABEL_7;
  }
  if (*((char *)a1 + 39) < 0)
    operator delete(a1[2]);
LABEL_7:
  v2 = a1[1];
  a1[1] = 0;
  if (v2)
    operator delete(v2);
  operator delete(a1);
}

uint64_t sub_207EF22C8(uint64_t a1)
{
  __int128 *v2;

  v2 = sub_207EF28B4();
  return sub_207EF241C(v2, (uint64_t)"{", (uint64_t *)(a1 + 8), (uint64_t)",", a1 + 80, (uint64_t)"}");
}

uint64_t sub_207EF2320(uint64_t a1)
{
  uint64_t result;
  _BYTE v2[24];
  int v3;
  char v4;
  _QWORD v5[2];

  v3 = 0;
  sub_207EF2648((uint64_t)v5, (uint64_t)v2, (uint64_t *)(a1 + 8));
  if (v3 == -1)
    sub_207CA9F48();
  v5[0] = &v4;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24C0765F8[v3])(v5, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24C0765E0[v3])(v5, v2);
  return result;
}

void sub_207EF23B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, int a13)
{
  uint64_t v13;

  if (a13 != -1)
    ((void (*)(uint64_t, char *))off_24C0765E0[a13])(v13 - 17, &a10);
  _Unwind_Resume(exception_object);
}

void sub_207EF23F0(uint64_t a1@<X8>)
{
  *(_BYTE *)(a1 + 23) = 15;
  strcpy((char *)a1, "unknown_package");
  *(_DWORD *)(a1 + 24) = 0;
}

uint64_t sub_207EF241C(__int128 *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  char v12;
  char v13;
  __int128 __dst;
  uint64_t v15;
  int v16;
  __int128 *p_dst;
  uint64_t v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 **p_p_dst;

  v16 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_207CA40D8(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v15 = *((_QWORD *)a1 + 2);
  }
  v16 = 1;
  p_dst = &__dst;
  v18 = a2;
  v19 = &__dst;
  v20 = a2;
  v21 = a2;
  sub_207CD45F4((uint64_t *)&v19, (uint64_t)&__dst);
  sub_207EF2648((uint64_t)&v13, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v18 = a4;
  v19 = &__dst;
  v20 = a4;
  v21 = a4;
  if (v16 == -1)
    sub_207CA9F48();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C0766E8[v16])(&p_p_dst, &__dst);
  sub_207D48768((uint64_t)&v12, (uint64_t)&__dst, a5);
  p_dst = &__dst;
  v18 = a6;
  v19 = &__dst;
  v20 = a6;
  v21 = a6;
  if (v16 == -1)
    sub_207CA9F48();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C0766E8[v16])(&p_p_dst, &__dst);
  if (v16 == -1)
    sub_207CA9F48();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C0765F8[v16])(&p_dst, &__dst);
  if (v16 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C0765E0[v16])(&p_dst, &__dst);
  return result;
}

void sub_207EF25B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EF25D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EF25E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EF25F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EF260C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EF2620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EF2634(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EF2648(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  _OWORD *v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new(0x118uLL);
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  v5[4] = 0u;
  v5[5] = 0u;
  v5[6] = 0u;
  v5[7] = 0u;
  v5[8] = 0u;
  v5[9] = 0u;
  v5[10] = 0u;
  v5[11] = 0u;
  v5[12] = 0u;
  v5[13] = 0u;
  v5[14] = 0u;
  v5[15] = 0u;
  v5[16] = 0u;
  *((_QWORD *)v5 + 34) = 0;
  sub_207CA2878((uint64_t)v5);
  v21[0] = v5;
  sub_207F09D10((_QWORD *)v5 + 2, a3);
  v6 = *((_DWORD *)v5 + 30);
  if ((v6 & 0x10) != 0)
  {
    v9 = *((_QWORD *)v5 + 14);
    v10 = *((_QWORD *)v5 + 9);
    if (v9 < v10)
    {
      *((_QWORD *)v5 + 14) = v10;
      v9 = v10;
    }
    v11 = (const void *)*((_QWORD *)v5 + 8);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = (const void *)*((_QWORD *)v5 + 5);
    v7 = *((_QWORD *)v5 + 7) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_207C95C50();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD027B8](v14 + 128);
    operator delete((void *)v14);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_207CA9F48();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24C0765C8[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_207EF2878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;

  operator delete(v15);
  _Unwind_Resume(a1);
}

void sub_207EF28A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2082155DC((void **)va);
  _Unwind_Resume(a1);
}

__int128 *sub_207EF28B4()
{
  unsigned __int8 v0;
  std::string *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D2F0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D2F0))
    return &xmmword_25452D2D8;
  v2 = sub_207EF2990();
  if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_207CA40D8(&xmmword_25452D2D8, v2->__r_.__value_.__l.__data_, v2->__r_.__value_.__l.__size_);
  }
  else
  {
    v3 = *(_OWORD *)&v2->__r_.__value_.__l.__data_;
    qword_25452D2E8 = v2->__r_.__value_.__r.__words[2];
    xmmword_25452D2D8 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D2D8, &dword_207C77000);
  __cxa_guard_release(&qword_25452D2F0);
  return &xmmword_25452D2D8;
}

void sub_207EF2978(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D2F0);
  _Unwind_Resume(a1);
}

std::string *sub_207EF2990()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D310);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D310))
    return &stru_25452D2F8;
  sub_207EF2C34((uint64_t)__p);
  sub_207EF2A80((char *)__p, &stru_25452D2F8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25452D2F8, &dword_207C77000);
  __cxa_guard_release(&qword_25452D310);
  return &stru_25452D2F8;
}

void sub_207EF2A40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25452D310);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25452D310);
  _Unwind_Resume(a1);
}

void sub_207EF2A80(char *a1@<X0>, std::string *a2@<X8>)
{
  __int128 *v4;
  __int128 v5;
  __int128 *v6;
  __int128 v7;
  int64x2_t v8;
  int8x16_t v9;
  void **v10;
  void **v11;
  void *v12;
  void *__p;
  void **v14;
  void *__dst[2];
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v4 = sub_207EF2E18();
  if (*((char *)v4 + 23) < 0)
  {
    sub_207CA40D8(__dst, *(void **)v4, *((_QWORD *)v4 + 1));
  }
  else
  {
    v5 = *v4;
    v16 = *((_QWORD *)v4 + 2);
    *(_OWORD *)__dst = v5;
  }
  v6 = sub_207D49134();
  if (*((char *)v6 + 23) < 0)
  {
    sub_207CA40D8(&v17, *(void **)v6, *((_QWORD *)v6 + 1));
  }
  else
  {
    v7 = *v6;
    v18 = *((_QWORD *)v6 + 2);
    v17 = v7;
  }
  sub_207CAA110(&__p, (uint64_t)__dst, 2uLL);
  sub_208215D20(a1, (uint64_t *)&__p, a2, v8, v9);
  v10 = (void **)__p;
  if (__p)
  {
    v11 = v14;
    v12 = __p;
    if (v14 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != v10);
      v12 = __p;
    }
    v14 = v10;
    operator delete(v12);
  }
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v16) & 0x80000000) == 0)
      return;
LABEL_19:
    operator delete(__dst[0]);
    return;
  }
  operator delete((void *)v17);
  if (SHIBYTE(v16) < 0)
    goto LABEL_19;
}

void sub_207EF2BE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  sub_207C99DE0((void **)&a9);
  if (a24 < 0)
    operator delete(__p);
  if (a18 < 0)
  {
    operator delete(a13);
    _Unwind_Resume(a1);
  }
  _Unwind_Resume(a1);
}

void sub_207EF2C34(uint64_t a1@<X8>)
{
  unsigned __int8 v2;
  unsigned __int8 v3;
  unsigned __int8 v4;
  size_t v5;

  v2 = atomic_load((unsigned __int8 *)&qword_25452D390);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_25452D390))
  {
    sub_2082159F8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::ValueData<cv3d::kit::viz::Transform3>]", qword_25452D378);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452D378, &dword_207C77000);
    __cxa_guard_release(&qword_25452D390);
  }
  v3 = atomic_load((unsigned __int8 *)&qword_25452D3B0);
  if ((v3 & 1) == 0 && __cxa_guard_acquire(&qword_25452D3B0))
  {
    v5 = sub_207D49434(qword_25452D378, "<", 0);
    sub_207D49330(qword_25452D378, 0, v5, qword_25452D398);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452D398, &dword_207C77000);
    __cxa_guard_release(&qword_25452D3B0);
  }
  v4 = atomic_load((unsigned __int8 *)&qword_25452D3D0);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_25452D3D0))
  {
    sub_208215C6C((uint64_t)qword_25452D398, (uint64_t)&xmmword_25452D3B8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D3B8, &dword_207C77000);
    __cxa_guard_release(&qword_25452D3D0);
  }
  if (byte_25452D3CF < 0)
  {
    sub_207CA40D8((_BYTE *)a1, (void *)xmmword_25452D3B8, *((unint64_t *)&xmmword_25452D3B8 + 1));
  }
  else
  {
    *(_OWORD *)a1 = xmmword_25452D3B8;
    *(_QWORD *)(a1 + 16) = unk_25452D3C8;
  }
}

void sub_207EF2DD0(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D3D0);
  _Unwind_Resume(a1);
}

void sub_207EF2DE8(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D3B0);
  _Unwind_Resume(a1);
}

void sub_207EF2E00(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D390);
  _Unwind_Resume(a1);
}

__int128 *sub_207EF2E18()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D330);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D330))
    return &xmmword_25452D318;
  v2 = (char *)sub_207EF2EF4();
  if (v2[23] < 0)
  {
    sub_207CA40D8(&xmmword_25452D318, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_25452D328 = *((_QWORD *)v2 + 2);
    xmmword_25452D318 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D318, &dword_207C77000);
  __cxa_guard_release(&qword_25452D330);
  return &xmmword_25452D318;
}

void sub_207EF2EDC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D330);
  _Unwind_Resume(a1);
}

void *sub_207EF2EF4()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D350);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25452D350))
  {
    sub_2082159F8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::Transform3]", qword_25452D338);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452D338, &dword_207C77000);
    __cxa_guard_release(&qword_25452D350);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_25452D370);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D370))
    return &unk_25452D358;
  sub_208215C6C((uint64_t)qword_25452D338, (uint64_t)&unk_25452D358);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_25452D358, &dword_207C77000);
  __cxa_guard_release(&qword_25452D370);
  return &unk_25452D358;
}

void sub_207EF2FE4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D370);
  _Unwind_Resume(a1);
}

void sub_207EF2FFC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D350);
  _Unwind_Resume(a1);
}

std::string *sub_207EF3014()
{
  unsigned __int8 v0;
  __int128 *v2;
  __int128 v3;
  std::string *v4;
  __int128 v5;
  int64x2_t v6;
  int8x16_t v7;
  void *v8[3];
  void *v9[2];
  char v10;
  void *__dst[2];
  uint64_t v12;
  void *v13[2];
  uint64_t v14;
  __int128 v15;
  std::string::size_type v16;
  void *__p[2];
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x24BDAC8D0];
  v0 = atomic_load((unsigned __int8 *)&qword_25452D3F0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25452D3F0))
  {
    sub_207C96EE8(v9, "viz::PackageData");
    v2 = sub_207EF2E18();
    if (*((char *)v2 + 23) < 0)
    {
      sub_207CA40D8(__dst, *(void **)v2, *((_QWORD *)v2 + 1));
    }
    else
    {
      v3 = *v2;
      v12 = *((_QWORD *)v2 + 2);
      *(_OWORD *)__dst = v3;
    }
    *(_OWORD *)v13 = *(_OWORD *)"viz::Package";
    v14 = 0xC00000000000000;
    v4 = sub_207EF32DC();
    if (SHIBYTE(v4->__r_.__value_.__r.__words[2]) < 0)
    {
      sub_207CA40D8(&v15, v4->__r_.__value_.__l.__data_, v4->__r_.__value_.__l.__size_);
    }
    else
    {
      v5 = *(_OWORD *)&v4->__r_.__value_.__l.__data_;
      v16 = v4->__r_.__value_.__r.__words[2];
      v15 = v5;
    }
    *(_OWORD *)__p = *(_OWORD *)"void";
    v18 = 0x400000000000000;
    sub_207CAA110(v8, (uint64_t)__dst, 4uLL);
    sub_208215D20((char *)v9, (uint64_t *)v8, &stru_25452D3D8, v6, v7);
    sub_207C99DE0(v8);
    if (SHIBYTE(v18) < 0)
    {
      operator delete(__p[0]);
      if ((SHIBYTE(v16) & 0x80000000) == 0)
      {
LABEL_12:
        if ((SHIBYTE(v14) & 0x80000000) == 0)
          goto LABEL_13;
        goto LABEL_18;
      }
    }
    else if ((SHIBYTE(v16) & 0x80000000) == 0)
    {
      goto LABEL_12;
    }
    operator delete((void *)v15);
    if ((SHIBYTE(v14) & 0x80000000) == 0)
    {
LABEL_13:
      if ((SHIBYTE(v12) & 0x80000000) == 0)
        goto LABEL_14;
      goto LABEL_19;
    }
LABEL_18:
    operator delete(v13[0]);
    if ((SHIBYTE(v12) & 0x80000000) == 0)
    {
LABEL_14:
      if ((v10 & 0x80000000) == 0)
      {
LABEL_15:
        __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25452D3D8, &dword_207C77000);
        __cxa_guard_release(&qword_25452D3F0);
        return &stru_25452D3D8;
      }
LABEL_20:
      operator delete(v9[0]);
      goto LABEL_15;
    }
LABEL_19:
    operator delete(__dst[0]);
    if ((v10 & 0x80000000) == 0)
      goto LABEL_15;
    goto LABEL_20;
  }
  return &stru_25452D3D8;
}

void sub_207EF31F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  sub_207C99DE0(&a10);
  if (a43 < 0)
  {
    operator delete(__p);
    if ((a37 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a31 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_9;
    }
  }
  else if ((a37 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a32);
  if ((a31 & 0x80000000) == 0)
  {
LABEL_4:
    if ((a25 & 0x80000000) == 0)
      goto LABEL_5;
    goto LABEL_10;
  }
LABEL_9:
  operator delete(a26);
  if ((a25 & 0x80000000) == 0)
  {
LABEL_5:
    if ((a18 & 0x80000000) == 0)
      goto LABEL_6;
    goto LABEL_11;
  }
LABEL_10:
  operator delete(a20);
  if ((a18 & 0x80000000) == 0)
  {
LABEL_6:
    __cxa_guard_abort(&qword_25452D3F0);
    _Unwind_Resume(a1);
  }
LABEL_11:
  operator delete(a13);
  __cxa_guard_abort(&qword_25452D3F0);
  _Unwind_Resume(a1);
}

std::string *sub_207EF32DC()
{
  unsigned __int8 v0;
  void *__p[2];
  char v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D410);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D410))
    return &stru_25452D3F8;
  sub_2082159F8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = 11U]", __p);
  sub_208215E98((uint64_t)__p, &stru_25452D3F8);
  if (v3 < 0)
    operator delete(__p[0]);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &stru_25452D3F8, &dword_207C77000);
  __cxa_guard_release(&qword_25452D410);
  return &stru_25452D3F8;
}

void sub_207EF3394(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    __cxa_guard_abort(&qword_25452D410);
    _Unwind_Resume(a1);
  }
  __cxa_guard_abort(&qword_25452D410);
  _Unwind_Resume(a1);
}

uint64_t sub_207EF33D4(__int128 *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t result;
  char v8;
  __int128 __dst;
  uint64_t v10;
  int v11;
  __int128 *p_dst;
  uint64_t v13;
  __int128 *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 **p_p_dst;

  v11 = -1;
  if (*((char *)a1 + 23) < 0)
  {
    sub_207CA40D8(&__dst, *(void **)a1, *((_QWORD *)a1 + 1));
  }
  else
  {
    __dst = *a1;
    v10 = *((_QWORD *)a1 + 2);
  }
  v11 = 1;
  p_dst = &__dst;
  v13 = a2;
  v14 = &__dst;
  v15 = a2;
  v16 = a2;
  sub_207CD45F4((uint64_t *)&v14, (uint64_t)&__dst);
  sub_207EF2648((uint64_t)&v8, (uint64_t)&__dst, a3);
  p_dst = &__dst;
  v13 = a4;
  v14 = &__dst;
  v15 = a4;
  v16 = a4;
  if (v11 == -1)
    sub_207CA9F48();
  p_p_dst = &p_dst;
  ((void (*)(__int128 ***, __int128 *))off_24C0766E8[v11])(&p_p_dst, &__dst);
  if (v11 == -1)
    sub_207CA9F48();
  p_dst = (__int128 *)&p_p_dst;
  result = ((uint64_t (*)(__int128 **, __int128 *))off_24C0765F8[v11])(&p_dst, &__dst);
  if (v11 != -1)
    return ((uint64_t (*)(__int128 **, __int128 *))off_24C0765E0[v11])(&p_dst, &__dst);
  return result;
}

void sub_207EF3514(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EF352C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EF3540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EF3554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EF3568(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_207EF357C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  v4 = *a2;
  *a2 = 0;
  *(_QWORD *)a1 = off_24C0785A0;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  if (*((_BYTE *)a2 + 32))
  {
    v5 = *(_OWORD *)(a2 + 1);
    *(_QWORD *)(a1 + 32) = a2[3];
    *(_OWORD *)(a1 + 16) = v5;
    a2[2] = 0;
    a2[3] = 0;
    a2[1] = 0;
    *(_BYTE *)(a1 + 40) = 1;
  }
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 72) = 0;
  if (*((_BYTE *)a2 + 64))
  {
    v6 = *(_OWORD *)(a2 + 5);
    *(_QWORD *)(a1 + 64) = a2[7];
    *(_OWORD *)(a1 + 48) = v6;
    a2[6] = 0;
    a2[7] = 0;
    a2[5] = 0;
    *(_BYTE *)(a1 + 72) = 1;
  }
  sub_207D47D34(a1 + 80, a3);
  *(_QWORD *)a1 = off_24C078520;
  return a1;
}

void sub_207EF3638(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;
  void *v5;

  if (*(_BYTE *)(v1 + 72) && *(char *)(v1 + 71) < 0)
    operator delete(*v3);
  if (*(_BYTE *)(v1 + 40) && *(char *)(v1 + 39) < 0)
    operator delete(*v2);
  v5 = *(void **)(v1 + 8);
  *(_QWORD *)(v1 + 8) = 0;
  if (v5)
    operator delete(v5);
  _Unwind_Resume(exception_object);
}

uint64_t sub_207EF3684(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v11;
  _QWORD v13[5];
  unsigned __int8 **v14;
  _QWORD v15[5];
  unsigned __int8 **v16;
  char v17;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[6];

  v29[5] = *MEMORY[0x24BDAC8D0];
  v4 = a1 + 16;
  v5 = *(_DWORD *)(a1 + 192);
  if (v5 == 2)
  {
    sub_207E372B8(v4, (uint64_t)v24);
  }
  else if (v5 == 1)
  {
    sub_207E370A0(v4, (uint64_t)v24);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    sub_207E02E5C(v4, (uint64_t)v24);
  }
  v6 = a2 + 16;
  v7 = *(_DWORD *)(a2 + 192);
  if (v7 == 2)
  {
    sub_207E372B8(v6, (uint64_t)v18);
  }
  else if (v7 == 1)
  {
    sub_207E370A0(v6, (uint64_t)v18);
  }
  else
  {
    if (v7)
      sub_207CA9F48();
    sub_207E02E5C(v6, (uint64_t)v18);
  }
  v15[0] = v24;
  v15[1] = &v25;
  v15[2] = &v26;
  v15[3] = &v27;
  v15[4] = &v28;
  v16 = (unsigned __int8 **)v29;
  v13[0] = v18;
  v13[1] = &v19;
  v13[2] = &v20;
  v13[3] = &v21;
  v13[4] = &v22;
  v14 = (unsigned __int8 **)&v23;
  if (sub_207EFF314((uint64_t)&v17, v15, v13))
  {
    if (*((_BYTE *)v16 + 24) && *((_BYTE *)v14 + 24))
    {
      v8 = *v16;
      v9 = v16[1];
      v10 = *v14;
      if (v9 - *v16 == v14[1] - *v14)
      {
        if (v8 != v9)
        {
          while (sub_207EFE5C8(v8, v10))
          {
            v8 += 96;
            v10 += 96;
            if (v8 == v9)
              goto LABEL_23;
          }
          goto LABEL_22;
        }
LABEL_23:
        v11 = sub_207F0B62C((unsigned __int8 *)(a1 + 200), (unsigned __int8 *)(a2 + 200));
        goto LABEL_24;
      }
    }
    else if ((*((_BYTE *)v16 + 24) != 0) == (*((_BYTE *)v14 + 24) != 0))
    {
      goto LABEL_23;
    }
  }
LABEL_22:
  v11 = 0;
LABEL_24:
  sub_207D49CF4((uint64_t)v18);
  sub_207D49CF4((uint64_t)v24);
  return v11;
}

void sub_207EF386C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a23);
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_207EF3888(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  sub_207D49CF4((uint64_t)&a49);
  _Unwind_Resume(a1);
}

void sub_207EF389C(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076B88, 0);
  if (v4)
  {
    sub_207EF3CA8(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076BD0, 0);
    if (v5)
    {
      sub_207EF4B68(&v9, (uint64_t)v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076C58, 0);
      if (v6)
      {
        sub_207EF5AE0(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA50, (const struct __class_type_info *)&unk_24C076CA0, 0);
        if (v7)
        {
          sub_207EF65E8(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24C082C60)
            sub_207EF74F4(&v9, (uint64_t)a1);
          else
            sub_207EF3A00(&v8, a1);
        }
      }
    }
  }
}

void sub_207EF3A00(uint64_t *a1, _DWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v8 = a2[2];
    v14 = 4;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v9 = v14;
    if (v8 >= 1)
    {
      if (v8 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E3CE18((uint64_t)a2, v4, v9);
      goto LABEL_16;
    }
    sub_207E3CE18((uint64_t)a2, v4, v14);
  }
  else if (v5 == 1)
  {
    v10 = a2[2];
    v14 = 5;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v11 = v14;
    if (v10 >= 1)
    {
      if (v10 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E3C790((uint64_t)a2, v4, v11);
      goto LABEL_16;
    }
    sub_207E3C790((uint64_t)a2, v4, v14);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = a2[2];
    v14 = 6;
    (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    v7 = v14;
    if (v6 >= 1)
    {
      if (v6 == 2)
      {
        v14 = 3;
        (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
      }
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
      sub_207E12E90((uint64_t)a2, v4, v7);
LABEL_16:
      (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
      goto LABEL_17;
    }
    sub_207E12E90((uint64_t)a2, v4, v14);
  }
LABEL_17:
  v12 = v3 + 200;
  v13 = a2[2];
  v14 = 1;
  (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
  if (v13 < 1)
  {
    sub_207EF7B98(a2, v12);
  }
  else
  {
    if (v13 == 2)
    {
      v14 = 1;
      (*(void (**)(_DWORD *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v14);
    }
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 16))(a2);
    sub_207EF7B98(a2, v12);
    (*(void (**)(_DWORD *))(*(_QWORD *)a2 + 24))(a2);
  }
}

void sub_207EF3CA8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E383C8(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F1E44(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F3DDC(a2, &v18);
      sub_207E0BDBC(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F1E44(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F3DDC(a2, &v18);
    sub_207E37A58(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F1E44(a2);
  v18 = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F3DDC(a2, &v18);
  sub_207EF3FA8(a2, v3 + 200);
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_207EF3FA8(uint64_t a1, uint64_t a2)
{
  _BYTE v3[120];
  void *v4;
  char v5;
  char v6;
  void *__p;
  char v8;
  char v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  sub_207EF42D0((uint64_t)v3, a2);
  sub_207EF408C(a1, (uint64_t)v3);
  if (v9 && v8 < 0)
    operator delete(__p);
  if (v6)
  {
    if (v5 < 0)
      operator delete(v4);
  }
}

void sub_207EF4044(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36,char a37)
{
  if (a37 && a36 < 0)
    operator delete(__p);
  if (a30)
  {
    if (a29 < 0)
    {
      operator delete(a24);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_207EF408C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  int v10;
  void **v11;
  int v12;
  unsigned __int8 *v13;
  int v14;
  void **v15;
  uint64_t v16;
  int v17;

  v4 = a2 + 8;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "src_to_dst";
    *(_QWORD *)(a1 + 80) = 10;
    if (!v5)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_2081F1E44(a1);
  v16 = 7;
  v17 = 1;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "version";
    *(_QWORD *)(a1 + 80) = 7;
    if (!v6)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_2081F3DDC(a1, &v17);
  sub_207EF43FC(a1, v4);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(unsigned __int8 **)(v7 - 8);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 56) = v7 - 8;
  if (*(_BYTE *)(a1 + 88))
    *(_BYTE *)(a1 + 88) = 0;
  if (*v8 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "src";
    *(_QWORD *)(a1 + 80) = 3;
    *(_BYTE *)(a1 + 88) = 1;
  }
  if (*(_BYTE *)(a2 + 144))
  {
    sub_2081F42A4(a1, a2 + 120);
    if (**(unsigned __int8 **)(a1 + 40) > 1u)
      goto LABEL_16;
  }
  else
  {
    v16 = 0;
    v9 = (unsigned __int8 *)sub_2081F1A98(a1);
    v10 = *v9;
    *v9 = 0;
    v11 = (void **)*((_QWORD *)v9 + 1);
    *((_QWORD *)v9 + 1) = v16;
    v16 = (uint64_t)v11;
    sub_20806DC2C((void ***)&v16, v10);
    if (**(unsigned __int8 **)(a1 + 40) > 1u)
      goto LABEL_16;
  }
  v12 = *(unsigned __int8 *)(a1 + 88);
  *(_QWORD *)(a1 + 72) = "dst";
  *(_QWORD *)(a1 + 80) = 3;
  if (!v12)
  {
    *(_BYTE *)(a1 + 88) = 1;
    if (*(_BYTE *)(a2 + 176))
      goto LABEL_17;
    goto LABEL_19;
  }
LABEL_16:
  if (*(_BYTE *)(a2 + 176))
  {
LABEL_17:
    sub_2081F42A4(a1, a2 + 152);
    return;
  }
LABEL_19:
  v16 = 0;
  v13 = (unsigned __int8 *)sub_2081F1A98(a1);
  v14 = *v13;
  *v13 = 0;
  v15 = (void **)*((_QWORD *)v13 + 1);
  *((_QWORD *)v13 + 1) = v16;
  v16 = (uint64_t)v15;
  sub_20806DC2C((void ***)&v16, v14);
}

void sub_207EF42A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  void ***v10;

  sub_20806DC2C(v10, a10);
  _Unwind_Resume(a1);
}

void sub_207EF42B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  void ***v10;

  sub_20806DC2C(v10, a10);
  _Unwind_Resume(a1);
}

uint64_t sub_207EF42D0(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v4 = *(_OWORD *)(a2 + 56);
  v5 = *(_OWORD *)(a2 + 72);
  v6 = *(_OWORD *)(a2 + 88);
  v7 = *(_OWORD *)(a2 + 104);
  v8 = *(_OWORD *)(a2 + 8);
  v9 = *(_OWORD *)(a2 + 24);
  v10 = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 120) = 0;
  *(_OWORD *)(a1 + 8) = v8;
  *(_OWORD *)(a1 + 24) = v9;
  *(_OWORD *)(a1 + 88) = v6;
  *(_OWORD *)(a1 + 104) = v7;
  *(_OWORD *)(a1 + 56) = v4;
  *(_OWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 40) = v10;
  *(_BYTE *)(a1 + 144) = 0;
  if (*(_BYTE *)(a2 + 144))
  {
    if (*(char *)(a2 + 143) < 0)
    {
      sub_207CA40D8((_BYTE *)(a1 + 120), *(void **)(a2 + 120), *(_QWORD *)(a2 + 128));
    }
    else
    {
      v11 = *(_OWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 120) = v11;
    }
    *(_BYTE *)(a1 + 144) = 1;
  }
  *(_BYTE *)(a1 + 152) = 0;
  *(_BYTE *)(a1 + 176) = 0;
  if (*(_BYTE *)(a2 + 176))
  {
    if (*(char *)(a2 + 175) < 0)
    {
      sub_207CA40D8((_BYTE *)(a1 + 152), *(void **)(a2 + 152), *(_QWORD *)(a2 + 160));
    }
    else
    {
      v12 = *(_OWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 152) = v12;
    }
    *(_BYTE *)(a1 + 176) = 1;
  }
  return a1;
}

void sub_207EF43B8(_Unwind_Exception *exception_object)
{
  char *v1;
  void **v2;
  void **v3;

  if (v1[176] && v1[175] < 0)
    operator delete(*v3);
  if (v1[144])
  {
    if (v1[143] < 0)
      operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_207EF43FC(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v4 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "se3_type";
    *(_QWORD *)(a1 + 80) = 8;
    if (!v4)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v9 = a2;
  sub_207EF47D4(a1, (_BYTE **)&v9);
  switch(*(_BYTE *)a2)
  {
    case 1:
      if (*(_DWORD *)(a2 + 104) != 2)
        goto LABEL_23;
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v5 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "algebra_r";
        *(_QWORD *)(a1 + 80) = 9;
        if (!v5)
          *(_BYTE *)(a1 + 88) = 1;
      }
      v9 = 3;
      v10 = a2 + 8;
      sub_2081F50E4(a1, (float **)&v9);
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "algebra_t";
        *(_QWORD *)(a1 + 80) = 9;
        if (!v6)
          *(_BYTE *)(a1 + 88) = 1;
      }
      v9 = 3;
      v10 = a2 + 20;
      sub_2081F50E4(a1, (float **)&v9);
      break;
    case 2:
      if (*(_DWORD *)(a2 + 104) != 3)
LABEL_23:
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "algebra_r";
        *(_QWORD *)(a1 + 80) = 9;
        if (!v7)
          *(_BYTE *)(a1 + 88) = 1;
      }
      v9 = 3;
      v10 = a2 + 8;
      sub_2081F5504(a1, &v9);
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v8 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "algebra_t";
        *(_QWORD *)(a1 + 80) = 9;
        if (!v8)
          *(_BYTE *)(a1 + 88) = 1;
      }
      v9 = 3;
      v10 = a2 + 32;
      sub_2081F5504(a1, &v9);
      break;
    case 4:
      sub_207EF4630(a1, a2);
      break;
    case 5:
      sub_207EF4700(a1, a2);
      break;
    default:
      return;
  }
}

void sub_207EF4630(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_DWORD *)(a2 + 104))
    sub_207CA9F48();
  v4 = a2 + 8;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "affine3x4";
    *(_QWORD *)(a1 + 80) = 9;
    if (!v5)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_2081F1E44(a1);
  v7 = 4;
  v8 = v4;
  sub_2081F50E4(a1, (float **)&v7);
  v7 = 4;
  v8 = a2 + 24;
  sub_2081F50E4(a1, (float **)&v7);
  v7 = 4;
  v8 = a2 + 40;
  sub_2081F50E4(a1, (float **)&v7);
  v6 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(a1 + 56) = v6 - 8;
  if (*(_BYTE *)(a1 + 88))
    *(_BYTE *)(a1 + 88) = 0;
}

void sub_207EF4700(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_DWORD *)(a2 + 104) != 1)
    sub_207CA9F48();
  v4 = a2 + 8;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "affine3x4";
    *(_QWORD *)(a1 + 80) = 9;
    if (!v5)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_2081F1E44(a1);
  v7 = 4;
  v8 = v4;
  sub_2081F5504(a1, &v7);
  v7 = 4;
  v8 = a2 + 40;
  sub_2081F5504(a1, &v7);
  v7 = 4;
  v8 = a2 + 72;
  sub_2081F5504(a1, &v7);
  v6 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(a1 + 56) = v6 - 8;
  if (*(_BYTE *)(a1 + 88))
    *(_BYTE *)(a1 + 88) = 0;
}

void sub_207EF47D4(uint64_t a1, _BYTE **a2)
{
  _BYTE *v3;
  void *__p[2];
  char v5;
  _BYTE v6[24];
  int v7;
  char v8;
  char *v9;

  v3 = *a2;
  v7 = 0;
  sub_207EF48DC((uint64_t)&v9, (uint64_t)v6, v3);
  if (v7 == -1)
    sub_207CA9F48();
  v9 = &v8;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C0765F8[v7])(__p, &v9, v6);
  if (v7 != -1)
    ((void (*)(char **, _BYTE *))off_24C0765E0[v7])(&v9, v6);
  sub_2081F42A4(a1, (uint64_t)__p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_207EF4898(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EF48B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EF48C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EF48DC(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  _OWORD *v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new(0x118uLL);
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  v5[4] = 0u;
  v5[5] = 0u;
  v5[6] = 0u;
  v5[7] = 0u;
  v5[8] = 0u;
  v5[9] = 0u;
  v5[10] = 0u;
  v5[11] = 0u;
  v5[12] = 0u;
  v5[13] = 0u;
  v5[14] = 0u;
  v5[15] = 0u;
  v5[16] = 0u;
  *((_QWORD *)v5 + 34) = 0;
  sub_207CA2878((uint64_t)v5);
  v21[0] = v5;
  sub_207CBAB98((_QWORD *)v5 + 2, (uint64_t)off_24C078A20[(char)*a3 - 1], qword_20823D0C8[(char)(*a3 - 1)]);
  v6 = *((_DWORD *)v5 + 30);
  if ((v6 & 0x10) != 0)
  {
    v9 = *((_QWORD *)v5 + 14);
    v10 = *((_QWORD *)v5 + 9);
    if (v9 < v10)
    {
      *((_QWORD *)v5 + 14) = v10;
      v9 = v10;
    }
    v11 = (const void *)*((_QWORD *)v5 + 8);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = (const void *)*((_QWORD *)v5 + 5);
    v7 = *((_QWORD *)v5 + 7) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_207C95C50();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD027B8](v14 + 128);
    operator delete((void *)v14);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_207CA9F48();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24C0765C8[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_207EF4B2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;

  operator delete(v15);
  _Unwind_Resume(a1);
}

void sub_207EF4B54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2082155DC((void **)va);
  _Unwind_Resume(a1);
}

void sub_207EF4B68(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    v7 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v7 + 40))
    {
      v20 = (uint64_t *)(v7 + 16);
      sub_208210C8C(&v20, 4u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v7 + 8);
    }
    sub_20820C2C0(*(_QWORD *)(a2 + 24));
    sub_207E39730(a2, v4, 4u);
  }
  else if (v5 == 1)
  {
    v8 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v8 + 40))
    {
      v20 = (uint64_t *)(v8 + 16);
      sub_208210C8C(&v20, 5u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v8 + 8);
    }
    sub_20820C2C0(*(_QWORD *)(a2 + 24));
    sub_207E39614(a2, v4, 5u);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    v6 = *(_QWORD *)(a2 + 24);
    if (*(_BYTE *)(v6 + 40))
    {
      v20 = (uint64_t *)(v6 + 16);
      sub_208210C8C(&v20, 6u);
    }
    else
    {
      sub_208210F00((uint64_t)&v20, v6 + 8);
    }
    sub_20820C2C0(*(_QWORD *)(a2 + 24));
    sub_207E0E660(a2, v4, 6u);
  }
  v9 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 88) - 8);
  sub_20820C0E8((uint64_t *)(v9 + 48), *(_QWORD *)(v9 + 16) - v10 - 9);
  v11 = *(_QWORD *)(v9 + 48);
  if (v11)
    memmove((void *)(*(_QWORD *)(v9 + 24) + v10), *(const void **)(v9 + 56), v11);
  *(_QWORD *)(v9 + 48) = 0;
  v12 = *(_QWORD *)(v9 + 80);
  v13 = *(_QWORD *)(v9 + 88) - 8;
  *(_QWORD *)(v9 + 88) = v13;
  if (v12 == v13)
  {
    std::ostream::write();
    if (*(_BYTE *)(v9 + 40))
    {
      free(*(void **)(v9 + 24));
      *(_BYTE *)(v9 + 40) = 0;
    }
  }
  v14 = *(_QWORD *)(a2 + 24);
  if (*(_BYTE *)(v14 + 40))
  {
    v20 = (uint64_t *)(v14 + 16);
    sub_208210C8C(&v20, 1u);
  }
  else
  {
    sub_208210F00((uint64_t)&v20, v14 + 8);
  }
  sub_20820C2C0(*(_QWORD *)(a2 + 24));
  sub_207EF4DE8(a2, v3 + 200);
  v15 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(*(_QWORD *)(v15 + 88) - 8);
  sub_20820C0E8((uint64_t *)(v15 + 48), *(_QWORD *)(v15 + 16) - v16 - 9);
  v17 = *(_QWORD *)(v15 + 48);
  if (v17)
    memmove((void *)(*(_QWORD *)(v15 + 24) + v16), *(const void **)(v15 + 56), v17);
  *(_QWORD *)(v15 + 48) = 0;
  v18 = *(_QWORD *)(v15 + 80);
  v19 = *(_QWORD *)(v15 + 88) - 8;
  *(_QWORD *)(v15 + 88) = v19;
  if (v18 == v19)
  {
    std::ostream::write();
    if (*(_BYTE *)(v15 + 40))
    {
      free(*(void **)(v15 + 24));
      *(_BYTE *)(v15 + 40) = 0;
    }
  }
}

void sub_207EF4DE8(uint64_t a1, uint64_t a2)
{
  _BYTE v3[120];
  void *v4;
  char v5;
  char v6;
  void *__p;
  char v8;
  char v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  sub_207EF42D0((uint64_t)v3, a2);
  sub_207EF4ECC(a1, (uint64_t)v3);
  if (v9 && v8 < 0)
    operator delete(__p);
  if (v6)
  {
    if (v5 < 0)
      operator delete(v4);
  }
}

void sub_207EF4E84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36,char a37)
{
  if (a37 && a36 < 0)
    operator delete(__p);
  if (a30)
  {
    if (a29 < 0)
    {
      operator delete(a24);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

char *sub_207EF4ECC(uint64_t a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const void **v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t *v20;

  v4 = (char *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v5 + 40))
  {
    v20 = (uint64_t *)(v5 + 16);
    sub_208210C8C(&v20, 1u);
  }
  else
  {
    sub_208210F00((uint64_t)&v20, v5 + 8);
  }
  sub_20820C2C0(*(_QWORD *)(a1 + 24));
  sub_207EF5188(a1, v4);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(*(_QWORD *)(v6 + 88) - 8);
  sub_20820C0E8((uint64_t *)(v6 + 48), *(_QWORD *)(v6 + 16) - v7 - 9);
  v8 = *(_QWORD *)(v6 + 48);
  if (v8)
    memmove((void *)(*(_QWORD *)(v6 + 24) + v7), *(const void **)(v6 + 56), v8);
  *(_QWORD *)(v6 + 48) = 0;
  v9 = *(_QWORD *)(v6 + 80);
  v10 = *(_QWORD *)(v6 + 88) - 8;
  *(_QWORD *)(v6 + 88) = v10;
  if (v9 == v10)
  {
    std::ostream::write();
    if (*(_BYTE *)(v6 + 40))
    {
      free(*(void **)(v6 + 24));
      *(_BYTE *)(v6 + 40) = 0;
    }
  }
  if (*(_BYTE *)(a2 + 144))
  {
    v11 = *(_QWORD *)(a1 + 24);
    if (*(_BYTE *)(v11 + 40))
    {
      v20 = (uint64_t *)(v11 + 16);
      sub_2082100A4(&v20, 1);
      v12 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v12 + 40))
        goto LABEL_12;
    }
    else
    {
      LOBYTE(v20) = 1;
      std::ostream::write();
      v12 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v12 + 40))
      {
LABEL_12:
        v20 = (uint64_t *)(v12 + 16);
        sub_208211D5C((uint64_t)&v19, &v20, (const void **)(a2 + 120));
        if (!*(_BYTE *)(a2 + 176))
          goto LABEL_25;
LABEL_19:
        v14 = (const void **)(a2 + 152);
        v15 = *(_QWORD *)(a1 + 24);
        if (*(_BYTE *)(v15 + 40))
        {
          v20 = (uint64_t *)(v15 + 16);
          sub_2082100A4(&v20, 1);
          v16 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(v16 + 40))
          {
LABEL_21:
            v20 = (uint64_t *)(v16 + 16);
            return (char *)sub_208211D5C((uint64_t)&v19, &v20, v14);
          }
        }
        else
        {
          LOBYTE(v20) = 1;
          std::ostream::write();
          v16 = *(_QWORD *)(a1 + 24);
          if (*(_BYTE *)(v16 + 40))
            goto LABEL_21;
        }
        return (char *)sub_208212184((uint64_t)&v20, v16 + 8, (uint64_t)v14);
      }
    }
    sub_208212184((uint64_t)&v20, v12 + 8, a2 + 120);
    if (!*(_BYTE *)(a2 + 176))
      goto LABEL_25;
    goto LABEL_19;
  }
  v13 = *(_QWORD *)(a1 + 24);
  if (!*(_BYTE *)(v13 + 40))
  {
    LOBYTE(v20) = 0;
    std::ostream::write();
    if (!*(_BYTE *)(a2 + 176))
      goto LABEL_25;
    goto LABEL_19;
  }
  v20 = (uint64_t *)(v13 + 16);
  sub_2082100A4(&v20, 0);
  if (*(_BYTE *)(a2 + 176))
    goto LABEL_19;
LABEL_25:
  v18 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v18 + 40))
  {
    v20 = (uint64_t *)(v18 + 16);
    return sub_2082100A4(&v20, 0);
  }
  else
  {
    LOBYTE(v20) = 0;
    return (char *)std::ostream::write();
  }
}

uint64_t sub_207EF5188(uint64_t a1, char *a2)
{
  int v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unint64_t v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char v48;
  _BYTE v49[9];
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v4 = *a2;
  v5 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)(v5 + 40))
  {
    *(_QWORD *)v49 = v5 + 16;
    result = (uint64_t)sub_2082100A4((uint64_t **)v49, v4);
  }
  else
  {
    if (v4 < 0)
    {
      v49[0] = -52;
      v49[1] = v4;
    }
    else
    {
      v49[0] = *a2;
    }
    result = std::ostream::write();
  }
  switch(*a2)
  {
    case 1:
      if (*((_DWORD *)a2 + 26) != 2)
        sub_207CA9F48();
      v7 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v7 + 40))
      {
        *(_QWORD *)v49 = v7 + 16;
        sub_208211A6C((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 2);
        sub_208211A6C((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 3);
        sub_208211A6C((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 4);
      }
      else
      {
        v16 = *((_DWORD *)a2 + 2);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v16);
        std::ostream::write();
        v17 = *((_DWORD *)a2 + 3);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v17);
        std::ostream::write();
        v18 = *((_DWORD *)a2 + 4);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v18);
        std::ostream::write();
      }
      v19 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v19 + 40))
      {
        *(_QWORD *)v49 = v19 + 16;
        sub_208211A6C((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 5);
        sub_208211A6C((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 6);
        result = (uint64_t)sub_208211A6C((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 7);
      }
      else
      {
        v27 = *((_DWORD *)a2 + 5);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v27);
        std::ostream::write();
        v28 = *((_DWORD *)a2 + 6);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v28);
        std::ostream::write();
        v29 = *((_DWORD *)a2 + 7);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v29);
        result = std::ostream::write();
      }
      break;
    case 2:
      if (*((_DWORD *)a2 + 26) != 3)
        sub_207CA9F48();
      v9 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v9 + 40))
      {
        *(_QWORD *)v49 = v9 + 16;
        sub_208211B48((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 1);
        sub_208211B48((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 2);
        sub_208211B48((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 3);
      }
      else
      {
        *(_QWORD *)&v49[1] = bswap64(*((_QWORD *)a2 + 1));
        v49[0] = -53;
        std::ostream::write();
        v20 = *((_QWORD *)a2 + 2);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v20);
        std::ostream::write();
        v21 = *((_QWORD *)a2 + 3);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v21);
        std::ostream::write();
      }
      v22 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v22 + 40))
      {
        *(_QWORD *)v49 = v22 + 16;
        sub_208211B48((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 4);
        sub_208211B48((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 5);
        result = (uint64_t)sub_208211B48((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 6);
      }
      else
      {
        *(_QWORD *)&v49[1] = bswap64(*((_QWORD *)a2 + 4));
        v49[0] = -53;
        std::ostream::write();
        v30 = *((_QWORD *)a2 + 5);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v30);
        std::ostream::write();
        v31 = *((_QWORD *)a2 + 6);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v31);
        result = std::ostream::write();
      }
      break;
    case 4:
      if (*((_DWORD *)a2 + 26))
        sub_207CA9F48();
      v8 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v8 + 40))
      {
        *(_QWORD *)v49 = v8 + 16;
        sub_208211A6C((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 2);
        sub_208211A6C((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 3);
        sub_208211A6C((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 4);
        sub_208211A6C((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 5);
      }
      else
      {
        v11 = *((_DWORD *)a2 + 2);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v11);
        std::ostream::write();
        v12 = *((_DWORD *)a2 + 3);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v12);
        std::ostream::write();
        v13 = *((_DWORD *)a2 + 4);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v13);
        std::ostream::write();
        v14 = *((_DWORD *)a2 + 5);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v14);
        std::ostream::write();
      }
      v15 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v15 + 40))
      {
        *(_QWORD *)v49 = v15 + 16;
        sub_208211A6C((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 6);
        sub_208211A6C((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 7);
        sub_208211A6C((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 8);
        sub_208211A6C((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 9);
      }
      else
      {
        v32 = *((_DWORD *)a2 + 6);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v32);
        std::ostream::write();
        v33 = *((_DWORD *)a2 + 7);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v33);
        std::ostream::write();
        v34 = *((_DWORD *)a2 + 8);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v34);
        std::ostream::write();
        v35 = *((_DWORD *)a2 + 9);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v35);
        std::ostream::write();
      }
      v36 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v36 + 40))
      {
        *(_QWORD *)v49 = v36 + 16;
        sub_208211A6C((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 10);
        sub_208211A6C((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 11);
        sub_208211A6C((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 12);
        result = (uint64_t)sub_208211A6C((uint64_t)&v48, (uint64_t **)v49, (unsigned int *)a2 + 13);
      }
      else
      {
        v41 = *((_DWORD *)a2 + 10);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v41);
        std::ostream::write();
        v42 = *((_DWORD *)a2 + 11);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v42);
        std::ostream::write();
        v43 = *((_DWORD *)a2 + 12);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v43);
        std::ostream::write();
        v44 = *((_DWORD *)a2 + 13);
        v49[0] = -54;
        *(_DWORD *)&v49[1] = bswap32(v44);
        result = std::ostream::write();
      }
      break;
    case 5:
      if (*((_DWORD *)a2 + 26) != 1)
        sub_207CA9F48();
      v10 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v10 + 40))
      {
        *(_QWORD *)v49 = v10 + 16;
        sub_208211B48((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 1);
        sub_208211B48((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 2);
        sub_208211B48((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 3);
        sub_208211B48((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 4);
      }
      else
      {
        *(_QWORD *)&v49[1] = bswap64(*((_QWORD *)a2 + 1));
        v49[0] = -53;
        std::ostream::write();
        v23 = *((_QWORD *)a2 + 2);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v23);
        std::ostream::write();
        v24 = *((_QWORD *)a2 + 3);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v24);
        std::ostream::write();
        v25 = *((_QWORD *)a2 + 4);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v25);
        std::ostream::write();
      }
      v26 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v26 + 40))
      {
        *(_QWORD *)v49 = v26 + 16;
        sub_208211B48((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 5);
        sub_208211B48((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 6);
        sub_208211B48((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 7);
        sub_208211B48((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 8);
      }
      else
      {
        *(_QWORD *)&v49[1] = bswap64(*((_QWORD *)a2 + 5));
        v49[0] = -53;
        std::ostream::write();
        v37 = *((_QWORD *)a2 + 6);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v37);
        std::ostream::write();
        v38 = *((_QWORD *)a2 + 7);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v38);
        std::ostream::write();
        v39 = *((_QWORD *)a2 + 8);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v39);
        std::ostream::write();
      }
      v40 = *(_QWORD *)(a1 + 24);
      if (*(_BYTE *)(v40 + 40))
      {
        *(_QWORD *)v49 = v40 + 16;
        sub_208211B48((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 9);
        sub_208211B48((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 10);
        sub_208211B48((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 11);
        result = (uint64_t)sub_208211B48((uint64_t)&v48, (uint64_t **)v49, (unint64_t *)a2 + 12);
      }
      else
      {
        *(_QWORD *)&v49[1] = bswap64(*((_QWORD *)a2 + 9));
        v49[0] = -53;
        std::ostream::write();
        v45 = *((_QWORD *)a2 + 10);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v45);
        std::ostream::write();
        v46 = *((_QWORD *)a2 + 11);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v46);
        std::ostream::write();
        v47 = *((_QWORD *)a2 + 12);
        v49[0] = -53;
        *(_QWORD *)&v49[1] = bswap64(v47);
        result = std::ostream::write();
      }
      break;
    default:
      return result;
  }
  return result;
}

void sub_207EF5AE0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v10 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v10)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v18 = 4;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v11 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v11)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A78C(a2, v4, v18);
    v12 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v12 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v12 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "info";
        *(_QWORD *)(a2 + 80) = 4;
        if (!v6)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F17E4(a2);
      v18 = 6;
      if (**(unsigned __int8 **)(a2 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a2 + 88);
        *(_QWORD *)(a2 + 72) = "version";
        *(_QWORD *)(a2 + 80) = 7;
        if (!v7)
          *(_BYTE *)(a2 + 88) = 1;
      }
      sub_2081F20F8(a2, &v18);
      sub_207E0F904(a2, v4, v18);
      v8 = *(_QWORD *)(a2 + 56);
      v9 = *(unsigned __int8 **)(v8 - 8);
      *(_QWORD *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 56) = v8 - 8;
      if (!*(_BYTE *)(a2 + 88))
        goto LABEL_28;
LABEL_27:
      *(_BYTE *)(a2 + 88) = 0;
      goto LABEL_28;
    }
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v13 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "info";
      *(_QWORD *)(a2 + 80) = 4;
      if (!v13)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F17E4(a2);
    v18 = 5;
    if (**(unsigned __int8 **)(a2 + 40) <= 1u)
    {
      v14 = *(unsigned __int8 *)(a2 + 88);
      *(_QWORD *)(a2 + 72) = "version";
      *(_QWORD *)(a2 + 80) = 7;
      if (!v14)
        *(_BYTE *)(a2 + 88) = 1;
    }
    sub_2081F20F8(a2, &v18);
    sub_207E3A048(a2, v4, v18);
    v15 = *(_QWORD *)(a2 + 56);
    v9 = *(unsigned __int8 **)(v15 - 8);
    *(_QWORD *)(a2 + 40) = v9;
    *(_QWORD *)(a2 + 56) = v15 - 8;
    if (*(_BYTE *)(a2 + 88))
      goto LABEL_27;
  }
LABEL_28:
  if (*v9 <= 1u)
  {
    *(_QWORD *)(a2 + 72) = "value";
    *(_QWORD *)(a2 + 80) = 5;
    *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F17E4(a2);
  v18 = 1;
  if (**(unsigned __int8 **)(a2 + 40) <= 1u)
  {
    v16 = *(unsigned __int8 *)(a2 + 88);
    *(_QWORD *)(a2 + 72) = "version";
    *(_QWORD *)(a2 + 80) = 7;
    if (!v16)
      *(_BYTE *)(a2 + 88) = 1;
  }
  sub_2081F20F8(a2, &v18);
  sub_207EF5DE0(a2, v3 + 200);
  v17 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(v17 - 8);
  *(_QWORD *)(a2 + 56) = v17 - 8;
  if (*(_BYTE *)(a2 + 88))
    *(_BYTE *)(a2 + 88) = 0;
}

void sub_207EF5DE0(uint64_t a1, uint64_t a2)
{
  _BYTE v3[120];
  void *v4;
  char v5;
  char v6;
  void *__p;
  char v8;
  char v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  sub_207EF42D0((uint64_t)v3, a2);
  sub_207EF5EC4(a1, (uint64_t)v3);
  if (v9 && v8 < 0)
    operator delete(__p);
  if (v6)
  {
    if (v5 < 0)
      operator delete(v4);
  }
}

void sub_207EF5E7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36,char a37)
{
  if (a37 && a36 < 0)
    operator delete(__p);
  if (a30)
  {
    if (a29 < 0)
    {
      operator delete(a24);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_207EF5EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  int v10;
  uint64_t v11;
  int v12;
  unsigned __int8 *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;

  v4 = a2 + 8;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "src_to_dst";
    *(_QWORD *)(a1 + 80) = 10;
    if (!v5)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_2081F17E4(a1);
  v16 = 7;
  v17 = 1;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v6 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "version";
    *(_QWORD *)(a1 + 80) = 7;
    if (!v6)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_2081F20F8(a1, &v17);
  sub_207EF6108(a1, v4);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(unsigned __int8 **)(v7 - 8);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 56) = v7 - 8;
  if (*(_BYTE *)(a1 + 88))
    *(_BYTE *)(a1 + 88) = 0;
  if (*v8 <= 1u)
  {
    *(_QWORD *)(a1 + 72) = "src";
    *(_QWORD *)(a1 + 80) = 3;
    *(_BYTE *)(a1 + 88) = 1;
  }
  if (*(_BYTE *)(a2 + 144))
  {
    sub_2081F25C0(a1, a2 + 120);
    if (**(unsigned __int8 **)(a1 + 40) > 1u)
      goto LABEL_16;
  }
  else
  {
    v16 = 0;
    v9 = (unsigned __int8 *)sub_2081F133C(a1);
    v10 = *v9;
    *v9 = 0;
    v11 = *((_QWORD *)v9 + 1);
    *((_QWORD *)v9 + 1) = v16;
    v16 = v11;
    sub_207D20660(&v16, v10);
    if (**(unsigned __int8 **)(a1 + 40) > 1u)
      goto LABEL_16;
  }
  v12 = *(unsigned __int8 *)(a1 + 88);
  *(_QWORD *)(a1 + 72) = "dst";
  *(_QWORD *)(a1 + 80) = 3;
  if (!v12)
  {
    *(_BYTE *)(a1 + 88) = 1;
    if (*(_BYTE *)(a2 + 176))
      goto LABEL_17;
    goto LABEL_19;
  }
LABEL_16:
  if (*(_BYTE *)(a2 + 176))
  {
LABEL_17:
    sub_2081F25C0(a1, a2 + 152);
    return;
  }
LABEL_19:
  v16 = 0;
  v13 = (unsigned __int8 *)sub_2081F133C(a1);
  v14 = *v13;
  *v13 = 0;
  v15 = *((_QWORD *)v13 + 1);
  *((_QWORD *)v13 + 1) = v16;
  v16 = v15;
  sub_207D20660(&v16, v14);
}

void sub_207EF60D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t *v10;

  sub_207D20660(v10, a10);
  _Unwind_Resume(a1);
}

void sub_207EF60F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10)
{
  uint64_t *v10;

  sub_207D20660(v10, a10);
  _Unwind_Resume(a1);
}

void sub_207EF6108(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v4 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "se3_type";
    *(_QWORD *)(a1 + 80) = 8;
    if (!v4)
      *(_BYTE *)(a1 + 88) = 1;
  }
  v9 = a2;
  sub_207EF64E0(a1, (_BYTE **)&v9);
  switch(*(_BYTE *)a2)
  {
    case 1:
      if (*(_DWORD *)(a2 + 104) != 2)
        goto LABEL_23;
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v5 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "algebra_r";
        *(_QWORD *)(a1 + 80) = 9;
        if (!v5)
          *(_BYTE *)(a1 + 88) = 1;
      }
      v9 = 3;
      v10 = a2 + 8;
      sub_2081F3400(a1, (float **)&v9);
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v6 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "algebra_t";
        *(_QWORD *)(a1 + 80) = 9;
        if (!v6)
          *(_BYTE *)(a1 + 88) = 1;
      }
      v9 = 3;
      v10 = a2 + 20;
      sub_2081F3400(a1, (float **)&v9);
      break;
    case 2:
      if (*(_DWORD *)(a2 + 104) != 3)
LABEL_23:
        sub_207CA9F48();
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v7 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "algebra_r";
        *(_QWORD *)(a1 + 80) = 9;
        if (!v7)
          *(_BYTE *)(a1 + 88) = 1;
      }
      v9 = 3;
      v10 = a2 + 8;
      sub_2081F3820(a1, &v9);
      if (**(unsigned __int8 **)(a1 + 40) <= 1u)
      {
        v8 = *(unsigned __int8 *)(a1 + 88);
        *(_QWORD *)(a1 + 72) = "algebra_t";
        *(_QWORD *)(a1 + 80) = 9;
        if (!v8)
          *(_BYTE *)(a1 + 88) = 1;
      }
      v9 = 3;
      v10 = a2 + 32;
      sub_2081F3820(a1, &v9);
      break;
    case 4:
      sub_207EF633C(a1, a2);
      break;
    case 5:
      sub_207EF640C(a1, a2);
      break;
    default:
      return;
  }
}

void sub_207EF633C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_DWORD *)(a2 + 104))
    sub_207CA9F48();
  v4 = a2 + 8;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "affine3x4";
    *(_QWORD *)(a1 + 80) = 9;
    if (!v5)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_2081F17E4(a1);
  v7 = 4;
  v8 = v4;
  sub_2081F3400(a1, (float **)&v7);
  v7 = 4;
  v8 = a2 + 24;
  sub_2081F3400(a1, (float **)&v7);
  v7 = 4;
  v8 = a2 + 40;
  sub_2081F3400(a1, (float **)&v7);
  v6 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(a1 + 56) = v6 - 8;
  if (*(_BYTE *)(a1 + 88))
    *(_BYTE *)(a1 + 88) = 0;
}

void sub_207EF640C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_DWORD *)(a2 + 104) != 1)
    sub_207CA9F48();
  v4 = a2 + 8;
  if (**(unsigned __int8 **)(a1 + 40) <= 1u)
  {
    v5 = *(unsigned __int8 *)(a1 + 88);
    *(_QWORD *)(a1 + 72) = "affine3x4";
    *(_QWORD *)(a1 + 80) = 9;
    if (!v5)
      *(_BYTE *)(a1 + 88) = 1;
  }
  sub_2081F17E4(a1);
  v7 = 4;
  v8 = v4;
  sub_2081F3820(a1, &v7);
  v7 = 4;
  v8 = a2 + 40;
  sub_2081F3820(a1, &v7);
  v7 = 4;
  v8 = a2 + 72;
  sub_2081F3820(a1, &v7);
  v6 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(a1 + 56) = v6 - 8;
  if (*(_BYTE *)(a1 + 88))
    *(_BYTE *)(a1 + 88) = 0;
}

void sub_207EF64E0(uint64_t a1, _BYTE **a2)
{
  _BYTE *v3;
  void *__p[2];
  char v5;
  _BYTE v6[24];
  int v7;
  char v8;
  char *v9;

  v3 = *a2;
  v7 = 0;
  sub_207EF48DC((uint64_t)&v9, (uint64_t)v6, v3);
  if (v7 == -1)
    sub_207CA9F48();
  v9 = &v8;
  ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C0765F8[v7])(__p, &v9, v6);
  if (v7 != -1)
    ((void (*)(char **, _BYTE *))off_24C0765E0[v7])(&v9, v6);
  sub_2081F25C0(a1, (uint64_t)__p);
  if (v5 < 0)
    operator delete(__p[0]);
}

void sub_207EF65A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EF65C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EF65D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *sub_207EF65E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  _QWORD *v6;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *result;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    if (*(_QWORD *)(a2 + 40))
    {
      v8 = *(_QWORD **)(a2 + 24);
      v20 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v8, (uint64_t)&v20, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3BAE4(a2, v4, 4u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
  else
  {
    if (v5 != 1)
    {
      if (v5)
        sub_207CA9F48();
      if (*(_QWORD *)(a2 + 40))
      {
        v6 = *(_QWORD **)(a2 + 24);
        v18 = *(_BYTE *)(a2 + 32);
        sub_207CBAB98(v6, (uint64_t)&v18, 1);
      }
      std::ostream::operator<<();
      ++*(_QWORD *)(a2 + 40);
      sub_207E11040(a2, v4, 6u);
      v7 = *(_BYTE *)(a2 + 34);
      if (!*(_QWORD *)(a2 + 40))
        goto LABEL_16;
LABEL_15:
      v10 = *(_QWORD **)(a2 + 24);
      v21 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v10, (uint64_t)&v21, 1);
      goto LABEL_16;
    }
    if (*(_QWORD *)(a2 + 40))
    {
      v9 = *(_QWORD **)(a2 + 24);
      v19 = *(_BYTE *)(a2 + 32);
      sub_207CBAB98(v9, (uint64_t)&v19, 1);
    }
    std::ostream::operator<<();
    ++*(_QWORD *)(a2 + 40);
    sub_207E3B540(a2, v4, 5u);
    v7 = *(_BYTE *)(a2 + 34);
    if (*(_QWORD *)(a2 + 40))
      goto LABEL_15;
  }
LABEL_16:
  v11 = *(_QWORD **)(a2 + 24);
  v22 = v7;
  sub_207CBAB98(v11, (uint64_t)&v22, 1);
  v12 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = v12 + 1;
  if (v12 != -1)
  {
    v13 = *(_QWORD **)(a2 + 24);
    v23 = *(_BYTE *)(a2 + 32);
    sub_207CBAB98(v13, (uint64_t)&v23, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a2 + 40);
  sub_207EF6800(a2, v3 + 200);
  v14 = *(_BYTE *)(a2 + 34);
  if (*(_QWORD *)(a2 + 40))
  {
    v15 = *(_QWORD **)(a2 + 24);
    v24 = *(_BYTE *)(a2 + 32);
    sub_207CBAB98(v15, (uint64_t)&v24, 1);
  }
  v16 = *(_QWORD **)(a2 + 24);
  v25 = v14;
  result = sub_207CBAB98(v16, (uint64_t)&v25, 1);
  ++*(_QWORD *)(a2 + 40);
  return result;
}

void sub_207EF6800(uint64_t a1, uint64_t a2)
{
  _BYTE v3[120];
  void *v4;
  char v5;
  char v6;
  void *__p;
  char v8;
  char v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  sub_207EF42D0((uint64_t)v3, a2);
  sub_207EF68E4(a1, (uint64_t)v3);
  if (v9 && v8 < 0)
    operator delete(__p);
  if (v6)
  {
    if (v5 < 0)
      operator delete(v4);
  }
}

void sub_207EF689C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36,char a37)
{
  if (a37 && a36 < 0)
    operator delete(__p);
  if (a30)
  {
    if (a29 < 0)
    {
      operator delete(a24);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

void sub_207EF68E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  char v6;
  _QWORD *v7;
  _QWORD *v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  char v13;
  char v14;
  char v15;

  v4 = a2 + 8;
  if (*(_QWORD *)(a1 + 40))
  {
    v5 = *(_QWORD **)(a1 + 24);
    v13 = *(_BYTE *)(a1 + 32);
    sub_207CBAB98(v5, (uint64_t)&v13, 1);
  }
  std::ostream::operator<<();
  ++*(_QWORD *)(a1 + 40);
  sub_207EF6A38(a1, v4);
  v6 = *(_BYTE *)(a1 + 34);
  if (*(_QWORD *)(a1 + 40))
  {
    v7 = *(_QWORD **)(a1 + 24);
    v14 = *(_BYTE *)(a1 + 32);
    sub_207CBAB98(v7, (uint64_t)&v14, 1);
  }
  v8 = *(_QWORD **)(a1 + 24);
  v15 = v6;
  sub_207CBAB98(v8, (uint64_t)&v15, 1);
  ++*(_QWORD *)(a1 + 40);
  if (*(_BYTE *)(a2 + 144))
  {
    v10 = 1;
    sub_208208D08(a1, &v10);
    sub_208208DC4(a1, a2 + 120);
    if (*(_BYTE *)(a2 + 176))
    {
LABEL_7:
      v12 = 1;
      sub_208208D08(a1, &v12);
      sub_208208DC4(a1, a2 + 152);
      return;
    }
  }
  else
  {
    v9 = 0;
    sub_208208D08(a1, &v9);
    if (*(_BYTE *)(a2 + 176))
      goto LABEL_7;
  }
  v11 = 0;
  sub_208208D08(a1, &v11);
}

void sub_207EF6A38(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  unsigned __int8 v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;
  char v80;
  char v81;
  char v82;
  char v83;

  v73 = *(_BYTE *)a2;
  sub_208208D08(a1, &v73);
  switch(*(_BYTE *)a2)
  {
    case 1:
      if (*(_DWORD *)(a2 + 104) != 2)
        goto LABEL_84;
      v4 = (_QWORD *)(a1 + 40);
      if (*(_QWORD *)(a1 + 40))
      {
        v5 = *(_QWORD **)(a1 + 24);
        v74 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v5, (uint64_t)&v74, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v6 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v6 + 1;
      if (v6 != -1)
      {
        v7 = *(_QWORD **)(a1 + 24);
        v74 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v7, (uint64_t)&v74, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v8 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v8 + 1;
      if (v8 != -1)
      {
        v9 = *(_QWORD **)(a1 + 24);
        v74 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v9, (uint64_t)&v74, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v10 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v10 + 1;
      if (v10 != -1)
      {
        v11 = *(_QWORD **)(a1 + 24);
        v75 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v11, (uint64_t)&v75, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v12 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v12 + 1;
      if (v12 != -1)
      {
        v13 = *(_QWORD **)(a1 + 24);
        v75 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v13, (uint64_t)&v75, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v14 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v14 + 1;
      if (v14 != -1)
      {
        v15 = *(_QWORD **)(a1 + 24);
        v75 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v15, (uint64_t)&v75, 1);
      }
      goto LABEL_15;
    case 2:
      if (*(_DWORD *)(a2 + 104) != 3)
        goto LABEL_84;
      v4 = (_QWORD *)(a1 + 40);
      if (*(_QWORD *)(a1 + 40))
      {
        v39 = *(_QWORD **)(a1 + 24);
        v76 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v39, (uint64_t)&v76, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v40 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v40 + 1;
      if (v40 != -1)
      {
        v41 = *(_QWORD **)(a1 + 24);
        v76 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v41, (uint64_t)&v76, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v42 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v42 + 1;
      if (v42 != -1)
      {
        v43 = *(_QWORD **)(a1 + 24);
        v76 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v43, (uint64_t)&v76, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v44 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v44 + 1;
      if (v44 != -1)
      {
        v45 = *(_QWORD **)(a1 + 24);
        v77 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v45, (uint64_t)&v77, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v46 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v46 + 1;
      if (v46 != -1)
      {
        v47 = *(_QWORD **)(a1 + 24);
        v77 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v47, (uint64_t)&v77, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v48 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v48 + 1;
      if (v48 != -1)
      {
        v49 = *(_QWORD **)(a1 + 24);
        v77 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v49, (uint64_t)&v77, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      goto LABEL_82;
    case 4:
      if (*(_DWORD *)(a2 + 104))
        goto LABEL_84;
      v4 = (_QWORD *)(a1 + 40);
      if (*(_QWORD *)(a1 + 40))
      {
        v16 = *(_QWORD **)(a1 + 24);
        v78 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v16, (uint64_t)&v78, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v17 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v17 + 1;
      if (v17 != -1)
      {
        v18 = *(_QWORD **)(a1 + 24);
        v78 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v18, (uint64_t)&v78, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v19 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v19 + 1;
      if (v19 != -1)
      {
        v20 = *(_QWORD **)(a1 + 24);
        v78 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v20, (uint64_t)&v78, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v21 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v21 + 1;
      if (v21 != -1)
      {
        v22 = *(_QWORD **)(a1 + 24);
        v78 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v22, (uint64_t)&v78, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v23 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v23 + 1;
      if (v23 != -1)
      {
        v24 = *(_QWORD **)(a1 + 24);
        v79 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v24, (uint64_t)&v79, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v25 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v25 + 1;
      if (v25 != -1)
      {
        v26 = *(_QWORD **)(a1 + 24);
        v79 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v26, (uint64_t)&v79, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v27 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v27 + 1;
      if (v27 != -1)
      {
        v28 = *(_QWORD **)(a1 + 24);
        v79 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v28, (uint64_t)&v79, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v29 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v29 + 1;
      if (v29 != -1)
      {
        v30 = *(_QWORD **)(a1 + 24);
        v79 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v30, (uint64_t)&v79, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v31 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v31 + 1;
      if (v31 != -1)
      {
        v32 = *(_QWORD **)(a1 + 24);
        v80 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v32, (uint64_t)&v80, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v33 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v33 + 1;
      if (v33 != -1)
      {
        v34 = *(_QWORD **)(a1 + 24);
        v80 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v34, (uint64_t)&v80, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v35 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v35 + 1;
      if (v35 != -1)
      {
        v36 = *(_QWORD **)(a1 + 24);
        v80 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v36, (uint64_t)&v80, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      v37 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v37 + 1;
      if (v37 != -1)
      {
        v38 = *(_QWORD **)(a1 + 24);
        v80 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v38, (uint64_t)&v80, 1);
      }
LABEL_15:
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 9;
      std::ostream::operator<<();
      goto LABEL_83;
    case 5:
      if (*(_DWORD *)(a2 + 104) != 1)
LABEL_84:
        sub_207CA9F48();
      v4 = (_QWORD *)(a1 + 40);
      if (*(_QWORD *)(a1 + 40))
      {
        v50 = *(_QWORD **)(a1 + 24);
        v81 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v50, (uint64_t)&v81, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v51 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v51 + 1;
      if (v51 != -1)
      {
        v52 = *(_QWORD **)(a1 + 24);
        v81 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v52, (uint64_t)&v81, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v53 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v53 + 1;
      if (v53 != -1)
      {
        v54 = *(_QWORD **)(a1 + 24);
        v81 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v54, (uint64_t)&v81, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v55 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v55 + 1;
      if (v55 != -1)
      {
        v56 = *(_QWORD **)(a1 + 24);
        v81 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v56, (uint64_t)&v81, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v57 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v57 + 1;
      if (v57 != -1)
      {
        v58 = *(_QWORD **)(a1 + 24);
        v82 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v58, (uint64_t)&v82, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v59 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v59 + 1;
      if (v59 != -1)
      {
        v60 = *(_QWORD **)(a1 + 24);
        v82 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v60, (uint64_t)&v82, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v61 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v61 + 1;
      if (v61 != -1)
      {
        v62 = *(_QWORD **)(a1 + 24);
        v82 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v62, (uint64_t)&v82, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v63 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v63 + 1;
      if (v63 != -1)
      {
        v64 = *(_QWORD **)(a1 + 24);
        v82 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v64, (uint64_t)&v82, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v65 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v65 + 1;
      if (v65 != -1)
      {
        v66 = *(_QWORD **)(a1 + 24);
        v83 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v66, (uint64_t)&v83, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v67 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v67 + 1;
      if (v67 != -1)
      {
        v68 = *(_QWORD **)(a1 + 24);
        v83 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v68, (uint64_t)&v83, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v69 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v69 + 1;
      if (v69 != -1)
      {
        v70 = *(_QWORD **)(a1 + 24);
        v83 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v70, (uint64_t)&v83, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
      std::ostream::operator<<();
      v71 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 40) = v71 + 1;
      if (v71 != -1)
      {
        v72 = *(_QWORD **)(a1 + 24);
        v83 = *(_BYTE *)(a1 + 32);
        sub_207CBAB98(v72, (uint64_t)&v83, 1);
      }
      *(_QWORD *)(*(_QWORD *)(a1 + 24) + *(_QWORD *)(**(_QWORD **)(a1 + 24) - 24) + 16) = 17;
LABEL_82:
      std::ostream::operator<<();
LABEL_83:
      ++*v4;
      break;
    default:
      return;
  }
}

void sub_207EF74F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int __src;
  uint64_t v12;

  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (v5 == 2)
  {
    __src = 4;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v7 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C21C(a2, v4, v7);
  }
  else if (v5 == 1)
  {
    __src = 5;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v8 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E3C100(a2, v4, v8);
  }
  else
  {
    if (v5)
      sub_207CA9F48();
    __src = 6;
    sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
    v6 = __src;
    sub_208072A10((_QWORD *)a2);
    sub_207E11EF8(a2, v4, v6);
  }
  v9 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v9 + 10) = *(_QWORD *)(a2 + 32) - v9 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
  __src = 1;
  sub_207D0B114(a2 + 24, *(char **)(a2 + 32), (char *)&__src, (char *)&v12, 4);
  sub_208072A10((_QWORD *)a2);
  sub_207EF76AC(a2, v3 + 200);
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 56) - 8) + *(_QWORD *)(a2 + 24);
  *(_QWORD *)(v10 + 10) = *(_QWORD *)(a2 + 32) - v10 - 18;
  *(_QWORD *)(a2 + 56) -= 8;
}

void sub_207EF76AC(uint64_t a1, uint64_t a2)
{
  _BYTE v3[120];
  void *v4;
  char v5;
  char v6;
  void *__p;
  char v8;
  char v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  sub_207EF42D0((uint64_t)v3, a2);
  sub_207EF7790(a1, (uint64_t)v3);
  if (v9 && v8 < 0)
    operator delete(__p);
  if (v6)
  {
    if (v5 < 0)
      operator delete(v4);
  }
}

void sub_207EF7748(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36,char a37)
{
  if (a37 && a36 < 0)
    operator delete(__p);
  if (a30)
  {
    if (a29 < 0)
    {
      operator delete(a24);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

char *sub_207EF7790(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  char *v10;
  char *v11;
  char *p_src;
  uint64_t v13;
  int64_t v14;
  _BOOL4 v15;
  uint64_t v16;
  int64_t v17;
  _BOOL4 v18;
  uint64_t __src;
  uint64_t v21;

  v4 = a2 + 8;
  LODWORD(__src) = 1;
  v5 = a1 + 24;
  sub_207D0B114(a1 + 24, *(char **)(a1 + 32), (char *)&__src, (char *)&__src + 4, 4);
  sub_208072A10((_QWORD *)a1);
  sub_207EF7A10(a1, v4);
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 56) - 8) + *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v6 + 10) = *(_QWORD *)(a1 + 32) - v6 - 18;
  *(_QWORD *)(a1 + 56) -= 8;
  if (*(_BYTE *)(a2 + 144))
  {
    LOBYTE(__src) = 1;
    sub_207D0B114(v5, *(char **)(a1 + 32), (char *)&__src, (char *)&__src + 1, 1);
    v7 = *(unsigned __int8 *)(a2 + 143);
    if ((v7 & 0x80u) != 0)
      v7 = *(_QWORD *)(a2 + 128);
    __src = v7;
    sub_207D0B114(v5, *(char **)(a1 + 32), (char *)&__src, (char *)&v21, 8);
    if (*(char *)(a2 + 143) < 0)
    {
      v8 = *(char **)(a2 + 120);
      v9 = *(_QWORD *)(a2 + 128);
      if (!v8)
      {
        if (v9)
        {
          v15 = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_208224846, 0, (void (*)(void **))sub_208216974);
          v8 = 0;
          if (v15)
            goto LABEL_21;
        }
      }
    }
    else
    {
      v8 = (char *)(a2 + 120);
      v9 = *(unsigned __int8 *)(a2 + 143);
    }
    sub_207D0B114(v5, *(char **)(a1 + 32), v8, &v8[v9], v9);
    if (*(_BYTE *)(a2 + 176))
    {
LABEL_12:
      LOBYTE(__src) = 1;
      sub_207D0B114(v5, *(char **)(a1 + 32), (char *)&__src, (char *)&__src + 1, 1);
      v16 = *(unsigned __int8 *)(a2 + 175);
      if ((v16 & 0x80u) != 0)
        v16 = *(_QWORD *)(a2 + 160);
      __src = v16;
      sub_207D0B114(v5, *(char **)(a1 + 32), (char *)&__src, (char *)&v21, 8);
      if ((*(char *)(a2 + 175) & 0x80000000) == 0)
      {
        p_src = (char *)(a2 + 152);
        v17 = *(unsigned __int8 *)(a2 + 175);
LABEL_19:
        v10 = *(char **)(a1 + 32);
        v11 = &p_src[v17];
        v13 = v5;
        v14 = v17;
        return sub_207D0B114(v13, v10, p_src, v11, v14);
      }
      p_src = *(char **)(a2 + 152);
      v17 = *(_QWORD *)(a2 + 160);
      if (p_src)
        goto LABEL_19;
      if (!v17)
        goto LABEL_19;
      v18 = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Essentials/Common/include/Essentials/Common/Span.h", 248, (uint64_t)"ptr != nullptr || size == 0", 27, (uint64_t)&unk_208224846, 0, (void (*)(void **))sub_208216974);
      p_src = 0;
      if (!v18)
        goto LABEL_19;
LABEL_21:
      abort();
    }
  }
  else
  {
    LOBYTE(__src) = 0;
    sub_207D0B114(v5, *(char **)(a1 + 32), (char *)&__src, (char *)&__src + 1, 1);
    if (*(_BYTE *)(a2 + 176))
      goto LABEL_12;
  }
  LOBYTE(__src) = 0;
  v10 = *(char **)(a1 + 32);
  v11 = (char *)&__src + 1;
  p_src = (char *)&__src;
  v13 = v5;
  v14 = 1;
  return sub_207D0B114(v13, v10, p_src, v11, v14);
}

char *sub_207EF7A10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *result;
  char *v6;
  char *v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  char *v13;
  char *v14;
  char __src;
  uint64_t v16;

  __src = *(_BYTE *)a2;
  v4 = a1 + 24;
  result = sub_207D0B114(a1 + 24, *(char **)(a1 + 32), &__src, (char *)&v16, 1);
  switch(*(_BYTE *)a2)
  {
    case 1:
      if (*(_DWORD *)(a2 + 104) != 2)
        goto LABEL_11;
      v6 = (char *)(a2 + 8);
      v7 = *(char **)(a1 + 32);
      v8 = (char *)(a2 + 20);
      v9 = 12;
      v10 = v4;
      v11 = v8;
      v12 = 12;
      goto LABEL_10;
    case 2:
      if (*(_DWORD *)(a2 + 104) != 3)
        goto LABEL_11;
      v6 = (char *)(a2 + 8);
      v7 = *(char **)(a1 + 32);
      v8 = (char *)(a2 + 32);
      v9 = 24;
      v10 = v4;
      v11 = v8;
      v12 = 24;
      goto LABEL_10;
    case 4:
      if (*(_DWORD *)(a2 + 104))
        goto LABEL_11;
      v13 = (char *)(a2 + 24);
      v9 = 16;
      sub_207D0B114(v4, *(char **)(a1 + 32), (char *)(a2 + 8), (char *)(a2 + 24), 16);
      v7 = *(char **)(a1 + 32);
      v8 = (char *)(a2 + 40);
      v10 = v4;
      v6 = v13;
      v11 = v8;
      v12 = 16;
      goto LABEL_10;
    case 5:
      if (*(_DWORD *)(a2 + 104) != 1)
LABEL_11:
        sub_207CA9F48();
      v14 = (char *)(a2 + 40);
      v9 = 32;
      sub_207D0B114(v4, *(char **)(a1 + 32), (char *)(a2 + 8), (char *)(a2 + 40), 32);
      v7 = *(char **)(a1 + 32);
      v8 = (char *)(a2 + 72);
      v10 = v4;
      v6 = v14;
      v11 = v8;
      v12 = 32;
LABEL_10:
      sub_207D0B114(v10, v7, v6, v11, v12);
      result = sub_207D0B114(v4, *(char **)(a1 + 32), v8, &v8[v9], v9);
      break;
    default:
      return result;
  }
  return result;
}

void sub_207EF7B98(_DWORD *a1, uint64_t a2)
{
  _BYTE v3[120];
  void *v4;
  char v5;
  char v6;
  void *__p;
  char v8;
  char v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  sub_207EF42D0((uint64_t)v3, a2);
  sub_207EF7C7C(a1, (uint64_t)v3);
  if (v9 && v8 < 0)
    operator delete(__p);
  if (v6)
  {
    if (v5 < 0)
      operator delete(v4);
  }
}

void sub_207EF7C34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,void *__p,uint64_t a32,int a33,__int16 a34,char a35,char a36,char a37)
{
  if (a37 && a36 < 0)
    operator delete(__p);
  if (a30)
  {
    if (a29 < 0)
    {
      operator delete(a24);
      _Unwind_Resume(exception_object);
    }
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_207EF7C7C(_DWORD *a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v7;
  int v8;
  char v9;
  char v10;
  char v11;
  char v12;

  v4 = a2 + 8;
  v5 = a1[2];
  v7 = 1;
  (*(void (**)(_DWORD *, int *))(*(_QWORD *)a1 + 104))(a1, &v7);
  if (v5 < 1)
  {
    sub_207EF7DFC(a1, v4);
    if (*(_BYTE *)(a2 + 144))
      goto LABEL_5;
LABEL_8:
    v9 = 0;
    (*(void (**)(_DWORD *, char *))(*(_QWORD *)a1 + 80))(a1, &v9);
    if (*(_BYTE *)(a2 + 176))
      goto LABEL_6;
    goto LABEL_9;
  }
  if (v5 == 2)
  {
    v8 = 1;
    (*(void (**)(_DWORD *, int *))(*(_QWORD *)a1 + 104))(a1, &v8);
  }
  (*(void (**)(_DWORD *))(*(_QWORD *)a1 + 16))(a1);
  sub_207EF7DFC(a1, v4);
  (*(void (**)(_DWORD *))(*(_QWORD *)a1 + 24))(a1);
  if (!*(_BYTE *)(a2 + 144))
    goto LABEL_8;
LABEL_5:
  v10 = 1;
  (*(void (**)(_DWORD *, char *))(*(_QWORD *)a1 + 80))(a1, &v10);
  (*(void (**)(_DWORD *, uint64_t))(*(_QWORD *)a1 + 144))(a1, a2 + 120);
  if (*(_BYTE *)(a2 + 176))
  {
LABEL_6:
    v12 = 1;
    (*(void (**)(_DWORD *, char *))(*(_QWORD *)a1 + 80))(a1, &v12);
    return (*(uint64_t (**)(_DWORD *, uint64_t))(*(_QWORD *)a1 + 144))(a1, a2 + 152);
  }
LABEL_9:
  v11 = 0;
  return (*(uint64_t (**)(_DWORD *, char *))(*(_QWORD *)a1 + 80))(a1, &v11);
}

void sub_207EF7DFC(_BYTE *a1, uint64_t a2)
{
  _BYTE *v4;

  v4 = (_BYTE *)a2;
  sub_207EF81E0(a1, &v4);
  switch(*(_BYTE *)a2)
  {
    case 1:
      if (*(_DWORD *)(a2 + 104) != 2)
        goto LABEL_9;
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 8);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 12);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 16);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 20);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 24);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 28);
      break;
    case 2:
      if (*(_DWORD *)(a2 + 104) != 3)
LABEL_9:
        sub_207CA9F48();
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 8);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 16);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 24);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 32);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 40);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 48);
      break;
    case 4:
      sub_207EF7FB4((uint64_t)a1, a2);
      break;
    case 5:
      sub_207EF80C8((uint64_t)a1, a2);
      break;
    default:
      return;
  }
}

uint64_t sub_207EF7FB4(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 104))
    sub_207CA9F48();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 12);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 16);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 32);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 36);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 44);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 48);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 52);
}

uint64_t sub_207EF80C8(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a2 + 104) != 1)
    sub_207CA9F48();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 16);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 32);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 56);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 64);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 72);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 88);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 96);
}

void sub_207EF81E0(_BYTE *a1, _BYTE **a2)
{
  _BYTE *v3;
  void *__p[2];
  char v5;
  _BYTE v6[24];
  int v7;
  char v8;
  char *v9;

  if ((a1[12] & 2) != 0)
  {
    v3 = *a2;
    v7 = 0;
    sub_207EF48DC((uint64_t)&v9, (uint64_t)v6, v3);
    if (v7 == -1)
      sub_207CA9F48();
    v9 = &v8;
    ((void (*)(void **__return_ptr, char **, _BYTE *))off_24C0765F8[v7])(__p, &v9, v6);
    if (v7 != -1)
      ((void (*)(char **, _BYTE *))off_24C0765E0[v7])(&v9, v6);
    (*(void (**)(_BYTE *, void **))(*(_QWORD *)a1 + 144))(a1, __p);
    if (v5 < 0)
      operator delete(__p[0]);
  }
  else
  {
    v6[0] = **a2;
    (*(void (**)(_BYTE *, _BYTE *))(*(_QWORD *)a1 + 80))(a1, v6);
  }
}

void sub_207EF82D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EF82F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EF8304(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EF8318(uint64_t (***a1)(), uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v8 = a2;
  v9 = a2;
  v4 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D28, 0);
  if (v4)
  {
    sub_207EF898C(&v9, (uint64_t)v4);
  }
  else
  {
    v9 = a2;
    v5 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076D60, 0);
    if (v5)
    {
      sub_207EF954C(&v9, v5);
    }
    else
    {
      v9 = a2;
      v6 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076DE8, 0);
      if (v6)
      {
        sub_207EF9E78(&v9, (uint64_t)v6);
      }
      else
      {
        v9 = a2;
        v7 = __dynamic_cast(a1, (const struct __class_type_info *)&unk_24C08EA38, (const struct __class_type_info *)&unk_24C076E20, 0);
        if (v7)
        {
          sub_207EFAA38(&v9, (uint64_t)v7);
        }
        else
        {
          v9 = a2;
          if (*a1 == &off_24C082DE0)
            sub_207EFB5A8(&v9, a1);
          else
            sub_207EF847C(&v8, (uint64_t *)a1);
        }
      }
    }
  }
}

void sub_207EF847C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  char v28;
  uint64_t v29[27];
  unsigned int v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;

  v46 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v29);
    sub_207E0AB10((uint64_t)&v30, v29);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)&v30);
        if (!v45)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v28, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v31;
    *(_BYTE *)(v3 + 64) = 0;
    if (v34)
    {
      v8 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(_QWORD *)(v3 + 56) = v8;
      v32 = 0uLL;
      v33 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v36;
    v10 = v35;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v39)
    {
      v11 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(_QWORD *)(v3 + 112) = v11;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v42)
    {
      v12 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(_QWORD *)(v3 + 144) = v12;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = v43;
      *(_QWORD *)(v3 + 176) = v44;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v43;
    if (!(_QWORD)v43)
      goto LABEL_46;
    v15 = *((_QWORD *)&v43 + 1);
    v16 = (void *)v43;
    if (*((_QWORD *)&v43 + 1) == (_QWORD)v43)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v43;
LABEL_45:
    *((_QWORD *)&v43 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v29);
  sub_207E0AB10((uint64_t)&v30, v29);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v28, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v31;
    *(_BYTE *)(v3 + 64) = 0;
    if (v34)
    {
      v17 = v33;
      *(_OWORD *)(v3 + 40) = v32;
      *(_QWORD *)(v3 + 56) = v17;
      v32 = 0uLL;
      v33 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v36;
    v19 = v35;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v39)
    {
      v20 = v38;
      *(_OWORD *)(v3 + 96) = v37;
      *(_QWORD *)(v3 + 112) = v20;
      v37 = 0uLL;
      v38 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v42)
    {
      v21 = v41;
      *(_OWORD *)(v3 + 128) = v40;
      *(_QWORD *)(v3 + 144) = v21;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v45;
    if (v45)
    {
      *(_OWORD *)(v3 + 160) = v43;
      *(_QWORD *)(v3 + 176) = v44;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)&v30);
  if (v45)
  {
LABEL_38:
    v14 = v43;
    if (!(_QWORD)v43)
      goto LABEL_46;
    v23 = *((_QWORD *)&v43 + 1);
    v16 = (void *)v43;
    if (*((_QWORD *)&v43 + 1) == (_QWORD)v43)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v42 && SHIBYTE(v41) < 0)
    operator delete((void *)v40);
  if (v39 && SHIBYTE(v38) < 0)
    operator delete((void *)v37);
  if (v34 && SHIBYTE(v33) < 0)
    operator delete((void *)v32);
  sub_207D49CF4((uint64_t)v29);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *a2;
  v29[0] = a2[1];
  v25 = v29[0];
  v30 = 6;
  (*(void (**)(uint64_t *, unsigned int *))(v24 + 104))(a2, &v30);
  if (v25 < 1)
  {
    if (v30 < 3)
      sub_207E1EB04((uint64_t)&v30, (uint64_t)a2, v4, v30);
    else
      sub_207E1ED78((uint64_t)a2, v4, v30);
  }
  else
  {
    sub_207E1E50C((int *)v29, (uint64_t)a2, v4, v30);
  }
  v26 = *a2;
  v29[0] = a2[1];
  v27 = v29[0];
  v30 = 1;
  (*(void (**)(uint64_t *, unsigned int *))(v26 + 104))(a2, &v30);
  if (v27 < 1)
    sub_207EFC3DC(a2, v3 + 200);
  else
    sub_207EFC0F4((int *)v29, a2, v3 + 200);
}

void sub_207EF8944(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EF898C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *exception;
  char v31;
  uint64_t v32[27];
  _BYTE v33[8];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v32);
    sub_207E0AB10((uint64_t)v33, v32);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v33);
        if (!v48)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v31, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v34;
    *(_BYTE *)(v3 + 64) = 0;
    if (v37)
    {
      v8 = v36;
      *(_OWORD *)(v3 + 40) = v35;
      *(_QWORD *)(v3 + 56) = v8;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v39;
    v10 = v38;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v42)
    {
      v11 = v41;
      *(_OWORD *)(v3 + 96) = v40;
      *(_QWORD *)(v3 + 112) = v11;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v45)
    {
      v12 = v44;
      *(_OWORD *)(v3 + 128) = v43;
      *(_QWORD *)(v3 + 144) = v12;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v48;
    if (v48)
    {
      *(_OWORD *)(v3 + 160) = v46;
      *(_QWORD *)(v3 + 176) = v47;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v46;
    if (!(_QWORD)v46)
      goto LABEL_46;
    v15 = *((_QWORD *)&v46 + 1);
    v16 = (void *)v46;
    if (*((_QWORD *)&v46 + 1) == (_QWORD)v46)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v46;
LABEL_45:
    *((_QWORD *)&v46 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v32);
  sub_207E0AB10((uint64_t)v33, v32);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v31, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v34;
    *(_BYTE *)(v3 + 64) = 0;
    if (v37)
    {
      v17 = v36;
      *(_OWORD *)(v3 + 40) = v35;
      *(_QWORD *)(v3 + 56) = v17;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v39;
    v19 = v38;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v42)
    {
      v20 = v41;
      *(_OWORD *)(v3 + 96) = v40;
      *(_QWORD *)(v3 + 112) = v20;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v45)
    {
      v21 = v44;
      *(_OWORD *)(v3 + 128) = v43;
      *(_QWORD *)(v3 + 144) = v21;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v48;
    if (v48)
    {
      *(_OWORD *)(v3 + 160) = v46;
      *(_QWORD *)(v3 + 176) = v47;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v33);
  if (v48)
  {
LABEL_38:
    v14 = v46;
    if (!(_QWORD)v46)
      goto LABEL_46;
    v23 = *((_QWORD *)&v46 + 1);
    v16 = (void *)v46;
    if (*((_QWORD *)&v46 + 1) == (_QWORD)v46)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v45 && SHIBYTE(v44) < 0)
    operator delete((void *)v43);
  if (v42 && SHIBYTE(v41) < 0)
    operator delete((void *)v40);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  sub_207D49CF4((uint64_t)v32);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E14108(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_2081F5F4C(a2);
  v26 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v26)
    *(_BYTE *)(a2 + 104) = 1;
  v27 = (char *)sub_2081F6204((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v32[0] = 0;
  sub_20809778C(v27, v32);
  if (HIDWORD(v32[0]))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24C08F078;
    __cxa_throw(exception, (struct type_info *)&unk_24C08F090, (void (*)(void *))std::exception::~exception);
  }
  sub_207EF8EE0(a2, v3 + 200);
  v28 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v28 - 8);
  v29 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v29 - 8);
  *(_QWORD *)(a2 + 48) = v28 - 8;
  *(_QWORD *)(a2 + 72) = v29 - 8;
}

void sub_207EF8E98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EF8EE0(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  _QWORD *exception;
  unint64_t v11;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "src_to_dst";
  *(_QWORD *)(a1 + 96) = 10;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  sub_2081F5F4C(a1);
  v5 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "version";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v5)
    *(_BYTE *)(a1 + 104) = 1;
  v6 = (char *)sub_2081F6204((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v11 = 0;
  sub_20809778C(v6, &v11);
  if (HIDWORD(v11))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24C08F078;
    __cxa_throw(exception, (struct type_info *)&unk_24C08F090, (void (*)(void *))std::exception::~exception);
  }
  sub_207EF9030(a1, a2 + 8);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(a1 + 48) = v7 - 8;
  *(_QWORD *)(a1 + 72) = v8 - 8;
  LODWORD(v7) = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "src";
  *(_QWORD *)(a1 + 96) = 3;
  if (!(_DWORD)v7)
    *(_BYTE *)(a1 + 104) = 1;
  sub_207E14BEC((uint64_t *)a1, a2 + 120);
  v9 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "dst";
  *(_QWORD *)(a1 + 96) = 3;
  if (!v9)
    *(_BYTE *)(a1 + 104) = 1;
  sub_207E14BEC((uint64_t *)a1, a2 + 152);
}

void sub_207EF9030(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  unint64_t v6;
  float *v7;
  int v8;
  unint64_t v9;
  int v10;
  unint64_t v11;
  double *v12;
  int v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "se3_type";
  *(_QWORD *)(a1 + 96) = 8;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v25 = (_BYTE *)a2;
  sub_207EF938C((uint64_t *)a1, &v25);
  switch(*(_BYTE *)a2)
  {
    case 1:
      if (*(_DWORD *)(a2 + 104) != 2)
      {
        *(_QWORD *)(a2 + 8) = 0;
        *(_QWORD *)(a2 + 16) = 0;
        *(_QWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 104) = 2;
      }
      v5 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "algebra_r";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v5)
        *(_BYTE *)(a1 + 104) = 1;
      v6 = sub_2081F6204((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_2081F75DC(v6, (float *)(a2 + 8));
      v7 = (float *)(a2 + 20);
      v8 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "algebra_t";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v8)
        *(_BYTE *)(a1 + 104) = 1;
      v9 = sub_2081F6204((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_2081F75DC(v9, v7);
      break;
    case 2:
      if (*(_DWORD *)(a2 + 104) != 3)
      {
        *(_OWORD *)(a2 + 24) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)(a2 + 8) = 0u;
        *(_DWORD *)(a2 + 104) = 3;
      }
      v10 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "algebra_r";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v10)
        *(_BYTE *)(a1 + 104) = 1;
      v11 = sub_2081F6204((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_2081F76E4(v11, (double *)(a2 + 8));
      v12 = (double *)(a2 + 32);
      v13 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "algebra_t";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v13)
        *(_BYTE *)(a1 + 104) = 1;
      v14 = sub_2081F6204((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_2081F76E4(v14, v12);
      break;
    case 4:
      if (*(_DWORD *)(a2 + 104))
      {
        *(_OWORD *)(a2 + 24) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)(a2 + 8) = 0u;
        *(_DWORD *)(a2 + 104) = 0;
      }
      v15 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "affine3x4";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v15)
        *(_BYTE *)(a1 + 104) = 1;
      sub_2081F5F4C(a1);
      v16 = sub_2081F6204((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_2081F75DC(v16, (float *)(a2 + 8));
      v17 = sub_2081F6204((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_2081F75DC(v17, (float *)(a2 + 24));
      v18 = sub_2081F6204((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_2081F75DC(v18, (float *)(a2 + 40));
      goto LABEL_28;
    case 5:
      if (*(_DWORD *)(a2 + 104) != 1)
      {
        *(_OWORD *)(a2 + 72) = 0u;
        *(_OWORD *)(a2 + 88) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)(a2 + 56) = 0u;
        *(_OWORD *)(a2 + 8) = 0u;
        *(_OWORD *)(a2 + 24) = 0u;
        *(_DWORD *)(a2 + 104) = 1;
      }
      v19 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "affine3x4";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v19)
        *(_BYTE *)(a1 + 104) = 1;
      sub_2081F5F4C(a1);
      v20 = sub_2081F6204((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_2081F76E4(v20, (double *)(a2 + 8));
      v21 = sub_2081F6204((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_2081F76E4(v21, (double *)(a2 + 40));
      v22 = sub_2081F6204((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_2081F76E4(v22, (double *)(a2 + 72));
LABEL_28:
      v23 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(v23 - 8);
      v24 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(v24 - 8);
      *(_QWORD *)(a1 + 48) = v23 - 8;
      *(_QWORD *)(a1 + 72) = v24 - 8;
      break;
    default:
      return;
  }
}

void sub_207EF938C(uint64_t *a1, _BYTE **a2)
{
  void **v4;
  int v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *__p[2];
  uint64_t v15;
  char v16;
  __int128 v17;
  uint64_t v18;

  __p[0] = 0;
  __p[1] = 0;
  v15 = 0;
  v4 = (void **)sub_2081F6204(a1);
  ++a1[14];
  v18 = 0;
  v17 = 0uLL;
  sub_208097C8C(v4, (uint64_t)&v17);
  v15 = v18;
  *(_OWORD *)__p = v17;
  v5 = SHIBYTE(v18);
  v6 = (char *)v17;
  v7 = (char *)operator new(0x118uLL);
  v8 = v7;
  if (v5 >= 0)
    v9 = (char *)__p;
  else
    v9 = v6;
  sub_208215780((uint64_t)v7, v9);
  *(_QWORD *)&v17 = v8;
  v16 = 0;
  sub_207F0A88C((uint64_t *)v8, &v16);
  v10 = v16;
  v11 = MEMORY[0x24BEDB7F0];
  v12 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)v8 = *MEMORY[0x24BEDB7F0];
  v13 = *(_QWORD *)(v11 + 72);
  *(_QWORD *)&v8[*(_QWORD *)(v12 - 24)] = *(_QWORD *)(v11 + 64);
  *((_QWORD *)v8 + 3) = MEMORY[0x24BEDB848] + 16;
  *((_QWORD *)v8 + 2) = v13;
  if (v8[111] < 0)
    operator delete(*((void **)v8 + 11));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x20BD027B8](v8 + 128);
  operator delete(v8);
  **a2 = v10;
  if (SHIBYTE(v15) < 0)
    operator delete(__p[0]);
}

void sub_207EF94D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_2082155DC(&a17);
  if ((a14 & 0x80000000) == 0)
    _Unwind_Resume(a1);
  operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t sub_207EF954C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  char v27;
  uint64_t v28[27];
  _BYTE v29[8];
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;

  v45 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v28);
    sub_207E0AB10((uint64_t)v29, v28);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v29);
        if (!v44)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v27, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v8 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v8;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v35;
    v10 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v11 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v11;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v12 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v12;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v15 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v42;
LABEL_45:
    *((_QWORD *)&v42 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v28);
  sub_207E0AB10((uint64_t)v29, v28);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v27, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v30;
    *(_BYTE *)(v3 + 64) = 0;
    if (v33)
    {
      v17 = v32;
      *(_OWORD *)(v3 + 40) = v31;
      *(_QWORD *)(v3 + 56) = v17;
      v31 = 0uLL;
      v32 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v35;
    v19 = v34;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v38)
    {
      v20 = v37;
      *(_OWORD *)(v3 + 96) = v36;
      *(_QWORD *)(v3 + 112) = v20;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v41)
    {
      v21 = v40;
      *(_OWORD *)(v3 + 128) = v39;
      *(_QWORD *)(v3 + 144) = v21;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v44;
    if (v44)
    {
      *(_OWORD *)(v3 + 160) = v42;
      *(_QWORD *)(v3 + 176) = v43;
      v42 = 0uLL;
      v43 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v29);
  if (v44)
  {
LABEL_38:
    v14 = v42;
    if (!(_QWORD)v42)
      goto LABEL_46;
    v23 = *((_QWORD *)&v42 + 1);
    v16 = (void *)v42;
    if (*((_QWORD *)&v42 + 1) == (_QWORD)v42)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v41 && SHIBYTE(v40) < 0)
    operator delete((void *)v39);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v33 && SHIBYTE(v32) < 0)
    operator delete((void *)v31);
  sub_207D49CF4((uint64_t)v28);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E17BB8((uint64_t)v28, a2, v4);
  LODWORD(v28[0]) = 1;
  sub_20820BA20(a2[6], v28);
  sub_207E17CA8(a2 + 2);
  sub_207EF9A30(a2, v3 + 200);
  v24 = a2[4];
  result = (*(uint64_t (**)(_QWORD *))(a2[2] + 32))(a2 + 2);
  v26 = *(_QWORD *)(v24 - 16) - result + *(_QWORD *)(v24 - 8);
  if (v26)
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(a2[2] + 40))(a2 + 2, v26);
  a2[4] -= 16;
  return result;
}

void sub_207EF99E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EF9A30(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void **v8;
  int v9;
  char v10;
  char v11;

  v4 = a2 + 8;
  v9 = 1;
  sub_20820BA20(a1[6], &v9);
  sub_207E17CA8(a1 + 2);
  sub_207EF9BB0((uint64_t)a1, v4);
  v5 = a1[4];
  v6 = *(_QWORD *)(v5 - 16) - (*(uint64_t (**)(_QWORD *))(a1[2] + 32))(a1 + 2) + *(_QWORD *)(v5 - 8);
  if (v6)
    (*(void (**)(_QWORD *, uint64_t))(a1[2] + 40))(a1 + 2, v6);
  a1[4] -= 16;
  v7 = (void **)(a2 + 120);
  v10 = 0;
  sub_20820B6F8(a1[6], &v10);
  if (v10)
  {
    if (!*(_BYTE *)(a2 + 144))
    {
      *v7 = 0;
      *(_QWORD *)(a2 + 128) = 0;
      *(_QWORD *)(a2 + 136) = 0;
      *(_BYTE *)(a2 + 144) = 1;
    }
    sub_20820C000(a1[6], (void **)(a2 + 120));
  }
  else if (*(_BYTE *)(a2 + 144))
  {
    if (*(char *)(a2 + 143) < 0)
      operator delete(*v7);
    *(_BYTE *)(a2 + 144) = 0;
  }
  v8 = (void **)(a2 + 152);
  v11 = 0;
  sub_20820B6F8(a1[6], &v11);
  if (v11)
  {
    if (!*(_BYTE *)(a2 + 176))
    {
      *v8 = 0;
      *(_QWORD *)(a2 + 160) = 0;
      *(_QWORD *)(a2 + 168) = 0;
      *(_BYTE *)(a2 + 176) = 1;
    }
    sub_20820C000(a1[6], (void **)(a2 + 152));
  }
  else if (*(_BYTE *)(a2 + 176))
  {
    if (*(char *)(a2 + 175) < 0)
      operator delete(*v8);
    *(_BYTE *)(a2 + 176) = 0;
  }
}

void sub_207EF9BB0(uint64_t a1, uint64_t a2)
{
  int v4;
  float *v5;
  uint64_t v6;
  uint64_t v7;
  float *v8;
  double *v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  float *v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;

  v19 = 0;
  sub_20820B6F8(*(_QWORD *)(a1 + 48), &v19);
  v4 = v19;
  *(_BYTE *)a2 = v19;
  switch(v4)
  {
    case 1:
      v5 = (float *)(a2 + 8);
      if (*(_DWORD *)(a2 + 104) != 2)
      {
        *(_QWORD *)v5 = 0;
        *(_QWORD *)(a2 + 16) = 0;
        *(_QWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 104) = 2;
      }
      v6 = *(_QWORD *)(a1 + 48);
      sub_20820BCC8(v6, v5);
      sub_20820BCC8(v6, (float *)(a2 + 12));
      sub_20820BCC8(v6, (float *)(a2 + 16));
      v7 = *(_QWORD *)(a1 + 48);
      sub_20820BCC8(v7, (float *)(a2 + 20));
      sub_20820BCC8(v7, (float *)(a2 + 24));
      v8 = (float *)(a2 + 28);
      goto LABEL_11;
    case 2:
      v9 = (double *)(a2 + 8);
      if (*(_DWORD *)(a2 + 104) != 3)
      {
        *(_OWORD *)(a2 + 24) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)v9 = 0u;
        *(_DWORD *)(a2 + 104) = 3;
      }
      v10 = *(_QWORD *)(a1 + 48);
      sub_20820BDF8(v10, v9);
      sub_20820BDF8(v10, (double *)(a2 + 16));
      sub_20820BDF8(v10, (double *)(a2 + 24));
      v11 = *(_QWORD *)(a1 + 48);
      sub_20820BDF8(v11, (double *)(a2 + 32));
      sub_20820BDF8(v11, (double *)(a2 + 40));
      v12 = (double *)(a2 + 48);
      goto LABEL_15;
    case 4:
      v13 = (float *)(a2 + 8);
      if (*(_DWORD *)(a2 + 104))
      {
        *(_OWORD *)(a2 + 24) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)v13 = 0u;
        *(_DWORD *)(a2 + 104) = 0;
      }
      v14 = *(_QWORD *)(a1 + 48);
      sub_20820BCC8(v14, v13);
      sub_20820BCC8(v14, (float *)(a2 + 12));
      sub_20820BCC8(v14, (float *)(a2 + 16));
      sub_20820BCC8(v14, (float *)(a2 + 20));
      v15 = *(_QWORD *)(a1 + 48);
      sub_20820BCC8(v15, (float *)(a2 + 24));
      sub_20820BCC8(v15, (float *)(a2 + 28));
      sub_20820BCC8(v15, (float *)(a2 + 32));
      sub_20820BCC8(v15, (float *)(a2 + 36));
      v7 = *(_QWORD *)(a1 + 48);
      sub_20820BCC8(v7, (float *)(a2 + 40));
      sub_20820BCC8(v7, (float *)(a2 + 44));
      sub_20820BCC8(v7, (float *)(a2 + 48));
      v8 = (float *)(a2 + 52);
LABEL_11:
      sub_20820BCC8(v7, v8);
      return;
    case 5:
      v16 = (double *)(a2 + 8);
      if (*(_DWORD *)(a2 + 104) != 1)
      {
        *(_OWORD *)(a2 + 72) = 0u;
        *(_OWORD *)(a2 + 88) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)(a2 + 56) = 0u;
        *(_OWORD *)v16 = 0u;
        *(_OWORD *)(a2 + 24) = 0u;
        *(_DWORD *)(a2 + 104) = 1;
      }
      v17 = *(_QWORD *)(a1 + 48);
      sub_20820BDF8(v17, v16);
      sub_20820BDF8(v17, (double *)(a2 + 16));
      sub_20820BDF8(v17, (double *)(a2 + 24));
      sub_20820BDF8(v17, (double *)(a2 + 32));
      v18 = *(_QWORD *)(a1 + 48);
      sub_20820BDF8(v18, (double *)(a2 + 40));
      sub_20820BDF8(v18, (double *)(a2 + 48));
      sub_20820BDF8(v18, (double *)(a2 + 56));
      sub_20820BDF8(v18, (double *)(a2 + 64));
      v11 = *(_QWORD *)(a1 + 48);
      sub_20820BDF8(v11, (double *)(a2 + 72));
      sub_20820BDF8(v11, (double *)(a2 + 80));
      sub_20820BDF8(v11, (double *)(a2 + 88));
      v12 = (double *)(a2 + 96);
LABEL_15:
      sub_20820BDF8(v11, v12);
      break;
    default:
      return;
  }
}

void sub_207EF9E78(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *exception;
  char v31;
  uint64_t v32[27];
  _BYTE v33[8];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  __int128 v46;
  uint64_t v47;
  unsigned __int8 v48;
  uint64_t v49;

  v49 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v32);
    sub_207E0AB10((uint64_t)v33, v32);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v33);
        if (!v48)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v31, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v34;
    *(_BYTE *)(v3 + 64) = 0;
    if (v37)
    {
      v8 = v36;
      *(_OWORD *)(v3 + 40) = v35;
      *(_QWORD *)(v3 + 56) = v8;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v39;
    v10 = v38;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v42)
    {
      v11 = v41;
      *(_OWORD *)(v3 + 96) = v40;
      *(_QWORD *)(v3 + 112) = v11;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v45)
    {
      v12 = v44;
      *(_OWORD *)(v3 + 128) = v43;
      *(_QWORD *)(v3 + 144) = v12;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v48;
    if (v48)
    {
      *(_OWORD *)(v3 + 160) = v46;
      *(_QWORD *)(v3 + 176) = v47;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v46;
    if (!(_QWORD)v46)
      goto LABEL_46;
    v15 = *((_QWORD *)&v46 + 1);
    v16 = (void *)v46;
    if (*((_QWORD *)&v46 + 1) == (_QWORD)v46)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v46;
LABEL_45:
    *((_QWORD *)&v46 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v32);
  sub_207E0AB10((uint64_t)v33, v32);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v31, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v34;
    *(_BYTE *)(v3 + 64) = 0;
    if (v37)
    {
      v17 = v36;
      *(_OWORD *)(v3 + 40) = v35;
      *(_QWORD *)(v3 + 56) = v17;
      v35 = 0uLL;
      v36 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v39;
    v19 = v38;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v42)
    {
      v20 = v41;
      *(_OWORD *)(v3 + 96) = v40;
      *(_QWORD *)(v3 + 112) = v20;
      v40 = 0uLL;
      v41 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v45)
    {
      v21 = v44;
      *(_OWORD *)(v3 + 128) = v43;
      *(_QWORD *)(v3 + 144) = v21;
      v43 = 0uLL;
      v44 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v48;
    if (v48)
    {
      *(_OWORD *)(v3 + 160) = v46;
      *(_QWORD *)(v3 + 176) = v47;
      v46 = 0uLL;
      v47 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v33);
  if (v48)
  {
LABEL_38:
    v14 = v46;
    if (!(_QWORD)v46)
      goto LABEL_46;
    v23 = *((_QWORD *)&v46 + 1);
    v16 = (void *)v46;
    if (*((_QWORD *)&v46 + 1) == (_QWORD)v46)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v45 && SHIBYTE(v44) < 0)
    operator delete((void *)v43);
  if (v42 && SHIBYTE(v41) < 0)
    operator delete((void *)v40);
  if (v37 && SHIBYTE(v36) < 0)
    operator delete((void *)v35);
  sub_207D49CF4((uint64_t)v32);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  v24 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "info";
  *(_QWORD *)(a2 + 96) = 4;
  if (!v24)
    *(_BYTE *)(a2 + 104) = 1;
  sub_207E19198(a2, v4);
  v25 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "value";
  *(_QWORD *)(a2 + 96) = 5;
  if (!v25)
    *(_BYTE *)(a2 + 104) = 1;
  sub_2081F5AC0(a2);
  v26 = *(unsigned __int8 *)(a2 + 104);
  *(_QWORD *)(a2 + 88) = "version";
  *(_QWORD *)(a2 + 96) = 7;
  if (!v26)
    *(_BYTE *)(a2 + 104) = 1;
  v27 = (char *)sub_2081F5D78((uint64_t *)a2);
  ++*(_QWORD *)(a2 + 112);
  v32[0] = 0;
  sub_208097288(v27, v32);
  if (HIDWORD(v32[0]))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24C08F078;
    __cxa_throw(exception, (struct type_info *)&unk_24C08F090, (void (*)(void *))std::exception::~exception);
  }
  sub_207EFA3CC(a2, v3 + 200);
  v28 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(v28 - 8);
  v29 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a2 + 112) = *(_QWORD *)(v29 - 8);
  *(_QWORD *)(a2 + 48) = v28 - 8;
  *(_QWORD *)(a2 + 72) = v29 - 8;
}

void sub_207EFA384(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EFA3CC(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  _QWORD *exception;
  unint64_t v11;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "src_to_dst";
  *(_QWORD *)(a1 + 96) = 10;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  sub_2081F5AC0(a1);
  v5 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "version";
  *(_QWORD *)(a1 + 96) = 7;
  if (!v5)
    *(_BYTE *)(a1 + 104) = 1;
  v6 = (char *)sub_2081F5D78((uint64_t *)a1);
  ++*(_QWORD *)(a1 + 112);
  v11 = 0;
  sub_208097288(v6, &v11);
  if (HIDWORD(v11))
  {
    exception = __cxa_allocate_exception(8uLL);
    *exception = &off_24C08F078;
    __cxa_throw(exception, (struct type_info *)&unk_24C08F090, (void (*)(void *))std::exception::~exception);
  }
  sub_207EFA51C(a1, a2 + 8);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(a1 + 48) = v7 - 8;
  *(_QWORD *)(a1 + 72) = v8 - 8;
  LODWORD(v7) = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "src";
  *(_QWORD *)(a1 + 96) = 3;
  if (!(_DWORD)v7)
    *(_BYTE *)(a1 + 104) = 1;
  sub_207E19A5C((uint64_t *)a1, a2 + 120);
  v9 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "dst";
  *(_QWORD *)(a1 + 96) = 3;
  if (!v9)
    *(_BYTE *)(a1 + 104) = 1;
  sub_207E19A5C((uint64_t *)a1, a2 + 152);
}

void sub_207EFA51C(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  unint64_t v6;
  float *v7;
  int v8;
  unint64_t v9;
  int v10;
  unint64_t v11;
  double *v12;
  int v13;
  unint64_t v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;

  v4 = *(unsigned __int8 *)(a1 + 104);
  *(_QWORD *)(a1 + 88) = "se3_type";
  *(_QWORD *)(a1 + 96) = 8;
  if (!v4)
    *(_BYTE *)(a1 + 104) = 1;
  v25 = (_BYTE *)a2;
  sub_207EFA878((uint64_t *)a1, &v25);
  switch(*(_BYTE *)a2)
  {
    case 1:
      if (*(_DWORD *)(a2 + 104) != 2)
      {
        *(_QWORD *)(a2 + 8) = 0;
        *(_QWORD *)(a2 + 16) = 0;
        *(_QWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 104) = 2;
      }
      v5 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "algebra_r";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v5)
        *(_BYTE *)(a1 + 104) = 1;
      v6 = sub_2081F5D78((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_2081F6B44(v6, (float *)(a2 + 8));
      v7 = (float *)(a2 + 20);
      v8 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "algebra_t";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v8)
        *(_BYTE *)(a1 + 104) = 1;
      v9 = sub_2081F5D78((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_2081F6B44(v9, v7);
      break;
    case 2:
      if (*(_DWORD *)(a2 + 104) != 3)
      {
        *(_OWORD *)(a2 + 24) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)(a2 + 8) = 0u;
        *(_DWORD *)(a2 + 104) = 3;
      }
      v10 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "algebra_r";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v10)
        *(_BYTE *)(a1 + 104) = 1;
      v11 = sub_2081F5D78((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_2081F6C74(v11, (double *)(a2 + 8));
      v12 = (double *)(a2 + 32);
      v13 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "algebra_t";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v13)
        *(_BYTE *)(a1 + 104) = 1;
      v14 = sub_2081F5D78((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_2081F6C74(v14, v12);
      break;
    case 4:
      if (*(_DWORD *)(a2 + 104))
      {
        *(_OWORD *)(a2 + 24) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)(a2 + 8) = 0u;
        *(_DWORD *)(a2 + 104) = 0;
      }
      v15 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "affine3x4";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v15)
        *(_BYTE *)(a1 + 104) = 1;
      sub_2081F5AC0(a1);
      v16 = sub_2081F5D78((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_2081F6B44(v16, (float *)(a2 + 8));
      v17 = sub_2081F5D78((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_2081F6B44(v17, (float *)(a2 + 24));
      v18 = sub_2081F5D78((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_2081F6B44(v18, (float *)(a2 + 40));
      goto LABEL_28;
    case 5:
      if (*(_DWORD *)(a2 + 104) != 1)
      {
        *(_OWORD *)(a2 + 72) = 0u;
        *(_OWORD *)(a2 + 88) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)(a2 + 56) = 0u;
        *(_OWORD *)(a2 + 8) = 0u;
        *(_OWORD *)(a2 + 24) = 0u;
        *(_DWORD *)(a2 + 104) = 1;
      }
      v19 = *(unsigned __int8 *)(a1 + 104);
      *(_QWORD *)(a1 + 88) = "affine3x4";
      *(_QWORD *)(a1 + 96) = 9;
      if (!v19)
        *(_BYTE *)(a1 + 104) = 1;
      sub_2081F5AC0(a1);
      v20 = sub_2081F5D78((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_2081F6C74(v20, (double *)(a2 + 8));
      v21 = sub_2081F5D78((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_2081F6C74(v21, (double *)(a2 + 40));
      v22 = sub_2081F5D78((uint64_t *)a1);
      ++*(_QWORD *)(a1 + 112);
      sub_2081F6C74(v22, (double *)(a2 + 72));
LABEL_28:
      v23 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(v23 - 8);
      v24 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(v24 - 8);
      *(_QWORD *)(a1 + 48) = v23 - 8;
      *(_QWORD *)(a1 + 72) = v24 - 8;
      break;
    default:
      return;
  }
}

void sub_207EFA878(uint64_t *a1, _BYTE **a2)
{
  void **v4;
  int v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *__p[2];
  uint64_t v15;
  char v16;
  __int128 v17;
  uint64_t v18;

  __p[0] = 0;
  __p[1] = 0;
  v15 = 0;
  v4 = (void **)sub_2081F5D78(a1);
  ++a1[14];
  v18 = 0;
  v17 = 0uLL;
  sub_207D21A34(v4, (uint64_t)&v17);
  v15 = v18;
  *(_OWORD *)__p = v17;
  v5 = SHIBYTE(v18);
  v6 = (char *)v17;
  v7 = (char *)operator new(0x118uLL);
  v8 = v7;
  if (v5 >= 0)
    v9 = (char *)__p;
  else
    v9 = v6;
  sub_208215780((uint64_t)v7, v9);
  *(_QWORD *)&v17 = v8;
  v16 = 0;
  sub_207F0A88C((uint64_t *)v8, &v16);
  v10 = v16;
  v11 = MEMORY[0x24BEDB7F0];
  v12 = *MEMORY[0x24BEDB7F0];
  *(_QWORD *)v8 = *MEMORY[0x24BEDB7F0];
  v13 = *(_QWORD *)(v11 + 72);
  *(_QWORD *)&v8[*(_QWORD *)(v12 - 24)] = *(_QWORD *)(v11 + 64);
  *((_QWORD *)v8 + 3) = MEMORY[0x24BEDB848] + 16;
  *((_QWORD *)v8 + 2) = v13;
  if (v8[111] < 0)
    operator delete(*((void **)v8 + 11));
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x20BD027B8](v8 + 128);
  operator delete(v8);
  **a2 = v10;
  if (SHIBYTE(v15) < 0)
    operator delete(__p[0]);
}

void sub_207EFA9BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_2082155DC(&a17);
  if ((a14 & 0x80000000) == 0)
    _Unwind_Resume(a1);
  operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_207EFAA38(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  char v26;
  char v27;
  char v28;
  char v29;
  char v30;
  void *__p;
  uint64_t v32;
  char v33;
  _BYTE v34[8];
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;

  v50 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)&__p);
    sub_207E0AB10((uint64_t)v34, (uint64_t *)&__p);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v34);
        if (!v49)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v30, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v8 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v8;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v40;
    v10 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v11 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v11;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v12 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v12;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v15 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v47;
LABEL_45:
    *((_QWORD *)&v47 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)&__p);
  sub_207E0AB10((uint64_t)v34, (uint64_t *)&__p);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v30, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v35;
    *(_BYTE *)(v3 + 64) = 0;
    if (v38)
    {
      v17 = v37;
      *(_OWORD *)(v3 + 40) = v36;
      *(_QWORD *)(v3 + 56) = v17;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v40;
    v19 = v39;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v43)
    {
      v20 = v42;
      *(_OWORD *)(v3 + 96) = v41;
      *(_QWORD *)(v3 + 112) = v20;
      v41 = 0uLL;
      v42 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v46)
    {
      v21 = v45;
      *(_OWORD *)(v3 + 128) = v44;
      *(_QWORD *)(v3 + 144) = v21;
      v44 = 0uLL;
      v45 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v49;
    if (v49)
    {
      *(_OWORD *)(v3 + 160) = v47;
      *(_QWORD *)(v3 + 176) = v48;
      v47 = 0uLL;
      v48 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v34);
  if (v49)
  {
LABEL_38:
    v14 = v47;
    if (!(_QWORD)v47)
      goto LABEL_46;
    v23 = *((_QWORD *)&v47 + 1);
    v16 = (void *)v47;
    if (*((_QWORD *)&v47 + 1) == (_QWORD)v47)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v46 && SHIBYTE(v45) < 0)
    operator delete((void *)v44);
  if (v43 && SHIBYTE(v42) < 0)
    operator delete((void *)v41);
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  sub_207D49CF4((uint64_t)&__p);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  LODWORD(__p) = 6;
  sub_208209DC8(a2, &__p);
  v24 = __p;
  if (__p >= 6)
    v25 = 6;
  else
    v25 = __p;
  if (v25 < 3)
    sub_207E1B3DC((uint64_t)&__p, a2, v4, v25);
  else
    sub_207E1B5CC(a2, v4, v25);
  if (v24 >= 3 && !*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_20820B068(a2, (uint64_t)&__p);
      if (v33 < 0)
      {
        if (v32 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_92:
          v29 = 0;
          if (v33 < 0)
            goto LABEL_95;
          goto LABEL_81;
        }
      }
      else if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_92;
      }
      v29 = 1;
      if (v33 < 0)
LABEL_95:
        operator delete(__p);
LABEL_81:
      if (*(_BYTE *)(a2 + 131))
        v28 = 0;
      else
        v28 = v29;
    }
    while ((v28 & 1) != 0);
  }
  LODWORD(__p) = 1;
  sub_208209DC8(a2, &__p);
  sub_207EFB054(a2, v3 + 200);
  if (!*(_BYTE *)(a2 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a2 + 16) + *(_QWORD *)(**(_QWORD **)(a2 + 16) - 24) + 32) & 2) != 0)
        return;
      sub_20820B068(a2, (uint64_t)&__p);
      if (v33 < 0)
      {
        if (v32 == 1 && *(unsigned __int8 *)(a2 + 72) == *(unsigned __int8 *)__p)
        {
LABEL_77:
          v27 = 0;
          if (v33 < 0)
            goto LABEL_80;
          goto LABEL_66;
        }
      }
      else if (v33 == 1 && *(unsigned __int8 *)(a2 + 72) == __p)
      {
        goto LABEL_77;
      }
      v27 = 1;
      if (v33 < 0)
LABEL_80:
        operator delete(__p);
LABEL_66:
      if (*(_BYTE *)(a2 + 131))
        v26 = 0;
      else
        v26 = v27;
    }
    while ((v26 & 1) != 0);
  }
}

void sub_207EFB00C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

double sub_207EFB054(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void **v5;
  char v6;
  char v7;
  void **v8;
  double result;
  char v10;
  void *__p[2];
  uint64_t v12;

  v4 = a2 + 8;
  LODWORD(__p[0]) = 1;
  sub_208209DC8(a1, __p);
  sub_207EFB304(a1, v4);
  if (!*(_BYTE *)(a1 + 131))
  {
    do
    {
      if ((*(_BYTE *)(*(_QWORD *)(a1 + 16) + *(_QWORD *)(**(_QWORD **)(a1 + 16) - 24) + 32) & 2) != 0)
        break;
      sub_20820B068(a1, (uint64_t)__p);
      if (SHIBYTE(v12) < 0)
      {
        if (__p[1] == (void *)1 && *(unsigned __int8 *)(a1 + 72) == *(unsigned __int8 *)__p[0])
        {
LABEL_17:
          v7 = 0;
          if (SHIBYTE(v12) < 0)
            goto LABEL_20;
          goto LABEL_6;
        }
      }
      else if (SHIBYTE(v12) == 1 && *(unsigned __int8 *)(a1 + 72) == LOBYTE(__p[0]))
      {
        goto LABEL_17;
      }
      v7 = 1;
      if (SHIBYTE(v12) < 0)
LABEL_20:
        operator delete(__p[0]);
LABEL_6:
      if (*(_BYTE *)(a1 + 131))
        v6 = 0;
      else
        v6 = v7;
    }
    while ((v6 & 1) != 0);
  }
  v5 = (void **)(a2 + 120);
  v10 = 0;
  sub_208209484(a1, &v10);
  if (v10)
  {
    if (*(_BYTE *)(a2 + 144))
    {
      ++*(_QWORD *)(a1 + 80);
      if (!*(_BYTE *)(a1 + 128))
        goto LABEL_28;
    }
    else
    {
      *v5 = 0;
      *(_QWORD *)(a2 + 128) = 0;
      *(_QWORD *)(a2 + 136) = 0;
      *(_BYTE *)(a2 + 144) = 1;
      ++*(_QWORD *)(a1 + 80);
      if (!*(_BYTE *)(a1 + 128))
      {
LABEL_28:
        sub_20820B068(a1, (uint64_t)__p);
        if (*(char *)(a2 + 143) < 0)
          operator delete(*v5);
        *(_OWORD *)v5 = *(_OWORD *)__p;
        *(_QWORD *)(a2 + 136) = v12;
        ++*(_QWORD *)(a1 + 104);
        goto LABEL_31;
      }
    }
    if (*(_BYTE *)(a1 + 131))
    {
      *(_BYTE *)(a1 + 132) = 1;
      goto LABEL_31;
    }
    goto LABEL_28;
  }
  if (*(_BYTE *)(a2 + 144))
  {
    if (*(char *)(a2 + 143) < 0)
      operator delete(*v5);
    *(_BYTE *)(a2 + 144) = 0;
  }
LABEL_31:
  v8 = (void **)(a2 + 152);
  v10 = 0;
  sub_208209484(a1, &v10);
  if (v10)
  {
    if (*(_BYTE *)(a2 + 176))
    {
      ++*(_QWORD *)(a1 + 80);
      if (!*(_BYTE *)(a1 + 128))
        goto LABEL_43;
    }
    else
    {
      *v8 = 0;
      *(_QWORD *)(a2 + 160) = 0;
      *(_QWORD *)(a2 + 168) = 0;
      *(_BYTE *)(a2 + 176) = 1;
      ++*(_QWORD *)(a1 + 80);
      if (!*(_BYTE *)(a1 + 128))
      {
LABEL_43:
        sub_20820B068(a1, (uint64_t)__p);
        if (*(char *)(a2 + 175) < 0)
          operator delete(*v8);
        result = *(double *)__p;
        *(_OWORD *)v8 = *(_OWORD *)__p;
        *(_QWORD *)(a2 + 168) = v12;
        ++*(_QWORD *)(a1 + 104);
        return result;
      }
    }
    if (*(_BYTE *)(a1 + 131))
    {
      *(_BYTE *)(a1 + 132) = 1;
      return result;
    }
    goto LABEL_43;
  }
  if (*(_BYTE *)(a2 + 176))
  {
    if (*(char *)(a2 + 175) < 0)
      operator delete(*v8);
    *(_BYTE *)(a2 + 176) = 0;
  }
  return result;
}

void sub_207EFB304(uint64_t a1, uint64_t a2)
{
  int v4;
  _DWORD *v5;
  _DWORD *v6;
  _QWORD *v7;
  _DWORD *v8;
  _QWORD *v9;
  unsigned __int8 v10;

  v10 = 0;
  sub_208209484(a1, &v10);
  v4 = v10;
  *(_BYTE *)a2 = v10;
  switch(v4)
  {
    case 1:
      v5 = (_DWORD *)(a2 + 8);
      if (*(_DWORD *)(a2 + 104) != 2)
      {
        *(_QWORD *)v5 = 0;
        *(_QWORD *)(a2 + 16) = 0;
        *(_QWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 104) = 2;
      }
      sub_20820A740(a1, v5);
      sub_20820A740(a1, (_DWORD *)(a2 + 12));
      sub_20820A740(a1, (_DWORD *)(a2 + 16));
      sub_20820A740(a1, (_DWORD *)(a2 + 20));
      sub_20820A740(a1, (_DWORD *)(a2 + 24));
      v6 = (_DWORD *)(a2 + 28);
      goto LABEL_11;
    case 2:
      v7 = (_QWORD *)(a2 + 8);
      if (*(_DWORD *)(a2 + 104) != 3)
      {
        *(_OWORD *)(a2 + 24) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)v7 = 0u;
        *(_DWORD *)(a2 + 104) = 3;
      }
      sub_20820A994(a1, v7);
      sub_20820A994(a1, (_QWORD *)(a2 + 16));
      sub_20820A994(a1, (_QWORD *)(a2 + 24));
      sub_20820A994(a1, (_QWORD *)(a2 + 32));
      sub_20820A994(a1, (_QWORD *)(a2 + 40));
      sub_20820A994(a1, (_QWORD *)(a2 + 48));
      break;
    case 4:
      v8 = (_DWORD *)(a2 + 8);
      if (*(_DWORD *)(a2 + 104))
      {
        *(_OWORD *)(a2 + 24) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)v8 = 0u;
        *(_DWORD *)(a2 + 104) = 0;
      }
      sub_20820A740(a1, v8);
      sub_20820A740(a1, (_DWORD *)(a2 + 12));
      sub_20820A740(a1, (_DWORD *)(a2 + 16));
      sub_20820A740(a1, (_DWORD *)(a2 + 20));
      sub_20820A740(a1, (_DWORD *)(a2 + 24));
      sub_20820A740(a1, (_DWORD *)(a2 + 28));
      sub_20820A740(a1, (_DWORD *)(a2 + 32));
      sub_20820A740(a1, (_DWORD *)(a2 + 36));
      sub_20820A740(a1, (_DWORD *)(a2 + 40));
      sub_20820A740(a1, (_DWORD *)(a2 + 44));
      sub_20820A740(a1, (_DWORD *)(a2 + 48));
      v6 = (_DWORD *)(a2 + 52);
LABEL_11:
      sub_20820A740(a1, v6);
      break;
    case 5:
      v9 = (_QWORD *)(a2 + 8);
      if (*(_DWORD *)(a2 + 104) != 1)
      {
        *(_OWORD *)(a2 + 72) = 0u;
        *(_OWORD *)(a2 + 88) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)(a2 + 56) = 0u;
        *(_OWORD *)v9 = 0u;
        *(_OWORD *)(a2 + 24) = 0u;
        *(_DWORD *)(a2 + 104) = 1;
      }
      sub_20820A994(a1, v9);
      sub_20820A994(a1, (_QWORD *)(a2 + 16));
      sub_20820A994(a1, (_QWORD *)(a2 + 24));
      sub_20820A994(a1, (_QWORD *)(a2 + 32));
      sub_20820A994(a1, (_QWORD *)(a2 + 40));
      sub_20820A994(a1, (_QWORD *)(a2 + 48));
      sub_20820A994(a1, (_QWORD *)(a2 + 56));
      sub_20820A994(a1, (_QWORD *)(a2 + 64));
      sub_20820A994(a1, (_QWORD *)(a2 + 72));
      sub_20820A994(a1, (_QWORD *)(a2 + 80));
      sub_20820A994(a1, (_QWORD *)(a2 + 88));
      sub_20820A994(a1, (_QWORD *)(a2 + 96));
      break;
    default:
      return;
  }
}

void sub_207EFB5A8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  char v24;
  uint64_t v25[27];
  _BYTE v26[8];
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  uint64_t v40;
  unsigned __int8 v41;
  uint64_t v42;

  v42 = *MEMORY[0x24BDAC8D0];
  v3 = *a1;
  v4 = *a1 + 16;
  v5 = *(_DWORD *)(*a1 + 192);
  if (!v5)
    goto LABEL_56;
  if (v5 == 1)
  {
    sub_207E370A0(*a1 + 16, (uint64_t)v25);
    sub_207E0AB10((uint64_t)v26, v25);
    v6 = *(unsigned int *)(v3 + 192);
    if ((_DWORD)v6 != -1)
    {
      if (!(_DWORD)v6)
      {
        sub_207E15690(v4, (uint64_t)v26);
        if (!v41)
          goto LABEL_46;
        goto LABEL_22;
      }
      ((void (*)(char *, uint64_t))off_24C0765B0[v6])(&v24, v4);
    }
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v8 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v8;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v9 = v32;
    v10 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v10;
    *(_QWORD *)(v3 + 88) = v9;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v11 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v11;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v12 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v12;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v13 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v13)
      goto LABEL_46;
LABEL_22:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v15 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v15 - 1) < 0)
        operator delete(*(void **)(v15 - 24));
      v15 -= 24;
    }
    while (v15 != v14);
LABEL_44:
    v16 = (void *)v39;
LABEL_45:
    *((_QWORD *)&v39 + 1) = v14;
    operator delete(v16);
    goto LABEL_46;
  }
  if (v5 != 2)
    sub_207CA9F48();
  sub_207E372B8(*a1 + 16, (uint64_t)v25);
  sub_207E0AB10((uint64_t)v26, v25);
  v7 = *(unsigned int *)(v3 + 192);
  if ((_DWORD)v7 == -1)
    goto LABEL_29;
  if ((_DWORD)v7)
  {
    ((void (*)(char *, uint64_t))off_24C0765B0[v7])(&v24, v4);
LABEL_29:
    *(_BYTE *)(v3 + 40) = 0;
    *(_DWORD *)(v3 + 192) = -1;
    *(_OWORD *)(v3 + 24) = v27;
    *(_BYTE *)(v3 + 64) = 0;
    if (v30)
    {
      v17 = v29;
      *(_OWORD *)(v3 + 40) = v28;
      *(_QWORD *)(v3 + 56) = v17;
      v28 = 0uLL;
      v29 = 0;
      *(_BYTE *)(v3 + 64) = 1;
    }
    v18 = v32;
    v19 = v31;
    *(_BYTE *)(v3 + 96) = 0;
    *(_OWORD *)(v3 + 72) = v19;
    *(_QWORD *)(v3 + 88) = v18;
    *(_BYTE *)(v3 + 120) = 0;
    if (v35)
    {
      v20 = v34;
      *(_OWORD *)(v3 + 96) = v33;
      *(_QWORD *)(v3 + 112) = v20;
      v33 = 0uLL;
      v34 = 0;
      *(_BYTE *)(v3 + 120) = 1;
    }
    *(_BYTE *)(v3 + 128) = 0;
    *(_BYTE *)(v3 + 152) = 0;
    if (v38)
    {
      v21 = v37;
      *(_OWORD *)(v3 + 128) = v36;
      *(_QWORD *)(v3 + 144) = v21;
      v36 = 0uLL;
      v37 = 0;
      *(_BYTE *)(v3 + 152) = 1;
    }
    *(_BYTE *)(v3 + 160) = 0;
    *(_BYTE *)(v3 + 184) = 0;
    v22 = v41;
    if (v41)
    {
      *(_OWORD *)(v3 + 160) = v39;
      *(_QWORD *)(v3 + 176) = v40;
      v39 = 0uLL;
      v40 = 0;
      *(_BYTE *)(v3 + 184) = 1;
    }
    *(_DWORD *)(v3 + 192) = 0;
    if (!v22)
      goto LABEL_46;
    goto LABEL_38;
  }
  sub_207E15690(v4, (uint64_t)v26);
  if (v41)
  {
LABEL_38:
    v14 = v39;
    if (!(_QWORD)v39)
      goto LABEL_46;
    v23 = *((_QWORD *)&v39 + 1);
    v16 = (void *)v39;
    if (*((_QWORD *)&v39 + 1) == (_QWORD)v39)
      goto LABEL_45;
    do
    {
      if (*(char *)(v23 - 1) < 0)
        operator delete(*(void **)(v23 - 24));
      v23 -= 24;
    }
    while (v23 != v14);
    goto LABEL_44;
  }
LABEL_46:
  if (v38 && SHIBYTE(v37) < 0)
    operator delete((void *)v36);
  if (v35 && SHIBYTE(v34) < 0)
    operator delete((void *)v33);
  if (v30 && SHIBYTE(v29) < 0)
    operator delete((void *)v28);
  sub_207D49CF4((uint64_t)v25);
  if (*(_DWORD *)(v3 + 192))
    sub_207CA9F48();
LABEL_56:
  sub_207E1CD58((uint64_t)v25, a2, v4);
  sub_207EFBA1C((uint64_t)v25, a2, v3 + 200);
}

void sub_207EFB9D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

void sub_207EFBA1C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  std::logic_error *exception;
  char v12;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_207CA4068(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  a2[6] = v3 + 4;
  sub_208072ECC(a2);
  sub_207EFBAF8((uint64_t)&v12, a2, a3 + 8);
  sub_207E1D3E4(a2, a3 + 120);
  sub_207E1D3E4(a2, a3 + 152);
  v9 = a2[12];
  v10 = a2[9];
  a2[6] = *(_QWORD *)(v9 - 8) + *(_QWORD *)(v10 - 8) + 8;
  a2[9] = v10 - 8;
  a2[12] = v9 - 8;
}

void sub_207EFBAE4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_207EFBAF8(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t v9;
  uint64_t v10;
  std::logic_error *exception;

  v3 = a2[6];
  v4 = a2[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 3)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_207CA4068(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  a2[6] = v3 + 4;
  sub_208072ECC(a2);
  sub_207EFBBC8(a2, a3);
  v9 = a2[12];
  v10 = a2[9];
  a2[6] = *(_QWORD *)(v9 - 8) + *(_QWORD *)(v10 - 8) + 8;
  a2[9] = v10 - 8;
  a2[12] = v9 - 8;
}

void sub_207EFBBB4(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

double sub_207EFBBC8(_QWORD *a1, uint64_t a2)
{
  unint64_t v2;
  int v3;
  double result;
  std::logic_error *exception;
  _OWORD *v6;

  v2 = a1[6];
  if (a1[7] <= v2)
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_207CA4068(exception, "Not enough data to read");
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  v3 = *(unsigned __int8 *)(a1[3] + v2);
  a1[6] = v2 + 1;
  *(_BYTE *)a2 = v3;
  switch(v3)
  {
    case 1:
      sub_207EFBCFC(a1, a2);
      break;
    case 2:
      *(_QWORD *)&result = sub_207EFBE14(a1, a2).n128_u64[0];
      break;
    case 4:
      if (*(_DWORD *)(a2 + 104))
      {
        *(_OWORD *)(a2 + 24) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)(a2 + 8) = 0u;
        *(_DWORD *)(a2 + 104) = 0;
      }
      v6 = (_OWORD *)(a2 + 8);
      *(_QWORD *)&result = sub_207EFBF30(a1, &v6).n128_u64[0];
      break;
    case 5:
      if (*(_DWORD *)(a2 + 104) != 1)
      {
        *(_OWORD *)(a2 + 72) = 0u;
        *(_OWORD *)(a2 + 88) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *(_OWORD *)(a2 + 56) = 0u;
        *(_OWORD *)(a2 + 8) = 0u;
        *(_OWORD *)(a2 + 24) = 0u;
        *(_DWORD *)(a2 + 104) = 1;
      }
      v6 = (_OWORD *)(a2 + 8);
      *(_QWORD *)&result = sub_207EFC00C(a1, &v6).n128_u64[0];
      break;
    default:
      return result;
  }
  return result;
}

void sub_207EFBCE8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_207EFBCFC(_QWORD *result, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  std::logic_error *exception;

  v2 = (_QWORD *)(a2 + 8);
  if (*(_DWORD *)(a2 + 104) != 2)
  {
    *v2 = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)(a2 + 24) = 0;
    *(_DWORD *)(a2 + 104) = 2;
  }
  v3 = result[6];
  v4 = result[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 0xB)
    goto LABEL_10;
  v7 = (uint64_t *)(result[3] + v3);
  v8 = *v7;
  *(_DWORD *)(a2 + 16) = *((_DWORD *)v7 + 2);
  *v2 = v8;
  v9 = result[7];
  v10 = result[6] + 12;
  result[6] = v10;
  v5 = v9 >= v10;
  v11 = v9 - v10;
  if (!v5)
    v11 = 0;
  if (v11 <= 0xB)
  {
LABEL_10:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_207CA4068(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  v12 = result[3] + v10;
  v13 = *(_QWORD *)v12;
  *(_DWORD *)(a2 + 28) = *(_DWORD *)(v12 + 8);
  *(_QWORD *)(a2 + 20) = v13;
  result[6] += 12;
  return result;
}

void sub_207EFBDEC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_207EFBE00(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

__n128 sub_207EFBE14(_QWORD *a1, uint64_t a2)
{
  _OWORD *v2;
  unint64_t v3;
  unint64_t v4;
  BOOL v5;
  unint64_t v6;
  __int128 *v7;
  __int128 v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  __n128 *v12;
  __n128 result;
  std::logic_error *exception;

  v2 = (_OWORD *)(a2 + 8);
  if (*(_DWORD *)(a2 + 104) != 3)
  {
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 40) = 0u;
    *v2 = 0u;
    *(_DWORD *)(a2 + 104) = 3;
  }
  v3 = a1[6];
  v4 = a1[7];
  v5 = v4 >= v3;
  v6 = v4 - v3;
  if (!v5)
    v6 = 0;
  if (v6 <= 0x17)
    goto LABEL_10;
  v7 = (__int128 *)(a1[3] + v3);
  v8 = *v7;
  *(_QWORD *)(a2 + 24) = *((_QWORD *)v7 + 2);
  *v2 = v8;
  v9 = a1[7];
  v10 = a1[6] + 24;
  a1[6] = v10;
  v5 = v9 >= v10;
  v11 = v9 - v10;
  if (!v5)
    v11 = 0;
  if (v11 <= 0x17)
  {
LABEL_10:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_207CA4068(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  v12 = (__n128 *)(a1[3] + v10);
  result = *v12;
  *(_QWORD *)(a2 + 48) = v12[1].n128_u64[0];
  *(__n128 *)(a2 + 32) = result;
  a1[6] += 24;
  return result;
}

void sub_207EFBF08(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_207EFBF1C(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

__n128 sub_207EFBF30(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  _OWORD *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __n128 result;
  std::logic_error *exception;

  v3 = a1[6];
  v2 = a1[7];
  v4 = v2 >= v3;
  v5 = v2 - v3;
  if (!v4)
    v5 = 0;
  if (v5 <= 0xF)
    goto LABEL_11;
  v6 = (_OWORD *)*a2;
  *(_OWORD *)*a2 = *(_OWORD *)(a1[3] + v3);
  v7 = a1[7];
  v8 = a1[6] + 16;
  a1[6] = v8;
  v4 = v7 >= v8;
  v9 = v7 - v8;
  if (!v4)
    v9 = 0;
  if (v9 < 0x10)
    goto LABEL_11;
  v6[1] = *(_OWORD *)(a1[3] + v8);
  v10 = a1[7];
  v11 = a1[6] + 16;
  a1[6] = v11;
  v4 = v10 >= v11;
  v12 = v10 - v11;
  if (!v4)
    v12 = 0;
  if (v12 < 0x10)
  {
LABEL_11:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_207CA4068(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  result = *(__n128 *)(a1[3] + v11);
  v6[2] = result;
  a1[6] += 16;
  return result;
}

void sub_207EFBFF8(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

__n128 sub_207EFC00C(_QWORD *a1, _OWORD **a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  unint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  __int128 v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD *v12;
  __int128 v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __n128 result;
  __int128 v19;
  std::logic_error *exception;

  v3 = a1[6];
  v2 = a1[7];
  v4 = v2 >= v3;
  v5 = v2 - v3;
  if (!v4)
    v5 = 0;
  if (v5 <= 0x1F)
    goto LABEL_11;
  v6 = *a2;
  v7 = (_OWORD *)(a1[3] + v3);
  v8 = v7[1];
  *v6 = *v7;
  v6[1] = v8;
  v9 = a1[7];
  v10 = a1[6] + 32;
  a1[6] = v10;
  v4 = v9 >= v10;
  v11 = v9 - v10;
  if (!v4)
    v11 = 0;
  if (v11 < 0x20)
    goto LABEL_11;
  v12 = (_OWORD *)(a1[3] + v10);
  v13 = v12[1];
  v6[2] = *v12;
  v6[3] = v13;
  v14 = a1[7];
  v15 = a1[6] + 32;
  a1[6] = v15;
  v4 = v14 >= v15;
  v16 = v14 - v15;
  if (!v4)
    v16 = 0;
  if (v16 < 0x20)
  {
LABEL_11:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    sub_207CA4068(exception, "Not enough data to read span");
    __cxa_throw(exception, (struct type_info *)off_24C06DDA8, MEMORY[0x24BEDAB00]);
  }
  v17 = a1[3] + v15;
  result = *(__n128 *)v17;
  v19 = *(_OWORD *)(v17 + 16);
  v6[4] = *(_OWORD *)v17;
  v6[5] = v19;
  a1[6] += 32;
  return result;
}

void sub_207EFC0E0(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_207EFC0F4(int *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  unsigned int v7;
  __int128 *v8;
  unsigned int v9;

  v5 = *a1;
  if (*a1 == 2)
  {
    v9 = 1;
    (*(void (**)(uint64_t *, unsigned int *))(*a2 + 104))(a2, &v9);
    if (v9 >= 2)
    {
      v7 = v9;
      v8 = sub_207EFC1E0();
      sub_208212838((std::string *)v8, v7, 1u);
    }
    v5 = *a1;
  }
  if (v5 <= 0)
  {
    sub_207EFC3DC(a2, a3);
  }
  else
  {
    (*(void (**)(uint64_t *))(*a2 + 16))(a2);
    sub_207EFC3DC(a2, a3);
    (*(void (**)(uint64_t *))(*a2 + 24))(a2);
  }
}

__int128 *sub_207EFC1E0()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D450);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D450))
    return &xmmword_25452D438;
  v2 = (char *)sub_207EFC2BC();
  if (v2[23] < 0)
  {
    sub_207CA40D8(&xmmword_25452D438, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_25452D448 = *((_QWORD *)v2 + 2);
    xmmword_25452D438 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D438, &dword_207C77000);
  __cxa_guard_release(&qword_25452D450);
  return &xmmword_25452D438;
}

void sub_207EFC2A4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D450);
  _Unwind_Resume(a1);
}

void *sub_207EFC2BC()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D470);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25452D470))
  {
    sub_2082159F8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::Transform3Sample]", qword_25452D458);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452D458, &dword_207C77000);
    __cxa_guard_release(&qword_25452D470);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_25452D490);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D490))
    return &unk_25452D478;
  sub_208215C6C((uint64_t)qword_25452D458, (uint64_t)&unk_25452D478);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_25452D478, &dword_207C77000);
  __cxa_guard_release(&qword_25452D490);
  return &unk_25452D478;
}

void sub_207EFC3AC(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D490);
  _Unwind_Resume(a1);
}

void sub_207EFC3C4(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D470);
  _Unwind_Resume(a1);
}

void sub_207EFC3DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void **v6;
  void **v7;
  uint64_t v8;
  int v9;
  char v10;
  char v11;

  v4 = a2 + 8;
  v5 = *a1;
  v8 = a1[1];
  v9 = 1;
  (*(void (**)(uint64_t *, int *))(v5 + 104))(a1, &v9);
  if ((int)v8 < 1)
    sub_207EFC844(a1, v4);
  else
    sub_207EFC55C((int *)&v8, a1, v4);
  v6 = (void **)(a2 + 120);
  v10 = 0;
  (*(void (**)(uint64_t *, char *))(*a1 + 80))(a1, &v10);
  if (v10)
  {
    if (!*(_BYTE *)(a2 + 144))
    {
      *v6 = 0;
      *(_QWORD *)(a2 + 128) = 0;
      *(_QWORD *)(a2 + 136) = 0;
      *(_BYTE *)(a2 + 144) = 1;
    }
    (*(void (**)(uint64_t *, uint64_t))(*a1 + 144))(a1, a2 + 120);
  }
  else if (*(_BYTE *)(a2 + 144))
  {
    if (*(char *)(a2 + 143) < 0)
      operator delete(*v6);
    *(_BYTE *)(a2 + 144) = 0;
  }
  v7 = (void **)(a2 + 152);
  v11 = 0;
  (*(void (**)(uint64_t *, char *))(*a1 + 80))(a1, &v11);
  if (v11)
  {
    if (!*(_BYTE *)(a2 + 176))
    {
      *v7 = 0;
      *(_QWORD *)(a2 + 160) = 0;
      *(_QWORD *)(a2 + 168) = 0;
      *(_BYTE *)(a2 + 176) = 1;
    }
    (*(void (**)(uint64_t *, uint64_t))(*a1 + 144))(a1, a2 + 152);
  }
  else if (*(_BYTE *)(a2 + 176))
  {
    if (*(char *)(a2 + 175) < 0)
      operator delete(*v7);
    *(_BYTE *)(a2 + 176) = 0;
  }
}

void sub_207EFC55C(int *a1, _BYTE *a2, uint64_t a3)
{
  int v5;
  unsigned int v7;
  __int128 *v8;
  unsigned int v9;

  v5 = *a1;
  if (*a1 == 2)
  {
    v9 = 1;
    (*(void (**)(_BYTE *, unsigned int *))(*(_QWORD *)a2 + 104))(a2, &v9);
    if (v9 >= 2)
    {
      v7 = v9;
      v8 = sub_207EFC648();
      sub_208212838((std::string *)v8, v7, 1u);
    }
    v5 = *a1;
  }
  if (v5 <= 0)
  {
    sub_207EFC844(a2, a3);
  }
  else
  {
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 16))(a2);
    sub_207EFC844(a2, a3);
    (*(void (**)(_BYTE *))(*(_QWORD *)a2 + 24))(a2);
  }
}

__int128 *sub_207EFC648()
{
  unsigned __int8 v0;
  char *v2;
  __int128 v3;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D4B0);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D4B0))
    return &xmmword_25452D498;
  v2 = (char *)sub_207EFC724();
  if (v2[23] < 0)
  {
    sub_207CA40D8(&xmmword_25452D498, *(void **)v2, *((_QWORD *)v2 + 1));
  }
  else
  {
    v3 = *(_OWORD *)v2;
    qword_25452D4A8 = *((_QWORD *)v2 + 2);
    xmmword_25452D498 = v3;
  }
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &xmmword_25452D498, &dword_207C77000);
  __cxa_guard_release(&qword_25452D4B0);
  return &xmmword_25452D498;
}

void sub_207EFC70C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D4B0);
  _Unwind_Resume(a1);
}

void *sub_207EFC724()
{
  unsigned __int8 v0;
  unsigned __int8 v1;

  v0 = atomic_load((unsigned __int8 *)&qword_25452D4D0);
  if ((v0 & 1) == 0 && __cxa_guard_acquire(&qword_25452D4D0))
  {
    sub_2082159F8("static std::string cv3d::esn::TypeNameHelpers::PrettyArgName() [T = cv3d::kit::viz::SE3Sample]", qword_25452D4B8);
    __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], qword_25452D4B8, &dword_207C77000);
    __cxa_guard_release(&qword_25452D4D0);
  }
  v1 = atomic_load((unsigned __int8 *)&qword_25452D4F0);
  if ((v1 & 1) != 0 || !__cxa_guard_acquire(&qword_25452D4F0))
    return &unk_25452D4D8;
  sub_208215C6C((uint64_t)qword_25452D4B8, (uint64_t)&unk_25452D4D8);
  __cxa_atexit((void (*)(void *))MEMORY[0x24BEDACF0], &unk_25452D4D8, &dword_207C77000);
  __cxa_guard_release(&qword_25452D4F0);
  return &unk_25452D4D8;
}

void sub_207EFC814(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D4F0);
  _Unwind_Resume(a1);
}

void sub_207EFC82C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_25452D4D0);
  _Unwind_Resume(a1);
}

void sub_207EFC844(_BYTE *a1, uint64_t a2)
{
  _QWORD *v4;
  _OWORD *v5;
  _BYTE *v6;

  v6 = (_BYTE *)a2;
  sub_207EFCC70(a1, &v6);
  switch(*(_BYTE *)a2)
  {
    case 1:
      v4 = (_QWORD *)(a2 + 8);
      if (*(_DWORD *)(a2 + 104) != 2)
      {
        *v4 = 0;
        *(_QWORD *)(a2 + 16) = 0;
        *(_QWORD *)(a2 + 24) = 0;
        *(_DWORD *)(a2 + 104) = 2;
      }
      (*(void (**)(_BYTE *, _QWORD *))(*(_QWORD *)a1 + 128))(a1, v4);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 12);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 16);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 20);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 24);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 28);
      break;
    case 2:
      v5 = (_OWORD *)(a2 + 8);
      if (*(_DWORD *)(a2 + 104) != 3)
      {
        *(_OWORD *)(a2 + 24) = 0u;
        *(_OWORD *)(a2 + 40) = 0u;
        *v5 = 0u;
        *(_DWORD *)(a2 + 104) = 3;
      }
      (*(void (**)(_BYTE *, _OWORD *))(*(_QWORD *)a1 + 136))(a1, v5);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 16);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 24);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 32);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 40);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 48);
      break;
    case 4:
      sub_207EFCA1C((uint64_t)a1, a2);
      break;
    case 5:
      sub_207EFCB40((uint64_t)a1, a2);
      break;
    default:
      return;
  }
}

uint64_t sub_207EFCA1C(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;

  v4 = (_OWORD *)(a2 + 8);
  if (*(_DWORD *)(a2 + 104))
  {
    v4[1] = 0u;
    v4[2] = 0u;
    *v4 = 0u;
    *(_DWORD *)(a2 + 104) = 0;
  }
  (*(void (**)(uint64_t, _OWORD *))(*(_QWORD *)a1 + 128))(a1, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 12);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 16);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 32);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 36);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 44);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 48);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 128))(a1, a2 + 52);
}

uint64_t sub_207EFCB40(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;

  v4 = (_OWORD *)(a2 + 8);
  if (*(_DWORD *)(a2 + 104) != 1)
  {
    v4[4] = 0u;
    v4[5] = 0u;
    v4[2] = 0u;
    v4[3] = 0u;
    *v4 = 0u;
    v4[1] = 0u;
    *(_DWORD *)(a2 + 104) = 1;
  }
  (*(void (**)(uint64_t, _OWORD *))(*(_QWORD *)a1 + 136))(a1, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 16);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 24);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 32);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 48);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 56);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 64);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 72);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 88);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)a1 + 136))(a1, a2 + 96);
}

void sub_207EFCC70(_BYTE *a1, _BYTE **a2)
{
  int v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *__p[2];
  uint64_t v13;
  char v14;
  char *v15;

  if ((a1[12] & 2) != 0)
  {
    __p[0] = 0;
    __p[1] = 0;
    v13 = 0;
    (*(void (**)(_BYTE *, void **))(*(_QWORD *)a1 + 144))(a1, __p);
    v3 = SHIBYTE(v13);
    v4 = (char *)__p[0];
    v5 = (char *)operator new(0x118uLL);
    v6 = v5;
    if (v3 >= 0)
      v7 = (char *)__p;
    else
      v7 = v4;
    sub_208215780((uint64_t)v5, v7);
    v15 = v6;
    v14 = 0;
    sub_207F0A88C((uint64_t *)v6, &v14);
    v8 = v14;
    v9 = MEMORY[0x24BEDB7F0];
    v10 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v6 = *MEMORY[0x24BEDB7F0];
    v11 = *(_QWORD *)(v9 + 72);
    *(_QWORD *)&v6[*(_QWORD *)(v10 - 24)] = *(_QWORD *)(v9 + 64);
    *((_QWORD *)v6 + 3) = MEMORY[0x24BEDB848] + 16;
    *((_QWORD *)v6 + 2) = v11;
    if (v6[111] < 0)
      operator delete(*((void **)v6 + 11));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD027B8](v6 + 128);
    operator delete(v6);
    **a2 = v8;
    if (SHIBYTE(v13) < 0)
      operator delete(__p[0]);
  }
  else
  {
    LOBYTE(__p[0]) = 0;
    (*(void (**)(_BYTE *, void **))(*(_QWORD *)a1 + 80))(a1, __p);
    **a2 = __p[0];
  }
}

void sub_207EFCDB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17)
{
  sub_2082155DC(&a17);
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

uint64_t *sub_207EFCDF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  unsigned __int8 *v11;
  unsigned __int8 v12;
  int v13;
  int v14;
  _BYTE *v15;
  size_t v16;
  uint64_t v17;
  size_t v18;
  unint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  unsigned __int8 *v23;
  _QWORD *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  const std::locale::facet *v29;
  std::locale v30;
  char v31;

  MEMORY[0x20BD02200](&v31, a1, 0);
  if (!v31)
    return a1;
  if (*(char *)(a2 + 23) < 0)
  {
    **(_BYTE **)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
  }
  else
  {
    *(_BYTE *)a2 = 0;
    *(_BYTE *)(a2 + 23) = 0;
  }
  v4 = *(_QWORD *)(*a1 - 24);
  v5 = *(uint64_t *)((char *)a1 + v4 + 24);
  if (v5 <= 1)
    v6 = 1;
  else
    v6 = *(uint64_t *)((char *)a1 + v4 + 24);
  std::ios_base::getloc((const std::ios_base *)((char *)a1 + v4));
  v29 = std::locale::use_facet(&v30, MEMORY[0x24BEDB350]);
  std::locale::~locale(&v30);
  v7 = 0;
  v8 = a1 + 5;
  if (v5 >= 1)
    v9 = v6;
  else
    v9 = 0x7FFFFFFFFFFFFFF7;
  while (1)
  {
    v10 = *(_QWORD **)((char *)v8 + *(_QWORD *)(*a1 - 24));
    v11 = (unsigned __int8 *)v10[3];
    if (v11 == (unsigned __int8 *)v10[4])
      break;
    v12 = *v11;
LABEL_16:
    if ((v12 & 0x80) == 0 && (*((_DWORD *)&v29[1].~facet + v12) & 0x4000) != 0)
    {
      v26 = 0;
      goto LABEL_44;
    }
    v14 = *(char *)(a2 + 23);
    if (v14 < 0)
    {
      v17 = *(_QWORD *)(a2 + 16) & 0x7FFFFFFFFFFFFFFFLL;
      v16 = v17 - 1;
      if (*(_QWORD *)(a2 + 8) == v17 - 1)
      {
        if (v17 == 0x7FFFFFFFFFFFFFF8)
          sub_207C95C50();
        v15 = *(_BYTE **)a2;
        v18 = 0x7FFFFFFFFFFFFFF7;
        if (v16 <= 0x3FFFFFFFFFFFFFF2)
        {
LABEL_24:
          if (v16 + 1 > 2 * v16)
            v19 = v16 + 1;
          else
            v19 = 2 * v16;
          v20 = (v19 & 0x7FFFFFFFFFFFFFF8) + 8;
          if ((v19 | 7) != 0x17)
            v20 = v19 | 7;
          if (v19 >= 0x17)
            v18 = v20 + 1;
          else
            v18 = 23;
        }
        v21 = operator new(v18);
        v22 = v21;
        if (!v16 || (memmove(v21, v15, v16), v16 != 22))
          operator delete(v15);
        *(_QWORD *)a2 = v22;
        *(_QWORD *)(a2 + 16) = v18 | 0x8000000000000000;
      }
      else
      {
        v22 = *(_BYTE **)a2;
        v16 = *(_QWORD *)(a2 + 8);
      }
      *(_QWORD *)(a2 + 8) = v16 + 1;
      goto LABEL_39;
    }
    if (*(_BYTE *)(a2 + 23) == 22)
    {
      v15 = (_BYTE *)a2;
      v16 = 22;
      goto LABEL_24;
    }
    v16 = *(unsigned __int8 *)(a2 + 23);
    *(_BYTE *)(a2 + 23) = (v14 + 1) & 0x7F;
    v22 = (_BYTE *)a2;
LABEL_39:
    v23 = &v22[v16];
    *v23 = v12;
    v23[1] = 0;
    v24 = *(_QWORD **)((char *)v8 + *(_QWORD *)(*a1 - 24));
    v25 = v24[3];
    if (v25 == v24[4])
      (*(void (**)(_QWORD *))(*v24 + 80))(v24);
    else
      v24[3] = v25 + 1;
    if (v9 == ++v7)
    {
      v26 = 0;
      v27 = *a1;
      *(uint64_t *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 24) = 0;
      goto LABEL_46;
    }
  }
  v13 = (*(uint64_t (**)(_QWORD *))(*v10 + 72))(v10);
  v12 = v13;
  if (v13 != -1)
    goto LABEL_16;
  v26 = 2;
LABEL_44:
  v27 = *a1;
  *(uint64_t *)((char *)a1 + *(_QWORD *)(*a1 - 24) + 24) = 0;
  if (!v7)
    v26 |= 4u;
LABEL_46:
  std::ios_base::clear((std::ios_base *)((char *)a1 + *(_QWORD *)(v27 - 24)), *(_DWORD *)((char *)a1 + *(_QWORD *)(v27 - 24) + 32) | v26);
  return a1;
}

void sub_207EFD0B8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::locale a11)
{
  __break(1u);
}

void sub_207EFD124(_Unwind_Exception *a1)
{
  __cxa_end_catch();
  _Unwind_Resume(a1);
}

uint64_t sub_207EFD138(uint64_t a1)
{
  char *v2;
  char *v3;
  std::__shared_weak_count *v4;
  char *v5;
  char *v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  std::__shared_weak_count *v10;

  while (1)
  {
    v3 = *(char **)(a1 + 96);
    v2 = *(char **)(a1 + 104);
    if (v3 == v2)
      break;
    sub_207EFD210(a1, *((_QWORD *)v2 - 2));
  }
  v4 = *(std::__shared_weak_count **)(a1 + 128);
  if (v4)
  {
    std::__shared_weak_count::__release_weak(v4);
    v3 = *(char **)(a1 + 96);
  }
  if (v3)
  {
    v5 = *(char **)(a1 + 104);
    v6 = v3;
    if (v5 != v3)
    {
      do
      {
        v7 = (std::__shared_weak_count *)*((_QWORD *)v5 - 1);
        if (v7)
        {
          p_shared_owners = (unint64_t *)&v7->__shared_owners_;
          do
            v9 = __ldaxr(p_shared_owners);
          while (__stlxr(v9 - 1, p_shared_owners));
          if (!v9)
          {
            ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
            std::__shared_weak_count::__release_weak(v7);
          }
        }
        v5 -= 16;
      }
      while (v5 != v3);
      v6 = *(char **)(a1 + 96);
    }
    *(_QWORD *)(a1 + 104) = v3;
    operator delete(v6);
  }
  std::mutex::~mutex((std::mutex *)(a1 + 32));
  v10 = *(std::__shared_weak_count **)(a1 + 24);
  if (v10)
    std::__shared_weak_count::__release_weak(v10);
  return a1;
}

uint64_t sub_207EFD210(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  __int128 v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;

  v4 = *(_QWORD **)(a1 + 96);
  v3 = *(_QWORD **)(a1 + 104);
  if (v4 != v3)
  {
    while (*v4 != a2)
    {
      v4 += 2;
      if (v4 == v3)
        return 0;
    }
  }
  if (v4 == v3)
    return 0;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)a2 + 32))(a2, a1);
  v5 = v4 + 2;
  v6 = *(_QWORD **)(a1 + 104);
  if (v4 + 2 != v6)
  {
    do
    {
      v7 = *(_OWORD *)v5;
      *v5 = 0;
      v5[1] = 0;
      v8 = (std::__shared_weak_count *)v4[1];
      *(_OWORD *)v4 = v7;
      if (v8)
      {
        p_shared_owners = (unint64_t *)&v8->__shared_owners_;
        do
          v10 = __ldaxr(p_shared_owners);
        while (__stlxr(v10 - 1, p_shared_owners));
        if (!v10)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
      }
      v5 += 2;
      v4 += 2;
    }
    while (v5 != v6);
    v5 = *(_QWORD **)(a1 + 104);
  }
  while (v5 != v4)
  {
    v12 = (std::__shared_weak_count *)*(v5 - 1);
    if (v12)
    {
      v13 = (unint64_t *)&v12->__shared_owners_;
      do
        v14 = __ldaxr(v13);
      while (__stlxr(v14 - 1, v13));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
        std::__shared_weak_count::__release_weak(v12);
      }
    }
    v5 -= 2;
  }
  *(_QWORD *)(a1 + 104) = v4;
  return 1;
}

uint64_t sub_207EFD360(uint64_t a1)
{
  return sub_207EFD138(a1 - 8);
}

void sub_207EFD368(uint64_t a1)
{
  void *v1;

  v1 = (void *)sub_207EFD138(a1);
  operator delete(v1);
}

void sub_207EFD37C(uint64_t a1)
{
  void *v1;

  v1 = (void *)sub_207EFD138(a1 - 8);
  operator delete(v1);
}

void sub_207EFD394(uint64_t **a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v6;
  std::__shared_weak_count *v7;
  uint64_t v8;
  char *v9;
  unint64_t *p_shared_weak_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  std::__shared_weak_count *v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  unint64_t *v27;
  unint64_t v28;
  _QWORD *v29;
  unint64_t *v30;
  unint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  std::__shared_weak_count *v36;
  std::__shared_weak_count *v37;

  v6 = operator new(0xA0uLL);
  v8 = *a2;
  v7 = (std::__shared_weak_count *)a2[1];
  v6[1] = 0;
  v6[2] = 0;
  *v6 = off_24C078CA8;
  v9 = (char *)(v6 + 3);
  if (v7)
  {
    p_shared_weak_owners = (unint64_t *)&v7->__shared_weak_owners_;
    do
      v11 = __ldxr(p_shared_weak_owners);
    while (__stxr(v11 + 1, p_shared_weak_owners));
  }
  v6[3] = off_24C078B38;
  v6[4] = &unk_24C078B78;
  v6[5] = 0;
  v6[6] = 0;
  v6[7] = 850045863;
  *((_OWORD *)v6 + 4) = 0u;
  *((_OWORD *)v6 + 5) = 0u;
  *((_OWORD *)v6 + 6) = 0u;
  *((_OWORD *)v6 + 7) = 0u;
  *((_OWORD *)v6 + 8) = 0u;
  *((_OWORD *)v6 + 9) = 0u;
  if (v7)
  {
    v12 = (unint64_t *)&v7->__shared_weak_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v6[18] = v8;
    v6[19] = v7;
    std::__shared_weak_count::__release_weak(v7);
  }
  else
  {
    v6[18] = v8;
    v6[19] = 0;
  }
  *a3 = v9;
  a3[1] = v6;
  v14 = v6 + 2;
  do
    v15 = __ldxr(v14);
  while (__stxr(v15 + 1, v14));
  v6[5] = v9;
  v6[6] = v6;
  v16 = *a1;
  v17 = a1[1];
  while (v16 != v17)
  {
    v18 = *v16;
    v19 = (std::__shared_weak_count *)v16[1];
    v37 = v19;
    if (v19)
    {
      p_shared_owners = (unint64_t *)&v19->__shared_owners_;
      do
        v21 = __ldxr(p_shared_owners);
      while (__stxr(v21 + 1, p_shared_owners));
      v22 = (_QWORD *)*a3;
      v36 = v19;
      do
        v23 = __ldxr(p_shared_owners);
      while (__stxr(v23 + 1, p_shared_owners));
      v35 = v18;
      v26 = (uint64_t *)v22[12];
      v25 = (uint64_t *)v22[13];
      v24 = (uint64_t)(v22 + 12);
      if (v26 != v25)
      {
LABEL_22:
        while (*v26 != v18)
        {
          v26 += 2;
          if (v26 == v25)
          {
            v26 = v25;
            break;
          }
        }
      }
    }
    else
    {
      v22 = (_QWORD *)*a3;
      v35 = *v16;
      v36 = 0;
      v26 = *(uint64_t **)(*a3 + 96);
      v25 = *(uint64_t **)(*a3 + 104);
      v24 = *a3 + 96;
      if (v26 != v25)
        goto LABEL_22;
    }
    if (v26 == v25)
    {
      if ((unint64_t)v25 >= v22[14])
      {
        v29 = sub_207EFDCE8(v24, v18, (uint64_t)v19);
        v18 = v35;
      }
      else
      {
        *v25 = v18;
        v25[1] = (uint64_t)v19;
        if (v19)
        {
          v27 = (unint64_t *)&v19->__shared_owners_;
          do
            v28 = __ldxr(v27);
          while (__stxr(v28 + 1, v27));
        }
        v29 = v25 + 2;
      }
      v22[13] = v29;
      (*(void (**)(uint64_t, _QWORD *))(*(_QWORD *)v18 + 24))(v18, v22);
      v19 = v36;
      if (!v36)
        goto LABEL_38;
    }
    else if (!v19)
    {
      goto LABEL_38;
    }
    v30 = (unint64_t *)&v19->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v19->__on_zero_shared)(v19);
      std::__shared_weak_count::__release_weak(v19);
      v32 = v37;
      if (!v37)
        goto LABEL_12;
      goto LABEL_39;
    }
LABEL_38:
    v32 = v37;
    if (!v37)
      goto LABEL_12;
LABEL_39:
    v33 = (unint64_t *)&v32->__shared_owners_;
    do
      v34 = __ldaxr(v33);
    while (__stlxr(v34 - 1, v33));
    if (!v34)
    {
      ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
      std::__shared_weak_count::__release_weak(v32);
    }
LABEL_12:
    v16 += 2;
  }
}

void sub_207EFD5FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  uint64_t v11;

  sub_207C99D78((uint64_t)&a9);
  sub_207C99D78((uint64_t)&a11);
  sub_207C99D78(v11);
  _Unwind_Resume(a1);
}

BOOL sub_207EFD620(uint64_t a1, uint64_t *a2)
{
  std::mutex *v4;
  std::__shared_weak_count *v5;
  uint64_t v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  unint64_t *v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t *v14;
  unint64_t v15;

  v4 = (std::mutex *)(a1 + 32);
  std::mutex::lock((std::mutex *)(a1 + 32));
  v6 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v8 = __ldxr(p_shared_owners);
    while (__stxr(v8 + 1, p_shared_owners));
  }
  v9 = *(uint64_t **)(a1 + 96);
  v10 = *(uint64_t **)(a1 + 104);
  if (v9 != v10)
  {
    while (*v9 != v6)
    {
      v9 += 2;
      if (v9 == v10)
      {
        v9 = *(uint64_t **)(a1 + 104);
        break;
      }
    }
  }
  if (v9 == v10)
  {
    if ((unint64_t)v10 >= *(_QWORD *)(a1 + 112))
    {
      v13 = sub_207EFDCE8(a1 + 96, v6, (uint64_t)v5);
    }
    else
    {
      *v10 = v6;
      v10[1] = (uint64_t)v5;
      if (v5)
      {
        v11 = (unint64_t *)&v5->__shared_owners_;
        do
          v12 = __ldxr(v11);
        while (__stxr(v12 + 1, v11));
      }
      v13 = v10 + 2;
    }
    *(_QWORD *)(a1 + 104) = v13;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v6 + 24))(v6, a1);
  }
  if (v5)
  {
    v14 = (unint64_t *)&v5->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  std::mutex::unlock(v4);
  return v9 == v10;
}

void sub_207EFD754(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::mutex *v9;

  sub_207C99D78((uint64_t)&a9);
  std::mutex::unlock(v9);
  _Unwind_Resume(a1);
}

std::__shared_weak_count *sub_207EFD770@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *result;

  result = *(std::__shared_weak_count **)(a1 + 128);
  if (result && (result = std::__shared_weak_count::lock(result)) != 0)
  {
    *a2 = *(_QWORD *)(a1 + 120);
    a2[1] = result;
  }
  else
  {
    *a2 = 0;
    a2[1] = result;
  }
  return result;
}

std::__shared_weak_count *sub_207EFD7BC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *result;

  *a2 = 0;
  a2[1] = 0;
  result = *(std::__shared_weak_count **)(a1 + 128);
  if (result)
  {
    result = std::__shared_weak_count::lock(result);
    a2[1] = result;
    if (result)
      *a2 = *(_QWORD *)(a1 + 120);
  }
  return result;
}

std::__shared_weak_count *sub_207EFD7FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *result;

  result = *(std::__shared_weak_count **)(a1 + 24);
  if (result && (result = std::__shared_weak_count::lock(result)) != 0)
  {
    *a2 = *(_QWORD *)(a1 + 16);
    a2[1] = result;
  }
  else
  {
    *a2 = 0;
    a2[1] = result;
  }
  return result;
}

uint64_t sub_207EFD848(uint64_t a1, uint64_t a2)
{
  std::mutex *v4;
  _QWORD *v5;
  _QWORD *i;

  v4 = (std::mutex *)(a1 + 32);
  std::mutex::lock((std::mutex *)(a1 + 32));
  v5 = *(_QWORD **)(a1 + 96);
  for (i = *(_QWORD **)(a1 + 104); v5 != i; v5 += 2)
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v5 + 16))(*v5, a2);
  std::mutex::unlock(v4);
  return a1 + 8;
}

void sub_207EFD8C0(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_207EFD8D4(uint64_t a1, uint64_t a2)
{
  std::mutex *v4;
  _QWORD *v5;
  _QWORD *i;

  v4 = (std::mutex *)(a1 + 24);
  std::mutex::lock((std::mutex *)(a1 + 24));
  v5 = *(_QWORD **)(a1 + 88);
  for (i = *(_QWORD **)(a1 + 96); v5 != i; v5 += 2)
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v5 + 16))(*v5, a2);
  std::mutex::unlock(v4);
  return a1;
}

void sub_207EFD948(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_207EFD95C(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 24);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_207EFD9C4(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_207EFDA20(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[3];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(__p);
  }
  else
  {
LABEL_5:
    operator delete(__p);
  }
}

void sub_207EFDA88(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete((void *)(a1 - 8));
  }
  else
  {
LABEL_5:
    operator delete((void *)(a1 - 8));
  }
}

uint64_t sub_207EFDAF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::mutex *v5;
  _QWORD *v6;
  _QWORD *i;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = (std::mutex *)(v4 + 32);
  std::mutex::lock((std::mutex *)(v4 + 32));
  v6 = *(_QWORD **)(v4 + 96);
  for (i = *(_QWORD **)(v4 + 104); v6 != i; v6 += 2)
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v6 + 16))(*v6, a2);
  std::mutex::unlock(v5);
  return a1 + 8;
}

void sub_207EFDB68(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_207EFDB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::mutex *v5;
  _QWORD *v6;
  _QWORD *i;

  v4 = *(_QWORD *)(a1 + 8);
  v5 = (std::mutex *)(v4 + 32);
  std::mutex::lock((std::mutex *)(v4 + 32));
  v6 = *(_QWORD **)(v4 + 96);
  for (i = *(_QWORD **)(v4 + 104); v6 != i; v6 += 2)
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v6 + 16))(*v6, a2);
  std::mutex::unlock(v5);
  return a1;
}

void sub_207EFDBF4(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

std::__shared_weak_count *sub_207EFDC08@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *result;

  v3 = *(_QWORD *)(a1 + 16);
  result = *(std::__shared_weak_count **)(v3 + 128);
  if (result && (result = std::__shared_weak_count::lock(result)) != 0)
  {
    *a2 = *(_QWORD *)(v3 + 120);
    a2[1] = result;
  }
  else
  {
    *a2 = 0;
    a2[1] = result;
  }
  return result;
}

std::__shared_weak_count *sub_207EFDC54@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  std::__shared_weak_count *result;

  v2 = *(_QWORD *)(a1 + 16);
  *a2 = 0;
  a2[1] = 0;
  result = *(std::__shared_weak_count **)(v2 + 128);
  if (result)
  {
    result = std::__shared_weak_count::lock(result);
    a2[1] = result;
    if (result)
      *a2 = *(_QWORD *)(v2 + 120);
  }
  return result;
}

std::__shared_weak_count *sub_207EFDC94@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *result;

  v3 = *(_QWORD *)(a1 + 16);
  result = *(std::__shared_weak_count **)(v3 + 24);
  if (result && (result = std::__shared_weak_count::lock(result)) != 0)
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = result;
  }
  else
  {
    *a2 = 0;
    a2[1] = result;
  }
  return result;
}

_QWORD *sub_207EFDCE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v11;
  char *v12;
  char *v13;
  unint64_t *v14;
  unint64_t v15;
  char *v16;
  _QWORD *v17;
  __int128 v18;
  _QWORD *v19;
  std::__shared_weak_count *v20;
  unint64_t *p_shared_owners;
  unint64_t v22;

  v3 = *(_QWORD **)a1;
  v4 = *(_QWORD **)(a1 + 8);
  v5 = ((uint64_t)v4 - *(_QWORD *)a1) >> 4;
  v6 = v5 + 1;
  if ((unint64_t)(v5 + 1) >> 60)
    sub_207CA420C();
  v8 = *(_QWORD *)(a1 + 16) - (_QWORD)v3;
  if (v8 >> 3 > v6)
    v6 = v8 >> 3;
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0)
    v6 = 0xFFFFFFFFFFFFFFFLL;
  if (v6 >> 60)
    sub_207CA3AB8();
  v11 = 16 * v6;
  v12 = (char *)operator new(16 * v6);
  v13 = &v12[16 * v5];
  *(_QWORD *)v13 = a2;
  *((_QWORD *)v13 + 1) = a3;
  if (a3)
  {
    v14 = (unint64_t *)(a3 + 8);
    do
      v15 = __ldxr(v14);
    while (__stxr(v15 + 1, v14));
    v3 = *(_QWORD **)a1;
    v4 = *(_QWORD **)(a1 + 8);
  }
  v16 = &v12[v11];
  v17 = v13 + 16;
  if (v4 == v3)
  {
    *(_QWORD *)a1 = v13;
    *(_QWORD *)(a1 + 8) = v17;
    *(_QWORD *)(a1 + 16) = v16;
  }
  else
  {
    do
    {
      v18 = *((_OWORD *)v4 - 1);
      v4 -= 2;
      *((_OWORD *)v13 - 1) = v18;
      v13 -= 16;
      *v4 = 0;
      v4[1] = 0;
    }
    while (v4 != v3);
    v3 = *(_QWORD **)a1;
    v19 = *(_QWORD **)(a1 + 8);
    *(_QWORD *)a1 = v13;
    *(_QWORD *)(a1 + 8) = v17;
    *(_QWORD *)(a1 + 16) = v16;
    while (v19 != v3)
    {
      v20 = (std::__shared_weak_count *)*(v19 - 1);
      if (v20)
      {
        p_shared_owners = (unint64_t *)&v20->__shared_owners_;
        do
          v22 = __ldaxr(p_shared_owners);
        while (__stlxr(v22 - 1, p_shared_owners));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
          std::__shared_weak_count::__release_weak(v20);
        }
      }
      v19 -= 2;
    }
  }
  if (v3)
    operator delete(v3);
  return v17;
}

void sub_207EFDE34(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24C078CA8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_207EFDE44(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24C078CA8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_207EFDE64(uint64_t a1)
{
  return sub_207EFD138(a1 + 24);
}

uint64_t sub_207EFDE70(uint64_t a1, char *a2, size_t a3)
{
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  size_t v11;
  int v12;
  __int128 *p_dst;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  void *__p[2];
  _BYTE v20[9];
  __int128 __dst;
  unint64_t v22;

  v6 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a1 + 56))(a1);
  if (v9)
    return v6;
  if (a3)
  {
    v11 = a3;
    do
    {
      if (!v11)
        goto LABEL_8;
      v12 = a2[--v11];
    }
    while (v12 != 46);
    if (v11 == -1)
    {
LABEL_8:
      v7 = 0;
      v8 = 256;
      *(_WORD *)&v20[7] = 256;
      LOBYTE(__p[0]) = 0;
      goto LABEL_21;
    }
    if (a3 >= v11)
      a3 = v11;
    if (a3 >= 0x7FFFFFFFFFFFFFF8)
      sub_207C95C50();
    if (a3 >= 0x17)
    {
      v14 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((a3 | 7) != 0x17)
        v14 = a3 | 7;
      v15 = v14 + 1;
      p_dst = (__int128 *)operator new(v14 + 1);
      *((_QWORD *)&__dst + 1) = a3;
      v22 = v15 | 0x8000000000000000;
      *(_QWORD *)&__dst = p_dst;
    }
    else
    {
      HIBYTE(v22) = a3;
      p_dst = &__dst;
      if (!a3)
        goto LABEL_20;
    }
    memmove(p_dst, a2, a3);
LABEL_20:
    *((_BYTE *)p_dst + a3) = 0;
    *(_OWORD *)__p = __dst;
    *(_QWORD *)v20 = v22;
    v20[8] = 1;
    v7 = HIBYTE(v22);
    v8 = *((_QWORD *)&__dst + 1);
    goto LABEL_21;
  }
  LOBYTE(__p[0]) = 0;
  v20[8] = 0;
LABEL_21:
  if ((v7 & 0x80u) == 0)
    v16 = __p;
  else
    v16 = (void **)__p[0];
  if ((v7 & 0x80u) == 0)
    v17 = v7;
  else
    v17 = v8;
  v10 = (*(uint64_t (**)(uint64_t, void **, uint64_t))(*(_QWORD *)a1 + 64))(a1, v16, v17);
  if (v20[8] && (v20[7] & 0x80000000) != 0)
    operator delete(__p[0]);
  return v10;
}

void sub_207EFDFF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_207EFE018(uint64_t *a1)
{
  uint64_t result;
  _BYTE v2[24];
  int v3;
  std::string v4;
  _QWORD v5[5];
  _QWORD *v6;

  v3 = 0;
  std::to_string(&v4, *a1);
  v5[0] = v2;
  v5[1] = &v4;
  v5[2] = v2;
  v5[3] = &v4;
  v5[4] = &v4;
  v6 = v5;
  ((void (*)(_QWORD **, _BYTE *))sub_207CAB414)(&v6, v2);
  if (SHIBYTE(v4.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v4.__r_.__value_.__l.__data_);
  if (v3 == -1)
    sub_207CA9F48();
  v5[0] = &v4;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24C078DD0[v3])(v5, v2);
  if (v3 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24C078DB8[v3])(v5, v2);
  return result;
}

void sub_207EFE104(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_207CA9EF0((uint64_t)va);
  _Unwind_Resume(a1);
}

void sub_207EFE11C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  sub_207CA9EF0((uint64_t)&a10);
  _Unwind_Resume(a1);
}

void sub_207EFE140(_BYTE *__src@<X0>, uint64_t __len@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 v3;
  int64_t v7;
  size_t v8;
  int v9;
  uint64_t v10;
  void **p_dst;
  uint64_t v12;
  uint64_t v13;
  char v14;
  size_t v15;
  _QWORD *v16;
  _QWORD *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  size_t *v22;
  unint64_t v23;
  size_t *v24;
  _BYTE *v25;
  unint64_t v26;
  int8x8_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  size_t *v31;
  int64_t v32;
  _QWORD *v33;
  __int128 v34;
  void **__dst;
  __int128 v36;
  size_t v37;
  _BYTE v38[15];
  unsigned __int8 v39;
  _QWORD v40[2];
  _QWORD v41[2];
  _QWORD v42[3];

  v42[2] = *MEMORY[0x24BDAC8D0];
  if (!__len)
  {
    *(_BYTE *)a3 = 0;
    *(_BYTE *)(a3 + 24) = 0;
    *(_BYTE *)(a3 + 32) = 0;
    *(_BYTE *)(a3 + 80) = 0;
    return;
  }
  v7 = 0;
  v8 = __len;
  while (__src[v7] != 35)
  {
    if (__len == ++v7)
    {
      LOBYTE(v9) = 0;
      v10 = -1;
      goto LABEL_14;
    }
  }
  LOBYTE(v9) = 0;
  v10 = -1;
  if (__len != v7 && v7 != -1)
  {
    if (__len >= v7)
      v8 = v7;
    else
      v8 = __len;
    v9 = 1;
    if (!v8)
    {
      v32 = __len + ~v7;
      if (__len >= v32)
        v15 = v32;
      else
        v15 = __len;
      if (v15 <= 0x7FFFFFFFFFFFFFF7)
        goto LABEL_25;
LABEL_81:
      sub_207C95C50();
    }
    v10 = v7;
  }
LABEL_14:
  if (v8 > 0x7FFFFFFFFFFFFFF7)
    sub_207C95C50();
  if (v8 >= 0x17)
  {
    v12 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v12 = v8 | 7;
    v13 = v12 + 1;
    p_dst = (void **)operator new(v12 + 1);
    *(_QWORD *)&v36 = v8;
    *((_QWORD *)&v36 + 1) = v13 | 0x8000000000000000;
    __dst = p_dst;
  }
  else
  {
    HIBYTE(v36) = v8;
    p_dst = (void **)&__dst;
  }
  memmove(p_dst, __src, v8);
  *((_BYTE *)p_dst + v8) = 0;
  v8 = (size_t)__dst;
  v42[0] = v36;
  *(_QWORD *)((char *)v42 + 7) = *(_QWORD *)((char *)&v36 + 7);
  v3 = HIBYTE(v36);
  __dst = 0;
  v36 = 0uLL;
  if ((v9 & 1) == 0)
  {
    v17 = 0;
    v18 = 0;
    goto LABEL_36;
  }
  v9 = 0;
  if (__len >= __len + ~v10)
    v15 = __len + ~v10;
  else
    v15 = __len;
  if (v15 > 0x7FFFFFFFFFFFFFF7)
    goto LABEL_81;
LABEL_25:
  if (v15 >= 0x17)
  {
    v19 = (v15 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v15 | 7) != 0x17)
      v19 = v15 | 7;
    v20 = v19 + 1;
    v16 = operator new(v19 + 1);
    *(_QWORD *)&v34 = v15;
    *((_QWORD *)&v34 + 1) = v20 | 0x8000000000000000;
    v33 = v16;
  }
  else
  {
    HIBYTE(v34) = v15;
    v16 = &v33;
    if (!v15)
      goto LABEL_33;
  }
  memmove(v16, &__src[__len - v15], v15);
LABEL_33:
  *((_BYTE *)v16 + v15) = 0;
  v17 = v33;
  v40[0] = v34;
  *(_QWORD *)((char *)v40 + 7) = *(_QWORD *)((char *)&v34 + 7);
  v14 = HIBYTE(v34);
  v34 = 0uLL;
  v33 = 0;
  v41[0] = v40[0];
  *(_QWORD *)((char *)v41 + 7) = *(_QWORD *)((char *)v40 + 7);
  v40[0] = 0;
  *(_QWORD *)((char *)v40 + 7) = 0;
  if (v9)
  {
    *(_BYTE *)a3 = 0;
    *(_BYTE *)(a3 + 24) = 0;
    *(_BYTE *)(a3 + 32) = 0;
    v21 = 1;
    *(_BYTE *)(a3 + 80) = 0;
    goto LABEL_66;
  }
  v18 = 1;
LABEL_36:
  *(_QWORD *)&v38[7] = *(_QWORD *)((char *)v42 + 7);
  v37 = v8;
  *(_QWORD *)v38 = v42[0];
  v39 = v3;
  v42[0] = 0;
  *(_QWORD *)((char *)v42 + 7) = 0;
  if ((v3 & 0x80u) == 0)
    v22 = &v37;
  else
    v22 = (size_t *)v8;
  v23 = v3;
  if ((v3 & 0x80u) != 0)
    v23 = *(_QWORD *)v38;
  if (v23)
  {
    v24 = v22;
    if (v23 >= 8)
    {
      v24 = (size_t *)((char *)v22 + (v23 & 0xFFFFFFFFFFFFFFF8));
      v25 = (char *)v22 + 3;
      v26 = v23 & 0xFFFFFFFFFFFFFFF8;
      while (1)
      {
        v27 = vceq_s8(*(int8x8_t *)(v25 - 3), (int8x8_t)0x2323232323232323);
        if ((v27.i8[0] & 1) != 0)
        {
          *(v25 - 3) = 95;
          if ((v27.i8[1] & 1) == 0)
          {
LABEL_47:
            if ((v27.i8[2] & 1) == 0)
              goto LABEL_48;
            goto LABEL_56;
          }
        }
        else if ((v27.i8[1] & 1) == 0)
        {
          goto LABEL_47;
        }
        *(v25 - 2) = 95;
        if ((v27.i8[2] & 1) == 0)
        {
LABEL_48:
          if ((v27.i8[3] & 1) == 0)
            goto LABEL_49;
          goto LABEL_57;
        }
LABEL_56:
        *(v25 - 1) = 95;
        if ((v27.i8[3] & 1) == 0)
        {
LABEL_49:
          if ((v27.i8[4] & 1) == 0)
            goto LABEL_50;
          goto LABEL_58;
        }
LABEL_57:
        *v25 = 95;
        if ((v27.i8[4] & 1) == 0)
        {
LABEL_50:
          if ((v27.i8[5] & 1) == 0)
            goto LABEL_51;
          goto LABEL_59;
        }
LABEL_58:
        v25[1] = 95;
        if ((v27.i8[5] & 1) == 0)
        {
LABEL_51:
          if ((v27.i8[6] & 1) == 0)
            goto LABEL_52;
          goto LABEL_60;
        }
LABEL_59:
        v25[2] = 95;
        if ((v27.i8[6] & 1) == 0)
        {
LABEL_52:
          if ((v27.i8[7] & 1) != 0)
            goto LABEL_61;
          goto LABEL_44;
        }
LABEL_60:
        v25[3] = 95;
        if ((v27.i8[7] & 1) != 0)
LABEL_61:
          v25[4] = 95;
LABEL_44:
        v25 += 8;
        v26 -= 8;
        if (!v26)
        {
          if (v23 == (v23 & 0xFFFFFFFFFFFFFFF8))
            goto LABEL_63;
          break;
        }
      }
    }
    v31 = (size_t *)((char *)v22 + v23);
    do
    {
      if (*(_BYTE *)v24 == 35)
        *(_BYTE *)v24 = 95;
      v24 = (size_t *)((char *)v24 + 1);
    }
    while (v24 != v31);
LABEL_63:
    v8 = v37;
    v3 = v39;
  }
  v28 = *(_QWORD *)v38;
  v29 = *(_QWORD *)&v38[7];
  *(_QWORD *)a3 = v8;
  *(_QWORD *)(a3 + 8) = v28;
  *(_QWORD *)(a3 + 15) = v29;
  *(_BYTE *)(a3 + 23) = v3;
  *(_BYTE *)(a3 + 24) = 1;
  *(_BYTE *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 80) = 0;
  if ((v18 & 1) == 0)
    goto LABEL_68;
  v8 = 0;
  v3 = 0;
  v21 = 0;
LABEL_66:
  v30 = v41[0];
  *(_QWORD *)(a3 + 32) = v17;
  *(_QWORD *)(a3 + 40) = v30;
  *(_QWORD *)(a3 + 47) = *(_QWORD *)((char *)v41 + 7);
  *(_BYTE *)(a3 + 55) = v14;
  v41[0] = 0;
  *(_QWORD *)((char *)v41 + 7) = 0;
  *(_QWORD *)(a3 + 64) = 0;
  *(_QWORD *)(a3 + 72) = 0;
  *(_BYTE *)(a3 + 80) = 1;
  if ((v21 & 1) != 0)
    return;
  if ((v3 & 0x80) == 0)
  {
LABEL_68:
    if ((SHIBYTE(v36) & 0x80000000) == 0)
      return;
    goto LABEL_69;
  }
  operator delete((void *)v8);
  if (SHIBYTE(v36) < 0)
LABEL_69:
    operator delete(__dst);
}

void sub_207EFE5A0(_Unwind_Exception *exception_object)
{
  void *v1;
  char v2;
  char v3;

  if ((v3 & 1) == 0 && v2 < 0)
  {
    operator delete(v1);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_207EFE5C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 *v2;
  int v4;
  BOOL v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  const void **v16;
  unsigned __int8 *v17;
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  int v22;
  BOOL v24;

  v2 = a2;
  v4 = a2[24];
  if (a1[24])
    v5 = v4 == 0;
  else
    v5 = 1;
  if (v5)
  {
    if ((a1[24] != 0) != (v4 != 0))
      return 0;
  }
  else
  {
    v7 = a1[23];
    if ((v7 & 0x80u) == 0)
      v8 = a1[23];
    else
      v8 = *((_QWORD *)a1 + 1);
    v9 = a2[23];
    v10 = (char)v9;
    if ((v9 & 0x80u) != 0)
      v9 = *((_QWORD *)a2 + 1);
    if (v8 != v9)
      return 0;
    if (v10 < 0)
      a2 = *(unsigned __int8 **)a2;
    if ((v7 & 0x80) != 0)
    {
      if (memcmp(*(const void **)a1, a2, *((_QWORD *)a1 + 1)))
        return 0;
    }
    else if (a1[23])
    {
      v11 = a1;
      while (*v11 == *a2)
      {
        ++v11;
        ++a2;
        if (!--v7)
          goto LABEL_23;
      }
      return 0;
    }
  }
LABEL_23:
  result = (a1[80] != 0) == (v2[80] != 0);
  if (!a1[80] || !v2[80])
    return result;
  v12 = a1[55];
  if ((v12 & 0x80u) == 0)
    v13 = a1[55];
  else
    v13 = *((_QWORD *)a1 + 5);
  v14 = v2[55];
  v15 = (char)v14;
  if ((v14 & 0x80u) != 0)
    v14 = *((_QWORD *)v2 + 5);
  if (v13 != v14)
    return 0;
  v16 = (const void **)(a1 + 32);
  if (v15 >= 0)
    v17 = v2 + 32;
  else
    v17 = (unsigned __int8 *)*((_QWORD *)v2 + 4);
  if ((v12 & 0x80) != 0)
    return memcmp(*v16, v17, *((_QWORD *)a1 + 5)) == 0;
  if (!a1[55])
    return 1;
  v18 = v12 - 1;
  do
  {
    v20 = *(unsigned __int8 *)v16;
    v16 = (const void **)((char *)v16 + 1);
    v19 = v20;
    v22 = *v17++;
    v21 = v22;
    v24 = v18-- != 0;
    result = v19 == v21;
  }
  while (v19 == v21 && v24);
  return result;
}

_QWORD *sub_207EFE770(_QWORD *a1, uint64_t a2)
{
  int v4;
  const char *v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  const char *v9;
  uint64_t v10;
  _QWORD *v11;
  const char *v12;
  uint64_t v13;
  const char *v14;
  int v15;
  const char *v16;
  uint64_t v17;
  _QWORD *v18;

  sub_207CBAB98(a1, (uint64_t)"{", 1);
  sub_208208754(a1, (uint64_t *)a2);
  sub_207CBAB98(a1, (uint64_t)",", 1);
  if (*(_BYTE *)(a2 + 40))
  {
    v4 = *(char *)(a2 + 39);
    if (v4 >= 0)
      v5 = (const char *)(a2 + 16);
    else
      v5 = *(const char **)(a2 + 16);
    if (v4 >= 0)
      v6 = *(unsigned __int8 *)(a2 + 39);
    else
      v6 = *(_QWORD *)(a2 + 24);
    v7 = a1;
  }
  else
  {
    v5 = "nullopt";
    v7 = a1;
    v6 = 7;
  }
  sub_207CBAB98(v7, (uint64_t)v5, v6);
  sub_207CBAB98(a1, (uint64_t)",", 1);
  if (*(_BYTE *)(a2 + 72))
  {
    v8 = *(char *)(a2 + 71);
    if (v8 >= 0)
      v9 = (const char *)(a2 + 48);
    else
      v9 = *(const char **)(a2 + 48);
    if (v8 >= 0)
      v10 = *(unsigned __int8 *)(a2 + 71);
    else
      v10 = *(_QWORD *)(a2 + 56);
    v11 = a1;
  }
  else
  {
    v9 = "nullopt";
    v11 = a1;
    v10 = 7;
  }
  sub_207CBAB98(v11, (uint64_t)v9, v10);
  sub_207CBAB98(a1, (uint64_t)",", 1);
  if (*(_BYTE *)(a2 + 96))
    sub_208208754(a1, (uint64_t *)(a2 + 80));
  else
    sub_207CBAB98(a1, (uint64_t)"nullopt", 7);
  sub_207CBAB98(a1, (uint64_t)",", 1);
  if (*(_BYTE *)(a2 + 160))
  {
    v14 = *(const char **)(a2 + 112);
    v13 = a2 + 112;
    v12 = v14;
    v15 = *(char *)(v13 + 23);
    if (v15 >= 0)
      v16 = (const char *)v13;
    else
      v16 = v12;
    if (v15 >= 0)
      v17 = *(unsigned __int8 *)(v13 + 23);
    else
      v17 = *(_QWORD *)(v13 + 8);
    v18 = a1;
  }
  else
  {
    v16 = "nullopt";
    v18 = a1;
    v17 = 7;
  }
  sub_207CBAB98(v18, (uint64_t)v16, v17);
  sub_207CBAB98(a1, (uint64_t)"}", 1);
  return a1;
}

void sub_207EFE908(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_207EFE910(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 16);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_207EFE978(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[2];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(__p);
  }
  else
  {
LABEL_5:
    operator delete(__p);
  }
}

uint64_t sub_207EFE9E0(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 8))
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/IData.cpp", 228, (uint64_t)"data_", 5, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    goto LABEL_7;
  }
  if (*(_QWORD *)(a1 + 8))
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 24))(a2);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/IData.cpp", 200, (uint64_t)"data_", 5, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
LABEL_7:
    abort();
  }
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)a2 + 24))(a2, *(_QWORD *)(a1 + 8));
}

uint64_t sub_207EFEAA4(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  if (v2)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 16))(v2);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/IData.cpp", 200, (uint64_t)"data_", 5, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 16))(*(_QWORD *)(a1 + 8));
}

void sub_207EFEB20(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *v8;
  unint64_t v9;
  std::string *v10;
  __int128 v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  void *__p[2];
  std::string::size_type v26;
  char v27;
  _QWORD v28[3];
  int v29;
  std::string v30;
  const char *v31;
  const char *v32;
  std::string *v33;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(std::__shared_weak_count **)(a1 + 16);
  v28[0] = v2;
  v28[1] = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
  }
  if (!v2)
  {
    HIBYTE(v26) = 0;
    LOBYTE(__p[0]) = 0;
    if (!v3)
      goto LABEL_22;
    goto LABEL_18;
  }
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(std::__shared_weak_count **)(a1 + 16);
  v23 = *(_QWORD *)(a1 + 8);
  v24 = v7;
  if (v7)
  {
    v8 = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(v8);
    while (__stxr(v9 + 1, v8));
  }
  (*(void (**)(std::string *__return_ptr))(*(_QWORD *)v6 + 32))(&v30);
  v10 = std::string::insert(&v30, 0, ",", 1uLL);
  v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
  v26 = v10->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v11;
  v10->__r_.__value_.__l.__size_ = 0;
  v10->__r_.__value_.__r.__words[2] = 0;
  v10->__r_.__value_.__r.__words[0] = 0;
  if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v30.__r_.__value_.__l.__data_);
  if (v7)
  {
    v12 = (unint64_t *)&v7->__shared_owners_;
    do
      v13 = __ldaxr(v12);
    while (__stlxr(v13 - 1, v12));
    if (!v13)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  v3 = (std::__shared_weak_count *)v28[1];
  if (v28[1])
  {
LABEL_18:
    v14 = (unint64_t *)&v3->__shared_owners_;
    do
      v15 = __ldaxr(v14);
    while (__stlxr(v15 - 1, v14));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
LABEL_22:
  v16 = *(_QWORD *)(a1 + 8);
  v17 = *(std::__shared_weak_count **)(a1 + 16);
  v23 = v16;
  v24 = v17;
  if (v17)
  {
    v18 = (unint64_t *)&v17->__shared_owners_;
    do
      v19 = __ldxr(v18);
    while (__stxr(v19 + 1, v18));
  }
  v22 = v16;
  strcpy((char *)v28, "viz::SharedData");
  v28[2] = 0xF00000000000000;
  v29 = 1;
  v30.__r_.__value_.__r.__words[0] = (std::string::size_type)v28;
  v30.__r_.__value_.__l.__size_ = (std::string::size_type)"{";
  v30.__r_.__value_.__r.__words[2] = (std::string::size_type)v28;
  v31 = "{";
  v32 = "{";
  sub_207CD45F4((uint64_t *)&v30.__r_.__value_.__r.__words[2], (uint64_t)v28);
  sub_207D02538((uint64_t)&v27, (uint64_t)v28, &v22);
  v30.__r_.__value_.__r.__words[0] = (std::string::size_type)v28;
  v30.__r_.__value_.__l.__size_ = (std::string::size_type)__p;
  v30.__r_.__value_.__r.__words[2] = (std::string::size_type)v28;
  v31 = (const char *)__p;
  v32 = (const char *)__p;
  if (v29 == -1)
    sub_207CA9F48();
  v33 = &v30;
  ((void (*)(std::string **, _QWORD *))off_24C078DE8[v29])(&v33, v28);
  v30.__r_.__value_.__r.__words[0] = (std::string::size_type)v28;
  v30.__r_.__value_.__l.__size_ = (std::string::size_type)"}";
  v30.__r_.__value_.__r.__words[2] = (std::string::size_type)v28;
  v31 = "}";
  v32 = "}";
  if (v29 == -1)
    sub_207CA9F48();
  v33 = &v30;
  ((void (*)(std::string **, _QWORD *))off_24C078E00[v29])(&v33, v28);
  if (v29 == -1)
    sub_207CA9F48();
  v30.__r_.__value_.__r.__words[0] = (std::string::size_type)&v33;
  ((void (*)(std::string *, _QWORD *))off_24C078DD0[v29])(&v30, v28);
  if (v29 != -1)
    ((void (*)(std::string *, _QWORD *))off_24C078DB8[v29])(&v30, v28);
  if (!v17)
    goto LABEL_34;
  v20 = (unint64_t *)&v17->__shared_owners_;
  do
    v21 = __ldaxr(v20);
  while (__stlxr(v21 - 1, v20));
  if (v21)
  {
LABEL_34:
    if ((SHIBYTE(v26) & 0x80000000) == 0)
      return;
LABEL_37:
    operator delete(__p[0]);
    return;
  }
  ((void (*)(std::__shared_weak_count *))v17->__on_zero_shared)(v17);
  std::__shared_weak_count::__release_weak(v17);
  if (SHIBYTE(v26) < 0)
    goto LABEL_37;
}

void sub_207EFEE30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  uint64_t v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  va_list va1;

  va_start(va1, a3);
  va_start(va, a3);
  v5 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  if (*(char *)(v3 - 57) < 0)
    operator delete(*(void **)(v3 - 80));
  sub_207C99D78((uint64_t)va);
  sub_207C99D78((uint64_t)va1);
  _Unwind_Resume(a1);
}

void sub_207EFEE64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, char a20)
{
  sub_207CA9EF0((uint64_t)&a20);
  sub_207C99D78((uint64_t)&a11);
  if (a18 < 0)
    operator delete(__p);
  _Unwind_Resume(a1);
}

void sub_207EFEEA0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  uint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  std::string *v12;
  void *v13;
  char v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  std::__shared_weak_count *v24;
  unint64_t *v25;
  unint64_t v26;
  int v27;
  unint64_t *v28;
  unint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  void *__p[2];
  uint64_t v33;
  uint64_t v34;
  std::__shared_weak_count *v35;
  std::string __dst;
  int v37;

  v4 = *(void **)(a1 + 8);
  v5 = *(std::__shared_weak_count **)(a1 + 16);
  __p[0] = v4;
  __p[1] = v5;
  if (v5)
  {
    p_shared_owners = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  if (!v4)
  {
    v13 = 0;
    v14 = 0;
    if (!v5)
      goto LABEL_22;
    goto LABEL_18;
  }
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(std::__shared_weak_count **)(a1 + 16);
  v34 = *(_QWORD *)(a1 + 8);
  v35 = v9;
  if (v9)
  {
    v10 = (unint64_t *)&v9->__shared_owners_;
    do
      v11 = __ldxr(v10);
    while (__stxr(v11 + 1, v10));
  }
  (*(void (**)(std::string *__return_ptr))(*(_QWORD *)v8 + 40))(&__dst);
  v12 = std::string::insert(&__dst, 0, ",", 1uLL);
  v13 = (void *)v12->__r_.__value_.__r.__words[0];
  v14 = HIBYTE(v12->__r_.__value_.__r.__words[2]);
  v12->__r_.__value_.__r.__words[0] = 0;
  v12->__r_.__value_.__l.__size_ = 0;
  v12->__r_.__value_.__r.__words[2] = 0;
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  if (v9)
  {
    v15 = (unint64_t *)&v9->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v5 = (std::__shared_weak_count *)__p[1];
  if (__p[1])
  {
LABEL_18:
    v17 = (unint64_t *)&v5->__shared_owners_;
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
LABEL_22:
  v19 = *(_QWORD *)(a1 + 8);
  v20 = *(std::__shared_weak_count **)(a1 + 16);
  v34 = v19;
  v35 = v20;
  if (v20)
  {
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
  }
  if (v19)
  {
    v23 = *(_QWORD *)(a1 + 8);
    v24 = *(std::__shared_weak_count **)(a1 + 16);
    if (v24)
    {
      v25 = (unint64_t *)&v24->__shared_owners_;
      do
        v26 = __ldxr(v25);
      while (__stxr(v26 + 1, v25));
    }
    (*(void (**)(void **__return_ptr))(*(_QWORD *)v23 + 40))(__p);
    v37 = -1;
    if (SHIBYTE(v33) < 0)
    {
      sub_207CA40D8(&__dst, __p[0], (unint64_t)__p[1]);
      v27 = SHIBYTE(v33);
      *(std::string *)a2 = __dst;
      if (v27 < 0)
        operator delete(__p[0]);
    }
    else
    {
      *(_OWORD *)a2 = *(_OWORD *)__p;
      *(_QWORD *)(a2 + 16) = v33;
    }
    if (v24)
    {
      v28 = (unint64_t *)&v24->__shared_owners_;
      do
        v29 = __ldaxr(v28);
      while (__stlxr(v29 - 1, v28));
      if (!v29)
      {
        ((void (*)(std::__shared_weak_count *))v24->__on_zero_shared)(v24);
        std::__shared_weak_count::__release_weak(v24);
      }
    }
    v20 = v35;
    if (!v35)
    {
LABEL_44:
      if ((v14 & 0x80) == 0)
        return;
LABEL_47:
      operator delete(v13);
      return;
    }
  }
  else
  {
    *(_BYTE *)(a2 + 23) = 7;
    strcpy((char *)a2, "nullptr");
    if (!v20)
      goto LABEL_44;
  }
  v30 = (unint64_t *)&v20->__shared_owners_;
  do
    v31 = __ldaxr(v30);
  while (__stlxr(v31 - 1, v30));
  if (v31)
    goto LABEL_44;
  ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
  std::__shared_weak_count::__release_weak(v20);
  if (v14 < 0)
    goto LABEL_47;
}

void sub_207EFF144(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18, uint64_t a19, char a20)
{
  void *v20;
  char v21;

  sub_207CA9EF0((uint64_t)&a20);
  if (a17 < 0)
  {
    operator delete(__p);
    sub_207C99D78((uint64_t)&a10);
    sub_207C99D78((uint64_t)&a18);
    if ((v21 & 0x80) == 0)
LABEL_3:
      _Unwind_Resume(a1);
  }
  else
  {
    sub_207C99D78((uint64_t)&a10);
    sub_207C99D78((uint64_t)&a18);
    if ((v21 & 0x80) == 0)
      goto LABEL_3;
  }
  operator delete(v20);
  _Unwind_Resume(a1);
}

void sub_207EFF1BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0)
  {
    operator delete(__p);
    sub_207C99D78((uint64_t)&a15);
    sub_207C99D78((uint64_t)&a12);
    _Unwind_Resume(a1);
  }
  sub_207C99D78((uint64_t)&a15);
  sub_207C99D78((uint64_t)&a12);
  _Unwind_Resume(a1);
}

_QWORD *sub_207EFF204@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  if (v3)
    return (*(_QWORD *(**)(_QWORD *__return_ptr))(*(_QWORD *)v3 + 48))(a2);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/IData.cpp", 200, (uint64_t)"data_", 5, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return (_QWORD *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 48))(*(_QWORD *)(a1 + 8));
}

_QWORD *sub_207EFF28C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 8);
  if (v3)
    return (*(_QWORD *(**)(_QWORD *__return_ptr))(*(_QWORD *)v3 + 56))(a2);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/IData.cpp", 200, (uint64_t)"data_", 5, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return (_QWORD *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 56))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_207EFF314(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  unsigned __int8 *v5;
  unsigned __int8 **v6;
  int v7;
  BOOL v8;
  uint64_t result;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned __int8 *v12;
  int v13;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  unsigned __int8 **v16;
  int v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  BOOL v22;
  uint64_t v23;
  unsigned __int8 *v24;
  unsigned __int8 *v25;
  int v26;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  unsigned __int8 **v29;
  BOOL v30;
  uint64_t v31;
  unsigned __int8 *v32;
  unsigned __int8 *v33;
  int v34;
  unsigned __int8 *v35;
  uint64_t v36;
  int v37;
  int v38;
  int v39;
  int v40;
  BOOL v42;

  if (*(_QWORD *)*a2 != *(_QWORD *)*a3 || *(unsigned __int8 *)(*a2 + 8) != *(unsigned __int8 *)(*a3 + 8))
    return 0;
  v5 = (unsigned __int8 *)a2[1];
  v6 = (unsigned __int8 **)a3[1];
  v7 = *((unsigned __int8 *)v6 + 24);
  if (v5[24])
    v8 = v7 == 0;
  else
    v8 = 1;
  if (v8)
  {
    if ((v5[24] != 0) != (v7 != 0))
      return 0;
  }
  else
  {
    v10 = v5[23];
    if ((v10 & 0x80u) == 0)
      v11 = (unsigned __int8 *)v5[23];
    else
      v11 = (unsigned __int8 *)*((_QWORD *)v5 + 1);
    v12 = (unsigned __int8 *)*((unsigned __int8 *)v6 + 23);
    v13 = (char)v12;
    if ((char)v12 < 0)
      v12 = v6[1];
    if (v11 != v12)
      return 0;
    if (v13 >= 0)
      v14 = (unsigned __int8 *)a3[1];
    else
      v14 = *v6;
    if ((v10 & 0x80) != 0)
    {
      if (memcmp(*(const void **)v5, v14, *((_QWORD *)v5 + 1)))
        return 0;
    }
    else if (v5[23])
    {
      while (*v5 == *v14)
      {
        ++v5;
        ++v14;
        if (!--v10)
          goto LABEL_26;
      }
      return 0;
    }
  }
LABEL_26:
  v15 = (unsigned __int8 *)a2[2];
  v16 = (unsigned __int8 **)a3[2];
  v17 = *((unsigned __int8 *)v16 + 24);
  if (v15[24])
    v18 = v17 == 0;
  else
    v18 = 1;
  if (v18)
  {
    if ((v15[24] != 0) != (v17 != 0))
      return 0;
  }
  else
  {
    v23 = v15[23];
    if ((v23 & 0x80u) == 0)
      v24 = (unsigned __int8 *)v15[23];
    else
      v24 = (unsigned __int8 *)*((_QWORD *)v15 + 1);
    v25 = (unsigned __int8 *)*((unsigned __int8 *)v16 + 23);
    v26 = (char)v25;
    if ((char)v25 < 0)
      v25 = v16[1];
    if (v24 != v25)
      return 0;
    if (v26 >= 0)
      v27 = (unsigned __int8 *)a3[2];
    else
      v27 = *v16;
    if ((v23 & 0x80) != 0)
    {
      if (memcmp(*(const void **)v15, v27, *((_QWORD *)v15 + 1)))
        return 0;
    }
    else if (v15[23])
    {
      while (*v15 == *v27)
      {
        ++v15;
        ++v27;
        if (!--v23)
          goto LABEL_32;
      }
      return 0;
    }
  }
LABEL_32:
  v19 = a2[3];
  v20 = a3[3];
  v21 = *(unsigned __int8 *)(v20 + 16);
  if (*(_BYTE *)(v19 + 16))
    v22 = v21 == 0;
  else
    v22 = 1;
  if (v22)
  {
    if ((*(_BYTE *)(v19 + 16) != 0) == (v21 != 0))
      goto LABEL_55;
    return 0;
  }
  if (*(_QWORD *)v19 != *(_QWORD *)v20 || *(unsigned __int8 *)(v19 + 8) != *(unsigned __int8 *)(v20 + 8))
    return 0;
LABEL_55:
  v28 = (unsigned __int8 *)a2[4];
  v29 = (unsigned __int8 **)a3[4];
  if (v28[48])
    v30 = *((_BYTE *)v29 + 48) == 0;
  else
    v30 = 1;
  if (v30)
    return (v28[48] != 0) == (*((_BYTE *)v29 + 48) != 0);
  v31 = v28[23];
  if ((v31 & 0x80u) == 0)
    v32 = (unsigned __int8 *)v28[23];
  else
    v32 = (unsigned __int8 *)*((_QWORD *)v28 + 1);
  v33 = (unsigned __int8 *)*((unsigned __int8 *)v29 + 23);
  v34 = (char)v33;
  if ((char)v33 < 0)
    v33 = v29[1];
  if (v32 != v33)
    return 0;
  if (v34 >= 0)
    v35 = (unsigned __int8 *)a3[4];
  else
    v35 = *v29;
  if ((v31 & 0x80) != 0)
    return memcmp(*(const void **)v28, v35, *((_QWORD *)v28 + 1)) == 0;
  if (!v28[23])
    return 1;
  v36 = v31 - 1;
  do
  {
    v38 = *v28++;
    v37 = v38;
    v40 = *v35++;
    v39 = v40;
    v42 = v36-- != 0;
    result = v37 == v39;
  }
  while (v37 == v39 && v42);
  return result;
}

void sub_207EFF5F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  size_t v3;
  const void *v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *__dst[2];
  unint64_t v11;
  _QWORD v12[5];
  _QWORD *v13;

  v3 = *(_QWORD *)(a3 + 8);
  if (v3 >= 0x7FFFFFFFFFFFFFF8)
    sub_207C95C50();
  v5 = *(const void **)a3;
  if (v3 >= 0x17)
  {
    v7 = (v3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v3 | 7) != 0x17)
      v7 = v3 | 7;
    v8 = v7 + 1;
    v6 = (void **)operator new(v7 + 1);
    __dst[1] = (void *)v3;
    v11 = v8 | 0x8000000000000000;
    __dst[0] = v6;
    goto LABEL_8;
  }
  HIBYTE(v11) = *(_QWORD *)(a3 + 8);
  v6 = __dst;
  if (v3)
LABEL_8:
    memmove(v6, v5, v3);
  *((_BYTE *)v6 + v3) = 0;
  v12[0] = a2;
  v12[1] = __dst;
  v12[2] = a2;
  v12[3] = __dst;
  v12[4] = __dst;
  v9 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v9 == -1)
    sub_207CA9F48();
  v13 = v12;
  ((void (*)(_QWORD **, uint64_t))off_24C078DA0[v9])(&v13, a2);
  if (SHIBYTE(v11) < 0)
    operator delete(__dst[0]);
}

void sub_207EFF70C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207EFF72C(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_207EFF740(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)result + 8))(result);
  return result;
}

uint64_t sub_207EFF758(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d3kit3viz5IDataEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d3kit3viz5IDataEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d3kit3viz5IDataEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d3kit3viz5IDataEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_207EFF7C8(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = off_24C073B78;
  sub_207D49CF4((uint64_t)(a1 + 8));
  a1[1] = &off_24C073BC8;
  v2 = (std::__shared_weak_count *)a1[3];
  if (!v2)
    return a1;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (v4)
    return a1;
  ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
  std::__shared_weak_count::__release_weak(v2);
  return a1;
}

void sub_207EFF84C(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  *a1 = off_24C073B78;
  sub_207D49CF4((uint64_t)(a1 + 8));
  a1[1] = &off_24C073BC8;
  v2 = (std::__shared_weak_count *)a1[3];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(a1);
  }
  else
  {
LABEL_5:
    operator delete(a1);
  }
}

uint64_t sub_207EFF8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  std::__shared_weak_count *v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t *v25;
  BOOL v26;
  int v27;
  uint64_t *v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  std::__shared_weak_count *v32;
  unint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  int v36;
  __int16 v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  std::__shared_weak_count *v44;
  unint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  __int16 v49;
  unint64_t v50;
  unint64_t *v51;
  unint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[2];
  std::__shared_weak_count *v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  int v66;
  __int16 v67;
  _QWORD v68[2];
  std::__shared_weak_count *v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  int v73;
  __int16 v74;

  if (*(uint64_t (***)())a2 != off_24C078EA0)
    return 0;
  if (a1 == a2)
    return 1;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(std::__shared_weak_count **)(a1 + 24);
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    do
      v10 = __ldaxr(p_shared_owners);
    while (__stlxr(v10 - 1, p_shared_owners));
    if (v10)
    {
      if (!v6)
        goto LABEL_26;
    }
    else
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
      if (!v6)
        goto LABEL_26;
    }
    v6 = *(_QWORD *)(a1 + 16);
    v11 = *(std::__shared_weak_count **)(a1 + 24);
    if (v11)
    {
      v12 = (unint64_t *)&v11->__shared_owners_;
      do
        v13 = __ldxr(v12);
      while (__stxr(v13 + 1, v12));
      do
        v14 = __ldaxr(v12);
      while (__stlxr(v14 - 1, v12));
      if (!v14)
      {
        ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
        std::__shared_weak_count::__release_weak(v11);
      }
    }
  }
  else if (!v6)
  {
    goto LABEL_26;
  }
  if (*(_BYTE *)(a1 + 61))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v6 + 96))(&v60, v6, 0);
    v15 = *(_QWORD *)(a2 + 16);
    v16 = *(std::__shared_weak_count **)(a2 + 24);
    if (v16)
      goto LABEL_27;
LABEL_24:
    if (!v15)
      goto LABEL_43;
    goto LABEL_40;
  }
LABEL_26:
  v60 = 0;
  v15 = *(_QWORD *)(a2 + 16);
  v16 = *(std::__shared_weak_count **)(a2 + 24);
  if (!v16)
    goto LABEL_24;
LABEL_27:
  v17 = (unint64_t *)&v16->__shared_owners_;
  do
    v18 = __ldxr(v17);
  while (__stxr(v18 + 1, v17));
  do
    v19 = __ldaxr(v17);
  while (__stlxr(v19 - 1, v17));
  if (v19)
  {
    if (!v15)
      goto LABEL_43;
  }
  else
  {
    ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
    std::__shared_weak_count::__release_weak(v16);
    if (!v15)
      goto LABEL_43;
  }
  v15 = *(_QWORD *)(a2 + 16);
  v20 = *(std::__shared_weak_count **)(a2 + 24);
  if (v20)
  {
    v21 = (unint64_t *)&v20->__shared_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
  }
LABEL_40:
  if (*(_BYTE *)(a2 + 61))
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v15 + 96))(&v59, v15, 0);
    v24 = *(_DWORD *)(a1 + 56);
    if (v24 != *(_DWORD *)(a2 + 56))
      goto LABEL_64;
    goto LABEL_44;
  }
LABEL_43:
  v59 = 0;
  v24 = *(_DWORD *)(a1 + 56);
  if (v24 != *(_DWORD *)(a2 + 56))
    goto LABEL_64;
LABEL_44:
  v25 = (uint64_t *)(a1 + 32);
  if (*(_DWORD *)(a1 + 32))
    v26 = *(_DWORD *)(a1 + 36) == 0;
  else
    v26 = 1;
  v27 = v26;
  v28 = (uint64_t *)(a2 + 32);
  if (*(_DWORD *)(a2 + 32))
  {
    v29 = *(_DWORD *)(a2 + 36) == 0;
    if (((v27 ^ v29) & 1) == 0)
    {
      if ((v27 & v29) == 1)
        goto LABEL_53;
      goto LABEL_58;
    }
  }
  else if ((v27 & 1) != 0)
  {
    if ((v27 & 1) == 1)
    {
LABEL_53:
      v30 = *v25;
      v2 = (_DWORD)v30 == *v28 && HIDWORD(v30) == HIDWORD(*v28);
      goto LABEL_65;
    }
LABEL_58:
    v68[0] = off_24C06E878;
    v31 = *(_QWORD *)(a1 + 16);
    v32 = *(std::__shared_weak_count **)(a1 + 24);
    if (v32)
    {
      v33 = (unint64_t *)&v32->__shared_owners_;
      do
        v34 = __ldxr(v33);
      while (__stxr(v34 + 1, v33));
      v35 = *(_QWORD *)(a1 + 48);
      v36 = *(_DWORD *)(a1 + 56);
      v37 = *(_WORD *)(a1 + 60);
      do
        v38 = __ldxr(v33);
      while (__stxr(v38 + 1, v33));
    }
    else
    {
      v35 = *(_QWORD *)(a1 + 48);
      v37 = *(_WORD *)(a1 + 60);
      v36 = v24;
    }
    v68[1] = v31;
    v69 = v32;
    v70 = *v25;
    v71 = *(_DWORD *)(a1 + 40);
    v72 = v35;
    v73 = v36;
    v74 = v37;
    if (v32)
    {
      v41 = (unint64_t *)&v32->__shared_owners_;
      do
        v42 = __ldaxr(v41);
      while (__stlxr(v42 - 1, v41));
      if (!v42)
      {
        ((void (*)(std::__shared_weak_count *))v32->__on_zero_shared)(v32);
        std::__shared_weak_count::__release_weak(v32);
      }
    }
    v61[0] = off_24C06E878;
    v43 = *(_QWORD *)(a2 + 16);
    v44 = *(std::__shared_weak_count **)(a2 + 24);
    if (v44)
    {
      v45 = (unint64_t *)&v44->__shared_owners_;
      do
        v46 = __ldxr(v45);
      while (__stxr(v46 + 1, v45));
      v47 = *(_QWORD *)(a2 + 48);
      v48 = *(_DWORD *)(a2 + 56);
      v49 = *(_WORD *)(a2 + 60);
      do
        v50 = __ldxr(v45);
      while (__stxr(v50 + 1, v45));
    }
    else
    {
      v47 = *(_QWORD *)(a2 + 48);
      v48 = *(_DWORD *)(a2 + 56);
      v49 = *(_WORD *)(a2 + 60);
    }
    v61[1] = v43;
    v62 = v44;
    v63 = *v28;
    v64 = *(_DWORD *)(a2 + 40);
    v65 = v47;
    v66 = v48;
    v67 = v49;
    if (v44)
    {
      v51 = (unint64_t *)&v44->__shared_owners_;
      do
        v52 = __ldaxr(v51);
      while (__stlxr(v52 - 1, v51));
      if (!v52)
      {
        ((void (*)(std::__shared_weak_count *))v44->__on_zero_shared)(v44);
        std::__shared_weak_count::__release_weak(v44);
      }
    }
    v2 = sub_208160030(v24, (uint64_t)v68, (uint64_t)v61);
    v53 = v62;
    if (v62)
    {
      v54 = (unint64_t *)&v62->__shared_owners_;
      do
        v55 = __ldaxr(v54);
      while (__stlxr(v55 - 1, v54));
      if (!v55)
      {
        ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
        std::__shared_weak_count::__release_weak(v53);
      }
    }
    v56 = v69;
    if (v69)
    {
      v57 = (unint64_t *)&v69->__shared_owners_;
      do
        v58 = __ldaxr(v57);
      while (__stlxr(v58 - 1, v57));
      if (!v58)
      {
        ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
        std::__shared_weak_count::__release_weak(v56);
      }
    }
    goto LABEL_65;
  }
LABEL_64:
  v2 = 0;
LABEL_65:
  v39 = v59;
  v59 = 0;
  if (v39)
    (*(void (**)(uint64_t))(*(_QWORD *)v39 + 8))(v39);
  v40 = v60;
  v60 = 0;
  if (v40)
    (*(void (**)(uint64_t))(*(_QWORD *)v40 + 8))(v40);
  return v2;
}

void sub_207EFFD74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, std::__shared_weak_count *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, std::__shared_weak_count *a20)
{
  unint64_t *p_shared_owners;
  unint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  uint64_t v25;

  if (a13)
  {
    p_shared_owners = (unint64_t *)&a13->__shared_owners_;
    do
      v22 = __ldaxr(p_shared_owners);
    while (__stlxr(v22 - 1, p_shared_owners));
    if (!v22)
    {
      ((void (*)(std::__shared_weak_count *))a13->__on_zero_shared)(a13);
      std::__shared_weak_count::__release_weak(a13);
    }
  }
  if (a20)
  {
    v23 = (unint64_t *)&a20->__shared_owners_;
    do
      v24 = __ldaxr(v23);
    while (__stlxr(v24 - 1, v23));
    if (!v24)
    {
      ((void (*)(std::__shared_weak_count *))a20->__on_zero_shared)(a20);
      std::__shared_weak_count::__release_weak(a20);
    }
  }
  if (a9)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)a9 + 8))(a9);
    v25 = a10;
    if (!a10)
LABEL_13:
      _Unwind_Resume(exception_object);
  }
  else
  {
    v25 = a10;
    if (!a10)
      goto LABEL_13;
  }
  (*(void (**)(uint64_t))(*(_QWORD *)v25 + 8))(v25);
  _Unwind_Resume(exception_object);
}

uint64_t *sub_207EFFE48(uint64_t *a1, uint64_t a2, void *__src, size_t __len, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  char **v12;
  uint64_t v13;
  size_t v14;
  size_t v15;
  int v16;
  char *v17;
  char *v18;
  char *v19;
  unint64_t v20;
  int v21;
  char v22;
  void *v23;
  BOOL v24;
  char *v25;
  char *v26;
  _BYTE *v27;
  unint64_t v28;
  int8x8_t v29;
  _QWORD *v30;
  _QWORD *v31;
  int v32;
  size_t v33;
  __int128 *p_dst;
  unint64_t v35;
  unint64_t v36;
  const void *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v48;
  __int128 v49;
  int v50;
  void *__p[3];
  __int128 *v52;
  __int128 *v53;
  void **v54;
  __int128 __dst;
  unint64_t v56;
  uint64_t v57;

  v57 = *MEMORY[0x24BDAC8D0];
  *a1 = a2;
  v6 = a1 + 1;
  if (__len > 0x7FFFFFFFFFFFFFF7)
    sub_207C95C50();
  if (__len >= 0x17)
  {
    v14 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17)
      v14 = __len | 7;
    v15 = v14 + 1;
    v12 = (char **)operator new(v14 + 1);
    *(_QWORD *)&v49 = __len;
    *((_QWORD *)&v49 + 1) = v15 | 0x8000000000000000;
    v48 = (char *)v12;
  }
  else
  {
    HIBYTE(v49) = __len;
    v12 = &v48;
    if (!__len)
    {
      LOBYTE(v48) = 0;
      v13 = *a1;
      if (*a1)
        goto LABEL_5;
LABEL_12:
      LOBYTE(__p[0]) = 0;
      LOBYTE(v52) = 0;
      goto LABEL_13;
    }
  }
  memmove(v12, __src, __len);
  *((_BYTE *)v12 + __len) = 0;
  v13 = *a1;
  if (!*a1)
    goto LABEL_12;
LABEL_5:
  LOBYTE(__p[0]) = 0;
  LOBYTE(v52) = 0;
  if (*(_BYTE *)(v13 + 264))
  {
    if (*(char *)(v13 + 263) < 0)
    {
      sub_207CA40D8(__p, *(void **)(v13 + 240), *(_QWORD *)(v13 + 248));
    }
    else
    {
      *(_OWORD *)__p = *(_OWORD *)(v13 + 240);
      __p[2] = *(void **)(v13 + 256);
    }
    v16 = 0;
    LOBYTE(v52) = 1;
    goto LABEL_16;
  }
LABEL_13:
  v16 = 1;
LABEL_16:
  v17 = (char *)operator new(0x38uLL);
  v18 = v17;
  v19 = v48;
  *(_QWORD *)&__dst = v49;
  *(_QWORD *)((char *)&__dst + 7) = *(_QWORD *)((char *)&v49 + 7);
  v20 = HIBYTE(v49);
  v21 = SHIBYTE(v49);
  v48 = 0;
  v49 = 0uLL;
  if (v16)
  {
    v22 = 0;
    *((_QWORD *)v17 + 1) = __dst;
    *(_QWORD *)(v17 + 15) = *(_QWORD *)((char *)&__dst + 7);
    v17[24] = 0;
  }
  else
  {
    v23 = __p[1];
    *((void **)v17 + 3) = __p[0];
    *((_QWORD *)v17 + 4) = v23;
    *(void **)(v17 + 39) = *(void **)((char *)&__p[1] + 7);
    LOBYTE(v23) = HIBYTE(__p[2]);
    memset(__p, 0, sizeof(__p));
    *((_QWORD *)v17 + 1) = __dst;
    *(_QWORD *)(v17 + 15) = *(_QWORD *)((char *)&__dst + 7);
    v22 = 1;
    v17[47] = (char)v23;
  }
  *(_QWORD *)v17 = v19;
  v17[23] = v21;
  v17[48] = v22;
  v24 = v21 < 0;
  if (v21 >= 0)
    v25 = v17;
  else
    v25 = v19;
  if (v24)
    v20 = *((_QWORD *)v17 + 1);
  if (!v20)
    goto LABEL_46;
  v26 = v25;
  if (v20 < 8)
    goto LABEL_58;
  v26 = &v25[v20 & 0xFFFFFFFFFFFFFFF8];
  v27 = v25 + 3;
  v28 = v20 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v29 = vceq_s8(*(int8x8_t *)(v27 - 3), (int8x8_t)0x3A3A3A3A3A3A3A3ALL);
    if ((v29.i8[0] & 1) != 0)
    {
      *(v27 - 3) = 95;
      if ((v29.i8[1] & 1) == 0)
      {
LABEL_30:
        if ((v29.i8[2] & 1) == 0)
          goto LABEL_31;
        goto LABEL_39;
      }
    }
    else if ((v29.i8[1] & 1) == 0)
    {
      goto LABEL_30;
    }
    *(v27 - 2) = 95;
    if ((v29.i8[2] & 1) == 0)
    {
LABEL_31:
      if ((v29.i8[3] & 1) == 0)
        goto LABEL_32;
      goto LABEL_40;
    }
LABEL_39:
    *(v27 - 1) = 95;
    if ((v29.i8[3] & 1) == 0)
    {
LABEL_32:
      if ((v29.i8[4] & 1) == 0)
        goto LABEL_33;
      goto LABEL_41;
    }
LABEL_40:
    *v27 = 95;
    if ((v29.i8[4] & 1) == 0)
    {
LABEL_33:
      if ((v29.i8[5] & 1) == 0)
        goto LABEL_34;
      goto LABEL_42;
    }
LABEL_41:
    v27[1] = 95;
    if ((v29.i8[5] & 1) == 0)
    {
LABEL_34:
      if ((v29.i8[6] & 1) != 0)
        goto LABEL_43;
      goto LABEL_35;
    }
LABEL_42:
    v27[2] = 95;
    if ((v29.i8[6] & 1) != 0)
    {
LABEL_43:
      v27[3] = 95;
      if ((v29.i8[7] & 1) == 0)
        goto LABEL_27;
      goto LABEL_44;
    }
LABEL_35:
    if ((v29.i8[7] & 1) == 0)
      goto LABEL_27;
LABEL_44:
    v27[4] = 95;
LABEL_27:
    v27 += 8;
    v28 -= 8;
  }
  while (v28);
  if (v20 == (v20 & 0xFFFFFFFFFFFFFFF8))
    goto LABEL_46;
LABEL_58:
  v38 = &v25[v20];
  do
  {
    if (*v26 == 58)
      *v26 = 95;
    ++v26;
  }
  while (v26 != v38);
LABEL_46:
  v54 = (void **)v17;
  *v6 = v17;
  v30 = operator new(0x20uLL);
  *v30 = &off_24C079040;
  v30[1] = 0;
  v30[2] = 0;
  v30[3] = v18;
  a1[2] = (uint64_t)v30;
  if ((_BYTE)v52 && SHIBYTE(__p[2]) < 0)
    operator delete(__p[0]);
  v50 = 0;
  v31 = operator new(0x118uLL);
  v31[34] = 0;
  *((_OWORD *)v31 + 15) = 0u;
  *((_OWORD *)v31 + 16) = 0u;
  *((_OWORD *)v31 + 13) = 0u;
  *((_OWORD *)v31 + 14) = 0u;
  *((_OWORD *)v31 + 11) = 0u;
  *((_OWORD *)v31 + 12) = 0u;
  *((_OWORD *)v31 + 9) = 0u;
  *((_OWORD *)v31 + 10) = 0u;
  *((_OWORD *)v31 + 7) = 0u;
  *((_OWORD *)v31 + 8) = 0u;
  *((_OWORD *)v31 + 5) = 0u;
  *((_OWORD *)v31 + 6) = 0u;
  *((_OWORD *)v31 + 3) = 0u;
  *((_OWORD *)v31 + 4) = 0u;
  *((_OWORD *)v31 + 1) = 0u;
  *((_OWORD *)v31 + 2) = 0u;
  *(_OWORD *)v31 = 0u;
  sub_207CA2878((uint64_t)v31);
  __p[0] = v31;
  std::ostream::operator<<();
  v32 = *((_DWORD *)v31 + 30);
  if ((v32 & 0x10) != 0)
  {
    v35 = v31[14];
    v36 = v31[9];
    if (v35 < v36)
    {
      v31[14] = v36;
      v35 = v36;
    }
    v37 = (const void *)v31[8];
    v33 = v35 - (_QWORD)v37;
    if (v35 - (unint64_t)v37 > 0x7FFFFFFFFFFFFFF7)
      goto LABEL_81;
  }
  else
  {
    if ((v32 & 8) == 0)
    {
      v33 = 0;
      HIBYTE(v56) = 0;
      p_dst = &__dst;
      goto LABEL_66;
    }
    v37 = (const void *)v31[5];
    v33 = v31[7] - (_QWORD)v37;
    if (v33 > 0x7FFFFFFFFFFFFFF7)
LABEL_81:
      sub_207C95C50();
  }
  if (v33 >= 0x17)
  {
    v39 = (v33 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v33 | 7) != 0x17)
      v39 = v33 | 7;
    v40 = v39 + 1;
    p_dst = (__int128 *)operator new(v39 + 1);
    *((_QWORD *)&__dst + 1) = v33;
    v56 = v40 | 0x8000000000000000;
    *(_QWORD *)&__dst = p_dst;
    goto LABEL_65;
  }
  HIBYTE(v56) = v33;
  p_dst = &__dst;
  if (v33)
LABEL_65:
    memmove(p_dst, v37, v33);
LABEL_66:
  *((_BYTE *)p_dst + v33) = 0;
  v41 = (char *)__p[0];
  if (__p[0])
  {
    v42 = MEMORY[0x24BEDB7F0];
    v43 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)__p[0] = *MEMORY[0x24BEDB7F0];
    v44 = *(_QWORD *)(v42 + 72);
    *(_QWORD *)&v41[*(_QWORD *)(v43 - 24)] = *(_QWORD *)(v42 + 64);
    *((_QWORD *)v41 + 3) = MEMORY[0x24BEDB848] + 16;
    *((_QWORD *)v41 + 2) = v44;
    if (v41[111] < 0)
      operator delete(*((void **)v41 + 11));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD027B8](v41 + 128);
    operator delete(v41);
  }
  __p[0] = &v48;
  __p[1] = &__dst;
  __p[2] = &v48;
  v52 = &__dst;
  v53 = &__dst;
  if (v50 == -1)
    sub_207CA9F48();
  v54 = __p;
  ((void (*)(void ***, char **))off_24C079080[v50])(&v54, &v48);
  if (SHIBYTE(v56) < 0)
    operator delete((void *)__dst);
  if (v50 == -1)
    sub_207CA9F48();
  __p[0] = &__dst;
  ((void (*)(void **, char **))off_24C0790B0[v50])(__p, &v48);
  if (v50 != -1)
    ((void (*)(void **, char **))off_24C079098[v50])(__p, &v48);
  v45 = (char *)a1[1];
  if (v45[23] < 0)
  {
    v45 = *(char **)v45;
    v46 = *(_QWORD *)(a1[1] + 8);
  }
  else
  {
    v46 = v45[23];
  }
  sub_207CF75E4(v45, v46, ".", 1, 0, (uint64_t)(a1 + 6));
  a1[11] = 0;
  a1[10] = (uint64_t)(a1 + 11);
  a1[9] = a5;
  a1[12] = 0;
  sub_207F041CC(a1 + 10, *(_QWORD **)a6, (_QWORD *)(a6 + 8));
  return a1;
}

void sub_207F00440(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22,uint64_t a23,char a24)
{
  if (a22 && a21 < 0)
    operator delete(__p);
  if (a14 < 0)
  {
    operator delete(a9);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

void sub_207F00508(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  uint64_t v24;

  if (a24 < 0)
    operator delete(__p);
  sub_207CA9EF0((uint64_t)&a9);
  sub_207C99D78(v24);
  _Unwind_Resume(a1);
}

void sub_207F00520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2082155DC((void **)va);
  JUMPOUT(0x207F0052CLL);
}

uint64_t sub_207F00544(uint64_t a1)
{
  return a1 + 240;
}

void ***sub_207F0054C(void ***a1)
{
  void **v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((_BYTE *)v2 + 48) && *((char *)v2 + 47) < 0)
    {
      operator delete(v2[3]);
      if ((*((char *)v2 + 23) & 0x80000000) == 0)
        goto LABEL_6;
    }
    else if ((*((char *)v2 + 23) & 0x80000000) == 0)
    {
LABEL_6:
      operator delete(v2);
      return a1;
    }
    operator delete(*v2);
    goto LABEL_6;
  }
  return a1;
}

void sub_207F005B4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  BOOL v9;
  __int16 v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  unint64_t v23;
  char *v24;
  char *v25;
  unint64_t v26;
  char *v27;
  int64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 *v36;
  char *v37;
  uint64_t v38;
  __int128 v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  unint64_t v47;
  char *v48;
  char *v49;
  unint64_t v50;
  int64_t v51;
  unint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 *v58;
  char *v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  void *v63;
  _QWORD *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  _QWORD *v72;
  _QWORD *v73;
  unint64_t v74;
  void **v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t *v79;
  unint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  void *v98;
  unint64_t v99;
  char *v100;
  void *v101;
  char *v102;
  char *v103;
  char *v104;
  void *v105;
  unint64_t v106;
  unint64_t v107;
  _BYTE *v108;
  unint64_t v109;
  char *v110;
  int64_t v111;
  unint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  unint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char *v123;
  unint64_t v124;
  char *v125;
  unint64_t v126;
  int64_t v127;
  unint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __int128 *v134;
  char *v135;
  uint64_t v136;
  __int128 v137;
  uint64_t v138;
  void *v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  __int128 *v149;
  _OWORD *v150;
  uint64_t v151;
  __int128 v152;
  uint64_t v153;
  _QWORD *v154;
  _QWORD *v155;
  unint64_t v156;
  _BYTE *v157;
  unint64_t v158;
  char *v159;
  int64_t v160;
  unint64_t v161;
  char *v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t v166;
  __int128 *v167;
  _OWORD *v168;
  uint64_t v169;
  __int128 v170;
  uint64_t v171;
  void **v172;
  unint64_t v173;
  void *v174;
  uint64_t v175;
  char *v176;
  void *v177;
  _QWORD *v179;
  void *__p[2];
  __int128 v181;
  __int128 v182;
  void *v183;

  v1 = *(_QWORD *)(a1 + 48);
  v2 = *(_QWORD **)(v1 + 80);
  v3 = (_QWORD *)(v1 + 88);
  *(_OWORD *)__p = 0u;
  v181 = 0u;
  v182 = 0u;
  if (v2 == v3)
    goto LABEL_207;
  v4 = 0;
  v5 = v2;
  do
  {
    v6 = v4;
    v7 = (_QWORD *)v5[1];
    if (v7)
    {
      do
      {
        v8 = v7;
        v7 = (_QWORD *)*v7;
      }
      while (v7);
    }
    else
    {
      do
      {
        v8 = (_QWORD *)v5[2];
        v9 = *v8 == (_QWORD)v5;
        v5 = v8;
      }
      while (!v9);
    }
    ++v4;
    v5 = v8;
  }
  while (v8 != v3);
  v10 = v6 + 2;
  v11 = (unint64_t)(v6 + 2) >> 9;
  if ((v10 & 0x1FF) != 0)
    v12 = v11 + 1;
  else
    v12 = v11;
  if (!v12)
  {
    v64 = 0;
    v15 = 0;
    v65 = v4 + ((uint64_t)-MEMORY[0] >> 3);
    if (v65 < 1)
      goto LABEL_74;
    goto LABEL_71;
  }
  v13 = (char *)operator new(8 * v12);
  v14 = &v13[8 * v12];
  v15 = v13;
  v16 = v13;
  do
  {
    v17 = operator new(0x1000uLL);
    if (v16 != v14)
      goto LABEL_16;
    if (v15 > v13)
    {
      v18 = (v15 - v13) >> 3;
      if (v18 >= -1)
        v19 = v18 + 1;
      else
        v19 = v18 + 2;
      v20 = v19 >> 1;
      v21 = &v15[-8 * (v19 >> 1)];
      v22 = v14;
      if (v14 != v15)
      {
        memmove(v21, v15, v14 - v15);
        v22 = v15;
      }
      v16 = &v21[v14 - v15];
      v15 = &v22[-8 * v20];
      goto LABEL_16;
    }
    if (v14 == v13)
      v23 = 1;
    else
      v23 = (v14 - v13) >> 2;
    if (v23 >> 61)
      sub_207CA3AB8();
    v24 = (char *)operator new(8 * v23);
    v25 = v13;
    v26 = v23 >> 2;
    v27 = &v24[8 * (v23 >> 2)];
    v16 = v27;
    v28 = v14 - v15;
    if (v14 != v15)
    {
      v16 = &v27[v28 & 0xFFFFFFFFFFFFFFF8];
      v29 = v28 - 8;
      if (v29 >= 0x38 && (v30 = 8 * v26, (unint64_t)(&v24[8 * v26] - v15) >= 0x20))
      {
        v34 = (v29 >> 3) + 1;
        v35 = 8 * (v34 & 0x3FFFFFFFFFFFFFFCLL);
        v31 = &v27[v35];
        v32 = &v15[v35];
        v36 = (__int128 *)(v15 + 16);
        v37 = &v24[v30 + 16];
        v38 = v34 & 0x3FFFFFFFFFFFFFFCLL;
        do
        {
          v39 = *v36;
          *((_OWORD *)v37 - 1) = *(v36 - 1);
          *(_OWORD *)v37 = v39;
          v36 += 2;
          v37 += 32;
          v38 -= 4;
        }
        while (v38);
        if (v34 == (v34 & 0x3FFFFFFFFFFFFFFCLL))
          goto LABEL_33;
      }
      else
      {
        v31 = &v24[8 * (v23 >> 2)];
        v32 = v15;
      }
      do
      {
        v33 = *(_QWORD *)v32;
        v32 += 8;
        *(_QWORD *)v31 = v33;
        v31 += 8;
      }
      while (v31 != v16);
    }
LABEL_33:
    v14 = &v24[8 * v23];
    if (v25)
      operator delete(v25);
    v15 = &v24[8 * (v23 >> 2)];
    v13 = v24;
LABEL_16:
    *(_QWORD *)v16 = v17;
    v16 += 8;
    --v12;
  }
  while (v12);
  v40 = (char *)__p[1];
  v41 = (char *)v181;
  while (v41 != v40)
  {
    if (v15 == v13)
    {
      if (v16 >= v14)
      {
        if (v14 == v13)
          v47 = 1;
        else
          v47 = (v14 - v13) >> 2;
        if (v47 >> 61)
          sub_207CA3AB8();
        v48 = (char *)operator new(8 * v47);
        v49 = v48;
        v50 = (v47 + 3) >> 2;
        v15 = &v48[8 * v50];
        v51 = v16 - v13;
        v9 = v16 == v13;
        v16 = v15;
        if (!v9)
        {
          v16 = &v15[v51 & 0xFFFFFFFFFFFFFFF8];
          v52 = v51 - 8;
          v53 = &v48[8 * v50];
          v54 = v13;
          if (v52 < 0x38)
            goto LABEL_228;
          v55 = 8 * v50;
          v53 = &v48[8 * v50];
          v54 = v13;
          if ((unint64_t)(v53 - v13) < 0x20)
            goto LABEL_228;
          v56 = (v52 >> 3) + 1;
          v57 = 8 * (v56 & 0x3FFFFFFFFFFFFFFCLL);
          v53 = &v15[v57];
          v54 = &v13[v57];
          v58 = (__int128 *)(v13 + 16);
          v59 = &v48[v55 + 16];
          v60 = v56 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v61 = *v58;
            *((_OWORD *)v59 - 1) = *(v58 - 1);
            *(_OWORD *)v59 = v61;
            v58 += 2;
            v59 += 32;
            v60 -= 4;
          }
          while (v60);
          if (v56 != (v56 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_228:
            do
            {
              v62 = *(_QWORD *)v54;
              v54 += 8;
              *(_QWORD *)v53 = v62;
              v53 += 8;
            }
            while (v53 != v16);
          }
        }
        v14 = &v48[8 * v47];
        if (v13)
          operator delete(v13);
        v13 = v49;
      }
      else
      {
        v43 = (v14 - v16) >> 3;
        if (v43 >= -1)
          v44 = v43 + 1;
        else
          v44 = v43 + 2;
        v45 = v44 >> 1;
        v15 = &v13[8 * (v44 >> 1)];
        v46 = v13;
        if (v16 != v13)
        {
          memmove(v15, v13, v16 - v13);
          v46 = v16;
        }
        v16 = &v46[8 * v45];
      }
    }
    v42 = *((_QWORD *)v41 - 1);
    v41 -= 8;
    *((_QWORD *)v15 - 1) = v42;
    v15 -= 8;
    v40 = (char *)__p[1];
  }
  v63 = __p[0];
  __p[0] = v13;
  __p[1] = v15;
  *(_QWORD *)&v181 = v16;
  *((_QWORD *)&v181 + 1) = v14;
  *(_QWORD *)&v182 = 0;
  if (v63)
    operator delete(v63);
  if (v16 == v15)
  {
    v64 = 0;
    v65 = v4 + ((uint64_t)-*(_QWORD *)v15 >> 3);
    if (v65 < 1)
      goto LABEL_74;
    goto LABEL_71;
  }
  v64 = *(_QWORD **)v15;
  v65 = v4;
  if (v4 >= 1)
  {
LABEL_71:
    v66 = &v15[8 * ((unint64_t)v65 >> 9)];
    v67 = *(_QWORD *)v66 + 8 * (v65 & 0x1FF);
    if (v64 == (_QWORD *)v67)
      goto LABEL_207;
LABEL_75:
    v68 = 0;
    do
    {
      v69 = v67;
      if (v15 != v66)
        v69 = *(_QWORD *)v15 + 4096;
      if (v64 == (_QWORD *)v69)
      {
        v69 = (uint64_t)v64;
      }
      else
      {
        v70 = v64;
        do
        {
          *v70++ = v2[4];
          v71 = (_QWORD *)v2[1];
          v72 = v2;
          if (v71)
          {
            do
            {
              v2 = v71;
              v71 = (_QWORD *)*v71;
            }
            while (v71);
          }
          else
          {
            do
            {
              v2 = (_QWORD *)v72[2];
              v9 = *v2 == (_QWORD)v72;
              v72 = v2;
            }
            while (!v9);
          }
        }
        while (v70 != (_QWORD *)v69);
      }
      v68 += (v69 - (uint64_t)v64) >> 3;
      if (v15 == v66)
        break;
      v73 = (_QWORD *)*((_QWORD *)v15 + 1);
      v15 += 8;
      v64 = v73;
    }
    while (v73 != (_QWORD *)v67);
    *((_QWORD *)&v182 + 1) = v68;
    if (!v68)
      goto LABEL_207;
    v74 = 0;
    v75 = (void **)__p[1];
    while (1)
    {
      v76 = *(uint64_t *)((char *)v75 + ((v74 >> 6) & 0x3FFFFFFFFFFFFF8));
      v77 = *(_QWORD *)(v76 + 8 * (v74 & 0x1FF));
      if (!**(_BYTE **)(v77 + 32))
      {
        v79 = *(unint64_t **)(v77 + 40);
        v80 = atomic_load(*(unint64_t **)(a1 + 40));
        do
          __ldaxr(v79);
        while (__stlxr(v80, v79));
        v81 = *(_QWORD *)(*(_QWORD *)(v76 + 8 * (v74 & 0x1FF)) + 48);
        v82 = *(_QWORD **)(v81 + 80);
        v68 = *((_QWORD *)&v182 + 1);
        v74 = v182;
        v179 = (_QWORD *)(v81 + 88);
        if (v82 != (_QWORD *)(v81 + 88))
          break;
      }
LABEL_94:
      v75 = (void **)__p[1];
      --v68;
      v78 = v74 + 1;
      *(_QWORD *)&v182 = v74 + 1;
      *((_QWORD *)&v182 + 1) = v68;
      if (v74 + 1 >= 0x400)
      {
        v75 = (void **)((char *)__p[1] + 8);
        operator delete(*(void **)__p[1]);
        v78 = v74 - 511;
        __p[1] = v75;
        *(_QWORD *)&v182 = v74 - 511;
      }
      v74 = v78;
      if (!v68)
        goto LABEL_208;
    }
    while (1)
    {
      v84 = (char *)__p[1];
      v83 = (char *)v181;
      v85 = v181 - (unint64_t)__p[1];
      if ((void *)v181 == __p[1])
        v86 = 0;
      else
        v86 = (((_QWORD)v181 - (unint64_t)__p[1]) << 6) - 1;
      v87 = v74 + v68;
      if (v86 != v74 + v68)
        goto LABEL_187;
      if (v74 >= 0x200)
      {
        *(_QWORD *)&v182 = v74 - 512;
        v88 = (char *)__p[1] + 8;
        v89 = *(_QWORD *)__p[1];
        __p[1] = (char *)__p[1] + 8;
        if ((_QWORD)v181 != *((_QWORD *)&v181 + 1))
        {
LABEL_184:
          *(_QWORD *)v83 = v89;
          goto LABEL_185;
        }
        v90 = __p[0];
        if (v88 > __p[0])
        {
          v91 = (v88 - (char *)__p[0]) >> 3;
          if (v91 >= -1)
            v92 = v91 + 1;
          else
            v92 = v91 + 2;
          v93 = v92 >> 1;
          v94 = &v88[-8 * (v92 >> 1)];
          v95 = v181 - (_QWORD)v88;
          if ((char *)v181 != v88)
          {
            memmove(&v88[-8 * (v92 >> 1)], v84 + 8, v181 - (_QWORD)v88);
            v83 = v84 + 8;
          }
          v96 = &v83[-8 * v93];
          v83 = &v94[v95];
          __p[1] = v96;
          *(_QWORD *)&v181 = &v94[v95];
          goto LABEL_184;
        }
        if ((void *)v181 == __p[0])
          v107 = 1;
        else
          v107 = (uint64_t)(v181 - (unint64_t)__p[0]) >> 2;
        if (v107 >> 61)
          goto LABEL_222;
        v108 = operator new(8 * v107);
        v109 = v107 >> 2;
        v110 = &v108[8 * (v107 >> 2)];
        v111 = v83 - v88;
        v9 = v83 == v88;
        v83 = v110;
        if (!v9)
        {
          v83 = &v110[v111 & 0xFFFFFFFFFFFFFFF8];
          v112 = v111 - 8;
          if (v112 < 0x38)
          {
            v113 = &v108[8 * (v107 >> 2)];
            goto LABEL_181;
          }
          v145 = 8 * v109;
          v146 = &v108[8 * v109] - v88;
          v113 = &v108[8 * (v107 >> 2)];
          if (v146 < 0x20)
            goto LABEL_229;
          v147 = (v112 >> 3) + 1;
          v148 = 8 * (v147 & 0x3FFFFFFFFFFFFFFCLL);
          v113 = &v110[v148];
          v88 += v148;
          v149 = (__int128 *)(v84 + 24);
          v150 = &v108[v145 + 16];
          v151 = v147 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v152 = *v149;
            *(v150 - 1) = *(v149 - 1);
            *v150 = v152;
            v149 += 2;
            v150 += 2;
            v151 -= 4;
          }
          while (v151);
          if (v147 != (v147 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_229:
            do
            {
LABEL_181:
              v153 = *(_QWORD *)v88;
              v88 += 8;
              *(_QWORD *)v113 = v153;
              v113 += 8;
            }
            while (v113 != v83);
          }
        }
        __p[0] = v108;
        __p[1] = &v108[8 * (v107 >> 2)];
        *(_QWORD *)&v181 = v83;
        *((_QWORD *)&v181 + 1) = &v108[8 * v107];
        if (v90)
          operator delete(v90);
        goto LABEL_184;
      }
      v97 = v85 >> 3;
      v98 = __p[0];
      if (v85 >> 3 >= (unint64_t)((uint64_t)(*((_QWORD *)&v181 + 1) - (unint64_t)__p[0]) >> 3))
        break;
      if (*((_QWORD *)&v181 + 1) == (_QWORD)v181)
      {
        v183 = operator new(0x1000uLL);
        sub_207CC1470(__p, &v183);
        v115 = (char *)__p[1];
        v114 = (char *)v181;
        v116 = (char *)__p[1] + 8;
        v117 = *(_QWORD *)__p[1];
        __p[1] = (char *)__p[1] + 8;
        if ((_QWORD)v181 != *((_QWORD *)&v181 + 1))
          goto LABEL_138;
        v139 = __p[0];
        if (v116 > __p[0])
        {
          v140 = (v116 - (char *)__p[0]) >> 3;
          if (v140 >= -1)
            v141 = v140 + 1;
          else
            v141 = v140 + 2;
          v142 = v141 >> 1;
          v143 = &v116[-8 * v142];
          v144 = v181 - (_QWORD)v116;
          if ((char *)v181 != v116)
            memmove(&v116[-8 * v142], v116, v181 - (_QWORD)v116);
          __p[1] = v143;
          *(_QWORD *)&v181 = &v143[v144];
          *(_QWORD *)&v143[v144] = v117;
          goto LABEL_185;
        }
        if ((void *)v181 == __p[0])
          v156 = 1;
        else
          v156 = (uint64_t)(v181 - (unint64_t)__p[0]) >> 2;
        if (v156 >> 61)
          goto LABEL_222;
        v157 = operator new(8 * v156);
        v158 = v156 >> 2;
        v159 = &v157[8 * (v156 >> 2)];
        v160 = v114 - v116;
        v9 = v114 == v116;
        v114 = v159;
        if (!v9)
        {
          v114 = &v159[v160 & 0xFFFFFFFFFFFFFFF8];
          v161 = v160 - 8;
          if (v161 < 0x38)
          {
            v162 = &v157[8 * (v156 >> 2)];
            goto LABEL_204;
          }
          v163 = 8 * v158;
          v164 = &v157[8 * v158] - v116;
          v162 = &v157[8 * (v156 >> 2)];
          if (v164 < 0x20)
            goto LABEL_230;
          v165 = (v161 >> 3) + 1;
          v166 = 8 * (v165 & 0x3FFFFFFFFFFFFFFCLL);
          v162 = &v159[v166];
          v116 += v166;
          v167 = (__int128 *)(v115 + 24);
          v168 = &v157[v163 + 16];
          v169 = v165 & 0x3FFFFFFFFFFFFFFCLL;
          do
          {
            v170 = *v167;
            *(v168 - 1) = *(v167 - 1);
            *v168 = v170;
            v167 += 2;
            v168 += 2;
            v169 -= 4;
          }
          while (v169);
          if (v165 != (v165 & 0x3FFFFFFFFFFFFFFCLL))
          {
LABEL_230:
            do
            {
LABEL_204:
              v171 = *(_QWORD *)v116;
              v116 += 8;
              *(_QWORD *)v162 = v171;
              v162 += 8;
            }
            while (v162 != v114);
          }
        }
        __p[0] = v157;
        __p[1] = &v157[8 * (v156 >> 2)];
        *(_QWORD *)&v181 = v114;
        *((_QWORD *)&v181 + 1) = &v157[8 * v156];
        if (v139)
          operator delete(v139);
LABEL_138:
        *(_QWORD *)v114 = v117;
LABEL_185:
        *(_QWORD *)&v181 = v181 + 8;
        goto LABEL_186;
      }
      v183 = operator new(0x1000uLL);
      sub_207CC12E4((char **)__p, &v183);
LABEL_186:
      v68 = *((_QWORD *)&v182 + 1);
      v74 = v182;
      v84 = (char *)__p[1];
      v87 = v182 + *((_QWORD *)&v182 + 1);
LABEL_187:
      *(_QWORD *)(*(_QWORD *)&v84[(v87 >> 6) & 0x3FFFFFFFFFFFFF8] + 8 * (v87 & 0x1FF)) = v82[4];
      *((_QWORD *)&v182 + 1) = ++v68;
      v154 = (_QWORD *)v82[1];
      if (v154)
      {
        do
        {
          v155 = v154;
          v154 = (_QWORD *)*v154;
        }
        while (v154);
      }
      else
      {
        do
        {
          v155 = (_QWORD *)v82[2];
          v9 = *v155 == (_QWORD)v82;
          v82 = v155;
        }
        while (!v9);
      }
      v82 = v155;
      if (v155 == v179)
        goto LABEL_94;
    }
    if (*((void **)&v181 + 1) == __p[0])
      v99 = 1;
    else
      v99 = (uint64_t)(*((_QWORD *)&v181 + 1) - (unint64_t)__p[0]) >> 2;
    if (v99 >> 61)
LABEL_222:
      sub_207CA3AB8();
    v100 = (char *)operator new(8 * v99);
    v101 = operator new(0x1000uLL);
    v102 = &v100[8 * v97];
    v103 = &v100[8 * v99];
    if (v97 != v99)
    {
      *(_QWORD *)v102 = v101;
      v104 = v102 + 8;
      if (v83 == v84)
        goto LABEL_123;
      do
      {
LABEL_147:
        if (v102 == v100)
        {
          if (v104 >= v103)
          {
            if (v103 == v102)
              v124 = 1;
            else
              v124 = (v103 - v102) >> 2;
            if (v124 >> 61)
              sub_207CA3AB8();
            v125 = (char *)operator new(8 * v124);
            v100 = v125;
            v126 = (v124 + 3) >> 2;
            v119 = &v125[8 * v126];
            v127 = v104 - v102;
            v9 = v104 == v102;
            v104 = v119;
            if (!v9)
            {
              v104 = &v119[v127 & 0xFFFFFFFFFFFFFFF8];
              v128 = v127 - 8;
              v129 = &v125[8 * v126];
              v130 = v102;
              if (v128 < 0x38)
                goto LABEL_231;
              v131 = 8 * v126;
              v129 = &v125[8 * v126];
              v130 = v102;
              if ((unint64_t)(v129 - v102) < 0x20)
                goto LABEL_231;
              v132 = (v128 >> 3) + 1;
              v133 = 8 * (v132 & 0x3FFFFFFFFFFFFFFCLL);
              v129 = &v119[v133];
              v130 = &v102[v133];
              v134 = (__int128 *)(v102 + 16);
              v135 = &v125[v131 + 16];
              v136 = v132 & 0x3FFFFFFFFFFFFFFCLL;
              do
              {
                v137 = *v134;
                *((_OWORD *)v135 - 1) = *(v134 - 1);
                *(_OWORD *)v135 = v137;
                v134 += 2;
                v135 += 32;
                v136 -= 4;
              }
              while (v136);
              if (v132 != (v132 & 0x3FFFFFFFFFFFFFFCLL))
              {
LABEL_231:
                do
                {
                  v138 = *(_QWORD *)v130;
                  v130 += 8;
                  *(_QWORD *)v129 = v138;
                  v129 += 8;
                }
                while (v129 != v104);
              }
            }
            v103 = &v125[8 * v124];
            operator delete(v102);
          }
          else
          {
            v121 = (v103 - v104) >> 3;
            if (v121 >= -1)
              v122 = v121 + 1;
            else
              v122 = v121 + 2;
            v123 = &v104[8 * (v122 >> 1)];
            v119 = &v102[8 * (v122 >> 1)];
            if (v104 == v102)
            {
              v100 = v104;
            }
            else
            {
              memmove(&v102[8 * (v122 >> 1)], v102, v104 - v102);
              v100 = v102;
            }
            v104 = v123;
          }
        }
        else
        {
          v119 = v102;
        }
        v120 = *((_QWORD *)v83 - 1);
        v83 -= 8;
        *((_QWORD *)v119 - 1) = v120;
        v102 = v119 - 8;
      }
      while (v83 != __p[1]);
      v98 = __p[0];
      __p[0] = v100;
      __p[1] = v102;
      *(_QWORD *)&v181 = v104;
      *((_QWORD *)&v181 + 1) = v103;
      if (!v98)
        goto LABEL_186;
LABEL_169:
      operator delete(v98);
      goto LABEL_186;
    }
    v105 = v101;
    if (v85 < 1)
    {
      if (v83 == v84)
        v118 = 1;
      else
        v118 = v85 >> 2;
      if (v118 >> 61)
        sub_207CA3AB8();
      v102 = (char *)operator new(8 * v118);
      v103 = &v102[8 * v118];
      operator delete(v100);
      v100 = v102;
      *(_QWORD *)v102 = v105;
      v104 = v102 + 8;
      if (v83 != v84)
        goto LABEL_147;
    }
    else
    {
      v106 = v97 + 2;
      if (v97 >= -1)
        v106 = v97 + 1;
      v102 -= 8 * (v106 >> 1);
      *(_QWORD *)v102 = v101;
      v104 = v102 + 8;
      if (v83 != v84)
        goto LABEL_147;
    }
LABEL_123:
    __p[0] = v100;
    __p[1] = v102;
    *(_QWORD *)&v181 = v104;
    *((_QWORD *)&v181 + 1) = v103;
    if (!v98)
      goto LABEL_186;
    goto LABEL_169;
  }
LABEL_74:
  v66 = &v15[-8 * ((unint64_t)(511 - v65) >> 9)];
  v67 = *(_QWORD *)v66 + 8 * (~(511 - (_WORD)v65) & 0x1FF);
  if (v64 != (_QWORD *)v67)
    goto LABEL_75;
LABEL_207:
  v75 = (void **)__p[1];
LABEL_208:
  v172 = (void **)v181;
  *((_QWORD *)&v182 + 1) = 0;
  v173 = v181 - (_QWORD)v75;
  if ((_QWORD)v181 - (_QWORD)v75 >= 0x11uLL)
  {
    do
    {
      v174 = *v75++;
      operator delete(v174);
      __p[1] = v75;
      v173 -= 8;
    }
    while (v173 > 0x10);
  }
  if (v173 >> 3 == 1)
  {
    v175 = 256;
LABEL_214:
    *(_QWORD *)&v182 = v175;
  }
  else if (v173 >> 3 == 2)
  {
    v175 = 512;
    goto LABEL_214;
  }
  v176 = (char *)((char *)v75 - (char *)v172);
  if (v75 != v172)
  {
    do
    {
      v177 = *v75++;
      operator delete(v177);
    }
    while (v75 != v172);
    *(_QWORD *)&v181 = (char *)v172 + ((unint64_t)(v176 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  if (__p[0])
    operator delete(__p[0]);
}

void sub_207F011C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  void *v14;

  if (a13 == a12)
  {
    v14 = __p;
    if (!__p)
      goto LABEL_3;
  }
  else
  {
    v14 = __p;
    if (!__p)
LABEL_3:
      _Unwind_Resume(exception_object);
  }
  operator delete(v14);
  _Unwind_Resume(exception_object);
}

void sub_207F011DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  void *v11;
  void *v12;

  operator delete(v12);
  operator delete(v11);
  sub_207CC46C8((uint64_t)&a11);
  _Unwind_Resume(a1);
}

void sub_207F01204(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13)
{
  void *v13;
  void *v15;

  if (v13)
  {
    operator delete(v13);
    if (a13 == a12)
    {
LABEL_3:
      v15 = a11;
      if (!a11)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if (a13 == a12)
  {
    goto LABEL_3;
  }
  v15 = a11;
  if (!a11)
LABEL_4:
    _Unwind_Resume(a1);
LABEL_7:
  operator delete(v15);
  _Unwind_Resume(a1);
}

void sub_207F01268()
{
  __cxa_end_catch();
  JUMPOUT(0x207F01270);
}

uint64_t sub_207F01308(uint64_t a1)
{
  return a1 + 8;
}

uint64_t sub_207F01310(uint64_t a1, void *__src, size_t __len, uint64_t *a4, char a5)
{
  void *v10;
  size_t v11;
  size_t v12;
  _BYTE *v13;
  _QWORD *v14;
  uint64_t v15;

  *(_QWORD *)a1 = &off_24C078EF0;
  if (__len >= 0x7FFFFFFFFFFFFFF8)
    sub_207C95C50();
  if (__len >= 0x17)
  {
    v11 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17)
      v11 = __len | 7;
    v12 = v11 + 1;
    v10 = operator new(v11 + 1);
    *(_QWORD *)(a1 + 16) = __len;
    *(_QWORD *)(a1 + 24) = v12 | 0x8000000000000000;
    *(_QWORD *)(a1 + 8) = v10;
  }
  else
  {
    *(_BYTE *)(a1 + 31) = __len;
    v10 = (void *)(a1 + 8);
    if (!__len)
      goto LABEL_9;
  }
  memmove(v10, __src, __len);
LABEL_9:
  *((_BYTE *)v10 + __len) = 0;
  v13 = operator new(1uLL);
  *v13 = a5;
  *(_QWORD *)(a1 + 32) = v13;
  v14 = operator new(8uLL);
  *v14 = v13;
  *(_QWORD *)(a1 + 40) = v14;
  v15 = *a4;
  *a4 = 0;
  *(_QWORD *)(a1 + 48) = v15;
  return a1;
}

void sub_207F01408(_Unwind_Exception *a1)
{
  uint64_t v1;
  void **v2;
  void *v3;

  *(_QWORD *)(v1 + 32) = 0;
  operator delete(v3);
  if (*(char *)(v1 + 31) < 0)
    operator delete(*v2);
  _Unwind_Resume(a1);
}

uint64_t sub_207F01438(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;

  v2 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = 0;
  if (v2)
    sub_207F03820(v2);
  v3 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = 0;
  if (v3)
    operator delete(v3);
  v4 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = 0;
  if (v4)
    operator delete(v4);
  if (*(char *)(a1 + 31) < 0)
    operator delete(*(void **)(a1 + 8));
  return a1;
}

void sub_207F014A8(char *__p)
{
  uint64_t v2;
  void *v3;
  void *v4;

  v2 = *((_QWORD *)__p + 6);
  *((_QWORD *)__p + 6) = 0;
  if (v2)
    sub_207F03820(v2);
  v3 = (void *)*((_QWORD *)__p + 5);
  *((_QWORD *)__p + 5) = 0;
  if (v3)
    operator delete(v3);
  v4 = (void *)*((_QWORD *)__p + 4);
  *((_QWORD *)__p + 4) = 0;
  if (v4)
    operator delete(v4);
  if (__p[31] < 0)
    operator delete(*((void **)__p + 1));
  operator delete(__p);
}

void sub_207F01518(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  std::__shared_mutex_base *v5;
  _BYTE *v6;
  uint64_t v7;
  std::mutex *v8;
  _QWORD *v9;
  _QWORD *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  _BYTE *v20;
  void *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _BYTE *v30;
  unint64_t v31;
  unint64_t *v32;
  unint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  std::runtime_error *exception;

  v3 = *(_QWORD **)(a1 + 48);
  if ((_DWORD)a2)
  {
    v5 = (std::__shared_mutex_base *)(*v3 + 72);
    std::__shared_mutex_base::lock(v5);
    v6 = *(_BYTE **)(a1 + 32);
    if (!*v6)
    {
      v30 = operator new(1uLL);
      *v30 = a2;
      *(_QWORD *)(a1 + 32) = v30;
      operator delete(v6);
      v31 = *(_QWORD *)(a1 + 32);
      v32 = (unint64_t *)operator new(8uLL);
      *v32 = v31;
      v33 = *(unint64_t **)(a1 + 40);
      v34 = atomic_load(v32);
      do
        __ldaxr(v33);
      while (__stlxr(v34, v33));
      operator delete(v32);
      sub_207F005B4(a1);
      v35 = *v3;
      v8 = *(std::mutex **)(v35 + 8);
      std::mutex::lock(v8);
      v36 = *(_QWORD **)(v35 + 16);
      v37 = (_QWORD *)(v35 + 24);
      if (v36 != v37)
      {
        do
        {
          v38 = *(char *)(a1 + 31);
          if (v38 >= 0)
            v39 = a1 + 8;
          else
            v39 = *(_QWORD *)(a1 + 8);
          if (v38 >= 0)
            v40 = *(unsigned __int8 *)(a1 + 31);
          else
            v40 = *(_QWORD *)(a1 + 16);
          (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v36[4] + 16))(v36[4], v39, v40, a2);
          v41 = (_QWORD *)v36[1];
          if (v41)
          {
            do
            {
              v42 = v41;
              v41 = (_QWORD *)*v41;
            }
            while (v41);
          }
          else
          {
            do
            {
              v42 = (_QWORD *)v36[2];
              v16 = *v42 == (_QWORD)v36;
              v36 = v42;
            }
            while (!v16);
          }
          v36 = v42;
        }
        while (v42 != v37);
      }
      goto LABEL_59;
    }
    if (*v6 != (_DWORD)a2)
    {
      *v6 = a2;
      v7 = *v3;
      v8 = *(std::mutex **)(v7 + 8);
      std::mutex::lock(v8);
      v9 = *(_QWORD **)(v7 + 16);
      v10 = (_QWORD *)(v7 + 24);
      if (v9 != v10)
      {
        do
        {
          v11 = *(char *)(a1 + 31);
          if (v11 >= 0)
            v12 = a1 + 8;
          else
            v12 = *(_QWORD *)(a1 + 8);
          if (v11 >= 0)
            v13 = *(unsigned __int8 *)(a1 + 31);
          else
            v13 = *(_QWORD *)(a1 + 16);
          (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v9[4] + 16))(v9[4], v12, v13, a2);
          v14 = (_QWORD *)v9[1];
          if (v14)
          {
            do
            {
              v15 = v14;
              v14 = (_QWORD *)*v14;
            }
            while (v14);
          }
          else
          {
            do
            {
              v15 = (_QWORD *)v9[2];
              v16 = *v15 == (_QWORD)v9;
              v9 = v15;
            }
            while (!v16);
          }
          v9 = v15;
        }
        while (v15 != v10);
      }
LABEL_59:
      std::mutex::unlock(v8);
    }
  }
  else
  {
    v17 = *(unsigned __int8 *)(a1 + 31);
    if ((v17 & 0x80u) != 0)
      v17 = *(_QWORD *)(a1 + 16);
    if (!v17)
    {
      exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
      std::runtime_error::runtime_error(exception, "Cannot set root context to inherit its enable-state");
      __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
    }
    v5 = (std::__shared_mutex_base *)(*v3 + 72);
    std::__shared_mutex_base::lock(v5);
    if (**(_BYTE **)(a1 + 32))
    {
      v18 = *(unint64_t **)(a1 + 40);
      v19 = atomic_load(*(unint64_t **)(v3[9] + 40));
      do
        __ldaxr(v18);
      while (__stlxr(v19, v18));
      sub_207F005B4(a1);
      v20 = operator new(1uLL);
      *v20 = 0;
      v21 = *(void **)(a1 + 32);
      *(_QWORD *)(a1 + 32) = v20;
      if (v21)
        operator delete(v21);
      v22 = *v3;
      v8 = *(std::mutex **)(*v3 + 8);
      std::mutex::lock(v8);
      v23 = *(_QWORD **)(v22 + 16);
      v24 = (_QWORD *)(v22 + 24);
      if (v23 != v24)
      {
        do
        {
          v25 = *(char *)(a1 + 31);
          if (v25 >= 0)
            v26 = a1 + 8;
          else
            v26 = *(_QWORD *)(a1 + 8);
          if (v25 >= 0)
            v27 = *(unsigned __int8 *)(a1 + 31);
          else
            v27 = *(_QWORD *)(a1 + 16);
          (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v23[4] + 16))(v23[4], v26, v27, 0);
          v28 = (_QWORD *)v23[1];
          if (v28)
          {
            do
            {
              v29 = v28;
              v28 = (_QWORD *)*v28;
            }
            while (v28);
          }
          else
          {
            do
            {
              v29 = (_QWORD *)v23[2];
              v16 = *v29 == (_QWORD)v23;
              v23 = v29;
            }
            while (!v16);
          }
          v23 = v29;
        }
        while (v29 != v24);
      }
      goto LABEL_59;
    }
  }
  std::__shared_mutex_base::unlock(v5);
}

void sub_207F01830(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_207F01848(_Unwind_Exception *a1)
{
  std::__shared_mutex_base *v1;

  std::__shared_mutex_base::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_207F01878(uint64_t a1)
{
  return **(_QWORD **)(a1 + 48);
}

uint64_t sub_207F01884(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48) + 8;
}

uint64_t sub_207F01890(uint64_t a1)
{
  return *(_QWORD *)(a1 + 48) + 24;
}

uint64_t **sub_207F0189C(uint64_t a1, char *a2, size_t a3)
{
  std::__shared_mutex_base *v6;
  uint64_t v7;
  uint64_t **v8;

  v6 = (std::__shared_mutex_base *)(a1 + 72);
  std::__shared_mutex_base::lock((std::__shared_mutex_base *)(a1 + 72));
  v8 = sub_207F01A44(a1, v7, a2, a3, 1);
  std::__shared_mutex_base::unlock(v6);
  return v8;
}

void sub_207F018FC(_Unwind_Exception *a1)
{
  std::__shared_mutex_base *v1;

  std::__shared_mutex_base::unlock(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_207F01914(uint64_t a1, const void *a2, size_t a3)
{
  std::__shared_mutex_base *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  int v11;
  uint64_t *v12;
  size_t v13;
  size_t v14;
  int v15;
  int v16;
  const void *v17;
  size_t v18;
  size_t v19;
  int v20;
  unint64_t v21;
  uint64_t v22;

  v6 = (std::__shared_mutex_base *)(a1 + 72);
  std::__shared_mutex_base::lock((std::__shared_mutex_base *)(a1 + 72));
  v9 = *(uint64_t **)(a1 + 56);
  v7 = (uint64_t *)(a1 + 56);
  v8 = v9;
  if (!v9)
    goto LABEL_32;
  v10 = v7;
  do
  {
    while (1)
    {
      v11 = *((char *)v8 + 55);
      v12 = v11 >= 0 ? v8 + 4 : (uint64_t *)v8[4];
      v13 = v11 >= 0 ? *((unsigned __int8 *)v8 + 55) : v8[5];
      v14 = v13 >= a3 ? a3 : v13;
      v15 = memcmp(a2, v12, v14);
      if (v15)
        break;
      if (a3 <= v13)
        goto LABEL_17;
LABEL_3:
      v8 = (uint64_t *)v8[1];
      if (!v8)
        goto LABEL_18;
    }
    if ((v15 & 0x80000000) == 0)
      goto LABEL_3;
LABEL_17:
    v10 = v8;
    v8 = (uint64_t *)*v8;
  }
  while (v8);
LABEL_18:
  if (v10 == v7)
    goto LABEL_32;
  v16 = *((char *)v10 + 55);
  if (v16 >= 0)
    v17 = v10 + 4;
  else
    v17 = (const void *)v10[4];
  if (v16 >= 0)
    v18 = *((unsigned __int8 *)v10 + 55);
  else
    v18 = v10[5];
  if (v18 >= a3)
    v19 = a3;
  else
    v19 = v18;
  v20 = memcmp(a2, v17, v19);
  if (v20)
  {
    if ((v20 & 0x80000000) == 0)
      goto LABEL_30;
LABEL_32:
    v22 = 0;
    v21 = 0;
  }
  else
  {
    if (a3 < v18)
      goto LABEL_32;
LABEL_30:
    v21 = v10[7] & 0xFFFFFFFFFFFFFF00;
    v22 = v10[7];
  }
  std::__shared_mutex_base::unlock(v6);
  return v21 | v22;
}

uint64_t **sub_207F01A44(uint64_t a1, uint64_t a2, char *a3, size_t a4, int a5)
{
  char *v8;
  size_t v9;
  uint64_t v10;
  uint64_t **v11;
  char *v12;
  char *v13;
  uint64_t **v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t **v17;
  uint64_t *v18;
  unint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t *v22;
  uint64_t **v23;
  BOOL v24;
  char *v25;
  int v26;
  int64_t v27;
  void *v28;
  size_t v29;
  char *v30;
  char *v31;
  size_t v32;
  uint64_t **v33;
  uint64_t **v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  const void *v53;
  unint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  int v58;
  _QWORD *v59;
  unint64_t v60;
  size_t v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t **v65;
  uint64_t *v66;
  uint64_t *v67;
  uint64_t **v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  unint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t *v76;
  unint64_t *v77;
  unint64_t v78;
  std::mutex *v79;
  _QWORD *v80;
  uint64_t *v81;
  uint64_t **v82;
  int v83;
  uint64_t *v84;
  uint64_t *v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t **v89;
  uint64_t v91;
  uint64_t *v92;
  uint64_t *v93;
  uint64_t **v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t *v97;
  __int128 v98;
  char *v99;
  __int128 v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  uint64_t v105;
  char v106;
  uint64_t v107;

  v8 = &a3[a4];
  v9 = 0;
  if (a4)
  {
    while (a3[v9] != 46)
    {
      if (a4 == ++v9)
      {
        v9 = a4;
        break;
      }
    }
  }
  v10 = 0;
  v11 = *(uint64_t ***)(a1 + 40);
  v97 = (uint64_t *)a3;
  *(_QWORD *)&v98 = &a3[a4];
  *((_QWORD *)&v98 + 1) = a3;
  v99 = a3;
  *(_QWORD *)&v100 = v9;
  BYTE8(v100) = 46;
  v101 = &unk_20823D9A8;
  v102 = &unk_20823D9A8;
  v103 = &unk_20823D9A8;
  v104 = &unk_20823D9A8;
  v105 = 0;
  v106 = 0;
  if (a4 && a3 != (char *)&unk_20823D9A8)
  {
    v10 = 0;
    v12 = a3;
    do
    {
      ++v10;
      v13 = &v12[v9];
      if (v13 == v8)
        break;
      v12 = v13 + 1;
      if (v13 + 1 == v8)
      {
        v9 = 0;
        v12 = &a3[a4];
      }
      else
      {
        v9 = 0;
        while (v12[v9] != 46)
        {
          if (v8 - v12 == ++v9)
          {
            v9 = v8 - v12;
            break;
          }
        }
      }
    }
    while (v12 != (char *)&unk_20823D9A8);
  }
  v91 = a1;
  v107 = v10;
  v94 = v11;
  LOBYTE(v95) = 0;
  sub_207F038FC((uint64_t)v11, (uint64_t *)&v97, 0, (uint64_t)&v94);
  v14 = v94;
  if ((_BYTE)v95)
    return v14;
  v89 = v94;
  v15 = v94[6];
  v95 = 0;
  v96 = 0;
  v92 = v15;
  v94 = &v95;
  v16 = (uint64_t *)v15[10];
  v17 = (uint64_t **)(v15 + 11);
  if (v16 != v15 + 11)
  {
    do
    {
      v19 = v16[4];
      if (*(char *)(v19 + 31) < 0)
      {
        v20 = *(char **)(v19 + 8);
        v21 = *(_QWORD *)(v19 + 16);
        if (v21 <= a4)
          goto LABEL_27;
      }
      else
      {
        v20 = (char *)(v19 + 8);
        v21 = *(unsigned __int8 *)(v19 + 31);
        if (v21 <= a4)
          goto LABEL_27;
      }
      if (!a4)
      {
LABEL_48:
        v33 = &v95;
        v34 = &v95;
        if (v95)
        {
          v35 = v95;
          while (1)
          {
            while (1)
            {
              v33 = (uint64_t **)v35;
              v36 = v35[4];
              if (v19 >= v36)
                break;
              v35 = *v33;
              v34 = v33;
              if (!*v33)
                goto LABEL_55;
            }
            if (v36 >= v19)
              break;
            v35 = v33[1];
            if (!v35)
            {
              v34 = v33 + 1;
              goto LABEL_55;
            }
          }
        }
        else
        {
LABEL_55:
          v37 = (uint64_t *)operator new(0x28uLL);
          v37[4] = v19;
          *v37 = 0;
          v37[1] = 0;
          v37[2] = (uint64_t)v33;
          *v34 = v37;
          if (*v94)
          {
            v94 = (uint64_t **)*v94;
            v37 = *v34;
          }
          sub_207CC24B4(v95, v37);
          ++v96;
        }
        v38 = (uint64_t *)v16[1];
        v39 = v16;
        if (v38)
        {
          do
          {
            v23 = (uint64_t **)v38;
            v38 = (uint64_t *)*v38;
          }
          while (v38);
        }
        else
        {
          do
          {
            v23 = (uint64_t **)v39[2];
            v24 = *v23 == v39;
            v39 = (uint64_t *)v23;
          }
          while (!v24);
        }
        if ((uint64_t *)v92[10] == v16)
          v92[10] = (uint64_t)v23;
        v18 = (uint64_t *)v92[11];
        --v92[12];
        sub_207CC2668(v18, v16);
        operator delete(v16);
        goto LABEL_20;
      }
      if ((uint64_t)v21 >= (uint64_t)a4)
      {
        v25 = &v20[v21];
        v26 = *a3;
        v27 = v21;
        v28 = v20;
        do
        {
          v29 = v27 - a4;
          if (v29 == -1)
            break;
          v30 = (char *)memchr(v28, v26, v29 + 1);
          if (!v30)
            break;
          v31 = v30;
          if (!memcmp(v30, a3, a4))
          {
            if (v31 == v25 || v20 != v31 || v21 <= a4 + 1 || v20[a4] != 46)
              break;
            v32 = a4;
            while (v20[v32 + 1] == 46)
            {
              if (v21 - 1 == ++v32)
                goto LABEL_27;
            }
            if (v32 == -2)
              break;
            goto LABEL_48;
          }
          v28 = v31 + 1;
          v27 = v25 - (v31 + 1);
        }
        while (v27 >= (uint64_t)a4);
      }
LABEL_27:
      v22 = (uint64_t *)v16[1];
      if (v22)
      {
        do
        {
          v23 = (uint64_t **)v22;
          v22 = (uint64_t *)*v22;
        }
        while (v22);
      }
      else
      {
        do
        {
          v23 = (uint64_t **)v16[2];
          v24 = *v23 == v16;
          v16 = (uint64_t *)v23;
        }
        while (!v24);
      }
LABEL_20:
      v16 = (uint64_t *)v23;
    }
    while (v23 != v17);
  }
  v40 = (uint64_t *)operator new(0x68uLL);
  v98 = 0uLL;
  v97 = (uint64_t *)&v98;
  sub_207F041CC((uint64_t *)&v97, v94, &v95);
  sub_207EFFE48(v40, v91, a3, a4, (uint64_t)v89, (uint64_t)&v97);
  sub_207F04340((_QWORD *)v98);
  v93 = v40;
  sub_207F01310((uint64_t)&v97, a3, a4, (uint64_t *)&v93, 0);
  v41 = (char *)operator new(0x38uLL);
  *(_QWORD *)v41 = &off_24C078EF0;
  *(_OWORD *)(v41 + 8) = v98;
  *((_QWORD *)v41 + 3) = v99;
  v98 = 0uLL;
  *((_OWORD *)v41 + 2) = v100;
  *((_QWORD *)v41 + 6) = v101;
  v99 = 0;
  v100 = 0uLL;
  v101 = 0;
  v42 = (uint64_t)v93;
  v93 = 0;
  if (v42)
    sub_207F03820(v42);
  v43 = (char *)operator new(0x40uLL);
  v44 = v43;
  v45 = (uint64_t *)(v91 + 56);
  v97 = (uint64_t *)v43;
  *(_QWORD *)&v98 = v91 + 56;
  BYTE8(v98) = 0;
  v46 = v43 + 32;
  if (a4 >= 0x7FFFFFFFFFFFFFF8)
    sub_207C95C50();
  if (a4 >= 0x17)
  {
    v50 = (a4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a4 | 7) != 0x17)
      v50 = a4 | 7;
    v51 = v50 + 1;
    v46 = operator new(v50 + 1);
    v44[5] = a4;
    v44[6] = v51 | 0x8000000000000000;
    v44[4] = v46;
LABEL_75:
    memmove(v46, a3, a4);
    v46[a4] = 0;
    v44[7] = v41;
    v47 = (uint64_t)v97;
    v48 = (uint64_t *)*v45;
    v49 = (uint64_t *)(v91 + 56);
    if (!*v45)
    {
LABEL_102:
      *(_QWORD *)v47 = 0;
      *(_QWORD *)(v47 + 8) = 0;
      *(_QWORD *)(v47 + 16) = v49;
      *v45 = v47;
      v64 = **(_QWORD **)(v91 + 48);
      if (v64)
      {
        *(_QWORD *)(v91 + 48) = v64;
        v47 = *v45;
      }
      sub_207CC24B4(*(uint64_t **)(v91 + 56), (uint64_t *)v47);
      ++*(_QWORD *)(v91 + 64);
      v49 = v97;
      goto LABEL_105;
    }
    goto LABEL_76;
  }
  v43[55] = a4;
  if (a4)
    goto LABEL_75;
  *v46 = 0;
  *((_QWORD *)v43 + 7) = v41;
  v47 = (uint64_t)v97;
  v48 = (uint64_t *)*v45;
  v49 = (uint64_t *)(v91 + 56);
  if (!*v45)
    goto LABEL_102;
LABEL_76:
  v52 = *(char *)(v47 + 55);
  if (v52 >= 0)
    v53 = (const void *)(v47 + 32);
  else
    v53 = *(const void **)(v47 + 32);
  if (v52 >= 0)
    v54 = *(unsigned __int8 *)(v47 + 55);
  else
    v54 = *(_QWORD *)(v47 + 40);
  while (1)
  {
    while (1)
    {
      v49 = v48;
      v57 = (_QWORD *)v48[4];
      v55 = v48 + 4;
      v56 = v57;
      v58 = *((char *)v55 + 23);
      v59 = v58 >= 0 ? v55 : v56;
      v60 = v58 >= 0 ? *((unsigned __int8 *)v55 + 23) : v55[1];
      v61 = v60 >= v54 ? v54 : v60;
      v62 = memcmp(v53, v59, v61);
      if (v62)
        break;
      if (v54 >= v60)
        goto LABEL_96;
LABEL_82:
      v48 = (uint64_t *)*v49;
      v45 = v49;
      if (!*v49)
        goto LABEL_102;
    }
    if (v62 < 0)
      goto LABEL_82;
LABEL_96:
    v63 = memcmp(v59, v53, v61);
    if (!v63)
      break;
    if ((v63 & 0x80000000) == 0)
      goto LABEL_107;
LABEL_100:
    v48 = (uint64_t *)v49[1];
    if (!v48)
    {
      v45 = v49 + 1;
      goto LABEL_102;
    }
  }
  if (v60 < v54)
    goto LABEL_100;
LABEL_107:
  if (!v47)
  {
LABEL_105:
    v65 = v89;
    v66 = v92;
    v14 = (uint64_t **)v49[7];
    v67 = *v17;
    v68 = v17;
    if (*v17)
      goto LABEL_123;
LABEL_127:
    v74 = (uint64_t *)operator new(0x28uLL);
    v74[4] = (uint64_t)v14;
    *v74 = 0;
    v74[1] = 0;
    v74[2] = (uint64_t)v68;
    *v17 = v74;
    v75 = *(_QWORD *)v66[10];
    if (v75)
    {
      v66[10] = v75;
      v74 = *v17;
    }
    sub_207CC24B4((uint64_t *)v66[11], v74);
    ++v66[12];
    goto LABEL_130;
  }
  v69 = *(_QWORD *)(v47 + 56);
  *(_QWORD *)(v47 + 56) = 0;
  if (v69)
  {
    v70 = *(_QWORD *)(v69 + 48);
    *(_QWORD *)(v69 + 48) = 0;
    if (v70)
      sub_207F03820(v70);
    v71 = *(void **)(v69 + 40);
    *(_QWORD *)(v69 + 40) = 0;
    if (v71)
      operator delete(v71);
    v72 = *(void **)(v69 + 32);
    *(_QWORD *)(v69 + 32) = 0;
    if (v72)
      operator delete(v72);
    if (*(char *)(v69 + 31) < 0)
      operator delete(*(void **)(v69 + 8));
    operator delete((void *)v69);
    LOBYTE(v52) = *(_BYTE *)(v47 + 55);
  }
  v65 = v89;
  v66 = v92;
  if ((v52 & 0x80) != 0)
    operator delete(*(void **)(v47 + 32));
  operator delete((void *)v47);
  v14 = (uint64_t **)v49[7];
  v67 = *v17;
  v68 = v17;
  if (!*v17)
    goto LABEL_127;
  while (1)
  {
LABEL_123:
    while (1)
    {
      v68 = (uint64_t **)v67;
      v73 = v67[4];
      if ((unint64_t)v14 >= v73)
        break;
      v67 = *v68;
      v17 = v68;
      if (!*v68)
        goto LABEL_127;
    }
    if (v73 >= (unint64_t)v14)
      break;
    v67 = v68[1];
    if (!v67)
    {
      v17 = v68 + 1;
      goto LABEL_127;
    }
  }
LABEL_130:
  v76 = (uint64_t *)v94;
  if (v94 != &v95)
  {
    do
    {
      *(_QWORD *)(*(_QWORD *)(v76[4] + 48) + 72) = v14;
      v81 = (uint64_t *)v76[1];
      if (v81)
      {
        do
        {
          v82 = (uint64_t **)v81;
          v81 = (uint64_t *)*v81;
        }
        while (v81);
      }
      else
      {
        do
        {
          v82 = (uint64_t **)v76[2];
          v24 = *v82 == v76;
          v76 = (uint64_t *)v82;
        }
        while (!v24);
      }
      v76 = (uint64_t *)v82;
    }
    while (v82 != &v95);
  }
  v77 = (unint64_t *)v14[5];
  v78 = atomic_load((unint64_t *)v65[5]);
  do
    __ldaxr(v77);
  while (__stlxr(v78, v77));
  if (a5)
  {
    v79 = *(std::mutex **)(v91 + 8);
    std::mutex::lock(v79);
    v80 = *(_QWORD **)(v91 + 16);
    if (v80 != (_QWORD *)(v91 + 24))
    {
      do
      {
        v83 = *((char *)v14 + 31);
        if (v83 >= 0)
          v84 = (uint64_t *)(v14 + 1);
        else
          v84 = v14[1];
        if (v83 >= 0)
          v85 = (uint64_t *)*((unsigned __int8 *)v14 + 31);
        else
          v85 = v14[2];
        (*(void (**)(_QWORD, uint64_t *, uint64_t *, _QWORD))(*(_QWORD *)v80[4] + 16))(v80[4], v84, v85, 0);
        v86 = (_QWORD *)v80[1];
        if (v86)
        {
          do
          {
            v87 = v86;
            v86 = (_QWORD *)*v86;
          }
          while (v86);
        }
        else
        {
          do
          {
            v87 = (_QWORD *)v80[2];
            v24 = *v87 == (_QWORD)v80;
            v80 = v87;
          }
          while (!v24);
        }
        v80 = v87;
      }
      while (v87 != (_QWORD *)(v91 + 24));
    }
    std::mutex::unlock(v79);
  }
  sub_207F04340(v95);
  return v14;
}

void sub_207F02274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, _QWORD *a17)
{
  sub_207F04340(a17);
  _Unwind_Resume(a1);
}

void sub_207F022FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_207F04378((uint64_t *)va);
  JUMPOUT(0x207F02308);
}

void sub_207F02324(_Unwind_Exception *a1)
{
  _QWORD *v1;

  sub_207F04340(v1);
  _Unwind_Resume(a1);
}

void sub_207F02338()
{
  std::mutex *v0;

  std::mutex::unlock(v0);
  JUMPOUT(0x207F02344);
}

std::mutex **sub_207F02358(std::mutex **a1)
{
  std::mutex *v2;
  void *v3;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    std::mutex::~mutex(v2);
    operator delete(v3);
  }
  return a1;
}

uint64_t sub_207F0238C(uint64_t a1, unint64_t a2)
{
  _QWORD *v3;
  uint64_t *v4;
  uint64_t **v5;
  uint64_t **v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  BOOL v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char v14;
  uint64_t *v15;
  uint64_t **v16;
  uint64_t **v17;
  int v18;
  const void *v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  int v24;
  uint64_t *v25;
  unint64_t v26;
  size_t v27;
  int v28;
  int v29;
  char *v30;
  _BYTE *v31;
  __int128 v32;
  _QWORD *v33;
  _QWORD *v34;
  BOOL v35;
  uint64_t **v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v41;
  std::mutex *v43;
  std::__shared_mutex_base *v44;
  _QWORD *v45;
  uint64_t **v46;
  uint64_t *v47;
  uint64_t v48;

  v44 = (std::__shared_mutex_base *)(a1 + 72);
  std::__shared_mutex_base::lock((std::__shared_mutex_base *)(a1 + 72));
  v43 = *(std::mutex **)(a1 + 8);
  std::mutex::lock(v43);
  v47 = 0;
  v48 = 0;
  v3 = *(_QWORD **)(a1 + 48);
  v41 = a1;
  v45 = (_QWORD *)(a1 + 56);
  v46 = &v47;
  if (v3 == (_QWORD *)(a1 + 56))
    goto LABEL_2;
  while (2)
  {
    v13 = *(char **)(v3[7] + 32);
    if (!v13)
      goto LABEL_49;
    v14 = *v13;
    v15 = v47;
    v16 = &v47;
    v17 = &v47;
    if (!v47)
      goto LABEL_43;
    v18 = *((char *)v3 + 55);
    if (v18 >= 0)
      v19 = v3 + 4;
    else
      v19 = (const void *)v3[4];
    if (v18 >= 0)
      v20 = *((unsigned __int8 *)v3 + 55);
    else
      v20 = v3[5];
    do
    {
      while (1)
      {
        v17 = (uint64_t **)v15;
        v23 = v15[4];
        v21 = v15 + 4;
        v22 = (uint64_t *)v23;
        v24 = *((char *)v21 + 23);
        v25 = v24 >= 0 ? v21 : v22;
        v26 = v24 >= 0 ? *((unsigned __int8 *)v21 + 23) : v21[1];
        v27 = v26 >= v20 ? v20 : v26;
        v28 = memcmp(v19, v25, v27);
        if (v28)
          break;
        if (v20 >= v26)
          goto LABEL_37;
LABEL_23:
        v15 = *v17;
        v16 = v17;
        if (!*v17)
          goto LABEL_43;
      }
      if (v28 < 0)
        goto LABEL_23;
LABEL_37:
      v29 = memcmp(v25, v19, v27);
      if (v29)
      {
        if ((v29 & 0x80000000) == 0)
          goto LABEL_49;
      }
      else if (v26 >= v20)
      {
        goto LABEL_49;
      }
      v15 = v17[1];
    }
    while (v15);
    v16 = v17 + 1;
LABEL_43:
    v30 = (char *)operator new(0x40uLL);
    v31 = v30 + 32;
    if (*((char *)v3 + 55) < 0)
    {
      sub_207CA40D8(v31, (void *)v3[4], v3[5]);
    }
    else
    {
      v32 = *((_OWORD *)v3 + 2);
      *((_QWORD *)v30 + 6) = v3[6];
      *(_OWORD *)v31 = v32;
    }
    v30[56] = v14;
    *(_QWORD *)v30 = 0;
    *((_QWORD *)v30 + 1) = 0;
    *((_QWORD *)v30 + 2) = v17;
    *v16 = (uint64_t *)v30;
    if (*v46)
    {
      v46 = (uint64_t **)*v46;
      v30 = (char *)*v16;
    }
    sub_207CC24B4(v47, (uint64_t *)v30);
    ++v48;
LABEL_49:
    v33 = (_QWORD *)v3[1];
    if (v33)
    {
      do
      {
        v34 = v33;
        v33 = (_QWORD *)*v33;
      }
      while (v33);
    }
    else
    {
      do
      {
        v34 = (_QWORD *)v3[2];
        v35 = *v34 == (_QWORD)v3;
        v3 = v34;
      }
      while (!v35);
    }
    v3 = v34;
    if (v34 != v45)
      continue;
    break;
  }
LABEL_2:
  v5 = (uint64_t **)(v41 + 24);
  v4 = *(uint64_t **)(v41 + 24);
  if (!v4)
  {
    v36 = (uint64_t **)(v41 + 24);
    v8 = a2;
LABEL_61:
    v38 = (uint64_t *)operator new(0x28uLL);
    v38[4] = v8;
    *v38 = 0;
    v38[1] = 0;
    v38[2] = (uint64_t)v36;
    *v5 = v38;
    v39 = **(_QWORD **)(v41 + 16);
    if (v39)
    {
      *(_QWORD *)(v41 + 16) = v39;
      v38 = *v5;
    }
    sub_207CC24B4(*(uint64_t **)(v41 + 24), v38);
    ++*(_QWORD *)(v41 + 32);
    goto LABEL_64;
  }
  v6 = (uint64_t **)(v41 + 24);
  v7 = *(_QWORD **)(v41 + 24);
  v8 = a2;
  do
  {
    v9 = v7[4];
    v10 = v9 >= a2;
    if (v9 >= a2)
      v11 = v7;
    else
      v11 = v7 + 1;
    if (v10)
      v6 = (uint64_t **)v7;
    v7 = (_QWORD *)*v11;
  }
  while (*v11);
  if (v6 == v5 || (unint64_t)v6[4] > a2)
  {
    while (1)
    {
      while (1)
      {
        v36 = (uint64_t **)v4;
        v37 = v4[4];
        if (v37 <= a2)
          break;
        v4 = *v36;
        v5 = v36;
        if (!*v36)
          goto LABEL_61;
      }
      if (v37 >= a2)
        break;
      v4 = v36[1];
      if (!v4)
      {
        v5 = v36 + 1;
        goto LABEL_61;
      }
    }
LABEL_64:
    (*(void (**)(uint64_t, uint64_t ***))(*(_QWORD *)v8 + 32))(v8, &v46);
    v12 = 1;
    goto LABEL_65;
  }
  v12 = 0;
LABEL_65:
  sub_207CFF9E4((uint64_t)&v46, (char *)v47);
  std::mutex::unlock(v43);
  std::__shared_mutex_base::unlock(v44);
  return v12;
}

void sub_207F02694(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::mutex *a11, std::__shared_mutex_base *a12, uint64_t a13, char a14, uint64_t a15)
{
  std::__shared_mutex_base::unlock(a12);
  _Unwind_Resume(a1);
}

uint64_t sub_207F026DC(_QWORD *a1, unint64_t a2)
{
  std::mutex *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  _QWORD *v8;
  unint64_t v9;
  BOOL v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t *v14;
  _QWORD *v15;
  unint64_t v16;
  BOOL v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  BOOL v22;

  v4 = (std::mutex *)a1[1];
  std::mutex::lock(v4);
  v6 = a1 + 3;
  v5 = (uint64_t *)a1[3];
  if (!v5)
    goto LABEL_12;
  v7 = a1 + 3;
  v8 = (_QWORD *)a1[3];
  do
  {
    v9 = v8[4];
    v10 = v9 >= a2;
    if (v9 >= a2)
      v11 = v8;
    else
      v11 = v8 + 1;
    if (v10)
      v7 = v8;
    v8 = (_QWORD *)*v11;
  }
  while (*v11);
  if (v7 != v6 && v7[4] <= a2)
  {
    v14 = a1 + 3;
    v15 = (_QWORD *)a1[3];
    do
    {
      v16 = v15[4];
      v17 = v16 >= a2;
      if (v16 >= a2)
        v18 = v15;
      else
        v18 = v15 + 1;
      if (v17)
        v14 = v15;
      v15 = (_QWORD *)*v18;
    }
    while (*v18);
    if (v14 != v6 && v14[4] <= a2)
    {
      v19 = (uint64_t *)v14[1];
      if (v19)
      {
        do
        {
          v20 = v19;
          v19 = (uint64_t *)*v19;
        }
        while (v19);
      }
      else
      {
        v21 = v14;
        do
        {
          v20 = (uint64_t *)v21[2];
          v22 = *v20 == (_QWORD)v21;
          v21 = v20;
        }
        while (!v22);
      }
      if ((uint64_t *)a1[2] == v14)
        a1[2] = v20;
      --a1[4];
      sub_207CC2668(v5, v14);
      operator delete(v14);
    }
    v12 = 1;
  }
  else
  {
LABEL_12:
    v12 = 0;
  }
  std::mutex::unlock(v4);
  return v12;
}

void sub_207F02800(uint64_t a1, _QWORD *a2)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t *v7;
  std::__shared_mutex_base *v8;
  uint64_t v9;
  _QWORD *v10;
  std::mutex *v11;
  _QWORD *v12;
  _QWORD *v13;
  char *v14;
  size_t v15;
  uint64_t **v16;
  uint64_t v17;
  int v18;
  uint64_t *v19;
  unint64_t *v20;
  unint64_t v21;
  _BYTE *v22;
  void *v23;
  _BYTE *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t *v27;
  unint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  BOOL v31;
  _QWORD *v32;
  _QWORD *v33;
  std::runtime_error *exception;
  void *__p[2];
  char v36;

  v36 = 0;
  LOBYTE(__p[0]) = 0;
  v4 = sub_207D23544((uint64_t)a2, (const void **)__p);
  v5 = v4;
  if (v36 < 0)
  {
    operator delete(__p[0]);
    v6 = a2 + 1;
    if (a2 + 1 == v5)
      goto LABEL_8;
  }
  else
  {
    v6 = a2 + 1;
    if (a2 + 1 == v4)
      goto LABEL_8;
  }
  v36 = 0;
  LOBYTE(__p[0]) = 0;
  v7 = sub_207D23544((uint64_t)a2, (const void **)__p);
  if (v36 < 0)
    operator delete(__p[0]);
  if (!*((_BYTE *)v7 + 56))
  {
    exception = (std::runtime_error *)__cxa_allocate_exception(0x10uLL);
    std::runtime_error::runtime_error(exception, "Cannot set root context to inherit its enable-state");
    __cxa_throw(exception, MEMORY[0x24BEDB730], (void (*)(void *))MEMORY[0x24BEDAB60]);
  }
LABEL_8:
  v8 = (std::__shared_mutex_base *)(a1 + 72);
  std::__shared_mutex_base::lock((std::__shared_mutex_base *)(a1 + 72));
  v10 = (_QWORD *)*a2;
  if ((_QWORD *)*a2 != v6)
  {
    do
    {
      if (*((char *)v10 + 55) < 0)
      {
        v14 = (char *)v10[4];
        v15 = v10[5];
      }
      else
      {
        v14 = (char *)(v10 + 4);
        v15 = *((unsigned __int8 *)v10 + 55);
      }
      v16 = sub_207F01A44(a1, v9, v14, v15, 0);
      v17 = (uint64_t)v16;
      v18 = *((unsigned __int8 *)v10 + 56);
      v19 = v16[4];
      if (*((_BYTE *)v10 + 56))
      {
        if (*(_BYTE *)v19)
        {
          if (*(unsigned __int8 *)v19 != v18)
            *(_BYTE *)v19 = v18;
        }
        else
        {
          v24 = operator new(1uLL);
          *v24 = v18;
          *(_QWORD *)(v17 + 32) = v24;
          operator delete(v19);
          v25 = *(_QWORD *)(v17 + 32);
          v26 = (unint64_t *)operator new(8uLL);
          *v26 = v25;
          v27 = *(unint64_t **)(v17 + 40);
          v28 = atomic_load(v26);
          do
            __ldaxr(v27);
          while (__stlxr(v28, v27));
          operator delete(v26);
          sub_207F005B4(v17);
        }
      }
      else if (*(_BYTE *)v19)
      {
        v20 = (unint64_t *)v16[5];
        v21 = atomic_load(*(unint64_t **)(v16[6][9] + 40));
        do
          __ldaxr(v20);
        while (__stlxr(v21, v20));
        sub_207F005B4((uint64_t)v16);
        v22 = operator new(1uLL);
        *v22 = 0;
        v23 = *(void **)(v17 + 32);
        *(_QWORD *)(v17 + 32) = v22;
        if (v23)
          operator delete(v23);
      }
      v29 = (_QWORD *)v10[1];
      if (v29)
      {
        do
        {
          v30 = v29;
          v29 = (_QWORD *)*v29;
        }
        while (v29);
      }
      else
      {
        do
        {
          v30 = (_QWORD *)v10[2];
          v31 = *v30 == (_QWORD)v10;
          v10 = v30;
        }
        while (!v31);
      }
      v10 = v30;
    }
    while (v30 != v6);
  }
  v11 = *(std::mutex **)(a1 + 8);
  std::mutex::lock(v11);
  v12 = *(_QWORD **)(a1 + 16);
  v13 = (_QWORD *)(a1 + 24);
  if (v12 != v13)
  {
    do
    {
      (*(void (**)(_QWORD, _QWORD *))(*(_QWORD *)v12[4] + 24))(v12[4], a2);
      v32 = (_QWORD *)v12[1];
      if (v32)
      {
        do
        {
          v33 = v32;
          v32 = (_QWORD *)*v32;
        }
        while (v32);
      }
      else
      {
        do
        {
          v33 = (_QWORD *)v12[2];
          v31 = *v33 == (_QWORD)v12;
          v12 = v33;
        }
        while (!v31);
      }
      v12 = v33;
    }
    while (v33 != v13);
  }
  std::mutex::unlock(v11);
  std::__shared_mutex_base::unlock(v8);
}

void sub_207F02A94(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_207F02AA8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *sub_207F02AF8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t *v11;
  char *v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t **v16;
  uint64_t **v17;
  uint64_t *v18;
  BOOL v19;
  uint64_t **v20;
  uint64_t **v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  _BYTE *v28;
  _QWORD *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _OWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  std::mutex *v46;
  _QWORD *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  char v54;
  uint64_t v55;
  int v56;
  _QWORD *v57;
  _OWORD *v58;
  _OWORD v59[3];
  _BYTE *v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;

  v63 = *MEMORY[0x24BDAC8D0];
  *a1 = &off_24C078FA0;
  v8 = operator new(0x110uLL);
  v9 = (uint64_t)v8;
  v10 = *(unint64_t **)a3;
  v11 = *(unint64_t **)(a3 + 8);
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)a3 = 0;
  v56 = *((unsigned __int8 *)a4 + 24);
  if (*((_BYTE *)a4 + 24))
  {
    v55 = *a4;
    *(_QWORD *)&v59[1] = a4[1];
    *(_QWORD *)((char *)&v59[1] + 7) = *(uint64_t *)((char *)a4 + 15);
    v54 = *((_BYTE *)a4 + 23);
    a4[1] = 0;
    a4[2] = 0;
    *a4 = 0;
  }
  else
  {
    v55 = 0;
  }
  v57 = a1;
  *v8 = off_24C078F48;
  v12 = (char *)operator new(0x40uLL);
  *(_QWORD *)v12 = 850045863;
  *(_OWORD *)(v12 + 8) = 0u;
  *(_OWORD *)(v12 + 24) = 0u;
  *(_OWORD *)(v12 + 40) = 0u;
  *((_QWORD *)v12 + 7) = 0;
  *(_QWORD *)(v9 + 24) = 0;
  *(_QWORD *)(v9 + 32) = 0;
  *(_QWORD *)(v9 + 8) = v12;
  *(_QWORD *)(v9 + 16) = v9 + 24;
  if (v10 != v11)
  {
    v13 = 0;
    v14 = v10;
    v15 = *v10;
    v16 = (uint64_t **)(v9 + 24);
LABEL_11:
    if (v13)
      v20 = v16;
    else
      v20 = (uint64_t **)(v9 + 24);
    if (v13)
      v21 = v16 + 1;
    else
      v21 = (uint64_t **)(v9 + 24);
    if (*v21)
      goto LABEL_29;
LABEL_26:
    v24 = (uint64_t *)operator new(0x28uLL);
    v24[4] = v15;
    *v24 = 0;
    v24[1] = 0;
    v24[2] = (uint64_t)v20;
    *v21 = v24;
    v25 = **(_QWORD **)(v9 + 16);
    if (v25)
    {
      *(_QWORD *)(v9 + 16) = v25;
      v24 = *v21;
    }
    sub_207CC24B4(*(uint64_t **)(v9 + 24), v24);
    ++*(_QWORD *)(v9 + 32);
LABEL_29:
    while (++v14 != v11)
    {
      v13 = *(_QWORD *)(v9 + 24);
      v15 = *v14;
      v16 = (uint64_t **)(v9 + 24);
      if (*(_QWORD *)(v9 + 16) == v9 + 24)
        goto LABEL_11;
      v17 = *(uint64_t ***)(v9 + 24);
      v18 = (uint64_t *)(v9 + 24);
      if (v13)
      {
        do
        {
          v16 = v17;
          v17 = (uint64_t **)v17[1];
        }
        while (v17);
      }
      else
      {
        do
        {
          v16 = (uint64_t **)v18[2];
          v19 = *v16 == v18;
          v18 = (uint64_t *)v16;
        }
        while (v19);
      }
      if ((unint64_t)v16[4] < v15)
        goto LABEL_11;
      v21 = (uint64_t **)(v9 + 24);
      v20 = (uint64_t **)(v9 + 24);
      if (!v13)
        goto LABEL_26;
      v22 = *(uint64_t **)(v9 + 24);
      while (1)
      {
        while (1)
        {
          v20 = (uint64_t **)v22;
          v23 = v22[4];
          if (v23 <= v15)
            break;
          v22 = *v20;
          v21 = v20;
          if (!*v20)
            goto LABEL_26;
        }
        if (v23 >= v15)
          break;
        v22 = v20[1];
        if (!v22)
        {
          v21 = v20 + 1;
          goto LABEL_26;
        }
      }
    }
  }
  *(_QWORD *)(v9 + 56) = 0;
  *(_QWORD *)(v9 + 64) = 0;
  *(_QWORD *)(v9 + 48) = v9 + 56;
  std::__shared_mutex_base::__shared_mutex_base((std::__shared_mutex_base *)(v9 + 72));
  *(_BYTE *)(v9 + 240) = 0;
  *(_BYTE *)(v9 + 264) = 0;
  if (v56)
  {
    v26 = *(_QWORD *)&v59[1];
    *(_QWORD *)(v9 + 240) = v55;
    *(_QWORD *)(v9 + 248) = v26;
    *(_QWORD *)(v9 + 255) = *(_QWORD *)((char *)&v59[1] + 7);
    *(_BYTE *)(v9 + 263) = v54;
    *(_BYTE *)(v9 + 264) = 1;
  }
  v57[1] = v9;
  if (v10)
  {
    operator delete(v10);
    v9 = v57[1];
  }
  v27 = (uint64_t *)operator new(0x68uLL);
  v59[0] = 0uLL;
  v58 = v59;
  sub_207EFFE48(v27, v9, "", 0, 0, (uint64_t)&v58);
  sub_207F04340(*(_QWORD **)&v59[0]);
  *(_QWORD *)&v59[1] = &off_24C078EF0;
  HIBYTE(v59[2]) = 0;
  BYTE8(v59[1]) = 0;
  v28 = operator new(1uLL);
  *v28 = a2;
  v60 = v28;
  v29 = operator new(8uLL);
  *v29 = v28;
  v61 = v29;
  v62 = v27;
  v30 = (char *)operator new(0x38uLL);
  v31 = v30;
  *(_QWORD *)v30 = &off_24C078EF0;
  *(_OWORD *)(v30 + 8) = *(_OWORD *)((char *)&v59[1] + 8);
  *((_QWORD *)v30 + 3) = *((_QWORD *)&v59[2] + 1);
  *((_QWORD *)v30 + 4) = v28;
  *((_QWORD *)v30 + 5) = v29;
  *((_QWORD *)v30 + 6) = v27;
  v32 = v57[1];
  if (v32)
  {
    *(_QWORD *)(v32 + 40) = v30;
    v33 = v57[1];
    if (v33)
      goto LABEL_38;
  }
  else
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    *(_QWORD *)(v57[1] + 40) = v31;
    v33 = v57[1];
    if (v33)
    {
LABEL_38:
      BYTE7(v59[2]) = 0;
      LOBYTE(v59[1]) = 0;
      *((_QWORD *)&v59[2] + 1) = v31;
      v35 = (_QWORD *)(v33 + 56);
      v34 = *(_QWORD *)(v33 + 56);
      if (v34)
        goto LABEL_39;
      goto LABEL_43;
    }
  }
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v33 = v57[1];
  BYTE7(v59[2]) = 0;
  LOBYTE(v59[1]) = 0;
  *((_QWORD *)&v59[2] + 1) = v31;
  v35 = (_QWORD *)(v33 + 56);
  v34 = *(_QWORD *)(v33 + 56);
  if (v34)
  {
    while (1)
    {
LABEL_39:
      v35 = (_QWORD *)v34;
      v36 = *(unsigned __int8 *)(v34 + 55);
      if ((v36 & 0x80u) != 0)
        v36 = v35[5];
      if (!v36)
        break;
      v34 = *v35;
      if (!*v35)
        goto LABEL_43;
    }
    *((_QWORD *)&v59[2] + 1) = 0;
    v37 = v35;
    v41 = *((_QWORD *)v31 + 6);
    *((_QWORD *)v31 + 6) = 0;
    if (!v41)
      goto LABEL_48;
    goto LABEL_47;
  }
LABEL_43:
  v37 = operator new(0x40uLL);
  v37[2] = v59[1];
  v38 = *(_QWORD *)&v59[2];
  memset(&v59[1], 0, 32);
  *((_QWORD *)v37 + 6) = v38;
  *((_QWORD *)v37 + 7) = v31;
  *(_QWORD *)v37 = 0;
  *((_QWORD *)v37 + 1) = 0;
  *((_QWORD *)v37 + 2) = v35;
  *v35 = v37;
  v39 = **(_QWORD **)(v33 + 48);
  v40 = (uint64_t *)v37;
  if (v39)
  {
    *(_QWORD *)(v33 + 48) = v39;
    v40 = (uint64_t *)*v35;
  }
  sub_207CC24B4(*(uint64_t **)(v33 + 56), v40);
  ++*(_QWORD *)(v33 + 64);
  v31 = (char *)*((_QWORD *)&v59[2] + 1);
  if (*((_QWORD *)&v59[2] + 1))
  {
    v41 = *(_QWORD *)(*((_QWORD *)&v59[2] + 1) + 48);
    *(_QWORD *)(*((_QWORD *)&v59[2] + 1) + 48) = 0;
    if (!v41)
    {
LABEL_48:
      v42 = (void *)*((_QWORD *)v31 + 5);
      *((_QWORD *)v31 + 5) = 0;
      if (v42)
        operator delete(v42);
      v43 = (void *)*((_QWORD *)v31 + 4);
      *((_QWORD *)v31 + 4) = 0;
      if (v43)
        operator delete(v43);
      if (v31[31] < 0)
        operator delete(*((void **)v31 + 1));
      operator delete(v31);
      goto LABEL_55;
    }
LABEL_47:
    sub_207F03820(v41);
    goto LABEL_48;
  }
LABEL_55:
  if (SBYTE7(v59[2]) < 0)
  {
    operator delete(*(void **)&v59[1]);
    v44 = v57[1];
    if (v44)
      goto LABEL_66;
  }
  else
  {
    v44 = v57[1];
    if (v44)
      goto LABEL_66;
  }
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v44 = v57[1];
LABEL_66:
  v45 = *((_QWORD *)v37 + 7);
  v46 = *(std::mutex **)(v44 + 8);
  std::mutex::lock(v46);
  v47 = *(_QWORD **)(v44 + 16);
  if (v47 != (_QWORD *)(v44 + 24))
  {
    do
    {
      v48 = *(char *)(v45 + 31);
      if (v48 >= 0)
        v49 = v45 + 8;
      else
        v49 = *(_QWORD *)(v45 + 8);
      if (v48 >= 0)
        v50 = *(unsigned __int8 *)(v45 + 31);
      else
        v50 = *(_QWORD *)(v45 + 16);
      (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v47[4] + 16))(v47[4], v49, v50, a2);
      v51 = (_QWORD *)v47[1];
      if (v51)
      {
        do
        {
          v52 = v51;
          v51 = (_QWORD *)*v51;
        }
        while (v51);
      }
      else
      {
        do
        {
          v52 = (_QWORD *)v47[2];
          v19 = *v52 == (_QWORD)v47;
          v47 = v52;
        }
        while (!v19);
      }
      v47 = v52;
    }
    while (v52 != (_QWORD *)(v44 + 24));
  }
  std::mutex::unlock(v46);
  return v57;
}

void sub_207F03104(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, int a10, int a11, void *__p, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v24;

  sub_207F03220((uint64_t)&a19);
  v24 = *(_QWORD *)(a15 + 8);
  *(_QWORD *)(a15 + 8) = 0;
  if (!v24)
    _Unwind_Resume(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v24 + 8))(v24);
  _Unwind_Resume(a1);
}

uint64_t sub_207F03220(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = 0;
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 48);
    *(_QWORD *)(v2 + 48) = 0;
    if (v3)
      sub_207F03820(v3);
    v4 = *(void **)(v2 + 40);
    *(_QWORD *)(v2 + 40) = 0;
    if (v4)
      operator delete(v4);
    v5 = *(void **)(v2 + 32);
    *(_QWORD *)(v2 + 32) = 0;
    if (v5)
      operator delete(v5);
    if (*(char *)(v2 + 31) < 0)
      operator delete(*(void **)(v2 + 8));
    operator delete((void *)v2);
  }
  if (*(char *)(a1 + 23) < 0)
    operator delete(*(void **)a1);
  return a1;
}

_QWORD *sub_207F032B4(_QWORD *a1)
{
  uint64_t v2;

  v2 = a1[1];
  *a1 = &off_24C078FA0;
  a1[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  return a1;
}

void sub_207F032F4(_QWORD *__p)
{
  uint64_t v2;

  v2 = __p[1];
  *__p = &off_24C078FA0;
  __p[1] = 0;
  if (v2)
    (*(void (**)(uint64_t))(*(_QWORD *)v2 + 8))(v2);
  operator delete(__p);
}

uint64_t sub_207F03334(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
    return sub_207F0238C(v4, a2);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return sub_207F0238C(*(_QWORD *)(a1 + 8), a2);
}

uint64_t sub_207F033AC(uint64_t a1, unint64_t a2)
{
  _QWORD *v4;

  v4 = *(_QWORD **)(a1 + 8);
  if (v4)
    return sub_207F026DC(v4, a2);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return sub_207F026DC(*(_QWORD **)(a1 + 8), a2);
}

uint64_t **sub_207F03424(uint64_t a1, char *a2, size_t a3)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t **v8;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  std::__shared_mutex_base::lock((std::__shared_mutex_base *)(v5 + 72));
  v8 = sub_207F01A44(v5, v7, a2, a3, 1);
  std::__shared_mutex_base::unlock((std::__shared_mutex_base *)(v5 + 72));
  return v8;
}

void sub_207F034C8(_Unwind_Exception *a1)
{
  std::__shared_mutex_base *v1;

  std::__shared_mutex_base::unlock(v1);
  _Unwind_Resume(a1);
}

unint64_t sub_207F034E0(uint64_t a1, const void *a2, size_t a3)
{
  uint64_t v6;

  v6 = *(_QWORD *)(a1 + 8);
  if (v6)
    return sub_207F01914(v6, a2, a3);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return sub_207F01914(*(_QWORD *)(a1 + 8), a2, a3);
}

void sub_207F03570(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
  {
    sub_207F02800(v4, a2);
  }
  else
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    sub_207F02800(*(_QWORD *)(a1 + 8), a2);
  }
}

uint64_t sub_207F035E8(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1)
    return v1 + 240;
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return *(_QWORD *)(a1 + 8) + 240;
}

BOOL sub_207F0365C(uint64_t a1)
{
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)atomic_load(*(unint64_t **)(a1 + 40));
  return *v1 == 1;
}

uint64_t sub_207F03674(uint64_t a1)
{
  return **(unsigned __int8 **)(a1 + 32);
}

void sub_207F03684(uint64_t a1)
{
  void *v1;

  v1 = (void *)sub_207F04050(a1);
  operator delete(v1);
}

uint64_t sub_207F03698(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v7;
  std::__shared_mutex_base *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  uint64_t v17[5];
  char v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  v7 = *(_QWORD *)(v5 + 40);
  v8 = (std::__shared_mutex_base *)(**(_QWORD **)(v7 + 48) + 72);
  std::__shared_mutex_base::lock_shared(v8);
  v9 = &a2[a3];
  v10 = 0;
  if (a3)
  {
    while (a2[v10] != 46)
    {
      if (a3 == ++v10)
      {
        v10 = a3;
        break;
      }
    }
  }
  v11 = 0;
  v17[0] = (uint64_t)a2;
  v17[1] = (uint64_t)&a2[a3];
  v17[2] = (uint64_t)a2;
  v17[3] = (uint64_t)a2;
  v17[4] = v10;
  v18 = 46;
  v19 = &unk_20823D9A8;
  v20 = &unk_20823D9A8;
  v21 = &unk_20823D9A8;
  v22 = &unk_20823D9A8;
  v23 = 0;
  v24 = 0;
  if (a3 && a2 != (char *)&unk_20823D9A8)
  {
    v11 = 0;
    do
    {
      ++v11;
      v12 = &a2[v10];
      if (v12 == v9)
        break;
      a2 = v12 + 1;
      if (v12 + 1 == v9)
      {
        v10 = 0;
        a2 = v9;
      }
      else
      {
        v10 = 0;
        while (a2[v10] != 46)
        {
          if (v9 - a2 == ++v10)
          {
            v10 = v9 - a2;
            break;
          }
        }
      }
    }
    while (a2 != (char *)&unk_20823D9A8);
  }
  v25 = v11;
  v15 = v7;
  v16 = 0;
  sub_207F038FC(v7, v17, 0, (uint64_t)&v15);
  v13 = v15;
  std::__shared_mutex_base::unlock_shared(v8);
  return v13;
}

void sub_207F03820(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;

  sub_207F04340(*(_QWORD **)(a1 + 88));
  v2 = *(_QWORD *)(a1 + 48);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 56);
    v4 = *(void **)(a1 + 48);
    if (v3 != v2)
    {
      do
      {
        if (*(char *)(v3 - 1) < 0)
          operator delete(*(void **)(v3 - 24));
        v3 -= 24;
      }
      while (v3 != v2);
      v4 = *(void **)(a1 + 48);
    }
    *(_QWORD *)(a1 + 56) = v2;
    operator delete(v4);
  }
  if (*(char *)(a1 + 47) < 0)
  {
    operator delete(*(void **)(a1 + 24));
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_11;
  }
  else
  {
    v5 = *(std::__shared_weak_count **)(a1 + 16);
    if (!v5)
      goto LABEL_11;
  }
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldaxr(p_shared_owners);
  while (__stlxr(v7 - 1, p_shared_owners));
  if (!v7)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
    operator delete((void *)a1);
    return;
  }
LABEL_11:
  operator delete((void *)a1);
}

uint64_t sub_207F038FC(uint64_t a1, uint64_t *a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unsigned __int8 *v10;
  int64_t v11;
  unsigned __int8 *v12;
  char *v13;
  char *v14;
  char *v15;
  size_t v16;
  int v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  BOOL v21;
  unsigned __int8 *v22;
  char *v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char v39[8];
  char *v40;
  char *v41;
  char *v42;
  size_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;

uint64_t sub_207F03BC4(uint64_t result, uint64_t *a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  BOOL v41;
  int v42;
  int v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;

  v4 = 0;
  v5 = a2[1];
  v6 = a2[2];
  v8 = a2[3];
  v7 = a2[4];
  v9 = *((unsigned __int8 *)a2 + 40);
  v11 = a2[7];
  v10 = a2[8];
  v12 = a2[9];
  v13 = v8 == v5;
  v14 = v12 == v11;
  if (v12 != v11)
    v13 = 0;
  if (v13)
  {
    v15 = 0;
  }
  else
  {
    v15 = 0;
    if (v6 != v10)
    {
      v4 = 0;
      v16 = a2[2];
      v17 = a2[4];
      do
      {
        v18 = v16 + v17;
        if (v18 == v5)
        {
          v17 = 0;
          v16 = a2[1];
          ++v4;
          if (v12 == v11)
            break;
        }
        else
        {
          v16 = v18 + 1;
          if (v16 == v5)
          {
            v17 = 0;
            v16 = a2[1];
            ++v4;
          }
          else
          {
            v19 = 0;
            v17 = v5 - v16;
            while (*(unsigned __int8 *)(v16 + v19) != v9)
            {
              if (v17 == ++v19)
              {
                ++v4;
                goto LABEL_16;
              }
            }
            v17 = v19;
            ++v4;
          }
        }
LABEL_16:
        ;
      }
      while (v16 != v10);
      v15 = 0;
      v20 = a2[4];
      v21 = a2[2];
      do
      {
        v22 = v21 + v20;
        if (v22 == v5)
        {
          v20 = 0;
          v21 = a2[1];
          ++v15;
          if (v12 == v11)
            break;
        }
        else
        {
          v21 = v22 + 1;
          if (v21 == v5)
          {
            v20 = 0;
            v21 = a2[1];
            ++v15;
          }
          else
          {
            v23 = 0;
            v20 = v5 - v21;
            while (*(unsigned __int8 *)(v21 + v23) != v9)
            {
              if (v20 == ++v23)
              {
                ++v15;
                goto LABEL_28;
              }
            }
            v20 = v23;
            ++v15;
          }
        }
LABEL_28:
        ;
      }
      while (v21 != v10);
    }
  }
  v24 = v4 >= a3;
  v25 = v4 - a3;
  if (!v24)
    v25 = 0;
  if (v15 < v25)
    v25 = v15;
  v26 = v15 - v25;
  if (v26 >= 1)
  {
    do
    {
      v8 = v6 + v7;
      if (v6 + v7 == v5 || (v6 = v8 + 1, v8 + 1 == v5))
      {
        v7 = 0;
        v6 = a2[1];
      }
      else
      {
        v7 = 0;
        while (*(unsigned __int8 *)(v6 + v7) != v9)
        {
          if (v5 - v6 == ++v7)
          {
            v7 = v5 - v6;
            break;
          }
        }
      }
      v39 = (unint64_t)v26-- > 1;
    }
    while (v39);
  }
  v27 = 0;
  v28 = v12 == v11 && v8 == v5;
  if (!v28 && v6 != v10)
  {
    v27 = 0;
    v29 = v7;
    v30 = v6;
    do
    {
      v31 = v30 + v29;
      if (v31 == v5)
      {
        v29 = 0;
        v30 = a2[1];
        ++v27;
        if (v14)
          break;
      }
      else
      {
        v30 = v31 + 1;
        if (v30 == v5)
        {
          v29 = 0;
          v30 = a2[1];
          ++v27;
        }
        else
        {
          v32 = 0;
          v29 = v5 - v30;
          while (*(unsigned __int8 *)(v30 + v32) != v9)
          {
            if (v29 == ++v32)
            {
              ++v27;
              goto LABEL_52;
            }
          }
          v29 = v32;
          ++v27;
        }
      }
LABEL_52:
      ;
    }
    while (v30 != v10);
  }
  v33 = (int *)((char *)a2 + 41);
  v34 = *a2;
  if (v27 >= a4)
    v35 = a4;
  else
    v35 = v27;
  v36 = v6;
  v37 = v8;
  v38 = v7;
  if (v35 >= 1)
  {
    v36 = v6;
    v38 = v7;
    do
    {
      v37 = v36 + v38;
      if (v36 + v38 == v5 || (v36 = v37 + 1, v37 + 1 == v5))
      {
        v38 = 0;
        v36 = v5;
      }
      else
      {
        v38 = 0;
        while (*(unsigned __int8 *)(v36 + v38) != v9)
        {
          if (v5 - v36 == ++v38)
          {
            v38 = v5 - v36;
            break;
          }
        }
      }
      v39 = (unint64_t)v35-- > 1;
    }
    while (v39);
  }
  v40 = 0;
  v41 = v8 == v5;
  *(_QWORD *)result = v34;
  *(_QWORD *)(result + 8) = v5;
  *(_QWORD *)(result + 16) = v6;
  *(_QWORD *)(result + 24) = v8;
  *(_QWORD *)(result + 32) = v7;
  *(_BYTE *)(result + 40) = v9;
  v42 = *v33;
  *(_DWORD *)(result + 41) = *v33;
  v43 = *(int *)((char *)v33 + 3);
  *(_DWORD *)(result + 44) = v43;
  *(_QWORD *)(result + 48) = v34;
  *(_QWORD *)(result + 56) = v5;
  *(_QWORD *)(result + 64) = v36;
  *(_QWORD *)(result + 72) = v37;
  *(_QWORD *)(result + 80) = v38;
  *(_BYTE *)(result + 88) = v9;
  *(_DWORD *)(result + 92) = v43;
  v44 = v37 == v5 && v41;
  *(_DWORD *)(result + 89) = v42;
  if (!v44 && v6 != v36)
  {
    v40 = 0;
    do
    {
      v45 = v6 + v7;
      if (v45 == v5)
      {
        v7 = 0;
        v6 = v5;
        ++v40;
        if (v37 == v5)
          break;
      }
      else
      {
        v6 = v45 + 1;
        if (v6 == v5)
        {
          v7 = 0;
          v6 = v5;
          ++v40;
        }
        else
        {
          v46 = 0;
          v7 = v5 - v6;
          while (*(unsigned __int8 *)(v6 + v46) != v9)
          {
            if (v7 == ++v46)
            {
              ++v40;
              goto LABEL_92;
            }
          }
          v7 = v46;
          ++v40;
        }
      }
LABEL_92:
      ;
    }
    while (v6 != v36);
  }
  *(_QWORD *)(result + 96) = v40;
  return result;
}

void sub_207F03FE0(char *__p)
{
  uint64_t v2;
  void *v3;
  void *v4;

  v2 = *((_QWORD *)__p + 6);
  *((_QWORD *)__p + 6) = 0;
  if (v2)
    sub_207F03820(v2);
  v3 = (void *)*((_QWORD *)__p + 5);
  *((_QWORD *)__p + 5) = 0;
  if (v3)
    operator delete(v3);
  v4 = (void *)*((_QWORD *)__p + 4);
  *((_QWORD *)__p + 4) = 0;
  if (v4)
    operator delete(v4);
  if (__p[31] < 0)
    operator delete(*((void **)__p + 1));
  operator delete(__p);
}

uint64_t sub_207F04050(uint64_t a1)
{
  std::mutex *v2;
  void *v3;

  *(_QWORD *)a1 = off_24C078F48;
  if (*(_BYTE *)(a1 + 264) && *(char *)(a1 + 263) < 0)
    operator delete(*(void **)(a1 + 240));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 184));
  std::condition_variable::~condition_variable((std::condition_variable *)(a1 + 136));
  std::mutex::~mutex((std::mutex *)(a1 + 72));
  sub_207F04420(*(char **)(a1 + 56));
  sub_207F04340(*(_QWORD **)(a1 + 24));
  v2 = *(std::mutex **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = 0;
  if (v2)
  {
    std::mutex::~mutex(v2);
    operator delete(v3);
  }
  return a1;
}

void sub_207F040D8(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_207F040EC(uint64_t a1)
{
  void **v1;

  v1 = *(void ***)(a1 + 24);
  if (v1)
  {
    if (*((_BYTE *)v1 + 48) && *((char *)v1 + 47) < 0)
    {
      operator delete(v1[3]);
      if ((*((char *)v1 + 23) & 0x80000000) == 0)
        goto LABEL_5;
    }
    else if ((*((char *)v1 + 23) & 0x80000000) == 0)
    {
LABEL_5:
      operator delete(v1);
      return;
    }
    operator delete(*v1);
    operator delete(v1);
  }
}

uint64_t sub_207F0415C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIKN4cv3d3kit3viz9ContextIDEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIKN4cv3d3kit3viz9ContextIDEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIKN4cv3d3kit3viz9ContextIDEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIKN4cv3d3kit3viz9ContextIDEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

uint64_t *sub_207F041CC(uint64_t *result, _QWORD *a2, _QWORD *a3)
{
  _QWORD *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t *v10;
  BOOL v11;
  unint64_t v12;
  uint64_t **v13;
  uint64_t **v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  _QWORD *v19;
  _QWORD *v20;

  if (a2 != a3)
  {
    v4 = a2;
    v5 = result;
    v6 = result + 1;
    do
    {
      v7 = (uint64_t *)v5[1];
      v8 = v6;
      if ((uint64_t *)*v5 == v6)
        goto LABEL_10;
      v9 = (uint64_t *)v5[1];
      v10 = v6;
      if (v7)
      {
        do
        {
          v8 = v9;
          v9 = (uint64_t *)v9[1];
        }
        while (v9);
      }
      else
      {
        do
        {
          v8 = (uint64_t *)v10[2];
          v11 = *v8 == (_QWORD)v10;
          v10 = v8;
        }
        while (v11);
      }
      v12 = v4[4];
      if (v8[4] < v12)
      {
LABEL_10:
        if (v7)
          v13 = (uint64_t **)v8;
        else
          v13 = (uint64_t **)v6;
        if (v7)
          v14 = (uint64_t **)(v8 + 1);
        else
          v14 = (uint64_t **)v6;
        if (*v14)
          goto LABEL_29;
      }
      else
      {
        v14 = (uint64_t **)v6;
        v13 = (uint64_t **)v6;
        if (v7)
        {
          while (1)
          {
            while (1)
            {
              v13 = (uint64_t **)v7;
              v15 = v7[4];
              if (v15 <= v12)
                break;
              v7 = *v13;
              v14 = v13;
              if (!*v13)
                goto LABEL_25;
            }
            if (v15 >= v12)
              goto LABEL_29;
            v7 = v13[1];
            if (!v7)
            {
              v14 = v13 + 1;
              break;
            }
          }
        }
      }
LABEL_25:
      v16 = (uint64_t *)operator new(0x28uLL);
      v16[4] = v4[4];
      *v16 = 0;
      v16[1] = 0;
      v16[2] = (uint64_t)v13;
      *v14 = v16;
      v17 = *(_QWORD *)*v5;
      if (v17)
      {
        *v5 = v17;
        v18 = *v14;
      }
      else
      {
        v18 = v16;
      }
      result = sub_207CC24B4((uint64_t *)v5[1], v18);
      ++v5[2];
LABEL_29:
      v19 = (_QWORD *)v4[1];
      if (v19)
      {
        do
        {
          v20 = v19;
          v19 = (_QWORD *)*v19;
        }
        while (v19);
      }
      else
      {
        do
        {
          v20 = (_QWORD *)v4[2];
          v11 = *v20 == (_QWORD)v4;
          v4 = v20;
        }
        while (!v11);
      }
      v4 = v20;
    }
    while (v20 != a3);
  }
  return result;
}

void sub_207F04340(_QWORD *a1)
{
  if (a1)
  {
    sub_207F04340(*a1);
    sub_207F04340(a1[1]);
    operator delete(a1);
  }
}

uint64_t *sub_207F04378(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    if (*((_BYTE *)a1 + 16))
    {
      v3 = *(_QWORD *)(v2 + 56);
      *(_QWORD *)(v2 + 56) = 0;
      if (v3)
      {
        v4 = *(_QWORD *)(v3 + 48);
        *(_QWORD *)(v3 + 48) = 0;
        if (v4)
          sub_207F03820(v4);
        v5 = *(void **)(v3 + 40);
        *(_QWORD *)(v3 + 40) = 0;
        if (v5)
          operator delete(v5);
        v6 = *(void **)(v3 + 32);
        *(_QWORD *)(v3 + 32) = 0;
        if (v6)
          operator delete(v6);
        if (*(char *)(v3 + 31) < 0)
          operator delete(*(void **)(v3 + 8));
        operator delete((void *)v3);
      }
      if (*(char *)(v2 + 55) < 0)
        operator delete(*(void **)(v2 + 32));
    }
    operator delete((void *)v2);
  }
  return a1;
}

void sub_207F04420(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;

  if (a1)
  {
    sub_207F04420(*(_QWORD *)a1);
    sub_207F04420(*((_QWORD *)a1 + 1));
    v2 = *((_QWORD *)a1 + 7);
    *((_QWORD *)a1 + 7) = 0;
    if (v2)
    {
      v3 = *(_QWORD *)(v2 + 48);
      *(_QWORD *)(v2 + 48) = 0;
      if (v3)
        sub_207F03820(v3);
      v4 = *(void **)(v2 + 40);
      *(_QWORD *)(v2 + 40) = 0;
      if (v4)
        operator delete(v4);
      v5 = *(void **)(v2 + 32);
      *(_QWORD *)(v2 + 32) = 0;
      if (v5)
        operator delete(v5);
      if (*(char *)(v2 + 31) < 0)
        operator delete(*(void **)(v2 + 8));
      operator delete((void *)v2);
    }
    if (a1[55] < 0)
      operator delete(*((void **)a1 + 4));
    operator delete(a1);
  }
}

void sub_207F044CC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 v3;
  int v4;
  int v5;
  __int128 v6;
  int v7;
  __int128 v8;
  int v9;
  _BYTE v10[8];
  __int128 v11;
  void *v12[2];
  uint64_t v13;
  char v14;
  __int128 v15;
  uint64_t v16;
  void *v17[2];
  uint64_t v18;
  unsigned __int8 v19;
  void *__p[2];
  uint64_t v21;
  unsigned __int8 v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  v26 = *MEMORY[0x24BDAC8D0];
  if (*(unsigned __int8 *)(a1 + 200) | *(unsigned __int8 *)(a1 + 160))
  {
    sub_207E0AB10((uint64_t)v10, (uint64_t *)a1);
    v3 = v11;
    *(_BYTE *)(a2 + 24) = 0;
    *(_OWORD *)(a2 + 8) = v3;
    *(_BYTE *)(a2 + 48) = 0;
    if (v14)
    {
      *(_OWORD *)(a2 + 24) = *(_OWORD *)v12;
      *(_QWORD *)(a2 + 40) = v13;
      v12[1] = 0;
      v13 = 0;
      v12[0] = 0;
      *(_BYTE *)(a2 + 48) = 1;
    }
    *(_BYTE *)(a2 + 80) = 0;
    *(_OWORD *)(a2 + 56) = v15;
    *(_QWORD *)(a2 + 72) = v16;
    *(_BYTE *)(a2 + 104) = 0;
    v4 = v19;
    if (v19)
    {
      *(_OWORD *)(a2 + 80) = *(_OWORD *)v17;
      *(_QWORD *)(a2 + 96) = v18;
      v17[1] = 0;
      v18 = 0;
      v17[0] = 0;
      *(_BYTE *)(a2 + 104) = 1;
    }
    *(_BYTE *)(a2 + 112) = 0;
    *(_BYTE *)(a2 + 136) = 0;
    v5 = v22;
    if (v22)
    {
      *(_OWORD *)(a2 + 112) = *(_OWORD *)__p;
      *(_QWORD *)(a2 + 128) = v21;
      __p[1] = 0;
      v21 = 0;
      __p[0] = 0;
      *(_BYTE *)(a2 + 136) = 1;
    }
    *(_BYTE *)(a2 + 144) = 0;
    *(_BYTE *)(a2 + 168) = 0;
    if (v25)
    {
      *(_OWORD *)(a2 + 144) = v23;
      *(_QWORD *)(a2 + 160) = v24;
      v24 = 0;
      v23 = 0uLL;
      *(_BYTE *)(a2 + 168) = 1;
    }
    *(_DWORD *)(a2 + 176) = 0;
    if (!v5)
      goto LABEL_34;
LABEL_32:
    if (SHIBYTE(v21) < 0)
    {
      operator delete(__p[0]);
      v4 = v19;
    }
    goto LABEL_34;
  }
  if (*(_BYTE *)(a1 + 72))
  {
    sub_207F04868((uint64_t)v10, (uint64_t *)a1);
    v6 = v11;
    *(_BYTE *)(a2 + 24) = 0;
    *(_OWORD *)(a2 + 8) = v6;
    *(_BYTE *)(a2 + 48) = 0;
    if (v14)
    {
      *(_OWORD *)(a2 + 24) = *(_OWORD *)v12;
      *(_QWORD *)(a2 + 40) = v13;
      v12[1] = 0;
      v13 = 0;
      v12[0] = 0;
      *(_BYTE *)(a2 + 48) = 1;
    }
    *(_BYTE *)(a2 + 80) = 0;
    *(_OWORD *)(a2 + 56) = v15;
    *(_QWORD *)(a2 + 72) = v16;
    *(_BYTE *)(a2 + 104) = 0;
    v4 = v19;
    if (v19)
    {
      *(_OWORD *)(a2 + 80) = *(_OWORD *)v17;
      *(_QWORD *)(a2 + 96) = v18;
      v17[1] = 0;
      v18 = 0;
      v17[0] = 0;
      *(_BYTE *)(a2 + 104) = 1;
    }
    *(_BYTE *)(a2 + 112) = 0;
    *(_BYTE *)(a2 + 136) = 0;
    v7 = v22;
    if (v22)
    {
      *(_OWORD *)(a2 + 112) = *(_OWORD *)__p;
      *(_QWORD *)(a2 + 128) = v21;
      __p[1] = 0;
      v21 = 0;
      __p[0] = 0;
      *(_BYTE *)(a2 + 136) = 1;
    }
    *(_BYTE *)(a2 + 144) = 0;
    *(_BYTE *)(a2 + 168) = 0;
    if (v25)
    {
      *(_OWORD *)(a2 + 144) = v23;
      *(_QWORD *)(a2 + 160) = v24;
      v24 = 0;
      v23 = 0uLL;
      *(_BYTE *)(a2 + 168) = 1;
    }
    *(_DWORD *)(a2 + 176) = 1;
    if (v7)
      goto LABEL_32;
  }
  else
  {
    sub_207F04CF8((uint64_t)v10, (uint64_t *)a1);
    v8 = v11;
    *(_BYTE *)(a2 + 24) = 0;
    *(_OWORD *)(a2 + 8) = v8;
    *(_BYTE *)(a2 + 48) = 0;
    if (v14)
    {
      *(_OWORD *)(a2 + 24) = *(_OWORD *)v12;
      *(_QWORD *)(a2 + 40) = v13;
      v12[1] = 0;
      v13 = 0;
      v12[0] = 0;
      *(_BYTE *)(a2 + 48) = 1;
    }
    *(_BYTE *)(a2 + 80) = 0;
    *(_OWORD *)(a2 + 56) = v15;
    *(_QWORD *)(a2 + 72) = v16;
    *(_BYTE *)(a2 + 104) = 0;
    v4 = v19;
    if (v19)
    {
      *(_OWORD *)(a2 + 80) = *(_OWORD *)v17;
      *(_QWORD *)(a2 + 96) = v18;
      v17[1] = 0;
      v18 = 0;
      v17[0] = 0;
      *(_BYTE *)(a2 + 104) = 1;
    }
    *(_BYTE *)(a2 + 112) = 0;
    *(_BYTE *)(a2 + 136) = 0;
    v9 = v22;
    if (v22)
    {
      *(_OWORD *)(a2 + 112) = *(_OWORD *)__p;
      *(_QWORD *)(a2 + 128) = v21;
      __p[1] = 0;
      v21 = 0;
      __p[0] = 0;
      *(_BYTE *)(a2 + 136) = 1;
    }
    *(_BYTE *)(a2 + 144) = 0;
    *(_BYTE *)(a2 + 168) = 0;
    if (v25)
    {
      *(_OWORD *)(a2 + 144) = v23;
      *(_QWORD *)(a2 + 160) = v24;
      v24 = 0;
      v23 = 0uLL;
      *(_BYTE *)(a2 + 168) = 1;
    }
    *(_DWORD *)(a2 + 176) = 2;
    if (v9)
      goto LABEL_32;
  }
LABEL_34:
  if (v4 && SHIBYTE(v18) < 0)
    operator delete(v17[0]);
  if (v14)
  {
    if (SHIBYTE(v13) < 0)
      operator delete(v12[0]);
  }
}

uint64_t sub_207F04868(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  __int128 v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;
  __int128 v13;
  uint64_t v14;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 48) = 0;
  if (*((_BYTE *)a2 + 40))
  {
    if (*((char *)a2 + 39) < 0)
    {
      sub_207CA40D8((_BYTE *)(a1 + 24), (void *)a2[2], a2[3]);
    }
    else
    {
      v6 = *((_OWORD *)a2 + 1);
      *(_QWORD *)(a1 + 40) = a2[4];
      *(_OWORD *)(a1 + 24) = v6;
    }
    *(_BYTE *)(a1 + 48) = 1;
  }
  if (*((_BYTE *)a2 + 96))
  {
    v7 = *((_BYTE *)a2 + 88);
    *(_QWORD *)(a1 + 56) = a2[10];
    *(_BYTE *)(a1 + 64) = v7;
    *(_BYTE *)(a1 + 80) = 0;
    v8 = a1 + 80;
    *(_BYTE *)(a1 + 72) = 1;
    *(_BYTE *)(a1 + 104) = 0;
    if (!*((_BYTE *)a2 + 72))
      goto LABEL_8;
  }
  else
  {
    *(_BYTE *)(a1 + 56) = 0;
    *(_BYTE *)(a1 + 80) = 0;
    v8 = a1 + 80;
    *(_BYTE *)(a1 + 72) = 0;
    *(_BYTE *)(a1 + 104) = 0;
    if (!*((_BYTE *)a2 + 72))
    {
LABEL_8:
      v9 = a1 + 112;
      if (*((_BYTE *)a2 + 160))
        goto LABEL_9;
      goto LABEL_16;
    }
  }
  if (*((char *)a2 + 71) < 0)
  {
    sub_207CA40D8((_BYTE *)v8, (void *)a2[6], a2[7]);
  }
  else
  {
    v10 = *((_OWORD *)a2 + 3);
    *(_QWORD *)(v8 + 16) = a2[8];
    *(_OWORD *)v8 = v10;
  }
  *(_BYTE *)(a1 + 104) = 1;
  v9 = a1 + 112;
  if (*((_BYTE *)a2 + 160))
  {
LABEL_9:
    if (*((char *)a2 + 135) < 0)
    {
      sub_207CA40D8(&v13, (void *)a2[14], a2[15]);
    }
    else
    {
      v13 = *((_OWORD *)a2 + 7);
      v14 = a2[16];
    }
    *(_OWORD *)v9 = v13;
    *(_QWORD *)(v9 + 16) = v14;
    *(_BYTE *)(a1 + 136) = 1;
    v11 = *((_BYTE *)a2 + 200);
    if (v11)
      goto LABEL_20;
    goto LABEL_17;
  }
LABEL_16:
  *(_BYTE *)(a1 + 112) = 0;
  *(_BYTE *)(a1 + 136) = 0;
  v11 = *((_BYTE *)a2 + 200);
  if (v11)
  {
LABEL_20:
    sub_207F04A90(a2 + 22, (uint64_t)&v13);
    *(_OWORD *)(a1 + 144) = v13;
    *(_QWORD *)(a1 + 160) = v14;
    v11 = 1;
    goto LABEL_21;
  }
LABEL_17:
  *(_BYTE *)(a1 + 144) = 0;
LABEL_21:
  *(_BYTE *)(a1 + 168) = v11;
  return a1;
}

void sub_207F04A24(_Unwind_Exception *exception_object)
{
  char *v1;
  void **v2;
  void **v3;

  if (v1[104] && v1[103] < 0)
    operator delete(*v3);
  if (v1[48])
  {
    if (v1[47] < 0)
      operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

double sub_207F04A90@<D0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  double result;
  __int128 v6;
  uint64_t v7;

  v4 = (a1[1] - *a1) >> 5;
  v7 = 0;
  v6 = 0uLL;
  sub_207CA44DC((char **)&v6, 0xAAAAAAAAAAAAAAABLL * v4);
  sub_207F04B98(*a1, a1[1], (uint64_t)&v6);
  result = *(double *)&v6;
  *(_OWORD *)a2 = v6;
  *(_QWORD *)(a2 + 16) = v7;
  return result;
}

void sub_207F04B04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **__p, void **a10)
{
  void **v11;
  void **v12;

  if (__p)
  {
    v11 = a10;
    v12 = __p;
    if (a10 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != __p);
      v12 = __p;
    }
    operator delete(v12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_207F04B98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  unint64_t v7;
  char *v8;
  int v9;
  void *__p[2];
  uint64_t v12;
  _BYTE v13[24];
  int v14;
  char v15;
  _QWORD v16[2];

  if (a1 != a2)
  {
    v5 = a1;
    do
    {
      v14 = 0;
      sub_207E0AFA0((uint64_t)v16, (uint64_t)v13, v5);
      if (v14 == -1)
        sub_207CA9F48();
      v16[0] = &v15;
      ((void (*)(void **__return_ptr, _QWORD *, _BYTE *))off_24C0790E0[v14])(__p, v16, v13);
      if (v14 != -1)
        ((void (*)(_QWORD *, _BYTE *))off_24C0790C8[v14])(v16, v13);
      v7 = *(_QWORD *)(a3 + 8);
      if (v7 < *(_QWORD *)(a3 + 16))
      {
        v6 = *(_OWORD *)__p;
        *(_QWORD *)(v7 + 16) = v12;
        *(_OWORD *)v7 = v6;
        *(_QWORD *)(a3 + 8) = v7 + 24;
      }
      else
      {
        v8 = sub_207CA4674((void **)a3, (uint64_t)__p);
        v9 = SHIBYTE(v12);
        *(_QWORD *)(a3 + 8) = v8;
        if (v9 < 0)
          operator delete(__p[0]);
      }
      v5 += 96;
    }
    while (v5 != a2);
  }
  return a3;
}

void sub_207F04CA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_207F04CF8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  __int128 v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;
  __int128 v13;
  uint64_t v14;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 48) = 0;
  if (*((_BYTE *)a2 + 40))
  {
    if (*((char *)a2 + 39) < 0)
    {
      sub_207CA40D8((_BYTE *)(a1 + 24), (void *)a2[2], a2[3]);
    }
    else
    {
      v6 = *((_OWORD *)a2 + 1);
      *(_QWORD *)(a1 + 40) = a2[4];
      *(_OWORD *)(a1 + 24) = v6;
    }
    *(_BYTE *)(a1 + 48) = 1;
  }
  if (*((_BYTE *)a2 + 96))
  {
    v7 = *((_BYTE *)a2 + 88);
    *(_QWORD *)(a1 + 56) = a2[10];
    *(_BYTE *)(a1 + 64) = v7;
    *(_BYTE *)(a1 + 80) = 0;
    v8 = a1 + 80;
    *(_BYTE *)(a1 + 72) = 1;
    *(_BYTE *)(a1 + 104) = 0;
    if (!*((_BYTE *)a2 + 72))
      goto LABEL_8;
  }
  else
  {
    *(_BYTE *)(a1 + 56) = 0;
    *(_BYTE *)(a1 + 80) = 0;
    v8 = a1 + 80;
    *(_BYTE *)(a1 + 72) = 0;
    *(_BYTE *)(a1 + 104) = 0;
    if (!*((_BYTE *)a2 + 72))
    {
LABEL_8:
      v9 = a1 + 112;
      if (*((_BYTE *)a2 + 160))
        goto LABEL_9;
      goto LABEL_16;
    }
  }
  if (*((char *)a2 + 71) < 0)
  {
    sub_207CA40D8((_BYTE *)v8, (void *)a2[6], a2[7]);
  }
  else
  {
    v10 = *((_OWORD *)a2 + 3);
    *(_QWORD *)(v8 + 16) = a2[8];
    *(_OWORD *)v8 = v10;
  }
  *(_BYTE *)(a1 + 104) = 1;
  v9 = a1 + 112;
  if (*((_BYTE *)a2 + 160))
  {
LABEL_9:
    if (*((char *)a2 + 135) < 0)
    {
      sub_207CA40D8(&v13, (void *)a2[14], a2[15]);
    }
    else
    {
      v13 = *((_OWORD *)a2 + 7);
      v14 = a2[16];
    }
    *(_OWORD *)v9 = v13;
    *(_QWORD *)(v9 + 16) = v14;
    *(_BYTE *)(a1 + 136) = 1;
    v11 = *((_BYTE *)a2 + 200);
    if (v11)
      goto LABEL_20;
    goto LABEL_17;
  }
LABEL_16:
  *(_BYTE *)(a1 + 112) = 0;
  *(_BYTE *)(a1 + 136) = 0;
  v11 = *((_BYTE *)a2 + 200);
  if (v11)
  {
LABEL_20:
    sub_207F04F20(a2 + 22, (uint64_t)&v13);
    *(_OWORD *)(a1 + 144) = v13;
    *(_QWORD *)(a1 + 160) = v14;
    v11 = 1;
    goto LABEL_21;
  }
LABEL_17:
  *(_BYTE *)(a1 + 144) = 0;
LABEL_21:
  *(_BYTE *)(a1 + 168) = v11;
  return a1;
}

void sub_207F04EB4(_Unwind_Exception *exception_object)
{
  char *v1;
  void **v2;
  void **v3;

  if (v1[104] && v1[103] < 0)
    operator delete(*v3);
  if (v1[48])
  {
    if (v1[47] < 0)
      operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

double sub_207F04F20@<D0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  double result;
  __int128 v6;
  uint64_t v7;

  v4 = (a1[1] - *a1) >> 5;
  v7 = 0;
  v6 = 0uLL;
  sub_207CA44DC((char **)&v6, 0xAAAAAAAAAAAAAAABLL * v4);
  sub_207F05028(*a1, a1[1], (uint64_t)&v6);
  result = *(double *)&v6;
  *(_OWORD *)a2 = v6;
  *(_QWORD *)(a2 + 16) = v7;
  return result;
}

void sub_207F04F94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void **__p, void **a10)
{
  void **v11;
  void **v12;

  if (__p)
  {
    v11 = a10;
    v12 = __p;
    if (a10 != __p)
    {
      do
      {
        if (*((char *)v11 - 1) < 0)
          operator delete(*(v11 - 3));
        v11 -= 3;
      }
      while (v11 != __p);
      v12 = __p;
    }
    operator delete(v12);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_207F05028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  unint64_t v7;
  char *v8;
  int v9;
  void *__p[2];
  uint64_t v12;
  _BYTE v13[24];
  int v14;
  char v15;
  _QWORD v16[2];

  if (a1 != a2)
  {
    v5 = a1;
    do
    {
      v14 = 0;
      sub_207E0AFA0((uint64_t)v16, (uint64_t)v13, v5);
      if (v14 == -1)
        sub_207CA9F48();
      v16[0] = &v15;
      ((void (*)(void **__return_ptr, _QWORD *, _BYTE *))off_24C0790E0[v14])(__p, v16, v13);
      if (v14 != -1)
        ((void (*)(_QWORD *, _BYTE *))off_24C0790C8[v14])(v16, v13);
      v7 = *(_QWORD *)(a3 + 8);
      if (v7 < *(_QWORD *)(a3 + 16))
      {
        v6 = *(_OWORD *)__p;
        *(_QWORD *)(v7 + 16) = v12;
        *(_OWORD *)v7 = v6;
        *(_QWORD *)(a3 + 8) = v7 + 24;
      }
      else
      {
        v8 = sub_207CA4674((void **)a3, (uint64_t)__p);
        v9 = SHIBYTE(v12);
        *(_QWORD *)(a3 + 8) = v8;
        if (v9 < 0)
          operator delete(__p[0]);
      }
      v5 += 96;
    }
    while (v5 != a2);
  }
  return a3;
}

void sub_207F05134(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18)
{
  if (a14 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

const char *sub_207F05190()
{
  return "cv3d.viz";
}

void sub_207F051A0(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  void *v6;
  int v7;
  int v8;
  void *v9;
  char *v11;
  int v12;
  std::__shared_weak_count *v13;
  unint64_t *v14;
  unint64_t v15;
  std::__shared_weak_count *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  unint64_t *p_shared_owners;
  unint64_t v21;
  unint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  int32x4_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  std::__shared_weak_count *v40;
  unint64_t *v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  std::__shared_weak_count *v45;
  void *v46;
  unint64_t *v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  _DWORD *v51;
  _QWORD *v52;
  _DWORD *v53;
  std::__shared_weak_count *v54;
  void *v55;
  unint64_t *v56;
  unint64_t v57;
  unint64_t v58;
  std::__shared_weak_count *v59;
  uint64_t v60;
  unint64_t *v61;
  unint64_t v62;
  unint64_t v63;
  std::__shared_weak_count *v64;
  uint64_t v65;
  unint64_t *v66;
  unint64_t v67;
  unint64_t v68;
  std::__shared_weak_count *v69;
  unint64_t *v70;
  unint64_t v71;
  unint64_t *v72;
  unint64_t *v73;
  unint64_t *v74;
  unint64_t *v75;
  unint64_t *v76;
  unint64_t *v77;
  void *v78[7];
  uint64_t v79;
  __int128 v80;
  _QWORD v81[3];
  uint64_t v82;
  _BYTE v83[32];
  _BYTE __p[24];
  uint64_t v85;
  void *v86[2];
  uint64_t v87;
  void *v88[2];
  uint64_t v89;
  void *v90;
  std::__shared_weak_count *v91;
  __int128 v92;
  char v93;
  char v94;
  char v95;
  char v96;
  char v97;
  char v98;
  char v99;
  char v100;
  char v101;
  uint64_t v102;

  v102 = *MEMORY[0x24BDAC8D0];
  switch(a2)
  {
    case 1:
      v11 = (char *)operator new(0x140uLL);
      *(_QWORD *)v11 = off_24C079168;
      *((_QWORD *)v11 + 1) = 0;
      v12 = *(_DWORD *)(a1 + 8);
      *((_QWORD *)v11 + 4) = &unk_24C076348;
      *((_QWORD *)v11 + 2) = 0;
      *((_QWORD *)v11 + 3) = off_24C0762D0;
      *(_OWORD *)(v11 + 40) = 0u;
      *(_OWORD *)(v11 + 56) = 0u;
      *(_OWORD *)(v11 + 72) = 0u;
      *(_OWORD *)(v11 + 88) = 0u;
      *(_OWORD *)(v11 + 104) = 0u;
      *(_OWORD *)(v11 + 120) = 0u;
      *(_OWORD *)(v11 + 136) = 0u;
      *(_OWORD *)(v11 + 152) = 0u;
      *(_OWORD *)(v11 + 168) = 0u;
      *(_OWORD *)(v11 + 184) = 0u;
      v90 = &off_24C0736D0;
      *(_OWORD *)(v11 + 200) = 0u;
      sub_207E16F34((uint64_t)&v91);
      sub_207F22B74((uint64_t)(v11 + 216), (uint64_t)&v90, 0);
      v13 = (std::__shared_weak_count *)v92;
      if ((_QWORD)v92)
      {
        v14 = (unint64_t *)(v92 + 8);
        do
          v15 = __ldaxr(v14);
        while (__stlxr(v15 - 1, v14));
        if (!v15)
        {
          ((void (*)(std::__shared_weak_count *))v13->__on_zero_shared)(v13);
          std::__shared_weak_count::__release_weak(v13);
        }
      }
      *((_DWORD *)v11 + 60) = v12;
      *a3 = v11 + 32;
      a3[1] = v11;
      return;
    case 2:
      v90 = 0;
      v91 = 0;
      *(_QWORD *)&v92 = 0;
      sub_20807DEF0(v83, 7, (uint64_t)&v90);
      v17 = *(_QWORD *)v83;
      v16 = *(std::__shared_weak_count **)&v83[8];
      v78[0] = *(void **)v83;
      v78[1] = *(void **)&v83[8];
      if (v90)
      {
        v91 = (std::__shared_weak_count *)v90;
        operator delete(v90);
      }
      v18 = (char *)operator new(0x100uLL);
      *((_QWORD *)v18 + 1) = 0;
      *((_QWORD *)v18 + 2) = 0;
      *(_QWORD *)v18 = off_24C079268;
      *(_QWORD *)v83 = v17;
      *(_QWORD *)&v83[8] = v16;
      v78[0] = 0;
      v78[1] = 0;
      *((_QWORD *)v18 + 3) = &off_24C076F10;
      v19 = v18 + 24;
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      *((_QWORD *)v18 + 4) = &unk_24C076F70;
      LOBYTE(v92) = 0;
      sub_207F044CC((uint64_t)&v90, (uint64_t)(v18 + 40));
      v18[224] = *(_BYTE *)v17;
      *((_QWORD *)v18 + 29) = *(_QWORD *)(v17 + 56);
      *((_QWORD *)v18 + 30) = v17;
      *((_QWORD *)v18 + 31) = v16;
      if (v16)
      {
        p_shared_owners = (unint64_t *)&v16->__shared_owners_;
        do
          v21 = __ldxr(p_shared_owners);
        while (__stxr(v21 + 1, p_shared_owners));
        *((_QWORD *)v18 + 3) = &off_24C076E68;
        *((_QWORD *)v18 + 4) = &unk_24C076EC8;
        sub_207D49CF4((uint64_t)&v90);
        do
          v22 = __ldaxr(p_shared_owners);
        while (__stlxr(v22 - 1, p_shared_owners));
        if (!v22)
        {
          ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
          std::__shared_weak_count::__release_weak(v16);
        }
      }
      else
      {
        *((_QWORD *)v18 + 3) = &off_24C076E68;
        *((_QWORD *)v18 + 4) = &unk_24C076EC8;
        sub_207D49CF4((uint64_t)&v90);
      }
      v69 = (std::__shared_weak_count *)v78[1];
      if (!v78[1])
        goto LABEL_154;
      v70 = (unint64_t *)((char *)v78[1] + 8);
      do
        v71 = __ldaxr(v70);
      while (__stlxr(v71 - 1, v70));
      goto LABEL_152;
    case 3:
      v90 = 0;
      v91 = 0;
      *(_QWORD *)&v92 = 0;
      sub_2080806D0((uint64_t)&v90, v83);
      v24 = *(_QWORD *)v83;
      v23 = *(std::__shared_weak_count **)&v83[8];
      v78[0] = *(void **)v83;
      v78[1] = *(void **)&v83[8];
      if (v90)
      {
        v91 = (std::__shared_weak_count *)v90;
        operator delete(v90);
      }
      v18 = (char *)operator new(0x100uLL);
      *((_QWORD *)v18 + 1) = 0;
      *((_QWORD *)v18 + 2) = 0;
      *(_QWORD *)v18 = off_24C0792B8;
      *(_QWORD *)v83 = v24;
      *(_QWORD *)&v83[8] = v23;
      v78[0] = 0;
      v78[1] = 0;
      *((_QWORD *)v18 + 3) = &off_24C0771B8;
      v19 = v18 + 24;
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      *((_QWORD *)v18 + 4) = &unk_24C077218;
      LOBYTE(v92) = 0;
      sub_207F044CC((uint64_t)&v90, (uint64_t)(v18 + 40));
      v18[224] = *(_BYTE *)v24;
      *((_QWORD *)v18 + 29) = *(_QWORD *)(v24 + 56) >> 1;
      *((_QWORD *)v18 + 30) = v24;
      *((_QWORD *)v18 + 31) = v23;
      if (v23)
      {
        v25 = (unint64_t *)&v23->__shared_owners_;
        do
          v26 = __ldxr(v25);
        while (__stxr(v26 + 1, v25));
        *((_QWORD *)v18 + 3) = &off_24C077110;
        *((_QWORD *)v18 + 4) = &unk_24C077170;
        sub_207D49CF4((uint64_t)&v90);
        do
          v27 = __ldaxr(v25);
        while (__stlxr(v27 - 1, v25));
        if (!v27)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      else
      {
        *((_QWORD *)v18 + 3) = &off_24C077110;
        *((_QWORD *)v18 + 4) = &unk_24C077170;
        sub_207D49CF4((uint64_t)&v90);
      }
      v69 = (std::__shared_weak_count *)v78[1];
      if (!v78[1])
        goto LABEL_154;
      v72 = (unint64_t *)((char *)v78[1] + 8);
      do
        v71 = __ldaxr(v72);
      while (__stlxr(v71 - 1, v72));
      goto LABEL_152;
    case 4:
      v90 = 0;
      v91 = 0;
      *(_QWORD *)&v92 = 0;
      sub_208080B58((uint64_t)&v90, v83);
      v29 = *(_QWORD *)v83;
      v28 = *(std::__shared_weak_count **)&v83[8];
      v78[0] = *(void **)v83;
      v78[1] = *(void **)&v83[8];
      if (v90)
      {
        v91 = (std::__shared_weak_count *)v90;
        operator delete(v90);
      }
      v18 = (char *)operator new(0x100uLL);
      *((_QWORD *)v18 + 1) = 0;
      *((_QWORD *)v18 + 2) = 0;
      *(_QWORD *)v18 = off_24C079308;
      *(_QWORD *)v83 = v29;
      *(_QWORD *)&v83[8] = v28;
      v78[0] = 0;
      v78[1] = 0;
      *((_QWORD *)v18 + 3) = &off_24C077390;
      v19 = v18 + 24;
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      *((_QWORD *)v18 + 4) = &unk_24C0773F0;
      LOBYTE(v92) = 0;
      sub_207F044CC((uint64_t)&v90, (uint64_t)(v18 + 40));
      v18[224] = *(_BYTE *)v29;
      *((_QWORD *)v18 + 29) = *(_QWORD *)(v29 + 56) / 3uLL;
      *((_QWORD *)v18 + 30) = v29;
      *((_QWORD *)v18 + 31) = v28;
      if (v28)
      {
        v30 = (unint64_t *)&v28->__shared_owners_;
        do
          v31 = __ldxr(v30);
        while (__stxr(v31 + 1, v30));
        *((_QWORD *)v18 + 3) = &off_24C0772E8;
        *((_QWORD *)v18 + 4) = &unk_24C077348;
        sub_207D49CF4((uint64_t)&v90);
        do
          v32 = __ldaxr(v30);
        while (__stlxr(v32 - 1, v30));
        if (!v32)
        {
          ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
          std::__shared_weak_count::__release_weak(v28);
        }
      }
      else
      {
        *((_QWORD *)v18 + 3) = &off_24C0772E8;
        *((_QWORD *)v18 + 4) = &unk_24C077348;
        sub_207D49CF4((uint64_t)&v90);
      }
      v69 = (std::__shared_weak_count *)v78[1];
      if (!v78[1])
        goto LABEL_154;
      v73 = (unint64_t *)((char *)v78[1] + 8);
      do
        v71 = __ldaxr(v73);
      while (__stlxr(v71 - 1, v73));
      goto LABEL_152;
    case 5:
      v33 = (char *)operator new(0x78uLL);
      v34 = (std::__shared_weak_count *)v33;
      *((_QWORD *)v33 + 1) = 0;
      v35 = (unint64_t *)(v33 + 8);
      *((_QWORD *)v33 + 2) = 0;
      *(_QWORD *)v33 = off_24C0838B0;
      *((_QWORD *)v33 + 5) = 0;
      *((_QWORD *)v33 + 6) = 0;
      v36 = vdupq_n_s32(0x7FC00000u);
      *((_QWORD *)v33 + 4) = &off_24C083D30;
      *(int32x4_t *)(v33 + 56) = v36;
      *(int32x4_t *)(v33 + 72) = v36;
      *(int32x4_t *)(v33 + 88) = v36;
      *((_DWORD *)v33 + 26) = 2143289344;
      *((_QWORD *)v33 + 3) = &off_24C083CD8;
      *((_QWORD *)v33 + 14) = 0;
      v78[0] = &off_24C084548;
      v78[1] = v33 + 24;
      v78[2] = v33;
      do
        v37 = __ldxr(v35);
      while (__stxr(v37 + 1, v35));
      do
        v38 = __ldaxr(v35);
      while (__stlxr(v38 - 1, v35));
      if (!v38)
      {
        (*(void (**)(char *))(*(_QWORD *)v33 + 16))(v33);
        std::__shared_weak_count::__release_weak(v34);
      }
      v39 = operator new(0x108uLL);
      v39[1] = 0;
      v39[2] = 0;
      *v39 = off_24C079358;
      *(_QWORD *)v83 = &off_24C084548;
      *(_OWORD *)&v83[8] = *(_OWORD *)&v78[1];
      v78[1] = 0;
      v78[2] = 0;
      v39[3] = &off_24C077638;
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      v39[4] = &unk_24C077698;
      LOBYTE(v92) = 0;
      sub_207F044CC((uint64_t)&v90, (uint64_t)(v39 + 5));
      sub_2080855CC((uint64_t)(v39 + 28), (uint64_t)v83);
      v39[3] = &off_24C077590;
      v39[4] = &unk_24C0775F0;
      sub_207D49CF4((uint64_t)&v90);
      *(_QWORD *)v83 = &off_24C084548;
      v40 = *(std::__shared_weak_count **)&v83[16];
      if (*(_QWORD *)&v83[16])
      {
        v41 = (unint64_t *)(*(_QWORD *)&v83[16] + 8);
        do
          v42 = __ldaxr(v41);
        while (__stlxr(v42 - 1, v41));
        if (!v42)
        {
          ((void (*)(std::__shared_weak_count *))v40->__on_zero_shared)(v40);
          std::__shared_weak_count::__release_weak(v40);
        }
      }
      v78[0] = &off_24C084548;
      if (v78[2])
      {
        v43 = (unint64_t *)((char *)v78[2] + 8);
        do
          v44 = __ldaxr(v43);
        while (__stlxr(v44 - 1, v43));
        if (!v44)
        {
          (*(void (**)(void *))(*(_QWORD *)v78[2] + 16))(v78[2]);
          std::__shared_weak_count::__release_weak((std::__shared_weak_count *)v78[2]);
        }
      }
      *a3 = v39 + 3;
      a3[1] = v39;
      return;
    case 6:
      sub_20806CB1C(v78);
      v18 = (char *)operator new(0xF0uLL);
      *((_QWORD *)v18 + 1) = 0;
      *((_QWORD *)v18 + 2) = 0;
      *(_QWORD *)v18 = off_24C0793A8;
      v46 = v78[0];
      v45 = (std::__shared_weak_count *)v78[1];
      *(void **)v83 = v78[0];
      *(void **)&v83[8] = v78[1];
      v78[0] = 0;
      v78[1] = 0;
      *((_QWORD *)v18 + 3) = &off_24C077B60;
      v19 = v18 + 24;
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      *((_QWORD *)v18 + 4) = &unk_24C077BC0;
      LOBYTE(v92) = 0;
      sub_207F044CC((uint64_t)&v90, (uint64_t)(v18 + 40));
      *((_QWORD *)v18 + 28) = v46;
      *((_QWORD *)v18 + 29) = v45;
      if (v45)
      {
        v47 = (unint64_t *)&v45->__shared_owners_;
        do
          v48 = __ldxr(v47);
        while (__stxr(v48 + 1, v47));
        *((_QWORD *)v18 + 3) = &off_24C077AB8;
        *((_QWORD *)v18 + 4) = &unk_24C077B18;
        sub_207D49CF4((uint64_t)&v90);
        do
          v49 = __ldaxr(v47);
        while (__stlxr(v49 - 1, v47));
        if (!v49)
        {
          ((void (*)(std::__shared_weak_count *))v45->__on_zero_shared)(v45);
          std::__shared_weak_count::__release_weak(v45);
        }
      }
      else
      {
        *((_QWORD *)v18 + 3) = &off_24C077AB8;
        *((_QWORD *)v18 + 4) = &unk_24C077B18;
        sub_207D49CF4((uint64_t)&v90);
      }
      v69 = (std::__shared_weak_count *)v78[1];
      if (!v78[1])
        goto LABEL_154;
      v74 = (unint64_t *)((char *)v78[1] + 8);
      do
        v71 = __ldaxr(v74);
      while (__stlxr(v71 - 1, v74));
      goto LABEL_152;
    case 7:
      v50 = (char *)operator new(0x270uLL);
      *((_QWORD *)v50 + 1) = 0;
      *((_QWORD *)v50 + 2) = 0;
      *(_QWORD *)v50 = off_24C0793F8;
      bzero(v50 + 40, 0x210uLL);
      *((_QWORD *)v50 + 3) = off_24C077C90;
      *((_QWORD *)v50 + 4) = &unk_24C077D08;
      v50[56] = 0;
      v50[88] = 0;
      v50[112] = 0;
      v50[144] = 0;
      v50[176] = 0;
      v50[208] = 0;
      *((_QWORD *)v50 + 28) = 0;
      *((_QWORD *)v50 + 29) = 0;
      *((_QWORD *)v50 + 27) = 0;
      *((_DWORD *)v50 + 71) = 0;
      *((_QWORD *)v50 + 33) = 0;
      *((_QWORD *)v50 + 34) = 0;
      *((_QWORD *)v50 + 32) = 0;
      *((_DWORD *)v50 + 81) = 0;
      *((_QWORD *)v50 + 38) = 0;
      *((_QWORD *)v50 + 39) = 0;
      *((_QWORD *)v50 + 37) = 0;
      *((_DWORD *)v50 + 91) = 0;
      *((_QWORD *)v50 + 43) = 0;
      *((_QWORD *)v50 + 44) = 0;
      *((_QWORD *)v50 + 42) = 0;
      *((_QWORD *)v50 + 48) = 0;
      *((_QWORD *)v50 + 49) = 0;
      *((_QWORD *)v50 + 47) = 0;
      v50[536] = 0;
      *(_QWORD *)(v50 + 420) = 0;
      *((_DWORD *)v50 + 107) = 0;
      *(_QWORD *)(v50 + 404) = 0;
      *(_QWORD *)(v50 + 412) = 0;
      *(_QWORD *)(v50 + 452) = 0;
      *((_DWORD *)v50 + 115) = 0;
      *(_QWORD *)(v50 + 436) = 0;
      *(_QWORD *)(v50 + 444) = 0;
      *(_QWORD *)(v50 + 476) = 0;
      *(_QWORD *)(v50 + 468) = 0;
      *((_DWORD *)v50 + 123) = 0;
      *(_QWORD *)(v50 + 484) = 0;
      *(_QWORD *)(v50 + 508) = 0;
      *(_QWORD *)(v50 + 500) = 0;
      *((_DWORD *)v50 + 131) = 0;
      *(_QWORD *)(v50 + 516) = 0;
      *((_OWORD *)v50 + 38) = 0u;
      *(_OWORD *)(v50 + 580) = 0u;
      *(_OWORD *)(v50 + 596) = 0u;
      *(_OWORD *)(v50 + 564) = 0u;
      *a3 = v50 + 32;
      a3[1] = v50;
      return;
    case 8:
      v51 = operator new(4uLL);
      *v51 = 0;
      v52 = operator new(0x108uLL);
      v52[1] = 0;
      v52[2] = 0;
      *v52 = off_24C0791B8;
      v52[3] = &off_24C076970;
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      v52[4] = &unk_24C0769D0;
      LOBYTE(v92) = 0;
      sub_207F044CC((uint64_t)&v90, (uint64_t)(v52 + 5));
      *((_BYTE *)v52 + 224) = 7;
      *((_BYTE *)v52 + 232) = 7;
      v52[31] = 0;
      v52[32] = 0;
      v52[30] = 0;
      v53 = operator new(4uLL);
      v52[30] = v53;
      *v53++ = *v51;
      v52[31] = v53;
      v52[32] = v53;
      v52[3] = &off_24C0768C8;
      v52[4] = &unk_24C076928;
      sub_207D49CF4((uint64_t)&v90);
      operator delete(v51);
      *a3 = v52 + 3;
      a3[1] = v52;
      return;
    case 9:
      memset(v83, 0, 24);
      sub_2080752AC((uint64_t)&v90, (uint64_t)v83);
      v55 = v90;
      v54 = v91;
      v78[0] = v90;
      v78[1] = v91;
      *(_OWORD *)&v78[2] = v92;
      if (*(_QWORD *)v83)
      {
        *(_QWORD *)&v83[8] = *(_QWORD *)v83;
        operator delete(*(void **)v83);
      }
      v18 = (char *)operator new(0x108uLL);
      *((_QWORD *)v18 + 1) = 0;
      *((_QWORD *)v18 + 2) = 0;
      *(_QWORD *)v18 = off_24C079448;
      *(_QWORD *)v83 = v55;
      *(_QWORD *)&v83[8] = v54;
      v78[0] = 0;
      v78[1] = 0;
      *(_OWORD *)&v83[16] = *(_OWORD *)&v78[2];
      *((_QWORD *)v18 + 3) = &off_24C077EC0;
      v19 = v18 + 24;
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      *((_QWORD *)v18 + 4) = &unk_24C077F20;
      LOBYTE(v92) = 0;
      sub_207F044CC((uint64_t)&v90, (uint64_t)(v18 + 40));
      *((_QWORD *)v18 + 28) = *(_QWORD *)&v83[16];
      *((_QWORD *)v18 + 29) = v55;
      *((_QWORD *)v18 + 30) = v54;
      if (v54)
      {
        v56 = (unint64_t *)&v54->__shared_owners_;
        do
          v57 = __ldxr(v56);
        while (__stxr(v57 + 1, v56));
        *(_OWORD *)(v18 + 248) = *(_OWORD *)&v83[16];
        *((_QWORD *)v18 + 3) = &off_24C077E18;
        *((_QWORD *)v18 + 4) = &unk_24C077E78;
        sub_207D49CF4((uint64_t)&v90);
        do
          v58 = __ldaxr(v56);
        while (__stlxr(v58 - 1, v56));
        if (!v58)
        {
          ((void (*)(std::__shared_weak_count *))v54->__on_zero_shared)(v54);
          std::__shared_weak_count::__release_weak(v54);
        }
      }
      else
      {
        *(_OWORD *)(v18 + 248) = *(_OWORD *)&v83[16];
        *((_QWORD *)v18 + 3) = &off_24C077E18;
        *((_QWORD *)v18 + 4) = &unk_24C077E78;
        sub_207D49CF4((uint64_t)&v90);
      }
      v69 = (std::__shared_weak_count *)v78[1];
      if (!v78[1])
        goto LABEL_154;
      v75 = (unint64_t *)((char *)v78[1] + 8);
      do
        v71 = __ldaxr(v75);
      while (__stlxr(v71 - 1, v75));
      goto LABEL_152;
    case 10:
      HIBYTE(v78[2]) = 0;
      LOBYTE(v78[0]) = 0;
      LODWORD(v78[3]) = 6;
      HIBYTE(v78[6]) = 0;
      LOBYTE(v78[4]) = 0;
      LODWORD(v79) = 0;
      HIBYTE(v81[0]) = 0;
      LOBYTE(v80) = 0;
      HIBYTE(v82) = 0;
      v18 = (char *)operator new(0x150uLL);
      *((_QWORD *)v18 + 1) = 0;
      *((_QWORD *)v18 + 2) = 0;
      *(_QWORD *)v18 = off_24C079498;
      *(_OWORD *)v83 = *(_OWORD *)v78;
      *(void **)&v83[16] = v78[2];
      memset(v78, 0, 24);
      *(_DWORD *)&v83[24] = 6;
      *(_OWORD *)__p = *(_OWORD *)&v78[4];
      *(void **)&__p[16] = v78[6];
      memset(&v78[4], 0, 24);
      LODWORD(v85) = 0;
      *(_OWORD *)v86 = v80;
      v87 = v81[0];
      v80 = 0uLL;
      memset(v81, 0, sizeof(v81));
      v89 = v82;
      *(_OWORD *)v88 = *(_OWORD *)&v81[1];
      v82 = 0;
      *((_QWORD *)v18 + 3) = off_24C078168;
      v19 = v18 + 24;
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      LOBYTE(v92) = 0;
      *((_QWORD *)v18 + 4) = &unk_24C0781C8;
      sub_207F044CC((uint64_t)&v90, (uint64_t)(v18 + 40));
      sub_207F08A3C(v18 + 224, (__int128 *)v83);
      *((_QWORD *)v18 + 3) = off_24C0780C0;
      *((_QWORD *)v18 + 4) = &unk_24C078120;
      sub_207D49CF4((uint64_t)&v90);
      if (SHIBYTE(v89) < 0)
      {
        operator delete(v88[0]);
        if ((SHIBYTE(v87) & 0x80000000) == 0)
        {
LABEL_93:
          if ((__p[23] & 0x80000000) == 0)
            goto LABEL_94;
          goto LABEL_141;
        }
      }
      else if ((SHIBYTE(v87) & 0x80000000) == 0)
      {
        goto LABEL_93;
      }
      operator delete(v86[0]);
      if ((__p[23] & 0x80000000) == 0)
      {
LABEL_94:
        if ((v83[23] & 0x80000000) == 0)
          goto LABEL_154;
        goto LABEL_142;
      }
LABEL_141:
      operator delete(*(void **)__p);
      if ((v83[23] & 0x80000000) == 0)
        goto LABEL_154;
LABEL_142:
      operator delete(*(void **)v83);
LABEL_154:
      *a3 = v19;
      a3[1] = v18;
      return;
    case 11:
      sub_207F09774((uint64_t)v78);
      v4 = operator new(0x198uLL);
      v5 = v4;
      v4[1] = 0;
      v4[2] = 0;
      *v4 = off_24C0794E8;
      v6 = v78[0];
      v78[0] = 0;
      *(_QWORD *)v83 = v6;
      v83[8] = 0;
      __p[0] = 0;
      v7 = LOBYTE(v78[4]);
      if (LOBYTE(v78[4]))
      {
        *(_OWORD *)&v83[8] = *(_OWORD *)&v78[1];
        *(void **)&v83[24] = v78[3];
        memset(&v78[1], 0, 24);
        __p[0] = 1;
      }
      __p[8] = 0;
      LOBYTE(v86[0]) = 0;
      v8 = v80;
      if ((_BYTE)v80)
      {
        *(_OWORD *)&__p[8] = *(_OWORD *)&v78[5];
        v85 = v79;
        v78[6] = 0;
        v79 = 0;
        v78[5] = 0;
        LOBYTE(v86[0]) = 1;
      }
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      v4[3] = &off_24C078428;
      v4[4] = &unk_24C078488;
      LOBYTE(v92) = 0;
      sub_207F044CC((uint64_t)&v90, (uint64_t)(v4 + 5));
      sub_207F08C98((uint64_t)(v5 + 28), (uint64_t *)v83);
      v5[3] = &off_24C078380;
      v5[4] = &unk_24C0783E0;
      sub_207D49CF4((uint64_t)&v90);
      if (v8 && SHIBYTE(v85) < 0)
        operator delete(*(void **)&__p[8]);
      if (v7 && (v83[31] & 0x80000000) != 0)
        operator delete(*(void **)&v83[8]);
      if (v6)
        operator delete(v6);
      if ((_BYTE)v80 && SHIBYTE(v79) < 0)
        operator delete(v78[5]);
      if (LOBYTE(v78[4]) && SHIBYTE(v78[3]) < 0)
        operator delete(v78[1]);
      v9 = v78[0];
      v78[0] = 0;
      if (v9)
        operator delete(v9);
      *a3 = v5 + 3;
      a3[1] = v5;
      return;
    case 12:
      v90 = 0;
      v91 = 0;
      *(_QWORD *)&v92 = 0;
      sub_2080777DC((uint64_t)&v90, v83);
      v60 = *(_QWORD *)v83;
      v59 = *(std::__shared_weak_count **)&v83[8];
      v78[0] = *(void **)v83;
      v78[1] = *(void **)&v83[8];
      if (v90)
      {
        v91 = (std::__shared_weak_count *)v90;
        operator delete(v90);
      }
      v18 = (char *)operator new(0x100uLL);
      *((_QWORD *)v18 + 1) = 0;
      *((_QWORD *)v18 + 2) = 0;
      *(_QWORD *)v18 = off_24C079538;
      *(_QWORD *)v83 = v60;
      *(_QWORD *)&v83[8] = v59;
      v78[0] = 0;
      v78[1] = 0;
      *((_QWORD *)v18 + 3) = &off_24C078698;
      v19 = v18 + 24;
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      *((_QWORD *)v18 + 4) = &unk_24C0786F8;
      LOBYTE(v92) = 0;
      sub_207F044CC((uint64_t)&v90, (uint64_t)(v18 + 40));
      v18[224] = *(_BYTE *)v60;
      *((_QWORD *)v18 + 29) = *(_QWORD *)(v60 + 56) >> 2;
      *((_QWORD *)v18 + 30) = v60;
      *((_QWORD *)v18 + 31) = v59;
      if (v59)
      {
        v61 = (unint64_t *)&v59->__shared_owners_;
        do
          v62 = __ldxr(v61);
        while (__stxr(v62 + 1, v61));
        *((_QWORD *)v18 + 3) = &off_24C0785F0;
        *((_QWORD *)v18 + 4) = &unk_24C078650;
        sub_207D49CF4((uint64_t)&v90);
        do
          v63 = __ldaxr(v61);
        while (__stlxr(v63 - 1, v61));
        if (!v63)
        {
          ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
          std::__shared_weak_count::__release_weak(v59);
        }
      }
      else
      {
        *((_QWORD *)v18 + 3) = &off_24C0785F0;
        *((_QWORD *)v18 + 4) = &unk_24C078650;
        sub_207D49CF4((uint64_t)&v90);
      }
      v69 = (std::__shared_weak_count *)v78[1];
      if (!v78[1])
        goto LABEL_154;
      v76 = (unint64_t *)((char *)v78[1] + 8);
      do
        v71 = __ldaxr(v76);
      while (__stlxr(v71 - 1, v76));
      goto LABEL_152;
    case 13:
      v90 = 0;
      v91 = 0;
      *(_QWORD *)&v92 = 0;
      sub_208077C68((uint64_t)&v90, v83);
      v65 = *(_QWORD *)v83;
      v64 = *(std::__shared_weak_count **)&v83[8];
      v78[0] = *(void **)v83;
      v78[1] = *(void **)&v83[8];
      if (v90)
      {
        v91 = (std::__shared_weak_count *)v90;
        operator delete(v90);
      }
      v18 = (char *)operator new(0x100uLL);
      *((_QWORD *)v18 + 1) = 0;
      *((_QWORD *)v18 + 2) = 0;
      *(_QWORD *)v18 = off_24C079588;
      *(_QWORD *)v83 = v65;
      *(_QWORD *)&v83[8] = v64;
      v78[0] = 0;
      v78[1] = 0;
      *((_QWORD *)v18 + 3) = &off_24C078838;
      v19 = v18 + 24;
      v93 = 0;
      v94 = 0;
      v95 = 0;
      v96 = 0;
      v97 = 0;
      v98 = 0;
      v99 = 0;
      v100 = 0;
      v101 = 0;
      v90 = 0;
      v91 = 0;
      *((_QWORD *)v18 + 4) = &unk_24C078898;
      LOBYTE(v92) = 0;
      sub_207F044CC((uint64_t)&v90, (uint64_t)(v18 + 40));
      v18[224] = *(_BYTE *)v65;
      *((_QWORD *)v18 + 29) = *(_QWORD *)(v65 + 56) / 6uLL;
      *((_QWORD *)v18 + 30) = v65;
      *((_QWORD *)v18 + 31) = v64;
      if (v64)
      {
        v66 = (unint64_t *)&v64->__shared_owners_;
        do
          v67 = __ldxr(v66);
        while (__stxr(v67 + 1, v66));
        *((_QWORD *)v18 + 3) = &off_24C078790;
        *((_QWORD *)v18 + 4) = &unk_24C0787F0;
        sub_207D49CF4((uint64_t)&v90);
        do
          v68 = __ldaxr(v66);
        while (__stlxr(v68 - 1, v66));
        if (!v68)
        {
          ((void (*)(std::__shared_weak_count *))v64->__on_zero_shared)(v64);
          std::__shared_weak_count::__release_weak(v64);
        }
      }
      else
      {
        *((_QWORD *)v18 + 3) = &off_24C078790;
        *((_QWORD *)v18 + 4) = &unk_24C0787F0;
        sub_207D49CF4((uint64_t)&v90);
      }
      v69 = (std::__shared_weak_count *)v78[1];
      if (!v78[1])
        goto LABEL_154;
      v77 = (unint64_t *)((char *)v78[1] + 8);
      do
        v71 = __ldaxr(v77);
      while (__stlxr(v71 - 1, v77));
LABEL_152:
      if (!v71)
      {
        ((void (*)(std::__shared_weak_count *))v69->__on_zero_shared)(v69);
        std::__shared_weak_count::__release_weak(v69);
      }
      goto LABEL_154;
    default:
      *a3 = 0;
      a3[1] = 0;
      return;
  }
}

void sub_207F06328(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,void *__p,uint64_t a43)
{
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  void *v47;

  v46 = *(unsigned int *)(v43 + 216);
  if ((_DWORD)v46 != -1)
    ((void (*)(char *, uint64_t))off_24C079240[v46])(&a41, v44);
  *(_DWORD *)(v43 + 216) = -1;
  sub_207D49CF4((uint64_t)&__p);
  sub_207EF1C98((uint64_t)&a23);
  std::__shared_weak_count::~__shared_weak_count((std::__shared_weak_count *)v43);
  operator delete(v47);
  sub_207EF1C98((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207F0675C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207EF1C98((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207F0677C(uint64_t (***lpsrc)()@<X2>, int a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t (***v4)();
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  _QWORD *v10;
  std::__shared_weak_count *v11;
  uint64_t v12;
  unint64_t *p_shared_owners;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  __int128 v18;

  v4 = lpsrc;
  switch(a2)
  {
    case 1:
      if (*lpsrc != off_24C078EA0)
      {
        v4 = 0;
        if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/include/Kit/Visualization/IData.h", 693, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
        {
          goto LABEL_37;
        }
      }
      v5 = operator new(0x140uLL);
      v5[1] = 0;
      v5[2] = 0;
      *v5 = off_24C0795D8;
      sub_207E03074(v5 + 3, (uint64_t)v4);
      goto LABEL_16;
    case 2:
      sub_207F06D80(&v18, lpsrc);
      goto LABEL_23;
    case 3:
      sub_207F06F20(&v18, lpsrc);
      goto LABEL_23;
    case 4:
      sub_207F070C4(&v18, lpsrc);
      goto LABEL_23;
    case 5:
      sub_207F07274(&v18, lpsrc);
      goto LABEL_23;
    case 6:
      if (*lpsrc == off_24C076218)
      {
        v6 = (uint64_t)(lpsrc + 1);
        v7 = (uint64_t)(lpsrc + 4);
      }
      else
      {
        if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1067, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
        {
LABEL_37:
          abort();
        }
        v6 = 8;
        v7 = 32;
      }
      v9 = operator new(0xF0uLL);
      v10 = v9;
      v9[1] = 0;
      v9[2] = 0;
      *v9 = off_24C0793A8;
      v12 = *(_QWORD *)v6;
      v11 = *(std::__shared_weak_count **)(v6 + 8);
      *(_QWORD *)&v18 = *(_QWORD *)v6;
      *((_QWORD *)&v18 + 1) = v11;
      if (v11)
      {
        p_shared_owners = (unint64_t *)&v11->__shared_owners_;
        do
          v14 = __ldxr(p_shared_owners);
        while (__stxr(v14 + 1, p_shared_owners));
      }
      v9[3] = &off_24C077B60;
      v9[4] = &unk_24C077BC0;
      sub_207F044CC(v7, (uint64_t)(v9 + 5));
      v10[28] = v12;
      v10[29] = v11;
      if (v11)
      {
        v15 = (unint64_t *)&v11->__shared_owners_;
        do
          v16 = __ldxr(v15);
        while (__stxr(v16 + 1, v15));
        v10[3] = &off_24C077AB8;
        v10[4] = &unk_24C077B18;
        do
          v17 = __ldaxr(v15);
        while (__stlxr(v17 - 1, v15));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
          std::__shared_weak_count::__release_weak(v11);
        }
      }
      else
      {
        v10[3] = &off_24C077AB8;
        v10[4] = &unk_24C077B18;
      }
      *a3 = v10 + 3;
      a3[1] = v10;
      return;
    case 7:
      v8 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C078D58, (const struct __class_type_info *)&unk_24C078A08, 0);
      if (!v8
        && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/include/Kit/Visualization/IData.h", 693, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
      {
        goto LABEL_37;
      }
      v5 = operator new(0x270uLL);
      v5[1] = 0;
      v5[2] = 0;
      *v5 = off_24C079628;
      sub_207E03CA0((uint64_t)(v5 + 3), (uint64_t)v8);
LABEL_16:
      *a3 = v5 + 4;
      a3[1] = v5;
      break;
    case 8:
      sub_207F06B3C(&v18, lpsrc);
      goto LABEL_23;
    case 9:
      sub_207F07438(&v18, lpsrc);
      goto LABEL_23;
    case 10:
      sub_207F075F0(&v18, lpsrc);
      goto LABEL_23;
    case 11:
      sub_207F07924(&v18, lpsrc);
      goto LABEL_23;
    case 12:
      sub_207F07C40(&v18, lpsrc);
      goto LABEL_23;
    case 13:
      sub_207F07DE4(&v18, lpsrc);
LABEL_23:
      *(_OWORD *)a3 = v18;
      break;
    default:
      *a3 = 0;
      a3[1] = 0;
      break;
  }
}

void sub_207F06AEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;
  void *v11;

  sub_207C99D78((uint64_t)&a9);
  std::__shared_weak_count::~__shared_weak_count(v9);
  operator delete(v11);
  _Unwind_Resume(a1);
}

void sub_207F06B0C(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_207F06B24(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_207F06B3C(_QWORD *a1, void *lpsrc)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char v7;
  _BYTE *v8;
  _BYTE *v9;
  size_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C078D58, (const struct __class_type_info *)&unk_24C0732B0, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 48;
  }
  else
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1067, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    v4 = 8;
    v5 = 48;
  }
  v6 = operator new(0x108uLL);
  v6[1] = 0;
  v6[2] = 0;
  *v6 = off_24C0791B8;
  v7 = *(_BYTE *)v4;
  v9 = *(_BYTE **)(v4 + 8);
  v8 = *(_BYTE **)(v4 + 16);
  v10 = v8 - v9;
  if (v8 == v9)
  {
    v12 = 0;
    v11 = 0;
  }
  else
  {
    if ((v10 & 0x8000000000000000) != 0)
      sub_207CA420C();
    v11 = (char *)operator new(v8 - v9);
    v12 = &v11[v10];
    memcpy(v11, v9, v10);
  }
  v6[3] = &off_24C076970;
  v6[4] = &unk_24C0769D0;
  sub_207F044CC(v5, (uint64_t)(v6 + 5));
  v6[30] = 0;
  *((_BYTE *)v6 + 224) = v7;
  *((_BYTE *)v6 + 232) = v7;
  v6[31] = 0;
  v6[32] = 0;
  v13 = v12 - v11;
  if (v12 != v11)
  {
    if (v13 < 0)
      sub_207CA420C();
    v14 = (char *)operator new(v12 - v11);
    v6[30] = v14;
    v15 = &v14[v13];
    v6[32] = &v14[v13];
    memcpy(v14, v11, v12 - v11);
    v6[31] = v15;
  }
  v6[3] = &off_24C0768C8;
  v6[4] = &unk_24C076928;
  if (v11)
    operator delete(v11);
  *a1 = v6 + 3;
  a1[1] = v6;
}

void sub_207F06CFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  std::__shared_weak_count *v17;
  void *v18;
  void *v20;

  if (v18)
    operator delete(v18);
  std::__shared_weak_count::~__shared_weak_count(v17);
  operator delete(v20);
  _Unwind_Resume(a1);
}

void sub_207F06D80(_QWORD *a1, void *lpsrc)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;

  v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C078D58, (const struct __class_type_info *)&unk_24C077098, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 32;
  }
  else
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1067, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    v4 = 8;
    v5 = 32;
  }
  v6 = operator new(0x100uLL);
  v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  *v6 = off_24C079268;
  v9 = *(_QWORD *)v4;
  v8 = *(std::__shared_weak_count **)(v4 + 8);
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  v6[3] = &off_24C076F10;
  v6[4] = &unk_24C076F70;
  sub_207F044CC(v5, (uint64_t)(v6 + 5));
  *((_BYTE *)v7 + 224) = *(_BYTE *)v9;
  v7[29] = *(_QWORD *)(v9 + 56);
  v7[30] = v9;
  v7[31] = v8;
  if (v8)
  {
    v12 = (unint64_t *)&v8->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v7[3] = &off_24C076E68;
    v7[4] = &unk_24C076EC8;
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  else
  {
    v7[3] = &off_24C076E68;
    v7[4] = &unk_24C076EC8;
  }
  *a1 = v7 + 3;
  a1[1] = v7;
}

void sub_207F06F00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;
  void *v11;

  sub_207C99D78((uint64_t)&a9);
  std::__shared_weak_count::~__shared_weak_count(v9);
  operator delete(v11);
  _Unwind_Resume(a1);
}

void sub_207F06F20(_QWORD *a1, void *lpsrc)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;

  v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C078D58, (const struct __class_type_info *)&unk_24C074CF0, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 32;
  }
  else
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1067, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    v4 = 8;
    v5 = 32;
  }
  v6 = operator new(0x100uLL);
  v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  *v6 = off_24C0792B8;
  v9 = *(_QWORD *)v4;
  v8 = *(std::__shared_weak_count **)(v4 + 8);
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  v6[3] = &off_24C0771B8;
  v6[4] = &unk_24C077218;
  sub_207F044CC(v5, (uint64_t)(v6 + 5));
  *((_BYTE *)v7 + 224) = *(_BYTE *)v9;
  v7[29] = *(_QWORD *)(v9 + 56) >> 1;
  v7[30] = v9;
  v7[31] = v8;
  if (v8)
  {
    v12 = (unint64_t *)&v8->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v7[3] = &off_24C077110;
    v7[4] = &unk_24C077170;
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  else
  {
    v7[3] = &off_24C077110;
    v7[4] = &unk_24C077170;
  }
  *a1 = v7 + 3;
  a1[1] = v7;
}

void sub_207F070A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;
  void *v11;

  sub_207C99D78((uint64_t)&a9);
  std::__shared_weak_count::~__shared_weak_count(v9);
  operator delete(v11);
  _Unwind_Resume(a1);
}

void sub_207F070C4(_QWORD *a1, void *lpsrc)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;

  v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C078D58, (const struct __class_type_info *)&unk_24C077518, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 32;
  }
  else
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1067, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    v4 = 8;
    v5 = 32;
  }
  v6 = operator new(0x100uLL);
  v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  *v6 = off_24C079308;
  v9 = *(_QWORD *)v4;
  v8 = *(std::__shared_weak_count **)(v4 + 8);
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  v6[3] = &off_24C077390;
  v6[4] = &unk_24C0773F0;
  sub_207F044CC(v5, (uint64_t)(v6 + 5));
  *((_BYTE *)v7 + 224) = *(_BYTE *)v9;
  v7[29] = *(_QWORD *)(v9 + 56) / 3uLL;
  v7[30] = v9;
  v7[31] = v8;
  if (v8)
  {
    v12 = (unint64_t *)&v8->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v7[3] = &off_24C0772E8;
    v7[4] = &unk_24C077348;
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  else
  {
    v7[3] = &off_24C0772E8;
    v7[4] = &unk_24C077348;
  }
  *a1 = v7 + 3;
  a1[1] = v7;
}

void sub_207F07254(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;
  void *v11;

  sub_207C99D78((uint64_t)&a9);
  std::__shared_weak_count::~__shared_weak_count(v9);
  operator delete(v11);
  _Unwind_Resume(a1);
}

void sub_207F07274(_QWORD *a1, void *lpsrc)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  _QWORD v15[2];
  std::__shared_weak_count *v16;

  v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C078D58, (const struct __class_type_info *)&unk_24C0777C0, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 32;
  }
  else
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1067, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    v4 = 8;
    v5 = 32;
  }
  v6 = operator new(0x108uLL);
  v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  *v6 = off_24C079358;
  v9 = *(_QWORD *)(v4 + 8);
  v8 = *(std::__shared_weak_count **)(v4 + 16);
  v15[0] = &off_24C084548;
  v15[1] = v9;
  v16 = v8;
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  v6[3] = &off_24C077638;
  v6[4] = &unk_24C077698;
  sub_207F044CC(v5, (uint64_t)(v6 + 5));
  sub_2080855CC((uint64_t)(v7 + 28), (uint64_t)v15);
  v7[3] = &off_24C077590;
  v7[4] = &unk_24C0775F0;
  v15[0] = &off_24C084548;
  v12 = v16;
  if (v16)
  {
    v13 = (unint64_t *)&v16->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
  *a1 = v7 + 3;
  a1[1] = v7;
}

void sub_207F073E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  void *v19;

  v18 = *(unsigned int *)(v15 + 216);
  if ((_DWORD)v18 != -1)
    ((void (*)(char *, uint64_t))off_24C079240[v18])(&a15, v16);
  *(_DWORD *)(v15 + 216) = -1;
  sub_20808CA44(&a9);
  std::__shared_weak_count::~__shared_weak_count((std::__shared_weak_count *)v15);
  operator delete(v19);
  _Unwind_Resume(a1);
}

void sub_207F07438(_QWORD *a1, void *lpsrc)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  __int128 v15;

  v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C078D58, (const struct __class_type_info *)&unk_24C078048, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 48;
  }
  else
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1067, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    v4 = 8;
    v5 = 48;
  }
  v6 = operator new(0x108uLL);
  v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  *v6 = off_24C079448;
  v9 = *(_QWORD *)v4;
  v8 = *(std::__shared_weak_count **)(v4 + 8);
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  v15 = *(_OWORD *)(v4 + 16);
  v6[3] = &off_24C077EC0;
  v6[4] = &unk_24C077F20;
  sub_207F044CC(v5, (uint64_t)(v6 + 5));
  v7[28] = v15;
  v7[29] = v9;
  v7[30] = v8;
  if (v8)
  {
    v12 = (unint64_t *)&v8->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    *(_OWORD *)(v7 + 31) = v15;
    v7[3] = &off_24C077E18;
    v7[4] = &unk_24C077E78;
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  else
  {
    *(_OWORD *)(v7 + 31) = v15;
    v7[3] = &off_24C077E18;
    v7[4] = &unk_24C077E78;
  }
  *a1 = v7 + 3;
  a1[1] = v7;
}

void sub_207F075D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;
  void *v11;

  sub_207C99D78((uint64_t)&a9);
  std::__shared_weak_count::~__shared_weak_count(v9);
  operator delete(v11);
  _Unwind_Resume(a1);
}

void sub_207F075F0(_QWORD *a1, void *lpsrc)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  char *v11;
  void *v12[2];
  uint64_t v13;
  int v14;
  __int128 v15;
  uint64_t v16;
  int v17;
  __int128 v18;
  uint64_t v19;
  __int128 __p;
  uint64_t v21;

  v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C078D58, (const struct __class_type_info *)&unk_24C078308, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 128;
  }
  else
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1067, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    v4 = 8;
    v5 = 128;
  }
  v6 = operator new(0x150uLL);
  v6[1] = 0;
  v6[2] = 0;
  *v6 = off_24C079498;
  if (*(char *)(v4 + 23) < 0)
  {
    sub_207CA40D8(v12, *(void **)v4, *(_QWORD *)(v4 + 8));
  }
  else
  {
    v7 = *(_OWORD *)v4;
    v13 = *(_QWORD *)(v4 + 16);
    *(_OWORD *)v12 = v7;
  }
  v14 = *(_DWORD *)(v4 + 24);
  if (*(char *)(v4 + 55) < 0)
  {
    sub_207CA40D8(&v15, *(void **)(v4 + 32), *(_QWORD *)(v4 + 40));
  }
  else
  {
    v8 = *(_OWORD *)(v4 + 32);
    v16 = *(_QWORD *)(v4 + 48);
    v15 = v8;
  }
  v17 = *(_DWORD *)(v4 + 56);
  if (*(char *)(v4 + 87) < 0)
  {
    sub_207CA40D8(&v18, *(void **)(v4 + 64), *(_QWORD *)(v4 + 72));
  }
  else
  {
    v9 = *(_OWORD *)(v4 + 64);
    v19 = *(_QWORD *)(v4 + 80);
    v18 = v9;
  }
  if (*(char *)(v4 + 111) < 0)
  {
    sub_207CA40D8(&__p, *(void **)(v4 + 88), *(_QWORD *)(v4 + 96));
  }
  else
  {
    v10 = *(_OWORD *)(v4 + 88);
    v21 = *(_QWORD *)(v4 + 104);
    __p = v10;
  }
  v6[3] = off_24C078168;
  v6[4] = &unk_24C0781C8;
  sub_207F044CC(v5, (uint64_t)(v6 + 5));
  sub_207F08A3C((_BYTE *)v6 + 224, (__int128 *)v12);
  v6[3] = off_24C0780C0;
  v6[4] = &unk_24C078120;
  if (SHIBYTE(v21) < 0)
  {
    operator delete((void *)__p);
    if ((SHIBYTE(v19) & 0x80000000) == 0)
    {
LABEL_19:
      v11 = (char *)(v6 + 3);
      if ((SHIBYTE(v16) & 0x80000000) == 0)
        goto LABEL_20;
LABEL_24:
      operator delete((void *)v15);
      if ((SHIBYTE(v13) & 0x80000000) == 0)
        goto LABEL_21;
      goto LABEL_25;
    }
  }
  else if ((SHIBYTE(v19) & 0x80000000) == 0)
  {
    goto LABEL_19;
  }
  operator delete((void *)v18);
  v11 = (char *)(v6 + 3);
  if (SHIBYTE(v16) < 0)
    goto LABEL_24;
LABEL_20:
  if ((SHIBYTE(v13) & 0x80000000) == 0)
  {
LABEL_21:
    *a1 = v11;
    a1[1] = v6;
    return;
  }
LABEL_25:
  operator delete(v12[0]);
  *a1 = v11;
  a1[1] = v6;
}

void sub_207F07828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  std::__shared_weak_count *v28;
  void *v30;
  void *v31;

  if (a28 < 0)
  {
    operator delete(__p);
    if ((a21 & 0x80000000) == 0)
    {
LABEL_3:
      if ((a14 & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((a21 & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(a16);
  if ((a14 & 0x80000000) == 0)
  {
LABEL_4:
    std::__shared_weak_count::~__shared_weak_count(v28);
    operator delete(v30);
    _Unwind_Resume(a1);
  }
LABEL_7:
  operator delete(a9);
  std::__shared_weak_count::~__shared_weak_count(v28);
  operator delete(v31);
  _Unwind_Resume(a1);
}

void sub_207F078B4(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;
  void *v3;

  std::__shared_weak_count::~__shared_weak_count(v1);
  operator delete(v3);
  _Unwind_Resume(a1);
}

void sub_207F078CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  void *v14;

  v13 = *(unsigned int *)(v9 + 216);
  if ((_DWORD)v13 != -1)
    ((void (*)(uint64_t, uint64_t))off_24C079240[v13])(v11 - 33, v10);
  *(_DWORD *)(v9 + 216) = -1;
  sub_207E0A7B0((uint64_t)&a9);
  std::__shared_weak_count::~__shared_weak_count((std::__shared_weak_count *)v9);
  operator delete(v14);
  _Unwind_Resume(a1);
}

void sub_207F07924(_QWORD *a1, void *lpsrc)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  void *v12;
  void *v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  __int128 __p;
  uint64_t v18;
  char v19;

  v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C078D58, (const struct __class_type_info *)&unk_24C078578, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 80;
  }
  else
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1067, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    v4 = 8;
    v5 = 80;
  }
  v6 = operator new(0x198uLL);
  v6[1] = 0;
  v6[2] = 0;
  *v6 = off_24C0794E8;
  v7 = *(_QWORD *)v4;
  v8 = operator new(0x90uLL);
  *(_BYTE *)v8 = 0;
  v8[32] = -1;
  v9 = *(unsigned int *)(v7 + 128);
  if ((_DWORD)v9 != -1)
  {
    ((void (*)(void **, _DWORD *, uint64_t))off_24C079668[v9])(&v13, v8, v7);
    v8[32] = v9;
  }
  *((_BYTE *)v8 + 136) = *(_BYTE *)(v7 + 136);
  v13 = v8;
  LOBYTE(v14) = 0;
  v16 = 0;
  if (*(_BYTE *)(v4 + 32))
  {
    if (*(char *)(v4 + 31) < 0)
    {
      sub_207CA40D8(&v14, *(void **)(v4 + 8), *(_QWORD *)(v4 + 16));
    }
    else
    {
      v10 = *(_OWORD *)(v4 + 8);
      v15 = *(_QWORD *)(v4 + 24);
      v14 = v10;
    }
    v16 = 1;
  }
  LOBYTE(__p) = 0;
  v19 = 0;
  if (*(_BYTE *)(v4 + 64))
  {
    if (*(char *)(v4 + 63) < 0)
    {
      sub_207CA40D8(&__p, *(void **)(v4 + 40), *(_QWORD *)(v4 + 48));
    }
    else
    {
      v11 = *(_OWORD *)(v4 + 40);
      v18 = *(_QWORD *)(v4 + 56);
      __p = v11;
    }
    v19 = 1;
  }
  v6[3] = &off_24C078428;
  v6[4] = &unk_24C078488;
  sub_207F044CC(v5, (uint64_t)(v6 + 5));
  sub_207F08C98((uint64_t)(v6 + 28), (uint64_t *)&v13);
  v6[3] = &off_24C078380;
  v6[4] = &unk_24C0783E0;
  if (v19 && SHIBYTE(v18) < 0)
    operator delete((void *)__p);
  if (v16 && SHIBYTE(v15) < 0)
    operator delete((void *)v14);
  v12 = v13;
  v13 = 0;
  if (v12)
    operator delete(v12);
  *a1 = v6 + 3;
  a1[1] = v6;
}

void sub_207F07B50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,char a23)
{
  std::__shared_weak_count *v23;
  void *v25;
  void *v26;

  if (a23 && a22 < 0)
    operator delete(__p);
  if (a16 && a15 < 0)
    operator delete(a10);
  if (a9)
  {
    operator delete(a9);
    std::__shared_weak_count::~__shared_weak_count(v23);
    operator delete(v25);
    _Unwind_Resume(a1);
  }
  std::__shared_weak_count::~__shared_weak_count(v23);
  operator delete(v26);
  _Unwind_Resume(a1);
}

void sub_207F07C40(_QWORD *a1, void *lpsrc)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;

  v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C078D58, (const struct __class_type_info *)&unk_24C0735E8, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 32;
  }
  else
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1067, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    v4 = 8;
    v5 = 32;
  }
  v6 = operator new(0x100uLL);
  v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  *v6 = off_24C079538;
  v9 = *(_QWORD *)v4;
  v8 = *(std::__shared_weak_count **)(v4 + 8);
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  v6[3] = &off_24C078698;
  v6[4] = &unk_24C0786F8;
  sub_207F044CC(v5, (uint64_t)(v6 + 5));
  *((_BYTE *)v7 + 224) = *(_BYTE *)v9;
  v7[29] = *(_QWORD *)(v9 + 56) >> 2;
  v7[30] = v9;
  v7[31] = v8;
  if (v8)
  {
    v12 = (unint64_t *)&v8->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v7[3] = &off_24C0785F0;
    v7[4] = &unk_24C078650;
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  else
  {
    v7[3] = &off_24C0785F0;
    v7[4] = &unk_24C078650;
  }
  *a1 = v7 + 3;
  a1[1] = v7;
}

void sub_207F07DC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;
  void *v11;

  sub_207C99D78((uint64_t)&a9);
  std::__shared_weak_count::~__shared_weak_count(v9);
  operator delete(v11);
  _Unwind_Resume(a1);
}

void sub_207F07DE4(_QWORD *a1, void *lpsrc)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  std::__shared_weak_count *v8;
  uint64_t v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t v14;

  v3 = __dynamic_cast(lpsrc, (const struct __class_type_info *)&unk_24C078D58, (const struct __class_type_info *)&unk_24C078988, 0);
  if (v3)
  {
    v4 = (uint64_t)v3 + 8;
    v5 = (uint64_t)v3 + 32;
  }
  else
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/include/Kit/Visualization/DataIO.h", 1067, (uint64_t)"ptr != nullptr", 14, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    v4 = 8;
    v5 = 32;
  }
  v6 = operator new(0x100uLL);
  v7 = v6;
  v6[1] = 0;
  v6[2] = 0;
  *v6 = off_24C079588;
  v9 = *(_QWORD *)v4;
  v8 = *(std::__shared_weak_count **)(v4 + 8);
  if (v8)
  {
    p_shared_owners = (unint64_t *)&v8->__shared_owners_;
    do
      v11 = __ldxr(p_shared_owners);
    while (__stxr(v11 + 1, p_shared_owners));
  }
  v6[3] = &off_24C078838;
  v6[4] = &unk_24C078898;
  sub_207F044CC(v5, (uint64_t)(v6 + 5));
  *((_BYTE *)v7 + 224) = *(_BYTE *)v9;
  v7[29] = *(_QWORD *)(v9 + 56) / 6uLL;
  v7[30] = v9;
  v7[31] = v8;
  if (v8)
  {
    v12 = (unint64_t *)&v8->__shared_owners_;
    do
      v13 = __ldxr(v12);
    while (__stxr(v13 + 1, v12));
    v7[3] = &off_24C078790;
    v7[4] = &unk_24C0787F0;
    do
      v14 = __ldaxr(v12);
    while (__stlxr(v14 - 1, v12));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
      std::__shared_weak_count::__release_weak(v8);
    }
  }
  else
  {
    v7[3] = &off_24C078790;
    v7[4] = &unk_24C0787F0;
  }
  *a1 = v7 + 3;
  a1[1] = v7;
}

void sub_207F07F74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::__shared_weak_count *v9;
  void *v11;

  sub_207C99D78((uint64_t)&a9);
  std::__shared_weak_count::~__shared_weak_count(v9);
  operator delete(v11);
  _Unwind_Resume(a1);
}

BOOL sub_207F07F94(uint64_t a1, int a2)
{
  return (a2 - 1) < 0xD;
}

uint64_t sub_207F07FA4(uint64_t a1, unsigned int a2)
{
  std::string *v3;
  int data;
  std::string::size_type v5;
  void *p_dst;
  uint64_t result;
  std::string::pointer v8;
  std::string::pointer v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  std::string *v13;
  uint64_t v14;
  uint64_t v15;
  std::string::size_type v16;
  _DWORD v17[6];
  int v18;
  std::string __dst;
  std::string *v20;
  std::string *v21;
  _DWORD *v22;
  std::string *v23;
  std::string *v24;
  std::string **v25;

  if (a2 - 1 < 0xD)
  {
    v18 = 0;
    v3 = (std::string *)operator new(0x118uLL);
    v3[11].__r_.__value_.__l.__size_ = 0;
    *(_OWORD *)&v3[10].__r_.__value_.__l.__data_ = 0u;
    *(_OWORD *)&v3[10].__r_.__value_.__r.__words[2] = 0u;
    *(_OWORD *)&v3[8].__r_.__value_.__r.__words[2] = 0u;
    *(_OWORD *)&v3[9].__r_.__value_.__r.__words[1] = 0u;
    *(_OWORD *)&v3[7].__r_.__value_.__r.__words[1] = 0u;
    *(_OWORD *)&v3[8].__r_.__value_.__l.__data_ = 0u;
    *(_OWORD *)&v3[6].__r_.__value_.__l.__data_ = 0u;
    *(_OWORD *)&v3[6].__r_.__value_.__r.__words[2] = 0u;
    *(_OWORD *)&v3[4].__r_.__value_.__r.__words[2] = 0u;
    *(_OWORD *)&v3[5].__r_.__value_.__r.__words[1] = 0u;
    *(_OWORD *)&v3[3].__r_.__value_.__r.__words[1] = 0u;
    *(_OWORD *)&v3[4].__r_.__value_.__l.__data_ = 0u;
    *(_OWORD *)&v3[2].__r_.__value_.__l.__data_ = 0u;
    *(_OWORD *)&v3[2].__r_.__value_.__r.__words[2] = 0u;
    *(_OWORD *)&v3->__r_.__value_.__r.__words[2] = 0u;
    *(_OWORD *)&v3[1].__r_.__value_.__r.__words[1] = 0u;
    *(_OWORD *)&v3->__r_.__value_.__l.__data_ = 0u;
    sub_207CA2878((uint64_t)v3);
    v20 = v3;
    sub_207CBAB98(&v3->__r_.__value_.__r.__words[2], (uint64_t)(&off_24C078A48)[2 * a2], (uint64_t)(&off_24C078A48)[2 * a2 + 1]);
    data = (int)v3[5].__r_.__value_.__l.__data_;
    if ((data & 0x10) != 0)
    {
      v8 = (std::string::pointer)v3[4].__r_.__value_.__r.__words[2];
      v9 = v3[3].__r_.__value_.__l.__data_;
      if (v8 < v9)
      {
        v3[4].__r_.__value_.__r.__words[2] = (std::string::size_type)v9;
        v8 = v9;
      }
      v10 = (_BYTE *)v3[2].__r_.__value_.__r.__words[2];
      v5 = v8 - v10;
      if ((unint64_t)(v8 - v10) >= 0x7FFFFFFFFFFFFFF8)
        goto LABEL_33;
    }
    else
    {
      if ((data & 8) == 0)
      {
        v5 = 0;
        *((_BYTE *)&__dst.__r_.__value_.__s + 23) = 0;
        p_dst = &__dst;
        goto LABEL_21;
      }
      v10 = (_BYTE *)v3[1].__r_.__value_.__r.__words[2];
      v5 = v3[2].__r_.__value_.__l.__size_ - (_QWORD)v10;
      if (v5 >= 0x7FFFFFFFFFFFFFF8)
LABEL_33:
        sub_207C95C50();
    }
    if (v5 >= 0x17)
    {
      v11 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
      if ((v5 | 7) != 0x17)
        v11 = v5 | 7;
      v12 = v11 + 1;
      p_dst = operator new(v11 + 1);
      __dst.__r_.__value_.__l.__size_ = v5;
      __dst.__r_.__value_.__r.__words[2] = v12 | 0x8000000000000000;
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)p_dst;
    }
    else
    {
      *((_BYTE *)&__dst.__r_.__value_.__s + 23) = v5;
      p_dst = &__dst;
      if (!v5)
        goto LABEL_21;
    }
    memmove(p_dst, v10, v5);
LABEL_21:
    *((_BYTE *)p_dst + v5) = 0;
    v13 = v20;
    if (v20)
    {
      v14 = MEMORY[0x24BEDB7F0];
      v15 = *MEMORY[0x24BEDB7F0];
      v20->__r_.__value_.__r.__words[0] = *MEMORY[0x24BEDB7F0];
      v16 = *(_QWORD *)(v14 + 72);
      *(std::string::size_type *)((char *)v13->__r_.__value_.__r.__words + *(_QWORD *)(v15 - 24)) = *(_QWORD *)(v14 + 64);
      v13[1].__r_.__value_.__r.__words[0] = MEMORY[0x24BEDB848] + 16;
      v13->__r_.__value_.__r.__words[2] = v16;
      if (v13[4].__r_.__value_.__s.__data_[15] < 0)
        operator delete((void *)v13[3].__r_.__value_.__r.__words[2]);
      std::streambuf::~streambuf();
      std::iostream::~basic_iostream();
      MEMORY[0x20BD027B8](&v13[5].__r_.__value_.__r.__words[1]);
      operator delete(v13);
    }
    v20 = (std::string *)v17;
    v21 = &__dst;
    v22 = v17;
    v23 = &__dst;
    v24 = &__dst;
    if (v18 == -1)
      sub_207CA9F48();
    v25 = &v20;
    ((void (*)(std::string ***, _DWORD *))off_24C0791F8[v18])(&v25, v17);
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__dst.__r_.__value_.__l.__data_);
    if (v18 == -1)
      sub_207CA9F48();
    v20 = &__dst;
    result = ((uint64_t (*)(std::string **, _DWORD *))off_24C079228[v18])(&v20, v17);
    if (v18 != -1)
      return ((uint64_t (*)(std::string **, _DWORD *))off_24C079210[v18])(&v20, v17);
    return result;
  }
  v18 = 0;
  sub_207F09078(v17, "unknown type id ");
  std::to_string(&__dst, a2);
  v20 = (std::string *)v17;
  v21 = &__dst;
  v22 = v17;
  v23 = &__dst;
  v24 = &__dst;
  if (v18 == -1)
    sub_207CA9F48();
  v25 = &v20;
  ((void (*)(std::string ***, _DWORD *))off_24C0791F8[v18])(&v25, v17);
  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__dst.__r_.__value_.__l.__data_);
  if (v18 == -1)
    sub_207CA9F48();
  v20 = &__dst;
  result = ((uint64_t (*)(std::string **, _DWORD *))off_24C079228[v18])(&v20, v17);
  if (v18 != -1)
    return ((uint64_t (*)(std::string **, _DWORD *))off_24C079210[v18])(&v20, v17);
  return result;
}

void sub_207F08318(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, __int16 a10, char a11, char a12, char a13, uint64_t a14, uint64_t a15, int a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  sub_207CA9EF0((uint64_t)&a13);
  _Unwind_Resume(a1);
}

void sub_207F08368(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  JUMPOUT(0x207F08358);
}

void sub_207F08380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_2082155DC((void **)va);
  JUMPOUT(0x207F0838CLL);
}

void sub_207F083BC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24C079168;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_207F083CC(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24C079168;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_207F083EC(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_207F083FC(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24C0791B8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_207F0840C(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24C0791B8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_207F0842C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  char v4;

  *(_QWORD *)(a1 + 24) = &off_24C076970;
  *(_QWORD *)(a1 + 32) = &unk_24C0769D0;
  v2 = *(void **)(a1 + 240);
  if (v2)
  {
    *(_QWORD *)(a1 + 248) = v2;
    operator delete(v2);
  }
  v3 = *(unsigned int *)(a1 + 216);
  if ((_DWORD)v3 != -1)
    ((void (*)(char *, uint64_t))off_24C0765B0[v3])(&v4, a1 + 40);
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_207F084A4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24C079268;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_207F084B4(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24C079268;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_207F084D4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)(a1 + 24) = &off_24C076F10;
  *(_QWORD *)(a1 + 32) = &unk_24C076F70;
  v2 = *(std::__shared_weak_count **)(a1 + 248);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = *(unsigned int *)(a1 + 216);
      if ((_DWORD)v5 == -1)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  v5 = *(unsigned int *)(a1 + 216);
  if ((_DWORD)v5 != -1)
LABEL_6:
    ((void (*)(char *, uint64_t))off_24C0765B0[v5])(&v6, a1 + 40);
LABEL_7:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_207F08584(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24C0792B8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_207F08594(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24C0792B8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_207F085B4(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)(a1 + 24) = &off_24C0771B8;
  *(_QWORD *)(a1 + 32) = &unk_24C077218;
  v2 = *(std::__shared_weak_count **)(a1 + 248);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = *(unsigned int *)(a1 + 216);
      if ((_DWORD)v5 == -1)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  v5 = *(unsigned int *)(a1 + 216);
  if ((_DWORD)v5 != -1)
LABEL_6:
    ((void (*)(char *, uint64_t))off_24C0765B0[v5])(&v6, a1 + 40);
LABEL_7:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_207F08664(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24C079308;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_207F08674(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24C079308;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_207F08694(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)(a1 + 24) = &off_24C077390;
  *(_QWORD *)(a1 + 32) = &unk_24C0773F0;
  v2 = *(std::__shared_weak_count **)(a1 + 248);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = *(unsigned int *)(a1 + 216);
      if ((_DWORD)v5 == -1)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  v5 = *(unsigned int *)(a1 + 216);
  if ((_DWORD)v5 != -1)
LABEL_6:
    ((void (*)(char *, uint64_t))off_24C0765B0[v5])(&v6, a1 + 40);
LABEL_7:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_207F08744(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24C079358;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_207F08754(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24C079358;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

_QWORD *sub_207F08774(_QWORD *result)
{
  _QWORD *v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  char v4;

  v1 = result;
  v2 = (uint64_t (*)(_QWORD))result[29];
  result[3] = &off_24C077638;
  result[4] = &unk_24C077698;
  if (v2)
    result = (_QWORD *)v2(0);
  v3 = *((unsigned int *)v1 + 54);
  if ((_DWORD)v3 != -1)
    result = (_QWORD *)((uint64_t (*)(char *, _QWORD *))off_24C0765B0[v3])(&v4, v1 + 5);
  *((_DWORD *)v1 + 54) = -1;
  return result;
}

void sub_207F08800(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24C0793A8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_207F08810(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24C0793A8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_207F08830(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)(a1 + 24) = &off_24C077B60;
  *(_QWORD *)(a1 + 32) = &unk_24C077BC0;
  v2 = *(std::__shared_weak_count **)(a1 + 232);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = *(unsigned int *)(a1 + 216);
      if ((_DWORD)v5 == -1)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  v5 = *(unsigned int *)(a1 + 216);
  if ((_DWORD)v5 != -1)
LABEL_6:
    ((void (*)(char *, uint64_t))off_24C0765B0[v5])(&v6, a1 + 40);
LABEL_7:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_207F088E0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24C0793F8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_207F088F0(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24C0793F8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_207F08910(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_207F08920(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24C079448;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_207F08930(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24C079448;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_207F08950(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)(a1 + 24) = &off_24C077EC0;
  *(_QWORD *)(a1 + 32) = &unk_24C077F20;
  v2 = *(std::__shared_weak_count **)(a1 + 240);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = *(unsigned int *)(a1 + 216);
      if ((_DWORD)v5 == -1)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  v5 = *(unsigned int *)(a1 + 216);
  if ((_DWORD)v5 != -1)
LABEL_6:
    ((void (*)(char *, uint64_t))off_24C0765B0[v5])(&v6, a1 + 40);
LABEL_7:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_207F08A00(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24C079498;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_207F08A10(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24C079498;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_207F08A30(uint64_t a1)
{
  return sub_207E06160(a1 + 24);
}

_BYTE *sub_207F08A3C(_BYTE *__dst, __int128 *a2)
{
  __int128 v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  _BYTE *v8;
  __int128 v9;

  if (*((char *)a2 + 23) < 0)
  {
    sub_207CA40D8(__dst, *(void **)a2, *((_QWORD *)a2 + 1));
    __dst[24] = *((_DWORD *)a2 + 6);
    v5 = __dst + 32;
    if ((*((char *)a2 + 55) & 0x80000000) == 0)
      goto LABEL_3;
  }
  else
  {
    v4 = *a2;
    *((_QWORD *)__dst + 2) = *((_QWORD *)a2 + 2);
    *(_OWORD *)__dst = v4;
    __dst[24] = *((_DWORD *)a2 + 6);
    v5 = __dst + 32;
    if ((*((char *)a2 + 55) & 0x80000000) == 0)
    {
LABEL_3:
      v6 = a2[2];
      *((_QWORD *)v5 + 2) = *((_QWORD *)a2 + 6);
      *(_OWORD *)v5 = v6;
      goto LABEL_6;
    }
  }
  sub_207CA40D8(v5, *((void **)a2 + 4), *((_QWORD *)a2 + 5));
LABEL_6:
  *((_DWORD *)__dst + 14) = *((_DWORD *)a2 + 14);
  if (*((char *)a2 + 87) < 0)
  {
    sub_207CA40D8(__dst + 64, *((void **)a2 + 8), *((_QWORD *)a2 + 9));
  }
  else
  {
    v7 = a2[4];
    *((_QWORD *)__dst + 10) = *((_QWORD *)a2 + 10);
    *((_OWORD *)__dst + 4) = v7;
  }
  v8 = __dst + 88;
  if (*((char *)a2 + 111) < 0)
  {
    sub_207CA40D8(v8, *((void **)a2 + 11), *((_QWORD *)a2 + 12));
  }
  else
  {
    v9 = *(__int128 *)((char *)a2 + 88);
    *((_QWORD *)__dst + 13) = *((_QWORD *)a2 + 13);
    *(_OWORD *)v8 = v9;
  }
  return __dst;
}

void sub_207F08B4C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void **v2;
  void **v3;

  if (*(char *)(v1 + 87) < 0)
  {
    operator delete(*v3);
    if ((*(char *)(v1 + 55) & 0x80000000) == 0)
    {
LABEL_3:
      if ((*(char *)(v1 + 23) & 0x80000000) == 0)
        goto LABEL_4;
      goto LABEL_7;
    }
  }
  else if ((*(char *)(v1 + 55) & 0x80000000) == 0)
  {
    goto LABEL_3;
  }
  operator delete(*v2);
  if ((*(char *)(v1 + 23) & 0x80000000) == 0)
LABEL_4:
    _Unwind_Resume(exception_object);
LABEL_7:
  operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

void sub_207F08BC0(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24C0794E8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_207F08BD0(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24C0794E8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_207F08BF0(uint64_t a1)
{
  uint64_t v2;
  char v3;

  *(_QWORD *)(a1 + 24) = &off_24C078428;
  *(_QWORD *)(a1 + 32) = &unk_24C078488;
  if (*(_BYTE *)(a1 + 400) && *(char *)(a1 + 399) < 0)
    operator delete(*(void **)(a1 + 376));
  if (*(_BYTE *)(a1 + 368) && *(char *)(a1 + 367) < 0)
  {
    operator delete(*(void **)(a1 + 344));
    v2 = *(unsigned int *)(a1 + 216);
    if ((_DWORD)v2 == -1)
      goto LABEL_8;
    goto LABEL_7;
  }
  v2 = *(unsigned int *)(a1 + 216);
  if ((_DWORD)v2 != -1)
LABEL_7:
    ((void (*)(char *, uint64_t))off_24C079240[v2])(&v3, a1 + 40);
LABEL_8:
  *(_DWORD *)(a1 + 216) = -1;
}

uint64_t sub_207F08C98(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  _DWORD *v5;
  uint64_t v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  void *__p;
  char v12;

  v4 = *a2;
  v5 = operator new(0x90uLL);
  *(_BYTE *)v5 = 0;
  v5[32] = -1;
  v6 = *(unsigned int *)(v4 + 128);
  if ((_DWORD)v6 != -1)
  {
    ((void (*)(char *, _DWORD *, uint64_t))off_24C079668[v6])(&v12, v5, v4);
    v5[32] = v6;
  }
  *((_BYTE *)v5 + 136) = *(_BYTE *)(v4 + 136);
  __p = v5;
  sub_207F0A744(a1 + 8, (uint64_t *)&__p);
  v7 = __p;
  __p = 0;
  if (v7)
    operator delete(v7);
  *(_BYTE *)(a1 + 120) = 0;
  *(_BYTE *)(a1 + 144) = 0;
  if (*((_BYTE *)a2 + 32))
  {
    if (*((char *)a2 + 31) < 0)
    {
      sub_207CA40D8((_BYTE *)(a1 + 120), (void *)a2[1], a2[2]);
    }
    else
    {
      v8 = *(_OWORD *)(a2 + 1);
      *(_QWORD *)(a1 + 136) = a2[3];
      *(_OWORD *)(a1 + 120) = v8;
    }
    *(_BYTE *)(a1 + 144) = 1;
  }
  *(_BYTE *)(a1 + 152) = 0;
  *(_BYTE *)(a1 + 176) = 0;
  if (*((_BYTE *)a2 + 64))
  {
    if (*((char *)a2 + 63) < 0)
    {
      sub_207CA40D8((_BYTE *)(a1 + 152), (void *)a2[5], a2[6]);
    }
    else
    {
      v9 = *(_OWORD *)(a2 + 5);
      *(_QWORD *)(a1 + 168) = a2[7];
      *(_OWORD *)(a1 + 152) = v9;
    }
    *(_BYTE *)(a1 + 176) = 1;
  }
  return a1;
}

void sub_207F08DD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p)
{
  char *v9;
  void **v10;
  void **v11;

  if (v9[176] && v9[175] < 0)
    operator delete(*v11);
  if (v9[144])
  {
    if (v9[143] < 0)
      operator delete(*v10);
  }
  _Unwind_Resume(exception_object);
}

void sub_207F08E38(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24C079538;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_207F08E48(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24C079538;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_207F08E68(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)(a1 + 24) = &off_24C078698;
  *(_QWORD *)(a1 + 32) = &unk_24C0786F8;
  v2 = *(std::__shared_weak_count **)(a1 + 248);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = *(unsigned int *)(a1 + 216);
      if ((_DWORD)v5 == -1)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  v5 = *(unsigned int *)(a1 + 216);
  if ((_DWORD)v5 != -1)
LABEL_6:
    ((void (*)(char *, uint64_t))off_24C0765B0[v5])(&v6, a1 + 40);
LABEL_7:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_207F08F18(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24C079588;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_207F08F28(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24C079588;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_207F08F48(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)(a1 + 24) = &off_24C078838;
  *(_QWORD *)(a1 + 32) = &unk_24C078898;
  v2 = *(std::__shared_weak_count **)(a1 + 248);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      v5 = *(unsigned int *)(a1 + 216);
      if ((_DWORD)v5 == -1)
        goto LABEL_7;
      goto LABEL_6;
    }
  }
  v5 = *(unsigned int *)(a1 + 216);
  if ((_DWORD)v5 != -1)
LABEL_6:
    ((void (*)(char *, uint64_t))off_24C0765B0[v5])(&v6, a1 + 40);
LABEL_7:
  *(_DWORD *)(a1 + 216) = -1;
}

void sub_207F08FF8(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24C0795D8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_207F09008(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24C0795D8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_207F09028(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_207F09038(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24C079628;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_207F09048(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24C079628;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_207F09068(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

_DWORD *sub_207F09078(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C079210[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_207C95C50();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_207F09168(uint64_t a1)
{
  sub_208213930(a1);
}

void **sub_207F09174(void **a1)
{
  void *v2;

  v2 = *a1;
  *a1 = 0;
  if (v2)
    operator delete(v2);
  return a1;
}

_QWORD *sub_207F091A4(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  size_t v8;
  void **p_dst;
  unint64_t v10;
  unint64_t v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  uint64_t v20;
  _QWORD *v21;
  __int128 *v22;
  __int128 v23;
  void **v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  void *__p[2];
  unsigned __int8 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 *v49;
  int v50;
  void **__dst;
  size_t v52;
  int64_t v53;
  __int128 *v54;

  v4 = sub_207CBAB98(a1, (uint64_t)"{", 1);
  v5 = *(char *)(*a2 + 136);
  v50 = 0;
  v6 = operator new(0x118uLL);
  v6[34] = 0;
  *((_OWORD *)v6 + 15) = 0u;
  *((_OWORD *)v6 + 16) = 0u;
  *((_OWORD *)v6 + 13) = 0u;
  *((_OWORD *)v6 + 14) = 0u;
  *((_OWORD *)v6 + 11) = 0u;
  *((_OWORD *)v6 + 12) = 0u;
  *((_OWORD *)v6 + 9) = 0u;
  *((_OWORD *)v6 + 10) = 0u;
  *((_OWORD *)v6 + 7) = 0u;
  *((_OWORD *)v6 + 8) = 0u;
  *((_OWORD *)v6 + 5) = 0u;
  *((_OWORD *)v6 + 6) = 0u;
  *((_OWORD *)v6 + 3) = 0u;
  *((_OWORD *)v6 + 4) = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((_OWORD *)v6 + 2) = 0u;
  *(_OWORD *)v6 = 0u;
  sub_207CA2878((uint64_t)v6);
  *(_QWORD *)&v40 = v6;
  sub_207CBAB98(v6 + 2, (uint64_t)off_24C0796D0[v5 - 1], qword_20823D9D8[(char)(v5 - 1)]);
  v7 = *((_DWORD *)v6 + 30);
  if ((v7 & 0x10) != 0)
  {
    v10 = v6[14];
    v11 = v6[9];
    if (v10 < v11)
    {
      v6[14] = v11;
      v10 = v11;
    }
    v12 = (const void *)v6[8];
    v8 = v10 - (_QWORD)v12;
    if (v10 - (unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_41;
  }
  else
  {
    if ((v7 & 8) == 0)
    {
      v8 = 0;
      HIBYTE(v53) = 0;
      p_dst = (void **)&__dst;
      goto LABEL_14;
    }
    v12 = (const void *)v6[5];
    v8 = v6[7] - (_QWORD)v12;
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
LABEL_41:
      sub_207C95C50();
  }
  if (v8 >= 0x17)
  {
    v13 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v13 = v8 | 7;
    v14 = v13 + 1;
    p_dst = (void **)operator new(v13 + 1);
    v52 = v8;
    v53 = v14 | 0x8000000000000000;
    __dst = p_dst;
    goto LABEL_13;
  }
  HIBYTE(v53) = v8;
  p_dst = (void **)&__dst;
  if (v8)
LABEL_13:
    memmove(p_dst, v12, v8);
LABEL_14:
  *((_BYTE *)p_dst + v8) = 0;
  v15 = v40;
  if ((_QWORD)v40)
  {
    v16 = MEMORY[0x24BEDB7F0];
    v17 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v40 = *MEMORY[0x24BEDB7F0];
    v18 = *(_QWORD *)(v16 + 72);
    *(_QWORD *)(v15 + *(_QWORD *)(v17 - 24)) = *(_QWORD *)(v16 + 64);
    *(_QWORD *)(v15 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v15 + 16) = v18;
    if (*(char *)(v15 + 111) < 0)
      operator delete(*(void **)(v15 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD027B8](v15 + 128);
    operator delete((void *)v15);
  }
  *(_QWORD *)&v40 = &v48;
  *((_QWORD *)&v40 + 1) = &__dst;
  *(_QWORD *)&v41 = &v48;
  *((_QWORD *)&v41 + 1) = &__dst;
  *(_QWORD *)&v42 = &__dst;
  if (v50 == -1)
    sub_207CA9F48();
  v54 = &v40;
  ((void (*)(__int128 **, __int128 *))off_24C0796A0[v50])(&v54, &v48);
  if (SHIBYTE(v53) < 0)
    operator delete(__dst);
  if (v50 == -1)
    sub_207CA9F48();
  *(_QWORD *)&v40 = &__dst;
  ((void (*)(void **__return_ptr, __int128 *, __int128 *))off_24C0796B8[v50])(__p, &v40, &v48);
  if (v50 != -1)
    ((void (*)(__int128 *, __int128 *))off_24C079688[v50])(&v40, &v48);
  if ((v39 & 0x80u) == 0)
    v19 = __p;
  else
    v19 = (void **)__p[0];
  if ((v39 & 0x80u) == 0)
    v20 = v39;
  else
    v20 = (uint64_t)__p[1];
  v21 = sub_207CBAB98(v4, (uint64_t)v19, v20);
  sub_207CBAB98(v21, (uint64_t)",\n", 2);
  if ((char)v39 < 0)
    operator delete(__p[0]);
  v22 = (__int128 *)*a2;
  switch(*(_BYTE *)(*a2 + 136))
  {
    case 1:
      if (*((_DWORD *)v22 + 32) != 2)
        goto LABEL_68;
      v23 = *v22;
      v49 = (__int128 *)*((_QWORD *)v22 + 2);
      v48 = v23;
      *(_QWORD *)&v40 = 0x100000006;
      DWORD2(v40) = 6;
      *(_QWORD *)&v41 = &v48;
      DWORD2(v41) = 0;
      sub_2081FC68C((unsigned int *)&v40, &__dst);
      if (v53 >= 0)
        v24 = (void **)&__dst;
      else
        v24 = __dst;
      if (v53 >= 0)
        v25 = HIBYTE(v53);
      else
        v25 = v52;
      goto LABEL_63;
    case 2:
      if (*((_DWORD *)v22 + 32) != 3)
        goto LABEL_68;
      v29 = *v22;
      v30 = v22[2];
      v41 = v22[1];
      v42 = v30;
      v40 = v29;
      *(_QWORD *)&v48 = 0x100000006;
      DWORD2(v48) = 6;
      v49 = &v40;
      v50 = 0;
      sub_2081FCCD8((unsigned int *)&v48, &__dst);
      if (v53 >= 0)
        v24 = (void **)&__dst;
      else
        v24 = __dst;
      if (v53 >= 0)
        v25 = HIBYTE(v53);
      else
        v25 = v52;
      goto LABEL_63;
    case 4:
      if (*((_DWORD *)v22 + 32))
        goto LABEL_68;
      v26 = *v22;
      v27 = v22[1];
      v28 = v22[3];
      v42 = v22[2];
      v43 = v28;
      v40 = v26;
      v41 = v27;
      *(_QWORD *)&v48 = 0x400000004;
      DWORD2(v48) = 4;
      v49 = &v40;
      v50 = 0;
      sub_2081FC68C((unsigned int *)&v48, &__dst);
      if (v53 >= 0)
        v24 = (void **)&__dst;
      else
        v24 = __dst;
      if (v53 >= 0)
        v25 = HIBYTE(v53);
      else
        v25 = v52;
      goto LABEL_63;
    case 5:
      if (*((_DWORD *)v22 + 32) != 1)
LABEL_68:
        sub_207CA9F48();
      v31 = *v22;
      v32 = v22[1];
      v33 = v22[3];
      v42 = v22[2];
      v43 = v33;
      v40 = v31;
      v41 = v32;
      v34 = v22[4];
      v35 = v22[5];
      v36 = v22[6];
      v47 = v22[7];
      v45 = v35;
      v46 = v36;
      v44 = v34;
      *(_QWORD *)&v48 = 0x400000004;
      DWORD2(v48) = 4;
      v49 = &v40;
      v50 = 0;
      sub_2081FCCD8((unsigned int *)&v48, &__dst);
      if (v53 >= 0)
        v24 = (void **)&__dst;
      else
        v24 = __dst;
      if (v53 >= 0)
        v25 = HIBYTE(v53);
      else
        v25 = v52;
LABEL_63:
      sub_207CBAB98(a1, (uint64_t)v24, v25);
      if (SHIBYTE(v53) < 0)
        operator delete(__dst);
      break;
    default:
      return sub_207CBAB98(a1, (uint64_t)"}", 1);
  }
  return sub_207CBAB98(a1, (uint64_t)"}", 1);
}

void sub_207F096C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  uint64_t v15;

  if (*(char *)(v15 - 73) < 0)
    operator delete(*(void **)(v15 - 96));
  _Unwind_Resume(exception_object);
}

void sub_207F09720(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_207CA9EF0(v1 - 128);
  _Unwind_Resume(a1);
}

void sub_207F09734(_Unwind_Exception *a1)
{
  uint64_t v1;

  if (*(char *)(v1 - 73) < 0)
    JUMPOUT(0x207F09744);
  sub_207CA9EF0(v1 - 128);
  _Unwind_Resume(a1);
}

void sub_207F09758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  sub_2082155DC((void **)va);
  JUMPOUT(0x207F09764);
}

uint64_t sub_207F09774(uint64_t a1)
{
  unsigned __int8 v2;
  uint64_t v3;
  _DWORD *v4;
  uint64_t v5;
  _OWORD *v7;
  char v8;

  v2 = atomic_load((unsigned __int8 *)&qword_253E513E0);
  if ((v2 & 1) == 0 && __cxa_guard_acquire(&qword_253E513E0))
  {
    v7 = operator new(0x90uLL);
    v7[1] = 0u;
    v7[2] = 0u;
    *v7 = 0u;
    *((_DWORD *)v7 + 32) = 3;
    *((_BYTE *)v7 + 136) = 2;
    qword_253E513D8 = (uint64_t)v7;
    __cxa_atexit((void (*)(void *))sub_207F09174, &qword_253E513D8, &dword_207C77000);
    __cxa_guard_release(&qword_253E513E0);
  }
  v3 = qword_253E513D8;
  v4 = operator new(0x90uLL);
  *(_BYTE *)v4 = 0;
  v4[32] = -1;
  v5 = *(unsigned int *)(v3 + 128);
  if ((_DWORD)v5 != -1)
  {
    ((void (*)(char *, _DWORD *, uint64_t))off_24C079668[v5])(&v8, v4, v3);
    v4[32] = v5;
  }
  *((_BYTE *)v4 + 136) = *(_BYTE *)(v3 + 136);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 32) = 0;
  *(_BYTE *)(a1 + 40) = 0;
  *(_BYTE *)(a1 + 64) = 0;
  return a1;
}

void sub_207F09880(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_253E513E0);
  _Unwind_Resume(a1);
}

void sub_207F09898(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_207F098AC(const void **a1, uint64_t *a2)
{
  float *v2;
  uint64_t v3;
  int v4;
  int v6;
  int v7;
  int v9;
  uint64_t result;
  uint64_t v13;
  const void *v14;
  uint64_t v15;
  int v16;
  const void **v17;
  unsigned __int8 *v18;
  uint64_t v19;
  const void *v20;
  uint64_t v21;
  int v22;
  const void **v23;
  unsigned __int8 *v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  int v29;
  BOOL v31;
  float *v32[3];

  v2 = (float *)*a1;
  v3 = *a2;
  v4 = *((unsigned __int8 *)*a1 + 136);
  v6 = v4 != 5 && v4 != 2;
  v7 = *(unsigned __int8 *)(v3 + 136);
  v9 = v7 == 5 || v7 == 2;
  if (v6 == v9)
    return 0;
  if (((v4 & 0xFE) != 4) != ((v7 & 0xFE) == 4))
  {
    result = 0;
    switch(v4)
    {
      case 1:
        if (*((_DWORD *)v2 + 32) != 2 || *(_DWORD *)(v3 + 128) != 2)
          goto LABEL_99;
        if (*v2 != *(float *)v3
          || v2[1] != *(float *)(v3 + 4)
          || v2[2] != *(float *)(v3 + 8)
          || v2[3] != *(float *)(v3 + 12)
          || v2[4] != *(float *)(v3 + 16)
          || v2[5] != *(float *)(v3 + 20))
        {
          return 0;
        }
        goto LABEL_39;
      case 2:
        if (*((_DWORD *)v2 + 32) != 3 || *(_DWORD *)(v3 + 128) != 3)
          goto LABEL_99;
        if (*(double *)v2 != *(double *)v3
          || *((double *)v2 + 1) != *(double *)(v3 + 8)
          || *((double *)v2 + 2) != *(double *)(v3 + 16)
          || *((double *)v2 + 3) != *(double *)(v3 + 24)
          || *((double *)v2 + 4) != *(double *)(v3 + 32)
          || *((double *)v2 + 5) != *(double *)(v3 + 40))
        {
          return 0;
        }
        goto LABEL_39;
      case 4:
        if (*((_DWORD *)v2 + 32) || *(_DWORD *)(v3 + 128))
          goto LABEL_99;
        v32[0] = v2;
        v32[1] = (float *)v3;
        result = sub_207DCAD50(v32);
        if ((_DWORD)result)
          goto LABEL_39;
        return result;
      case 5:
        if (*((_DWORD *)v2 + 32) != 1 || *(_DWORD *)(v3 + 128) != 1)
LABEL_99:
          sub_207CA9F48();
        if (*(double *)v2 != *(double *)v3
          || *((double *)v2 + 1) != *(double *)(v3 + 8)
          || *((double *)v2 + 2) != *(double *)(v3 + 16)
          || *((double *)v2 + 3) != *(double *)(v3 + 24)
          || *((double *)v2 + 4) != *(double *)(v3 + 32)
          || *((double *)v2 + 5) != *(double *)(v3 + 40)
          || *((double *)v2 + 6) != *(double *)(v3 + 48)
          || *((double *)v2 + 7) != *(double *)(v3 + 56)
          || *((double *)v2 + 8) != *(double *)(v3 + 64)
          || *((double *)v2 + 9) != *(double *)(v3 + 72)
          || *((double *)v2 + 10) != *(double *)(v3 + 80)
          || *((double *)v2 + 11) != *(double *)(v3 + 88)
          || *((double *)v2 + 12) != *(double *)(v3 + 96)
          || *((double *)v2 + 13) != *(double *)(v3 + 104)
          || *((double *)v2 + 14) != *(double *)(v3 + 112)
          || *((double *)v2 + 15) != *(double *)(v3 + 120))
        {
          return 0;
        }
LABEL_39:
        if (*((_BYTE *)a1 + 32) && *((_BYTE *)a2 + 32))
        {
          v13 = *((unsigned __int8 *)a1 + 31);
          if ((v13 & 0x80u) == 0)
            v14 = (const void *)*((unsigned __int8 *)a1 + 31);
          else
            v14 = a1[2];
          v15 = *((unsigned __int8 *)a2 + 31);
          v16 = (char)v15;
          if ((v15 & 0x80u) != 0)
            v15 = a2[2];
          if (v14 != (const void *)v15)
            return 0;
          v17 = a1 + 1;
          if (v16 >= 0)
            v18 = (unsigned __int8 *)(a2 + 1);
          else
            v18 = (unsigned __int8 *)a2[1];
          if ((v13 & 0x80) != 0)
          {
            if (memcmp(*v17, v18, (size_t)a1[2]))
              return 0;
          }
          else if (*((_BYTE *)a1 + 31))
          {
            do
            {
              if (*(unsigned __int8 *)v17 != *v18)
                return 0;
              v17 = (const void **)((char *)v17 + 1);
              ++v18;
              --v13;
            }
            while (v13);
          }
        }
        else if ((*((_BYTE *)a1 + 32) != 0) != (*((_BYTE *)a2 + 32) != 0))
        {
          return 0;
        }
        result = (*((_BYTE *)a1 + 64) != 0) == (*((_BYTE *)a2 + 64) != 0);
        if (!*((_BYTE *)a1 + 64) || !*((_BYTE *)a2 + 64))
          return result;
        v19 = *((unsigned __int8 *)a1 + 63);
        if ((v19 & 0x80u) == 0)
          v20 = (const void *)*((unsigned __int8 *)a1 + 63);
        else
          v20 = a1[6];
        v21 = *((unsigned __int8 *)a2 + 63);
        v22 = (char)v21;
        if ((v21 & 0x80u) != 0)
          v21 = a2[6];
        if (v20 == (const void *)v21)
        {
          v23 = a1 + 5;
          if (v22 >= 0)
            v24 = (unsigned __int8 *)(a2 + 5);
          else
            v24 = (unsigned __int8 *)a2[5];
          if ((v19 & 0x80) != 0)
            return memcmp(*v23, v24, (size_t)a1[6]) == 0;
          if (!*((_BYTE *)a1 + 63))
            return 1;
          v25 = v19 - 1;
          do
          {
            v27 = *(unsigned __int8 *)v23;
            v23 = (const void **)((char *)v23 + 1);
            v26 = v27;
            v29 = *v24++;
            v28 = v29;
            v31 = v25-- != 0;
            result = v26 == v28;
          }
          while (v26 == v28 && v31);
          return result;
        }
        break;
      default:
        return result;
    }
  }
  return 0;
}

_QWORD *sub_207F09D10(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _DWORD *v20;
  uint64_t v21;
  _DWORD *v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;

  sub_207CBAB98(a1, (uint64_t)"Transform3{src: ", 16);
  if (*((_BYTE *)a2 + 32))
  {
    v24 = 34;
    v4 = sub_207CBAB98(a1, (uint64_t)&v24, 1);
    v5 = *((char *)a2 + 31);
    if (v5 >= 0)
      v6 = (uint64_t)(a2 + 1);
    else
      v6 = a2[1];
    if (v5 >= 0)
      v7 = *((unsigned __int8 *)a2 + 31);
    else
      v7 = a2[2];
    v8 = sub_207CBAB98(v4, v6, v7);
    v25 = 34;
    v9 = &v25;
    v10 = 1;
  }
  else
  {
    v9 = "world";
    v8 = a1;
    v10 = 5;
  }
  sub_207CBAB98(v8, (uint64_t)v9, v10);
  sub_207CBAB98(a1, (uint64_t)", dst: ", 7);
  if (*((_BYTE *)a2 + 64))
  {
    v26 = 34;
    v11 = sub_207CBAB98(a1, (uint64_t)&v26, 1);
    v12 = *((char *)a2 + 63);
    if (v12 >= 0)
      v13 = (uint64_t)(a2 + 5);
    else
      v13 = a2[5];
    if (v12 >= 0)
      v14 = *((unsigned __int8 *)a2 + 63);
    else
      v14 = a2[6];
    v15 = sub_207CBAB98(v11, v13, v14);
    v27 = 34;
    v16 = &v27;
    v17 = 1;
  }
  else
  {
    v16 = "world";
    v15 = a1;
    v17 = 5;
  }
  sub_207CBAB98(v15, (uint64_t)v16, v17);
  v18 = sub_207CBAB98(a1, (uint64_t)", transform:", 12);
  v19 = *a2;
  v20 = operator new(0x90uLL);
  *(_BYTE *)v20 = 0;
  v20[32] = -1;
  v21 = *(unsigned int *)(v19 + 128);
  if ((_DWORD)v21 != -1)
  {
    ((void (*)(char *, _DWORD *, uint64_t))off_24C079668[v21])(&v28, v20, v19);
    v20[32] = v21;
  }
  *((_BYTE *)v20 + 136) = *(_BYTE *)(v19 + 136);
  v23 = v20;
  sub_207F091A4(v18, (uint64_t *)&v23);
  operator delete(v20);
  return sub_207CBAB98(a1, (uint64_t)"}", 1);
}

void sub_207F09ED0(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_207F09EE4(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

__n128 sub_207F09EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;
  __int128 v5;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 16);
  v5 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(a2 + 48) = v5;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v4;
  return result;
}

__n128 sub_207F09F0C(uint64_t a1, uint64_t a2, __int128 *a3)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v3 = *a3;
  v4 = a3[1];
  v5 = a3[3];
  *(_OWORD *)(a2 + 32) = a3[2];
  *(_OWORD *)(a2 + 48) = v5;
  *(_OWORD *)a2 = v3;
  *(_OWORD *)(a2 + 16) = v4;
  result = (__n128)a3[4];
  v7 = a3[5];
  v8 = a3[7];
  *(_OWORD *)(a2 + 96) = a3[6];
  *(_OWORD *)(a2 + 112) = v8;
  *(__n128 *)(a2 + 64) = result;
  *(_OWORD *)(a2 + 80) = v7;
  return result;
}

__n128 sub_207F09F30(uint64_t a1, __n128 *a2, __n128 *a3)
{
  __n128 result;

  result = *a3;
  a2[1].n128_u64[0] = a3[1].n128_u64[0];
  *a2 = result;
  return result;
}

__n128 sub_207F09F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __n128 result;
  __int128 v4;

  result = *(__n128 *)a3;
  v4 = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a2 + 32) = v4;
  *(__n128 *)a2 = result;
  return result;
}

_DWORD *sub_207F09F58(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C079688[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_207C95C50();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

_DWORD *sub_207F0A048(_DWORD ***a1)
{
  return sub_207F0A064(**a1, (char *)(*a1)[1]);
}

void sub_207F0A054(uint64_t a1, uint64_t a2)
{
  sub_207F0A154((uint64_t *)(*(_QWORD *)a1 + 16), a2);
}

_DWORD *sub_207F0A064(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C079688[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_207C95C50();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_207F0A154(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  const char *v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  _BYTE v14[15];
  char v15;
  void *__p[2];
  unint64_t v17;
  _QWORD v18[3];

  v18[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_QWORD *)((char *)v18 + 7) = *(_QWORD *)(a2 + 15);
  v3 = *(void **)a2;
  v18[0] = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v13 = v3;
  *(_QWORD *)v14 = v18[0];
  *(_QWORD *)&v14[7] = *(_QWORD *)((char *)v18 + 7);
  v15 = v4;
  memset(v18, 0, 15);
  v5 = __p;
  v6 = (const char *)a1[1];
  v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_207C95C50();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v5 = operator new(v10 + 1);
    __p[1] = v8;
    v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((_BYTE *)v8 + (_QWORD)v5) = 0;
    v9 = *(unsigned int *)(v2 + 24);
    if ((_DWORD)v9 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v9 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v9 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24C079688[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_207CAA110((_QWORD *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0)
    goto LABEL_15;
}

void sub_207F0A308(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

char *sub_207F0A34C(uint64_t a1, uint64_t a2)
{
  const char *v3;
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *result;
  uint64_t v9;
  uint64_t v10;

  v3 = *(const char **)(*(_QWORD *)a1 + 32);
  v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_207F0A444((void **)a2, v3);
    *(_QWORD *)(a2 + 8) = result;
    return result;
  }
  v5 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_207C95C50();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v9 = v5 | 7;
    v10 = v9 + 1;
    v7 = operator new(v9 + 1);
    *((_QWORD *)v4 + 1) = v6;
    *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
    *(_QWORD *)v4 = v7;
  }
  else
  {
    v4[23] = v5;
    v7 = v4;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  result = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_207F0A43C(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_207F0A444(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  void **v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_207CA420C();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_207CA3AB8();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_207C95C50();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (void **)*a1;
      v14 = (void **)a1[1];
      if (v14 == *a1)
        goto LABEL_26;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (void **)*a1;
  v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 3);
    *((_QWORD *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  v14 = (void **)*a1;
  v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0)
      operator delete(*(v19 - 3));
    v19 -= 3;
  }
LABEL_27:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_207F0A640(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_207CA4610((uint64_t)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_207F0A654(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C079688[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_207C95C50();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

double sub_207F0A744(uint64_t a1, uint64_t *a2)
{
  __int128 v2;
  __int128 *v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_BYTE *)a1 = *(_BYTE *)(*a2 + 136);
  *(_QWORD *)&v2 = 0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_DWORD *)(a1 + 104) = 0;
  v3 = (__int128 *)*a2;
  switch(*(_BYTE *)(*a2 + 136))
  {
    case 1:
      if (*((_DWORD *)v3 + 32) != 2)
        goto LABEL_10;
      *(_DWORD *)(a1 + 104) = 2;
      v2 = *v3;
      v4 = *((_QWORD *)v3 + 2);
      *(_OWORD *)(a1 + 8) = *v3;
      *(_QWORD *)(a1 + 24) = v4;
      break;
    case 2:
      if (*((_DWORD *)v3 + 32) != 3)
        goto LABEL_10;
      *(_DWORD *)(a1 + 104) = 3;
      v2 = *v3;
      v16 = v3[1];
      v17 = v3[2];
      *(_OWORD *)(a1 + 8) = *v3;
      *(_OWORD *)(a1 + 24) = v16;
      *(_OWORD *)(a1 + 40) = v17;
      break;
    case 4:
      if (*((_DWORD *)v3 + 32))
        goto LABEL_10;
      LODWORD(v2) = *(_DWORD *)v3;
      v5 = *((_DWORD *)v3 + 1);
      v6 = *((_DWORD *)v3 + 4);
      v7 = *((_DWORD *)v3 + 5);
      v8 = *((_DWORD *)v3 + 8);
      v9 = *((_DWORD *)v3 + 9);
      v10 = *((_DWORD *)v3 + 12);
      v11 = *((_DWORD *)v3 + 13);
      v12 = *((_DWORD *)v3 + 2);
      v13 = *((_DWORD *)v3 + 6);
      v14 = *((_DWORD *)v3 + 10);
      v15 = *((_DWORD *)v3 + 14);
      *(_DWORD *)(a1 + 8) = *(_DWORD *)v3;
      *(_DWORD *)(a1 + 12) = v6;
      *(_DWORD *)(a1 + 16) = v8;
      *(_DWORD *)(a1 + 20) = v10;
      *(_DWORD *)(a1 + 24) = v5;
      *(_DWORD *)(a1 + 28) = v7;
      *(_DWORD *)(a1 + 32) = v9;
      *(_DWORD *)(a1 + 36) = v11;
      *(_DWORD *)(a1 + 40) = v12;
      *(_DWORD *)(a1 + 44) = v13;
      *(_DWORD *)(a1 + 48) = v14;
      *(_DWORD *)(a1 + 52) = v15;
      break;
    case 5:
      if (*((_DWORD *)v3 + 32) != 1)
LABEL_10:
        sub_207CA9F48();
      *(_QWORD *)&v2 = *(_QWORD *)v3;
      v18 = *((_QWORD *)v3 + 1);
      v19 = *((_QWORD *)v3 + 4);
      v20 = *((_QWORD *)v3 + 5);
      v21 = *((_QWORD *)v3 + 8);
      v22 = *((_QWORD *)v3 + 9);
      v23 = *((_QWORD *)v3 + 12);
      v24 = *((_QWORD *)v3 + 13);
      v25 = *((_QWORD *)v3 + 2);
      v26 = *((_QWORD *)v3 + 6);
      v27 = *((_QWORD *)v3 + 10);
      v28 = *((_QWORD *)v3 + 14);
      *(_QWORD *)(a1 + 8) = *(_QWORD *)v3;
      *(_QWORD *)(a1 + 16) = v19;
      *(_DWORD *)(a1 + 104) = 1;
      *(_QWORD *)(a1 + 24) = v21;
      *(_QWORD *)(a1 + 32) = v23;
      *(_QWORD *)(a1 + 40) = v18;
      *(_QWORD *)(a1 + 48) = v20;
      *(_QWORD *)(a1 + 56) = v22;
      *(_QWORD *)(a1 + 64) = v24;
      *(_QWORD *)(a1 + 72) = v25;
      *(_QWORD *)(a1 + 80) = v26;
      *(_QWORD *)(a1 + 88) = v27;
      *(_QWORD *)(a1 + 96) = v28;
      break;
    default:
      return *(double *)&v2;
  }
  return *(double *)&v2;
}

uint64_t *sub_207F0A88C(uint64_t *a1, _BYTE *a2)
{
  unsigned __int8 v4;
  uint64_t v5;
  int v6;
  void *v7;
  void **v8;
  size_t v9;
  uint64_t *v10;
  int v11;
  const void *v12;
  size_t v13;
  size_t v14;
  int v15;
  int v16;
  const void *v17;
  size_t v18;
  size_t v19;
  int v20;
  std::logic_error *exception;
  std::string v23;
  std::string v24;
  void *v25;
  size_t v26;
  uint64_t v27;

  v4 = atomic_load((unsigned __int8 *)&qword_253E513E8);
  if ((v4 & 1) == 0 && __cxa_guard_acquire(&qword_253E513E8))
  {
    sub_207F0AB2C();
    __cxa_atexit((void (*)(void *))sub_207F0B1A4, &qword_253E513F0, &dword_207C77000);
    __cxa_guard_release(&qword_253E513E8);
  }
  v25 = 0;
  v26 = 0;
  v27 = 0;
  sub_207EFCDF4(a1, (uint64_t)&v25);
  v5 = qword_253E513F8;
  if (!qword_253E513F8)
    goto LABEL_41;
  v6 = SHIBYTE(v27);
  v7 = v25;
  if (v27 >= 0)
    v8 = &v25;
  else
    v8 = (void **)v25;
  if (v27 >= 0)
    v9 = HIBYTE(v27);
  else
    v9 = v26;
  v10 = &qword_253E513F8;
  do
  {
    while (1)
    {
      v11 = *(char *)(v5 + 55);
      v12 = v11 >= 0 ? (const void *)(v5 + 32) : *(const void **)(v5 + 32);
      v13 = v11 >= 0 ? *(unsigned __int8 *)(v5 + 55) : *(_QWORD *)(v5 + 40);
      v14 = v9 >= v13 ? v13 : v9;
      v15 = memcmp(v12, v8, v14);
      if (v15)
        break;
      if (v13 >= v9)
        goto LABEL_24;
LABEL_10:
      v5 = *(_QWORD *)(v5 + 8);
      if (!v5)
        goto LABEL_25;
    }
    if (v15 < 0)
      goto LABEL_10;
LABEL_24:
    v10 = (uint64_t *)v5;
    v5 = *(_QWORD *)v5;
  }
  while (v5);
LABEL_25:
  if (v10 == &qword_253E513F8)
    goto LABEL_41;
  v16 = *((char *)v10 + 55);
  if (v16 >= 0)
    v17 = v10 + 4;
  else
    v17 = (const void *)v10[4];
  if (v16 >= 0)
    v18 = *((unsigned __int8 *)v10 + 55);
  else
    v18 = v10[5];
  if (v18 >= v9)
    v19 = v9;
  else
    v19 = v18;
  v20 = memcmp(v8, v17, v19);
  if (v20)
  {
    if ((v20 & 0x80000000) == 0)
      goto LABEL_37;
LABEL_41:
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::operator+<char>();
    sub_207C96E30(", expected [Algebra|Affine][F|D]", &v23, &v24);
    std::logic_error::logic_error(exception, &v24);
    exception->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8D0] + 16);
    __cxa_throw(exception, (struct type_info *)off_24C06DDC0, MEMORY[0x24BEDAB88]);
  }
  if (v9 < v18)
    goto LABEL_41;
LABEL_37:
  *a2 = *((_BYTE *)v10 + 56);
  if (v6 < 0)
    operator delete(v7);
  return a1;
}

void sub_207F0AA9C(_Unwind_Exception *a1)
{
  __cxa_guard_abort(&qword_253E513E8);
  _Unwind_Resume(a1);
}

void sub_207F0AAB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  void *v27;
  int v28;

  if (a21 < 0)
    operator delete(__p);
  if (a15 < 0)
  {
    operator delete(a10);
    if ((v28 & 1) == 0)
    {
LABEL_8:
      if (a27 < 0)
        operator delete(a22);
      _Unwind_Resume(a1);
    }
  }
  else if (!v28)
  {
    goto LABEL_8;
  }
  __cxa_free_exception(v27);
  goto LABEL_8;
}

void sub_207F0AB2C()
{
  uint64_t v0;
  uint64_t **v1;
  char *v2;
  int v3;
  size_t v4;
  void **v5;
  unint64_t v6;
  unint64_t v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  size_t v12;
  int v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t *v18;
  BOOL v19;
  int v20;
  const void *v21;
  size_t v22;
  const void *v23;
  size_t v24;
  size_t v25;
  int v26;
  uint64_t *v27;
  size_t v28;
  size_t v29;
  const void *v30;
  size_t v31;
  size_t v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  void *v40;
  _BYTE v41[15];
  unsigned __int8 v42;
  _BYTE v43[24];
  int v44;
  void *__dst[2];
  unint64_t v46;
  _QWORD v47[5];
  _QWORD *v48;
  _QWORD v49[4];

  v0 = 0;
  v49[2] = *MEMORY[0x24BDAC8D0];
  v39 = 84148737;
  qword_253E51400 = 0;
  qword_253E513F8 = 0;
  qword_253E513F0 = (uint64_t)&qword_253E513F8;
  v38 = *MEMORY[0x24BEDB7F0];
  v35 = MEMORY[0x24BEDB848] + 16;
  v36 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 64);
  v37 = *(_QWORD *)(MEMORY[0x24BEDB7F0] + 72);
  v1 = (uint64_t **)&unk_253E51000;
  do
  {
    while (1)
    {
      v44 = 0;
      v2 = (char *)operator new(0x118uLL);
      *((_QWORD *)v2 + 34) = 0;
      *((_OWORD *)v2 + 15) = 0u;
      *((_OWORD *)v2 + 16) = 0u;
      *((_OWORD *)v2 + 13) = 0u;
      *((_OWORD *)v2 + 14) = 0u;
      *((_OWORD *)v2 + 11) = 0u;
      *((_OWORD *)v2 + 12) = 0u;
      *((_OWORD *)v2 + 9) = 0u;
      *((_OWORD *)v2 + 10) = 0u;
      *((_OWORD *)v2 + 7) = 0u;
      *((_OWORD *)v2 + 8) = 0u;
      *((_OWORD *)v2 + 5) = 0u;
      *((_OWORD *)v2 + 6) = 0u;
      *((_OWORD *)v2 + 3) = 0u;
      *((_OWORD *)v2 + 4) = 0u;
      *((_OWORD *)v2 + 1) = 0u;
      *((_OWORD *)v2 + 2) = 0u;
      *(_OWORD *)v2 = 0u;
      sub_207CA2878((uint64_t)v2);
      sub_207CBAB98((_QWORD *)v2 + 2, (uint64_t)off_24C079778[*((char *)&v39 + v0) - 1], qword_20823DA10[(char)(*((_BYTE *)&v39 + v0) - 1)]);
      v3 = *((_DWORD *)v2 + 30);
      if ((v3 & 0x10) != 0)
      {
        v6 = *((_QWORD *)v2 + 14);
        v7 = *((_QWORD *)v2 + 9);
        if (v6 < v7)
        {
          *((_QWORD *)v2 + 14) = v7;
          v6 = v7;
        }
        v8 = (const void *)*((_QWORD *)v2 + 8);
        v4 = v6 - (_QWORD)v8;
        if (v6 - (unint64_t)v8 >= 0x7FFFFFFFFFFFFFF8)
LABEL_83:
          sub_207C95C50();
      }
      else
      {
        if ((v3 & 8) == 0)
        {
          v4 = 0;
          HIBYTE(v46) = 0;
          v5 = __dst;
          goto LABEL_18;
        }
        v8 = (const void *)*((_QWORD *)v2 + 5);
        v4 = *((_QWORD *)v2 + 7) - (_QWORD)v8;
        if (v4 >= 0x7FFFFFFFFFFFFFF8)
          goto LABEL_83;
      }
      if (v4 >= 0x17)
      {
        v9 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
        if ((v4 | 7) != 0x17)
          v9 = v4 | 7;
        v10 = v9 + 1;
        v5 = (void **)operator new(v9 + 1);
        __dst[1] = (void *)v4;
        v46 = v10 | 0x8000000000000000;
        __dst[0] = v5;
LABEL_17:
        memmove(v5, v8, v4);
        goto LABEL_18;
      }
      HIBYTE(v46) = v4;
      v5 = __dst;
      if (v4)
        goto LABEL_17;
LABEL_18:
      *((_BYTE *)v5 + v4) = 0;
      *(_QWORD *)v2 = v38;
      *(_QWORD *)&v2[*(_QWORD *)(v38 - 24)] = v36;
      *((_QWORD *)v2 + 3) = v35;
      *((_QWORD *)v2 + 2) = v37;
      if (v2[111] < 0)
        operator delete(*((void **)v2 + 11));
      std::streambuf::~streambuf();
      std::iostream::~basic_iostream();
      MEMORY[0x20BD027B8](v2 + 128);
      operator delete(v2);
      v47[0] = v43;
      v47[1] = __dst;
      v47[2] = v43;
      v47[3] = __dst;
      v47[4] = __dst;
      if (v44 == -1)
        sub_207CA9F48();
      v48 = v47;
      ((void (*)(_QWORD **, _BYTE *))off_24C079718[v44])(&v48, v43);
      if (SHIBYTE(v46) < 0)
        operator delete(__dst[0]);
      if (v44 == -1)
        sub_207CA9F48();
      v47[0] = __dst;
      ((void (*)(void **__return_ptr, _QWORD *, _BYTE *))off_24C079748[v44])(&v40, v47, v43);
      if (v44 != -1)
        ((void (*)(_QWORD *, _BYTE *))off_24C079730[v44])(v47, v43);
      v11 = v40;
      v49[0] = *(_QWORD *)v41;
      *(_QWORD *)((char *)v49 + 7) = *(_QWORD *)&v41[7];
      v12 = v42;
      v13 = (char)v42;
      v14 = operator new(0x40uLL);
      v14[4] = v11;
      v14[5] = v49[0];
      *(_QWORD *)((char *)v14 + 47) = *(_QWORD *)((char *)v49 + 7);
      *((_BYTE *)v14 + 55) = v13;
      v49[0] = 0;
      *(_QWORD *)((char *)v49 + 7) = 0;
      *((_BYTE *)v14 + 56) = *((_BYTE *)&v39 + v0);
      v16 = &qword_253E513F8;
      v15 = qword_253E513F8;
      if (v1[126] == &qword_253E513F8)
        goto LABEL_72;
      v17 = qword_253E513F8;
      if (qword_253E513F8)
      {
        do
        {
          v16 = (uint64_t *)v17;
          v17 = *(_QWORD *)(v17 + 8);
        }
        while (v17);
      }
      else
      {
        v18 = &qword_253E513F8;
        do
        {
          v16 = (uint64_t *)v18[2];
          v19 = *v16 == (_QWORD)v18;
          v18 = v16;
        }
        while (v19);
      }
      v20 = *((char *)v16 + 55);
      if (v20 >= 0)
        v21 = v16 + 4;
      else
        v21 = (const void *)v16[4];
      if (v20 >= 0)
        v22 = *((unsigned __int8 *)v16 + 55);
      else
        v22 = v16[5];
      if (v13 >= 0)
        v23 = v14 + 4;
      else
        v23 = v11;
      if (v13 >= 0)
        v24 = v12;
      else
        v24 = v14[5];
      if (v24 >= v22)
        v25 = v22;
      else
        v25 = v24;
      v26 = memcmp(v21, v23, v25);
      if (!v26)
      {
        if (v22 < v24)
          goto LABEL_72;
LABEL_49:
        if (!v15)
        {
LABEL_76:
          v16 = &qword_253E513F8;
          v27 = &qword_253E513F8;
          goto LABEL_77;
        }
        while (1)
        {
          v16 = (uint64_t *)v15;
          v28 = *(unsigned __int8 *)(v15 + 55);
          v29 = *(_QWORD *)(v15 + 40);
          if ((v28 & 0x80u) == 0)
            v30 = (const void *)(v15 + 32);
          else
            v30 = *(const void **)(v15 + 32);
          if ((v28 & 0x80u) == 0)
            v31 = v28;
          else
            v31 = v29;
          if (v31 >= v24)
            v32 = v24;
          else
            v32 = v31;
          v33 = memcmp(v23, v30, v32);
          if (v33)
          {
            if (v33 < 0)
              goto LABEL_51;
          }
          else if (v24 < v31)
          {
LABEL_51:
            v15 = *v16;
            v27 = v16;
            if (!*v16)
              goto LABEL_77;
            continue;
          }
          v34 = memcmp(v30, v23, v32);
          if (v34)
          {
            if ((v34 & 0x80000000) == 0)
              goto LABEL_74;
          }
          else if (v31 >= v24)
          {
            goto LABEL_74;
          }
          v15 = v16[1];
          if (!v15)
          {
            v27 = v16 + 1;
            goto LABEL_77;
          }
        }
      }
      if ((v26 & 0x80000000) == 0)
        goto LABEL_49;
LABEL_72:
      if (!v15)
        goto LABEL_76;
      v27 = v16 + 1;
      if (v16[1])
        break;
LABEL_77:
      *v14 = 0;
      v14[1] = 0;
      v14[2] = v16;
      *v27 = (uint64_t)v14;
      v1 = (uint64_t **)&unk_253E51000;
      if (*(_QWORD *)qword_253E513F0)
      {
        qword_253E513F0 = *(_QWORD *)qword_253E513F0;
        v14 = (_QWORD *)*v27;
      }
      sub_207CC24B4((uint64_t *)qword_253E513F8, v14);
      ++qword_253E51400;
      if (++v0 == 4)
        return;
    }
LABEL_74:
    if (v13 < 0)
      operator delete(v11);
    operator delete(v14);
    v1 = (uint64_t **)&unk_253E51000;
    ++v0;
  }
  while (v0 != 4);
}

void sub_207F0B098(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,int a22,uint64_t a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

uint64_t sub_207F0B1A4(uint64_t a1)
{
  sub_207DC9BDC(*(char **)(a1 + 8));
  return a1;
}

void sub_207F0B1CC(uint64_t a1)
{
  __asm { BR              X10 }
}

void sub_207F0B214(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, __int128 a9, __int128 a10, __int128 a11, __int128 a12, __int128 a13, __int128 a14, __int128 a15, __int128 a16, __int128 __dst, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  char *v45;
  _DWORD *v46;
  uint64_t v47;
  int v48;
  __int128 v49;
  uint64_t v50;
  char v51;

  if (*(_DWORD *)(v38 + 112) != 2)
    sub_207CA9F48();
  v41 = *(_QWORD *)(v38 + 16);
  v42 = *(_DWORD *)(v38 + 24);
  v43 = *(_QWORD *)(v38 + 28);
  v44 = *(_DWORD *)(v38 + 36);
  v45 = (char *)operator new(0x90uLL);
  *((_DWORD *)v45 + 2) = v42;
  *(_QWORD *)v45 = v41;
  *((_DWORD *)v45 + 5) = v44;
  *(_QWORD *)(v45 + 12) = v43;
  *((_DWORD *)v45 + 32) = 2;
  v45[136] = v39;
  *(_BYTE *)(v40 - 128) = 0;
  *(_BYTE *)(v40 - 104) = 0;
  if (*(_BYTE *)(v38 + 144))
  {
    if (*(char *)(v38 + 143) < 0)
    {
      sub_207CA40D8((_BYTE *)(v40 - 128), *(void **)(v38 + 120), *(_QWORD *)(v38 + 128));
    }
    else
    {
      *(_OWORD *)(v40 - 128) = *(_OWORD *)(v38 + 120);
      *(_QWORD *)(v40 - 112) = *(_QWORD *)(v38 + 136);
    }
    *(_BYTE *)(v40 - 104) = 1;
  }
  LOBYTE(v49) = 0;
  v51 = 0;
  if (*(_BYTE *)(v38 + 176))
  {
    if (*(char *)(v38 + 175) < 0)
    {
      sub_207CA40D8(&v49, *(void **)(v38 + 152), *(_QWORD *)(v38 + 160));
    }
    else
    {
      v49 = *(_OWORD *)(v38 + 152);
      v50 = *(_QWORD *)(v38 + 168);
    }
    v51 = 1;
  }
  v46 = operator new(0x90uLL);
  *(_BYTE *)v46 = 0;
  v46[32] = -1;
  v47 = *((unsigned int *)v45 + 32);
  if ((_DWORD)v47 != -1)
  {
    ((void (*)(uint64_t, _DWORD *, char *))off_24C079668[v47])(v40 - 81, v46, v45);
    v46[32] = v47;
  }
  *((_BYTE *)v46 + 136) = v45[136];
  *(_QWORD *)v37 = v46;
  *(_BYTE *)(v37 + 8) = 0;
  *(_BYTE *)(v37 + 32) = 0;
  v48 = *(unsigned __int8 *)(v40 - 104);
  if (*(_BYTE *)(v40 - 104))
  {
    *(_OWORD *)(v37 + 8) = *(_OWORD *)(v40 - 128);
    *(_QWORD *)(v37 + 24) = *(_QWORD *)(v40 - 112);
    *(_QWORD *)(v40 - 120) = 0;
    *(_QWORD *)(v40 - 112) = 0;
    *(_QWORD *)(v40 - 128) = 0;
    *(_BYTE *)(v37 + 32) = 1;
  }
  *(_BYTE *)(v37 + 40) = 0;
  *(_BYTE *)(v37 + 64) = 0;
  if (v51)
  {
    *(_OWORD *)(v37 + 40) = v49;
    *(_QWORD *)(v37 + 56) = v50;
    v50 = 0;
    v49 = 0uLL;
    *(_BYTE *)(v37 + 64) = 1;
  }
  if (v48 && *(char *)(v40 - 105) < 0)
    operator delete(*(void **)(v40 - 128));
  operator delete(v45);
}

void sub_207F0B5C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *__p,uint64_t a26,int a27,__int16 a28,char a29,char a30,char a31)
{
  void *v31;
  uint64_t v32;

  if (a31 && a30 < 0)
    operator delete(__p);
  if (*(_BYTE *)(v32 - 104))
  {
    if (*(char *)(v32 - 105) < 0)
      operator delete(*(void **)(v32 - 128));
  }
  operator delete(v31);
  _Unwind_Resume(a1);
}

uint64_t sub_207F0B62C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t result;
  unsigned __int8 *v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned __int8 *v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  BOOL v16;
  unsigned __int8 *v17[2];
  unsigned __int8 *v18;
  unsigned __int8 *v19[2];
  unsigned __int8 *v20;
  char v21;

  v19[0] = a1 + 8;
  v19[1] = a1 + 120;
  v20 = a1 + 152;
  v17[0] = a2 + 8;
  v17[1] = a2 + 120;
  v18 = a2 + 152;
  result = sub_207F0BA2C((uint64_t)&v21, v19, v17);
  if ((_DWORD)result)
  {
    v3 = v20;
    if (v20[24])
      v4 = v18[24] == 0;
    else
      v4 = 1;
    if (v4)
    {
      return (v20[24] != 0) == (v18[24] != 0);
    }
    else
    {
      v5 = v20[23];
      if ((v5 & 0x80u) == 0)
        v6 = v20[23];
      else
        v6 = *((_QWORD *)v20 + 1);
      v7 = v18[23];
      v8 = (char)v7;
      if ((v7 & 0x80u) != 0)
        v7 = *((_QWORD *)v18 + 1);
      if (v6 == v7)
      {
        if (v8 >= 0)
          v9 = v18;
        else
          v9 = *(unsigned __int8 **)v18;
        if ((v5 & 0x80) != 0)
        {
          return memcmp(*(const void **)v20, v9, *((_QWORD *)v20 + 1)) == 0;
        }
        else if (v20[23])
        {
          v10 = v5 - 1;
          do
          {
            v12 = *v3++;
            v11 = v12;
            v14 = *v9++;
            v13 = v14;
            v16 = v10-- != 0;
            result = v11 == v13;
          }
          while (v11 == v13 && v16);
        }
        else
        {
          return 1;
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

BOOL sub_207F0B75C(uint64_t a1, float *a2, float *a3)
{
  _BOOL8 result;
  float v4;
  float v5;
  float v6;
  float v7;
  float v8;
  float v9;
  float v10;
  float v11;
  float v12;
  float v13;
  float v14;
  float v15;
  float v16;
  float v17;
  float v18;
  float v19;

  result = *a2 == *a3;
  if (*a2 == *a3)
  {
    v4 = a2[1];
    v5 = a3[1];
    result = v4 == v5;
    if (v4 == v5)
    {
      v6 = a2[2];
      v7 = a3[2];
      result = v6 == v7;
      if (v6 == v7)
        result = a2[3] == a3[3];
    }
  }
  if (result)
  {
    v8 = a2[4];
    v9 = a3[4];
    result = v8 == v9;
    if (v8 == v9)
    {
      v10 = a2[5];
      v11 = a3[5];
      result = v10 == v11;
      if (v10 == v11)
      {
        v12 = a2[6];
        v13 = a3[6];
        result = v12 == v13;
        if (v12 == v13)
          result = a2[7] == a3[7];
      }
    }
    if (result)
    {
      v14 = a2[8];
      v15 = a3[8];
      result = v14 == v15;
      if (v14 == v15)
      {
        v16 = a2[9];
        v17 = a3[9];
        result = v16 == v17;
        if (v16 == v17)
        {
          v18 = a2[10];
          v19 = a3[10];
          result = v18 == v19;
          if (v18 == v19)
            return a2[11] == a3[11];
        }
      }
    }
  }
  return result;
}

BOOL sub_207F0B84C(uint64_t a1, double *a2, double *a3)
{
  _BOOL8 result;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;

  result = *a2 == *a3;
  if (*a2 == *a3)
  {
    v4 = a2[1];
    v5 = a3[1];
    result = v4 == v5;
    if (v4 == v5)
    {
      v6 = a2[2];
      v7 = a3[2];
      result = v6 == v7;
      if (v6 == v7)
        result = a2[3] == a3[3];
    }
  }
  if (result)
  {
    v8 = a2[4];
    v9 = a3[4];
    result = v8 == v9;
    if (v8 == v9)
    {
      v10 = a2[5];
      v11 = a3[5];
      result = v10 == v11;
      if (v10 == v11)
      {
        v12 = a2[6];
        v13 = a3[6];
        result = v12 == v13;
        if (v12 == v13)
          result = a2[7] == a3[7];
      }
    }
    if (result)
    {
      v14 = a2[8];
      v15 = a3[8];
      result = v14 == v15;
      if (v14 == v15)
      {
        v16 = a2[9];
        v17 = a3[9];
        result = v16 == v17;
        if (v16 == v17)
        {
          v18 = a2[10];
          v19 = a3[10];
          result = v18 == v19;
          if (v18 == v19)
            return a2[11] == a3[11];
        }
      }
    }
  }
  return result;
}

BOOL sub_207F0B93C(uint64_t a1, float *a2, float *a3)
{
  _BOOL8 result;
  float v4;
  float v5;
  float v6;
  float v7;
  float v8;
  float v9;

  result = *a2 == *a3;
  if (*a2 == *a3)
  {
    v4 = a2[1];
    v5 = a3[1];
    result = v4 == v5;
    if (v4 == v5)
      result = a2[2] == a3[2];
  }
  if (result)
  {
    v6 = a2[3];
    v7 = a3[3];
    result = v6 == v7;
    if (v6 == v7)
    {
      v8 = a2[4];
      v9 = a3[4];
      result = v8 == v9;
      if (v8 == v9)
        return a2[5] == a3[5];
    }
  }
  return result;
}

BOOL sub_207F0B9B4(uint64_t a1, double *a2, double *a3)
{
  _BOOL8 result;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;

  result = *a2 == *a3;
  if (*a2 == *a3)
  {
    v4 = a2[1];
    v5 = a3[1];
    result = v4 == v5;
    if (v4 == v5)
      result = a2[2] == a3[2];
  }
  if (result)
  {
    v6 = a2[3];
    v7 = a3[3];
    result = v6 == v7;
    if (v6 == v7)
    {
      v8 = a2[4];
      v9 = a3[4];
      result = v8 == v9;
      if (v8 == v9)
        return a2[5] == a3[5];
    }
  }
  return result;
}

uint64_t sub_207F0BA2C(uint64_t a1, unsigned __int8 **a2, unsigned __int8 **a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  int v8;
  _BOOL4 v10;
  _BOOL4 v12;
  uint64_t result;
  unsigned __int8 *v14;
  unsigned __int8 *v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  unsigned __int8 *v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  int v26;
  BOOL v28;
  char v29;
  char *v30;

  v3 = (uint64_t)*a2;
  v4 = (uint64_t)*a3;
  if (**a2 != **a3)
    return 0;
  v7 = *(unsigned int *)(v3 + 104);
  v8 = *(_DWORD *)(v4 + 104);
  v10 = v8 == (_DWORD)v7 && v8 != -1;
  if ((_DWORD)v7 != -1 && v10)
  {
    v30 = &v29;
    if ((((uint64_t (*)(char **, uint64_t, uint64_t))off_24C0796F8[v7])(&v30, v3 + 8, v4 + 8) & 1) != 0)
      goto LABEL_19;
    return 0;
  }
  v12 = v8 == -1;
  if ((_DWORD)v7 != -1)
    v12 = v10;
  if (!v12)
    return 0;
LABEL_19:
  v14 = a2[1];
  v15 = a3[1];
  if (v14[24])
    v16 = v15[24] == 0;
  else
    v16 = 1;
  if (v16)
    return (v14[24] != 0) == (v15[24] != 0);
  v17 = v14[23];
  if ((v17 & 0x80u) == 0)
    v18 = v14[23];
  else
    v18 = *((_QWORD *)v14 + 1);
  v19 = v15[23];
  v20 = (char)v19;
  if ((v19 & 0x80u) != 0)
    v19 = *((_QWORD *)v15 + 1);
  if (v18 != v19)
    return 0;
  if (v20 >= 0)
    v21 = a3[1];
  else
    v21 = *(unsigned __int8 **)v15;
  if ((v17 & 0x80) != 0)
    return memcmp(*(const void **)v14, v21, *((_QWORD *)v14 + 1)) == 0;
  if (!v14[23])
    return 1;
  v22 = v17 - 1;
  do
  {
    v24 = *v14++;
    v23 = v24;
    v26 = *v21++;
    v25 = v26;
    v28 = v22-- != 0;
    result = v23 == v25;
  }
  while (v23 == v25 && v28);
  return result;
}

uint64_t sub_207F0BBC8(uint64_t a1, uint64_t a2, double *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  const char *v13;
  const char *v14;
  uint64_t *v15;

  v10 = a2;
  v11 = "{";
  v12 = a2;
  v13 = "{";
  v14 = "{";
  v3 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v3 == -1)
    goto LABEL_6;
  v15 = &v10;
  ((void (*)(uint64_t **))off_24C079760[v3])(&v15);
  sub_207DF6804((uint64_t)&v10, a2, a3);
  v10 = a2;
  v11 = ",";
  v12 = a2;
  v13 = ",";
  v14 = ",";
  v6 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v6 == -1)
    goto LABEL_6;
  v15 = &v10;
  ((void (*)(uint64_t **, uint64_t))off_24C079760[v6])(&v15, a2);
  sub_207DF6804((uint64_t)&v10, a2, a3 + 1);
  v10 = a2;
  v11 = ",";
  v12 = a2;
  v13 = ",";
  v14 = ",";
  v7 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v7 == -1)
    goto LABEL_6;
  v15 = &v10;
  ((void (*)(uint64_t **, uint64_t))off_24C079760[v7])(&v15, a2);
  sub_207DF6804((uint64_t)&v10, a2, a3 + 2);
  v10 = a2;
  v11 = "}";
  v12 = a2;
  v13 = "}";
  v14 = "}";
  v8 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v8 == -1)
LABEL_6:
    sub_207CA9F48();
  v15 = &v10;
  return ((uint64_t (*)(uint64_t **, uint64_t))off_24C079760[v8])(&v15, a2);
}

uint64_t sub_207F0BD18(float ***a1, float ***a2)
{
  float **v2;
  float **v3;
  float *v4;
  float *v5;
  float *v6;
  float *v7;
  float *v8;
  float *v9;
  float *v10;
  float *v11;
  float *v12;
  float *v13;
  float *v14;
  char *v15;
  float *v16;
  float *v17;
  char *v18;
  float *v20;
  float *v21;
  float *v22;
  float *v23;
  float *v24;
  float **v25;
  float *v26;
  float **v27;
  float *v28;
  size_t v29;
  float *v30;
  float *v31;
  size_t v32;
  float *v33;
  float *v34;
  float *v35;
  float *v36;
  uint64_t result;
  uint64_t v38;
  float *v39;
  char v40;
  float *v41;
  const void **v42;
  float *v43;
  uint64_t v44;
  int v45;
  int v46;
  int v47;
  int v48;
  BOOL v50;
  float **v51;
  float **v52;

  v2 = *a1;
  v3 = *a2;
  v5 = **a1;
  v4 = (*a1)[1];
  v6 = **a2;
  if ((char *)v4 - (char *)v5 != (char *)(*a2)[1] - (char *)v6)
    return 0;
  if (v5 != v4)
  {
    while (*v5 == *v6 && v5[1] == v6[1] && v5[2] == v6[2])
    {
      v5 += 3;
      v6 += 3;
      if (v5 == v4)
        goto LABEL_7;
    }
    return 0;
  }
LABEL_7:
  v8 = v2[4];
  v7 = v2[5];
  v9 = v3[4];
  if ((char *)v7 - (char *)v8 != (char *)v3[5] - (char *)v9)
    return 0;
  if (v8 != v7)
  {
    while (*v8 == *v9 && v8[1] == v9[1] && v8[2] == v9[2])
    {
      v8 += 3;
      v9 += 3;
      if (v8 == v7)
        goto LABEL_13;
    }
    return 0;
  }
LABEL_13:
  if (*((_DWORD *)v2 + 16) != *((_DWORD *)v3 + 16))
    return 0;
  v11 = v2[9];
  v10 = v2[10];
  v12 = v3[9];
  if ((char *)v10 - (char *)v11 != (char *)v3[10] - (char *)v12)
    return 0;
  if (v11 != v10)
  {
    while (*v11 == *v12 && v11[1] == v12[1] && v11[2] == v12[2])
    {
      v11 += 3;
      v12 += 3;
      if (v11 == v10)
        goto LABEL_20;
    }
    return 0;
  }
LABEL_20:
  if (*((_DWORD *)v2 + 26) != *((_DWORD *)v3 + 26))
    return 0;
  v14 = v2[14];
  v13 = v2[15];
  v15 = (char *)v3[14];
  if ((char *)v13 - (char *)v14 != (char *)v3[15] - v15)
    return 0;
  if (v14 != v13)
  {
    while (*(_DWORD *)v14 == *(_DWORD *)v15
         && *((_DWORD *)v14 + 1) == *((_DWORD *)v15 + 1)
         && *((_DWORD *)v14 + 2) == *((_DWORD *)v15 + 2))
    {
      v14 += 3;
      v15 += 12;
      if (v14 == v13)
        goto LABEL_27;
    }
    return 0;
  }
LABEL_27:
  v17 = v2[18];
  v16 = v2[19];
  v18 = (char *)v3[18];
  if ((char *)v16 - (char *)v17 != (char *)v3[19] - v18)
    return 0;
  if (v17 != v16)
  {
    while (*(_DWORD *)v17 == *(_DWORD *)v18 && *((_DWORD *)v17 + 1) == *((_DWORD *)v18 + 1))
    {
      v17 += 2;
      v18 += 8;
      if (v17 == v16)
        goto LABEL_35;
    }
    return 0;
  }
LABEL_35:
  v21 = v2[22];
  v20 = v2[23];
  v22 = v3[22];
  if ((char *)v20 - (char *)v21 != (char *)v3[23] - (char *)v22)
    return 0;
  if (v21 != v20)
  {
    while (*v21 == *v22 && v21[1] == v22[1])
    {
      v21 += 2;
      v22 += 2;
      if (v21 == v20)
        goto LABEL_40;
    }
    return 0;
  }
LABEL_40:
  v51 = *a2;
  v52 = *a1;
  v25 = v2 + 26;
  v23 = v2[26];
  v24 = v25[1];
  v27 = v3 + 26;
  v26 = v3[26];
  if ((char *)v24 - (char *)v23 != (char *)v27[1] - (char *)v26)
    return 0;
  if (v23 != v24)
  {
    while (*(_DWORD *)v23 == *(_DWORD *)v26
         && *((_DWORD *)v23 + 1) == *((_DWORD *)v26 + 1)
         && *((_DWORD *)v23 + 2) == *((_DWORD *)v26 + 2))
    {
      v23 += 3;
      v26 += 3;
      if (v23 == v24)
        goto LABEL_46;
    }
    return 0;
  }
LABEL_46:
  v28 = v52[30];
  v29 = (char *)v52[31] - (char *)v28;
  v30 = v51[30];
  if (v29 != (char *)v51[31] - (char *)v30)
    return 0;
  if (memcmp(v28, v30, v29))
    return 0;
  if (*((_DWORD *)v52 + 68) != *((_DWORD *)v51 + 68))
    return 0;
  v31 = v52[35];
  v32 = (char *)v52[36] - (char *)v31;
  v33 = v51[35];
  if (v32 != (char *)v51[36] - (char *)v33)
    return 0;
  if (memcmp(v31, v33, v32))
    return 0;
  if (*((_DWORD *)v52 + 78) != *((_DWORD *)v51 + 78))
    return 0;
  v35 = v52[40];
  v34 = v52[41];
  v36 = v51[40];
  if ((char *)v34 - (char *)v35 != (char *)v51[41] - (char *)v36)
    return 0;
  if (v35 != v34)
  {
    while (*v35 == *v36)
    {
      ++v35;
      ++v36;
      if (v35 == v34)
        goto LABEL_56;
    }
    return 0;
  }
LABEL_56:
  if (*((_DWORD *)v52 + 88) != *((_DWORD *)v51 + 88))
    return 0;
  if (*((_BYTE *)v52 + 380) && *((_BYTE *)v51 + 380))
  {
    if (*((float *)v52 + 89) != *((float *)v51 + 89)
      || *((float *)v52 + 90) != *((float *)v51 + 90)
      || *((float *)v52 + 91) != *((float *)v51 + 91)
      || *((float *)v52 + 92) != *((float *)v51 + 92)
      || *((float *)v52 + 93) != *((float *)v51 + 93)
      || *((float *)v52 + 94) != *((float *)v51 + 94))
    {
      return 0;
    }
    goto LABEL_69;
  }
  if ((*((_BYTE *)v52 + 380) != 0) != (*((_BYTE *)v51 + 380) != 0))
    return 0;
LABEL_69:
  result = (*((_BYTE *)v52 + 408) != 0) == (*((_BYTE *)v51 + 408) != 0);
  if (*((_BYTE *)v52 + 408) && *((_BYTE *)v51 + 408))
  {
    v38 = *((unsigned __int8 *)v52 + 407);
    if ((v38 & 0x80u) == 0)
      v39 = (float *)*((unsigned __int8 *)v52 + 407);
    else
      v39 = v52[49];
    v40 = *((_BYTE *)v51 + 407);
    v41 = v51[49];
    if (v40 >= 0)
      v41 = (float *)*((unsigned __int8 *)v51 + 407);
    if (v39 != v41)
      return 0;
    v42 = (const void **)(v52 + 48);
    if (v40 >= 0)
      v43 = (float *)(v51 + 48);
    else
      v43 = v51[48];
    if ((v38 & 0x80) != 0)
    {
      return memcmp(*v42, v43, (size_t)v52[49]) == 0;
    }
    else if (*((_BYTE *)v52 + 407))
    {
      v44 = v38 - 1;
      do
      {
        v46 = *(unsigned __int8 *)v42;
        v42 = (const void **)((char *)v42 + 1);
        v45 = v46;
        v48 = *(unsigned __int8 *)v43;
        v43 = (float *)((char *)v43 + 1);
        v47 = v48;
        v50 = v44-- != 0;
        result = v45 == v47;
      }
      while (v45 == v47 && v50);
    }
    else
    {
      return 1;
    }
  }
  return result;
}

_QWORD *sub_207F0C258(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  int v7;
  size_t v8;
  void **v9;
  unint64_t v10;
  unint64_t v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  const char *v25;
  const char *v26;
  uint64_t v27;
  _QWORD *v28;
  void *__p[2];
  unsigned __int8 v31;
  _BYTE v32[24];
  int v33;
  void *__dst[2];
  unint64_t v35;
  _QWORD v36[5];
  _QWORD *v37;

  v4 = sub_207CBAB98(a1, (uint64_t)"{", 1);
  v5 = *a2;
  v33 = 0;
  v6 = operator new(0x118uLL);
  v6[34] = 0;
  *((_OWORD *)v6 + 15) = 0u;
  *((_OWORD *)v6 + 16) = 0u;
  *((_OWORD *)v6 + 13) = 0u;
  *((_OWORD *)v6 + 14) = 0u;
  *((_OWORD *)v6 + 11) = 0u;
  *((_OWORD *)v6 + 12) = 0u;
  *((_OWORD *)v6 + 9) = 0u;
  *((_OWORD *)v6 + 10) = 0u;
  *((_OWORD *)v6 + 7) = 0u;
  *((_OWORD *)v6 + 8) = 0u;
  *((_OWORD *)v6 + 5) = 0u;
  *((_OWORD *)v6 + 6) = 0u;
  *((_OWORD *)v6 + 3) = 0u;
  *((_OWORD *)v6 + 4) = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((_OWORD *)v6 + 2) = 0u;
  *(_OWORD *)v6 = 0u;
  sub_207CA2878((uint64_t)v6);
  v36[0] = v6;
  sub_20806EC9C(v6 + 2, v5);
  v7 = *((_DWORD *)v6 + 30);
  if ((v7 & 0x10) != 0)
  {
    v10 = v6[14];
    v11 = v6[9];
    if (v10 < v11)
    {
      v6[14] = v11;
      v10 = v11;
    }
    v12 = (const void *)v6[8];
    v8 = v10 - (_QWORD)v12;
    if (v10 - (unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_42;
  }
  else
  {
    if ((v7 & 8) == 0)
    {
      v8 = 0;
      HIBYTE(v35) = 0;
      v9 = __dst;
      goto LABEL_14;
    }
    v12 = (const void *)v6[5];
    v8 = v6[7] - (_QWORD)v12;
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
LABEL_42:
      sub_207C95C50();
  }
  if (v8 >= 0x17)
  {
    v13 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v13 = v8 | 7;
    v14 = v13 + 1;
    v9 = (void **)operator new(v13 + 1);
    __dst[1] = (void *)v8;
    v35 = v14 | 0x8000000000000000;
    __dst[0] = v9;
    goto LABEL_13;
  }
  HIBYTE(v35) = v8;
  v9 = __dst;
  if (v8)
LABEL_13:
    memmove(v9, v12, v8);
LABEL_14:
  *((_BYTE *)v9 + v8) = 0;
  v15 = v36[0];
  if (v36[0])
  {
    v16 = MEMORY[0x24BEDB7F0];
    v17 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v36[0] = *MEMORY[0x24BEDB7F0];
    v18 = *(_QWORD *)(v16 + 72);
    *(_QWORD *)(v15 + *(_QWORD *)(v17 - 24)) = *(_QWORD *)(v16 + 64);
    *(_QWORD *)(v15 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v15 + 16) = v18;
    if (*(char *)(v15 + 111) < 0)
      operator delete(*(void **)(v15 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD027B8](v15 + 128);
    operator delete((void *)v15);
  }
  v36[0] = v32;
  v36[1] = __dst;
  v36[2] = v32;
  v36[3] = __dst;
  v36[4] = __dst;
  if (v33 == -1)
    sub_207CA9F48();
  v37 = v36;
  ((void (*)(_QWORD **, _BYTE *))off_24C0798B0[v33])(&v37, v32);
  if (SHIBYTE(v35) < 0)
    operator delete(__dst[0]);
  if (v33 == -1)
    sub_207CA9F48();
  v36[0] = __dst;
  ((void (*)(void **__return_ptr, _QWORD *, _BYTE *))off_24C0798E0[v33])(__p, v36, v32);
  if (v33 != -1)
    ((void (*)(_QWORD *, _BYTE *))off_24C0798C8[v33])(v36, v32);
  if ((v31 & 0x80u) == 0)
    v19 = __p;
  else
    v19 = (void **)__p[0];
  if ((v31 & 0x80u) == 0)
    v20 = v31;
  else
    v20 = (uint64_t)__p[1];
  sub_207CBAB98(v4, (uint64_t)v19, v20);
  if ((char)v31 < 0)
    operator delete(__p[0]);
  if (*(_BYTE *)(*a2 + 408))
  {
    sub_207CBAB98(a1, (uint64_t)",\n", 2);
    sub_207CBAB98(a1, (uint64_t)"tex0='", 6);
    v21 = *a2;
    if (*(_BYTE *)(*a2 + 408))
    {
      v22 = (const char *)(v21 + 384);
      v23 = *(unsigned __int8 *)(v21 + 407);
      v25 = *(const char **)(v21 + 384);
      v24 = *(_QWORD *)(v21 + 392);
      if ((v23 & 0x80u) == 0)
        v26 = v22;
      else
        v26 = v25;
      if ((v23 & 0x80u) == 0)
        v27 = v23;
      else
        v27 = v24;
      v28 = a1;
    }
    else
    {
      v26 = "nullopt";
      v28 = a1;
      v27 = 7;
    }
    sub_207CBAB98(v28, (uint64_t)v26, v27);
    sub_207CBAB98(a1, (uint64_t)"'", 1);
  }
  return sub_207CBAB98(a1, (uint64_t)"}", 1);
}

void sub_207F0C5CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void sub_207F0C5E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;

  operator delete(v21);
  sub_207CA9EF0((uint64_t)&a12);
  _Unwind_Resume(a1);
}

void sub_207F0C640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_2082155DC((void **)va);
  JUMPOUT(0x207F0C64CLL);
}

uint64_t *sub_207F0C65C(uint64_t *a1)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v6;
  int v7;
  uint64_t *v8;

  v2 = *a1;
  if (*a1)
  {
    a1[1] = v2;
    v3 = -1431655765 * ((unint64_t)(a1[2] - v2) >> 2);
    v6 = v2;
    v7 = v3;
    v4 = *((unsigned int *)a1 + 7);
    if ((_DWORD)v4 == -1)
      sub_207CA9F48();
    v8 = &v6;
    ((void (*)(uint64_t **, uint64_t *))off_24C0797A0[v4])(&v8, a1 + 3);
  }
  return a1;
}

uint64_t *sub_207F0C6E8(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v6;
  int v7;
  uint64_t *v8;

  v2 = *a1;
  if (*a1)
  {
    a1[1] = v2;
    v3 = (unint64_t)(a1[2] - v2) >> 3;
    v6 = v2;
    v7 = v3;
    v4 = *((unsigned int *)a1 + 7);
    if ((_DWORD)v4 == -1)
      sub_207CA9F48();
    v8 = &v6;
    ((void (*)(uint64_t **, uint64_t *))off_24C0797B0[v4])(&v8, a1 + 3);
  }
  return a1;
}

uint64_t *sub_207F0C768(uint64_t *a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v6;
  int v7;
  uint64_t *v8;

  v2 = *a1;
  if (*a1)
  {
    a1[1] = v2;
    v3 = (unint64_t)(a1[2] - v2) >> 3;
    v6 = v2;
    v7 = v3;
    v4 = *((unsigned int *)a1 + 7);
    if ((_DWORD)v4 == -1)
      sub_207CA9F48();
    v8 = &v6;
    ((void (*)(uint64_t **, uint64_t *))off_24C0797C0[v4])(&v8, a1 + 3);
  }
  return a1;
}

uint64_t *sub_207F0C7E8(uint64_t *a1)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v6;
  int v7;
  uint64_t *v8;

  v2 = *a1;
  if (*a1)
  {
    a1[1] = v2;
    v3 = -1431655765 * ((unint64_t)(a1[2] - v2) >> 2);
    v6 = v2;
    v7 = v3;
    v4 = *((unsigned int *)a1 + 7);
    if ((_DWORD)v4 == -1)
      sub_207CA9F48();
    v8 = &v6;
    ((void (*)(uint64_t **, uint64_t *))off_24C0797D0[v4])(&v8, a1 + 3);
  }
  return a1;
}

uint64_t sub_207F0C874(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  _OWORD *v16;
  __int128 *v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  _OWORD *v32;
  __int128 *v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v40;
  int *v41;
  _QWORD v42[2];
  char v43;

  v4 = sub_207F0CD68((uint64_t *)a1, (uint64_t **)a2) + 4;
  sub_207F0CD68(v4, (uint64_t **)(a2 + 32));
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  sub_207F0CD68((uint64_t *)(a1 + 72), (uint64_t **)(a2 + 72));
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  sub_207F0CFE0((uint64_t *)(a1 + 112), (uint64_t **)(a2 + 112));
  *(_QWORD *)(a1 + 144) = 0;
  *(_QWORD *)(a1 + 152) = 0;
  v5 = *(unsigned int *)(a2 + 172);
  if ((_DWORD)v5 == -1)
    sub_207CA9F48();
  v42[0] = &v43;
  v6 = ((uint64_t (*)(_QWORD *, uint64_t))off_24C079820[v5])(v42, a2 + 168);
  *(_QWORD *)(a1 + 168) = v6;
  *(_QWORD *)(a1 + 160) = 0;
  v8 = *(char **)(a2 + 144);
  v7 = *(char **)(a2 + 152);
  v9 = v7 - v8;
  if (v7 != v8)
  {
    if ((v9 & 0x8000000000000000) != 0)
      sub_207CA420C();
    v40 = v9 >> 3;
    if (HIDWORD(v6) == 0xFFFFFFFF)
      sub_207CA9F48();
    v41 = &v40;
    v10 = ((uint64_t (*)(int **, uint64_t))off_24C079830[HIDWORD(v6)])(&v41, a1 + 168);
    *(_QWORD *)(a1 + 144) = v10;
    *(_QWORD *)(a1 + 152) = v10;
    *(_QWORD *)(a1 + 160) = v10 + 8 * v11;
    if (v9 - 8 < 0x18)
      goto LABEL_10;
    if ((unint64_t)(v10 - (_QWORD)v8) < 0x20)
      goto LABEL_10;
    v12 = ((v9 - 8) >> 3) + 1;
    v13 = 8 * (v12 & 0x3FFFFFFFFFFFFFFCLL);
    v14 = &v8[v13];
    v15 = (_QWORD *)(v10 + v13);
    v16 = (_OWORD *)(v10 + 16);
    v17 = (__int128 *)(v8 + 16);
    v18 = v12 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v19 = *v17;
      *(v16 - 1) = *(v17 - 1);
      *v16 = v19;
      v16 += 2;
      v17 += 2;
      v18 -= 4;
    }
    while (v18);
    v8 = v14;
    v10 = (uint64_t)v15;
    if (v12 != (v12 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_10:
      v15 = (_QWORD *)v10;
      do
      {
        v20 = *(_QWORD *)v8;
        v8 += 8;
        *v15++ = v20;
      }
      while (v8 != v7);
    }
    *(_QWORD *)(a1 + 152) = v15;
  }
  *(_QWORD *)(a1 + 176) = 0;
  *(_QWORD *)(a1 + 184) = 0;
  v21 = *(unsigned int *)(a2 + 204);
  if ((_DWORD)v21 == -1)
    sub_207CA9F48();
  v42[0] = &v43;
  v22 = ((uint64_t (*)(_QWORD *, uint64_t))off_24C079840[v21])(v42, a2 + 200);
  *(_QWORD *)(a1 + 200) = v22;
  *(_QWORD *)(a1 + 192) = 0;
  v24 = *(char **)(a2 + 176);
  v23 = *(char **)(a2 + 184);
  v25 = v23 - v24;
  if (v23 != v24)
  {
    if ((v25 & 0x8000000000000000) != 0)
      sub_207CA420C();
    v40 = v25 >> 3;
    if (HIDWORD(v22) == 0xFFFFFFFF)
      sub_207CA9F48();
    v41 = &v40;
    v26 = ((uint64_t (*)(int **, uint64_t))off_24C079850[HIDWORD(v22)])(&v41, a1 + 200);
    *(_QWORD *)(a1 + 176) = v26;
    *(_QWORD *)(a1 + 184) = v26;
    *(_QWORD *)(a1 + 192) = v26 + 8 * v27;
    if (v25 - 8 < 0x18)
      goto LABEL_22;
    if ((unint64_t)(v26 - (_QWORD)v24) < 0x20)
      goto LABEL_22;
    v28 = ((v25 - 8) >> 3) + 1;
    v29 = 8 * (v28 & 0x3FFFFFFFFFFFFFFCLL);
    v30 = &v24[v29];
    v31 = (_QWORD *)(v26 + v29);
    v32 = (_OWORD *)(v26 + 16);
    v33 = (__int128 *)(v24 + 16);
    v34 = v28 & 0x3FFFFFFFFFFFFFFCLL;
    do
    {
      v35 = *v33;
      *(v32 - 1) = *(v33 - 1);
      *v32 = v35;
      v32 += 2;
      v33 += 2;
      v34 -= 4;
    }
    while (v34);
    v24 = v30;
    v26 = (uint64_t)v31;
    if (v28 != (v28 & 0x3FFFFFFFFFFFFFFCLL))
    {
LABEL_22:
      v31 = (_QWORD *)v26;
      do
      {
        v36 = *(_QWORD *)v24;
        v24 += 8;
        *v31++ = v36;
      }
      while (v24 != v23);
    }
    *(_QWORD *)(a1 + 184) = v31;
  }
  sub_207F0CFE0((uint64_t *)(a1 + 208), (uint64_t **)(a2 + 208));
  sub_207E22908((_QWORD *)(a1 + 240), a2 + 240);
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  sub_207E22908((_QWORD *)(a1 + 280), a2 + 280);
  *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
  sub_207E231C4((_QWORD *)(a1 + 320), a2 + 320);
  *(_DWORD *)(a1 + 352) = *(_DWORD *)(a2 + 352);
  *(_BYTE *)(a1 + 356) = 0;
  *(_BYTE *)(a1 + 380) = 0;
  if (*(_BYTE *)(a2 + 380))
  {
    v37 = *(_QWORD *)(a2 + 356);
    *(_DWORD *)(a1 + 364) = *(_DWORD *)(a2 + 364);
    *(_QWORD *)(a1 + 356) = v37;
    v38 = *(_QWORD *)(a2 + 368);
    *(_DWORD *)(a1 + 376) = *(_DWORD *)(a2 + 376);
    *(_QWORD *)(a1 + 368) = v38;
    *(_BYTE *)(a1 + 380) = 1;
  }
  return a1;
}

void sub_207F0CBF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;

  sub_207E085F0(v16);
  sub_207E085F0(v15);
  sub_207F0C65C(v14);
  sub_207F0C6E8(v13);
  sub_207F0C768(v12);
  sub_207F0C65C(v11);
  sub_207F0C7E8(v10);
  sub_207F0C7E8(a9);
  sub_207F0C7E8(v9);
  _Unwind_Resume(a1);
}

void sub_207F0CC34()
{
  JUMPOUT(0x207F0CD48);
}

void sub_207F0CC3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t *v9;

  sub_207F0C7E8(a9);
  sub_207F0C7E8(v9);
  _Unwind_Resume(a1);
}

void sub_207F0CC58(_Unwind_Exception *a1)
{
  uint64_t *v1;

  sub_207F0C7E8(v1);
  _Unwind_Resume(a1);
}

void sub_207F0CC6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t *a14)
{
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v18 = *v16;
  if (*v16)
  {
    *(_QWORD *)(v14 + 184) = v18;
    v19 = (unint64_t)(*(_QWORD *)(v14 + 192) - v18) >> 3;
    a12 = v18;
    a13 = v19;
    v20 = *(unsigned int *)(v14 + 204);
    if ((_DWORD)v20 == -1)
      sub_207CA9F48();
    a14 = &a12;
    ((void (*)(uint64_t **, uint64_t))off_24C0797B0[v20])(&a14, v17);
  }
  sub_207F0C768(v15);
  JUMPOUT(0x207F0CD40);
}

void sub_207F0CCCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t *a14)
{
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v20 = *v17;
  if (*v17)
  {
    *(_QWORD *)(v14 + 152) = v20;
    v21 = (unint64_t)(*(_QWORD *)(v14 + 160) - v20) >> 3;
    a12 = v20;
    a13 = v21;
    v22 = *(unsigned int *)(v14 + 172);
    if ((_DWORD)v22 == -1)
      sub_207CA9F48();
    a14 = &a12;
    ((void (*)(uint64_t **, uint64_t))off_24C0797C0[v22])(&a14, v18);
  }
  sub_207F0C65C(v16);
  sub_207F0C7E8(v15);
  sub_207F0C7E8(a9);
  sub_207F0C7E8((uint64_t *)v14);
  _Unwind_Resume(a1);
}

uint64_t *sub_207F0CD68(uint64_t *a1, uint64_t **a2)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v14;
  int *v15;
  char *v16;
  char v17;

  *a1 = 0;
  a1[1] = 0;
  v2 = *((unsigned int *)a2 + 7);
  if ((_DWORD)v2 == -1)
    sub_207CA9F48();
  v16 = &v17;
  v5 = ((uint64_t (*)(char **, uint64_t **))off_24C0797E0[v2])(&v16, a2 + 3);
  a1[3] = v5;
  a1[2] = 0;
  v7 = *a2;
  v6 = a2[1];
  if (v6 != v7)
  {
    if (0xAAAAAAAAAAAAAAABLL * (((char *)v6 - (char *)v7) >> 2) >= 0x1555555555555556)
      sub_207CA420C();
    v14 = -1431655765 * (((char *)v6 - (char *)v7) >> 2);
    if (HIDWORD(v5) == 0xFFFFFFFF)
      sub_207CA9F48();
    v15 = &v14;
    v8 = ((uint64_t (*)(int **, uint64_t *))off_24C0797F0[HIDWORD(v5)])(&v15, a1 + 3);
    v9 = 0;
    *a1 = v8;
    a1[1] = v8;
    a1[2] = v8 + 12 * v10;
    v11 = v8;
    do
    {
      v12 = *v7;
      *(_DWORD *)(v11 + 8) = *((_DWORD *)v7 + 2);
      *(_QWORD *)v11 = v12;
      v11 += 12;
      v7 = (uint64_t *)((char *)v7 + 12);
      v9 += 12;
    }
    while (v7 != v6);
    a1[1] = v8 + v9;
  }
  return a1;
}

void sub_207F0CE94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t *a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  int v18;
  uint64_t v19;

  v17 = *(_QWORD *)v14;
  if (*(_QWORD *)v14)
  {
    *(_QWORD *)(v14 + 8) = v17;
    v18 = -1431655765 * ((unint64_t)(*(_QWORD *)(v14 + 16) - v17) >> 2);
    a12 = v17;
    a13 = v18;
    v19 = *(unsigned int *)(v14 + 28);
    if ((_DWORD)v19 == -1)
      sub_207CA9F48();
    a14 = &a12;
    ((void (*)(uint64_t **, uint64_t))off_24C0797D0[v19])(&a14, v15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_207F0CF08()
{
  return 0;
}

uint64_t sub_207F0CF10()
{
  return 0x100000000;
}

void *sub_207F0CF18(unsigned int **a1)
{
  return operator new(12 * **a1);
}

vm_address_t sub_207F0CF48(unsigned int **a1)
{
  uint64_t v1;
  std::bad_alloc *exception;
  std::bad_alloc *v4;
  vm_address_t address;

  v1 = (((12 * **a1 + 4095) & 0x1FFFFFF000) * (unsigned __int128)0x1555555555555556uLL) >> 64;
  address = 0;
  if (vm_allocate(*MEMORY[0x24BDAEC58], &address, 12 * v1, 1))
  {
    exception = (std::bad_alloc *)__cxa_allocate_exception(8uLL);
    v4 = std::bad_alloc::bad_alloc(exception);
    __cxa_throw(v4, MEMORY[0x24BEDB758], MEMORY[0x24BEDB670]);
  }
  return address;
}

uint64_t *sub_207F0CFE0(uint64_t *a1, uint64_t **a2)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v14;
  int *v15;
  char *v16;
  char v17;

  *a1 = 0;
  a1[1] = 0;
  v2 = *((unsigned int *)a2 + 7);
  if ((_DWORD)v2 == -1)
    sub_207CA9F48();
  v16 = &v17;
  v5 = ((uint64_t (*)(char **, uint64_t **))off_24C079800[v2])(&v16, a2 + 3);
  a1[3] = v5;
  a1[2] = 0;
  v7 = *a2;
  v6 = a2[1];
  if (v6 != v7)
  {
    if (0xAAAAAAAAAAAAAAABLL * (((char *)v6 - (char *)v7) >> 2) >= 0x1555555555555556)
      sub_207CA420C();
    v14 = -1431655765 * (((char *)v6 - (char *)v7) >> 2);
    if (HIDWORD(v5) == 0xFFFFFFFF)
      sub_207CA9F48();
    v15 = &v14;
    v8 = ((uint64_t (*)(int **, uint64_t *))off_24C079810[HIDWORD(v5)])(&v15, a1 + 3);
    v9 = 0;
    *a1 = v8;
    a1[1] = v8;
    a1[2] = v8 + 12 * v10;
    v11 = v8;
    do
    {
      v12 = *v7;
      *(_DWORD *)(v11 + 8) = *((_DWORD *)v7 + 2);
      *(_QWORD *)v11 = v12;
      v11 += 12;
      v7 = (uint64_t *)((char *)v7 + 12);
      v9 += 12;
    }
    while (v7 != v6);
    a1[1] = v8 + v9;
  }
  return a1;
}

void sub_207F0D10C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t *a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  int v18;
  uint64_t v19;

  v17 = *(_QWORD *)v14;
  if (*(_QWORD *)v14)
  {
    *(_QWORD *)(v14 + 8) = v17;
    v18 = -1431655765 * ((unint64_t)(*(_QWORD *)(v14 + 16) - v17) >> 2);
    a12 = v17;
    a13 = v18;
    v19 = *(unsigned int *)(v14 + 28);
    if ((_DWORD)v19 == -1)
      sub_207CA9F48();
    a14 = &a12;
    ((void (*)(uint64_t **, uint64_t))off_24C0797A0[v19])(&a14, v15);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_207F0D180()
{
  return 0;
}

uint64_t sub_207F0D188()
{
  return 0x100000000;
}

void *sub_207F0D190(unsigned int **a1)
{
  return operator new(12 * **a1);
}

vm_address_t sub_207F0D1C0(unsigned int **a1)
{
  uint64_t v1;
  std::bad_alloc *exception;
  std::bad_alloc *v4;
  vm_address_t address;

  v1 = (((12 * **a1 + 4095) & 0x1FFFFFF000) * (unsigned __int128)0x1555555555555556uLL) >> 64;
  address = 0;
  if (vm_allocate(*MEMORY[0x24BDAEC58], &address, 12 * v1, 1))
  {
    exception = (std::bad_alloc *)__cxa_allocate_exception(8uLL);
    v4 = std::bad_alloc::bad_alloc(exception);
    __cxa_throw(v4, MEMORY[0x24BEDB758], MEMORY[0x24BEDB670]);
  }
  return address;
}

uint64_t sub_207F0D258()
{
  return 0;
}

uint64_t sub_207F0D260()
{
  return 0x100000000;
}

void *sub_207F0D268(unsigned int **a1)
{
  return operator new(8 * **a1);
}

vm_address_t sub_207F0D294(unsigned int **a1)
{
  uint64_t v1;
  std::bad_alloc *exception;
  std::bad_alloc *v4;
  vm_address_t address;

  v1 = (**a1 + 511) & 0x1FFFFFE00;
  address = 0;
  if (vm_allocate(*MEMORY[0x24BDAEC58], &address, 8 * v1, 1))
  {
    exception = (std::bad_alloc *)__cxa_allocate_exception(8uLL);
    v4 = std::bad_alloc::bad_alloc(exception);
    __cxa_throw(v4, MEMORY[0x24BEDB758], MEMORY[0x24BEDB670]);
  }
  return address;
}

uint64_t sub_207F0D310()
{
  return 0;
}

uint64_t sub_207F0D318()
{
  return 0x100000000;
}

void *sub_207F0D320(unsigned int **a1)
{
  return operator new(8 * **a1);
}

vm_address_t sub_207F0D34C(unsigned int **a1)
{
  uint64_t v1;
  std::bad_alloc *exception;
  std::bad_alloc *v4;
  vm_address_t address;

  v1 = (**a1 + 511) & 0x1FFFFFE00;
  address = 0;
  if (vm_allocate(*MEMORY[0x24BDAEC58], &address, 8 * v1, 1))
  {
    exception = (std::bad_alloc *)__cxa_allocate_exception(8uLL);
    v4 = std::bad_alloc::bad_alloc(exception);
    __cxa_throw(v4, MEMORY[0x24BEDB758], MEMORY[0x24BEDB670]);
  }
  return address;
}

void sub_207F0D3CC(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_207F0D3E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1)
  {
    if (*(_BYTE *)(v1 + 408) && *(char *)(v1 + 407) < 0)
    {
      operator delete(*(void **)(v1 + 384));
      v2 = sub_207E08A64((uint64_t *)v1);
    }
    else
    {
      v2 = sub_207E08A64(*(uint64_t **)(a1 + 24));
    }
    operator delete(v2);
  }
}

uint64_t sub_207F0D440(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "NSt3__114default_deleteIN4cv3d3kit3viz7TriMesh7PrivateEEE")
    return a1 + 24;
  if (((v3 & (unint64_t)"NSt3__114default_deleteIN4cv3d3kit3viz7TriMesh7PrivateEEE" & 0x8000000000000000) != 0) == __OFSUB__(v3, "NSt3__114default_deleteIN4cv3d3kit3viz7TriMesh7PrivateEEE"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"NSt3__114default_deleteIN4cv3d3kit3viz7TriMesh7PrivateEEE" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

_QWORD *sub_207F0D4B0()
{
  unsigned __int8 v0;
  void *__p;
  char v3;
  char v4;

  v0 = atomic_load((unsigned __int8 *)&qword_254530918);
  if ((v0 & 1) != 0 || !__cxa_guard_acquire(&qword_254530918))
    return &qword_2545308F8;
  LOBYTE(__p) = 0;
  v4 = 0;
  sub_207F0DC98(&qword_2545308F8, (uint64_t)&__p);
  if (v4)
  {
    if (v3 < 0)
      operator delete(__p);
  }
  __cxa_atexit((void (*)(void *))sub_207F0E280, &qword_2545308F8, &dword_207C77000);
  __cxa_guard_release(&qword_254530918);
  return &qword_2545308F8;
}

void sub_207F0D568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a15)
  {
    if (a14 < 0)
      operator delete(__p);
  }
  __cxa_guard_abort(&qword_254530918);
  _Unwind_Resume(a1);
}

BOOL sub_207F0D598(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _BOOL8 v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v14;
  std::__shared_weak_count *v15;

  v2 = *a2;
  v3 = (std::__shared_weak_count *)a2[1];
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v5 = __ldxr(p_shared_owners);
    while (__stxr(v5 + 1, p_shared_owners));
    v6 = *(_QWORD *)(a1 + 64);
    v14 = v2;
    v15 = v3;
    do
      v7 = __ldxr(p_shared_owners);
    while (__stxr(v7 + 1, p_shared_owners));
  }
  else
  {
    v6 = *(_QWORD *)(a1 + 64);
    v14 = *a2;
    v15 = 0;
  }
  v8 = sub_207EFD620(v6, &v14);
  if (v3)
  {
    v9 = (unint64_t *)&v3->__shared_owners_;
    do
      v10 = __ldaxr(v9);
    while (__stlxr(v10 - 1, v9));
    if (!v10)
    {
      ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
      std::__shared_weak_count::__release_weak(v3);
    }
  }
  if (!v3)
    return v8;
  v11 = (unint64_t *)&v3->__shared_owners_;
  do
    v12 = __ldaxr(v11);
  while (__stlxr(v12 - 1, v11));
  if (v12)
    return v8;
  ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
  std::__shared_weak_count::__release_weak(v3);
  return v8;
}

void sub_207F0D68C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  sub_207C99D78((uint64_t)&a11);
  sub_207C99D78((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_207F0D6A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 64);
  std::mutex::lock((std::mutex *)(v3 + 32));
  v4 = sub_207EFD210(v3, a2);
  std::mutex::unlock((std::mutex *)(v3 + 32));
  return v4;
}

void sub_207F0D6F8(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_207F0D70C(uint64_t a1)
{
  return a1 + 48;
}

uint64_t sub_207F0D714(uint64_t a1)
{
  return a1 + 48;
}

uint64_t sub_207F0D71C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  v2 = *(_QWORD *)(result + 40);
  *a2 = *(_QWORD *)(result + 32);
  a2[1] = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

uint64_t sub_207F0D740@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  v2 = *(_QWORD *)(result + 40);
  *a2 = *(_QWORD *)(result + 32);
  a2[1] = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

std::__shared_weak_count *sub_207F0D764@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *result;

  result = *(std::__shared_weak_count **)(a1 + 24);
  if (result && (result = std::__shared_weak_count::lock(result)) != 0)
  {
    *a2 = *(_QWORD *)(a1 + 16);
    a2[1] = result;
  }
  else
  {
    *a2 = 0;
    a2[1] = result;
  }
  return result;
}

std::__shared_weak_count *sub_207F0D7B0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *result;

  result = *(std::__shared_weak_count **)(a1 + 24);
  if (result && (result = std::__shared_weak_count::lock(result)) != 0)
  {
    *a2 = *(_QWORD *)(a1 + 16);
    a2[1] = result;
  }
  else
  {
    *a2 = 0;
    a2[1] = result;
  }
  return result;
}

uint64_t sub_207F0D7FC(uint64_t a1)
{
  return a1 + 80;
}

uint64_t sub_207F0D804(uint64_t a1)
{
  return a1 + 72;
}

void sub_207F0D80C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(v3 + 8);
  if (v4)
  {
    sub_207F02800(v4, a2);
  }
  else
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    sub_207F02800(*(_QWORD *)(v3 + 8), a2);
  }
}

void sub_207F0D884(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(v3 + 8);
  if (v4)
  {
    sub_207F02800(v4, a2);
  }
  else
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    sub_207F02800(*(_QWORD *)(v3 + 8), a2);
  }
}

uint64_t sub_207F0D8FC(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(v3 + 8);
  if (v4)
    return sub_207F0238C(v4, a2);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return sub_207F0238C(*(_QWORD *)(v3 + 8), a2);
}

uint64_t sub_207F0D974(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(v3 + 8);
  if (v4)
    return sub_207F0238C(v4, a2);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return sub_207F0238C(*(_QWORD *)(v3 + 8), a2);
}

uint64_t sub_207F0D9EC(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;

  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD **)(v3 + 8);
  if (v4)
    return sub_207F026DC(v4, a2);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return sub_207F026DC(*(_QWORD **)(v3 + 8), a2);
}

uint64_t sub_207F0DA64(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD **)(v3 + 8);
  if (v4)
    return sub_207F026DC(v4, a2);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/NamedContext.cpp", 747, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return sub_207F026DC(*(_QWORD **)(v3 + 8), a2);
}

uint64_t **sub_207F0DADC(uint64_t a1, char *a2, size_t a3)
{
  return sub_207F03424(*(_QWORD *)(a1 + 32), a2, a3);
}

uint64_t **sub_207F0DAE4(uint64_t a1, char *a2, size_t a3)
{
  return sub_207F03424(*(_QWORD *)(a1 + 24), a2, a3);
}

unint64_t sub_207F0DAEC(uint64_t a1, const void *a2, size_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(v5 + 8);
  if (v6)
    return sub_207F01914(v6, a2, a3);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return sub_207F01914(*(_QWORD *)(v5 + 8), a2, a3);
}

unint64_t sub_207F0DB7C(uint64_t a1, const void *a2, size_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(v5 + 8);
  if (v6)
    return sub_207F01914(v6, a2, a3);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return sub_207F01914(*(_QWORD *)(v5 + 8), a2, a3);
}

uint64_t sub_207F0DC0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  std::mutex *v5;
  _QWORD *v6;
  _QWORD *i;

  v4 = *(_QWORD *)(a1 + 64);
  v5 = (std::mutex *)(v4 + 32);
  std::mutex::lock((std::mutex *)(v4 + 32));
  v6 = *(_QWORD **)(v4 + 96);
  for (i = *(_QWORD **)(v4 + 104); v6 != i; v6 += 2)
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v6 + 16))(*v6, a2);
  std::mutex::unlock(v5);
  return a1;
}

void sub_207F0DC84(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

_QWORD *sub_207F0DC98(_QWORD *a1, uint64_t a2)
{
  void *v3;
  char v4;
  char *v5;
  char *v6;
  void *v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  void *v12;
  char *v13;
  uint64_t v14;
  void *__p;
  _BYTE v16[15];
  char v17;
  char v18;
  _QWORD v19[3];

  v19[2] = *MEMORY[0x24BDAC8D0];
  v12 = 0;
  v13 = 0;
  v14 = 0;
  if (*(_BYTE *)(a2 + 24))
  {
    *(_QWORD *)((char *)v19 + 7) = *(_QWORD *)(a2 + 15);
    v3 = *(void **)a2;
    v19[0] = *(_QWORD *)(a2 + 8);
    v4 = *(_BYTE *)(a2 + 23);
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)a2 = 0;
    *a1 = &off_24C079908;
    a1[1] = &unk_24C0799B8;
    __p = v3;
    *(_QWORD *)v16 = v19[0];
    *(_QWORD *)&v16[7] = *(_QWORD *)((char *)v19 + 7);
    v17 = v4;
    memset(v19, 0, 15);
    v18 = 1;
  }
  else
  {
    *a1 = &off_24C079908;
    a1[1] = &unk_24C0799B8;
    LOBYTE(__p) = 0;
    v18 = 0;
  }
  sub_207F0DE34((uint64_t)&v12, (uint64_t)&__p, a1 + 2);
  if (v18 && v17 < 0)
    operator delete(__p);
  v5 = (char *)v12;
  if (v12)
  {
    v6 = v13;
    v7 = v12;
    if (v13 != v12)
    {
      do
      {
        v8 = (std::__shared_weak_count *)*((_QWORD *)v6 - 1);
        if (v8)
        {
          p_shared_owners = (unint64_t *)&v8->__shared_owners_;
          do
            v10 = __ldaxr(p_shared_owners);
          while (__stlxr(v10 - 1, p_shared_owners));
          if (!v10)
          {
            ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
            std::__shared_weak_count::__release_weak(v8);
          }
        }
        v6 -= 16;
      }
      while (v6 != v5);
      v7 = v12;
    }
    v13 = v5;
    operator delete(v7);
  }
  return a1;
}

void sub_207F0DE08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, char a18)
{
  if (a18)
  {
    if (a17 < 0)
      operator delete(__p);
  }
  sub_207CBE108((void **)&a9);
  _Unwind_Resume(a1);
}

void sub_207F0DE34(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  char *v6;
  unsigned __int8 v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_owners;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  std::__shared_weak_count *v17;
  unint64_t *p_shared_weak_owners;
  unint64_t v19;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  std::__shared_weak_count *v25;
  std::__shared_weak_count *v26;
  unint64_t *v27;
  unint64_t v28;
  std::__shared_weak_count *v29;
  unint64_t *v30;
  unint64_t v31;
  void *__p[2];
  uint64_t v33;
  std::__shared_weak_count *v34;
  void *v35;
  std::__shared_weak_count *v36;
  uint64_t v37;

  v6 = (char *)operator new(0x88uLL);
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *(_QWORD *)v6 = off_24C079B78;
  *((_QWORD *)v6 + 3) = off_24C079A48;
  __p[0] = 0;
  __p[1] = 0;
  v33 = 0;
  *((_QWORD *)v6 + 4) = &unk_24C079AF0;
  *(_OWORD *)(v6 + 56) = 0u;
  *(_OWORD *)(v6 + 40) = 0u;
  *((_QWORD *)v6 + 9) = &off_24C078BB0;
  *((_QWORD *)v6 + 10) = &unk_24C078BF0;
  v35 = 0;
  v36 = 0;
  sub_207EFD394((uint64_t **)__p, (uint64_t *)&v35, (_QWORD *)v6 + 11);
  if (v36)
    std::__shared_weak_count::__release_weak(v36);
  v6[104] = 0;
  v6[128] = 0;
  *a3 = v6 + 24;
  a3[1] = v6;
  if (*(_QWORD *)a1 == *(_QWORD *)(a1 + 8))
    v7 = 2;
  else
    v7 = 1;
  v8 = operator new(0x28uLL);
  v9 = v8;
  v8[1] = 0;
  v8[2] = 0;
  *v8 = off_24C079BC8;
  v10 = v8 + 3;
  v36 = 0;
  v37 = 0;
  v35 = 0;
  LOBYTE(__p[0]) = 0;
  LOBYTE(v34) = 0;
  if (*(_BYTE *)(a2 + 24))
  {
    *(_OWORD *)__p = *(_OWORD *)a2;
    v33 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    *(_QWORD *)a2 = 0;
    LOBYTE(v34) = 1;
  }
  sub_207F02AF8(v8 + 3, v7, (uint64_t)&v35, (uint64_t *)__p);
  if ((_BYTE)v34 && SHIBYTE(v33) < 0)
    operator delete(__p[0]);
  if (v35)
  {
    v36 = (std::__shared_weak_count *)v35;
    operator delete(v35);
  }
  v11 = (std::__shared_weak_count *)*((_QWORD *)v6 + 8);
  *((_QWORD *)v6 + 7) = v10;
  *((_QWORD *)v6 + 8) = v9;
  if (!v11)
    goto LABEL_17;
  p_shared_owners = (unint64_t *)&v11->__shared_owners_;
  do
    v13 = __ldaxr(p_shared_owners);
  while (__stlxr(v13 - 1, p_shared_owners));
  if (!v13)
  {
    ((void (*)(std::__shared_weak_count *))v11->__on_zero_shared)(v11);
    std::__shared_weak_count::__release_weak(v11);
    v14 = (_QWORD *)*a3;
    v15 = *(_QWORD *)(*a3 + 32);
    v16 = *(_QWORD *)(v15 + 8);
    if (v16)
      goto LABEL_21;
  }
  else
  {
LABEL_17:
    v14 = (_QWORD *)*a3;
    v15 = *(_QWORD *)(*a3 + 32);
    v16 = *(_QWORD *)(v15 + 8);
    if (v16)
      goto LABEL_21;
  }
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  v16 = *(_QWORD *)(v15 + 8);
LABEL_21:
  sub_207D0CAFC((uint64_t)(v14 + 10), (_QWORD *)(v16 + 240));
  v17 = (std::__shared_weak_count *)a3[1];
  if (v17)
  {
    p_shared_weak_owners = (unint64_t *)&v17->__shared_weak_owners_;
    do
      v19 = __ldxr(p_shared_weak_owners);
    while (__stxr(v19 + 1, p_shared_weak_owners));
  }
  v20 = (std::__shared_weak_count *)v14[3];
  v14[2] = v14;
  v14[3] = v17;
  if (v20)
    std::__shared_weak_count::__release_weak(v20);
  if (v17)
  {
    v21 = (unint64_t *)&v17->__shared_weak_owners_;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    __p[0] = &off_24C078BB0;
    __p[1] = &unk_24C078BF0;
    v35 = v14;
    v36 = v17;
    do
      v23 = __ldxr(v21);
    while (__stxr(v23 + 1, v21));
  }
  else
  {
    __p[0] = &off_24C078BB0;
    __p[1] = &unk_24C078BF0;
    v35 = v14;
    v36 = 0;
  }
  sub_207EFD394((uint64_t **)a1, (uint64_t *)&v35, &v33);
  if (v36)
    std::__shared_weak_count::__release_weak(v36);
  v24 = v33;
  v25 = v34;
  v33 = 0;
  v34 = 0;
  v26 = (std::__shared_weak_count *)v14[9];
  v14[8] = v24;
  v14[9] = v25;
  if (v26)
  {
    v27 = (unint64_t *)&v26->__shared_owners_;
    do
      v28 = __ldaxr(v27);
    while (__stlxr(v28 - 1, v27));
    if (!v28)
    {
      ((void (*)(std::__shared_weak_count *))v26->__on_zero_shared)(v26);
      std::__shared_weak_count::__release_weak(v26);
    }
  }
  v29 = v34;
  if (v34)
  {
    v30 = (unint64_t *)&v34->__shared_owners_;
    do
      v31 = __ldaxr(v30);
    while (__stlxr(v31 - 1, v30));
    if (!v31)
    {
      ((void (*)(std::__shared_weak_count *))v29->__on_zero_shared)(v29);
      std::__shared_weak_count::__release_weak(v29);
    }
  }
  if (v17)
    std::__shared_weak_count::__release_weak(v17);
}

void sub_207F0E174(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15)
{
  uint64_t v15;
  std::__shared_weak_count *v16;

  if (a15)
  {
    std::__shared_weak_count::__release_weak(a15);
    if (!v16)
    {
LABEL_3:
      sub_207C99D78(v15);
      _Unwind_Resume(a1);
    }
  }
  else if (!v16)
  {
    goto LABEL_3;
  }
  std::__shared_weak_count::__release_weak(v16);
  sub_207C99D78(v15);
  _Unwind_Resume(a1);
}

void sub_207F0E1B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18)
{
  uint64_t v18;
  std::__shared_weak_count *v19;
  void *v21;

  if (a15 && a14 < 0)
    operator delete(__p);
  if (a17)
    operator delete(a17);
  std::__shared_weak_count::~__shared_weak_count(v19);
  operator delete(v21);
  sub_207C99D78(v18);
  _Unwind_Resume(a1);
}

void sub_207F0E1FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_207C99D78(v1);
  _Unwind_Resume(a1);
}

void sub_207F0E210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, std::__shared_weak_count *a15)
{
  std::__shared_weak_count *v15;
  uint64_t v16;
  std::__shared_weak_count *v18;
  void *v19;
  void *v20;

  if (a15)
  {
    std::__shared_weak_count::__release_weak(a15);
    sub_207C99D78(v16);
    v18 = (std::__shared_weak_count *)v15[2].__vftable;
    if (!v18)
    {
LABEL_3:
      std::__shared_weak_count::~__shared_weak_count(v15);
      operator delete(v19);
      _Unwind_Resume(a1);
    }
  }
  else
  {
    sub_207C99D78(v16);
    v18 = (std::__shared_weak_count *)v15[2].__vftable;
    if (!v18)
      goto LABEL_3;
  }
  std::__shared_weak_count::__release_weak(v18);
  std::__shared_weak_count::~__shared_weak_count(v15);
  operator delete(v20);
  _Unwind_Resume(a1);
}

void sub_207F0E26C(_Unwind_Exception *a1)
{
  uint64_t v1;

  sub_207C99D78(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_207F0E280(uint64_t result)
{
  uint64_t v1;
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v1 = result;
  v2 = *(std::__shared_weak_count **)(result + 24);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
      return v1;
    }
  }
  return result;
}

void sub_207F0E2E8(uint64_t a1)
{
  std::__shared_weak_count *v1;
  unint64_t *p_shared_owners;
  unint64_t v3;

  v1 = *(std::__shared_weak_count **)(a1 + 16);
  if (v1)
  {
    p_shared_owners = (unint64_t *)&v1->__shared_owners_;
    do
      v3 = __ldaxr(p_shared_owners);
    while (__stlxr(v3 - 1, p_shared_owners));
    if (!v3)
    {
      ((void (*)(std::__shared_weak_count *))v1->__on_zero_shared)(v1);
      std::__shared_weak_count::__release_weak(v1);
    }
  }
}

void sub_207F0E344(_QWORD *__p)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = (std::__shared_weak_count *)__p[3];
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete(__p);
  }
  else
  {
LABEL_5:
    operator delete(__p);
  }
}

void sub_207F0E3AC(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 16);
  if (!v2)
    goto LABEL_5;
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
    operator delete((void *)(a1 - 8));
  }
  else
  {
LABEL_5:
    operator delete((void *)(a1 - 8));
  }
}

uint64_t sub_207F0E414(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 104))(v4, a2);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 104))(*(_QWORD *)(a1 + 16), a2);
}

uint64_t sub_207F0E49C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 104))(v4, a2);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 104))(*(_QWORD *)(a1 + 8), a2);
}

BOOL sub_207F0E524(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _BOOL8 v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t *v17;
  unint64_t v18;
  std::__shared_weak_count *v20;
  std::__shared_weak_count *v21;
  uint64_t v22;
  std::__shared_weak_count *v23;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    v3 = *(_QWORD *)(a1 + 16);
    v4 = *a2;
    v5 = (std::__shared_weak_count *)a2[1];
    v20 = v5;
    if (v5)
      goto LABEL_3;
LABEL_12:
    v21 = 0;
    v9 = *(_QWORD *)(v3 + 64);
    v22 = v4;
    v23 = 0;
    goto LABEL_13;
  }
  v4 = *a2;
  v5 = (std::__shared_weak_count *)a2[1];
  v20 = v5;
  if (!v5)
    goto LABEL_12;
LABEL_3:
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  v21 = v5;
  do
    v8 = __ldxr(p_shared_owners);
  while (__stxr(v8 + 1, p_shared_owners));
  v9 = *(_QWORD *)(v3 + 64);
  v22 = v4;
  v23 = v5;
  do
    v10 = __ldxr(p_shared_owners);
  while (__stxr(v10 + 1, p_shared_owners));
LABEL_13:
  v12 = sub_207EFD620(v9, &v22);
  if (v5)
  {
    v13 = (unint64_t *)&v5->__shared_owners_;
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  if (v21)
  {
    v15 = (unint64_t *)&v21->__shared_owners_;
    do
      v16 = __ldaxr(v15);
    while (__stlxr(v16 - 1, v15));
    if (!v16)
    {
      ((void (*)(std::__shared_weak_count *))v21->__on_zero_shared)(v21);
      std::__shared_weak_count::__release_weak(v21);
    }
  }
  if (!v20)
    return v12;
  v17 = (unint64_t *)&v20->__shared_owners_;
  do
    v18 = __ldaxr(v17);
  while (__stlxr(v18 - 1, v17));
  if (v18)
    return v12;
  ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
  std::__shared_weak_count::__release_weak(v20);
  return v12;
}

void sub_207F0E6C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, char a13)
{
  sub_207C99D78((uint64_t)&a13);
  sub_207C99D78((uint64_t)&a11);
  sub_207C99D78((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_207F0E6E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    v3 = *(_QWORD *)(a1 + 16);
  }
  v5 = *(_QWORD *)(v3 + 64);
  std::mutex::lock((std::mutex *)(v5 + 32));
  v6 = sub_207EFD210(v5, a2);
  std::mutex::unlock((std::mutex *)(v5 + 32));
  return v6;
}

void sub_207F0E780(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_207F0E794(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
    return v1 + 48;
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 202, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return *(_QWORD *)(a1 + 16) + 48;
}

uint64_t sub_207F0E808(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
    return v1 + 48;
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return *(_QWORD *)(a1 + 16) + 48;
}

uint64_t sub_207F0E87C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = *(_QWORD *)(result + 16);
  if (!v3)
  {
    v4 = result;
    result = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 202, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((result & 1) != 0)
      abort();
    v3 = *(_QWORD *)(v4 + 16);
  }
  v6 = *(_QWORD *)(v3 + 32);
  v5 = *(_QWORD *)(v3 + 40);
  *a2 = v6;
  a2[1] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

uint64_t sub_207F0E900@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  unint64_t v8;

  v3 = *(_QWORD *)(result + 16);
  if (!v3)
  {
    v4 = result;
    result = sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974);
    if ((result & 1) != 0)
      abort();
    v3 = *(_QWORD *)(v4 + 16);
  }
  v6 = *(_QWORD *)(v3 + 32);
  v5 = *(_QWORD *)(v3 + 40);
  *a2 = v6;
  a2[1] = v5;
  if (v5)
  {
    v7 = (unint64_t *)(v5 + 8);
    do
      v8 = __ldxr(v7);
    while (__stxr(v8 + 1, v7));
  }
  return result;
}

std::__shared_weak_count *sub_207F0E984@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    result = *(std::__shared_weak_count **)(v3 + 24);
    if (!result)
      goto LABEL_8;
  }
  else
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 202, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    v3 = *(_QWORD *)(a1 + 16);
    result = *(std::__shared_weak_count **)(v3 + 24);
    if (!result)
      goto LABEL_8;
  }
  result = std::__shared_weak_count::lock(result);
  if (result)
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = result;
    return result;
  }
LABEL_8:
  *a2 = 0;
  a2[1] = result;
  return result;
}

std::__shared_weak_count *sub_207F0EA2C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  std::__shared_weak_count *result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    result = *(std::__shared_weak_count **)(v3 + 24);
    if (!result)
      goto LABEL_8;
  }
  else
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    v3 = *(_QWORD *)(a1 + 16);
    result = *(std::__shared_weak_count **)(v3 + 24);
    if (!result)
      goto LABEL_8;
  }
  result = std::__shared_weak_count::lock(result);
  if (result)
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = result;
    return result;
  }
LABEL_8:
  *a2 = 0;
  a2[1] = result;
  return result;
}

uint64_t sub_207F0EAD4(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 112))(v2);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 202, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 16) + 112))(*(_QWORD *)(a1 + 16));
}

uint64_t sub_207F0EB50(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  if (v2)
    return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 112))(v2);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 202, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return (*(uint64_t (**)(_QWORD))(**(_QWORD **)(a1 + 8) + 112))(*(_QWORD *)(a1 + 8));
}

uint64_t sub_207F0EBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 120))(v4, a2);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 120))(*(_QWORD *)(a1 + 16), a2);
}

uint64_t sub_207F0EC54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 120))(v4, a2);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 120))(*(_QWORD *)(a1 + 8), a2);
}

uint64_t sub_207F0ECDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 128))(v4, a2);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 128))(*(_QWORD *)(a1 + 16), a2);
}

uint64_t sub_207F0ED64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 128))(v4, a2);
  if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
  {
    abort();
  }
  return (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 128))(*(_QWORD *)(a1 + 8), a2);
}

uint64_t **sub_207F0EDEC(uint64_t a1, char *a2, size_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 16);
  }
  return sub_207F03424(*(_QWORD *)(v5 + 32), a2, a3);
}

uint64_t **sub_207F0EE68(uint64_t a1, char *a2, size_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  return sub_207F03424(*(_QWORD *)(v5 + 32), a2, a3);
}

unint64_t sub_207F0EEE4(uint64_t a1, const void *a2, size_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 202, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      goto LABEL_9;
    }
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 32);
    v7 = *(_QWORD *)(v6 + 8);
    if (v7)
      return sub_207F01914(v7, a2, a3);
LABEL_7:
    if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))return sub_207F01914(*(_QWORD *)(v6 + 8), a2, a3);
LABEL_9:
    abort();
  }
  v6 = *(_QWORD *)(v5 + 32);
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7)
    goto LABEL_7;
  return sub_207F01914(v7, a2, a3);
}

unint64_t sub_207F0EFC4(uint64_t a1, const void *a2, size_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 202, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      goto LABEL_9;
    }
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 32);
    v7 = *(_QWORD *)(v6 + 8);
    if (v7)
      return sub_207F01914(v7, a2, a3);
LABEL_7:
    if (!sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/NamedContext.cpp", 742, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))return sub_207F01914(*(_QWORD *)(v6 + 8), a2, a3);
LABEL_9:
    abort();
  }
  v6 = *(_QWORD *)(v5 + 32);
  v7 = *(_QWORD *)(v6 + 8);
  if (!v7)
    goto LABEL_7;
  return sub_207F01914(v7, a2, a3);
}

uint64_t sub_207F0F0A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 202, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 16);
  }
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(**(_QWORD **)(v5 + 32) + 64))(*(_QWORD *)(v5 + 32), a2, a3);
}

uint64_t sub_207F0F128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a1 + 8);
  if (!v5)
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 202, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    v5 = *(_QWORD *)(a1 + 8);
  }
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(**(_QWORD **)(v5 + 32) + 64))(*(_QWORD *)(v5 + 32), a2, a3);
}

uint64_t sub_207F0F1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  std::mutex *v6;
  _QWORD *v7;
  _QWORD *i;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/Visualization/src/VisualLogger.cpp", 206, (uint64_t)"p_", 2, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
    v4 = *(_QWORD *)(a1 + 16);
  }
  v5 = *(_QWORD *)(v4 + 64);
  v6 = (std::mutex *)(v5 + 32);
  std::mutex::lock((std::mutex *)(v5 + 32));
  v7 = *(_QWORD **)(v5 + 96);
  for (i = *(_QWORD **)(v5 + 104); v7 != i; v7 += 2)
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)*v7 + 16))(*v7, a2);
  std::mutex::unlock(v6);
  return a1;
}

void sub_207F0F268(_Unwind_Exception *a1)
{
  std::mutex *v1;

  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void sub_207F0F280(uint64_t a1)
{
  void *v1;

  v1 = (void *)sub_207F0F334(a1);
  operator delete(v1);
}

uint64_t sub_207F0F294(uint64_t a1)
{
  return sub_207F0F334(a1 - 8);
}

void sub_207F0F29C(uint64_t a1)
{
  void *v1;

  v1 = (void *)sub_207F0F334(a1 - 8);
  operator delete(v1);
}

void sub_207F0F2B4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24C079B78;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_207F0F2C4(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24C079B78;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_207F0F2E4(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

void sub_207F0F2F4(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)off_24C079BC8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_207F0F304(std::__shared_weak_count *a1)
{
  void *v1;

  a1->__vftable = (std::__shared_weak_count_vtbl *)off_24C079BC8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

uint64_t sub_207F0F324(uint64_t a1)
{
  return (**(uint64_t (***)(uint64_t))(a1 + 24))(a1 + 24);
}

uint64_t sub_207F0F334(uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  std::__shared_weak_count *v8;

  *(_QWORD *)a1 = off_24C079A48;
  *(_QWORD *)(a1 + 8) = &unk_24C079AF0;
  if (*(_BYTE *)(a1 + 104) && *(char *)(a1 + 103) < 0)
  {
    operator delete(*(void **)(a1 + 80));
    v2 = *(std::__shared_weak_count **)(a1 + 72);
    if (!v2)
      goto LABEL_9;
  }
  else
  {
    v2 = *(std::__shared_weak_count **)(a1 + 72);
    if (!v2)
      goto LABEL_9;
  }
  p_shared_owners = (unint64_t *)&v2->__shared_owners_;
  do
    v4 = __ldaxr(p_shared_owners);
  while (__stlxr(v4 - 1, p_shared_owners));
  if (!v4)
  {
    ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
    std::__shared_weak_count::__release_weak(v2);
  }
LABEL_9:
  v5 = *(std::__shared_weak_count **)(a1 + 40);
  if (v5)
  {
    v6 = (unint64_t *)&v5->__shared_owners_;
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
      v8 = *(std::__shared_weak_count **)(a1 + 24);
      if (!v8)
        return a1;
      goto LABEL_14;
    }
  }
  v8 = *(std::__shared_weak_count **)(a1 + 24);
  if (v8)
LABEL_14:
    std::__shared_weak_count::__release_weak(v8);
  return a1;
}

_QWORD *sub_207F0F410@<X0>(_QWORD *a1@<X0>, void *a2@<X1>, unsigned int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  _QWORD *v9;
  unsigned __int8 v10;
  int v11;
  std::__shared_weak_count_vtbl *v12;
  CGImageSource *v13;
  std::__shared_weak_count *v14;
  std::__shared_weak_count *v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  unint64_t v18;
  std::__shared_weak_count_vtbl *ImageAtIndex;
  std::__shared_weak_count *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  std::__shared_weak_count *v28;
  unint64_t *v29;
  unint64_t v30;
  std::__shared_weak_count *v31;
  std::__shared_weak_count_vtbl *v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  _BYTE *v36;
  int v37;
  uint64_t v38;
  int v39;
  CGImageSourceRef v40;
  std::__shared_weak_count *v41;
  unint64_t *v42;
  unint64_t v43;
  uint64_t v44;
  int v45;
  __int16 v46;
  unint64_t v47;
  _BYTE *v48;
  int v49;
  uint64_t v50;
  unint64_t *v51;
  unint64_t v52;
  std::__shared_weak_count *v53;
  unint64_t *v54;
  unint64_t v55;
  std::__shared_weak_count *v56;
  unint64_t *v57;
  unint64_t v58;
  std::__shared_weak_count *v59;
  unint64_t *v60;
  unint64_t v61;
  std::__shared_weak_count *v62;
  unint64_t *v63;
  unint64_t v64;
  _QWORD *result;
  uint64_t v66;
  __int128 v67;
  void *v68[2];
  int v69;
  char v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  char v77;
  char v78;
  CGImageSourceRef isrc[2];
  __int128 __p;
  void (__cdecl *v81)(void *);
  uint64_t v82;
  void *v83[2];
  uint64_t v84;
  uint64_t v85;
  void *v86[2];
  uint64_t v87;
  char v88;
  char v89;
  char v90;
  __int128 v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  CGDataProviderSequentialCallbacks callbacks;
  unsigned __int8 v96;
  void *v97[2];
  uint64_t v98;
  uint64_t v99;
  void *v100[2];
  uint64_t v101;
  char v102;
  char v103;
  char v104;
  CGDataProviderRef provider[2];
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  std::__shared_weak_count_vtbl *v109;
  std::__shared_weak_count *v110;
  std::__shared_weak_count_vtbl *v111;
  std::__shared_weak_count *v112;
  __int128 v113;
  __int128 v114;
  char v115;
  char v116;
  void *v117;
  char v118;
  void *v119;
  char v120;
  char v121;
  char v122;
  char v123;
  int v124;
  _BYTE v125[24];
  _BYTE *v126;
  uint64_t v127;

  v127 = *MEMORY[0x24BDAC8D0];
  v9 = (_QWORD *)a1[3];
  if (v9)
  {
    if (v9 == a1)
    {
      v126 = v125;
      (*(void (**)(_QWORD *, _BYTE *))(*a1 + 24))(a1, v125);
    }
    else
    {
      v126 = (_BYTE *)(*(uint64_t (**)(_QWORD))(*v9 + 16))(a1[3]);
    }
  }
  else
  {
    v126 = 0;
  }
  v10 = std::istream::peek();
  sub_207F12D3C(a4, v10, (uint64_t)&v113);
  if (v123)
  {
    v11 = v113;
    *(_OWORD *)&callbacks.version = xmmword_24C0801D8;
    *(_OWORD *)&callbacks.skipForward = *(_OWORD *)off_24C0801E8;
    callbacks.releaseInfo = 0;
    v12 = (std::__shared_weak_count_vtbl *)CGDataProviderCreateSequential(a2, &callbacks);
    sub_20803C424(&v111, v12, 0);
    if ((v11 - 3) > 2)
    {
      sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/ImageIO/src/Apple.cpp", 157, (uint64_t)"", 0, (uint64_t)"Unsupported Format", 18, (void (*)(void **))sub_208216974);
      abort();
    }
    sub_207F1055C((std::__shared_weak_count_vtbl **)provider, (uint64_t)&v111);
    v13 = CGImageSourceCreateWithDataProvider(provider[0], 0);
    v14 = (std::__shared_weak_count *)operator new(0x20uLL);
    v15 = v14;
    v14->__shared_owners_ = 0;
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    v14->__vftable = (std::__shared_weak_count_vtbl *)&off_24C079C18;
    v14->__shared_weak_owners_ = 0;
    v14[1].__vftable = (std::__shared_weak_count_vtbl *)v13;
    isrc[0] = v13;
    isrc[1] = (CGImageSourceRef)v14;
    do
      v17 = __ldxr(p_shared_owners);
    while (__stxr(v17 + 1, p_shared_owners));
    do
      v18 = __ldaxr(p_shared_owners);
    while (__stlxr(v18 - 1, p_shared_owners));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
      std::__shared_weak_count::__release_weak(v15);
    }
    ImageAtIndex = (std::__shared_weak_count_vtbl *)CGImageSourceCreateImageAtIndex(isrc[0], 0, 0);
    *(_QWORD *)&v67 = ImageAtIndex;
    v20 = (std::__shared_weak_count *)operator new(0x20uLL);
    v20->__shared_owners_ = 0;
    v21 = (unint64_t *)&v20->__shared_owners_;
    v20->__vftable = (std::__shared_weak_count_vtbl *)&off_24C079CC8;
    v20->__shared_weak_owners_ = 0;
    v20[1].__vftable = ImageAtIndex;
    *((_QWORD *)&v67 + 1) = v20;
    *(_QWORD *)&callbacks.version = ImageAtIndex;
    callbacks.getBytes = (CGDataProviderGetBytesCallback)v20;
    do
      v22 = __ldxr(v21);
    while (__stxr(v22 + 1, v21));
    sub_20803C704(&v109, ImageAtIndex, 1);
    do
      v23 = __ldaxr(v21);
    while (__stlxr(v23 - 1, v21));
    if (!v23)
    {
      ((void (*)(std::__shared_weak_count *))v20->__on_zero_shared)(v20);
      std::__shared_weak_count::__release_weak(v20);
    }
    if (*((_QWORD *)&v67 + 1))
    {
      v24 = (unint64_t *)(*((_QWORD *)&v67 + 1) + 8);
      do
        v25 = __ldaxr(v24);
      while (__stlxr(v25 - 1, v24));
      if (!v25)
      {
        (*(void (**)(_QWORD))(**((_QWORD **)&v67 + 1) + 16))(*((_QWORD *)&v67 + 1));
        std::__shared_weak_count::__release_weak(*((std::__shared_weak_count **)&v67 + 1));
      }
    }
    if (isrc[1])
    {
      v26 = (unint64_t *)((char *)isrc[1] + 8);
      do
        v27 = __ldaxr(v26);
      while (__stlxr(v27 - 1, v26));
      if (!v27)
      {
        (*(void (**)(CGImageSourceRef))(*(_QWORD *)isrc[1] + 16))(isrc[1]);
        std::__shared_weak_count::__release_weak((std::__shared_weak_count *)isrc[1]);
      }
    }
    v28 = (std::__shared_weak_count *)provider[1];
    if (!provider[1])
      goto LABEL_33;
    v29 = (unint64_t *)((char *)provider[1] + 8);
    do
      v30 = __ldaxr(v29);
    while (__stlxr(v30 - 1, v29));
    if (!v30)
    {
      ((void (*)(std::__shared_weak_count *))v28->__on_zero_shared)(v28);
      std::__shared_weak_count::__release_weak(v28);
      v32 = v109;
      v31 = v110;
      if (!v110)
        goto LABEL_38;
    }
    else
    {
LABEL_33:
      v32 = v109;
      v31 = v110;
      if (!v110)
        goto LABEL_38;
    }
    v33 = (unint64_t *)&v31->__shared_owners_;
    do
      v34 = __ldxr(v33);
    while (__stxr(v34 + 1, v33));
    do
      v35 = __ldaxr(v33);
    while (__stlxr(v35 - 1, v33));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v31->__on_zero_shared)(v31);
      std::__shared_weak_count::__release_weak(v31);
      if (v32)
        goto LABEL_53;
      goto LABEL_39;
    }
LABEL_38:
    if (v32)
      goto LABEL_53;
LABEL_39:
    if (sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/ImageIO/src/Apple.cpp", 160, (uint64_t)"cg_image.IsValid()", 18, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
    {
      abort();
    }
LABEL_53:
    sub_20803C9F0((uint64_t)&v109, (uint64_t)provider);
    v91 = *(_OWORD *)provider;
    v92 = v106;
    if (SHIBYTE(v108) < 0)
    {
      sub_207CA40D8(&v93, (void *)v107, *((unint64_t *)&v107 + 1));
    }
    else
    {
      v93 = v107;
      v94 = v108;
    }
    if (a3)
    {
      switch(v11)
      {
        case 3:
          if (a3 >= 3 && (a3 & 0xFFFFFFF7) - 21 >= 2)
            goto LABEL_70;
          break;
        case 5:
          if (a3 > 0x20 || ((1 << a3) & 0x1E1E0001ELL) == 0)
            goto LABEL_70;
          break;
        case 4:
          if (a3 != 1 && a3 != 21)
          {
LABEL_70:
            sub_207F12994(a3, v11, (uint64_t)isrc);
            *(_OWORD *)&callbacks.version = *(_OWORD *)isrc;
            LOBYTE(callbacks.skipForward) = 0;
            v103 = 0;
            if (v89)
            {
              v96 = 0;
              v39 = v82;
              if (!(_BYTE)v82)
                goto LABEL_79;
LABEL_78:
              *(_OWORD *)&callbacks.skipForward = __p;
              callbacks.releaseInfo = v81;
              v81 = 0;
              __p = 0uLL;
              v96 = 1;
LABEL_79:
              LOBYTE(v97[0]) = 0;
              v102 = 0;
              if (v88)
              {
                v98 = v84;
                *(_OWORD *)v97 = *(_OWORD *)v83;
                v83[0] = 0;
                v83[1] = 0;
                v99 = v85;
                *(_OWORD *)v100 = *(_OWORD *)v86;
                v101 = v87;
                v84 = 0;
                v86[0] = 0;
                v86[1] = 0;
                v87 = 0;
                v102 = 1;
              }
              v103 = 1;
              v104 = 0;
              if (v39 && SHIBYTE(v81) < 0)
                operator delete((void *)__p);
              if ((SHIBYTE(v94) & 0x80000000) == 0)
              {
LABEL_85:
                if (v104)
                {
LABEL_86:
                  if (!BYTE4(provider[0])
                    && sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/ImageIO/src/Apple.cpp", 172, (uint64_t)"compat.format.has_value()", 25, (uint64_t)"", 0, (void (*)(void **))sub_208216974))
                  {
                    abort();
                  }
                  *(_QWORD *)&v67 = sub_20803C818((uint64_t)&v109);
                  v124 = (int)provider[0];
                  if (!v126)
                    sub_207CA408C();
                  (*(void (**)(CGImageSourceRef *__return_ptr, _BYTE *, __int128 *, int *))(*(_QWORD *)v126 + 48))(isrc, v126, &v67, &v124);
                  if (v90)
                  {
                    *(_QWORD *)&v67 = off_24C06F140;
                    v40 = isrc[1];
                    v41 = (std::__shared_weak_count *)__p;
                    if ((_QWORD)__p)
                    {
                      v42 = (unint64_t *)(__p + 8);
                      do
                        v43 = __ldxr(v42);
                      while (__stxr(v43 + 1, v42));
                      v44 = v82;
                      v45 = (int)v83[0];
                      v46 = WORD2(v83[0]);
                      do
                        v47 = __ldxr(v42);
                      while (__stxr(v47 + 1, v42));
                    }
                    else
                    {
                      v44 = v82;
                      v45 = (int)v83[0];
                      v46 = WORD2(v83[0]);
                    }
                    *((_QWORD *)&v67 + 1) = v40;
                    v68[0] = v41;
                    v68[1] = *((void **)&__p + 1);
                    v69 = (int)v81;
                    v71 = v44;
                    LODWORD(v72) = v45;
                    WORD2(v72) = v46;
                    if (v41)
                    {
                      v51 = (unint64_t *)&v41->__shared_owners_;
                      do
                        v52 = __ldaxr(v51);
                      while (__stlxr(v52 - 1, v51));
                      if (!v52)
                      {
                        ((void (*)(std::__shared_weak_count *))v41->__on_zero_shared)(v41);
                        std::__shared_weak_count::__release_weak(v41);
                      }
                    }
                    sub_20803EA84(&v109, &v67);
                    v53 = (std::__shared_weak_count *)v68[0];
                    if (v68[0])
                    {
                      v54 = (unint64_t *)((char *)v68[0] + 8);
                      do
                        v55 = __ldaxr(v54);
                      while (__stlxr(v55 - 1, v54));
                      if (!v55)
                      {
                        ((void (*)(std::__shared_weak_count *))v53->__on_zero_shared)(v53);
                        std::__shared_weak_count::__release_weak(v53);
                      }
                    }
                    *(_BYTE *)(a5 + 120) = 1;
                  }
                  else
                  {
                    v67 = *(_OWORD *)isrc;
                    v48 = sub_207CCB3BC(v68, &__p);
                    *(_OWORD *)a5 = v67;
                    *(_BYTE *)(a5 + 16) = 0;
                    *(_BYTE *)(a5 + 112) = 0;
                    if (!v78)
                    {
                      *(_BYTE *)(a5 + 120) = 0;
                      if (v90)
                        goto LABEL_121;
                      goto LABEL_127;
                    }
                    *(_BYTE *)(a5 + 40) = 0;
                    v49 = v71;
                    if ((_BYTE)v71)
                    {
                      *(_OWORD *)(a5 + 16) = *(_OWORD *)v48;
                      *(_QWORD *)(a5 + 32) = *((_QWORD *)v48 + 2);
                      *((_QWORD *)v48 + 1) = 0;
                      *((_QWORD *)v48 + 2) = 0;
                      *(_QWORD *)v48 = 0;
                      *(_BYTE *)(a5 + 40) = 1;
                    }
                    *(_BYTE *)(a5 + 48) = 0;
                    *(_BYTE *)(a5 + 104) = 0;
                    if (v77)
                    {
                      v50 = v74;
                      *(_QWORD *)(a5 + 64) = v73;
                      *(_OWORD *)(a5 + 48) = v72;
                      v72 = 0uLL;
                      *(_QWORD *)(a5 + 72) = v50;
                      *(_OWORD *)(a5 + 80) = v75;
                      *(_QWORD *)(a5 + 96) = v76;
                      v73 = 0;
                      v75 = 0uLL;
                      v76 = 0;
                      *(_BYTE *)(a5 + 104) = 1;
                    }
                    *(_BYTE *)(a5 + 112) = 1;
                    *(_BYTE *)(a5 + 120) = 0;
                    if (v49 && v70 < 0)
                    {
                      operator delete(v68[0]);
                      if (v90)
                      {
LABEL_121:
                        v56 = (std::__shared_weak_count *)__p;
                        if ((_QWORD)__p)
                        {
                          v57 = (unint64_t *)(__p + 8);
                          do
                            v58 = __ldaxr(v57);
                          while (__stlxr(v58 - 1, v57));
                          if (!v58)
                          {
                            ((void (*)(std::__shared_weak_count *))v56->__on_zero_shared)(v56);
                            std::__shared_weak_count::__release_weak(v56);
                          }
                        }
                        goto LABEL_136;
                      }
LABEL_127:
                      if (v89)
                      {
                        if (v88)
                        {
                          if (SHIBYTE(v87) < 0)
                            operator delete(v86[0]);
                          if (SHIBYTE(v84) < 0)
                            operator delete(v83[0]);
                        }
                        if ((_BYTE)v82 && SHIBYTE(v81) < 0)
                          operator delete((void *)__p);
                      }
LABEL_136:
                      if (!v104 && v103)
                      {
                        if (v102)
                        {
                          if (SHIBYTE(v101) < 0)
                            operator delete(v100[0]);
                          if (SHIBYTE(v98) < 0)
                            operator delete(v97[0]);
                        }
                        if (v96 && SHIBYTE(callbacks.releaseInfo) < 0)
                          operator delete(callbacks.skipForward);
                      }
                      if (SHIBYTE(v108) < 0)
                        operator delete((void *)v107);
                      v59 = v110;
                      if (!v110)
                        goto LABEL_143;
                      v60 = (unint64_t *)&v110->__shared_owners_;
                      do
                        v61 = __ldaxr(v60);
                      while (__stlxr(v61 - 1, v60));
                      if (!v61)
                      {
                        ((void (*)(std::__shared_weak_count *))v59->__on_zero_shared)(v59);
                        std::__shared_weak_count::__release_weak(v59);
                        v62 = v112;
                        if (v112)
                          goto LABEL_144;
                      }
                      else
                      {
LABEL_143:
                        v62 = v112;
                        if (v112)
                        {
LABEL_144:
                          v63 = (unint64_t *)&v62->__shared_owners_;
                          do
                            v64 = __ldaxr(v63);
                          while (__stlxr(v64 - 1, v63));
                          if (!v64)
                          {
                            ((void (*)(std::__shared_weak_count *))v62->__on_zero_shared)(v62);
                            std::__shared_weak_count::__release_weak(v62);
                            if (v123)
                              goto LABEL_148;
                            goto LABEL_166;
                          }
                        }
                      }
LABEL_147:
                      if (v123)
                        goto LABEL_148;
                      goto LABEL_166;
                    }
                  }
                  if (v90)
                    goto LABEL_121;
                  goto LABEL_127;
                }
LABEL_107:
                *(_BYTE *)(a5 + 120) = 0;
                *(_OWORD *)a5 = *(_OWORD *)&callbacks.version;
                sub_207CCB3BC((_BYTE *)(a5 + 16), (__int128 *)&callbacks.skipForward);
                goto LABEL_136;
              }
LABEL_106:
              operator delete((void *)v93);
              if (v104)
                goto LABEL_86;
              goto LABEL_107;
            }
            goto LABEL_105;
          }
          break;
        default:
          sub_208216178("/Library/Caches/com.apple.xbs/Sources/AppC3D/library/Kit/ImageIO/src/Apple.cpp", 118, (uint64_t)"", 0, (uint64_t)"should not be reached", 21, (void (*)(void **))sub_208216974);
          abort();
      }
      if ((_DWORD)v91 != a3)
      {
        sub_207F1267C(a3, v91, (uint64_t)isrc);
        *(_OWORD *)&callbacks.version = *(_OWORD *)isrc;
        LOBYTE(callbacks.skipForward) = 0;
        v103 = 0;
        if (v89)
        {
          v96 = 0;
          v39 = v82;
          if (!(_BYTE)v82)
            goto LABEL_79;
          goto LABEL_78;
        }
LABEL_105:
        v104 = 0;
        if ((SHIBYTE(v94) & 0x80000000) == 0)
          goto LABEL_85;
        goto LABEL_106;
      }
    }
    v104 = 1;
    if ((SHIBYTE(v94) & 0x80000000) == 0)
      goto LABEL_85;
    goto LABEL_106;
  }
  *(_OWORD *)&callbacks.version = v113;
  v36 = sub_207CCB3BC(&callbacks.skipForward, &v114);
  *(_OWORD *)a5 = *(_OWORD *)&callbacks.version;
  *(_BYTE *)(a5 + 16) = 0;
  *(_BYTE *)(a5 + 112) = 0;
  if (v103)
  {
    *(_BYTE *)(a5 + 40) = 0;
    v37 = v96;
    if (v96)
    {
      *(_OWORD *)(a5 + 16) = *(_OWORD *)v36;
      *(_QWORD *)(a5 + 32) = *((_QWORD *)v36 + 2);
      *((_QWORD *)v36 + 1) = 0;
      *((_QWORD *)v36 + 2) = 0;
      *(_QWORD *)v36 = 0;
      *(_BYTE *)(a5 + 40) = 1;
    }
    *(_BYTE *)(a5 + 48) = 0;
    *(_BYTE *)(a5 + 104) = 0;
    if (v102)
    {
      v38 = v99;
      *(_QWORD *)(a5 + 64) = v98;
      *(_OWORD *)(a5 + 48) = *(_OWORD *)v97;
      v97[0] = 0;
      v97[1] = 0;
      *(_QWORD *)(a5 + 72) = v38;
      *(_OWORD *)(a5 + 80) = *(_OWORD *)v100;
      *(_QWORD *)(a5 + 96) = v101;
      v98 = 0;
      v100[0] = 0;
      v100[1] = 0;
      v101 = 0;
      *(_BYTE *)(a5 + 104) = 1;
    }
    *(_BYTE *)(a5 + 112) = 1;
    *(_BYTE *)(a5 + 120) = 0;
    if (!v37 || (SHIBYTE(callbacks.releaseInfo) & 0x80000000) == 0)
      goto LABEL_147;
    operator delete(callbacks.skipForward);
    if (v123)
      goto LABEL_148;
  }
  else
  {
    *(_BYTE *)(a5 + 120) = 0;
    if (v123)
      goto LABEL_148;
  }
LABEL_166:
  if (v122)
  {
    if (v121)
    {
      if (v120 < 0)
        operator delete(v119);
      if (v118 < 0)
        operator delete(v117);
    }
    if (v116)
    {
      if (v115 < 0)
        operator delete((void *)v114);
    }
  }
LABEL_148:
  result = v126;
  if (v126 == v125)
  {
    v66 = 4;
    result = v125;
  }
  else
  {
    if (!v126)
      return result;
    v66 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v66))();
}

void sub_207F0FF8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  void *__p;
  char a71;
  char a72;
  uint64_t v72;
  uint64_t v74;

  sub_207E1760C((uint64_t)&a25);
  sub_207D04458((uint64_t)&a47);
  if (a71 < 0)
    operator delete(__p);
  sub_207C99D78((uint64_t)&a72);
  sub_207C99D78(v72 - 256);
  sub_207D04458(v72 - 240);
  v74 = *(_QWORD *)(v72 - 80);
  if (v74 == v72 - 104)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(v72 - 104) + 32))(v72 - 104);
    _Unwind_Resume(a1);
  }
  if (!v74)
    _Unwind_Resume(a1);
  (*(void (**)(uint64_t))(*(_QWORD *)v74 + 40))(v74);
  _Unwind_Resume(a1);
}

void sub_207F0FFBC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *__p,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  if (a49 < 0)
    operator delete(__p);
  JUMPOUT(0x207F100A0);
}

void sub_207F0FFD4()
{
  JUMPOUT(0x207F100B0);
}

void sub_207F0FFE0()
{
  JUMPOUT(0x207F100B0);
}

void sub_207F0FFE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  uint64_t v63;

  sub_207C99D78((uint64_t)&a47);
  sub_207C99D78((uint64_t)&a9);
  sub_207C99D78((uint64_t)&a25);
  sub_207C99D78((uint64_t)&a63);
  sub_207C99D78(v63 - 256);
  sub_207D04458(v63 - 240);
  if (*(_QWORD *)(v63 - 80) == v63 - 104)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(v63 - 104) + 32))(v63 - 104);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x207F10130);
}

void sub_207F10044(void *a1, int a2)
{
  const void *v2;

  if (a2)
  {
    __cxa_begin_catch(a1);
    if (v2)
      CFRelease(v2);
    __cxa_rethrow();
  }
  JUMPOUT(0x207F10134);
}

void sub_207F10068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  __cxa_end_catch();
  sub_207C99D78((uint64_t)&a63);
  JUMPOUT(0x207F100C0);
}

void sub_207F100FC(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_207D04458(v1 - 240);
  v3 = *(_QWORD *)(v1 - 80);
  if (v3 != v1 - 104)
  {
    if (!v3)
      _Unwind_Resume(a1);
    (*(void (**)(uint64_t))(*(_QWORD *)v3 + 40))(v3);
    _Unwind_Resume(a1);
  }
  JUMPOUT(0x207F100E0);
}

void sub_207F1011C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 - 80) != v0 - 104)
    JUMPOUT(0x207F10130);
  JUMPOUT(0x207F100E0);
}

void sub_207F10154(char *info@<X1>, uint64_t a2@<X0>, int a3@<W2>, uint64_t a4@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *v7;
  unint64_t v8;
  _BYTE *v9;
  int v10;
  uint64_t v11;
  std::__shared_weak_count *v12;
  unint64_t *v13;
  unint64_t v14;
  __int128 v15;
  void *__p;
  char v17;
  unsigned __int8 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  char v24;
  char v25;
  __int128 v26;
  __int128 v27;
  char v28;
  char v29;
  void *v30;
  char v31;
  void *v32;
  char v33;
  char v34;
  char v35;
  char v36;

  sub_207F14BF0(info, a3, (uint64_t)&v26);
  if (!v36)
  {
    v15 = v26;
    v9 = sub_207CCB3BC(&__p, &v27);
    *(_OWORD *)a4 = v15;
    *(_BYTE *)(a4 + 16) = 0;
    *(_BYTE *)(a4 + 112) = 0;
    if (!v25)
    {
      *(_BYTE *)(a4 + 120) = 0;
      if (!v36)
        goto LABEL_24;
      goto LABEL_17;
    }
    *(_BYTE *)(a4 + 40) = 0;
    v10 = v18;
    if (v18)
    {
      *(_OWORD *)(a4 + 16) = *(_OWORD *)v9;
      *(_QWORD *)(a4 + 32) = *((_QWORD *)v9 + 2);
      *((_QWORD *)v9 + 1) = 0;
      *((_QWORD *)v9 + 2) = 0;
      *(_QWORD *)v9 = 0;
      *(_BYTE *)(a4 + 40) = 1;
    }
    *(_BYTE *)(a4 + 48) = 0;
    *(_BYTE *)(a4 + 104) = 0;
    if (v24)
    {
      v11 = v21;
      *(_QWORD *)(a4 + 64) = v20;
      *(_OWORD *)(a4 + 48) = v19;
      v19 = 0uLL;
      *(_QWORD *)(a4 + 72) = v11;
      *(_OWORD *)(a4 + 80) = v22;
      *(_QWORD *)(a4 + 96) = v23;
      v20 = 0;
      v22 = 0uLL;
      v23 = 0;
      *(_BYTE *)(a4 + 104) = 1;
    }
    *(_BYTE *)(a4 + 112) = 1;
    *(_BYTE *)(a4 + 120) = 0;
    if (v10 && v17 < 0)
      operator delete(__p);
LABEL_16:
    if (!v36)
      goto LABEL_24;
    goto LABEL_17;
  }
  sub_207F11E84((std::__shared_weak_count_vtbl **)&v15, (std::__shared_weak_count_vtbl *)v26, *((std::__shared_weak_count **)&v26 + 1));
  sub_207F10CFC(a4, a2, (uint64_t)&v15);
  v6 = (std::__shared_weak_count *)*((_QWORD *)&v15 + 1);
  if (!*((_QWORD *)&v15 + 1))
    goto LABEL_16;
  v7 = (unint64_t *)(*((_QWORD *)&v15 + 1) + 8);
  do
    v8 = __ldaxr(v7);
  while (__stlxr(v8 - 1, v7));
  if (v8)
    goto LABEL_16;
  ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
  std::__shared_weak_count::__release_weak(v6);
  if (!v36)
  {
LABEL_24:
    if (v35)
    {
      if (v34)
      {
        if (v33 < 0)
          operator delete(v32);
        if (v31 < 0)
          operator delete(v30);
      }
      if (v29)
      {
        if (v28 < 0)
          operator delete((void *)v27);
      }
    }
    return;
  }
LABEL_17:
  v12 = (std::__shared_weak_count *)*((_QWORD *)&v26 + 1);
  if (*((_QWORD *)&v26 + 1))
  {
    v13 = (unint64_t *)(*((_QWORD *)&v26 + 1) + 8);
    do
      v14 = __ldaxr(v13);
    while (__stlxr(v14 - 1, v13));
    if (!v14)
    {
      ((void (*)(std::__shared_weak_count *))v12->__on_zero_shared)(v12);
      std::__shared_weak_count::__release_weak(v12);
    }
  }
}

void sub_207F1038C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,char a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,uint64_t a40,void *__p,uint64_t a42,int a43,__int16 a44,char a45,char a46,char a47,int a48,__int16 a49,char a50,char a51,int a52,__int16 a53,char a54,char a55)
{
  if (!(_BYTE)a53)
  {
    if ((_BYTE)a49)
    {
      if (a47)
      {
        if (a46 < 0)
          operator delete(__p);
        if (a39 < 0)
          operator delete(a34);
      }
      if (a33)
      {
        if (a32 < 0)
          operator delete(a27);
      }
    }
    _Unwind_Resume(exception_object);
  }
  sub_207C99D78((uint64_t)&a25);
  _Unwind_Resume(exception_object);
}

void sub_207F10410(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_207F10424(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_207F10444(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP13CGImageSourceEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP13CGImageSourceEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP13CGImageSourceEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP13CGImageSourceEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_207F104B8(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_207F104CC(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_207F104EC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP7CGImageEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP7CGImageEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP7CGImageEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP7CGImageEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

std::__shared_weak_count_vtbl **sub_207F1055C(std::__shared_weak_count_vtbl **a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count_vtbl *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v15;

  v4 = *(std::__shared_weak_count_vtbl **)a2;
  v3 = *(std::__shared_weak_count **)(a2 + 8);
  v15 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  if (v4)
    CFRetain(v4);
  v7 = (std::__shared_weak_count *)operator new(0x20uLL);
  v8 = v7;
  v7->__shared_owners_ = 0;
  v9 = (unint64_t *)&v7->__shared_owners_;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_24C079D18;
  v7->__shared_weak_owners_ = 0;
  v7[1].__vftable = v4;
  *a1 = v4;
  a1[1] = (std::__shared_weak_count_vtbl *)v7;
  do
    v10 = __ldxr(v9);
  while (__stxr(v10 + 1, v9));
  do
    v11 = __ldaxr(v9);
  while (__stlxr(v11 - 1, v9));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v8);
  }
  if (!v15)
    return a1;
  v12 = (unint64_t *)&v15->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (v13)
    return a1;
  ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
  std::__shared_weak_count::__release_weak(v15);
  return a1;
}

void sub_207F1066C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207C99D78((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207F10680(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_207F10698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  __cxa_end_catch();
  sub_207C99D78((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207F106B8(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_207F106CC(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_207F106EC(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP14CGDataProviderEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP14CGDataProviderEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP14CGDataProviderEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP14CGDataProviderEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

void sub_207F1075C(unsigned int a1@<W0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  int v5;
  uint64_t v6;
  void *v7[2];
  char v8;
  char v9;
  void *v10;
  char v11;
  void *v12;
  char v13;
  char v14;
  char v15;
  __int128 v16;
  __int128 __p;
  uint64_t v18;
  unsigned __int8 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  char v25;
  char v26;

  sub_207CCB3BC(v7, a2);
  sub_207F108D4((uint64_t)&v16, a1, (__int128 *)v7);
  *(_OWORD *)a3 = v16;
  *(_BYTE *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 112) = 0;
  if (v26)
  {
    *(_BYTE *)(a3 + 40) = 0;
    v5 = v19;
    if (v19)
    {
      *(_OWORD *)(a3 + 16) = __p;
      *(_QWORD *)(a3 + 32) = v18;
      v18 = 0;
      __p = 0uLL;
      *(_BYTE *)(a3 + 40) = 1;
    }
    *(_BYTE *)(a3 + 48) = 0;
    *(_BYTE *)(a3 + 104) = 0;
    if (v25)
    {
      v6 = v22;
      *(_QWORD *)(a3 + 64) = v21;
      *(_OWORD *)(a3 + 48) = v20;
      v20 = 0uLL;
      *(_QWORD *)(a3 + 72) = v6;
      *(_OWORD *)(a3 + 80) = v23;
      *(_QWORD *)(a3 + 96) = v24;
      v21 = 0;
      v23 = 0uLL;
      v24 = 0;
      *(_BYTE *)(a3 + 104) = 1;
    }
    *(_BYTE *)(a3 + 112) = 1;
    if (v5 && SHIBYTE(v18) < 0)
      operator delete((void *)__p);
  }
  if (v15)
  {
    if (!v14)
      goto LABEL_13;
    if (v13 < 0)
    {
      operator delete(v12);
      if ((v11 & 0x80000000) == 0)
      {
LABEL_13:
        if (!v9)
          return;
        goto LABEL_14;
      }
    }
    else if ((v11 & 0x80000000) == 0)
    {
      goto LABEL_13;
    }
    operator delete(v10);
    if (!v9)
      return;
LABEL_14:
    if (v8 < 0)
      operator delete(v7[0]);
  }
}

void sub_207F108C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207CCB148((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_207F108D4(uint64_t a1, unsigned int a2, __int128 *a3)
{
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;
  int v8;
  unsigned int v9;
  __int128 *v10;
  void *__dst[2];
  uint64_t v12;
  char v13;
  void *v14[2];
  uint64_t v15;
  uint64_t v16;
  void *__p[2];
  uint64_t v18;
  char v19;
  char v20;

  v4 = atomic_load((unsigned __int8 *)&qword_254530920);
  if ((v4 & 1) == 0)
  {
    v10 = a3;
    v9 = a2;
    v8 = __cxa_guard_acquire(&qword_254530920);
    a2 = v9;
    a3 = v10;
    if (v8)
    {
      __cxa_atexit((void (*)(void *))std::error_category::~error_category, &off_253E50C60, &dword_207C77000);
      __cxa_guard_release(&qword_254530920);
      a2 = v9;
      a3 = v10;
    }
  }
  v5 = a2;
  sub_207CCB3BC(__dst, a3);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = &off_253E50C60;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (!v20)
    return a1;
  *(_BYTE *)(a1 + 40) = 0;
  if (v13)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)__dst;
    *(_QWORD *)(a1 + 32) = v12;
    __dst[1] = 0;
    v12 = 0;
    __dst[0] = 0;
    *(_BYTE *)(a1 + 40) = 1;
  }
  *(_BYTE *)(a1 + 48) = 0;
  *(_BYTE *)(a1 + 104) = 0;
  if (!v19)
  {
    *(_BYTE *)(a1 + 112) = 1;
    if (!v13)
      return a1;
    goto LABEL_14;
  }
  v6 = v16;
  *(_QWORD *)(a1 + 64) = v15;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v14;
  v14[0] = 0;
  v14[1] = 0;
  *(_QWORD *)(a1 + 72) = v6;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)__p;
  *(_QWORD *)(a1 + 96) = v18;
  __p[1] = 0;
  v18 = 0;
  v15 = 0;
  __p[0] = 0;
  *(_BYTE *)(a1 + 104) = 1;
  *(_BYTE *)(a1 + 112) = 1;
  if ((SHIBYTE(v18) & 0x80000000) == 0)
  {
    if ((SHIBYTE(v15) & 0x80000000) == 0)
      goto LABEL_8;
LABEL_13:
    operator delete(v14[0]);
    if (!v13)
      return a1;
    goto LABEL_14;
  }
  operator delete(__p[0]);
  if (SHIBYTE(v15) < 0)
    goto LABEL_13;
LABEL_8:
  if (!v13)
    return a1;
LABEL_14:
  if ((SHIBYTE(v12) & 0x80000000) == 0)
    return a1;
  operator delete(__dst[0]);
  return a1;
}

void sub_207F10A80(uint64_t a1, uint64_t a2, int *a3)
{
  _OWORD *v5;
  int v6;
  size_t v7;
  void **v8;
  unint64_t v9;
  unint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *__dst[2];
  unint64_t v20;
  _QWORD v21[5];
  _QWORD *v22;

  v5 = operator new(0x118uLL);
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  v5[4] = 0u;
  v5[5] = 0u;
  v5[6] = 0u;
  v5[7] = 0u;
  v5[8] = 0u;
  v5[9] = 0u;
  v5[10] = 0u;
  v5[11] = 0u;
  v5[12] = 0u;
  v5[13] = 0u;
  v5[14] = 0u;
  v5[15] = 0u;
  v5[16] = 0u;
  *((_QWORD *)v5 + 34) = 0;
  sub_207CA2878((uint64_t)v5);
  v21[0] = v5;
  sub_207CBAB98((_QWORD *)v5 + 2, (uint64_t)(&off_24C079F08)[2 * *a3], (uint64_t)(&off_24C079F08)[2 * *a3 + 1]);
  v6 = *((_DWORD *)v5 + 30);
  if ((v6 & 0x10) != 0)
  {
    v9 = *((_QWORD *)v5 + 14);
    v10 = *((_QWORD *)v5 + 9);
    if (v9 < v10)
    {
      *((_QWORD *)v5 + 14) = v10;
      v9 = v10;
    }
    v11 = (const void *)*((_QWORD *)v5 + 8);
    v7 = v9 - (_QWORD)v11;
    if (v9 - (unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_22;
  }
  else
  {
    if ((v6 & 8) == 0)
    {
      v7 = 0;
      HIBYTE(v20) = 0;
      v8 = __dst;
      goto LABEL_14;
    }
    v11 = (const void *)*((_QWORD *)v5 + 5);
    v7 = *((_QWORD *)v5 + 7) - (_QWORD)v11;
    if (v7 >= 0x7FFFFFFFFFFFFFF8)
LABEL_22:
      sub_207C95C50();
  }
  if (v7 >= 0x17)
  {
    v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v12 = v7 | 7;
    v13 = v12 + 1;
    v8 = (void **)operator new(v12 + 1);
    __dst[1] = (void *)v7;
    v20 = v13 | 0x8000000000000000;
    __dst[0] = v8;
    goto LABEL_13;
  }
  HIBYTE(v20) = v7;
  v8 = __dst;
  if (v7)
LABEL_13:
    memmove(v8, v11, v7);
LABEL_14:
  *((_BYTE *)v8 + v7) = 0;
  v14 = v21[0];
  if (v21[0])
  {
    v15 = MEMORY[0x24BEDB7F0];
    v16 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v21[0] = *MEMORY[0x24BEDB7F0];
    v17 = *(_QWORD *)(v15 + 72);
    *(_QWORD *)(v14 + *(_QWORD *)(v16 - 24)) = *(_QWORD *)(v15 + 64);
    *(_QWORD *)(v14 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v14 + 16) = v17;
    if (*(char *)(v14 + 111) < 0)
      operator delete(*(void **)(v14 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD027B8](v14 + 128);
    operator delete((void *)v14);
  }
  v21[0] = a2;
  v21[1] = __dst;
  v21[2] = a2;
  v21[3] = __dst;
  v21[4] = __dst;
  v18 = *(unsigned int *)(a2 + 24);
  if ((_DWORD)v18 == -1)
    sub_207CA9F48();
  v22 = v21;
  ((void (*)(_QWORD **, uint64_t))off_24C079C70[v18])(&v22, a2);
  if (SHIBYTE(v20) < 0)
    operator delete(__dst[0]);
}

void sub_207F10CC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  void *v15;

  operator delete(v15);
  _Unwind_Resume(a1);
}

void sub_207F10CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_2082155DC((void **)va);
  _Unwind_Resume(a1);
}

void sub_207F10CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  std::__shared_weak_count *v6;
  CGImageDestinationRef v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  std::__shared_weak_count *v14;
  unint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  std::__shared_weak_count *v18;
  unint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  std::__shared_weak_count *v23;
  uint64_t v24;
  int v25;
  __int16 v26;
  int v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t *v32;
  unint64_t v33;
  std::__shared_weak_count *v34;
  unint64_t *v35;
  unint64_t v36;
  BOOL v37;
  BOOL v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  void *v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  std::__shared_weak_count *v47;
  unint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  void *v51[2];
  char v52;
  char v53;
  void *v54;
  char v55;
  void *v56;
  char v57;
  char v58;
  char v59;
  CGImageRef image;
  std::__shared_weak_count *v61;
  void *v62[2];
  uint64_t v63;
  void *__dst[2];
  uint64_t v65;
  char v66;
  void *v67;
  char v68;
  void *v69;
  char v70;
  char v71;
  char v72;
  unsigned int v73;
  _QWORD v74[2];
  char v75;
  char v76;
  void *v77;
  char v78;
  void *__p;
  char v80;
  char v81;
  char v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  char v92;
  char v93;
  char v94;
  unsigned int v95[6];
  int v96;
  unsigned int *v97;
  const char *v98;
  unsigned int *v99;
  const char *v100;
  const char *v101;
  unsigned int **v102;

  v7 = *(CGImageDestinationRef *)a3;
  v6 = *(std::__shared_weak_count **)(a3 + 8);
  if (!v6)
    goto LABEL_6;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  do
    v9 = __ldxr(p_shared_owners);
  while (__stxr(v9 + 1, p_shared_owners));
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
    if (v7)
      goto LABEL_7;
  }
  else
  {
LABEL_6:
    if (v7)
    {
LABEL_7:
      v73 = *(_DWORD *)(a2 + 48);
      v11 = (char *)&v89;
      v12 = v73 - 1;
      if (v73 - 1 <= 0x27 && ((0xF1F1F0000FuLL >> v12) & 1) != 0)
        v11 = (char *)&v83 + 4 * qword_20823DE60[v12];
      if (v11 - (char *)&v83 == 72)
      {
        v96 = 0;
        sub_207F11630(v95, "Invalid image format. Format ");
        sub_207CA9DFC((uint64_t)&v94, v95, &v73);
        v97 = v95;
        v98 = " can't be saved with CoreGraphics.";
        v99 = v95;
        v100 = " can't be saved with CoreGraphics.";
        v101 = " can't be saved with CoreGraphics.";
        if (v96 == -1)
          sub_207CA9F48();
        v102 = &v97;
        ((void (*)(unsigned int ***, unsigned int *))off_24C079CA0[v96])(&v102, v95);
        if (v96 == -1)
          sub_207CA9F48();
        v97 = (unsigned int *)&v102;
        ((void (*)(void **__return_ptr, unsigned int **, unsigned int *))off_24C079C88[v96])(v62, &v97, v95);
        if (v96 != -1)
          ((void (*)(unsigned int **, unsigned int *))off_24C079C58[v96])(&v97, v95);
        if (SHIBYTE(v63) < 0)
        {
          sub_207CA40D8(__dst, v62[0], (unint64_t)v62[1]);
        }
        else
        {
          *(_OWORD *)__dst = *(_OWORD *)v62;
          v65 = v63;
        }
        v66 = 1;
        LOBYTE(v67) = 0;
        v71 = 0;
        v72 = 1;
        sub_208206088((uint64_t)__dst, (uint64_t)&v83);
        *(_OWORD *)a1 = v83;
        *(_BYTE *)(a1 + 16) = 0;
        *(_BYTE *)(a1 + 112) = 0;
        if (v93)
        {
          *(_BYTE *)(a1 + 40) = 0;
          v43 = v86;
          if ((_BYTE)v86)
          {
            *(_OWORD *)(a1 + 16) = v84;
            *(_QWORD *)(a1 + 32) = v85;
            v85 = 0;
            v84 = 0uLL;
            *(_BYTE *)(a1 + 40) = 1;
          }
          *(_BYTE *)(a1 + 48) = 0;
          *(_BYTE *)(a1 + 104) = 0;
          if (v92)
          {
            v44 = v89;
            *(_QWORD *)(a1 + 64) = v88;
            *(_OWORD *)(a1 + 48) = v87;
            v87 = 0uLL;
            *(_QWORD *)(a1 + 72) = v44;
            *(_OWORD *)(a1 + 80) = v90;
            *(_QWORD *)(a1 + 96) = v91;
            v88 = 0;
            v90 = 0uLL;
            v91 = 0;
            *(_BYTE *)(a1 + 104) = 1;
          }
          *(_BYTE *)(a1 + 112) = 1;
          *(_BYTE *)(a1 + 120) = 0;
          if (v43 && SHIBYTE(v85) < 0)
            operator delete((void *)v84);
          if (!v72)
          {
LABEL_94:
            if (SHIBYTE(v63) < 0)
            {
              v42 = v62[0];
              goto LABEL_96;
            }
            return;
          }
        }
        else
        {
          *(_BYTE *)(a1 + 120) = 0;
          if (!v72)
            goto LABEL_94;
        }
        if (v71)
        {
          if (v70 < 0)
            operator delete(v69);
          if (v68 < 0)
            operator delete(v67);
        }
        if (v66)
        {
          if (SHIBYTE(v65) < 0)
            operator delete(__dst[0]);
        }
        goto LABEL_94;
      }
      v13 = *(_QWORD *)(a2 + 8);
      if (!v13)
        goto LABEL_44;
      v14 = *(std::__shared_weak_count **)(a2 + 16);
      if (v14)
      {
        v15 = (unint64_t *)&v14->__shared_owners_;
        do
          v16 = __ldxr(v15);
        while (__stxr(v16 + 1, v15));
        do
          v17 = __ldaxr(v15);
        while (__stlxr(v17 - 1, v15));
        if (!v17)
        {
          ((void (*)(std::__shared_weak_count *))v14->__on_zero_shared)(v14);
          std::__shared_weak_count::__release_weak(v14);
        }
        v13 = *(_QWORD *)(a2 + 8);
        v18 = *(std::__shared_weak_count **)(a2 + 16);
        if (v18)
        {
          v19 = (unint64_t *)&v18->__shared_owners_;
          do
            v20 = __ldxr(v19);
          while (__stxr(v20 + 1, v19));
          do
            v21 = __ldaxr(v19);
          while (__stlxr(v21 - 1, v19));
          if (!v21)
          {
            ((void (*)(std::__shared_weak_count *))v18->__on_zero_shared)(v18);
            std::__shared_weak_count::__release_weak(v18);
          }
        }
      }
      if (*(_BYTE *)(a2 + 53))
      {
        (*(void (**)(unsigned int *__return_ptr, uint64_t, _QWORD))(*(_QWORD *)v13 + 96))(v95, v13, 0);
        *(_QWORD *)&v83 = off_24C06E878;
        v22 = *(_QWORD *)(a2 + 8);
        v23 = *(std::__shared_weak_count **)(a2 + 16);
        if (!v23)
        {
LABEL_32:
          v24 = *(_QWORD *)(a2 + 40);
          v25 = *(_DWORD *)(a2 + 48);
          v26 = *(_WORD *)(a2 + 52);
          goto LABEL_49;
        }
      }
      else
      {
LABEL_44:
        *(_QWORD *)v95 = 0;
        *(_QWORD *)&v83 = off_24C06E878;
        v22 = *(_QWORD *)(a2 + 8);
        v23 = *(std::__shared_weak_count **)(a2 + 16);
        if (!v23)
          goto LABEL_32;
      }
      v29 = (unint64_t *)&v23->__shared_owners_;
      do
        v30 = __ldxr(v29);
      while (__stxr(v30 + 1, v29));
      v24 = *(_QWORD *)(a2 + 40);
      v25 = *(_DWORD *)(a2 + 48);
      v26 = *(_WORD *)(a2 + 52);
      do
        v31 = __ldxr(v29);
      while (__stxr(v31 + 1, v29));
LABEL_49:
      *((_QWORD *)&v83 + 1) = v22;
      *(_QWORD *)&v84 = v23;
      *((_QWORD *)&v84 + 1) = *(_QWORD *)(a2 + 24);
      LODWORD(v85) = *(_DWORD *)(a2 + 32);
      v86 = v24;
      LODWORD(v87) = v25;
      WORD2(v87) = v26;
      if (v23)
      {
        v32 = (unint64_t *)&v23->__shared_owners_;
        do
          v33 = __ldaxr(v32);
        while (__stlxr(v33 - 1, v32));
        if (!v33)
        {
          ((void (*)(std::__shared_weak_count *))v23->__on_zero_shared)(v23);
          std::__shared_weak_count::__release_weak(v23);
        }
      }
      sub_20803DCB8((uint64_t)&v83);
      v34 = (std::__shared_weak_count *)v84;
      if ((_QWORD)v84)
      {
        v35 = (unint64_t *)(v84 + 8);
        do
          v36 = __ldaxr(v35);
        while (__stlxr(v36 - 1, v35));
        if (!v36)
        {
          ((void (*)(std::__shared_weak_count *))v34->__on_zero_shared)(v34);
          std::__shared_weak_count::__release_weak(v34);
        }
      }
      sub_207F11D2C((std::__shared_weak_count_vtbl **)&image, (uint64_t)&v97);
      CGImageDestinationAddImage(*(CGImageDestinationRef *)a3, image, 0);
      v37 = CGImageDestinationFinalize(*(CGImageDestinationRef *)a3);
      v38 = v37;
      v39 = v61;
      if (!v61)
        goto LABEL_63;
      v40 = (unint64_t *)&v61->__shared_owners_;
      do
        v41 = __ldaxr(v40);
      while (__stlxr(v41 - 1, v40));
      if (!v41)
      {
        ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
        std::__shared_weak_count::__release_weak(v39);
        if (v38)
          goto LABEL_64;
      }
      else
      {
LABEL_63:
        if (v37)
        {
LABEL_64:
          *(_BYTE *)(a1 + 120) = 1;
LABEL_116:
          v47 = (std::__shared_weak_count *)v98;
          if (v98)
          {
            v48 = (unint64_t *)(v98 + 8);
            do
              v49 = __ldaxr(v48);
            while (__stlxr(v49 - 1, v48));
            if (!v49)
            {
              ((void (*)(std::__shared_weak_count *))v47->__on_zero_shared)(v47);
              std::__shared_weak_count::__release_weak(v47);
            }
          }
          v50 = *(_QWORD *)v95;
          *(_QWORD *)v95 = 0;
          if (v50)
            (*(void (**)(uint64_t))(*(_QWORD *)v50 + 8))(v50);
          return;
        }
      }
      sub_207CCB5A4((uint64_t)v51, "Failed to save image to destination.");
      v59 = 1;
      sub_207CCAFD0(5u, (__int128 *)v51, (uint64_t)&v83);
      *(_OWORD *)a1 = v83;
      *(_BYTE *)(a1 + 16) = 0;
      *(_BYTE *)(a1 + 112) = 0;
      if (v93)
      {
        *(_BYTE *)(a1 + 40) = 0;
        v45 = v86;
        if ((_BYTE)v86)
        {
          *(_OWORD *)(a1 + 16) = v84;
          *(_QWORD *)(a1 + 32) = v85;
          v85 = 0;
          v84 = 0uLL;
          *(_BYTE *)(a1 + 40) = 1;
        }
        *(_BYTE *)(a1 + 48) = 0;
        *(_BYTE *)(a1 + 104) = 0;
        if (v92)
        {
          v46 = v89;
          *(_QWORD *)(a1 + 64) = v88;
          *(_OWORD *)(a1 + 48) = v87;
          v87 = 0uLL;
          *(_QWORD *)(a1 + 72) = v46;
          *(_OWORD *)(a1 + 80) = v90;
          *(_QWORD *)(a1 + 96) = v91;
          v88 = 0;
          v90 = 0uLL;
          v91 = 0;
          *(_BYTE *)(a1 + 104) = 1;
        }
        *(_BYTE *)(a1 + 112) = 1;
        *(_BYTE *)(a1 + 120) = 0;
        if (v45 && SHIBYTE(v85) < 0)
          operator delete((void *)v84);
      }
      else
      {
        *(_BYTE *)(a1 + 120) = 0;
      }
      if (v59)
      {
        if (v58)
        {
          if (v57 < 0)
            operator delete(v56);
          if (v55 < 0)
            operator delete(v54);
        }
        if (v53 && v52 < 0)
          operator delete(v51[0]);
      }
      goto LABEL_116;
    }
  }
  sub_207CCB5A4((uint64_t)v74, "Unsupported format");
  v82 = 1;
  sub_208206088((uint64_t)v74, (uint64_t)&v83);
  *(_OWORD *)a1 = v83;
  *(_BYTE *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 112) = 0;
  if (v93)
  {
    *(_BYTE *)(a1 + 40) = 0;
    v27 = v86;
    if ((_BYTE)v86)
    {
      *(_OWORD *)(a1 + 16) = v84;
      *(_QWORD *)(a1 + 32) = v85;
      v85 = 0;
      v84 = 0uLL;
      *(_BYTE *)(a1 + 40) = 1;
    }
    *(_BYTE *)(a1 + 48) = 0;
    *(_BYTE *)(a1 + 104) = 0;
    if (v92)
    {
      v28 = v89;
      *(_QWORD *)(a1 + 64) = v88;
      *(_OWORD *)(a1 + 48) = v87;
      v87 = 0uLL;
      *(_QWORD *)(a1 + 72) = v28;
      *(_OWORD *)(a1 + 80) = v90;
      *(_QWORD *)(a1 + 96) = v91;
      v88 = 0;
      v90 = 0uLL;
      v91 = 0;
      *(_BYTE *)(a1 + 104) = 1;
    }
    *(_BYTE *)(a1 + 112) = 1;
    *(_BYTE *)(a1 + 120) = 0;
    if (v27 && SHIBYTE(v85) < 0)
      operator delete((void *)v84);
    if (!v82)
      return;
  }
  else
  {
    *(_BYTE *)(a1 + 120) = 0;
    if (!v82)
      return;
  }
  if (v81)
  {
    if (v80 < 0)
      operator delete(__p);
    if (v78 < 0)
      operator delete(v77);
  }
  if (v76 && v75 < 0)
  {
    v42 = (void *)v74[0];
LABEL_96:
    operator delete(v42);
  }
}

void sub_207F11534(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  if (a29 < 0)
  {
    operator delete(__p);
    _Unwind_Resume(exception_object);
  }
  _Unwind_Resume(exception_object);
}

_DWORD *sub_207F11630(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C079C58[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_207C95C50();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

_DWORD *sub_207F11720(_DWORD ***a1)
{
  return sub_207F1173C(**a1, (char *)(*a1)[1]);
}

void sub_207F1172C(uint64_t a1, uint64_t a2)
{
  sub_207F1182C((uint64_t *)(*(_QWORD *)a1 + 16), a2);
}

_DWORD *sub_207F1173C(_DWORD *a1, char *__s)
{
  uint64_t v4;
  size_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char v11;

  v4 = a1[6];
  if ((_DWORD)v4 != -1)
    ((void (*)(char *, _DWORD *))off_24C079C58[v4])(&v11, a1);
  a1[6] = -1;
  v5 = strlen(__s);
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_207C95C50();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v8 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v8 = v5 | 7;
    v9 = v8 + 1;
    v7 = operator new(v8 + 1);
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v9 | 0x8000000000000000;
    *(_QWORD *)a1 = v7;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v5;
    v7 = a1;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, __s, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  a1[6] = 1;
  return a1;
}

void sub_207F1182C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  char v4;
  void *v5;
  const char *v6;
  size_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void *v13;
  _BYTE v14[15];
  char v15;
  void *__p[2];
  unint64_t v17;
  _QWORD v18[3];

  v18[2] = *MEMORY[0x24BDAC8D0];
  v2 = *a1;
  *(_QWORD *)((char *)v18 + 7) = *(_QWORD *)(a2 + 15);
  v3 = *(void **)a2;
  v18[0] = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 23);
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = 0;
  v13 = v3;
  *(_QWORD *)v14 = v18[0];
  *(_QWORD *)&v14[7] = *(_QWORD *)((char *)v18 + 7);
  v15 = v4;
  memset(v18, 0, 15);
  v5 = __p;
  v6 = (const char *)a1[1];
  v7 = strlen(v6);
  if (v7 >= 0x7FFFFFFFFFFFFFF8)
    sub_207C95C50();
  v8 = (void *)v7;
  if (v7 >= 0x17)
  {
    v10 = (v7 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v7 | 7) != 0x17)
      v10 = v7 | 7;
    v11 = v10 + 1;
    v5 = operator new(v10 + 1);
    __p[1] = v8;
    v17 = v11 | 0x8000000000000000;
    __p[0] = v5;
LABEL_9:
    memmove(v5, v6, (size_t)v8);
    *((_BYTE *)v8 + (_QWORD)v5) = 0;
    v9 = *(unsigned int *)(v2 + 24);
    if ((_DWORD)v9 == -1)
      goto LABEL_11;
    goto LABEL_10;
  }
  HIBYTE(v17) = v7;
  if (v7)
    goto LABEL_9;
  LOBYTE(__p[0]) = 0;
  v9 = *(unsigned int *)(v2 + 24);
  if ((_DWORD)v9 != -1)
LABEL_10:
    ((void (*)(char *, uint64_t))off_24C079C58[v9])(&v12, v2);
LABEL_11:
  *(_DWORD *)(v2 + 24) = -1;
  sub_207CAA110((_QWORD *)v2, (uint64_t)&v13, 2uLL);
  *(_DWORD *)(v2 + 24) = 2;
  if ((SHIBYTE(v17) & 0x80000000) == 0)
  {
    if ((v15 & 0x80000000) == 0)
      return;
LABEL_15:
    operator delete(v13);
    return;
  }
  operator delete(__p[0]);
  if (v15 < 0)
    goto LABEL_15;
}

void sub_207F119E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a2)
    sub_207C9CFA4(exception_object);
  _Unwind_Resume(exception_object);
}

char *sub_207F11A24(uint64_t a1, uint64_t a2)
{
  const char *v3;
  char *v4;
  size_t v5;
  size_t v6;
  void *v7;
  char *result;
  uint64_t v9;
  uint64_t v10;

  v3 = *(const char **)(*(_QWORD *)a1 + 32);
  v4 = *(char **)(a2 + 8);
  if ((unint64_t)v4 >= *(_QWORD *)(a2 + 16))
  {
    result = sub_207F11B1C((void **)a2, v3);
    *(_QWORD *)(a2 + 8) = result;
    return result;
  }
  v5 = strlen(*(const char **)(*(_QWORD *)a1 + 32));
  if (v5 >= 0x7FFFFFFFFFFFFFF8)
    sub_207C95C50();
  v6 = v5;
  if (v5 >= 0x17)
  {
    v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v5 | 7) != 0x17)
      v9 = v5 | 7;
    v10 = v9 + 1;
    v7 = operator new(v9 + 1);
    *((_QWORD *)v4 + 1) = v6;
    *((_QWORD *)v4 + 2) = v10 | 0x8000000000000000;
    *(_QWORD *)v4 = v7;
  }
  else
  {
    v4[23] = v5;
    v7 = v4;
    if (!v5)
      goto LABEL_11;
  }
  memmove(v7, v3, v6);
LABEL_11:
  *((_BYTE *)v7 + v6) = 0;
  result = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  *(_QWORD *)(a2 + 8) = v4 + 24;
  return result;
}

void sub_207F11B14(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

char *sub_207F11B1C(void **a1, const char *a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v6;
  char *v7;
  char *v8;
  size_t v9;
  size_t v10;
  char *v11;
  char *v12;
  void **v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  void **v19;
  char *v21;
  char *v22;
  char *v23;

  v3 = 0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[1] - (_BYTE *)*a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    sub_207CA420C();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) > v4)
    v4 = 0x5555555555555556 * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - (_BYTE *)*a1) >> 3) >= 0x555555555555555)
    v6 = 0xAAAAAAAAAAAAAAALL;
  else
    v6 = v4;
  if (v6)
  {
    if (v6 > 0xAAAAAAAAAAAAAAALL)
      sub_207CA3AB8();
    v7 = (char *)operator new(24 * v6);
  }
  else
  {
    v7 = 0;
  }
  v8 = &v7[24 * v3];
  v21 = v8;
  v22 = v8;
  v23 = &v7[24 * v6];
  v9 = strlen(a2);
  if (v9 >= 0x7FFFFFFFFFFFFFF8)
    sub_207C95C50();
  v10 = v9;
  if (v9 >= 0x17)
  {
    v15 = (v9 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v9 | 7) != 0x17)
      v15 = v9 | 7;
    v16 = v15 + 1;
    v17 = (char *)operator new(v15 + 1);
    *((_QWORD *)v8 + 1) = v10;
    *((_QWORD *)v8 + 2) = v16 | 0x8000000000000000;
    *(_QWORD *)v8 = v17;
    v8 = v17;
  }
  else
  {
    v8[23] = v9;
    if (!v9)
    {
      *v8 = 0;
      v11 = v8;
      v12 = v8 + 24;
      v13 = (void **)*a1;
      v14 = (void **)a1[1];
      if (v14 == *a1)
        goto LABEL_26;
      goto LABEL_20;
    }
  }
  memmove(v8, a2, v10);
  v8[v10] = 0;
  v11 = v21;
  v12 = v22 + 24;
  v13 = (void **)*a1;
  v14 = (void **)a1[1];
  if (v14 == *a1)
  {
LABEL_26:
    *a1 = v11;
    a1[1] = v12;
    a1[2] = v23;
    goto LABEL_27;
  }
  do
  {
LABEL_20:
    v18 = *(_OWORD *)(v14 - 3);
    *((_QWORD *)v11 - 1) = *(v14 - 1);
    *(_OWORD *)(v11 - 24) = v18;
    v11 -= 24;
    *(v14 - 2) = 0;
    *(v14 - 1) = 0;
    *(v14 - 3) = 0;
    v14 -= 3;
  }
  while (v14 != v13);
  v14 = (void **)*a1;
  v19 = (void **)a1[1];
  *a1 = v11;
  a1[1] = v12;
  a1[2] = v23;
  while (v19 != v14)
  {
    if (*((char *)v19 - 1) < 0)
      operator delete(*(v19 - 3));
    v19 -= 3;
  }
LABEL_27:
  if (v14)
    operator delete(v14);
  return v12;
}

void sub_207F11D18(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  sub_207CA4610((uint64_t)va);
  _Unwind_Resume(a1);
}

std::__shared_weak_count_vtbl **sub_207F11D2C(std::__shared_weak_count_vtbl **a1, uint64_t a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count_vtbl *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  std::__shared_weak_count *v15;

  v4 = *(std::__shared_weak_count_vtbl **)a2;
  v3 = *(std::__shared_weak_count **)(a2 + 8);
  v15 = v3;
  if (v3)
  {
    p_shared_owners = (unint64_t *)&v3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  if (v4)
    CFRetain(v4);
  v7 = (std::__shared_weak_count *)operator new(0x20uLL);
  v8 = v7;
  v7->__shared_owners_ = 0;
  v9 = (unint64_t *)&v7->__shared_owners_;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_24C079CC8;
  v7->__shared_weak_owners_ = 0;
  v7[1].__vftable = v4;
  *a1 = v4;
  a1[1] = (std::__shared_weak_count_vtbl *)v7;
  do
    v10 = __ldxr(v9);
  while (__stxr(v10 + 1, v9));
  do
    v11 = __ldaxr(v9);
  while (__stlxr(v11 - 1, v9));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v8);
  }
  if (!v15)
    return a1;
  v12 = (unint64_t *)&v15->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (v13)
    return a1;
  ((void (*)(std::__shared_weak_count *))v15->__on_zero_shared)(v15);
  std::__shared_weak_count::__release_weak(v15);
  return a1;
}

void sub_207F11E3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207C99D78((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207F11E50(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_207F11E68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  __cxa_end_catch();
  sub_207C99D78((uint64_t)&a9);
  _Unwind_Resume(a1);
}

std::__shared_weak_count_vtbl **sub_207F11E84(std::__shared_weak_count_vtbl **a1, std::__shared_weak_count_vtbl *cf, std::__shared_weak_count *a3)
{
  unint64_t *p_shared_owners;
  unint64_t v6;
  std::__shared_weak_count *v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v13;

  if (a3)
  {
    p_shared_owners = (unint64_t *)&a3->__shared_owners_;
    do
      v6 = __ldxr(p_shared_owners);
    while (__stxr(v6 + 1, p_shared_owners));
  }
  if (cf)
    CFRetain(cf);
  v7 = (std::__shared_weak_count *)operator new(0x20uLL);
  v8 = v7;
  v7->__shared_owners_ = 0;
  v9 = (unint64_t *)&v7->__shared_owners_;
  v7->__vftable = (std::__shared_weak_count_vtbl *)&off_24C079D68;
  v7->__shared_weak_owners_ = 0;
  v7[1].__vftable = cf;
  *a1 = cf;
  a1[1] = (std::__shared_weak_count_vtbl *)v7;
  do
    v10 = __ldxr(v9);
  while (__stxr(v10 + 1, v9));
  do
    v11 = __ldaxr(v9);
  while (__stlxr(v11 - 1, v9));
  if (!v11)
  {
    ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
    std::__shared_weak_count::__release_weak(v8);
  }
  if (!a3)
    return a1;
  v12 = (unint64_t *)&a3->__shared_owners_;
  do
    v13 = __ldaxr(v12);
  while (__stlxr(v13 - 1, v12));
  if (v13)
    return a1;
  ((void (*)(std::__shared_weak_count *))a3->__on_zero_shared)(a3);
  std::__shared_weak_count::__release_weak(a3);
  return a1;
}

void sub_207F11F94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_207C99D78((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207F11FA8(void *a1)
{
  const void *v1;

  __cxa_begin_catch(a1);
  if (v1)
    CFRelease(v1);
  __cxa_rethrow();
}

void sub_207F11FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  __cxa_end_catch();
  sub_207C99D78((uint64_t)&a9);
  _Unwind_Resume(a1);
}

void sub_207F11FE0(std::__shared_weak_count *a1)
{
  void *v1;

  std::__shared_weak_count::~__shared_weak_count(a1);
  operator delete(v1);
}

void sub_207F11FF4(uint64_t a1)
{
  const void *v1;

  v1 = *(const void **)(a1 + 24);
  if (v1)
    CFRelease(v1);
}

uint64_t sub_207F12014(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if ((char *)v3 == "ZN4cv3d3kit2cf3PtrIP18CGImageDestinationEC1ES4_EUlS4_E_")
    return a1 + 24;
  if (((v3 & (unint64_t)"ZN4cv3d3kit2cf3PtrIP18CGImageDestinationEC1ES4_EUlS4_E_" & 0x8000000000000000) != 0) == __OFSUB__(v3, "ZN4cv3d3kit2cf3PtrIP18CGImageDestinationEC1ES4_EUlS4_E_"))
    return 0;
  if (!strcmp((const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL), (const char *)((unint64_t)"ZN4cv3d3kit2cf3PtrIP18CGImageDestinationEC1ES4_EUlS4_E_" & 0x7FFFFFFFFFFFFFFFLL)))return a1 + 24;
  return 0;
}

const char *sub_207F12088()
{
  return "ImageIO";
}

uint64_t sub_207F12094(uint64_t a1, unsigned int a2)
{
  _QWORD *v3;
  uint64_t v4;
  const char *v5;
  uint64_t v6;
  int v7;
  size_t v8;
  void **v9;
  unint64_t v10;
  unint64_t v11;
  const void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _BYTE v20[24];
  int v21;
  void *__dst[2];
  unint64_t v23;
  _QWORD v24[5];
  _QWORD *v25;

  v21 = 0;
  v3 = operator new(0x118uLL);
  v3[34] = 0;
  *((_OWORD *)v3 + 15) = 0u;
  *((_OWORD *)v3 + 16) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_OWORD *)v3 + 14) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 3) = 0u;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *(_OWORD *)v3 = 0u;
  sub_207CA2878((uint64_t)v3);
  v24[0] = v3;
  if (a2 > 7)
  {
    v5 = "unknown error code";
    v6 = 18;
  }
  else
  {
    v4 = (int)a2;
    v5 = off_24C079EC8[v4];
    v6 = *(_QWORD *)((char *)&unk_20823DFC8 + v4 * 8);
  }
  sub_207CBAB98(v3 + 2, (uint64_t)v5, v6);
  v7 = *((_DWORD *)v3 + 30);
  if ((v7 & 0x10) != 0)
  {
    v10 = v3[14];
    v11 = v3[9];
    if (v10 < v11)
    {
      v3[14] = v11;
      v10 = v11;
    }
    v12 = (const void *)v3[8];
    v8 = v10 - (_QWORD)v12;
    if (v10 - (unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8)
      goto LABEL_29;
  }
  else
  {
    if ((v7 & 8) == 0)
    {
      v8 = 0;
      HIBYTE(v23) = 0;
      v9 = __dst;
      goto LABEL_17;
    }
    v12 = (const void *)v3[5];
    v8 = v3[7] - (_QWORD)v12;
    if (v8 >= 0x7FFFFFFFFFFFFFF8)
LABEL_29:
      sub_207C95C50();
  }
  if (v8 >= 0x17)
  {
    v13 = (v8 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v8 | 7) != 0x17)
      v13 = v8 | 7;
    v14 = v13 + 1;
    v9 = (void **)operator new(v13 + 1);
    __dst[1] = (void *)v8;
    v23 = v14 | 0x8000000000000000;
    __dst[0] = v9;
    goto LABEL_16;
  }
  HIBYTE(v23) = v8;
  v9 = __dst;
  if (v8)
LABEL_16:
    memmove(v9, v12, v8);
LABEL_17:
  *((_BYTE *)v9 + v8) = 0;
  v15 = v24[0];
  if (v24[0])
  {
    v16 = MEMORY[0x24BEDB7F0];
    v17 = *MEMORY[0x24BEDB7F0];
    *(_QWORD *)v24[0] = *MEMORY[0x24BEDB7F0];
    v18 = *(_QWORD *)(v16 + 72);
    *(_QWORD *)(v15 + *(_QWORD *)(v17 - 24)) = *(_QWORD *)(v16 + 64);
    *(_QWORD *)(v15 + 24) = MEMORY[0x24BEDB848] + 16;
    *(_QWORD *)(v15 + 16) = v18;
    if (*(char *)(v15 + 111) < 0)
      operator delete(*(void **)(v15 + 88));
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    MEMORY[0x20BD027B8](v15 + 128);
    operator delete((void *)v15);
  }
  v24[0] = v20;
  v24[1] = __dst;
  v24[2] = v20;
  v24[3] = __dst;
  v24[4] = __dst;
  if (v21 == -1)
    sub_207CA9F48();
  v25 = v24;
  ((void (*)(_QWORD **, _BYTE *))off_24C079E08[v21])(&v25, v20);
  if (SHIBYTE(v23) < 0)
    operator delete(__dst[0]);
  if (v21 == -1)
    sub_207CA9F48();
  v24[0] = __dst;
  result = ((uint64_t (*)(_QWORD *, _BYTE *))off_24C079E38[v21])(v24, v20);
  if (v21 != -1)
    return ((uint64_t (*)(_QWORD *, _BYTE *))off_24C079E20[v21])(v24, v20);
  return result;
}

