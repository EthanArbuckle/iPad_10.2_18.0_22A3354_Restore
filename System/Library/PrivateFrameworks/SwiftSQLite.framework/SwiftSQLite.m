uint64_t Row.subscript.getter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_247BFC9C0(a1, a2, a3, (uint64_t (*)(uint64_t *))Row.get<A>(_:));
}

{
  return sub_247BFC9C0(a1, a2, a3, (uint64_t (*)(uint64_t *))Row.get<A>(_:));
}

uint64_t sub_247BF89DC(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_247BF8A24@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_247BFB834(*(_QWORD *)(v1 + 24), a1);
}

ValueMetadata *type metadata accessor for Row()
{
  return &type metadata for Row;
}

Swift::Int64 __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Connection.run(_:)(SwiftSQLite::Insert a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id inited;
  uint64_t v9;
  Swift::Int64 result;
  Swift::Int64 v11;
  uint64_t v12;
  char v13;

  v3 = v2;
  v4 = v1;
  v5 = *(_QWORD *)(a1.template._countAndFlagsBits + 16);
  sub_247BFBA84();
  v6 = qword_254455430;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 != -1)
    swift_once();
  sub_247C3D978();
  v7 = sub_247BFBAC0();
  if ((v13 & 1) != 0 || v12 != v7)
  {
    inited = *(id *)(v1 + 88);
    sub_247C3D99C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (!v3)
      return v11;
    return (Swift::Int64)inited;
  }
  type metadata accessor for Statement();
  inited = (id)swift_initStackObject();
  swift_bridgeObjectRetain();
  v9 = swift_retain();
  sub_247C17F4C(v9);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (Swift::Int64)inited;
  }
  Statement.run(_:)(v5);
  swift_release();
  swift_release();
  swift_beginAccess();
  result = *(_QWORD *)(v4 + 16);
  if (result)
  {
    inited = (id)sqlite3_last_insert_rowid((sqlite3 *)result);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (Swift::Int64)inited;
  }
  __break(1u);
  return result;
}

sqlite3 *sub_247BF8C3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, sqlite3 **a3@<X8>)
{
  uint64_t v3;
  sqlite3 *result;

  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  result = sub_247C17F4C(a1);
  if (!v3)
  {
    Statement.run(_:)(a2);
    swift_release();
    swift_release();
    swift_beginAccess();
    result = *(sqlite3 **)(a1 + 16);
    if (result)
    {
      result = (sqlite3 *)sqlite3_last_insert_rowid(result);
      *a3 = result;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

double sub_247BF8D50@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  double result;
  _QWORD v10[9];
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  (*(void (**)(_QWORD *__return_ptr))(a1 + 16))(v10);
  v3 = v11;
  v4 = v12;
  v5 = v13;
  sub_247BFE9A0(v11, v12);
  sub_247C3C6DC(v10);
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
    *(_QWORD *)(inited + 32) = 0x4552454857;
    *(_QWORD *)(inited + 56) = v7;
    *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
    v8 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(inited + 40) = 0xE500000000000000;
    *(_QWORD *)(inited + 48) = v8;
    *(_QWORD *)(inited + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
    *(_QWORD *)(inited + 72) = v3;
    *(_QWORD *)(inited + 80) = v4;
    *(_QWORD *)(inited + 88) = v5;
    sub_247BFECF4(inited, (uint64_t *)a2);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

sqlite3 *Statement.run(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  sqlite3_stmt *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  sqlite3 *result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v2 = v1;
  v3 = sub_247C00BBC(a1);
  swift_beginAccess();
  v4 = *(sqlite3_stmt **)(v3 + 16);
  swift_retain();
  sqlite3_reset(v4);
  sub_247BFBA84();
  while (1)
  {
    while (1)
    {
      v5 = *(_QWORD *)(v3 + 24);
      if (qword_254455430 != -1)
        swift_once();
      sub_247C3D978();
      v6 = sub_247BFBAC0();
      if ((v22 & 1) == 0 && v21 == v6)
        break;
      v15 = *(id *)(v5 + 88);
      sub_247C3D99C();
      if (v2)
      {
        swift_release();

        return (sqlite3 *)v3;
      }

      if ((v23 & 1) == 0)
        return (sqlite3 *)v3;
    }
    v7 = sqlite3_step(*(sqlite3_stmt **)(v3 + 16));
    v8 = qword_254455350;
    swift_retain();
    if (v8 != -1)
      swift_once();
    v9 = off_254455348;
    if (!*((_QWORD *)off_254455348 + 2))
      goto LABEL_19;
    v10 = MEMORY[0x24958E8CC](*((_QWORD *)off_254455348 + 5), v7, 4);
    v11 = -1 << v9[32];
    v12 = v10 & ~v11;
    if (((*(_QWORD *)&v9[((v12 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v12) & 1) == 0)
      goto LABEL_19;
    v13 = *((_QWORD *)v9 + 6);
    if (*(_DWORD *)(v13 + 4 * v12) != v7)
      break;
LABEL_2:
    swift_release();
    if (v7 != 100)
      return (sqlite3 *)v3;
  }
  v14 = ~v11;
  while (1)
  {
    v12 = (v12 + 1) & v14;
    if (((*(_QWORD *)&v9[((v12 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v12) & 1) == 0)
      break;
    if (*(_DWORD *)(v13 + 4 * v12) == v7)
      goto LABEL_2;
  }
LABEL_19:
  swift_beginAccess();
  result = *(sqlite3 **)(v5 + 16);
  if (result)
  {
    result = (sqlite3 *)sqlite3_errmsg(result);
    if (result)
    {
      v17 = sub_247C3D84C();
      v19 = v18;
      swift_release();
      sub_247C1A4D0();
      swift_allocError();
      *(_QWORD *)v20 = v17;
      *(_QWORD *)(v20 + 8) = v19;
      *(_DWORD *)(v20 + 16) = v7;
      *(_QWORD *)(v20 + 24) = 0;
      swift_willThrow();
      swift_release();
      return (sqlite3 *)v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  sqlite3 *v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  sqlite3 *result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  sqlite3_stmt **v21;
  uint64_t v22;
  char v23;
  char v24;

  v3 = v2;
  v4 = v1;
  if (*(_QWORD *)(a1 + 16))
  {
    v5 = Statement.run(_:)(a1);
    if (!v2)
      return v5;
    return (sqlite3 *)v4;
  }
  else
  {
    v21 = (sqlite3_stmt **)(v1 + 16);
    swift_beginAccess();
    sqlite3_reset(*(sqlite3_stmt **)(v1 + 16));
    sub_247BFBA84();
    v6 = *(_QWORD *)(v1 + 24);
    while (1)
    {
      while (1)
      {
        if (qword_254455430 != -1)
          swift_once();
        sub_247C3D978();
        v7 = sub_247BFBAC0();
        if ((v23 & 1) == 0 && v22 == v7)
          break;
        v16 = *(id *)(v6 + 88);
        sub_247C3D99C();

        if (v3)
          return (sqlite3 *)v4;
        if ((v24 & 1) == 0)
        {
LABEL_26:
          swift_retain();
          return (sqlite3 *)v4;
        }
      }
      v8 = sqlite3_step(*v21);
      v9 = qword_254455350;
      swift_retain();
      if (v9 != -1)
        swift_once();
      v10 = off_254455348;
      if (!*((_QWORD *)off_254455348 + 2))
        break;
      v11 = MEMORY[0x24958E8CC](*((_QWORD *)off_254455348 + 5), v8, 4);
      v12 = -1 << v10[32];
      v13 = v11 & ~v12;
      if (((*(_QWORD *)&v10[((v13 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v13) & 1) == 0)
        break;
      v14 = *((_QWORD *)v10 + 6);
      if (*(_DWORD *)(v14 + 4 * v13) != v8)
      {
        v15 = ~v12;
        do
        {
          v13 = (v13 + 1) & v15;
          if (((*(_QWORD *)&v10[((v13 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v13) & 1) == 0)
            goto LABEL_22;
        }
        while (*(_DWORD *)(v14 + 4 * v13) != v8);
      }
      swift_release();
      if (v8 != 100)
        goto LABEL_26;
    }
LABEL_22:
    swift_beginAccess();
    result = *(sqlite3 **)(v6 + 16);
    if (result)
    {
      result = (sqlite3 *)sqlite3_errmsg(result);
      if (result)
      {
        v4 = sub_247C3D84C();
        v19 = v18;
        swift_release();
        sub_247C1A4D0();
        swift_allocError();
        *(_QWORD *)v20 = v4;
        *(_QWORD *)(v20 + 8) = v19;
        *(_DWORD *)(v20 + 16) = v8;
        *(_QWORD *)(v20 + 24) = 0;
        swift_willThrow();
        return (sqlite3 *)v4;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  sqlite3 *result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  sqlite3_stmt **v21;
  uint64_t v22;
  char v23;
  char v24;

  v3 = v2;
  v4 = v1;
  Statement.bind(_:)(a1);
  v21 = (sqlite3_stmt **)(v1 + 16);
  swift_beginAccess();
  sqlite3_reset(*(sqlite3_stmt **)(v1 + 16));
  sub_247BFBA84();
  v5 = *(_QWORD *)(v1 + 24);
  while (1)
  {
    while (1)
    {
      if (qword_254455430 != -1)
        swift_once();
      sub_247C3D978();
      v6 = sub_247BFBAC0();
      if ((v23 & 1) == 0 && v22 == v6)
        break;
      v15 = *(id *)(v5 + 88);
      sub_247C3D99C();
      if (v3)
      {
        swift_release();

        return (sqlite3 *)v4;
      }

      if ((v24 & 1) == 0)
        return (sqlite3 *)v4;
    }
    v7 = sqlite3_step(*v21);
    v8 = qword_254455350;
    swift_retain();
    if (v8 != -1)
      swift_once();
    v9 = off_254455348;
    if (!*((_QWORD *)off_254455348 + 2))
      goto LABEL_19;
    v10 = MEMORY[0x24958E8CC](*((_QWORD *)off_254455348 + 5), v7, 4);
    v11 = -1 << v9[32];
    v12 = v10 & ~v11;
    if (((*(_QWORD *)&v9[((v12 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v12) & 1) == 0)
      goto LABEL_19;
    v13 = *((_QWORD *)v9 + 6);
    if (*(_DWORD *)(v13 + 4 * v12) != v7)
      break;
LABEL_2:
    swift_release();
    if (v7 != 100)
      return (sqlite3 *)v4;
  }
  v14 = ~v11;
  while (1)
  {
    v12 = (v12 + 1) & v14;
    if (((*(_QWORD *)&v9[((v12 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v12) & 1) == 0)
      break;
    if (*(_DWORD *)(v13 + 4 * v12) == v7)
      goto LABEL_2;
  }
LABEL_19:
  swift_beginAccess();
  result = *(sqlite3 **)(v5 + 16);
  if (result)
  {
    result = (sqlite3 *)sqlite3_errmsg(result);
    if (result)
    {
      v17 = sub_247C3D84C();
      v19 = v18;
      swift_release();
      sub_247C1A4D0();
      swift_allocError();
      *(_QWORD *)v20 = v17;
      *(_QWORD *)(v20 + 8) = v19;
      *(_DWORD *)(v20 + 16) = v7;
      *(_QWORD *)(v20 + 24) = 0;
      swift_willThrow();
      swift_release();
      return (sqlite3 *)v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t <- infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15[3];

  v7 = (uint64_t *)MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v15[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v7[1];
  v11 = v7[2];
  v15[0] = *v7;
  v15[1] = v10;
  v15[2] = v11;
  (*(void (**)(char *))(v12 + 16))(v9);
  sub_247BF91C0(v15, (uint64_t)v9, a2, a3, a4);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_247BF91C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_1;

  v10 = *a1;
  *(_QWORD *)(a5 + 24) = type metadata accessor for Expression(0, a3, a3, a4);
  *(_QWORD *)(a5 + 32) = &protocol witness table for Expression<A>;
  *(_QWORD *)a5 = v10;
  *(_OWORD *)(a5 + 8) = *(_OWORD *)(a1 + 1);
  v11 = *(_QWORD *)(a4 + 8);
  *(_QWORD *)(a5 + 64) = a3;
  *(_QWORD *)(a5 + 72) = v11;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(a5 + 40));
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a2, a3);
}

void sub_247BF9244(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_247C3E1D0;
  *(_QWORD *)(v3 + 56) = &type metadata for Blob;
  *(_QWORD *)(v3 + 64) = &protocol witness table for Blob;
  __asm { BR              X10 }
}

uint64_t sub_247BF92D8()
{
  _QWORD *v0;
  unint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  __int16 v8;
  char v9;
  char v10;
  char v11;
  char v12;

  v7 = v3;
  v8 = v1;
  v9 = BYTE2(v1);
  v10 = BYTE3(v1);
  v11 = BYTE4(v1);
  v12 = BYTE5(v1);
  v5 = sub_247BFBFF8(&v7, BYTE6(v1));
  sub_247BFA1E4(v3, v1);
  sub_247BFA1E4(v3, v1);
  *v2 = v5;
  sub_247BFA1E4(v3, v1);
  *v0 = 63;
  v0[1] = 0xE100000000000000;
  v0[2] = v4;
  return swift_bridgeObjectRelease();
}

uint64_t sub_247BF94A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD v16[22];

  swift_bridgeObjectRetain();
  sub_247BFD20C(0, 0xE000000000000000, a1, a2, 34, 0xE100000000000000);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  swift_bridgeObjectRelease();
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 16))(v16, a3, a4);
  v9 = v16[6];
  v10 = v16[7];
  swift_bridgeObjectRetain();
  sub_247C3C6DC(v16);
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
    *(_QWORD *)(inited + 56) = v12;
    *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
    sub_247BFD20C(0, 0xE000000000000000, v9, v10, 34, 0xE100000000000000);
    sub_247C3D780();
    sub_247C3D840();
    swift_bridgeObjectRelease();
    sub_247C3D780();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 32) = 0;
    v13 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(inited + 40) = 0xE000000000000000;
    *(_QWORD *)(inited + 48) = v13;
    *(_QWORD *)(inited + 96) = v12;
    *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
    *(_QWORD *)(inited + 72) = 0;
    *(_QWORD *)(inited + 80) = 0xE000000000000000;
    *(_QWORD *)(inited + 88) = v13;
    sub_247BFECF4(inited, a5);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    return swift_arrayDestroy();
  }
  else
  {
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
    a5[4] = (uint64_t)&protocol witness table for Expression<A>;
    *a5 = 0;
    a5[1] = 0xE000000000000000;
    a5[2] = MEMORY[0x24BEE4AF8];
    a5[3] = result;
  }
  return result;
}

uint64_t sub_247BF9730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  _OWORD v39[10];
  uint64_t v40;
  _QWORD v41[21];
  _QWORD v42[23];

  v5 = v4;
  v8 = a1;
  v27 = a4;
  v9 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v12 + 16);
  v13((__int128 *)v42, v14, v12);
  v15 = v42[4];
  v16 = v42[5];
  swift_bridgeObjectRetain();
  sub_247C3C6DC(v42);
  if (v16)
  {
    if ((v8 & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_247C3E140;
      v26 = v15;
      v13((__int128 *)v41, a2, a3);
      v18 = v41[2];
      v19 = v41[3];
      swift_bridgeObjectRetain();
      sub_247C3C6DC(v41);
      sub_247BF94A8(v18, v19, a2, a3, (uint64_t *)(v17 + 32));
      swift_bridgeObjectRelease();
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
      *(_QWORD *)(v17 + 104) = &protocol witness table for Expression<A>;
      *(_QWORD *)(v17 + 72) = 21313;
      *(_QWORD *)(v17 + 80) = 0xE200000000000000;
      v21 = MEMORY[0x24BEE4AF8];
      *(_QWORD *)(v17 + 88) = MEMORY[0x24BEE4AF8];
      *(_QWORD *)(v17 + 96) = v20;
      *(_QWORD *)(v17 + 136) = v20;
      *(_QWORD *)(v17 + 144) = &protocol witness table for Expression<A>;
      sub_247BFD20C(0, 0xE000000000000000, v26, v16, 34, 0xE100000000000000);
      *(_QWORD *)&v39[0] = 0;
      *((_QWORD *)&v39[0] + 1) = 0xE000000000000000;
      sub_247C3D780();
      sub_247C3D840();
      swift_bridgeObjectRelease();
      sub_247C3D780();
      swift_bridgeObjectRelease();
      v22 = *((_QWORD *)&v39[0] + 1);
      *(_QWORD *)(v17 + 112) = *(_QWORD *)&v39[0];
      *(_QWORD *)(v17 + 120) = v22;
      *(_QWORD *)(v17 + 128) = v21;
      sub_247BFECF4(v17, v27);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
      swift_arrayDestroy();
      return swift_deallocClassInstance();
    }
    swift_bridgeObjectRelease();
  }
  v13((__int128 *)v41, a2, a3);
  v24 = v41[4];
  v25 = v41[5];
  swift_bridgeObjectRetain();
  sub_247C3C6DC(v41);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v5, a2);
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a2);
  }
  else
  {
    v13(&v28, a2, a3);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a2);
    v39[8] = v36;
    v39[9] = v37;
    v40 = v38;
    v39[4] = v32;
    v39[5] = v33;
    v39[6] = v34;
    v39[7] = v35;
    v39[0] = v28;
    v39[1] = v29;
    v39[2] = v30;
    v39[3] = v31;
    v25 = *((_QWORD *)&v29 + 1);
    v24 = v29;
    swift_bridgeObjectRetain();
    sub_247C3C6DC(v39);
  }
  sub_247BF94A8(v24, v25, a2, a3, v27);
  return swift_bridgeObjectRelease();
}

uint64_t <- infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v17[3];

  v8 = sub_247C3D9B4();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17[-1] - v9;
  v11 = *a1;
  v12 = a1[1];
  v13 = a1[2];
  v17[0] = v11;
  v17[1] = v12;
  v17[2] = v13;
  (*(void (**)(char *, uint64_t))(v14 + 16))((char *)&v17[-1] - v9, a2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_247BF9B4C(v17, (uint64_t)v10, a3, a4);
}

uint64_t sub_247BF9B4C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;

  v8 = sub_247C3D9B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - v10;
  v12 = *a1;
  v15 = type metadata accessor for Expression(0, v8, v13, v14);
  *(_QWORD *)(a4 + 24) = v15;
  *(_QWORD *)(a4 + 32) = &protocol witness table for Expression<A>;
  *(_QWORD *)a4 = v12;
  *(_OWORD *)(a4 + 8) = *(_OWORD *)(a1 + 1);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  v20 = v15;
  v21 = &protocol witness table for Expression<A>;
  v16 = MEMORY[0x24958EDF4]("0.", v15);
  MEMORY[0x24958EDF4](&protocol conformance descriptor for A?, v8);
  ExpressionType<>.init(value:)((uint64_t)v11, v15, v16, a3, (uint64_t)&v19);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  return sub_247BFECDC(&v19, a4 + 40);
}

uint64_t ExpressionType<>.init(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v23 = a3;
  v21[1] = a5;
  v22 = a2;
  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_247C3D9B4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v21 - v10;
  v12 = swift_getAssociatedTypeWitness();
  v21[0] = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v21 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_247C3E1D0;
  v16 = (uint64_t *)(v15 + 32);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v24 = a1;
  v17(v11, a1, v8);
  v18 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    *(_QWORD *)(v15 + 64) = 0;
    *(_OWORD *)v16 = 0u;
    *(_OWORD *)(v15 + 48) = 0u;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(a4 + 56))(AssociatedTypeWitness, a4);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v11, AssociatedTypeWitness);
    *(_QWORD *)(v15 + 56) = v12;
    *(_QWORD *)(v15 + 64) = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
    (*(void (**)(uint64_t *, char *, uint64_t))(v21[0] + 32))(boxed_opaque_existential_1, v14, v12);
  }
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v23 + 40))(63, 0xE100000000000000, v15, v22);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v24, v8);
}

void Data.datatypeValue.getter(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_247BF9F00()
{
  uint64_t v0;
  unint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  __int16 v6;
  char v7;
  char v8;
  char v9;
  char v10;

  v5 = v0;
  v6 = v1;
  v7 = BYTE2(v1);
  v8 = BYTE3(v1);
  v9 = BYTE4(v1);
  v10 = BYTE5(v1);
  v3 = sub_247BFBFF8(&v5, BYTE6(v1));
  sub_247BFA1E4(v0, v1);
  result = sub_247BFA1E4(v0, v1);
  *v2 = v3;
  return result;
}

uint64_t sub_247BFA0B8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

void sub_247BFA0FC()
{
  uint64_t *v0;

  Data.datatypeValue.getter(*v0, v0[1]);
}

void sub_247BFA104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (sub_247C3D678())
  {
    if (!__OFSUB__(a1, sub_247C3D690()))
    {
      sub_247C3D684();
      __asm { BR              X10 }
    }
    __break(1u);
  }
  else
  {
    sub_247C3D684();
    __break(1u);
  }
  JUMPOUT(0x247BFA1D4);
}

uint64_t sub_247BFA1E4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_247BFA228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455388);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_247BF8A24;
  *(_QWORD *)(v7 + 24) = v6;
  *a3 = v7;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t QueryType.filter(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10[3];

  v7 = a1[1];
  v8 = a1[2];
  v10[0] = *a1;
  v10[1] = v7;
  v10[2] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  QueryType.filter(_:)(v10, a2, a3, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  _UNKNOWN **v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t (*v20)(_QWORD *, _QWORD);
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  _UNKNOWN **v32;
  _QWORD v33[5];
  _QWORD v34[5];
  _QWORD v35[9];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a4, v4, a2);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a3 + 16))(v35, a2, a3);
  v11 = v36;
  v10 = v37;
  v12 = v38;
  sub_247BFE9A0(v36, v37);
  sub_247C3C6DC(v35);
  if (v10)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    v34[3] = v13;
    v34[4] = &protocol witness table for Expression<A>;
    v34[0] = v11;
    v34[1] = v10;
    v34[2] = v12;
    v33[3] = v13;
    v33[4] = &protocol witness table for Expression<A>;
    v33[0] = v7;
    v33[1] = v8;
    v33[2] = v9;
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    v14 = v11;
    v26 = v11;
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)v34, inited + 32);
    sub_247BFA88C((uint64_t)v33, inited + 72);
    v29 = 32;
    *(_QWORD *)&v30 = 0xE100000000000000;
    sub_247BFE9A0(v14, v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(inited, &v29);
    swift_bridgeObjectRelease();
    v16 = v31;
    v17 = v32;
    __swift_project_boxed_opaque_existential_1(&v29, v31);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v17[1])(&v27, v16, v17);
    v18 = v27;
    v25 = v28;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
    v31 = v13;
    v32 = &protocol witness table for Expression<A>;
    v29 = v18;
    v30 = v25;
    v27 = 0;
    *(_QWORD *)&v28 = 0xE000000000000000;
    sub_247C3D840();
    v19 = __swift_project_boxed_opaque_existential_1(&v29, v13);
    swift_bridgeObjectRetain();
    sub_247C3D840();
    swift_bridgeObjectRelease();
    sub_247C3D840();
    v7 = v27;
    v8 = v28;
    v9 = v19[2];
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    sub_247BFE92C(v26, v10);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v20 = (uint64_t (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(a3 + 32))(v34, a2, a3);
  v22 = v21[9];
  v23 = v21[10];
  v21[9] = v7;
  v21[10] = v8;
  v21[11] = v9;
  sub_247BFE92C(v22, v23);
  return v20(v34, 0);
}

uint64_t Statement.__deallocating_deinit()
{
  uint64_t v0;

  swift_beginAccess();
  sqlite3_finalize(*(sqlite3_stmt **)(v0 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_247BFA66C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v17[5];
  _QWORD v18[5];

  v12 = *a1;
  v11 = a1[1];
  v13 = a1[2];
  v18[3] = type metadata accessor for Expression(0, a3, a3, a4);
  v18[4] = &protocol witness table for Expression<A>;
  v18[0] = v12;
  v18[1] = v11;
  v18[2] = v13;
  v14 = *(_QWORD *)(a4 + 8);
  v17[3] = a3;
  v17[4] = v14;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFA740((uint64_t)v18, (uint64_t)v17, 1, a5, a3, a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
}

uint64_t sub_247BFA740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, unsigned __int8 a4@<W3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;

  v11 = sub_247BFAB60(a4);
  sub_247BFA7AC(a1, a2, a3, v11, v12, a5, a6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_247BFA7AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C(a1, inited + 32);
  sub_247BFA88C(a2, inited + 72);
  sub_247BFA8D0(inited, a3, a4, a5, a6, a7);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  return swift_arrayDestroy();
}

uint64_t sub_247BFA88C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_247BFA8D0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _UNKNOWN **v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v9 = type metadata accessor for Expression(0, a5, a3, a4);
  v22 = 32;
  v23 = 0xE100000000000000;
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(a1, &v22);
  swift_bridgeObjectRelease();
  v10 = v25;
  v11 = v26;
  __swift_project_boxed_opaque_existential_1(&v22, v25);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v20, v10, v11);
  v18 = v20;
  v19 = v21;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  v13 = MEMORY[0x24958EDF4]("0.", v9);
  v14 = sub_247BFF268(&qword_254455300, &qword_254455438, (uint64_t)"0.");
  ExpressionType.init<A>(_:)((uint64_t)&v18, v9, v12, v13, v14);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  v16 = v28;
  v17 = v29;
  if ((a2 & 1) != 0)
  {
    v25 = v9;
    v26 = &protocol witness table for Expression<A>;
    v22 = v27;
    v23 = v28;
    v24 = v29;
    sub_247BFAA64(&v22, 0, 0xE000000000000000, a6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  }
  else
  {
    *a6 = v27;
    a6[1] = v16;
    a6[2] = v17;
  }
  return result;
}

uint64_t sub_247BFAA64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v14 = a2;
  v15 = a3;
  swift_bridgeObjectRetain();
  sub_247C3D840();
  v6 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  v8 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v7 + 8);
  v8(v13, v6, v7);
  swift_bridgeObjectRelease();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  v9 = v14;
  v10 = v15;
  v8(v13, v6, v7);
  v11 = v13[2];
  swift_bridgeObjectRelease();
  return Expression.init(_:_:)(v9, v10, v11, a4);
}

uint64_t sub_247BFAB60(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_247BFAB88 + 4 * a0[a1]))(43, 0xE100000000000000);
}

uint64_t sub_247BFAB88()
{
  return 45;
}

uint64_t sub_247BFAB90()
{
  return 21071;
}

uint64_t sub_247BFAB9C()
{
  return 4476481;
}

uint64_t sub_247BFABAC()
{
  return 542396238;
}

uint64_t sub_247BFABBC()
{
  return 42;
}

uint64_t sub_247BFABC4()
{
  return 47;
}

uint64_t sub_247BFABCC()
{
  return 37;
}

uint64_t sub_247BFABD4()
{
  return 15420;
}

uint64_t sub_247BFABE0()
{
  return 15934;
}

uint64_t sub_247BFABEC()
{
  return 38;
}

uint64_t sub_247BFABF4()
{
  return 124;
}

uint64_t sub_247BFABFC()
{
  return 126;
}

uint64_t sub_247BFAC04()
{
  return 61;
}

uint64_t sub_247BFAC0C()
{
  return 15649;
}

uint64_t sub_247BFAC18()
{
  return 62;
}

uint64_t sub_247BFAC20()
{
  return 60;
}

uint64_t sub_247BFAC28()
{
  return 15678;
}

uint64_t sub_247BFAC34()
{
  return 15676;
}

uint64_t sub_247BFAC40()
{
  return 31868;
}

uint64_t destroy for Row()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s11SwiftSQLite3RowVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_247BFACA8@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t inited;
  unint64_t v14;
  _QWORD *result;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t i;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  _QWORD *v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56[54];
  uint64_t v57[3];
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v6 = v5;
  v7 = a4;
  v45 = a5;
  v46 = a3;
  v44 = *a1;
  v8 = *(_QWORD *)(a2 + 16);
  v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v8)
  {
    v42 = a4;
    v43 = v6;
    v10 = a2 + 32;
    v47 = &v60;
    v41[1] = a2;
    swift_bridgeObjectRetain();
    v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v50 = xmmword_247C3E1D0;
    v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
    while (1)
    {
      sub_247BFB458(v10, (uint64_t)v57);
      __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v50;
      sub_247BFA88C((uint64_t)v57, inited + 32);
      v14 = v12[2];
      swift_bridgeObjectRetain();
      result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
      if (!(_DWORD)result || (v16 = v12[3] >> 1, v17 = v12, v16 <= v14))
      {
        result = sub_247BFF3E4(result, v14 + 1, 1, v12);
        v17 = result;
        v16 = result[3] >> 1;
      }
      if (v16 <= v17[2])
        break;
      v48 = v8;
      v18 = v17;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
      swift_arrayInitWithCopy();
      v19 = v18[2] + 1;
      v49 = v18;
      v18[2] = v19;
      swift_bridgeObjectRelease();
      v20 = swift_initStackObject();
      *(_OWORD *)(v20 + 16) = v50;
      sub_247BFA88C((uint64_t)v47, v20 + 32);
      v21 = v11[2];
      swift_bridgeObjectRetain();
      result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
      if (!(_DWORD)result || (v22 = v11[3] >> 1, v23 = (uint64_t)v11, v22 <= v21))
      {
        result = sub_247BFF3E4(result, v21 + 1, 1, v11);
        v23 = (uint64_t)result;
        v22 = result[3] >> 1;
      }
      if (v22 <= *(_QWORD *)(v23 + 16))
        goto LABEL_27;
      swift_arrayInitWithCopy();
      ++*(_QWORD *)(v23 + 16);
      swift_bridgeObjectRelease();
      sub_247BFB400((uint64_t)v57);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v10 += 80;
      v11 = (_QWORD *)v23;
      v24 = (uint64_t)v49;
      v12 = v49;
      v8 = v48 - 1;
      if (v48 == 1)
      {
        swift_bridgeObjectRelease();
        v7 = v42;
        v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
  }
  else
  {
    v24 = MEMORY[0x24BEE4AF8];
    v23 = MEMORY[0x24BEE4AF8];
LABEL_14:
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455420);
    v25 = swift_initStackObject();
    *(_OWORD *)(v25 + 16) = xmmword_247C3F160;
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
    v27 = v26;
    *(_QWORD *)(v25 + 56) = v26;
    *(_QWORD *)(v25 + 64) = &protocol witness table for Expression<A>;
    *(_QWORD *)(v25 + 32) = 0x545245534E49;
    *(_QWORD *)(v25 + 40) = 0xE600000000000000;
    *(_QWORD *)(v25 + 48) = v9;
    if ((_DWORD)v44 != 5)
    {
      v57[0] = 2118223;
      v57[1] = 0xE300000000000000;
      __asm { BR              X9 }
    }
    *(_QWORD *)(v25 + 104) = 0;
    *(_OWORD *)(v25 + 72) = 0u;
    *(_OWORD *)(v25 + 88) = 0u;
    *(_QWORD *)(v25 + 136) = v26;
    *(_QWORD *)(v25 + 144) = &protocol witness table for Expression<A>;
    *(_QWORD *)(v25 + 112) = 1330925129;
    *(_QWORD *)(v25 + 120) = 0xE400000000000000;
    *(_QWORD *)(v25 + 128) = v9;
    sub_247BF9730(0, v46, v7, (uint64_t *)(v25 + 152));
    *(_QWORD *)(v25 + 216) = v27;
    *(_QWORD *)(v25 + 224) = &protocol witness table for Expression<A>;
    sub_247BFECF4(v24, v57);
    sub_247BFB3FC(v57, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
    *(_QWORD *)(v25 + 256) = v27;
    *(_QWORD *)(v25 + 264) = &protocol witness table for Expression<A>;
    *(_QWORD *)(v25 + 232) = 0x5345554C4156;
    *(_QWORD *)(v25 + 240) = 0xE600000000000000;
    *(_QWORD *)(v25 + 248) = v9;
    *(_QWORD *)(v25 + 296) = v27;
    *(_QWORD *)(v25 + 304) = &protocol witness table for Expression<A>;
    sub_247BFECF4(v23, v57);
    sub_247BFB3FC(v57, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247BF8D50(v7, v25 + 312);
    v56[0] = (uint64_t)v9;
    for (i = 32; i != 352; i += 40)
    {
      sub_247BFD054(v25 + i, (uint64_t)v57, &qword_254455440);
      sub_247BFBCD8((uint64_t)v57, (uint64_t)&v51, &qword_254455440);
      if (v52)
      {
        sub_247BFECDC(&v51, (uint64_t)&v54);
        sub_247BFECDC((__int128 *)&v54, (uint64_t)&v51);
        v29 = (_QWORD *)v56[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v29 = sub_247BFF3E4(0, v29[2] + 1, 1, v29);
          v56[0] = (uint64_t)v29;
        }
        v31 = v29[2];
        v30 = v29[3];
        if (v31 >= v30 >> 1)
          v56[0] = (uint64_t)sub_247BFF3E4((_QWORD *)(v30 > 1), v31 + 1, 1, v29);
        v32 = v52;
        v33 = v53;
        v34 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v51, v52);
        MEMORY[0x24BDAC7A8](v34);
        v36 = (char *)v41 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v37 + 16))(v36);
        sub_247BFF3F8(v31, (uint64_t)v36, v56, v32, v33);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
      }
      else
      {
        sub_247BFC084((uint64_t)&v51, &qword_254455440);
      }
    }
    swift_bridgeObjectRelease();
    sub_247BFECF4(v56[0], v57);
    swift_bridgeObjectRelease();
    v38 = v58;
    v39 = v59;
    __swift_project_boxed_opaque_existential_1(v57, v58);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v39 + 8))(&v54, v38, v39);
    v40 = v45;
    *v45 = v54;
    *(_OWORD *)(v40 + 1) = v55;
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  }
  return result;
}

uint64_t sub_247BFB304(uint64_t a1)
{
  return sub_247C00700(a1, (uint64_t (*)(void))sub_247BFF3E4, &qword_254455340);
}

uint64_t sub_247BFB318@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v14 = a2;
  v15 = a3;
  swift_bridgeObjectRetain();
  sub_247C3D840();
  v6 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  v8 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v7 + 8);
  v8(v13, v6, v7);
  swift_bridgeObjectRelease();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  v9 = v14;
  v10 = v15;
  v8(v13, v6, v7);
  v11 = v13[2];
  result = swift_bridgeObjectRelease();
  *a4 = v9;
  a4[1] = v10;
  a4[2] = v11;
  return result;
}

uint64_t sub_247BFB400(uint64_t a1)
{
  destroy for Setter(a1);
  return a1;
}

uint64_t destroy for Setter(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return __swift_destroy_boxed_opaque_existential_1(a1 + 40);
}

uint64_t sub_247BFB458(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for Setter(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for Setter(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

sqlite3 *sub_247BFB4F0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;

  return sub_247BFB508(v1, a1);
}

sqlite3 *sub_247BFB508@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  sqlite3 *result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  v5 = sqlite3_step(*(sqlite3_stmt **)(a1 + 16));
  v6 = qword_254455350;
  swift_retain();
  if (v6 != -1)
    swift_once();
  if (sub_247BFB63C(v5, (uint64_t)off_254455348))
  {
    result = (sqlite3 *)swift_release();
    *a2 = v5 == 100;
    return result;
  }
  swift_beginAccess();
  result = *(sqlite3 **)(v4 + 16);
  if (result)
  {
    result = (sqlite3 *)sqlite3_errmsg(result);
    if (result)
    {
      v8 = sub_247C3D84C();
      v10 = v9;
      swift_release();
      sub_247C1A4D0();
      swift_allocError();
      *(_QWORD *)v11 = v8;
      *(_QWORD *)(v11 + 8) = v10;
      *(_DWORD *)(v11 + 16) = v5;
      *(_QWORD *)(v11 + 24) = 0;
      return (sqlite3 *)swift_willThrow();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

BOOL sub_247BFB63C(unsigned int a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v4 = MEMORY[0x24958E8CC](*(_QWORD *)(a2 + 40), a1, 4);
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_DWORD *)(v8 + 4 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_DWORD *)(v8 + 4 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24958EDDC]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24958EDB8](a1, v6, a5);
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_247BFB834@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7[3];

  result = Statement.step()();
  if (v5)
  {
    result = MEMORY[0x24958ED7C](v5);
  }
  else if ((result & 1) != 0)
  {
    Statement.row.getter(v7);
    v6 = sub_247BFBAE4(v7[0], v7[1]);
    *a2 = a1;
    a2[1] = v6;
    return swift_bridgeObjectRetain();
  }
  *a2 = 0;
  a2[1] = 0;
  return result;
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Statement.step()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  BOOL v6;
  id v7;
  sqlite3 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  BOOL v16;

  v2 = *(_QWORD *)(v0 + 24);
  sub_247BFBA84();
  if (qword_254455430 != -1)
    swift_once();
  sub_247C3D978();
  v3 = sub_247BFBAC0();
  if ((v15 & 1) != 0 || v14 != v3)
  {
    v7 = *(id *)(v2 + 88);
    sub_247C3D99C();

    if (!v1)
      v6 = v16;
    goto LABEL_14;
  }
  swift_beginAccess();
  v4 = sqlite3_step(*(sqlite3_stmt **)(v0 + 16));
  v5 = qword_254455350;
  swift_retain();
  if (v5 != -1)
    swift_once();
  if (!sub_247BFB63C(v4, (uint64_t)off_254455348))
  {
    swift_beginAccess();
    v8 = *(sqlite3 **)(v2 + 16);
    if (v8)
    {
      v8 = (sqlite3 *)sqlite3_errmsg(v8);
      if (v8)
      {
        v9 = sub_247C3D84C();
        v11 = v10;
        swift_release();
        sub_247C1A4D0();
        swift_allocError();
        *(_QWORD *)v12 = v9;
        *(_QWORD *)(v12 + 8) = v11;
        *(_DWORD *)(v12 + 16) = v4;
        *(_QWORD *)(v12 + 24) = 0;
        swift_willThrow();
        goto LABEL_14;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return (char)v8;
  }
  swift_release();
  v6 = v4 == 100;
LABEL_14:
  LOBYTE(v8) = v6;
  return (char)v8;
}

unint64_t sub_247BFBA84()
{
  unint64_t result;

  result = qword_254455378;
  if (!qword_254455378)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254455378);
  }
  return result;
}

uint64_t sub_247BFBAC0()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  if (*(_BYTE *)(v0 + 104) != 1)
    return *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 96) = v0;
  *(_BYTE *)(v0 + 104) = 0;
  return result;
}

uint64_t sub_247BFBAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _BYTE v22[40];
  _BYTE v23[40];

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 0;
  v4 = (uint64_t *)(v3 + 16);
  swift_retain();
  swift_beginAccess();
  v5 = *v4;
  v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (*v4 < a2)
  {
    v7 = 0;
    v8 = MEMORY[0x24BEE4AF8] + 32;
    while (1)
    {
      *v4 = v5 + 1;
      Cursor.subscript.getter(v5, (uint64_t)v22);
      result = sub_247BFBCD8((uint64_t)v22, (uint64_t)v23, &qword_254455448);
      if (!v7)
      {
        v10 = v6[3];
        if ((uint64_t)((v10 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_26;
        v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
        if (v11 <= 1)
          v12 = 1;
        else
          v12 = v11;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
        v13 = (_QWORD *)swift_allocObject();
        v14 = (uint64_t)(_swift_stdlib_malloc_size(v13) - 32) / 40;
        v13[2] = v12;
        v13[3] = 2 * v14;
        v15 = (unint64_t)(v13 + 4);
        v16 = v6[3] >> 1;
        if (v6[2])
        {
          if (v13 != v6 || v15 >= (unint64_t)&v6[5 * v16 + 4])
            memmove(v13 + 4, v6 + 4, 40 * v16);
          v6[2] = 0;
        }
        v8 = v15 + 40 * v16;
        v7 = (v14 & 0x7FFFFFFFFFFFFFFFLL) - v16;
        result = swift_release();
        v6 = v13;
      }
      v18 = __OFSUB__(v7--, 1);
      if (v18)
        break;
      sub_247BFBCD8((uint64_t)v23, v8, &qword_254455448);
      v8 += 40;
      v5 = *v4;
      if (*v4 >= a2)
        goto LABEL_21;
    }
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v7 = 0;
LABEL_21:
  result = swift_release_n();
  v19 = v6[3];
  if (v19 < 2)
    return (uint64_t)v6;
  v20 = v19 >> 1;
  v18 = __OFSUB__(v20, v7);
  v21 = v20 - v7;
  if (!v18)
  {
    v6[2] = v21;
    return (uint64_t)v6;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_247BFBCD8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_247BFBD1C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_247BFBD28(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32), a1);
}

void sub_247BFBD28(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t *v6;
  uint64_t v7;

  v6 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(a1 + 16) >= a2)
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
    *(_OWORD *)(a3 + 24) = xmmword_247C3E670;
  }
  else
  {
    swift_beginAccess();
    v7 = *v6 + 1;
    if (__OFADD__(*v6, 1))
    {
      __break(1u);
    }
    else
    {
      *v6 = v7;
      Cursor.subscript.getter(v7 - 1, a3);
    }
  }
}

void Cursor.subscript.getter(uint64_t iCol@<X0>, uint64_t a2@<X8>)
{
  sqlite3_stmt **v2;
  int v4;
  sqlite3_stmt *v5;
  sqlite3_int64 v6;
  uint64_t v7;
  uint64_t v8;
  const void *v9;
  const void *v10;
  int v11;
  double v12;

  if (iCol < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    sub_247C3D9E4();
    swift_bridgeObjectRelease();
    sub_247C3DAC8();
    sub_247C3D840();
    swift_bridgeObjectRelease();
    sub_247C3DA68();
    __break(1u);
    return;
  }
  v4 = iCol;
  if (iCol > 0x7FFFFFFF)
    goto LABEL_14;
  v5 = *v2;
  switch(sqlite3_column_type(*v2, iCol))
  {
    case 1:
      v6 = sqlite3_column_int64(v5, v4);
      *(_QWORD *)(a2 + 24) = MEMORY[0x24BEE4008];
      *(_QWORD *)(a2 + 32) = &protocol witness table for Int64;
      *(_QWORD *)a2 = v6;
      break;
    case 2:
      v12 = sqlite3_column_double(v5, v4);
      *(_QWORD *)(a2 + 24) = MEMORY[0x24BEE13C8];
      *(_QWORD *)(a2 + 32) = &protocol witness table for Double;
      *(double *)a2 = v12;
      break;
    case 3:
      if (!sqlite3_column_text(v5, v4))
        goto LABEL_15;
      v7 = sub_247C3D858();
      *(_QWORD *)(a2 + 24) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(a2 + 32) = &protocol witness table for String;
      *(_QWORD *)a2 = v7;
      *(_QWORD *)(a2 + 8) = v8;
      break;
    case 4:
      *(_QWORD *)(a2 + 24) = &type metadata for Blob;
      *(_QWORD *)(a2 + 32) = &protocol witness table for Blob;
      v9 = sqlite3_column_blob(v5, v4);
      if (v9)
      {
        v10 = v9;
        v11 = sqlite3_column_bytes(v5, v4);
        *(_QWORD *)a2 = sub_247BFBFF8(v10, v11);
      }
      else
      {
        *(_QWORD *)a2 = MEMORY[0x24BEE4AF8];
      }
      break;
    case 5:
      *(_QWORD *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      break;
    default:
      goto LABEL_16;
  }
}

_QWORD *sub_247BFBFF8(const void *a1, int64_t a2)
{
  _QWORD *v4;
  size_t v5;

  if (!a2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  if (a2 <= 0)
  {
    v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552E8);
    v4 = (_QWORD *)swift_allocObject();
    v5 = _swift_stdlib_malloc_size(v4);
    v4[2] = a2;
    v4[3] = 2 * v5 - 64;
  }
  memcpy(v4 + 4, a1, a2);
  return v4;
}

uint64_t sub_247BFC084(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void Statement.row.getter(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[7];
  if (v3)
  {
    v4 = v1[8];
LABEL_5:
    *a1 = v3;
    a1[1] = v4;
    return;
  }
  swift_beginAccess();
  v3 = v1[2];
  if (v3)
  {
    swift_retain();
    v4 = Statement.columnCount.getter();
    swift_release();
    v1[7] = v3;
    v1[8] = v4;
    goto LABEL_5;
  }
  __break(1u);
}

uint64_t sub_247BFC13C(_QWORD *a1, _QWORD *a2, int a3, _QWORD *a4, _QWORD *a5)
{
  uint64_t DynamicType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t *, _QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v59;
  char v60;
  unint64_t v61;
  uint64_t v62;
  _BOOL8 v63;
  uint64_t v64;
  char v65;
  unint64_t v66;
  char v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84[3];
  uint64_t v85;
  uint64_t v86;
  _QWORD v87[21];
  _QWORD v88[21];
  _QWORD v89[23];

  v77 = a2;
  v75 = a4;
  v76 = a5;
  LODWORD(v74) = a3;
  v89[21] = *MEMORY[0x24BDAC8D0];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  DynamicType = swift_getDynamicType();
  v8 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v7 + 16))(v87, v8, v7);
  v9 = v87[2];
  v10 = v87[3];
  swift_bridgeObjectRetain();
  sub_247C3C6DC(v87);
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v12 + 16);
  v14 = v12;
  v15 = a1;
  v13(v88, v11, v14);
  v16 = v88[6];
  v17 = v88[7];
  swift_bridgeObjectRetain();
  sub_247C3C6DC(v88);
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 40);
  v85 = DynamicType;
  v86 = v7;
  __swift_allocate_boxed_opaque_existential_1(v84);
  v18(v9, v10, v16, v17, DynamicType, v7);
  v19 = v15[3];
  v20 = v15[4];
  __swift_project_boxed_opaque_existential_1(v15, v19);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v20 + 16))(v89, v19, v20);
  LOBYTE(v18) = v89[0];
  v21 = v89[1];
  swift_bridgeObjectRetain();
  sub_247C3C6DC(v89);
  v22 = v85;
  v23 = v86;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v84, v85);
  v24 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v23 + 32))(&v81, v22, v23);
  *(_BYTE *)v25 = (_BYTE)v18;
  *(_QWORD *)(v25 + 8) = v21;
  swift_bridgeObjectRelease();
  v24(&v81, 0);
  v26 = v85;
  v27 = v86;
  v28 = __swift_project_boxed_opaque_existential_1(v84, v85);
  v29 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v73 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v29 + 16))(v31);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(v27 + 8) + 8))(&v81, v26);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v26);
  v32 = v83;
  type metadata accessor for Statement();
  swift_allocObject();
  v33 = (uint64_t)v77;
  swift_retain();
  swift_bridgeObjectRetain();
  v34 = v78;
  sub_247C17F4C(v33);
  v35 = v34;
  if (v34)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
  }
  sub_247C00BBC(v32);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v37 = Statement.columnNames.getter();
  swift_release();
  v38 = *(_QWORD *)(v37 + 16);
  if (v38)
  {
    v77 = v15;
    v78 = 0;
    v80 = MEMORY[0x24BEE4AF8];
    sub_247C00908(0, v38, 0);
    v39 = v80;
    v73 = v37;
    v40 = (uint64_t *)(v37 + 40);
    do
    {
      v41 = *(v40 - 1);
      v42 = *v40;
      swift_bridgeObjectRetain();
      v43 = v41;
      v44 = v78;
      sub_247BFD20C(0, 0xE000000000000000, v43, v42, 34, 0xE100000000000000);
      v78 = v44;
      v81 = 0;
      v82 = 0xE000000000000000;
      sub_247C3D780();
      sub_247C3D840();
      swift_bridgeObjectRelease();
      sub_247C3D780();
      swift_bridgeObjectRelease();
      v45 = v81;
      v46 = v82;
      v80 = v39;
      v47 = *(_QWORD *)(v39 + 16);
      v48 = *(_QWORD *)(v39 + 24);
      if (v47 >= v48 >> 1)
      {
        sub_247C00908((char *)(v48 > 1), v47 + 1, 1);
        v39 = v80;
      }
      v40 += 2;
      *(_QWORD *)(v39 + 16) = v47 + 1;
      v49 = v39 + 16 * v47;
      *(_QWORD *)(v49 + 32) = v45;
      *(_QWORD *)(v49 + 40) = v46;
      --v38;
    }
    while (v38);
    v50 = swift_bridgeObjectRelease();
    v15 = v77;
    v35 = v78;
    if ((v74 & 1) == 0)
      goto LABEL_10;
  }
  else
  {
    v50 = swift_bridgeObjectRelease();
    v39 = MEMORY[0x24BEE4AF8];
    if ((v74 & 1) == 0)
      goto LABEL_10;
  }
  MEMORY[0x24BDAC7A8](v50);
  *(&v73 - 2) = (uint64_t)v15;
  v39 = sub_247C328F4((void (*)(_QWORD *__return_ptr, _QWORD *))sub_247C3D294, (uint64_t)(&v73 - 4), v39);
  swift_bridgeObjectRelease();
LABEL_10:
  v78 = v35;
  v51 = *(_QWORD **)(v39 + 16);
  v74 = v39;
  if (!v51)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v84);
  }
  v52 = v75 + 2;
  v53 = v76 + 2;
  swift_beginAccess();
  swift_beginAccess();
  v54 = (uint64_t *)(v39 + 40);
  v75 = v52;
  v76 = v53;
  while (1)
  {
    v77 = v51;
    v56 = *(v54 - 1);
    v55 = *v54;
    v57 = *v53;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v79 = (_QWORD *)*v52;
    v59 = v79;
    *v52 = 0x8000000000000000;
    v61 = sub_247BFCCBC(v56, v55);
    v62 = v59[2];
    v63 = (v60 & 1) == 0;
    v64 = v62 + v63;
    if (__OFADD__(v62, v63))
    {
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
    }
    v65 = v60;
    if (v59[3] < v64)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v68 = v79;
      if ((v60 & 1) == 0)
        goto LABEL_21;
    }
    else
    {
      sub_247C3B7F0();
      v68 = v79;
      if ((v65 & 1) == 0)
      {
LABEL_21:
        v68[(v61 >> 6) + 8] |= 1 << v61;
        v69 = (uint64_t *)(v68[6] + 16 * v61);
        *v69 = v56;
        v69[1] = v55;
        *(_QWORD *)(v68[7] + 8 * v61) = v57;
        v70 = v68[2];
        v71 = __OFADD__(v70, 1);
        v72 = v70 + 1;
        if (v71)
          goto LABEL_30;
        v68[2] = v72;
        swift_bridgeObjectRetain();
        goto LABEL_23;
      }
    }
LABEL_19:
    *(_QWORD *)(v68[7] + 8 * v61) = v57;
LABEL_23:
    v52 = v75;
    *v75 = v68;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    v53 = v76;
    if (__OFADD__(*v76, 1))
      goto LABEL_29;
    v54 += 2;
    ++*v76;
    v51 = (_QWORD *)((char *)v77 - 1);
    if (v77 == (_QWORD *)1)
      goto LABEL_25;
  }
  sub_247BFD7B0(v64, isUniquelyReferenced_nonNull_native);
  v66 = sub_247BFCCBC(v56, v55);
  if ((v65 & 1) == (v67 & 1))
  {
    v61 = v66;
    v68 = v79;
    if ((v65 & 1) == 0)
      goto LABEL_21;
    goto LABEL_19;
  }
  result = sub_247C3DB34();
  __break(1u);
  return result;
}

uint64_t Row.get<A>(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __int128 *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;

  v29 = a4;
  v30 = a3;
  v7 = sub_247C3D9B4();
  v28 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v27 - v8;
  v11 = *a1;
  v10 = a1[1];
  v12 = a1[2];
  v37 = *v4;
  v15 = type metadata accessor for Expression(0, v7, v13, v14);
  v31 = v11;
  v32 = v10;
  v33 = v12;
  v18 = type metadata accessor for Expression(0, a2, v16, v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = MEMORY[0x24958EDF4]("0.", v15);
  v20 = MEMORY[0x24958EDF4]("0.", v18);
  ExpressionType.init<A>(_:)((uint64_t)&v31, v15, v18, v19, v20);
  v31 = v34;
  v32 = v35;
  v33 = v36;
  v21 = v38;
  Row.get<A>(_:)((uint64_t)&v31, a2, v30, (uint64_t)v9);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v21)
  {
    v24 = v28;
    v23 = v29;
    v25 = *(_QWORD *)(a2 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v9, 1, a2) == 1)
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v7);
      sub_247C322C4();
      swift_allocError();
      *(_QWORD *)v26 = v11;
      *(_QWORD *)(v26 + 8) = v10;
      *(_QWORD *)(v26 + 16) = 0;
      *(_BYTE *)(v26 + 24) = 3;
      swift_bridgeObjectRetain();
      return swift_willThrow();
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v25 + 32))(v23, v9, a2);
    }
  }
  return result;
}

uint64_t sub_247BFC9C0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *))
{
  __int128 *v4;
  __int128 v5;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  v5 = *v4;
  v7 = *a1;
  v8 = *(_OWORD *)(a1 + 1);
  v9 = v5;
  return a4(&v7);
}

uint64_t Row.get<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t result;
  uint64_t v37;
  _QWORD v38[5];
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  char *v42;

  v9 = *(_QWORD *)a1;
  v10 = *(_OWORD *)(a1 + 8);
  v11 = *v4;
  v12 = v4[1];
  v13 = *(_QWORD *)(*v4 + 16);
  v41 = v10;
  if (v13)
  {
    v14 = v10;
    swift_bridgeObjectRetain();
    v15 = sub_247BFCCBC(v9, v14);
    if ((v16 & 1) != 0)
    {
      v17 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v15);
      swift_bridgeObjectRelease();
      v18 = a4;
      v19 = v17;
      v20 = v12;
      return sub_247BFCE00(v19, v20, a2, a3, v18);
    }
    swift_bridgeObjectRelease();
  }
  v40 = v12;
  v21 = swift_bridgeObjectRetain();
  v22 = sub_247C10A30(v21);
  v23 = swift_bridgeObjectRelease();
  MEMORY[0x24BDAC7A8](v23);
  v38[2] = a2;
  v38[3] = a3;
  v38[4] = v9;
  v39 = v41;
  v24 = (_QWORD *)sub_247C36D50((uint64_t)sub_247C3C5DC, (uint64_t)v38, (uint64_t)v22);
  v25 = v24;
  v26 = v24[2];
  if (v26 == 1)
  {
    v32 = v24[4];
    v31 = v24[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v11 + 16))
    {
      v33 = sub_247BFCCBC(v32, v31);
      if ((v34 & 1) != 0)
      {
        v35 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v33);
        swift_bridgeObjectRelease();
        v18 = a4;
        v19 = v35;
        v20 = v40;
        return sub_247BFCE00(v19, v20, a2, a3, v18);
      }
    }
    swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    if (v26)
    {
      sub_247C322C4();
      swift_allocError();
      *(_QWORD *)v37 = v9;
      *(_QWORD *)(v37 + 8) = v41;
      *(_QWORD *)(v37 + 16) = v25;
      *(_BYTE *)(v37 + 24) = 2;
      swift_bridgeObjectRetain();
      return swift_willThrow();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    v27 = v41;
    swift_bridgeObjectRetain();
    v28 = (char *)sub_247C10A30(v11);
    swift_bridgeObjectRelease();
    v42 = v28;
    sub_247C3BA2C(&v42);
    if (!v5)
    {
      swift_bridgeObjectRelease();
      v29 = v42;
      sub_247C322C4();
      swift_allocError();
      *(_QWORD *)v30 = v9;
      *(_QWORD *)(v30 + 8) = v27;
      *(_QWORD *)(v30 + 16) = v29;
      *(_BYTE *)(v30 + 24) = 1;
      return swift_willThrow();
    }
  }
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_247BFCCBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_247C3DB88();
  sub_247C3D81C();
  v4 = sub_247C3DBA0();
  return sub_247BFCD20(a1, a2, v4);
}

unint64_t sub_247BFCD20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_247C3DAD4() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_247C3DAD4() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_247BFCE00@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  char *v19;
  int v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  int v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t AssociatedTypeWitness;
  uint64_t v29;
  _BYTE v30[40];

  v29 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v27 = (char *)&v27 - v9;
  v10 = swift_getAssociatedTypeWitness();
  v11 = sub_247C3D9B4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v27 - v14;
  v16 = *(_QWORD *)(v10 - 8);
  result = MEMORY[0x24BDAC7A8](v13);
  v19 = (char *)&v27 - v18;
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a2 + 16) > a1)
  {
    sub_247BFD054(a2 + 40 * a1 + 32, (uint64_t)v30, &qword_254455448);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
    v20 = swift_dynamicCast();
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    if (v20)
    {
      v21(v15, 0, 1, v10);
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v15, v10);
      (*(void (**)(char *, uint64_t, uint64_t))(a4 + 48))(v19, a3, a4);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v10);
      v22 = v29;
      v23 = swift_dynamicCast();
      v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56);
      if (v23)
      {
        v25 = v22;
        v26 = 0;
        return v24(v25, v26, 1, a3);
      }
      v25 = v22;
    }
    else
    {
      v21(v15, 1, 1, v10);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56);
      v25 = v29;
    }
    v26 = 1;
    return v24(v25, v26, 1, a3);
  }
  __break(1u);
  return result;
}

uint64_t sub_247BFD054(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for Expression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Expression);
}

uint64_t destroy for Module()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ExpressionType.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24))(a3, a5);
  v12 = v11;
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 32))(a3, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 40))(v10, v12, v13, a2, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a1, a3);
}

uint64_t sub_247BFD184()
{
  sub_247BFD198();
  return swift_bridgeObjectRetain();
}

uint64_t sub_247BFD198()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_247BFD1A0()
{
  uint64_t v0;

  v0 = sub_247BFD1D4();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_247BFD1D4()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Expression.init(_:_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

_QWORD *sub_247BFD1EC@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

uint64_t sub_247BFD200@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_247BFD20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_247C3D864();
  if (v10)
  {
    v11 = v9;
    v12 = v10;
    do
    {
      if (v11 == a5 && v12 == a6 || (sub_247C3DAD4() & 1) != 0)
        sub_247C3D780();
      sub_247C3D780();
      swift_bridgeObjectRetain();
      sub_247C3D840();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = sub_247C3D864();
      v12 = v13;
    }
    while (v13);
  }
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_247BFD38C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_247BFD3D4(v2);
  v5 = v4;
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  a1[1] = v5;
  return result;
}

uint64_t sub_247BFD3D4(uint64_t a1)
{
  _QWORD *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  unint64_t v10;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455308);
  v10 = sub_247BFD46C();
  v8[0] = a1;
  v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  v3 = (_BYTE *)(*v2 + 32);
  v4 = &v3[*(_QWORD *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_247BFD4B8(v3, v4, &v7);
  v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

unint64_t sub_247BFD46C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254455330;
  if (!qword_254455330)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254455308);
    result = MEMORY[0x24958EDF4](MEMORY[0x24BDCFBE0], v1);
    atomic_store(result, (unint64_t *)&qword_254455330);
  }
  return result;
}

_BYTE *sub_247BFD4B8@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_247C10B14(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_247C10BD4((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_247BFD52C((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_247BFD52C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_247C3D69C();
  swift_allocObject();
  result = sub_247C3D66C();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t _s11SwiftSQLite12QueryClausesVwxx_0(_QWORD *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[10])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[12])
  {
    swift_bridgeObjectRelease();
    if (a1[14])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_247BFD634@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

double sub_247BFD640@<D0>(double *a1@<X0>, _QWORD *a2@<X8>)
{
  double result;

  result = *a1;
  *a2 = *(_QWORD *)a1;
  return result;
}

uint64_t _s11SwiftSQLite12QueryClausesVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  v8 = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v8;
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  }
  v9 = *(_QWORD *)(a2 + 96);
  if (v9)
  {
    *(_QWORD *)(a1 + 96) = v9;
    v10 = *(_QWORD *)(a2 + 112);
    swift_bridgeObjectRetain();
    if (v10)
    {
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = v10;
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    }
  }
  else
  {
    v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
  }
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_247BFD7B0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455468);
  v37 = a2;
  v6 = sub_247C3DA80();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_247C3DB88();
    sub_247C3D81C();
    result = sub_247C3DBA0();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t Statement.columnNames.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  if (*(_QWORD *)(v0 + 48))
  {
    v1 = *(_QWORD *)(v0 + 48);
LABEL_7:
    swift_bridgeObjectRetain();
    return v1;
  }
  result = Statement.columnCount.getter();
  if (result < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (result > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((result & 0x80000000) == 0)
  {
    v3 = result << 32;
    swift_retain();
    v1 = sub_247C1A334(v3, v0);
    swift_release();
    *(_QWORD *)(v0 + 48) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t Statement.columnCount.getter()
{
  uint64_t v0;
  uint64_t result;

  if (*(_BYTE *)(v0 + 40) != 1)
    return *(_QWORD *)(v0 + 32);
  swift_beginAccess();
  result = sqlite3_column_count(*(sqlite3_stmt **)(v0 + 16));
  *(_QWORD *)(v0 + 32) = (int)result;
  *(_BYTE *)(v0 + 40) = 0;
  return result;
}

double _s11SwiftSQLite5TableV_8databaseACSS_SSSgtcfC_0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_247C3E1D0;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(v10 + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v10 + 32) = 42;
  *(_QWORD *)(v10 + 40) = 0xE100000000000000;
  v12 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v10 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v10 + 56) = v11;
  *(_BYTE *)a5 = 0;
  *(_QWORD *)(a5 + 8) = v10;
  *(_QWORD *)(a5 + 16) = a1;
  *(_QWORD *)(a5 + 24) = a2;
  *(_QWORD *)(a5 + 32) = 0;
  *(_QWORD *)(a5 + 40) = 0;
  *(_QWORD *)(a5 + 48) = a3;
  *(_QWORD *)(a5 + 56) = a4;
  *(_QWORD *)(a5 + 64) = v12;
  result = 0.0;
  *(_OWORD *)(a5 + 72) = 0u;
  *(_OWORD *)(a5 + 88) = 0u;
  *(_OWORD *)(a5 + 104) = 0u;
  *(_QWORD *)(a5 + 120) = 0;
  *(_QWORD *)(a5 + 128) = v12;
  *(_QWORD *)(a5 + 136) = 0;
  *(_QWORD *)(a5 + 144) = 0;
  *(_WORD *)(a5 + 152) = 256;
  *(_QWORD *)(a5 + 160) = v12;
  return result;
}

uint64_t sub_247BFDCA0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(__int128 *, _QWORD);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v91;
  uint64_t *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  _QWORD *v100;
  _QWORD *v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119[2];
  _BYTE v120[40];
  __int128 v121[2];
  uint64_t v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  uint64_t v133;
  _BYTE v134[24];
  uint64_t v135;
  uint64_t v136;
  _OWORD v137[10];
  uint64_t v138;
  _QWORD v139[3];
  uint64_t v140;
  uint64_t v141;
  _QWORD v142[22];

  v2 = v1;
  v4 = swift_allocObject();
  v5 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = MEMORY[0x24BEE4B00];
  v93 = (_QWORD *)(v4 + 16);
  v100 = a1;
  v101 = (_QWORD *)v5;
  *(_QWORD *)(v5 + 16) = 0;
  v6 = (uint64_t *)(v5 + 16);
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v8 + 16))(v142, v7, v8);
  v9 = v142[1];
  swift_bridgeObjectRetain();
  sub_247C3C6DC(v142);
  v94 = *(_QWORD *)(v9 + 16);
  if (!v94)
  {
    swift_bridgeObjectRelease();
LABEL_78:
    swift_beginAccess();
    v66 = *(_QWORD *)(v4 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    swift_release();
    return v66;
  }
  v97 = v9 + 32;
  v92 = v6;
  result = swift_beginAccess();
  v11 = 0;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v95 = v9;
  v96 = (_QWORD *)v4;
LABEL_3:
  if (v11 < *(_QWORD *)(v9 + 16))
  {
    v98 = v11;
    sub_247BFA88C(v97 + 40 * v11, (uint64_t)v139);
    v13 = v140;
    v14 = v141;
    __swift_project_boxed_opaque_existential_1(v139, v140);
    (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v14 + 8))(v137, v13, v14);
    v15 = v137[0];
    swift_bridgeObjectRelease();
    v16 = HIBYTE(*((_QWORD *)&v15 + 1)) & 0xFLL;
    if ((*((_QWORD *)&v15 + 1) & 0x2000000000000000) == 0)
      v16 = v15 & 0xFFFFFFFFFFFFLL;
    if (!v16)
    {
      swift_bridgeObjectRelease();
      v105 = v12;
      goto LABEL_31;
    }
    v17 = 4 * v16;
    v18 = v12;
    v19 = 15;
    v20 = 15;
    v21 = 15;
    v105 = v18;
    v102 = v17;
    v103 = v2;
    while (sub_247C3D888() != 46 || v23 != 0xE100000000000000)
    {
      v24 = sub_247C3DAD4();
      result = swift_bridgeObjectRelease();
      if ((v24 & 1) != 0)
        goto LABEL_15;
      result = sub_247C3D834();
      v19 = result;
LABEL_10:
      if (v17 == v19 >> 14)
      {
        if (v17 == v20 >> 14)
        {
          swift_bridgeObjectRelease();
          v2 = v103;
          goto LABEL_31;
        }
        v2 = v103;
        if (v17 < v21 >> 14)
          goto LABEL_88;
        v34 = sub_247C3D8A0();
        v36 = v35;
        v38 = v37;
        v40 = v39;
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v105 = sub_247C00808(0, *((_QWORD *)v105 + 2) + 1, 1, v105);
        v42 = *((_QWORD *)v105 + 2);
        v41 = *((_QWORD *)v105 + 3);
        if (v42 >= v41 >> 1)
          v105 = sub_247C00808((char *)(v41 > 1), v42 + 1, 1, v105);
        *((_QWORD *)v105 + 2) = v42 + 1;
        v43 = &v105[32 * v42];
        *((_QWORD *)v43 + 4) = v34;
        *((_QWORD *)v43 + 5) = v36;
        *((_QWORD *)v43 + 6) = v38;
        *((_QWORD *)v43 + 7) = v40;
LABEL_31:
        v44 = sub_247C327F8((uint64_t)v105);
        v104 = v2;
        result = swift_bridgeObjectRelease();
        if (!*(_QWORD *)(v44 + 16))
          goto LABEL_86;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_247C3C550(v44);
          v44 = result;
          v45 = *(_QWORD *)(result + 16);
          if (v45)
            goto LABEL_34;
          goto LABEL_87;
        }
        v45 = *(_QWORD *)(v44 + 16);
        if (!v45)
          goto LABEL_87;
LABEL_34:
        v46 = v45 - 1;
        v47 = v44 + 16 * v46;
        v49 = *(_QWORD *)(v47 + 32);
        v48 = *(_QWORD *)(v47 + 40);
        *(_QWORD *)(v44 + 16) = v46;
        *(_QWORD *)&v137[0] = v44;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_254455450);
        sub_247BFF268((unint64_t *)&qword_254455458, &qword_254455450, MEMORY[0x24BEE12B0]);
        v50 = sub_247C3D78C();
        v52 = v51;
        swift_bridgeObjectRelease();
        if (v49 == 42 && v48 == 0xE100000000000000)
        {
          swift_bridgeObjectRelease();
          goto LABEL_38;
        }
        v53 = sub_247C3DAD4();
        swift_bridgeObjectRelease();
        if ((v53 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v86 = v140;
          v87 = v141;
          __swift_project_boxed_opaque_existential_1(v139, v140);
          (*(void (**)(_OWORD *__return_ptr, uint64_t, uint64_t))(v87 + 8))(v137, v86, v87);
          v88 = v137[0];
          swift_bridgeObjectRelease();
          v89 = *v92;
          swift_beginAccess();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)&v107 = *v93;
          *v93 = 0x8000000000000000;
          sub_247C2B658(v89, v88, *((uint64_t *)&v88 + 1), isUniquelyReferenced_nonNull_native);
          *v93 = v107;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          result = swift_endAccess();
          if (!__OFADD__(*v92, 1))
          {
            ++*v92;
            v4 = (uint64_t)v96;
            goto LABEL_69;
          }
          goto LABEL_89;
        }
LABEL_38:
        sub_247BFA88C((uint64_t)v100, (uint64_t)v134);
        __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
        v54 = swift_allocObject();
        *(_OWORD *)(v54 + 16) = xmmword_247C3E1D0;
        *(_QWORD *)(v54 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
        *(_QWORD *)(v54 + 64) = &protocol witness table for Expression<A>;
        *(_QWORD *)(v54 + 32) = 42;
        *(_QWORD *)(v54 + 40) = 0xE100000000000000;
        v55 = MEMORY[0x24BEE4AF8];
        *(_QWORD *)(v54 + 48) = MEMORY[0x24BEE4AF8];
        v56 = v135;
        v57 = v136;
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v134, v135);
        v58 = (void (*)(__int128 *, _QWORD))(*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v57 + 32))(&v123, v56, v57);
        *(_BYTE *)v59 = 0;
        *(_QWORD *)(v59 + 8) = v54;
        swift_bridgeObjectRelease();
        v58(&v123, 0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2544552E0);
        v60 = swift_allocObject();
        *(_OWORD *)(v60 + 16) = xmmword_247C3E1D0;
        sub_247BFA88C((uint64_t)v134, v60 + 32);
        v61 = v100[3];
        v62 = v100[4];
        __swift_project_boxed_opaque_existential_1(v100, v61);
        (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v62 + 16))(&v123, v61, v62);
        v137[8] = v131;
        v137[9] = v132;
        v138 = v133;
        v137[4] = v127;
        v137[5] = v128;
        v137[6] = v129;
        v137[7] = v130;
        v137[0] = v123;
        v137[1] = v124;
        v137[2] = v125;
        v137[3] = v126;
        v63 = v127;
        swift_bridgeObjectRetain();
        sub_247C3C6DC(v137);
        v64 = *(_QWORD *)(v63 + 16);
        if (v64)
        {
          v106 = v60;
          v122 = v55;
          sub_247C12AC8(0, v64, 0);
          v65 = v63 + 32;
          v66 = v122;
          do
          {
            sub_247BFD054(v65, (uint64_t)&v107, &qword_254455298);
            LOBYTE(v118) = v107;
            sub_247BFA88C((uint64_t)&v107 + 8, (uint64_t)v119);
            sub_247BFA88C((uint64_t)&v110, (uint64_t)v120);
            sub_247BFECDC(v119, (uint64_t)v121);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v120);
            sub_247BFC084((uint64_t)&v107, &qword_254455298);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_247C12AC8(0, *(_QWORD *)(v66 + 16) + 1, 1);
              v66 = v122;
            }
            v68 = *(_QWORD *)(v66 + 16);
            v67 = *(_QWORD *)(v66 + 24);
            if (v68 >= v67 >> 1)
            {
              sub_247C12AC8((_QWORD *)(v67 > 1), v68 + 1, 1);
              v66 = v122;
            }
            *(_QWORD *)(v66 + 16) = v68 + 1;
            sub_247BFECDC(v121, v66 + 40 * v68 + 32);
            v65 += 88;
            --v64;
          }
          while (v64);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v60 = v106;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v66 = v55;
        }
        *(_QWORD *)&v123 = v60;
        sub_247C00A24(v66);
        v69 = v123;
        v70 = HIBYTE(v52) & 0xF;
        if ((v52 & 0x2000000000000000) == 0)
          v70 = v50 & 0xFFFFFFFFFFFFLL;
        if (!v70)
        {
          swift_bridgeObjectRelease();
          v80 = *(_QWORD *)(v69 + 16);
          if (!v80)
          {
            swift_bridgeObjectRelease();
            v4 = (uint64_t)v96;
LABEL_72:
            v9 = v95;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v134);
            goto LABEL_73;
          }
          v66 = v69 + 32;
          v81 = v80 - 1;
          v4 = (uint64_t)v96;
          while (1)
          {
            sub_247BFA88C(v66, (uint64_t)&v118);
            v82 = v100[3];
            v83 = v100[4];
            __swift_project_boxed_opaque_existential_1(v100, v82);
            (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v83 + 16))(&v107, v82, v83);
            v131 = v115;
            v132 = v116;
            v133 = v117;
            v127 = v111;
            v128 = v112;
            v129 = v113;
            v130 = v114;
            v123 = v107;
            v124 = v108;
            v125 = v109;
            v126 = v110;
            v84 = v111;
            swift_bridgeObjectRetain();
            sub_247C3C6DC(&v123);
            v85 = *(_QWORD *)(v84 + 16);
            swift_bridgeObjectRelease();
            swift_retain();
            sub_247BFC13C(&v118, v99, v85 != 0, v96, v101);
            if (v2)
              break;
            swift_retain();
            swift_retain();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v118);
            swift_release();
            swift_release();
            swift_release();
            if (!v81)
            {
              swift_bridgeObjectRelease();
              goto LABEL_72;
            }
            v66 += 40;
            --v81;
          }
          swift_release();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v118);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_81;
        }
        v71 = *(_QWORD *)(v123 + 16);
        if (!v71)
        {
LABEL_79:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_247C322C4();
          swift_allocError();
          *(_QWORD *)v91 = v50;
          *(_QWORD *)(v91 + 8) = v52;
          *(_QWORD *)(v91 + 16) = 0;
          *(_BYTE *)(v91 + 24) = 0;
          swift_willThrow();
LABEL_81:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v134);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v139);
          swift_release();
          swift_release();
          return v66;
        }
        v66 = v123 + 32;
        while (1)
        {
          sub_247BFA88C(v66, (uint64_t)&v123);
          v72 = *((_QWORD *)&v124 + 1);
          v73 = v125;
          __swift_project_boxed_opaque_existential_1(&v123, *((uint64_t *)&v124 + 1));
          sub_247BF9730(0, v72, v73, (uint64_t *)&v107);
          v74 = *((_QWORD *)&v108 + 1);
          v75 = v109;
          __swift_project_boxed_opaque_existential_1(&v107, *((uint64_t *)&v108 + 1));
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v75 + 8))(&v118, v74, v75);
          v77 = v118;
          v76 = *(_QWORD *)&v119[0];
          swift_bridgeObjectRelease();
          if (v77 == v50 && v76 == v52)
            break;
          v79 = sub_247C3DAD4();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
          if ((v79 & 1) != 0)
            goto LABEL_67;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
          v66 += 40;
          if (!--v71)
            goto LABEL_79;
        }
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
LABEL_67:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v66 = (uint64_t)v99;
        swift_retain();
        v4 = (uint64_t)v96;
        sub_247BFC13C(&v123, v99, 1, v96, v101);
        v2 = v104;
        if (v104)
        {
          swift_retain();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
          goto LABEL_81;
        }
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v134);
LABEL_69:
        v9 = v95;
LABEL_73:
        v12 = (char *)MEMORY[0x24BEE4AF8];
        v11 = v98 + 1;
        result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v139);
        if (v98 + 1 == v94)
        {
          swift_bridgeObjectRelease();
          goto LABEL_78;
        }
        goto LABEL_3;
      }
    }
    result = swift_bridgeObjectRelease();
LABEL_15:
    if (v20 >> 14 != v19 >> 14)
    {
      if (v19 >> 14 < v20 >> 14)
      {
        __break(1u);
        goto LABEL_85;
      }
      v25 = sub_247C3D8A0();
      v27 = v26;
      v29 = v28;
      v31 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v105 = sub_247C00808(0, *((_QWORD *)v105 + 2) + 1, 1, v105);
      v33 = *((_QWORD *)v105 + 2);
      v32 = *((_QWORD *)v105 + 3);
      if (v33 >= v32 >> 1)
        v105 = sub_247C00808((char *)(v32 > 1), v33 + 1, 1, v105);
      *((_QWORD *)v105 + 2) = v33 + 1;
      v22 = &v105[32 * v33];
      *((_QWORD *)v22 + 4) = v25;
      *((_QWORD *)v22 + 5) = v27;
      *((_QWORD *)v22 + 6) = v29;
      *((_QWORD *)v22 + 7) = v31;
      v17 = v102;
    }
    result = sub_247C3D834();
    v19 = result;
    v20 = result;
    v21 = result;
    goto LABEL_10;
  }
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
  return result;
}

uint64_t sub_247BFE92C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_247BFE95C(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return sub_247BFE92C(a2, a3);
  }
  return result;
}

uint64_t sub_247BFE9A0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_247BFE9D0(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return sub_247BFE9A0(a2, a3);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Setter(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_247BFEA4C(void (*a1)(uint64_t))
{
  uint64_t inited;
  uint64_t i;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19[2];
  _QWORD *v20;
  uint64_t v21[3];
  uint64_t v22;
  uint64_t v23;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254455420);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3F150;
  sub_247BFF8F8(a1, (uint64_t *)(inited + 32));
  sub_247C00398(inited + 72);
  sub_247BFFEBC(inited + 112);
  sub_247BFF6A4(inited + 152);
  sub_247BFFFDC(inited + 192);
  sub_247C00284(inited + 232);
  sub_247BFF484(inited + 272);
  v20 = (_QWORD *)MEMORY[0x24BEE4AF8];
  for (i = 32; i != 312; i += 40)
  {
    sub_247BFD054(inited + i, (uint64_t)v21, &qword_254455440);
    sub_247BFBCD8((uint64_t)v21, (uint64_t)&v16, &qword_254455440);
    if (v17)
    {
      sub_247BFECDC(&v16, (uint64_t)v19);
      sub_247BFECDC(v19, (uint64_t)&v16);
      v4 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v4 = sub_247BFF3E4(0, v4[2] + 1, 1, v4);
        v20 = v4;
      }
      v6 = v4[2];
      v5 = v4[3];
      if (v6 >= v5 >> 1)
        v20 = sub_247BFF3E4((_QWORD *)(v5 > 1), v6 + 1, 1, v4);
      v7 = v17;
      v8 = v18;
      v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v16, v17);
      MEMORY[0x24BDAC7A8](v9);
      v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v12 + 16))(v11);
      sub_247BFF3F8(v6, (uint64_t)v11, (uint64_t *)&v20, v7, v8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
    }
    else
    {
      sub_247BFC084((uint64_t)&v16, &qword_254455440);
    }
  }
  swift_bridgeObjectRelease();
  sub_247BFECF4((uint64_t)v20, v21);
  swift_bridgeObjectRelease();
  v13 = v22;
  v14 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

_QWORD *_s11SwiftSQLite6ModuleVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_247BFECDC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_247BFECF4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[3];

  v2 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    v5 = MEMORY[0x24BEE4AF8];
    v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_24:
    v27[0] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455450);
    sub_247BFF268((unint64_t *)&qword_254455458, &qword_254455450, MEMORY[0x24BEE12B0]);
    v23 = sub_247C3D78C();
    v25 = v24;
    swift_bridgeObjectRelease();
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
    v2[3] = result;
    v2[4] = (uint64_t)&protocol witness table for Expression<A>;
    *v2 = v23;
    v2[1] = v25;
    v2[2] = (uint64_t)v6;
    return result;
  }
  v4 = (_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x24BEE4AF8];
  v6 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v7 = v4[3];
    v8 = v4[4];
    __swift_project_boxed_opaque_existential_1(v4, v7);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v8 + 8))(v27, v7, v8);
    v10 = v27[0];
    v9 = v27[1];
    v11 = v27[2];
    swift_bridgeObjectRetain();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_247BFF168(0, *(_QWORD *)(v5 + 16) + 1, 1, (char *)v5);
      v5 = result;
    }
    v14 = *(_QWORD *)(v5 + 16);
    v13 = *(_QWORD *)(v5 + 24);
    if (v14 >= v13 >> 1)
    {
      result = (uint64_t)sub_247BFF168((char *)(v13 > 1), v14 + 1, 1, (char *)v5);
      v5 = result;
    }
    *(_QWORD *)(v5 + 16) = v14 + 1;
    v15 = v5 + 16 * v14;
    *(_QWORD *)(v15 + 32) = v10;
    *(_QWORD *)(v15 + 40) = v9;
    v16 = *(_QWORD *)(v11 + 16);
    v17 = v6[2];
    v18 = v17 + v16;
    if (__OFADD__(v17, v16))
      break;
    swift_bridgeObjectRetain();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)result && v18 <= v6[3] >> 1)
    {
      if (*(_QWORD *)(v11 + 16))
        goto LABEL_18;
    }
    else
    {
      if (v17 <= v18)
        v19 = v17 + v16;
      else
        v19 = v17;
      result = (uint64_t)sub_247BFF034((_QWORD *)result, v19, 1, v6);
      v6 = (_QWORD *)result;
      if (*(_QWORD *)(v11 + 16))
      {
LABEL_18:
        if ((v6[3] >> 1) - v6[2] < v16)
          goto LABEL_27;
        __swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
        result = swift_arrayInitWithCopy();
        if (v16)
        {
          v20 = v6[2];
          v21 = __OFADD__(v20, v16);
          v22 = v20 + v16;
          if (v21)
            goto LABEL_28;
          v6[2] = v22;
        }
        goto LABEL_4;
      }
    }
    if (v16)
      goto LABEL_26;
LABEL_4:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v4 += 5;
    if (!--v3)
    {
      swift_bridgeObjectRelease();
      v2 = a2;
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_247BFEF94@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;

  v4 = MEMORY[0x24958EDF4]("0.", a1);
  return ExpressionType.expression.getter(a1, v4, a2);
}

uint64_t ExpressionType.expression.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = (*(uint64_t (**)(void))(a2 + 24))();
  v8 = v7;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  *a3 = v6;
  a3[1] = v8;
  a3[2] = result;
  return result;
}

_QWORD *sub_247BFF034(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_247BFF168(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455470);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_247BFF268(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24958EDF4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_247BFF2AC(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;

  v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v8 & 1) != 0)
  {
    if (v13 != a4 || v13 + 4 >= &a4[5 * v11 + 4])
      memmove(v13 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v13;
}

_QWORD *sub_247BFF3E4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_247BFF2AC(a1, a2, a3, a4, qword_254455398, &qword_254455340);
}

uint64_t sub_247BFF3F8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_247BFECDC(&v12, v10 + 40 * a1 + 32);
}

uint64_t (*sub_247BFF474())()
{
  return nullsub_1;
}

uint64_t sub_247BFF484@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  uint64_t result;
  char v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  _OWORD v9[2];
  uint64_t v10;
  _BYTE v11[24];
  uint64_t v12;
  char v13;
  char v14;

  v3 = *(_OWORD *)(v1 + 144);
  v9[0] = *(_OWORD *)(v1 + 128);
  v9[1] = v3;
  v10 = *(_QWORD *)(v1 + 160);
  sub_247BFBCD8((uint64_t)v9 + 8, (uint64_t)v11, &qword_254455460);
  result = sub_247BFBCD8((uint64_t)v11, (uint64_t)&v12, &qword_254455460);
  if ((v14 & 1) != 0)
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    v5 = v13;
    sub_247C3DAC8();
    sub_247C3D840();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
    {
      result = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
      *(_QWORD *)(a1 + 32) = &protocol witness table for Expression<A>;
      *(_QWORD *)a1 = 0x2054494D494CLL;
      *(_QWORD *)(a1 + 8) = 0xE600000000000000;
      *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4AF8];
      *(_QWORD *)(a1 + 24) = result;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
      *(_QWORD *)(inited + 56) = v7;
      *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
      *(_QWORD *)(inited + 32) = 0x2054494D494CLL;
      v8 = MEMORY[0x24BEE4AF8];
      *(_QWORD *)(inited + 40) = 0xE600000000000000;
      *(_QWORD *)(inited + 48) = v8;
      sub_247C3DAC8();
      sub_247C3D840();
      swift_bridgeObjectRelease();
      *(_QWORD *)(inited + 96) = v7;
      *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
      *(_QWORD *)(inited + 72) = 0x2054455346464FLL;
      *(_QWORD *)(inited + 80) = 0xE700000000000000;
      *(_QWORD *)(inited + 88) = v8;
      sub_247BFECF4(inited, (uint64_t *)a1);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
      return swift_arrayDestroy();
    }
  }
  return result;
}

void sub_247BFF6A4(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12[3];

  v3 = v1[12];
  if (v3)
  {
    v5 = v1[13];
    v4 = v1[14];
    v6 = v1[15];
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
    *(_QWORD *)(inited + 56) = v8;
    *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
    *(_QWORD *)(inited + 32) = 0x59422050554F5247;
    v9 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(inited + 40) = 0xE800000000000000;
    *(_QWORD *)(inited + 48) = v9;
    swift_bridgeObjectRetain();
    sub_247BFE9A0(v5, v4);
    sub_247BFECF4(v3, (uint64_t *)(inited + 72));
    sub_247BFECF4(inited, (uint64_t *)v12);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    if (v4)
    {
      v10 = swift_initStackObject();
      *(_OWORD *)(v10 + 16) = xmmword_247C3E1B0;
      sub_247BFA88C((uint64_t)v12, v10 + 32);
      v11 = swift_initStackObject();
      *(_OWORD *)(v11 + 16) = xmmword_247C3E1B0;
      *(_QWORD *)(v11 + 56) = v8;
      *(_QWORD *)(v11 + 64) = &protocol witness table for Expression<A>;
      *(_QWORD *)(v11 + 32) = 0x474E49564148;
      *(_QWORD *)(v11 + 40) = 0xE600000000000000;
      *(_QWORD *)(v11 + 48) = MEMORY[0x24BEE4AF8];
      *(_QWORD *)(v11 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
      *(_QWORD *)(v11 + 104) = &protocol witness table for Expression<A>;
      *(_QWORD *)(v11 + 72) = v5;
      *(_QWORD *)(v11 + 80) = v4;
      *(_QWORD *)(v11 + 88) = v6;
      sub_247BFECF4(v11, (uint64_t *)(v10 + 72));
      swift_setDeallocating();
      swift_arrayDestroy();
      sub_247BFECF4(v10, (uint64_t *)a1);
      swift_setDeallocating();
      swift_arrayDestroy();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    }
    else
    {
      sub_247BFECDC(v12, a1);
    }
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
}

uint64_t sub_247BFF8F8@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t *a2@<X8>)
{
  _BYTE *v2;
  uint64_t inited;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1C0;
  if ((*v2 & 1) != 0)
    v5 = 0x44205443454C4553;
  else
    v5 = 0x5443454C4553;
  if ((*v2 & 1) != 0)
    v6 = 0xEF54434E49545349;
  else
    v6 = 0xE600000000000000;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(inited + 32) = v5;
  *(_QWORD *)(inited + 56) = v7;
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  v8 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 40) = v6;
  *(_QWORD *)(inited + 48) = v8;
  v9 = swift_bridgeObjectRetain();
  sub_247BFECF4(v9, (uint64_t *)(inited + 72));
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 136) = v7;
  *(_QWORD *)(inited + 144) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 112) = 1297044038;
  *(_QWORD *)(inited + 120) = 0xE400000000000000;
  *(_QWORD *)(inited + 128) = v8;
  a1(1);
  sub_247BFECF4(inited, a2);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  return swift_arrayDestroy();
}

uint64_t sub_247BFFA5C@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;

  v5 = v2[2];
  v4 = v2[3];
  v6 = v2[5];
  if (v6)
  {
    v7 = v2[4];
    if ((a1 & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_247C3E140;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247BFFC64(v5, v4, (uint64_t *)(inited + 32));
      swift_bridgeObjectRelease();
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
      *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
      *(_QWORD *)(inited + 72) = 21313;
      *(_QWORD *)(inited + 80) = 0xE200000000000000;
      v10 = MEMORY[0x24BEE4AF8];
      *(_QWORD *)(inited + 88) = MEMORY[0x24BEE4AF8];
      *(_QWORD *)(inited + 96) = v9;
      *(_QWORD *)(inited + 136) = v9;
      *(_QWORD *)(inited + 144) = &protocol witness table for Expression<A>;
      sub_247BFD20C(0, 0xE000000000000000, v7, v6, 34, 0xE100000000000000);
      sub_247C3D780();
      sub_247C3D840();
      swift_bridgeObjectRelease();
      sub_247C3D780();
      swift_bridgeObjectRelease();
      *(_QWORD *)(inited + 112) = 0;
      *(_QWORD *)(inited + 120) = 0xE000000000000000;
      *(_QWORD *)(inited + 128) = v10;
      sub_247BFECF4(inited, a2);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
      return swift_arrayDestroy();
    }
    v5 = v2[4];
    v4 = v2[5];
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_247BFFC64(v5, v4, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_247BFFC64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v4 = v3;
  swift_bridgeObjectRetain();
  sub_247BFD20C(0, 0xE000000000000000, a1, a2, 34, 0xE100000000000000);
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v4 + 56);
  if (v8)
  {
    v9 = *(_QWORD *)(v4 + 48);
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
    *(_QWORD *)(inited + 56) = v11;
    *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
    swift_bridgeObjectRetain();
    sub_247BFD20C(0, 0xE000000000000000, v9, v8, 34, 0xE100000000000000);
    sub_247C3D780();
    sub_247C3D840();
    swift_bridgeObjectRelease();
    sub_247C3D780();
    swift_bridgeObjectRelease();
    *(_QWORD *)(inited + 32) = 0;
    v12 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(inited + 40) = 0xE000000000000000;
    *(_QWORD *)(inited + 48) = v12;
    *(_QWORD *)(inited + 96) = v11;
    *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
    *(_QWORD *)(inited + 72) = 0;
    *(_QWORD *)(inited + 80) = 0xE000000000000000;
    *(_QWORD *)(inited + 88) = v12;
    sub_247BFECF4(inited, a3);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    return swift_arrayDestroy();
  }
  else
  {
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
    a3[4] = (uint64_t)&protocol witness table for Expression<A>;
    *a3 = 0;
    a3[1] = 0xE000000000000000;
    a3[2] = MEMORY[0x24BEE4AF8];
    a3[3] = result;
  }
  return result;
}

double sub_247BFFEBC@<D0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  double result;

  v3 = v1[10];
  if (v3)
  {
    v4 = v1[11];
    v5 = v1[9];
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
    *(_QWORD *)(inited + 32) = 0x4552454857;
    *(_QWORD *)(inited + 56) = v7;
    *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
    v8 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(inited + 40) = 0xE500000000000000;
    *(_QWORD *)(inited + 48) = v8;
    *(_QWORD *)(inited + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
    *(_QWORD *)(inited + 72) = v5;
    *(_QWORD *)(inited + 80) = v3;
    *(_QWORD *)(inited + 88) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247BFECF4(inited, (uint64_t *)a1);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

double sub_247BFFFDC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  uint64_t *v22;
  __int128 v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = *(_QWORD *)(v1 + 160);
  v31 = v2;
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v22 = (uint64_t *)a1;
    v30 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_247C12A0C(0, v3, 0);
    v4 = v2 + 32;
    v5 = v30;
    v23 = xmmword_247C3E1B0;
    do
    {
      sub_247BFA88C(v4, (uint64_t)v24);
      __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v23;
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
      *(_QWORD *)(inited + 32) = 0x4E4F494E55;
      *(_QWORD *)(inited + 56) = v7;
      *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
      *(_QWORD *)(inited + 40) = 0xE500000000000000;
      *(_QWORD *)(inited + 48) = MEMORY[0x24BEE4AF8];
      v8 = v25;
      v9 = v26;
      v10 = __swift_project_boxed_opaque_existential_1(v24, v25);
      *(_QWORD *)(inited + 96) = v8;
      *(_QWORD *)(inited + 104) = *(_QWORD *)(v9 + 8);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 72));
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_1, v10, v8);
      sub_247BFECF4(inited, v27);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
      swift_arrayDestroy();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_247C12A0C(0, *(_QWORD *)(v5 + 16) + 1, 1);
        v5 = v30;
      }
      v13 = *(_QWORD *)(v5 + 16);
      v12 = *(_QWORD *)(v5 + 24);
      if (v13 >= v12 >> 1)
        sub_247C12A0C((_QWORD *)(v12 > 1), v13 + 1, 1);
      v14 = v28;
      v15 = v29;
      v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v27, v28);
      MEMORY[0x24BDAC7A8](v16);
      v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v19 + 16))(v18);
      sub_247C3C564(v13, (uint64_t)v18, &v30, v14, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      v5 = v30;
      v4 += 40;
      --v3;
    }
    while (v3);
    sub_247C3D218((uint64_t)&v31);
    sub_247BFECF4(v5, v22);
    swift_release();
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

double sub_247C00284@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  double result;

  if (*(_QWORD *)(*(_QWORD *)(v1 + 128) + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    *(_QWORD *)(inited + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
    *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
    *(_QWORD *)(inited + 32) = 0x594220524544524FLL;
    v4 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(inited + 40) = 0xE800000000000000;
    *(_QWORD *)(inited + 48) = v4;
    v5 = swift_bridgeObjectRetain();
    sub_247BFECF4(v5, (uint64_t *)(inited + 72));
    swift_bridgeObjectRelease();
    sub_247BFECF4(inited, (uint64_t *)a1);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

double sub_247C00398@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 *v6;
  __int128 *v7;
  uint64_t inited;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  double result;
  uint64_t v25;
  uint64_t *v26;
  __int128 v27;
  __int128 *v28;
  unint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[40];
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = *(_QWORD *)(v1 + 64);
  v41 = v2;
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v26 = (uint64_t *)a1;
    v40 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_247C12A0C(0, v3, 0);
    v28 = (__int128 *)&v35;
    v29 = &v32;
    v4 = v2 + 40;
    v27 = xmmword_247C3E1C0;
    v5 = MEMORY[0x24BEE4AF8];
    do
    {
      v6 = (__int128 *)v29;
      sub_247BFA88C(v4, (uint64_t)v29);
      v7 = v28;
      sub_247BFA88C(v4 + 40, (uint64_t)v28);
      sub_247BFECDC(v6, (uint64_t)v37);
      sub_247BFECDC(v7, (uint64_t)v36);
      __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v27;
      v30 = inited + 32;
      v31 = 0;
      v32 = 0xE000000000000000;
      sub_247C3D840();
      swift_bridgeObjectRelease();
      sub_247C3D840();
      v9 = v31;
      v10 = v32;
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
      *(_QWORD *)(inited + 56) = v11;
      *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
      *(_QWORD *)(inited + 32) = v9;
      *(_QWORD *)(inited + 40) = v10;
      *(_QWORD *)(inited + 48) = v5;
      v13 = v38;
      v12 = v39;
      __swift_project_boxed_opaque_existential_1(v37, v38);
      sub_247BF9730(1, v13, v12, (uint64_t *)(inited + 72));
      *(_QWORD *)(inited + 136) = v11;
      *(_QWORD *)(inited + 144) = &protocol witness table for Expression<A>;
      *(_QWORD *)(inited + 112) = 20047;
      *(_QWORD *)(inited + 120) = 0xE200000000000000;
      *(_QWORD *)(inited + 128) = v5;
      sub_247BFA88C((uint64_t)v36, inited + 152);
      sub_247BFECF4(inited, &v31);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
      swift_arrayDestroy();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      v14 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_247C12A0C(0, *(_QWORD *)(v14 + 16) + 1, 1);
        v14 = v40;
      }
      v16 = *(_QWORD *)(v14 + 16);
      v15 = *(_QWORD *)(v14 + 24);
      if (v16 >= v15 >> 1)
        sub_247C12A0C((_QWORD *)(v15 > 1), v16 + 1, 1);
      v17 = v33;
      v18 = v34;
      v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v31, v33);
      MEMORY[0x24BDAC7A8](v19);
      v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v22 + 16))(v21);
      sub_247C3C564(v16, (uint64_t)v21, &v40, v17, v18);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
      v4 += 88;
      --v3;
    }
    while (v3);
    v23 = v40;
    sub_247C3D218((uint64_t)&v41);
    sub_247BFECF4(v23, v26);
    swift_release();
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_247C00700(uint64_t result, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v4 = *(_QWORD *)(result + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v9 = result;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(v9 + 16))
      goto LABEL_5;
    goto LABEL_10;
  }
  result = a2();
  v5 = result;
  if (!*(_QWORD *)(v9 + 16))
  {
LABEL_10:
    if (!v4)
      goto LABEL_11;
    goto LABEL_13;
  }
LABEL_5:
  if ((*(_QWORD *)(v5 + 24) >> 1) - *(_QWORD *)(v5 + 16) < v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_11:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v10 = *(_QWORD *)(v5 + 16);
  v11 = __OFADD__(v10, v4);
  v12 = v10 + v4;
  if (!v11)
  {
    *(_QWORD *)(v5 + 16) = v12;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
  return result;
}

char *sub_247C00808(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_254455478);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_247C00908(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_247C00924(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_247C00924(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455470);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

uint64_t sub_247C00A24(uint64_t a1)
{
  return sub_247C00700(a1, (uint64_t (*)(void))sub_247C0AD3C, &qword_2544552A0);
}

uint64_t Connection.prepare(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];

  v3 = v1;
  v6 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(v5 + 8) + 8))(v12, v6);
  v7 = v12[2];
  type metadata accessor for Statement();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_247C17F4C(v3);
  if (v2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v9 = sub_247C00BBC(v7);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v10 = sub_247BFDCA0(a1);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v9;
    *(_QWORD *)(v11 + 24) = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455390);
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = sub_247C015C0;
    *(_QWORD *)(result + 24) = v11;
  }
  return result;
}

uint64_t type metadata accessor for Statement()
{
  return objc_opt_self();
}

uint64_t sub_247C00BBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return v1;
  swift_beginAccess();
  sqlite3_reset(*(sqlite3_stmt **)(v1 + 16));
  sqlite3_clear_bindings(*(sqlite3_stmt **)(v1 + 16));
  if (v2 == sqlite3_bind_parameter_count(*(sqlite3_stmt **)(v1 + 16)))
  {
    v4 = 0;
    v5 = a1 + 32;
    do
    {
      sub_247C00DA4(v5, ++v4);
      v5 += 40;
    }
    while (v2 != v4);
    return v1;
  }
  sub_247C3D9E4();
  sqlite3_bind_parameter_count(*(sqlite3_stmt **)(v1 + 16));
  sub_247C3DAC8();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  sub_247C3DAC8();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  result = sub_247C3DA68();
  __break(1u);
  return result;
}

uint64_t sub_247C00D44()
{
  return sub_247BFEA4C((void (*)(uint64_t))sub_247BFFC60);
}

uint64_t sub_247C00DA4(uint64_t a1, uint64_t a2)
{
  sqlite3_stmt **v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;
  void (__cdecl *v8)(void *);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 *v12;
  __int128 v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  _UNKNOWN **v17;

  if (!*(_QWORD *)(a1 + 24))
  {
    swift_beginAccess();
    if (a2 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (a2 <= 0x7FFFFFFF)
    {
      return sqlite3_bind_null(v2[2], a2);
    }
    __break(1u);
    goto LABEL_46;
  }
  sub_247C01300(a1, (uint64_t)v15);
  if (v16)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v3 = v13;
      swift_beginAccess();
      if (a2 >= (uint64_t)0xFFFFFFFF80000000)
      {
        if (a2 <= 0x7FFFFFFF)
        {
          v4 = *(_QWORD *)(v13 + 16);
          if (!(v4 >> 31))
          {
            v2 = (sqlite3_stmt **)v2[2];
            if (qword_254455320 == -1)
            {
LABEL_8:
              sqlite3_bind_blob((sqlite3_stmt *)v2, a2, (const void *)(v3 + 32), v4, (void (__cdecl *)(void *))qword_254455C50);
              return swift_bridgeObjectRelease();
            }
LABEL_49:
            swift_once();
            goto LABEL_8;
          }
LABEL_48:
          __break(1u);
          goto LABEL_49;
        }
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
  }
  else
  {
    sub_247BFC084((uint64_t)v15, &qword_254455448);
  }
  sub_247C01300(a1, (uint64_t)v15);
  if (v16)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_beginAccess();
      if (a2 < (uint64_t)0xFFFFFFFF80000000)
      {
        __break(1u);
      }
      else if (a2 <= 0x7FFFFFFF)
      {
        return sqlite3_bind_double(v2[2], a2, *(double *)&v13);
      }
      __break(1u);
      goto LABEL_52;
    }
  }
  else
  {
    sub_247BFC084((uint64_t)v15, &qword_254455448);
  }
  sub_247C01300(a1, (uint64_t)v15);
  if (v16)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_beginAccess();
      if (a2 >= (uint64_t)0xFFFFFFFF80000000)
      {
        if (a2 <= 0x7FFFFFFF)
          return sqlite3_bind_int64(v2[2], a2, v13);
        goto LABEL_53;
      }
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
  }
  else
  {
    sub_247BFC084((uint64_t)v15, &qword_254455448);
  }
  sub_247C01300(a1, (uint64_t)v15);
  if (v16)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      swift_beginAccess();
      if (a2 >= (uint64_t)0xFFFFFFFF80000000)
      {
        if (a2 <= 0x7FFFFFFF)
        {
          v2 = (sqlite3_stmt **)v2[2];
          if (qword_254455320 == -1)
          {
LABEL_30:
            v8 = (void (__cdecl *)(void *))qword_254455C50;
            v9 = sub_247C3D804();
            swift_bridgeObjectRelease();
            sqlite3_bind_text((sqlite3_stmt *)v2, a2, (const char *)(v9 + 32), -1, v8);
            return swift_release();
          }
LABEL_56:
          swift_once();
          goto LABEL_30;
        }
LABEL_55:
        __break(1u);
        goto LABEL_56;
      }
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
  }
  else
  {
    sub_247BFC084((uint64_t)v15, &qword_254455448);
  }
  sub_247C01300(a1, (uint64_t)v15);
  if (v16)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v10 = MEMORY[0x24BEE4008];
      v11 = v13;
LABEL_39:
      v16 = v10;
      v17 = &protocol witness table for Int64;
      v15[0] = v11;
      sub_247C00DA4(v15, a2);
      v12 = (__int128 *)v15;
      return sub_247BFC084((uint64_t)v12, &qword_254455448);
    }
  }
  else
  {
    sub_247BFC084((uint64_t)v15, &qword_254455448);
  }
  sub_247C01300(a1, (uint64_t)v15);
  if (v16)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v10 = MEMORY[0x24BEE4008];
      v11 = v13;
      goto LABEL_39;
    }
  }
  else
  {
    sub_247BFC084((uint64_t)v15, &qword_254455448);
  }
  sub_247C01300(a1, (uint64_t)&v13);
  if (!v14)
  {
    v12 = &v13;
    return sub_247BFC084((uint64_t)v12, &qword_254455448);
  }
  sub_247BFECDC(&v13, (uint64_t)v15);
  *(_QWORD *)&v13 = 0;
  *((_QWORD *)&v13 + 1) = 0xE000000000000000;
  sub_247C3D9E4();
  sub_247C3D840();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C8);
  sub_247C3DA5C();
  result = sub_247C3DA68();
  __break(1u);
  return result;
}

uint64_t sub_247C01300(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Value.expression.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[6];

  v7 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Expression(0, a1, v10, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, a1);
  v13 = MEMORY[0x24958EDF4]("0.", v12);
  ExpressionType<>.init(value:)((uint64_t)v9, v12, v13, a2);
  v19[0] = v19[3];
  v19[1] = v19[4];
  v19[2] = v19[5];
  v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 24))(v12, v13);
  v16 = v15;
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13);
  *a3 = v14;
  a3[1] = v16;
  a3[2] = v17;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ExpressionType<>.init(value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_247C3E1D0;
  v9 = *(void (**)(uint64_t, uint64_t))(a4 + 56);
  swift_getAssociatedTypeWitness();
  *(_QWORD *)(v8 + 56) = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v8 + 64) = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v8 + 32));
  v10 = swift_checkMetadataState();
  v9(v10, a4);
  (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(a3 + 40))(63, 0xE100000000000000, v8, a2, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
}

ValueMetadata *type metadata accessor for Table()
{
  return &type metadata for Table;
}

uint64_t sub_247C015C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_247BFA228(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t != infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _UNKNOWN **v23;
  uint64_t v24[5];
  _QWORD v25[5];

  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  v25[3] = type metadata accessor for Expression(0, a3, a3, a4);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  v10 = *(_QWORD *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v25, inited + 32);
  sub_247BFA88C((uint64_t)v24, inited + 72);
  v20 = 32;
  *(_QWORD *)&v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v20);
  swift_bridgeObjectRelease();
  v13 = v22;
  v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  v15 = v18;
  v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v23 = &protocol witness table for Expression<A>;
  v20 = v15;
  v21 = v17;
  sub_247BFB3FC(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t & infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247BFA66C(a1, a2, a3, a4, 0xAu, a5);
}

{
  return sub_247C1B5CC(a1, a2, a3, a4, 0xAu, a5);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_247C017C0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
  v4 = swift_allocObject();
  v5 = MEMORY[0x24BEE4008];
  *(_OWORD *)(v4 + 16) = xmmword_247C3E1D0;
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = &protocol witness table for Int64;
  *(_QWORD *)(v4 + 32) = v3;
  *a1 = 63;
  a1[1] = 0xE100000000000000;
  a1[2] = v4;
  return swift_bridgeObjectRelease();
}

_QWORD *QueryType.insert(or:_:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  unsigned __int8 v6;

  v6 = *a1;
  return sub_247BFACA8(&v6, a2, a3, a4, a5);
}

ValueMetadata *type metadata accessor for Setter()
{
  return &type metadata for Setter;
}

uint64_t storeEnumTagSinglePayload for Module(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Module(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for Insert()
{
  return &type metadata for Insert;
}

ValueMetadata *type metadata accessor for Delete()
{
  return &type metadata for Delete;
}

_BYTE *sub_247C0191C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for OnConflict()
{
  return &type metadata for OnConflict;
}

sqlite3 *sub_247C01934@<X0>(sqlite3 **a1@<X8>)
{
  uint64_t v1;

  return sub_247BF8C3C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40), a1);
}

void sub_247C01950()
{
  uint64_t *v0;

  sub_247BF9244(*v0, v0[1]);
}

Swift::String __swiftcall SchemaType.drop(ifExists:)(Swift::Bool ifExists)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  Swift::String result;
  uint64_t v10[5];

  sub_247BF9730(0, v1, *(_QWORD *)(v2 + 8), v10);
  v4 = sub_247C0B66C(0x454C424154, 0xE500000000000000, (uint64_t)v10, ifExists);
  v6 = v5;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  v7 = v4;
  v8 = v6;
  result._object = v8;
  result._countAndFlagsBits = v7;
  return result;
}

uint64_t Table.create(temporary:ifNotExists:withoutRowid:block:)(char a1, char a2, char a3, void (*a4)(void))
{
  __int128 *v4;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _UNKNOWN **v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t countAndFlagsBits;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39[2];
  _QWORD *v40;
  uint64_t v41[24];
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;

  v9 = v4[9];
  v50 = v4[8];
  v51 = v9;
  v52 = *((_QWORD *)v4 + 20);
  v10 = v4[5];
  v46 = v4[4];
  v47 = v10;
  v11 = v4[7];
  v48 = v4[6];
  v49 = v11;
  v12 = v4[1];
  v42 = *v4;
  v43 = v12;
  v13 = v4[3];
  v44 = v4[2];
  v45 = v13;
  type metadata accessor for TableBuilder();
  *(_QWORD *)(swift_allocObject() + 16) = MEMORY[0x24BEE4AF8];
  a4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455420);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E140;
  if (*((_QWORD *)&v44 + 1))
  {
    v15 = *((_QWORD *)&v44 + 1);
    v16 = v44;
  }
  else
  {
    v15 = *((_QWORD *)&v43 + 1);
    v16 = v43;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_247BFFC64(v16, v15, v41);
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
    v17 = 1;
  else
    v17 = 2;
  sub_247C01DA4(0x454C424154, 0xE500000000000000, (uint64_t)v41, v17, a2 & 1, (uint64_t *)(inited + 32));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(inited + 96) = v18;
  *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
  v19 = swift_bridgeObjectRetain();
  sub_247BFECF4(v19, v41);
  sub_247BFB318(v41, 0, 0xE000000000000000, (_QWORD *)(inited + 72));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  swift_bridgeObjectRelease();
  if ((a3 & 1) != 0)
  {
    v20 = xmmword_247C3E150;
    v21 = MEMORY[0x24BEE4AF8];
    v22 = &protocol witness table for Expression<A>;
  }
  else
  {
    v18 = 0;
    v22 = 0;
    v21 = 0;
    v20 = 0uLL;
  }
  *(_QWORD *)(inited + 136) = v18;
  *(_QWORD *)(inited + 144) = v22;
  *(_OWORD *)(inited + 112) = v20;
  v23 = 32;
  *(_QWORD *)(inited + 128) = v21;
  v40 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    sub_247BFD054(inited + v23, (uint64_t)v41, &qword_254455440);
    sub_247C0B964((uint64_t)v41, (uint64_t)&v36);
    if (v37)
    {
      sub_247BFECDC(&v36, (uint64_t)v39);
      sub_247BFECDC(v39, (uint64_t)&v36);
      v24 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v24 = sub_247BFF2AC(0, v24[2] + 1, 1, v24, qword_254455398, &qword_254455340);
        v40 = v24;
      }
      v26 = v24[2];
      v25 = v24[3];
      if (v26 >= v25 >> 1)
        v40 = sub_247BFF2AC((_QWORD *)(v25 > 1), v26 + 1, 1, v24, qword_254455398, &qword_254455340);
      v27 = v37;
      v28 = v38;
      v29 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v36, v37);
      MEMORY[0x24BDAC7A8](v29);
      v31 = (char *)&v35 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v32 + 16))(v31);
      sub_247BFF3F8(v26, (uint64_t)v31, (uint64_t *)&v40, v27, v28);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
    }
    else
    {
      sub_247BFC084((uint64_t)&v36, &qword_254455440);
    }
    v23 += 40;
  }
  while (v23 != 152);
  swift_bridgeObjectRelease();
  sub_247BFECF4((uint64_t)v40, v41);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v41, v41[3]);
  countAndFlagsBits = Expressible.asSQL()()._countAndFlagsBits;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return countAndFlagsBits;
}

uint64_t sub_247C01DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 a4@<W3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _UNKNOWN **v17;
  __int128 v18;
  uint64_t v19;
  _UNKNOWN **v20;
  uint64_t i;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37[2];
  _BYTE v38[40];
  uint64_t v39[3];
  __int128 v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _UNKNOWN **v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _UNKNOWN **v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _UNKNOWN **v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  _UNKNOWN **v59;
  uint64_t v60;

  v33 = a6;
  v10 = a4;
  v40 = xmmword_247C3E160;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  v45 = &protocol witness table for Expression<A>;
  v41 = 0x455441455243;
  v42 = 0xE600000000000000;
  v12 = MEMORY[0x24BEE4AF8];
  v43 = MEMORY[0x24BEE4AF8];
  v44 = v11;
  if (v10 == 2)
  {
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
  }
  else
  {
    v13 = 0x5241524F504D4554;
    if ((v10 & 1) == 0)
      v13 = 0x455551494E55;
    v14 = 0xE900000000000059;
    if ((v10 & 1) == 0)
      v14 = 0xE600000000000000;
    v17 = &protocol witness table for Expression<A>;
    v15 = MEMORY[0x24BEE4AF8];
    v16 = v11;
  }
  v46 = v13;
  v47 = v14;
  v48 = v15;
  v49 = v16;
  v54 = v11;
  v55 = &protocol witness table for Expression<A>;
  v50 = v17;
  v51 = a1;
  v52 = a2;
  v53 = MEMORY[0x24BEE4AF8];
  if ((a5 & 1) != 0)
  {
    v18 = xmmword_247C3E170;
    v19 = MEMORY[0x24BEE4AF8];
    v20 = &protocol witness table for Expression<A>;
  }
  else
  {
    v11 = 0;
    v20 = 0;
    v19 = 0;
    v18 = 0uLL;
  }
  v58 = v11;
  v59 = v20;
  v56 = v18;
  v57 = v19;
  sub_247BFA88C(a3, (uint64_t)&v60);
  v39[0] = v12;
  swift_bridgeObjectRetain();
  for (i = 4; i != 29; i += 5)
  {
    sub_247BFD054((uint64_t)&v39[i + 1], (uint64_t)v38, &qword_254455440);
    sub_247C0B964((uint64_t)v38, (uint64_t)&v34);
    if (v35)
    {
      sub_247BFECDC(&v34, (uint64_t)v37);
      sub_247BFECDC(v37, (uint64_t)&v34);
      v22 = (_QWORD *)v39[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v22 = sub_247BFF2AC(0, v22[2] + 1, 1, v22, qword_254455398, &qword_254455340);
        v39[0] = (uint64_t)v22;
      }
      v24 = v22[2];
      v23 = v22[3];
      if (v24 >= v23 >> 1)
        v39[0] = (uint64_t)sub_247BFF2AC((_QWORD *)(v23 > 1), v24 + 1, 1, v22, qword_254455398, &qword_254455340);
      v25 = v35;
      v26 = v36;
      v27 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v34, v35);
      MEMORY[0x24BDAC7A8](v27);
      v29 = (char *)&v32 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v30 + 16))(v29);
      sub_247BFF3F8(v24, (uint64_t)v29, v39, v25, v26);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
    }
    else
    {
      sub_247BFC084((uint64_t)&v34, &qword_254455440);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455440);
  swift_arrayDestroy();
  sub_247BFECF4(v39[0], v33);
  return swift_bridgeObjectRelease();
}

uint64_t Table.create(_:temporary:ifNotExists:)(_QWORD *a1, char a2, char a3)
{
  return sub_247C04FC8(a1, a2, a3, 0x454C424154, 0xE500000000000000);
}

uint64_t Table.addColumn<A>(_:check:defaultValue:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int128 *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v25;
  __int128 v28;
  _OWORD v29[5];
  uint64_t v30[5];
  __int128 v31;
  __int128 v32;
  _UNKNOWN **v33;
  unsigned __int8 v34;
  _QWORD v35[5];
  uint64_t v36[5];
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;

  v8 = *a1;
  v9 = a1[1];
  v10 = a1[2];
  v12 = *a2;
  v11 = a2[1];
  v13 = a2[2];
  v14 = v5[9];
  v45 = v5[8];
  v46 = v14;
  v47 = *((_QWORD *)v5 + 20);
  v15 = v5[5];
  v41 = v5[4];
  v42 = v15;
  v16 = v5[7];
  v43 = v5[6];
  v44 = v16;
  v17 = v5[1];
  v37 = *v5;
  v38 = v17;
  v18 = v5[3];
  v39 = v5[2];
  v40 = v18;
  v35[3] = type metadata accessor for Expression(0, a4, a3, a4);
  v35[4] = &protocol witness table for Expression<A>;
  v35[0] = v8;
  v35[1] = v9;
  v35[2] = v10;
  v19 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = v19(a4, a5);
  v22 = v21;
  v34 = 2;
  if (v11)
  {
    *((_QWORD *)&v32 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
    v33 = &protocol witness table for Expression<A>;
    *(_QWORD *)&v31 = v12;
    *((_QWORD *)&v31 + 1) = v11;
    *(_QWORD *)&v32 = v13;
  }
  else
  {
    v33 = 0;
    v31 = 0u;
    v32 = 0u;
  }
  v23 = *(_QWORD *)(a5 + 8);
  v30[3] = a4;
  v30[4] = v23;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v30);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_1, a3, a4);
  v28 = xmmword_247C3E180;
  memset(v29, 0, sizeof(v29));
  sub_247BFE9A0(v12, v11);
  sub_247C022C4((uint64_t)v35, v20, v22, &v34, 0, 0, (uint64_t)&v31, (uint64_t)v30, v36, (uint64_t)v29, (uint64_t *)&v28);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v29, &qword_254455338);
  sub_247BFC084((uint64_t)v30, &qword_254455440);
  sub_247BFC084((uint64_t)&v31, &qword_254455440);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  v25 = sub_247C0290C((uint64_t)v36);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return v25;
}

{
  __int128 *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v25;
  __int128 v28;
  _OWORD v29[5];
  uint64_t v30[5];
  _QWORD v31[5];
  unsigned __int8 v32;
  _QWORD v33[5];
  uint64_t v34[5];
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;

  v9 = *a1;
  v8 = a1[1];
  v10 = a1[2];
  v12 = *a2;
  v11 = a2[1];
  v13 = a2[2];
  v14 = v5[9];
  v43 = v5[8];
  v44 = v14;
  v45 = *((_QWORD *)v5 + 20);
  v15 = v5[5];
  v39 = v5[4];
  v40 = v15;
  v16 = v5[7];
  v41 = v5[6];
  v42 = v16;
  v17 = v5[1];
  v35 = *v5;
  v36 = v17;
  v18 = v5[3];
  v37 = v5[2];
  v38 = v18;
  v33[3] = type metadata accessor for Expression(0, a4, a3, a4);
  v33[4] = &protocol witness table for Expression<A>;
  v33[0] = v9;
  v33[1] = v8;
  v33[2] = v10;
  v19 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = v19(a4, a5);
  v22 = v21;
  v32 = 2;
  v31[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v31[4] = &protocol witness table for Expression<A>;
  v31[0] = v12;
  v31[1] = v11;
  v31[2] = v13;
  v23 = *(_QWORD *)(a5 + 8);
  v30[3] = a4;
  v30[4] = v23;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v30);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_1, a3, a4);
  v28 = xmmword_247C3E180;
  memset(v29, 0, sizeof(v29));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C022C4((uint64_t)v33, v20, v22, &v32, 0, 0, (uint64_t)v31, (uint64_t)v30, v34, (uint64_t)v29, (uint64_t *)&v28);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v29, &qword_254455338);
  sub_247BFC084((uint64_t)v30, &qword_254455440);
  sub_247BFC084((uint64_t)v31, &qword_254455440);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  v25 = sub_247C0290C((uint64_t)v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  return v25;
}

{
  __int128 *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  _BYTE v45[80];
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  _UNKNOWN **v51;
  unsigned __int8 v52;
  _QWORD v53[5];
  uint64_t v54[5];
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;

  v40 = a3;
  v10 = sub_247C3D9B4();
  v42 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v38 - v11;
  v13 = *a1;
  v14 = a1[1];
  v15 = a1[2];
  v16 = *a2;
  v43 = a2[1];
  v17 = a2[2];
  v18 = v5[9];
  v63 = v5[8];
  v64 = v18;
  v65 = *((_QWORD *)v5 + 20);
  v19 = v5[5];
  v59 = v5[4];
  v60 = v19;
  v20 = v5[7];
  v61 = v5[6];
  v62 = v20;
  v21 = v5[1];
  v55 = *v5;
  v56 = v21;
  v22 = v5[3];
  v57 = v5[2];
  v58 = v22;
  v41 = v23;
  v53[3] = type metadata accessor for Expression(0, v23, v24, v25);
  v53[4] = &protocol witness table for Expression<A>;
  v53[0] = v13;
  v53[1] = v14;
  v53[2] = v15;
  v26 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = v26(a4, a5);
  v28 = v43;
  v38 = v27;
  v39 = v29;
  v52 = 2;
  if (v43)
  {
    *((_QWORD *)&v50 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
    v51 = &protocol witness table for Expression<A>;
    v30 = v16;
    *(_QWORD *)&v49 = v16;
    *((_QWORD *)&v49 + 1) = v28;
    *(_QWORD *)&v50 = v17;
  }
  else
  {
    v30 = v16;
    v51 = 0;
    v49 = 0u;
    v50 = 0u;
  }
  v31 = v41;
  v32 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v12, v40, v41);
  v33 = *(_QWORD *)(a4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v12, 1, a4) == 1)
  {
    sub_247BFE9A0(v30, v43);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v31);
    v48 = 0;
    v46 = 0u;
    v47 = 0u;
  }
  else
  {
    v34 = *(_QWORD *)(a5 + 8);
    *((_QWORD *)&v47 + 1) = a4;
    v48 = v34;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v46);
    (*(void (**)(uint64_t *, char *, uint64_t))(v33 + 32))(boxed_opaque_existential_1, v12, a4);
    sub_247BFE9A0(v30, v43);
  }
  v44 = xmmword_247C3E180;
  memset(v45, 0, sizeof(v45));
  sub_247C022C4((uint64_t)v53, v38, v39, &v52, 1, 0, (uint64_t)&v49, (uint64_t)&v46, v54, (uint64_t)v45, (uint64_t *)&v44);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v45, &qword_254455338);
  sub_247BFC084((uint64_t)&v46, &qword_254455440);
  sub_247BFC084((uint64_t)&v49, &qword_254455440);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  v36 = sub_247C0290C((uint64_t)v54);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  return v36;
}

{
  __int128 *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  _BYTE v49[80];
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  _QWORD v53[5];
  unsigned __int8 v54;
  _QWORD v55[5];
  uint64_t v56[5];
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;

  v46 = a3;
  v10 = sub_247C3D9B4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v45 = (char *)&v42 - v12;
  v13 = *a1;
  v14 = a1[1];
  v15 = a1[2];
  v16 = *a2;
  v17 = a2[1];
  v18 = a2[2];
  v43 = v17;
  v44 = v16;
  v19 = v5[9];
  v65 = v5[8];
  v66 = v19;
  v67 = *((_QWORD *)v5 + 20);
  v20 = v5[5];
  v61 = v5[4];
  v62 = v20;
  v21 = v5[7];
  v63 = v5[6];
  v64 = v21;
  v22 = v5[1];
  v57 = *v5;
  v58 = v22;
  v23 = v5[3];
  v59 = v5[2];
  v60 = v23;
  v55[3] = type metadata accessor for Expression(0, v10, v24, v25);
  v55[4] = &protocol witness table for Expression<A>;
  v55[0] = v13;
  v55[1] = v14;
  v55[2] = v15;
  v26 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = a5;
  v28 = v26(a4, a5);
  v29 = v18;
  v30 = v28;
  v47 = v31;
  v54 = 2;
  v53[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v53[4] = &protocol witness table for Expression<A>;
  v53[0] = v44;
  v53[1] = v43;
  v53[2] = v29;
  v32 = v11;
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v34 = v45;
  v33(v45, v46, v10);
  v35 = *(_QWORD *)(a4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v34, 1, a4) == 1)
  {
    v36 = v30;
    v37 = *(void (**)(char *, uint64_t))(v32 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v37(v34, v10);
    v30 = v36;
    v52 = 0;
    v50 = 0u;
    v51 = 0u;
  }
  else
  {
    v38 = *(_QWORD *)(v27 + 8);
    *((_QWORD *)&v51 + 1) = a4;
    v52 = v38;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v50);
    (*(void (**)(uint64_t *, char *, uint64_t))(v35 + 32))(boxed_opaque_existential_1, v34, a4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v48 = xmmword_247C3E180;
  memset(v49, 0, sizeof(v49));
  sub_247C022C4((uint64_t)v55, v30, v47, &v54, 1, 0, (uint64_t)v53, (uint64_t)&v50, v56, (uint64_t)v49, (uint64_t *)&v48);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v49, &qword_254455338);
  sub_247BFC084((uint64_t)&v50, &qword_254455440);
  sub_247BFC084((uint64_t)v53, &qword_254455440);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  v40 = sub_247C0290C((uint64_t)v56);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  return v40;
}

uint64_t sub_247C022C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t *a11)
{
  int v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _UNKNOWN **v24;
  _UNKNOWN **v25;
  _QWORD *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  _UNKNOWN **v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t inited;
  uint64_t v38;
  uint64_t i;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  __int128 v56[2];
  _OWORD v57[10];
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  _BYTE v67[16];
  __int128 v68;
  _QWORD v69[20];
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  _UNKNOWN **v73;
  uint64_t v74[5];
  __int128 v75;
  __int128 v76;
  _UNKNOWN **v77;
  uint64_t v78[5];
  uint64_t v79[7];

  v52 = a8;
  v55 = a9;
  v16 = *a4;
  v17 = a11[1];
  v51 = *a11;
  v53 = v17;
  v68 = xmmword_247C3E190;
  v54 = v69;
  sub_247BFA88C(a1, (uint64_t)v69);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  v19 = v18;
  v69[9] = &protocol witness table for Expression<A>;
  v69[5] = a2;
  v69[6] = a3;
  v69[7] = MEMORY[0x24BEE4AF8];
  v69[8] = v18;
  if (v16 == 2)
  {
    v20 = 0;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 0;
  }
  else
  {
    v20 = 0xD000000000000019;
    if ((v16 & 1) == 0)
      v20 = 0x205952414D495250;
    v21 = 0x8000000247C3F6B0;
    if ((v16 & 1) == 0)
      v21 = 0xEB0000000059454BLL;
    v24 = &protocol witness table for Expression<A>;
    v22 = MEMORY[0x24BEE4AF8];
    v23 = v18;
  }
  v69[10] = v20;
  v69[11] = v21;
  v69[12] = v22;
  v69[13] = v23;
  v69[14] = v24;
  v25 = &protocol witness table for Expression<A>;
  v26 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if ((a5 & 1) != 0)
  {
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 0;
    v25 = 0;
  }
  else
  {
    v28 = 0xE800000000000000;
    v27 = 0x4C4C554E20544F4ELL;
    v29 = MEMORY[0x24BEE4AF8];
    v30 = v18;
  }
  v69[15] = v27;
  v69[16] = v28;
  v69[17] = v29;
  v69[18] = v30;
  v69[19] = v25;
  if ((a6 & 1) != 0)
  {
    v31 = xmmword_247C3E1A0;
    v32 = MEMORY[0x24BEE4AF8];
    v33 = &protocol witness table for Expression<A>;
    v34 = v18;
  }
  else
  {
    v34 = 0;
    v33 = 0;
    v32 = 0;
    v31 = 0uLL;
  }
  v73 = v33;
  v70 = v31;
  v72 = v34;
  v71 = v32;
  sub_247BFD054(a7, (uint64_t)&v62, &qword_254455440);
  if (*((_QWORD *)&v63 + 1))
  {
    sub_247BFECDC(&v62, (uint64_t)v56);
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_247C3E1B0;
    *(_QWORD *)(v35 + 56) = v19;
    *(_QWORD *)(v35 + 64) = &protocol witness table for Expression<A>;
    *(_QWORD *)(v35 + 32) = 0x4B43454843;
    *(_QWORD *)(v35 + 40) = 0xE500000000000000;
    *(_QWORD *)(v35 + 48) = v26;
    sub_247BFA88C((uint64_t)v56, v35 + 72);
    swift_bridgeObjectRetain();
    sub_247BFECF4(v35, v74);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
    swift_deallocClassInstance();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  }
  else
  {
    memset(v74, 0, sizeof(v74));
    swift_bridgeObjectRetain();
  }
  sub_247BFD054(v52, (uint64_t)&v62, &qword_254455440);
  v36 = v53;
  if (*((_QWORD *)&v63 + 1))
  {
    sub_247BFECDC(&v62, (uint64_t)v56);
    *((_QWORD *)&v76 + 1) = v19;
    v77 = &protocol witness table for Expression<A>;
    sub_247BFB318(v56, 0x20544C5541464544, 0xE800000000000000, &v75);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  }
  else
  {
    v77 = 0;
    v75 = 0u;
    v76 = 0u;
  }
  sub_247BFD054(a10, (uint64_t)&v62, &qword_254455338);
  if (*((_QWORD *)&v63 + 1))
  {
    v57[0] = v64;
    v57[1] = v65;
    v57[2] = v66;
    v56[0] = v62;
    v56[1] = v63;
    sub_247C0A79C((uint64_t)v56, (uint64_t)v57 + 8, v78);
    sub_247BFC084((uint64_t)v56, &qword_2576ED378);
  }
  else
  {
    memset(v78, 0, sizeof(v78));
  }
  if (v53 == 3)
  {
    memset(v79, 0, 40);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 32) = 0x4554414C4C4F43;
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    *(_QWORD *)(inited + 56) = v19;
    *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
    *(_QWORD *)(inited + 40) = 0xE700000000000000;
    *(_QWORD *)(inited + 48) = v26;
    *(_QWORD *)(inited + 96) = &type metadata for Collation;
    *(_QWORD *)(inited + 104) = &protocol witness table for Collation;
    v38 = v51;
    *(_QWORD *)(inited + 72) = v51;
    *(_QWORD *)(inited + 80) = v36;
    sub_247C0B9AC(v38, v36);
    sub_247BFECF4(inited, v79);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
  }
  v61 = v26;
  for (i = 32; i != 392; i += 40)
  {
    sub_247BFD054((uint64_t)&v67[i], (uint64_t)&v62, &qword_254455440);
    sub_247C0B964((uint64_t)&v62, (uint64_t)&v58);
    if (v59)
    {
      sub_247BFECDC(&v58, (uint64_t)v56);
      sub_247BFECDC(v56, (uint64_t)&v58);
      v40 = v61;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v40 = sub_247BFF2AC(0, v40[2] + 1, 1, v40, qword_254455398, &qword_254455340);
        v61 = v40;
      }
      v42 = v40[2];
      v41 = v40[3];
      if (v42 >= v41 >> 1)
        v61 = sub_247BFF2AC((_QWORD *)(v41 > 1), v42 + 1, 1, v40, qword_254455398, &qword_254455340);
      v43 = v59;
      v44 = v60;
      v45 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v58, v59);
      MEMORY[0x24BDAC7A8](v45);
      v47 = (char *)&v50 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v48 + 16))(v47);
      sub_247BFF3F8(v42, (uint64_t)v47, (uint64_t *)&v61, v43, v44);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
    }
    else
    {
      sub_247BFC084((uint64_t)&v58, &qword_254455440);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455440);
  swift_arrayDestroy();
  sub_247BFECF4((uint64_t)v61, v55);
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C0290C(uint64_t a1)
{
  __int128 *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t countAndFlagsBits;
  uint64_t v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  v3 = v1[9];
  v24 = v1[8];
  v25 = v3;
  v26 = *((_QWORD *)v1 + 20);
  v4 = v1[5];
  v20 = v1[4];
  v21 = v4;
  v5 = v1[7];
  v22 = v1[6];
  v23 = v5;
  v6 = v1[1];
  v16 = *v1;
  v17 = v6;
  v7 = v1[3];
  v18 = v1[2];
  v19 = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1C0;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(inited + 32) = 0x4154205245544C41;
  *(_QWORD *)(inited + 56) = v9;
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  v10 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 40) = 0xEB00000000454C42;
  *(_QWORD *)(inited + 48) = v10;
  if (*((_QWORD *)&v18 + 1))
  {
    v12 = *((_QWORD *)&v18 + 1);
    v11 = v18;
  }
  else
  {
    v12 = *((_QWORD *)&v17 + 1);
    v11 = v17;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_247BFFC64(v11, v12, (uint64_t *)(inited + 72));
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 136) = v9;
  *(_QWORD *)(inited + 144) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 112) = 0x554C4F4320444441;
  *(_QWORD *)(inited + 120) = 0xEA00000000004E4DLL;
  *(_QWORD *)(inited + 128) = v10;
  sub_247BFA88C(a1, inited + 152);
  sub_247BFECF4(inited, v15);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_project_boxed_opaque_existential_1(v15, v15[3]);
  countAndFlagsBits = Expressible.asSQL()()._countAndFlagsBits;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return countAndFlagsBits;
}

uint64_t Table.addColumn<A>(_:unique:check:references:_:)(uint64_t *a1, char a2, uint64_t *a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  __int128 *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  __int128 v34;
  _BYTE v35[40];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _UNKNOWN **v40;
  _OWORD v41[2];
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  _UNKNOWN **v45;
  unsigned __int8 v46;
  _QWORD v47[5];
  uint64_t v48[5];
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;

  v10 = *a1;
  v11 = a1[1];
  v12 = a1[2];
  v13 = a3[1];
  v28 = *a3;
  v14 = a3[2];
  v29 = *a5;
  v31 = a5[1];
  v32 = a5[2];
  v15 = v7[9];
  v57 = v7[8];
  v58 = v15;
  v59 = *((_QWORD *)v7 + 20);
  v16 = v7[5];
  v53 = v7[4];
  v54 = v16;
  v17 = v7[7];
  v55 = v7[6];
  v56 = v17;
  v18 = v7[1];
  v49 = *v7;
  v50 = v18;
  v19 = v7[3];
  v51 = v7[2];
  v52 = v19;
  v20 = type metadata accessor for Expression(0, a6, (uint64_t)a3, a4);
  v47[3] = v20;
  v47[4] = &protocol witness table for Expression<A>;
  v47[0] = v10;
  v47[1] = v11;
  v47[2] = v12;
  v21 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = v21(a6, a7);
  v24 = v23;
  v46 = 2;
  if (v13)
  {
    *((_QWORD *)&v44 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
    v45 = &protocol witness table for Expression<A>;
    v25 = v28;
    *(_QWORD *)&v43 = v28;
    *((_QWORD *)&v43 + 1) = v13;
    *(_QWORD *)&v44 = v14;
  }
  else
  {
    v45 = 0;
    v43 = 0u;
    v44 = 0u;
    v25 = v28;
  }
  v42 = 0;
  memset(v41, 0, sizeof(v41));
  sub_247BFA88C(a4, (uint64_t)v35);
  v39 = v20;
  v40 = &protocol witness table for Expression<A>;
  v36 = v29;
  v37 = v31;
  v38 = v32;
  v34 = xmmword_247C3E180;
  sub_247BFE9A0(v25, v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C022C4((uint64_t)v47, v22, v24, &v46, 0, a2 & 1, (uint64_t)&v43, (uint64_t)v41, v48, (uint64_t)v35, (uint64_t *)&v34);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v41, &qword_254455440);
  sub_247BFC084((uint64_t)v35, &qword_254455338);
  sub_247BFC084((uint64_t)&v43, &qword_254455440);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
  v26 = sub_247C0290C((uint64_t)v48);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  return v26;
}

{
  __int128 *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v33;
  _BYTE v34[40];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _UNKNOWN **v39;
  _OWORD v40[2];
  uint64_t v41;
  _QWORD v42[5];
  unsigned __int8 v43;
  _QWORD v44[5];
  uint64_t v45[5];
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;

  v10 = *a1;
  v11 = a1[1];
  v12 = a1[2];
  v13 = a3[1];
  v14 = a3[2];
  v30 = *a5;
  v27 = *a3;
  v28 = a5[1];
  v29 = a5[2];
  v15 = v7[9];
  v54 = v7[8];
  v55 = v15;
  v56 = *((_QWORD *)v7 + 20);
  v16 = v7[5];
  v50 = v7[4];
  v51 = v16;
  v17 = v7[7];
  v52 = v7[6];
  v53 = v17;
  v18 = v7[1];
  v46 = *v7;
  v47 = v18;
  v19 = v7[3];
  v48 = v7[2];
  v49 = v19;
  v20 = type metadata accessor for Expression(0, a6, (uint64_t)a3, a4);
  v44[3] = v20;
  v44[4] = &protocol witness table for Expression<A>;
  v44[0] = v10;
  v44[1] = v11;
  v44[2] = v12;
  v21 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = v21(a6, a7);
  v24 = v23;
  v43 = 2;
  v42[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v42[4] = &protocol witness table for Expression<A>;
  v42[0] = v27;
  v42[1] = v13;
  v42[2] = v14;
  v41 = 0;
  memset(v40, 0, sizeof(v40));
  sub_247BFA88C(a4, (uint64_t)v34);
  v38 = v20;
  v39 = &protocol witness table for Expression<A>;
  v35 = v30;
  v36 = v28;
  v37 = v29;
  v33 = xmmword_247C3E180;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C022C4((uint64_t)v44, v22, v24, &v43, 0, a2, (uint64_t)v42, (uint64_t)v40, v45, (uint64_t)v34, (uint64_t *)&v33);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v40, &qword_254455440);
  sub_247BFC084((uint64_t)v34, &qword_254455338);
  sub_247BFC084((uint64_t)v42, &qword_254455440);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  v25 = sub_247C0290C((uint64_t)v45);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  return v25;
}

{
  __int128 *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  __int128 v37;
  _BYTE v38[40];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _UNKNOWN **v43;
  _OWORD v44[2];
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  _UNKNOWN **v48;
  unsigned __int8 v49;
  _QWORD v50[5];
  uint64_t v51[5];
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;

  v10 = *a1;
  v11 = a1[1];
  v12 = a1[2];
  v13 = *a3;
  v14 = a3[1];
  v15 = a3[2];
  v33 = *a5;
  v32 = a5[1];
  v35 = a5[2];
  v16 = v7[9];
  v60 = v7[8];
  v61 = v16;
  v62 = *((_QWORD *)v7 + 20);
  v17 = v7[5];
  v56 = v7[4];
  v57 = v17;
  v18 = v7[7];
  v58 = v7[6];
  v59 = v18;
  v19 = v7[1];
  v52 = *v7;
  v53 = v19;
  v20 = v7[3];
  v54 = v7[2];
  v55 = v20;
  v21 = sub_247C3D9B4();
  v50[3] = type metadata accessor for Expression(0, v21, v22, v23);
  v50[4] = &protocol witness table for Expression<A>;
  v50[0] = v10;
  v50[1] = v11;
  v50[2] = v12;
  v24 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = v24(a6, a7);
  v27 = v26;
  v49 = 2;
  if (v14)
  {
    *((_QWORD *)&v47 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
    v48 = &protocol witness table for Expression<A>;
    *(_QWORD *)&v46 = v13;
    *((_QWORD *)&v46 + 1) = v14;
    *(_QWORD *)&v47 = v15;
  }
  else
  {
    v48 = 0;
    v46 = 0u;
    v47 = 0u;
  }
  v45 = 0;
  memset(v44, 0, sizeof(v44));
  sub_247BFA88C(a4, (uint64_t)v38);
  v42 = type metadata accessor for Expression(0, a6, v28, v29);
  v43 = &protocol witness table for Expression<A>;
  v39 = v33;
  v40 = v32;
  v41 = v35;
  v37 = xmmword_247C3E180;
  sub_247BFE9A0(v13, v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C022C4((uint64_t)v50, v25, v27, &v49, 1, a2 & 1, (uint64_t)&v46, (uint64_t)v44, v51, (uint64_t)v38, (uint64_t *)&v37);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v44, &qword_254455440);
  sub_247BFC084((uint64_t)v38, &qword_254455338);
  sub_247BFC084((uint64_t)&v46, &qword_254455440);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  v30 = sub_247C0290C((uint64_t)v51);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  return v30;
}

{
  __int128 *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  __int128 v37;
  _BYTE v38[40];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _UNKNOWN **v43;
  _OWORD v44[2];
  uint64_t v45;
  _QWORD v46[5];
  unsigned __int8 v47;
  _QWORD v48[5];
  uint64_t v49[5];
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;

  v10 = *a1;
  v11 = a1[1];
  v12 = a1[2];
  v13 = a3[1];
  v32 = *a3;
  v14 = a3[2];
  v15 = a5[1];
  v34 = a5[2];
  v35 = *a5;
  v16 = v7[9];
  v58 = v7[8];
  v59 = v16;
  v60 = *((_QWORD *)v7 + 20);
  v17 = v7[5];
  v54 = v7[4];
  v55 = v17;
  v18 = v7[7];
  v56 = v7[6];
  v57 = v18;
  v19 = v7[1];
  v50 = *v7;
  v51 = v19;
  v20 = v7[3];
  v52 = v7[2];
  v53 = v20;
  v21 = sub_247C3D9B4();
  v48[3] = type metadata accessor for Expression(0, v21, v22, v23);
  v48[4] = &protocol witness table for Expression<A>;
  v48[0] = v10;
  v48[1] = v11;
  v48[2] = v12;
  v24 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = v24(a6, a7);
  v27 = v26;
  v47 = 2;
  v46[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v46[4] = &protocol witness table for Expression<A>;
  v46[0] = v32;
  v46[1] = v13;
  v46[2] = v14;
  v45 = 0;
  memset(v44, 0, sizeof(v44));
  sub_247BFA88C(a4, (uint64_t)v38);
  v42 = type metadata accessor for Expression(0, a6, v28, v29);
  v43 = &protocol witness table for Expression<A>;
  v39 = v35;
  v40 = v15;
  v41 = v34;
  v37 = xmmword_247C3E180;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C022C4((uint64_t)v48, v25, v27, &v47, 1, a2, (uint64_t)v46, (uint64_t)v44, v49, (uint64_t)v38, (uint64_t *)&v37);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v44, &qword_254455440);
  sub_247BFC084((uint64_t)v38, &qword_254455338);
  sub_247BFC084((uint64_t)v46, &qword_254455440);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  v30 = sub_247C0290C((uint64_t)v49);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  return v30;
}

uint64_t Table.addColumn<A>(_:check:defaultValue:collate:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  __int128 *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v27;
  uint64_t v30;
  uint64_t v31[2];
  _OWORD v32[5];
  uint64_t v33[5];
  __int128 v34;
  __int128 v35;
  _UNKNOWN **v36;
  unsigned __int8 v37;
  _QWORD v38[5];
  uint64_t v39[5];
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;

  v9 = *a1;
  v10 = a1[1];
  v11 = a1[2];
  v12 = *a2;
  v13 = a2[1];
  v14 = a2[2];
  v15 = a4[1];
  v30 = *a4;
  v16 = v6[9];
  v48 = v6[8];
  v49 = v16;
  v50 = *((_QWORD *)v6 + 20);
  v17 = v6[5];
  v44 = v6[4];
  v45 = v17;
  v18 = v6[7];
  v46 = v6[6];
  v47 = v18;
  v19 = v6[1];
  v40 = *v6;
  v41 = v19;
  v20 = v6[3];
  v42 = v6[2];
  v43 = v20;
  v38[3] = type metadata accessor for Expression(0, a5, a3, (uint64_t)a4);
  v38[4] = &protocol witness table for Expression<A>;
  v38[0] = v9;
  v38[1] = v10;
  v38[2] = v11;
  v21 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = v21(a5, a6);
  v24 = v23;
  v37 = 2;
  if (v13)
  {
    *((_QWORD *)&v35 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
    v36 = &protocol witness table for Expression<A>;
    *(_QWORD *)&v34 = v12;
    *((_QWORD *)&v34 + 1) = v13;
    *(_QWORD *)&v35 = v14;
  }
  else
  {
    v36 = 0;
    v34 = 0u;
    v35 = 0u;
  }
  v25 = *(_QWORD *)(a6 + 8);
  v33[3] = a5;
  v33[4] = v25;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_1, a3, a5);
  memset(v32, 0, sizeof(v32));
  v31[0] = v30;
  v31[1] = v15;
  sub_247BFE9A0(v12, v13);
  sub_247C0B9AC(v30, v15);
  sub_247C022C4((uint64_t)v38, v22, v24, &v37, 0, 0, (uint64_t)&v34, (uint64_t)v33, v39, (uint64_t)v32, v31);
  swift_bridgeObjectRelease();
  sub_247C0B9C0(v30, v15);
  sub_247BFC084((uint64_t)v32, &qword_254455338);
  sub_247BFC084((uint64_t)v33, &qword_254455440);
  sub_247BFC084((uint64_t)&v34, &qword_254455440);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  v27 = sub_247C0290C((uint64_t)v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  return v27;
}

{
  __int128 *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31[2];
  _OWORD v32[5];
  uint64_t v33[5];
  _QWORD v34[5];
  unsigned __int8 v35;
  _QWORD v36[5];
  uint64_t v37[5];
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;

  v9 = *a1;
  v10 = a1[1];
  v11 = a1[2];
  v12 = a2[1];
  v29 = *a2;
  v28 = a2[2];
  v13 = *a4;
  v14 = a4[1];
  v15 = v6[9];
  v46 = v6[8];
  v47 = v15;
  v48 = *((_QWORD *)v6 + 20);
  v16 = v6[5];
  v42 = v6[4];
  v43 = v16;
  v17 = v6[7];
  v44 = v6[6];
  v45 = v17;
  v18 = v6[1];
  v38 = *v6;
  v39 = v18;
  v19 = v6[3];
  v40 = v6[2];
  v41 = v19;
  v36[3] = type metadata accessor for Expression(0, a5, a3, (uint64_t)a4);
  v36[4] = &protocol witness table for Expression<A>;
  v36[0] = v9;
  v36[1] = v10;
  v36[2] = v11;
  v20 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = v20(a5, a6);
  v23 = v22;
  v35 = 2;
  v34[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v34[4] = &protocol witness table for Expression<A>;
  v34[0] = v29;
  v34[1] = v12;
  v34[2] = v28;
  v24 = *(_QWORD *)(a6 + 8);
  v33[3] = a5;
  v33[4] = v24;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_1, a3, a5);
  memset(v32, 0, sizeof(v32));
  v31[0] = v13;
  v31[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C0B9AC(v13, v14);
  sub_247C022C4((uint64_t)v36, v21, v23, &v35, 0, 0, (uint64_t)v34, (uint64_t)v33, v37, (uint64_t)v32, v31);
  swift_bridgeObjectRelease();
  sub_247C0B9C0(v13, v14);
  sub_247BFC084((uint64_t)v32, &qword_254455338);
  sub_247BFC084((uint64_t)v33, &qword_254455440);
  sub_247BFC084((uint64_t)v34, &qword_254455440);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  v26 = sub_247C0290C((uint64_t)v37);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  return v26;
}

{
  __int128 *v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[2];
  _BYTE v57[80];
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  _UNKNOWN **v63;
  unsigned __int8 v64;
  _QWORD v65[5];
  uint64_t v66[5];
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;

  v53 = a3;
  v12 = sub_247C3D9B4();
  v55 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v46 - v13;
  v16 = *a1;
  v15 = a1[1];
  v17 = a1[2];
  v18 = *a2;
  v19 = a2[1];
  v20 = a2[2];
  v51 = v19;
  v52 = v18;
  v21 = *a4;
  v49 = a4[1];
  v50 = v21;
  v22 = v6[9];
  v75 = v6[8];
  v76 = v22;
  v77 = *((_QWORD *)v6 + 20);
  v23 = v6[5];
  v71 = v6[4];
  v72 = v23;
  v24 = v6[7];
  v73 = v6[6];
  v74 = v24;
  v25 = v6[1];
  v67 = *v6;
  v68 = v25;
  v26 = v6[3];
  v69 = v6[2];
  v70 = v26;
  v54 = v27;
  v65[3] = type metadata accessor for Expression(0, v27, v28, v29);
  v65[4] = &protocol witness table for Expression<A>;
  v65[0] = v16;
  v65[1] = v15;
  v65[2] = v17;
  v30 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v31 = v30(a5, a6);
  v32 = v51;
  v47 = v33;
  v48 = v31;
  v64 = 2;
  if (v51)
  {
    *((_QWORD *)&v62 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
    v63 = &protocol witness table for Expression<A>;
    v34 = v52;
    *(_QWORD *)&v61 = v52;
    *((_QWORD *)&v61 + 1) = v32;
    *(_QWORD *)&v62 = v20;
  }
  else
  {
    v34 = v52;
    v63 = 0;
    v61 = 0u;
    v62 = 0u;
  }
  v35 = v54;
  v36 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v14, v53, v54);
  v37 = *(_QWORD *)(a5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v14, 1, a5) == 1)
  {
    sub_247BFE9A0(v34, v32);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v35);
    v60 = 0;
    v58 = 0u;
    v59 = 0u;
  }
  else
  {
    v38 = *(_QWORD *)(a6 + 8);
    *((_QWORD *)&v59 + 1) = a5;
    v60 = v38;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v58);
    (*(void (**)(uint64_t *, char *, uint64_t))(v37 + 32))(boxed_opaque_existential_1, v14, a5);
    sub_247BFE9A0(v34, v32);
  }
  v41 = v49;
  v40 = v50;
  v43 = v47;
  v42 = v48;
  memset(v57, 0, sizeof(v57));
  v56[0] = v50;
  v56[1] = v49;
  sub_247C0B9AC(v50, v49);
  sub_247C022C4((uint64_t)v65, v42, v43, &v64, 1, 0, (uint64_t)&v61, (uint64_t)&v58, v66, (uint64_t)v57, v56);
  swift_bridgeObjectRelease();
  sub_247C0B9C0(v40, v41);
  sub_247BFC084((uint64_t)v57, &qword_254455338);
  sub_247BFC084((uint64_t)&v58, &qword_254455440);
  sub_247BFC084((uint64_t)&v61, &qword_254455440);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
  v44 = sub_247C0290C((uint64_t)v66);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
  return v44;
}

{
  __int128 *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49[2];
  _BYTE v50[80];
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  _QWORD v54[5];
  unsigned __int8 v55;
  _QWORD v56[5];
  uint64_t v57[5];
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;

  v40 = a6;
  v44 = a3;
  v11 = sub_247C3D9B4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v43 = (char *)&v39 - v13;
  v14 = *a1;
  v15 = a1[1];
  v16 = a1[2];
  v17 = *a2;
  v39 = a2[1];
  v41 = a2[2];
  v42 = v17;
  v18 = *a4;
  v47 = a4[1];
  v48 = v18;
  v19 = v6[9];
  v66 = v6[8];
  v67 = v19;
  v68 = *((_QWORD *)v6 + 20);
  v20 = v6[5];
  v62 = v6[4];
  v63 = v20;
  v21 = v6[7];
  v64 = v6[6];
  v65 = v21;
  v22 = v6[1];
  v58 = *v6;
  v59 = v22;
  v23 = v6[3];
  v60 = v6[2];
  v61 = v23;
  v56[3] = type metadata accessor for Expression(0, v11, v24, v25);
  v56[4] = &protocol witness table for Expression<A>;
  v56[0] = v14;
  v56[1] = v15;
  v56[2] = v16;
  v26 = v40;
  v27 = *(uint64_t (**)(uint64_t, uint64_t))(v40 + 40);
  v28 = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v45 = v27(a5, v26);
  v46 = v29;
  v55 = 2;
  v54[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v54[4] = &protocol witness table for Expression<A>;
  v30 = v43;
  v54[0] = v42;
  v54[1] = v28;
  v54[2] = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v43, v44, v11);
  v31 = *(_QWORD *)(a5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v30, 1, a5) == 1)
  {
    v32 = *(void (**)(char *, uint64_t))(v12 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32(v30, v11);
    v53 = 0;
    v51 = 0u;
    v52 = 0u;
  }
  else
  {
    v33 = *(_QWORD *)(v26 + 8);
    *((_QWORD *)&v52 + 1) = a5;
    v53 = v33;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v51);
    (*(void (**)(uint64_t *, char *, uint64_t))(v31 + 32))(boxed_opaque_existential_1, v30, a5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  memset(v50, 0, sizeof(v50));
  v36 = v47;
  v35 = v48;
  v49[0] = v48;
  v49[1] = v47;
  sub_247C0B9AC(v48, v47);
  sub_247C022C4((uint64_t)v56, v45, v46, &v55, 1, 0, (uint64_t)v54, (uint64_t)&v51, v57, (uint64_t)v50, v49);
  swift_bridgeObjectRelease();
  sub_247C0B9C0(v35, v36);
  sub_247BFC084((uint64_t)v50, &qword_254455338);
  sub_247BFC084((uint64_t)&v51, &qword_254455440);
  sub_247BFC084((uint64_t)v54, &qword_254455440);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  v37 = sub_247C0290C((uint64_t)v57);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  return v37;
}

uint64_t sub_247C0446C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t countAndFlagsBits;
  uint64_t v12[4];

  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1C0;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(inited + 32) = 0x4154205245544C41;
  *(_QWORD *)(inited + 56) = v4;
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  v5 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 40) = 0xEB00000000454C42;
  *(_QWORD *)(inited + 48) = v5;
  if (v1[5])
  {
    v6 = v1[4];
    v7 = v1[5];
  }
  else
  {
    v6 = v1[2];
    v7 = v1[3];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_247BFFC64(v6, v7, (uint64_t *)(inited + 72));
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 136) = v4;
  *(_QWORD *)(inited + 144) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 112) = 0x5420454D414E4552;
  *(_QWORD *)(inited + 120) = 0xE90000000000004FLL;
  *(_QWORD *)(inited + 128) = v5;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(inited + 176) = v4;
  *(_QWORD *)(inited + 184) = &protocol witness table for Expression<A>;
  swift_bridgeObjectRetain();
  sub_247BFD20C(0, 0xE000000000000000, v8, v9, 34, 0xE100000000000000);
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 152) = 0;
  *(_QWORD *)(inited + 160) = 0xE000000000000000;
  *(_QWORD *)(inited + 168) = v5;
  sub_247BFECF4(inited, v12);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  countAndFlagsBits = Expressible.asSQL()()._countAndFlagsBits;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return countAndFlagsBits;
}

uint64_t Table.createIndex(_:unique:ifNotExists:)(uint64_t a1, char a2, char a3)
{
  __int128 *v3;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t inited;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t i;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t countAndFlagsBits;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  _QWORD v53[31];
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;

  v7 = v3[9];
  v61 = v3[8];
  v62 = v7;
  v63 = *((_QWORD *)v3 + 20);
  v8 = v3[5];
  v57 = v3[4];
  v58 = v8;
  v9 = v3[7];
  v59 = v3[6];
  v60 = v9;
  v10 = v3[1];
  *(_OWORD *)&v53[29] = *v3;
  v54 = v10;
  v11 = v3[3];
  v55 = v3[2];
  v56 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455420);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1C0;
  v13 = v3[8];
  v14 = v3[9];
  v15 = v3[6];
  v49 = v3[7];
  v50 = v13;
  v51 = v14;
  v17 = v3[4];
  v16 = v3[5];
  v52 = *((_QWORD *)v3 + 20);
  v47 = v16;
  v48 = v15;
  v18 = v3[1];
  v42 = *v3;
  v43 = v18;
  v19 = v3[2];
  v45 = v3[3];
  v46 = v17;
  v44 = v19;
  v37 = a1;
  sub_247C04ADC(a1, v53);
  if ((a2 & 1) != 0)
    v20 = 0;
  else
    v20 = 2;
  sub_247C01DA4(0x5845444E49, 0xE500000000000000, (uint64_t)v53, v20, a3, (uint64_t *)(inited + 32));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 72) = 20047;
  *(_QWORD *)(inited + 80) = 0xE200000000000000;
  *(_QWORD *)(inited + 88) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 96) = v21;
  if (*((_QWORD *)&v55 + 1))
  {
    v23 = *((_QWORD *)&v55 + 1);
    v22 = v55;
  }
  else
  {
    v23 = *((_QWORD *)&v54 + 1);
    v22 = v54;
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(inited + 136) = v21;
  *(_QWORD *)(inited + 144) = &protocol witness table for Expression<A>;
  swift_bridgeObjectRetain();
  sub_247BFD20C(0, 0xE000000000000000, v22, v23, 34, 0xE100000000000000);
  *(_QWORD *)&v42 = 0;
  *((_QWORD *)&v42 + 1) = 0xE000000000000000;
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 112) = 0;
  *(_QWORD *)(inited + 120) = 0xE000000000000000;
  v24 = (_QWORD *)MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 128) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 176) = v21;
  *(_QWORD *)(inited + 184) = &protocol witness table for Expression<A>;
  sub_247BFECF4(v37, (uint64_t *)&v42);
  sub_247BFB318(&v42, 0, 0xE000000000000000, (_QWORD *)(inited + 152));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v42);
  v41 = v24;
  for (i = 32; i != 192; i += 40)
  {
    sub_247BFD054(inited + i, (uint64_t)&v42, &qword_254455440);
    sub_247C0B964((uint64_t)&v42, (uint64_t)&v38);
    if (v39)
    {
      sub_247BFECDC(&v38, (uint64_t)v53);
      sub_247BFECDC((__int128 *)v53, (uint64_t)&v38);
      v26 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v26 = sub_247BFF2AC(0, v26[2] + 1, 1, v26, qword_254455398, &qword_254455340);
        v41 = v26;
      }
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v41 = sub_247BFF2AC((_QWORD *)(v27 > 1), v28 + 1, 1, v26, qword_254455398, &qword_254455340);
      v29 = v39;
      v30 = v40;
      v31 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v38, v39);
      MEMORY[0x24BDAC7A8](v31);
      v33 = (char *)&v37 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v34 + 16))(v33);
      sub_247BFF3F8(v28, (uint64_t)v33, (uint64_t *)&v41, v29, v30);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
    }
    else
    {
      sub_247BFC084((uint64_t)&v38, &qword_254455440);
    }
  }
  swift_bridgeObjectRelease();
  sub_247BFECF4((uint64_t)v41, (uint64_t *)&v42);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(&v42, *((uint64_t *)&v43 + 1));
  countAndFlagsBits = Expressible.asSQL()()._countAndFlagsBits;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v42);
  return countAndFlagsBits;
}

uint64_t sub_247C04ADC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __int128 *v2;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;

  v5 = v2[9];
  v48 = v2[8];
  v49 = v5;
  v50 = *((_QWORD *)v2 + 20);
  v6 = v2[5];
  v44 = v2[4];
  v45 = v6;
  v7 = v2[7];
  v46 = v2[6];
  v47 = v7;
  v8 = v2[1];
  v40 = *v2;
  v41 = v8;
  v9 = v2[3];
  v42 = v2[2];
  v43 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455470);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_247C3E140;
  *(_QWORD *)(v10 + 32) = 0x7865646E69;
  *(_QWORD *)(v10 + 40) = 0xE500000000000000;
  v11 = *((_QWORD *)&v41 + 1);
  *(_QWORD *)(v10 + 48) = v41;
  *(_QWORD *)(v10 + 56) = v11;
  *(_QWORD *)(v10 + 64) = 28271;
  *(_QWORD *)(v10 + 72) = 0xE200000000000000;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v39 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_247C00908(0, v12, 0);
    v13 = a1 + 32;
    v14 = v39;
    do
    {
      sub_247BFA88C(v13, (uint64_t)v36);
      v15 = v37;
      v16 = v38;
      __swift_project_boxed_opaque_existential_1(v36, v37);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v16 + 8))(&v34, v15, v16);
      v17 = v34;
      v18 = v35;
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_247C00908(0, *(_QWORD *)(v14 + 16) + 1, 1);
        v14 = v39;
      }
      v20 = *(_QWORD *)(v14 + 16);
      v19 = *(_QWORD *)(v14 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_247C00908((char *)(v19 > 1), v20 + 1, 1);
        v14 = v39;
      }
      *(_QWORD *)(v14 + 16) = v20 + 1;
      v21 = v14 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v17;
      *(_QWORD *)(v21 + 40) = v18;
      v13 += 40;
      --v12;
    }
    while (v12);
  }
  else
  {
    swift_bridgeObjectRetain();
    v14 = MEMORY[0x24BEE4AF8];
  }
  v36[0] = v10;
  sub_247C0F878(v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455450);
  sub_247C0BE54();
  sub_247C3D78C();
  swift_bridgeObjectRelease();
  v22 = sub_247C3D7F8();
  v24 = v23;
  swift_bridgeObjectRelease();
  v25 = HIBYTE(v24) & 0xF;
  v36[0] = v22;
  v36[1] = v24;
  if ((v24 & 0x2000000000000000) == 0)
    v25 = v22 & 0xFFFFFFFFFFFFLL;
  v36[2] = 0;
  v37 = v25;
  swift_bridgeObjectRetain();
  v26 = sub_247C3D864();
  if (!v27)
  {
    v30 = 0;
    v31 = 0xE000000000000000;
LABEL_38:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247BFFC64(v30, v31, a2);
    return swift_bridgeObjectRelease();
  }
  v28 = v26;
  v29 = v27;
  v30 = 0;
  v31 = 0xE000000000000000;
  while (v28 == 34 && v29 == 0xE100000000000000 || (sub_247C3DAD4() & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    v28 = sub_247C3D864();
    v29 = v32;
    if (!v32)
      goto LABEL_38;
  }
  result = sub_247C3DAD4();
  if ((result & 1) == 0)
  {
    if (v28 != 97 || v29 != 0xE100000000000000)
    {
      if ((sub_247C3DAD4() & 1) != 0)
        goto LABEL_25;
      if (v28 == 122 && v29 == 0xE100000000000000)
        goto LABEL_36;
    }
    if ((sub_247C3DAD4() & 1) == 0)
    {
LABEL_36:
      v34 = v30;
      v35 = v31;
      swift_bridgeObjectRetain();
      sub_247C3D840();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v30 = v34;
      v31 = v35;
      goto LABEL_15;
    }
LABEL_25:
    result = sub_247C3DAD4();
    if ((result & 1) != 0)
      goto LABEL_40;
    if (v28 == 48 && v29 == 0xE100000000000000
      || (sub_247C3DAD4() & 1) == 0 && (v28 != 57 || v29 != 0xE100000000000000))
    {
      sub_247C3DAD4();
    }
    goto LABEL_36;
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t Table.dropIndex(_:ifExists:)(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v5[5];

  sub_247C04ADC(a1, v5);
  v3 = sub_247C0B66C(0x5845444E49, 0xE500000000000000, (uint64_t)v5, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v3;
}

uint64_t View.create(_:temporary:ifNotExists:)(_QWORD *a1, char a2, char a3)
{
  return sub_247C04FC8(a1, a2, a3, 1464158550, 0xE400000000000000);
}

uint64_t sub_247C04FC8(_QWORD *a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  __int128 *v5;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *boxed_opaque_existential_1;
  uint64_t i;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t countAndFlagsBits;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41[2];
  _QWORD *v42;
  uint64_t v43[24];
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;

  v37 = a5;
  v10 = v5[9];
  v52 = v5[8];
  v53 = v10;
  v54 = *((_QWORD *)v5 + 20);
  v11 = v5[5];
  v48 = v5[4];
  v49 = v11;
  v12 = v5[7];
  v50 = v5[6];
  v51 = v12;
  v13 = v5[1];
  v44 = *v5;
  v45 = v13;
  v14 = v5[3];
  v46 = v5[2];
  v47 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455420);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E140;
  if (*((_QWORD *)&v46 + 1))
  {
    v17 = *((_QWORD *)&v46 + 1);
    v16 = v46;
  }
  else
  {
    v17 = *((_QWORD *)&v45 + 1);
    v16 = v45;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_247BFFC64(v16, v17, v43);
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
    v18 = 1;
  else
    v18 = 2;
  sub_247C01DA4(a4, v37, (uint64_t)v43, v18, a3 & 1, (uint64_t *)(inited + 32));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
  v20 = (_QWORD *)MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 72) = 21313;
  *(_QWORD *)(inited + 80) = 0xE200000000000000;
  *(_QWORD *)(inited + 88) = v20;
  *(_QWORD *)(inited + 96) = v19;
  v21 = a1[3];
  v22 = a1[4];
  v23 = __swift_project_boxed_opaque_existential_1(a1, v21);
  *(_QWORD *)(inited + 136) = v21;
  *(_QWORD *)(inited + 144) = *(_QWORD *)(v22 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 112));
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(boxed_opaque_existential_1, v23, v21);
  v42 = v20;
  for (i = 32; i != 152; i += 40)
  {
    sub_247BFD054(inited + i, (uint64_t)v43, &qword_254455440);
    sub_247C0B964((uint64_t)v43, (uint64_t)&v38);
    if (v39)
    {
      sub_247BFECDC(&v38, (uint64_t)v41);
      sub_247BFECDC(v41, (uint64_t)&v38);
      v26 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v26 = sub_247BFF2AC(0, v26[2] + 1, 1, v26, qword_254455398, &qword_254455340);
        v42 = v26;
      }
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v42 = sub_247BFF2AC((_QWORD *)(v27 > 1), v28 + 1, 1, v26, qword_254455398, &qword_254455340);
      v29 = v39;
      v30 = v40;
      v31 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v38, v39);
      MEMORY[0x24BDAC7A8](v31);
      v33 = (char *)&v37 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v34 + 16))(v33);
      sub_247BFF3F8(v28, (uint64_t)v33, (uint64_t *)&v42, v29, v30);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v38);
    }
    else
    {
      sub_247BFC084((uint64_t)&v38, &qword_254455440);
    }
  }
  swift_bridgeObjectRelease();
  sub_247BFECF4((uint64_t)v42, v43);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v43, v43[3]);
  countAndFlagsBits = Expressible.asSQL()()._countAndFlagsBits;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  return countAndFlagsBits;
}

Swift::String __swiftcall View.drop(ifExists:)(Swift::Bool ifExists)
{
  __int128 *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  Swift::String result;
  uint64_t v16[5];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v3 = v1[9];
  v25 = v1[8];
  v26 = v3;
  v27 = *((_QWORD *)v1 + 20);
  v4 = v1[5];
  v21 = v1[4];
  v22 = v4;
  v5 = v1[7];
  v23 = v1[6];
  v24 = v5;
  v6 = v1[1];
  v17 = *v1;
  v18 = v6;
  v7 = v1[3];
  v19 = v1[2];
  v20 = v7;
  if (*((_QWORD *)&v19 + 1))
  {
    v8 = *((_QWORD *)&v19 + 1);
    v9 = v19;
  }
  else
  {
    v8 = *((_QWORD *)&v18 + 1);
    v9 = v18;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_247BFFC64(v9, v8, v16);
  swift_bridgeObjectRelease();
  v10 = sub_247C0B66C(1464158550, 0xE400000000000000, (uint64_t)v16, ifExists);
  v12 = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  v13 = v10;
  v14 = v12;
  result._object = v14;
  result._countAndFlagsBits = v13;
  return result;
}

uint64_t VirtualTable.create(_:ifNotExists:)(uint64_t *a1, char a2)
{
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t i;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t countAndFlagsBits;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33[2];
  _QWORD *v34;
  uint64_t v35[24];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;

  v5 = *a1;
  v4 = a1[1];
  v6 = a1[2];
  v7 = v2[9];
  v44 = v2[8];
  v45 = v7;
  v46 = *((_QWORD *)v2 + 20);
  v8 = v2[5];
  v40 = v2[4];
  v41 = v8;
  v9 = v2[7];
  v42 = v2[6];
  v43 = v9;
  v10 = v2[1];
  v36 = *v2;
  v37 = v10;
  v11 = v2[3];
  v38 = v2[2];
  v39 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455420);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E140;
  if (*((_QWORD *)&v38 + 1))
  {
    v13 = *((_QWORD *)&v38 + 1);
    v14 = v38;
  }
  else
  {
    v13 = *((_QWORD *)&v37 + 1);
    v14 = v37;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_247BFFC64(v14, v13, v35);
  swift_bridgeObjectRelease();
  sub_247C01DA4(0x204C415554524956, 0xED0000454C424154, (uint64_t)v35, 2u, a2 & 1, (uint64_t *)(inited + 32));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(inited + 72) = 0x474E495355;
  *(_QWORD *)(inited + 80) = 0xE500000000000000;
  *(_QWORD *)(inited + 136) = &type metadata for Module;
  *(_QWORD *)(inited + 144) = &protocol witness table for Module;
  v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 88) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 96) = v15;
  *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 112) = v5;
  *(_QWORD *)(inited + 120) = v4;
  *(_QWORD *)(inited + 128) = v6;
  v34 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (i = 32; i != 152; i += 40)
  {
    sub_247BFD054(inited + i, (uint64_t)v35, &qword_254455440);
    sub_247C0B964((uint64_t)v35, (uint64_t)&v30);
    if (v31)
    {
      sub_247BFECDC(&v30, (uint64_t)v33);
      sub_247BFECDC(v33, (uint64_t)&v30);
      v18 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v18 = sub_247BFF2AC(0, v18[2] + 1, 1, v18, qword_254455398, &qword_254455340);
        v34 = v18;
      }
      v20 = v18[2];
      v19 = v18[3];
      if (v20 >= v19 >> 1)
        v34 = sub_247BFF2AC((_QWORD *)(v19 > 1), v20 + 1, 1, v18, qword_254455398, &qword_254455340);
      v21 = v31;
      v22 = v32;
      v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v30, v31);
      MEMORY[0x24BDAC7A8](v23);
      v25 = (char *)&v29 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v26 + 16))(v25);
      sub_247BFF3F8(v20, (uint64_t)v25, (uint64_t *)&v34, v21, v22);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
    }
    else
    {
      sub_247BFC084((uint64_t)&v30, &qword_254455440);
    }
  }
  swift_bridgeObjectRelease();
  sub_247BFECF4((uint64_t)v34, v35);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v35, v35[3]);
  countAndFlagsBits = Expressible.asSQL()()._countAndFlagsBits;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return countAndFlagsBits;
}

uint64_t _s11SwiftSQLite5TableV6renameySSACF_0(uint64_t a1)
{
  __int128 *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[10];
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  v2 = *(_OWORD *)(a1 + 144);
  v13[8] = *(_OWORD *)(a1 + 128);
  v13[9] = v2;
  v14 = *(_QWORD *)(a1 + 160);
  v3 = *(_OWORD *)(a1 + 80);
  v13[4] = *(_OWORD *)(a1 + 64);
  v13[5] = v3;
  v4 = *(_OWORD *)(a1 + 112);
  v13[6] = *(_OWORD *)(a1 + 96);
  v13[7] = v4;
  v5 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v5;
  v6 = *(_OWORD *)(a1 + 48);
  v13[2] = *(_OWORD *)(a1 + 32);
  v13[3] = v6;
  v7 = v1[9];
  v23 = v1[8];
  v24 = v7;
  v25 = *((_QWORD *)v1 + 20);
  v8 = v1[5];
  v19 = v1[4];
  v20 = v8;
  v9 = v1[7];
  v21 = v1[6];
  v22 = v9;
  v10 = v1[1];
  v15 = *v1;
  v16 = v10;
  v11 = v1[3];
  v17 = v1[2];
  v18 = v11;
  return sub_247C0446C((uint64_t)v13);
}

uint64_t TableBuilder.column<A>(_:unique:check:defaultValue:)(_QWORD *a1, char a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v27;
  __int128 v28;
  _OWORD v29[5];
  __int128 v30;
  __int128 v31;
  _UNKNOWN **v32;
  __int128 v33;
  __int128 v34;
  _UNKNOWN **v35;
  unsigned __int8 v36;
  _QWORD v37[4];

  v8 = a1[1];
  v9 = a1[2];
  v11 = *a3;
  v10 = a3[1];
  v12 = a3[2];
  v13 = *a4;
  v14 = a4[1];
  v15 = a4[2];
  v37[0] = *a1;
  v37[1] = v8;
  v37[2] = v9;
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = v16(a5, a6);
  v21 = v20;
  v36 = 2;
  if (!v10)
  {
    v35 = 0;
    v33 = 0u;
    v34 = 0u;
    if (v14)
      goto LABEL_3;
LABEL_5:
    v32 = 0;
    v30 = 0u;
    v31 = 0u;
    goto LABEL_6;
  }
  *((_QWORD *)&v34 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v35 = &protocol witness table for Expression<A>;
  *(_QWORD *)&v33 = v11;
  *((_QWORD *)&v33 + 1) = v10;
  *(_QWORD *)&v34 = v12;
  if (!v14)
    goto LABEL_5;
LABEL_3:
  *((_QWORD *)&v31 + 1) = type metadata accessor for Expression(0, a5, v17, v18);
  v32 = &protocol witness table for Expression<A>;
  *(_QWORD *)&v30 = v13;
  *((_QWORD *)&v30 + 1) = v14;
  *(_QWORD *)&v31 = v15;
LABEL_6:
  v28 = xmmword_247C3E180;
  memset(v29, 0, sizeof(v29));
  sub_247BFE9A0(v11, v10);
  sub_247BFE9A0(v13, v14);
  v24 = type metadata accessor for Expression(0, a5, v22, v23);
  sub_247C0AE8C((uint64_t)v37, v19, v21, &v36, 0, a2 & 1, (uint64_t)&v33, (uint64_t)&v30, (uint64_t)v29, &v28, v27, v24, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v29, &qword_254455338);
  sub_247BFC084((uint64_t)&v30, &qword_254455440);
  sub_247BFC084((uint64_t)&v33, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v27;
  __int128 v28;
  _OWORD v29[5];
  __int128 v30;
  __int128 v31;
  _UNKNOWN **v32;
  _QWORD v33[5];
  unsigned __int8 v34;
  _QWORD v35[4];

  v8 = a1[1];
  v9 = a1[2];
  v10 = *a3;
  v11 = a3[1];
  v12 = a3[2];
  v14 = *a4;
  v13 = a4[1];
  v15 = a4[2];
  v35[0] = *a1;
  v35[1] = v8;
  v35[2] = v9;
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v16(a5, a6);
  v19 = v18;
  v34 = 2;
  v33[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v33[4] = &protocol witness table for Expression<A>;
  v33[0] = v10;
  v33[1] = v11;
  v33[2] = v12;
  if (v13)
  {
    *((_QWORD *)&v31 + 1) = type metadata accessor for Expression(0, a5, v20, v21);
    v32 = &protocol witness table for Expression<A>;
    *(_QWORD *)&v30 = v14;
    *((_QWORD *)&v30 + 1) = v13;
    *(_QWORD *)&v31 = v15;
  }
  else
  {
    v32 = 0;
    v30 = 0u;
    v31 = 0u;
  }
  v28 = xmmword_247C3E180;
  memset(v29, 0, sizeof(v29));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFE9A0(v14, v13);
  v24 = type metadata accessor for Expression(0, a5, v22, v23);
  sub_247C0AE8C((uint64_t)v35, v17, v19, &v34, 0, a2 & 1, (uint64_t)v33, (uint64_t)&v30, (uint64_t)v29, &v28, v27, v24, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v29, &qword_254455338);
  sub_247BFC084((uint64_t)&v30, &qword_254455440);
  sub_247BFC084((uint64_t)v33, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v28;
  __int128 v29;
  _OWORD v30[5];
  __int128 v31;
  __int128 v32;
  _UNKNOWN **v33;
  __int128 v34;
  __int128 v35;
  _UNKNOWN **v36;
  unsigned __int8 v37;
  _QWORD v38[4];

  v8 = a1[1];
  v9 = a1[2];
  v11 = *a3;
  v10 = a3[1];
  v12 = a3[2];
  v13 = *a4;
  v14 = a4[1];
  v15 = a4[2];
  v38[0] = *a1;
  v38[1] = v8;
  v38[2] = v9;
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = v16(a5, a6);
  v21 = v20;
  v37 = 2;
  if (!v10)
  {
    v36 = 0;
    v34 = 0u;
    v35 = 0u;
    if (v14)
      goto LABEL_3;
LABEL_5:
    v33 = 0;
    v31 = 0u;
    v32 = 0u;
    goto LABEL_6;
  }
  *((_QWORD *)&v35 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v36 = &protocol witness table for Expression<A>;
  *(_QWORD *)&v34 = v11;
  *((_QWORD *)&v34 + 1) = v10;
  *(_QWORD *)&v35 = v12;
  if (!v14)
    goto LABEL_5;
LABEL_3:
  *((_QWORD *)&v32 + 1) = type metadata accessor for Expression(0, a5, v17, v18);
  v33 = &protocol witness table for Expression<A>;
  *(_QWORD *)&v31 = v13;
  *((_QWORD *)&v31 + 1) = v14;
  *(_QWORD *)&v32 = v15;
LABEL_6:
  v29 = xmmword_247C3E180;
  memset(v30, 0, sizeof(v30));
  sub_247BFE9A0(v11, v10);
  sub_247BFE9A0(v13, v14);
  v22 = sub_247C3D9B4();
  v25 = type metadata accessor for Expression(0, v22, v23, v24);
  sub_247C0AE8C((uint64_t)v38, v19, v21, &v37, 1, a2 & 1, (uint64_t)&v34, (uint64_t)&v31, (uint64_t)v30, &v29, v28, v25, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v30, &qword_254455338);
  sub_247BFC084((uint64_t)&v31, &qword_254455440);
  sub_247BFC084((uint64_t)&v34, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v25;
  __int128 v26;
  _OWORD v27[5];
  _QWORD v28[3];
  uint64_t v29;
  _UNKNOWN **v30;
  __int128 v31;
  __int128 v32;
  _UNKNOWN **v33;
  unsigned __int8 v34;
  _QWORD v35[4];

  v8 = a1[1];
  v9 = a1[2];
  v11 = *a3;
  v10 = a3[1];
  v12 = a3[2];
  v13 = *a4;
  v14 = a4[1];
  v15 = a4[2];
  v35[0] = *a1;
  v35[1] = v8;
  v35[2] = v9;
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v16(a5, a6);
  v19 = v18;
  v34 = 2;
  if (v10)
  {
    *((_QWORD *)&v32 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
    v33 = &protocol witness table for Expression<A>;
    *(_QWORD *)&v31 = v11;
    *((_QWORD *)&v31 + 1) = v10;
    *(_QWORD *)&v32 = v12;
  }
  else
  {
    v33 = 0;
    v31 = 0u;
    v32 = 0u;
  }
  v20 = sub_247C3D9B4();
  v29 = type metadata accessor for Expression(0, v20, v21, v22);
  v30 = &protocol witness table for Expression<A>;
  v28[0] = v13;
  v28[1] = v14;
  v28[2] = v15;
  v26 = xmmword_247C3E180;
  memset(v27, 0, sizeof(v27));
  sub_247BFE9A0(v11, v10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C0AE8C((uint64_t)v35, v17, v19, &v34, 1, a2 & 1, (uint64_t)&v31, (uint64_t)v28, (uint64_t)v27, &v26, v25, v29, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v27, &qword_254455338);
  sub_247BFC084((uint64_t)v28, &qword_254455440);
  sub_247BFC084((uint64_t)&v31, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v28;
  __int128 v29;
  _OWORD v30[5];
  __int128 v31;
  __int128 v32;
  _UNKNOWN **v33;
  _QWORD v34[5];
  unsigned __int8 v35;
  _QWORD v36[4];

  v8 = a1[1];
  v9 = a1[2];
  v10 = *a3;
  v11 = a3[1];
  v12 = a3[2];
  v14 = *a4;
  v13 = a4[1];
  v15 = a4[2];
  v36[0] = *a1;
  v36[1] = v8;
  v36[2] = v9;
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v16(a5, a6);
  v19 = v18;
  v35 = 2;
  v34[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v34[4] = &protocol witness table for Expression<A>;
  v34[0] = v10;
  v34[1] = v11;
  v34[2] = v12;
  if (v13)
  {
    *((_QWORD *)&v32 + 1) = type metadata accessor for Expression(0, a5, v20, v21);
    v33 = &protocol witness table for Expression<A>;
    *(_QWORD *)&v31 = v14;
    *((_QWORD *)&v31 + 1) = v13;
    *(_QWORD *)&v32 = v15;
  }
  else
  {
    v33 = 0;
    v31 = 0u;
    v32 = 0u;
  }
  v29 = xmmword_247C3E180;
  memset(v30, 0, sizeof(v30));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFE9A0(v14, v13);
  v22 = sub_247C3D9B4();
  v25 = type metadata accessor for Expression(0, v22, v23, v24);
  sub_247C0AE8C((uint64_t)v36, v17, v19, &v35, 1, a2 & 1, (uint64_t)v34, (uint64_t)&v31, (uint64_t)v30, &v29, v28, v25, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v30, &qword_254455338);
  sub_247BFC084((uint64_t)&v31, &qword_254455440);
  sub_247BFC084((uint64_t)v34, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  __int128 v26;
  _OWORD v27[5];
  _QWORD v28[3];
  uint64_t v29;
  _UNKNOWN **v30;
  _QWORD v31[5];
  unsigned __int8 v32;
  _QWORD v33[4];

  v8 = a1[1];
  v9 = a1[2];
  v11 = *a3;
  v10 = a3[1];
  v12 = a3[2];
  v13 = *a4;
  v14 = a4[1];
  v15 = a4[2];
  v33[0] = *a1;
  v33[1] = v8;
  v33[2] = v9;
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v16(a5, a6);
  v19 = v18;
  v32 = 2;
  v31[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v31[4] = &protocol witness table for Expression<A>;
  v31[0] = v11;
  v31[1] = v10;
  v31[2] = v12;
  v20 = sub_247C3D9B4();
  v29 = type metadata accessor for Expression(0, v20, v21, v22);
  v30 = &protocol witness table for Expression<A>;
  v28[0] = v13;
  v28[1] = v14;
  v28[2] = v15;
  v26 = xmmword_247C3E180;
  memset(v27, 0, sizeof(v27));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C0AE8C((uint64_t)v33, v17, v19, &v32, 1, a2, (uint64_t)v31, (uint64_t)v28, (uint64_t)v27, &v26, v24, v29, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v27, &qword_254455338);
  sub_247BFC084((uint64_t)v28, &qword_254455440);
  sub_247BFC084((uint64_t)v31, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t TableBuilder.column<A>(_:unique:check:defaultValue:)(_QWORD *a1, char a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  __int128 v26;
  _OWORD v27[5];
  uint64_t v28[5];
  __int128 v29;
  __int128 v30;
  _UNKNOWN **v31;
  unsigned __int8 v32;
  _QWORD v33[4];

  v10 = a1[1];
  v11 = a1[2];
  v13 = *a3;
  v12 = a3[1];
  v14 = a3[2];
  v33[0] = *a1;
  v33[1] = v10;
  v33[2] = v11;
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = v15(a5, a6);
  v18 = v17;
  v32 = 2;
  if (v12)
  {
    *((_QWORD *)&v30 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
    v31 = &protocol witness table for Expression<A>;
    *(_QWORD *)&v29 = v13;
    *((_QWORD *)&v29 + 1) = v12;
    *(_QWORD *)&v30 = v14;
  }
  else
  {
    v31 = 0;
    v29 = 0u;
    v30 = 0u;
  }
  v19 = *(_QWORD *)(a6 + 8);
  v28[3] = a5;
  v28[4] = v19;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_1, a4, a5);
  v26 = xmmword_247C3E180;
  memset(v27, 0, sizeof(v27));
  sub_247BFE9A0(v13, v12);
  v23 = type metadata accessor for Expression(0, a5, v21, v22);
  sub_247C0AE8C((uint64_t)v33, v16, v18, &v32, 0, a2 & 1, (uint64_t)&v29, (uint64_t)v28, (uint64_t)v27, &v26, v25, v23, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v27, &qword_254455338);
  sub_247BFC084((uint64_t)v28, &qword_254455440);
  sub_247BFC084((uint64_t)&v29, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v27;
  _OWORD v28[5];
  uint64_t v29[5];
  _QWORD v30[5];
  unsigned __int8 v31;
  _QWORD v32[4];

  v7 = v6;
  v11 = a1[1];
  v12 = a1[2];
  v14 = *a3;
  v13 = a3[1];
  v15 = a3[2];
  v32[0] = *a1;
  v32[1] = v11;
  v32[2] = v12;
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v16(a5, a6);
  v19 = v18;
  v31 = 2;
  v30[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v30[4] = &protocol witness table for Expression<A>;
  v30[0] = v14;
  v30[1] = v13;
  v30[2] = v15;
  v20 = *(_QWORD *)(a6 + 8);
  v29[3] = a5;
  v29[4] = v20;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v29);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_1, a4, a5);
  v27 = xmmword_247C3E180;
  memset(v28, 0, sizeof(v28));
  v24 = type metadata accessor for Expression(0, a5, v22, v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C0AE8C((uint64_t)v32, v17, v19, &v31, 0, a2, (uint64_t)v30, (uint64_t)v29, (uint64_t)v28, &v27, v7, v24, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v28, &qword_254455338);
  sub_247BFC084((uint64_t)v29, &qword_254455440);
  sub_247BFC084((uint64_t)v30, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  __int128 v27;
  _OWORD v28[5];
  uint64_t v29[5];
  __int128 v30;
  __int128 v31;
  _UNKNOWN **v32;
  unsigned __int8 v33;
  _QWORD v34[4];

  v10 = a1[1];
  v11 = a1[2];
  v13 = *a3;
  v12 = a3[1];
  v14 = a3[2];
  v34[0] = *a1;
  v34[1] = v10;
  v34[2] = v11;
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = v15(a5, a6);
  v18 = v17;
  v33 = 2;
  if (v12)
  {
    *((_QWORD *)&v31 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
    v32 = &protocol witness table for Expression<A>;
    *(_QWORD *)&v30 = v13;
    *((_QWORD *)&v30 + 1) = v12;
    *(_QWORD *)&v31 = v14;
  }
  else
  {
    v32 = 0;
    v30 = 0u;
    v31 = 0u;
  }
  v19 = *(_QWORD *)(a6 + 8);
  v29[3] = a5;
  v29[4] = v19;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v29);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_1, a4, a5);
  v27 = xmmword_247C3E180;
  memset(v28, 0, sizeof(v28));
  sub_247BFE9A0(v13, v12);
  v21 = sub_247C3D9B4();
  v24 = type metadata accessor for Expression(0, v21, v22, v23);
  sub_247C0AE8C((uint64_t)v34, v16, v18, &v33, 1, a2 & 1, (uint64_t)&v30, (uint64_t)v29, (uint64_t)v28, &v27, v26, v24, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v28, &qword_254455338);
  sub_247BFC084((uint64_t)v29, &qword_254455440);
  sub_247BFC084((uint64_t)&v30, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v28;
  _OWORD v29[5];
  uint64_t v30[5];
  _QWORD v31[5];
  unsigned __int8 v32;
  _QWORD v33[4];

  v7 = v6;
  v11 = a1[1];
  v12 = a1[2];
  v14 = *a3;
  v13 = a3[1];
  v15 = a3[2];
  v33[0] = *a1;
  v33[1] = v11;
  v33[2] = v12;
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v16(a5, a6);
  v19 = v18;
  v32 = 2;
  v31[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v31[4] = &protocol witness table for Expression<A>;
  v31[0] = v14;
  v31[1] = v13;
  v31[2] = v15;
  v20 = *(_QWORD *)(a6 + 8);
  v30[3] = a5;
  v30[4] = v20;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v30);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_1, a4, a5);
  v28 = xmmword_247C3E180;
  memset(v29, 0, sizeof(v29));
  v22 = sub_247C3D9B4();
  v25 = type metadata accessor for Expression(0, v22, v23, v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C0AE8C((uint64_t)v33, v17, v19, &v32, 1, a2, (uint64_t)v31, (uint64_t)v30, (uint64_t)v29, &v28, v7, v25, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v29, &qword_254455338);
  sub_247BFC084((uint64_t)v30, &qword_254455440);
  sub_247BFC084((uint64_t)v31, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t TableBuilder.column<A>(_:primaryKey:check:defaultValue:)(_QWORD *a1, char a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  _OWORD v31[5];
  __int128 v32;
  __int128 v33;
  _UNKNOWN **v34;
  __int128 v35;
  __int128 v36;
  _UNKNOWN **v37;
  unsigned __int8 v38;
  _QWORD v39[4];

  v9 = a1[1];
  v10 = a1[2];
  v12 = *a3;
  v11 = a3[1];
  v13 = a3[2];
  v15 = *a4;
  v14 = a4[1];
  v28 = a4[2];
  v39[0] = *a1;
  v39[1] = v9;
  v39[2] = v10;
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = v16(a5, a6);
  v21 = v20;
  if ((a2 & 1) != 0)
    v22 = 0;
  else
    v22 = 2;
  v38 = v22;
  if (!v11)
  {
    v37 = 0;
    v35 = 0u;
    v36 = 0u;
    v23 = v15;
    if (v14)
      goto LABEL_6;
LABEL_8:
    v34 = 0;
    v32 = 0u;
    v33 = 0u;
    goto LABEL_9;
  }
  *((_QWORD *)&v36 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v37 = &protocol witness table for Expression<A>;
  *(_QWORD *)&v35 = v12;
  *((_QWORD *)&v35 + 1) = v11;
  *(_QWORD *)&v36 = v13;
  v23 = v15;
  if (!v14)
    goto LABEL_8;
LABEL_6:
  *((_QWORD *)&v33 + 1) = type metadata accessor for Expression(0, a5, v17, v18);
  v34 = &protocol witness table for Expression<A>;
  *(_QWORD *)&v32 = v23;
  *((_QWORD *)&v32 + 1) = v14;
  *(_QWORD *)&v33 = v28;
LABEL_9:
  v30 = xmmword_247C3E180;
  memset(v31, 0, sizeof(v31));
  sub_247BFE9A0(v12, v11);
  sub_247BFE9A0(v23, v14);
  v26 = type metadata accessor for Expression(0, a5, v24, v25);
  sub_247C0AE8C((uint64_t)v39, v19, v21, &v38, 0, 0, (uint64_t)&v35, (uint64_t)&v32, (uint64_t)v31, &v30, v29, v26, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v31, &qword_254455338);
  sub_247BFC084((uint64_t)&v32, &qword_254455440);
  sub_247BFC084((uint64_t)&v35, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  _OWORD v30[5];
  __int128 v31;
  __int128 v32;
  _UNKNOWN **v33;
  _QWORD v34[5];
  unsigned __int8 v35;
  _QWORD v36[4];

  v9 = a1[1];
  v10 = a1[2];
  v11 = a3[1];
  v27 = *a3;
  v12 = a3[2];
  v13 = *a4;
  v14 = a4[1];
  v15 = a4[2];
  v36[0] = *a1;
  v36[1] = v9;
  v36[2] = v10;
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(a6 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v16(a5, a6);
  v19 = v18;
  if ((a2 & 1) != 0)
    v20 = 0;
  else
    v20 = 2;
  v35 = v20;
  v34[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v34[4] = &protocol witness table for Expression<A>;
  v34[0] = v27;
  v34[1] = v11;
  v34[2] = v12;
  if (v14)
  {
    *((_QWORD *)&v32 + 1) = type metadata accessor for Expression(0, a5, v21, v22);
    v33 = &protocol witness table for Expression<A>;
    *(_QWORD *)&v31 = v13;
    *((_QWORD *)&v31 + 1) = v14;
    *(_QWORD *)&v32 = v15;
  }
  else
  {
    v33 = 0;
    v31 = 0u;
    v32 = 0u;
  }
  v29 = xmmword_247C3E180;
  memset(v30, 0, sizeof(v30));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFE9A0(v13, v14);
  v25 = type metadata accessor for Expression(0, a5, v23, v24);
  sub_247C0AE8C((uint64_t)v36, v17, v19, &v35, 0, 0, (uint64_t)v34, (uint64_t)&v31, (uint64_t)v30, &v29, v28, v25, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v30, &qword_254455338);
  sub_247BFC084((uint64_t)&v31, &qword_254455440);
  sub_247BFC084((uint64_t)v34, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t TableBuilder.column<A>(_:primaryKey:check:)(_QWORD *a1, unsigned __int8 *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  _OWORD v24[5];
  _OWORD v25[2];
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  _UNKNOWN **v29;
  unsigned __int8 v30;
  _QWORD v31[3];

  v6 = v5;
  v9 = a1[1];
  v10 = a1[2];
  v11 = *a2;
  v13 = *a3;
  v12 = a3[1];
  v14 = a3[2];
  v31[0] = *a1;
  v31[1] = v9;
  v31[2] = v10;
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = v15(a4, a5);
  v18 = v17;
  v30 = v11;
  if (v12)
  {
    *((_QWORD *)&v28 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
    v29 = &protocol witness table for Expression<A>;
    *(_QWORD *)&v27 = v13;
    *((_QWORD *)&v27 + 1) = v12;
    *(_QWORD *)&v28 = v14;
  }
  else
  {
    v29 = 0;
    v27 = 0u;
    v28 = 0u;
  }
  v26 = 0;
  memset(v25, 0, sizeof(v25));
  v23 = xmmword_247C3E180;
  memset(v24, 0, sizeof(v24));
  sub_247BFE9A0(v13, v12);
  v21 = type metadata accessor for Expression(0, a4, v19, v20);
  sub_247C0AE8C((uint64_t)v31, v16, v18, &v30, 0, 0, (uint64_t)&v27, (uint64_t)v25, (uint64_t)v24, &v23, v6, v21, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v24, &qword_254455338);
  sub_247BFC084((uint64_t)v25, &qword_254455440);
  sub_247BFC084((uint64_t)&v27, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  _OWORD v24[5];
  _OWORD v25[2];
  uint64_t v26;
  _QWORD v27[5];
  unsigned __int8 v28;
  _QWORD v29[3];

  v6 = v5;
  v9 = a1[1];
  v10 = a1[2];
  v11 = *a2;
  v13 = *a3;
  v12 = a3[1];
  v14 = a3[2];
  v29[0] = *a1;
  v29[1] = v9;
  v29[2] = v10;
  v15 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = v15(a4, a5);
  v18 = v17;
  v28 = v11;
  v27[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v27[4] = &protocol witness table for Expression<A>;
  v27[0] = v13;
  v27[1] = v12;
  v27[2] = v14;
  v26 = 0;
  memset(v25, 0, sizeof(v25));
  v23 = xmmword_247C3E180;
  memset(v24, 0, sizeof(v24));
  v21 = type metadata accessor for Expression(0, a4, v19, v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C0AE8C((uint64_t)v29, v16, v18, &v28, 0, 0, (uint64_t)v27, (uint64_t)v25, (uint64_t)v24, &v23, v6, v21, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v24, &qword_254455338);
  sub_247BFC084((uint64_t)v25, &qword_254455440);
  sub_247BFC084((uint64_t)v27, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t TableBuilder.column<A>(_:unique:check:references:_:)(_QWORD *a1, char a2, uint64_t *a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  __int128 v28;
  _BYTE v29[40];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _UNKNOWN **v34;
  _OWORD v35[2];
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  _UNKNOWN **v39;
  unsigned __int8 v40;
  _QWORD v41[4];

  v10 = a1[1];
  v11 = a1[2];
  v13 = *a3;
  v12 = a3[1];
  v14 = a3[2];
  v15 = a5[1];
  v24 = *a5;
  v16 = a5[2];
  v41[0] = *a1;
  v41[1] = v10;
  v41[2] = v11;
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = v17(a6, a7);
  v19 = v18;
  v40 = 2;
  if (v12)
  {
    *((_QWORD *)&v38 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
    v39 = &protocol witness table for Expression<A>;
    *(_QWORD *)&v37 = v13;
    *((_QWORD *)&v37 + 1) = v12;
    *(_QWORD *)&v38 = v14;
  }
  else
  {
    v39 = 0;
    v37 = 0u;
    v38 = 0u;
  }
  v36 = 0;
  memset(v35, 0, sizeof(v35));
  sub_247BFA88C(a4, (uint64_t)v29);
  v22 = type metadata accessor for Expression(0, a6, v20, v21);
  v33 = v22;
  v34 = &protocol witness table for Expression<A>;
  v30 = v24;
  v31 = v15;
  v32 = v16;
  v28 = xmmword_247C3E180;
  sub_247BFE9A0(v13, v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C0AE8C((uint64_t)v41, v25, v19, &v40, 0, a2 & 1, (uint64_t)&v37, (uint64_t)v35, (uint64_t)v29, &v28, v27, v22, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v35, &qword_254455440);
  sub_247BFC084((uint64_t)v29, &qword_254455338);
  sub_247BFC084((uint64_t)&v37, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v27;
  __int128 v28;
  _BYTE v29[40];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _UNKNOWN **v34;
  _OWORD v35[2];
  uint64_t v36;
  _QWORD v37[5];
  unsigned __int8 v38;
  _QWORD v39[4];

  v10 = a1[1];
  v11 = a1[2];
  v12 = *a3;
  v13 = a3[1];
  v14 = a3[2];
  v15 = a5[1];
  v25 = *a5;
  v16 = a5[2];
  v39[0] = *a1;
  v39[1] = v10;
  v39[2] = v11;
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = v17(a6, a7);
  v20 = v19;
  v38 = 2;
  v37[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v37[4] = &protocol witness table for Expression<A>;
  v37[0] = v12;
  v37[1] = v13;
  v37[2] = v14;
  v36 = 0;
  memset(v35, 0, sizeof(v35));
  sub_247BFA88C(a4, (uint64_t)v29);
  v23 = type metadata accessor for Expression(0, a6, v21, v22);
  v33 = v23;
  v34 = &protocol witness table for Expression<A>;
  v30 = v25;
  v31 = v15;
  v32 = v16;
  v28 = xmmword_247C3E180;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C0AE8C((uint64_t)v39, v18, v20, &v38, 0, a2, (uint64_t)v37, (uint64_t)v35, (uint64_t)v29, &v28, v27, v23, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v35, &qword_254455440);
  sub_247BFC084((uint64_t)v29, &qword_254455338);
  sub_247BFC084((uint64_t)v37, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v30;
  __int128 v31;
  _BYTE v32[40];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _UNKNOWN **v37;
  _OWORD v38[2];
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  _UNKNOWN **v42;
  unsigned __int8 v43;
  _QWORD v44[4];

  v10 = a1[1];
  v11 = a1[2];
  v13 = *a3;
  v12 = a3[1];
  v14 = a3[2];
  v15 = a5[1];
  v28 = *a5;
  v16 = a5[2];
  v44[0] = *a1;
  v44[1] = v10;
  v44[2] = v11;
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = v17(a6, a7);
  v20 = v19;
  v43 = 2;
  if (v12)
  {
    *((_QWORD *)&v41 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
    v42 = &protocol witness table for Expression<A>;
    *(_QWORD *)&v40 = v13;
    *((_QWORD *)&v40 + 1) = v12;
    *(_QWORD *)&v41 = v14;
  }
  else
  {
    v42 = 0;
    v40 = 0u;
    v41 = 0u;
  }
  v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_247BFA88C(a4, (uint64_t)v32);
  v36 = type metadata accessor for Expression(0, a6, v21, v22);
  v37 = &protocol witness table for Expression<A>;
  v33 = v28;
  v34 = v15;
  v35 = v16;
  v31 = xmmword_247C3E180;
  sub_247BFE9A0(v13, v12);
  v23 = sub_247C3D9B4();
  v26 = type metadata accessor for Expression(0, v23, v24, v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C0AE8C((uint64_t)v44, v18, v20, &v43, 1, a2 & 1, (uint64_t)&v40, (uint64_t)v38, (uint64_t)v32, &v31, v30, v26, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v38, &qword_254455440);
  sub_247BFC084((uint64_t)v32, &qword_254455338);
  sub_247BFC084((uint64_t)&v40, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v30;
  __int128 v31;
  _BYTE v32[40];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _UNKNOWN **v37;
  _OWORD v38[2];
  uint64_t v39;
  _QWORD v40[5];
  unsigned __int8 v41;
  _QWORD v42[4];

  v10 = a1[1];
  v11 = a1[2];
  v12 = *a3;
  v13 = a3[1];
  v14 = a3[2];
  v15 = a5[1];
  v28 = *a5;
  v16 = a5[2];
  v42[0] = *a1;
  v42[1] = v10;
  v42[2] = v11;
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = v17(a6, a7);
  v20 = v19;
  v41 = 2;
  v40[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v40[4] = &protocol witness table for Expression<A>;
  v40[0] = v12;
  v40[1] = v13;
  v40[2] = v14;
  v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_247BFA88C(a4, (uint64_t)v32);
  v36 = type metadata accessor for Expression(0, a6, v21, v22);
  v37 = &protocol witness table for Expression<A>;
  v33 = v28;
  v34 = v15;
  v35 = v16;
  v31 = xmmword_247C3E180;
  v23 = sub_247C3D9B4();
  v26 = type metadata accessor for Expression(0, v23, v24, v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C0AE8C((uint64_t)v42, v18, v20, &v41, 1, a2, (uint64_t)v40, (uint64_t)v38, (uint64_t)v32, &v31, v30, v26, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247BFC084((uint64_t)v38, &qword_254455440);
  sub_247BFC084((uint64_t)v32, &qword_254455338);
  sub_247BFC084((uint64_t)v40, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t TableBuilder.column<A>(_:unique:check:defaultValue:collate:)(_QWORD *a1, char a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  __int128 v33;
  _OWORD v34[5];
  __int128 v35;
  __int128 v36;
  _UNKNOWN **v37;
  __int128 v38;
  __int128 v39;
  _UNKNOWN **v40;
  unsigned __int8 v41;
  _QWORD v42[4];

  v9 = a1[1];
  v10 = a1[2];
  v12 = *a3;
  v11 = a3[1];
  v13 = a3[2];
  v14 = a4[1];
  v29 = a4[2];
  v30 = *a4;
  v15 = *a5;
  v16 = a5[1];
  v42[0] = *a1;
  v42[1] = v9;
  v42[2] = v10;
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = v17(a6, a7);
  v27 = v21;
  v28 = v18;
  v41 = 2;
  if (!v11)
  {
    v40 = 0;
    v38 = 0u;
    v39 = 0u;
    if (v14)
      goto LABEL_3;
LABEL_5:
    v37 = 0;
    v35 = 0u;
    v36 = 0u;
    v22 = v30;
    goto LABEL_6;
  }
  *((_QWORD *)&v39 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v40 = &protocol witness table for Expression<A>;
  *(_QWORD *)&v38 = v12;
  *((_QWORD *)&v38 + 1) = v11;
  *(_QWORD *)&v39 = v13;
  if (!v14)
    goto LABEL_5;
LABEL_3:
  *((_QWORD *)&v36 + 1) = type metadata accessor for Expression(0, a6, v19, v20);
  v37 = &protocol witness table for Expression<A>;
  v22 = v30;
  *(_QWORD *)&v35 = v30;
  *((_QWORD *)&v35 + 1) = v14;
  *(_QWORD *)&v36 = v29;
LABEL_6:
  memset(v34, 0, sizeof(v34));
  *(_QWORD *)&v33 = v15;
  *((_QWORD *)&v33 + 1) = v16;
  sub_247BFE9A0(v12, v11);
  sub_247BFE9A0(v22, v14);
  sub_247C0B9AC(v15, v16);
  v25 = type metadata accessor for Expression(0, a6, v23, v24);
  sub_247C0AE8C((uint64_t)v42, v28, v27, &v41, 0, a2 & 1, (uint64_t)&v38, (uint64_t)&v35, (uint64_t)v34, &v33, v32, v25, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247C0B9C0(v15, v16);
  sub_247BFC084((uint64_t)v34, &qword_254455338);
  sub_247BFC084((uint64_t)&v35, &qword_254455440);
  sub_247BFC084((uint64_t)&v38, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  _OWORD v32[5];
  __int128 v33;
  __int128 v34;
  _UNKNOWN **v35;
  _QWORD v36[5];
  unsigned __int8 v37;
  _QWORD v38[4];

  v9 = a1[1];
  v10 = a1[2];
  v11 = *a3;
  v12 = a3[1];
  v13 = a3[2];
  v15 = *a4;
  v14 = a4[1];
  v30 = a4[2];
  v16 = a5[1];
  v27 = *a5;
  v38[0] = *a1;
  v38[1] = v9;
  v38[2] = v10;
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = v17(a6, a7);
  v20 = v19;
  v37 = 2;
  v36[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v36[4] = &protocol witness table for Expression<A>;
  v36[0] = v11;
  v36[1] = v12;
  v36[2] = v13;
  if (v14)
  {
    *((_QWORD *)&v34 + 1) = type metadata accessor for Expression(0, a6, v21, v22);
    v35 = &protocol witness table for Expression<A>;
    *(_QWORD *)&v33 = v15;
    *((_QWORD *)&v33 + 1) = v14;
    *(_QWORD *)&v34 = v30;
  }
  else
  {
    v35 = 0;
    v33 = 0u;
    v34 = 0u;
  }
  memset(v32, 0, sizeof(v32));
  *(_QWORD *)&v31 = v27;
  *((_QWORD *)&v31 + 1) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFE9A0(v15, v14);
  sub_247C0B9AC(v27, v16);
  v25 = type metadata accessor for Expression(0, a6, v23, v24);
  sub_247C0AE8C((uint64_t)v38, v18, v20, &v37, 0, a2 & 1, (uint64_t)v36, (uint64_t)&v33, (uint64_t)v32, &v31, v29, v25, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247C0B9C0(v27, v16);
  sub_247BFC084((uint64_t)v32, &qword_254455338);
  sub_247BFC084((uint64_t)&v33, &qword_254455440);
  sub_247BFC084((uint64_t)v36, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  __int128 v34;
  _OWORD v35[5];
  __int128 v36;
  __int128 v37;
  _UNKNOWN **v38;
  __int128 v39;
  __int128 v40;
  _UNKNOWN **v41;
  unsigned __int8 v42;
  _QWORD v43[4];

  v9 = a1[1];
  v10 = a1[2];
  v12 = *a3;
  v11 = a3[1];
  v13 = a3[2];
  v14 = a4[1];
  v30 = a4[2];
  v31 = *a4;
  v15 = *a5;
  v16 = a5[1];
  v43[0] = *a1;
  v43[1] = v9;
  v43[2] = v10;
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = v17(a6, a7);
  v28 = v21;
  v29 = v18;
  v42 = 2;
  if (!v11)
  {
    v41 = 0;
    v39 = 0u;
    v40 = 0u;
    if (v14)
      goto LABEL_3;
LABEL_5:
    v38 = 0;
    v36 = 0u;
    v37 = 0u;
    v22 = v31;
    goto LABEL_6;
  }
  *((_QWORD *)&v40 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v41 = &protocol witness table for Expression<A>;
  *(_QWORD *)&v39 = v12;
  *((_QWORD *)&v39 + 1) = v11;
  *(_QWORD *)&v40 = v13;
  if (!v14)
    goto LABEL_5;
LABEL_3:
  *((_QWORD *)&v37 + 1) = type metadata accessor for Expression(0, a6, v19, v20);
  v38 = &protocol witness table for Expression<A>;
  v22 = v31;
  *(_QWORD *)&v36 = v31;
  *((_QWORD *)&v36 + 1) = v14;
  *(_QWORD *)&v37 = v30;
LABEL_6:
  memset(v35, 0, sizeof(v35));
  *(_QWORD *)&v34 = v15;
  *((_QWORD *)&v34 + 1) = v16;
  sub_247BFE9A0(v12, v11);
  sub_247BFE9A0(v22, v14);
  sub_247C0B9AC(v15, v16);
  v23 = sub_247C3D9B4();
  v26 = type metadata accessor for Expression(0, v23, v24, v25);
  sub_247C0AE8C((uint64_t)v43, v29, v28, &v42, 1, a2 & 1, (uint64_t)&v39, (uint64_t)&v36, (uint64_t)v35, &v34, v33, v26, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247C0B9C0(v15, v16);
  sub_247BFC084((uint64_t)v35, &qword_254455338);
  sub_247BFC084((uint64_t)&v36, &qword_254455440);
  sub_247BFC084((uint64_t)&v39, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  _OWORD v30[5];
  _QWORD v31[3];
  uint64_t v32;
  _UNKNOWN **v33;
  __int128 v34;
  __int128 v35;
  _UNKNOWN **v36;
  unsigned __int8 v37;
  _QWORD v38[4];

  v9 = a1[1];
  v10 = a1[2];
  v11 = a3[1];
  v28 = *a3;
  v12 = a3[2];
  v13 = a4[1];
  v25 = *a4;
  v14 = a4[2];
  v15 = *a5;
  v16 = a5[1];
  v38[0] = *a1;
  v38[1] = v9;
  v38[2] = v10;
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = v17(a6, a7);
  v20 = v19;
  v37 = 2;
  if (v11)
  {
    *((_QWORD *)&v35 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
    v36 = &protocol witness table for Expression<A>;
    *(_QWORD *)&v34 = v28;
    *((_QWORD *)&v34 + 1) = v11;
    *(_QWORD *)&v35 = v12;
  }
  else
  {
    v36 = 0;
    v34 = 0u;
    v35 = 0u;
  }
  v21 = sub_247C3D9B4();
  v32 = type metadata accessor for Expression(0, v21, v22, v23);
  v33 = &protocol witness table for Expression<A>;
  v31[0] = v25;
  v31[1] = v13;
  v31[2] = v14;
  memset(v30, 0, sizeof(v30));
  *(_QWORD *)&v29 = v15;
  *((_QWORD *)&v29 + 1) = v16;
  sub_247BFE9A0(v28, v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C0B9AC(v15, v16);
  sub_247C0AE8C((uint64_t)v38, v18, v20, &v37, 1, a2 & 1, (uint64_t)&v34, (uint64_t)v31, (uint64_t)v30, &v29, v27, v32, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247C0B9C0(v15, v16);
  sub_247BFC084((uint64_t)v30, &qword_254455338);
  sub_247BFC084((uint64_t)v31, &qword_254455440);
  sub_247BFC084((uint64_t)&v34, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  _OWORD v33[5];
  __int128 v34;
  __int128 v35;
  _UNKNOWN **v36;
  _QWORD v37[5];
  unsigned __int8 v38;
  _QWORD v39[4];

  v9 = a1[1];
  v10 = a1[2];
  v11 = *a3;
  v12 = a3[1];
  v13 = a3[2];
  v15 = *a4;
  v14 = a4[1];
  v31 = a4[2];
  v16 = a5[1];
  v28 = *a5;
  v39[0] = *a1;
  v39[1] = v9;
  v39[2] = v10;
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = v17(a6, a7);
  v20 = v19;
  v38 = 2;
  v37[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v37[4] = &protocol witness table for Expression<A>;
  v37[0] = v11;
  v37[1] = v12;
  v37[2] = v13;
  if (v14)
  {
    *((_QWORD *)&v35 + 1) = type metadata accessor for Expression(0, a6, v21, v22);
    v36 = &protocol witness table for Expression<A>;
    *(_QWORD *)&v34 = v15;
    *((_QWORD *)&v34 + 1) = v14;
    *(_QWORD *)&v35 = v31;
  }
  else
  {
    v36 = 0;
    v34 = 0u;
    v35 = 0u;
  }
  memset(v33, 0, sizeof(v33));
  *(_QWORD *)&v32 = v28;
  *((_QWORD *)&v32 + 1) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFE9A0(v15, v14);
  sub_247C0B9AC(v28, v16);
  v23 = sub_247C3D9B4();
  v26 = type metadata accessor for Expression(0, v23, v24, v25);
  sub_247C0AE8C((uint64_t)v39, v18, v20, &v38, 1, a2 & 1, (uint64_t)v37, (uint64_t)&v34, (uint64_t)v33, &v32, v30, v26, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247C0B9C0(v28, v16);
  sub_247BFC084((uint64_t)v33, &qword_254455338);
  sub_247BFC084((uint64_t)&v34, &qword_254455440);
  sub_247BFC084((uint64_t)v37, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v29;
  _OWORD v30[5];
  _QWORD v31[3];
  uint64_t v32;
  _UNKNOWN **v33;
  _QWORD v34[5];
  unsigned __int8 v35;
  _QWORD v36[4];

  v9 = a1[1];
  v10 = a1[2];
  v11 = *a3;
  v12 = a3[1];
  v13 = a3[2];
  v14 = a4[1];
  v15 = a4[2];
  v16 = a5[1];
  v25 = *a4;
  v26 = *a5;
  v36[0] = *a1;
  v36[1] = v9;
  v36[2] = v10;
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = v17(a6, a7);
  v20 = v19;
  v35 = 2;
  v34[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v34[4] = &protocol witness table for Expression<A>;
  v34[0] = v11;
  v34[1] = v12;
  v34[2] = v13;
  v21 = sub_247C3D9B4();
  v32 = type metadata accessor for Expression(0, v21, v22, v23);
  v33 = &protocol witness table for Expression<A>;
  v31[0] = v25;
  v31[1] = v14;
  v31[2] = v15;
  memset(v30, 0, sizeof(v30));
  *(_QWORD *)&v29 = v26;
  *((_QWORD *)&v29 + 1) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C0B9AC(v26, v16);
  sub_247C0AE8C((uint64_t)v36, v18, v20, &v35, 1, a2, (uint64_t)v34, (uint64_t)v31, (uint64_t)v30, &v29, v27, v32, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247C0B9C0(v26, v16);
  sub_247BFC084((uint64_t)v30, &qword_254455338);
  sub_247BFC084((uint64_t)v31, &qword_254455440);
  sub_247BFC084((uint64_t)v34, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t TableBuilder.column<A>(_:unique:check:defaultValue:collate:)(_QWORD *a1, char a2, uint64_t *a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v28;
  __int128 v29;
  _OWORD v30[5];
  uint64_t v31[5];
  __int128 v32;
  __int128 v33;
  _UNKNOWN **v34;
  unsigned __int8 v35;
  _QWORD v36[4];

  v10 = a1[1];
  v11 = a1[2];
  v13 = *a3;
  v12 = a3[1];
  v14 = a3[2];
  v15 = *a5;
  v16 = a5[1];
  v36[0] = *a1;
  v36[1] = v10;
  v36[2] = v11;
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = v17(a6, a7);
  v19 = v18;
  v35 = 2;
  if (v12)
  {
    *((_QWORD *)&v33 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
    v34 = &protocol witness table for Expression<A>;
    *(_QWORD *)&v32 = v13;
    *((_QWORD *)&v32 + 1) = v12;
    *(_QWORD *)&v33 = v14;
  }
  else
  {
    v34 = 0;
    v32 = 0u;
    v33 = 0u;
  }
  v20 = *(_QWORD *)(a7 + 8);
  v31[3] = a6;
  v31[4] = v20;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v31);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(boxed_opaque_existential_1, a4, a6);
  memset(v30, 0, sizeof(v30));
  *(_QWORD *)&v29 = v15;
  *((_QWORD *)&v29 + 1) = v16;
  sub_247BFE9A0(v13, v12);
  sub_247C0B9AC(v15, v16);
  v24 = type metadata accessor for Expression(0, a6, v22, v23);
  sub_247C0AE8C((uint64_t)v36, v26, v19, &v35, 0, a2 & 1, (uint64_t)&v32, (uint64_t)v31, (uint64_t)v30, &v29, v28, v24, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247C0B9C0(v15, v16);
  sub_247BFC084((uint64_t)v30, &qword_254455338);
  sub_247BFC084((uint64_t)v31, &qword_254455440);
  sub_247BFC084((uint64_t)&v32, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  __int128 v29;
  _OWORD v30[5];
  uint64_t v31[5];
  _QWORD v32[5];
  unsigned __int8 v33;
  _QWORD v34[4];

  v10 = a1[1];
  v11 = a1[2];
  v12 = *a3;
  v13 = a3[1];
  v14 = a3[2];
  v15 = *a5;
  v16 = a5[1];
  v34[0] = *a1;
  v34[1] = v10;
  v34[2] = v11;
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = v17(a6, a7);
  v19 = v18;
  v33 = 2;
  v32[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v32[4] = &protocol witness table for Expression<A>;
  v32[0] = v12;
  v32[1] = v13;
  v32[2] = v14;
  v20 = *(_QWORD *)(a7 + 8);
  v31[3] = a6;
  v31[4] = v20;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v31);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(boxed_opaque_existential_1, a4, a6);
  memset(v30, 0, sizeof(v30));
  *(_QWORD *)&v29 = v15;
  *((_QWORD *)&v29 + 1) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C0B9AC(v15, v16);
  v24 = type metadata accessor for Expression(0, a6, v22, v23);
  sub_247C0AE8C((uint64_t)v34, v26, v19, &v33, 0, a2, (uint64_t)v32, (uint64_t)v31, (uint64_t)v30, &v29, v27, v24, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247C0B9C0(v15, v16);
  sub_247BFC084((uint64_t)v30, &qword_254455338);
  sub_247BFC084((uint64_t)v31, &qword_254455440);
  sub_247BFC084((uint64_t)v32, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v29;
  __int128 v30;
  _OWORD v31[5];
  uint64_t v32[5];
  __int128 v33;
  __int128 v34;
  _UNKNOWN **v35;
  unsigned __int8 v36;
  _QWORD v37[4];

  v10 = a1[1];
  v11 = a1[2];
  v13 = *a3;
  v12 = a3[1];
  v14 = a3[2];
  v15 = *a5;
  v16 = a5[1];
  v37[0] = *a1;
  v37[1] = v10;
  v37[2] = v11;
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = v17(a6, a7);
  v19 = v18;
  v36 = 2;
  if (v12)
  {
    *((_QWORD *)&v34 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
    v35 = &protocol witness table for Expression<A>;
    *(_QWORD *)&v33 = v13;
    *((_QWORD *)&v33 + 1) = v12;
    *(_QWORD *)&v34 = v14;
  }
  else
  {
    v35 = 0;
    v33 = 0u;
    v34 = 0u;
  }
  v20 = *(_QWORD *)(a7 + 8);
  v32[3] = a6;
  v32[4] = v20;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v32);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(boxed_opaque_existential_1, a4, a6);
  memset(v31, 0, sizeof(v31));
  *(_QWORD *)&v30 = v15;
  *((_QWORD *)&v30 + 1) = v16;
  sub_247BFE9A0(v13, v12);
  sub_247C0B9AC(v15, v16);
  v22 = sub_247C3D9B4();
  v25 = type metadata accessor for Expression(0, v22, v23, v24);
  sub_247C0AE8C((uint64_t)v37, v27, v19, &v36, 1, a2 & 1, (uint64_t)&v33, (uint64_t)v32, (uint64_t)v31, &v30, v29, v25, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247C0B9C0(v15, v16);
  sub_247BFC084((uint64_t)v31, &qword_254455338);
  sub_247BFC084((uint64_t)v32, &qword_254455440);
  sub_247BFC084((uint64_t)&v33, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  __int128 v30;
  _OWORD v31[5];
  uint64_t v32[5];
  _QWORD v33[5];
  unsigned __int8 v34;
  _QWORD v35[4];

  v10 = a1[1];
  v11 = a1[2];
  v12 = *a3;
  v13 = a3[1];
  v14 = a3[2];
  v15 = *a5;
  v16 = a5[1];
  v35[0] = *a1;
  v35[1] = v10;
  v35[2] = v11;
  v17 = *(uint64_t (**)(uint64_t, uint64_t))(a7 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = v17(a6, a7);
  v20 = v19;
  v34 = 2;
  v33[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v33[4] = &protocol witness table for Expression<A>;
  v33[0] = v12;
  v33[1] = v13;
  v33[2] = v14;
  v21 = *(_QWORD *)(a7 + 8);
  v32[3] = a6;
  v32[4] = v21;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v32);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(boxed_opaque_existential_1, a4, a6);
  memset(v31, 0, sizeof(v31));
  *(_QWORD *)&v30 = v15;
  *((_QWORD *)&v30 + 1) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C0B9AC(v15, v16);
  v23 = sub_247C3D9B4();
  v26 = type metadata accessor for Expression(0, v23, v24, v25);
  sub_247C0AE8C((uint64_t)v35, v18, v20, &v34, 1, a2, (uint64_t)v33, (uint64_t)v32, (uint64_t)v31, &v30, v28, v26, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  sub_247C0B9C0(v15, v16);
  sub_247BFC084((uint64_t)v31, &qword_254455338);
  sub_247BFC084((uint64_t)v32, &qword_254455440);
  sub_247BFC084((uint64_t)v33, &qword_254455440);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t TableBuilder.primaryKey<A>(_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _UNKNOWN **v11;
  void (*v12)(_QWORD *__return_ptr, _QWORD, _QWORD);
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  unint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  _UNKNOWN **v28;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1D0;
  v9 = type metadata accessor for Expression(0, a2, v7, v8);
  *(_QWORD *)(inited + 32) = v4;
  *(_QWORD *)(inited + 56) = v9;
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 40) = v3;
  *(_QWORD *)(inited + 48) = v5;
  *(_QWORD *)&v25 = 0x205952414D495250;
  *((_QWORD *)&v25 + 1) = 0xEB0000000059454BLL;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247BFECF4(inited, (uint64_t *)&v25);
  v23 = 0x205952414D495250;
  v24 = 0xEB0000000059454BLL;
  swift_bridgeObjectRetain();
  sub_247C3D840();
  v10 = v27;
  v11 = v28;
  __swift_project_boxed_opaque_existential_1(&v25, v27);
  v12 = (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD))v11[1];
  v12(v22, v10, v11);
  swift_bridgeObjectRelease();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  v13 = v23;
  v14 = v24;
  v12(v22, v10, v11);
  v15 = v22[2];
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  swift_bridgeObjectRelease();
  v16 = *(_QWORD **)(v21 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v21 + 16) = v16;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v16 = sub_247BFF2AC(0, v16[2] + 1, 1, v16, qword_254455398, &qword_254455340);
    *(_QWORD *)(v21 + 16) = v16;
  }
  v19 = v16[2];
  v18 = v16[3];
  if (v19 >= v18 >> 1)
  {
    v16 = sub_247BFF2AC((_QWORD *)(v18 > 1), v19 + 1, 1, v16, qword_254455398, &qword_254455340);
    *(_QWORD *)(v21 + 16) = v16;
  }
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  v28 = &protocol witness table for Expression<A>;
  *(_QWORD *)&v25 = v13;
  *((_QWORD *)&v25 + 1) = v14;
  v26 = v15;
  v16[2] = v19 + 1;
  sub_247BFECDC(&v25, (uint64_t)&v16[5 * v19 + 4]);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  return swift_arrayDestroy();
}

uint64_t TableBuilder.primaryKey<A, B>(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _UNKNOWN **v19;
  void (*v20)(_QWORD *__return_ptr, _QWORD, _QWORD);
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  unint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  _UNKNOWN **v36;

  v7 = *a1;
  v6 = a1[1];
  v8 = a1[2];
  v10 = *a2;
  v9 = a2[1];
  v11 = a2[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  v15 = type metadata accessor for Expression(0, a3, v13, v14);
  *(_QWORD *)(inited + 32) = v7;
  *(_QWORD *)(inited + 56) = v15;
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 40) = v6;
  *(_QWORD *)(inited + 48) = v8;
  *(_QWORD *)(inited + 96) = type metadata accessor for Expression(0, a4, v16, v17);
  *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 72) = v10;
  *(_QWORD *)(inited + 80) = v9;
  *(_QWORD *)(inited + 88) = v11;
  *(_QWORD *)&v33 = 0x205952414D495250;
  *((_QWORD *)&v33 + 1) = 0xEB0000000059454BLL;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247BFECF4(inited, (uint64_t *)&v33);
  v31 = 0x205952414D495250;
  v32 = 0xEB0000000059454BLL;
  swift_bridgeObjectRetain();
  sub_247C3D840();
  v18 = v35;
  v19 = v36;
  __swift_project_boxed_opaque_existential_1(&v33, v35);
  v20 = (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD))v19[1];
  v20(v30, v18, v19);
  swift_bridgeObjectRelease();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  v21 = v31;
  v22 = v32;
  v20(v30, v18, v19);
  v23 = v30[2];
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
  swift_bridgeObjectRelease();
  v24 = *(_QWORD **)(v29 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v29 + 16) = v24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v24 = sub_247BFF2AC(0, v24[2] + 1, 1, v24, qword_254455398, &qword_254455340);
    *(_QWORD *)(v29 + 16) = v24;
  }
  v27 = v24[2];
  v26 = v24[3];
  if (v27 >= v26 >> 1)
  {
    v24 = sub_247BFF2AC((_QWORD *)(v26 > 1), v27 + 1, 1, v24, qword_254455398, &qword_254455340);
    *(_QWORD *)(v29 + 16) = v24;
  }
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  v36 = &protocol witness table for Expression<A>;
  *(_QWORD *)&v33 = v21;
  *((_QWORD *)&v33 + 1) = v22;
  v34 = v23;
  v24[2] = v27 + 1;
  sub_247BFECDC(&v33, (uint64_t)&v24[5 * v27 + 4]);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  return swift_arrayDestroy();
}

uint64_t TableBuilder.primaryKey<A, B, C>(_:_:_:)(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _UNKNOWN **v24;
  void (*v25)(_QWORD *__return_ptr, _QWORD, _QWORD);
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  uint64_t v35;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  unint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  _UNKNOWN **v44;

  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  v10 = *a2;
  v11 = a2[1];
  v12 = a2[2];
  v13 = a3[1];
  v35 = *a3;
  v14 = a3[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E140;
  v18 = type metadata accessor for Expression(0, a4, v16, v17);
  *(_QWORD *)(inited + 32) = v8;
  *(_QWORD *)(inited + 56) = v18;
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 40) = v7;
  *(_QWORD *)(inited + 48) = v9;
  *(_QWORD *)(inited + 96) = type metadata accessor for Expression(0, a5, v19, v20);
  *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 72) = v10;
  *(_QWORD *)(inited + 80) = v11;
  *(_QWORD *)(inited + 88) = v12;
  *(_QWORD *)(inited + 136) = type metadata accessor for Expression(0, a6, v21, v22);
  *(_QWORD *)(inited + 144) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 112) = v35;
  *(_QWORD *)(inited + 120) = v13;
  *(_QWORD *)(inited + 128) = v14;
  *(_QWORD *)&v41 = 0x205952414D495250;
  *((_QWORD *)&v41 + 1) = 0xEB0000000059454BLL;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247BFECF4(inited, (uint64_t *)&v41);
  v39 = 0x205952414D495250;
  v40 = 0xEB0000000059454BLL;
  swift_bridgeObjectRetain();
  sub_247C3D840();
  v23 = v43;
  v24 = v44;
  __swift_project_boxed_opaque_existential_1(&v41, v43);
  v25 = (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD))v24[1];
  v25(v38, v23, v24);
  swift_bridgeObjectRelease();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  v26 = v39;
  v27 = v40;
  v25(v38, v23, v24);
  v28 = v38[2];
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
  swift_bridgeObjectRelease();
  v29 = *(_QWORD **)(v37 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v37 + 16) = v29;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v29 = sub_247BFF2AC(0, v29[2] + 1, 1, v29, qword_254455398, &qword_254455340);
    *(_QWORD *)(v37 + 16) = v29;
  }
  v32 = v29[2];
  v31 = v29[3];
  if (v32 >= v31 >> 1)
  {
    v29 = sub_247BFF2AC((_QWORD *)(v31 > 1), v32 + 1, 1, v29, qword_254455398, &qword_254455340);
    *(_QWORD *)(v37 + 16) = v29;
  }
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  v44 = &protocol witness table for Expression<A>;
  *(_QWORD *)&v41 = v26;
  *((_QWORD *)&v41 + 1) = v27;
  v42 = v28;
  v29[2] = v32 + 1;
  sub_247BFECDC(&v41, (uint64_t)&v29[5 * v32 + 4]);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  return swift_arrayDestroy();
}

uint64_t TableBuilder.primaryKey<A, B, C, D>(_:_:_:_:)(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _UNKNOWN **v28;
  void (*v29)(_QWORD *__return_ptr, _QWORD, _QWORD);
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  _QWORD v46[3];
  uint64_t v47;
  unint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  _UNKNOWN **v52;

  v10 = *a1;
  v9 = a1[1];
  v11 = a1[2];
  v12 = *a2;
  v13 = a2[1];
  v14 = a2[2];
  v40 = *a3;
  v15 = a3[2];
  v39 = a3[1];
  v16 = a4[1];
  v42 = a4[2];
  v43 = *a4;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1C0;
  v20 = type metadata accessor for Expression(0, a5, v18, v19);
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 56) = v20;
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 40) = v9;
  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 96) = type metadata accessor for Expression(0, a6, v21, v22);
  *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 72) = v12;
  *(_QWORD *)(inited + 80) = v13;
  *(_QWORD *)(inited + 88) = v14;
  *(_QWORD *)(inited + 136) = type metadata accessor for Expression(0, a7, v23, v24);
  *(_QWORD *)(inited + 144) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 112) = v40;
  *(_QWORD *)(inited + 120) = v39;
  *(_QWORD *)(inited + 128) = v15;
  *(_QWORD *)(inited + 176) = type metadata accessor for Expression(0, a8, v25, v26);
  *(_QWORD *)(inited + 184) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 152) = v43;
  *(_QWORD *)(inited + 160) = v16;
  *(_QWORD *)(inited + 168) = v42;
  *(_QWORD *)&v49 = 0x205952414D495250;
  *((_QWORD *)&v49 + 1) = 0xEB0000000059454BLL;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247BFECF4(inited, (uint64_t *)&v49);
  v47 = 0x205952414D495250;
  v48 = 0xEB0000000059454BLL;
  swift_bridgeObjectRetain();
  sub_247C3D840();
  v27 = v51;
  v28 = v52;
  __swift_project_boxed_opaque_existential_1(&v49, v51);
  v29 = (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD))v28[1];
  v29(v46, v27, v28);
  swift_bridgeObjectRelease();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  v30 = v47;
  v31 = v48;
  v29(v46, v27, v28);
  v32 = v46[2];
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
  swift_bridgeObjectRelease();
  v33 = *(_QWORD **)(v45 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v45 + 16) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v33 = sub_247BFF2AC(0, v33[2] + 1, 1, v33, qword_254455398, &qword_254455340);
    *(_QWORD *)(v45 + 16) = v33;
  }
  v36 = v33[2];
  v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    v33 = sub_247BFF2AC((_QWORD *)(v35 > 1), v36 + 1, 1, v33, qword_254455398, &qword_254455340);
    *(_QWORD *)(v45 + 16) = v33;
  }
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  v52 = &protocol witness table for Expression<A>;
  *(_QWORD *)&v49 = v30;
  *((_QWORD *)&v49 + 1) = v31;
  v50 = v32;
  v33[2] = v36 + 1;
  sub_247BFECDC(&v49, (uint64_t)&v33[5 * v36 + 4]);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  return swift_arrayDestroy();
}

uint64_t TableBuilder.unique(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _UNKNOWN **v5;
  void (*v6)(_QWORD *__return_ptr, _QWORD, _QWORD);
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD v15[3];
  uint64_t v16;
  unint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  _UNKNOWN **v21;

  v2 = v1;
  *(_QWORD *)&v18 = 0x455551494E55;
  *((_QWORD *)&v18 + 1) = 0xE600000000000000;
  sub_247C3D840();
  sub_247BFECF4(a1, (uint64_t *)&v18);
  v16 = 0x455551494E55;
  v17 = 0xE600000000000000;
  swift_bridgeObjectRetain();
  sub_247C3D840();
  v4 = v20;
  v5 = v21;
  __swift_project_boxed_opaque_existential_1(&v18, v20);
  v6 = (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD))v5[1];
  v6(v15, v4, v5);
  swift_bridgeObjectRelease();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  v7 = v16;
  v8 = v17;
  v6(v15, v4, v5);
  v9 = v15[2];
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD **)(v1 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v2 + 16) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_247BFF2AC(0, v10[2] + 1, 1, v10, qword_254455398, &qword_254455340);
    *(_QWORD *)(v2 + 16) = v10;
  }
  v13 = v10[2];
  v12 = v10[3];
  if (v13 >= v12 >> 1)
  {
    v10 = sub_247BFF2AC((_QWORD *)(v12 > 1), v13 + 1, 1, v10, qword_254455398, &qword_254455340);
    *(_QWORD *)(v2 + 16) = v10;
  }
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  v21 = &protocol witness table for Expression<A>;
  *(_QWORD *)&v18 = v7;
  *((_QWORD *)&v18 + 1) = v8;
  v19 = v9;
  v10[2] = v13 + 1;
  return sub_247BFECDC(&v18, (uint64_t)&v10[5 * v13 + 4]);
}

Swift::Void __swiftcall TableBuilder.unique(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _UNKNOWN **v5;
  void (*v6)(_QWORD *__return_ptr, _QWORD, _QWORD);
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  unint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  _UNKNOWN **v20;

  v2 = v1;
  *(_QWORD *)&v17 = 0x455551494E55;
  *((_QWORD *)&v17 + 1) = 0xE600000000000000;
  sub_247C3D840();
  sub_247BFECF4((uint64_t)a1._rawValue, (uint64_t *)&v17);
  v15 = 0x455551494E55;
  v16 = 0xE600000000000000;
  swift_bridgeObjectRetain();
  sub_247C3D840();
  v4 = v19;
  v5 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  v6 = (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD))v5[1];
  v6(v14, v4, v5);
  swift_bridgeObjectRelease();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  v7 = v15;
  v8 = v16;
  v6(v14, v4, v5);
  v9 = v14[2];
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD **)(v1 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v2 + 16) = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_247BFF2AC(0, v10[2] + 1, 1, v10, qword_254455398, &qword_254455340);
    *(_QWORD *)(v2 + 16) = v10;
  }
  v13 = v10[2];
  v12 = v10[3];
  if (v13 >= v12 >> 1)
  {
    v10 = sub_247BFF2AC((_QWORD *)(v12 > 1), v13 + 1, 1, v10, qword_254455398, &qword_254455340);
    *(_QWORD *)(v2 + 16) = v10;
  }
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  v20 = &protocol witness table for Expression<A>;
  *(_QWORD *)&v17 = v7;
  *((_QWORD *)&v17 + 1) = v8;
  v18 = v9;
  v10[2] = v13 + 1;
  sub_247BFECDC(&v17, (uint64_t)&v10[5 * v13 + 4]);
}

uint64_t TableBuilder.check(_:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4[3];

  v1 = a1[1];
  v2 = a1[2];
  v4[0] = *a1;
  v4[1] = v1;
  v4[2] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  TableBuilder.check(_:)(v4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  _UNKNOWN **v16;

  v2 = v1;
  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v16 = &protocol witness table for Expression<A>;
  *(_QWORD *)&v13 = v4;
  *((_QWORD *)&v13 + 1) = v3;
  v14 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  v6 = __swift_project_boxed_opaque_existential_1(&v13, v15);
  swift_bridgeObjectRetain();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  v7 = v6[2];
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13);
  v8 = *(_QWORD **)(v2 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v2 + 16) = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v8 = sub_247BFF2AC(0, v8[2] + 1, 1, v8, qword_254455398, &qword_254455340);
    *(_QWORD *)(v2 + 16) = v8;
  }
  v11 = v8[2];
  v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    v8 = sub_247BFF2AC((_QWORD *)(v10 > 1), v11 + 1, 1, v8, qword_254455398, &qword_254455340);
    *(_QWORD *)(v2 + 16) = v8;
  }
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  v16 = &protocol witness table for Expression<A>;
  *(_QWORD *)&v13 = 0x204B43454843;
  *((_QWORD *)&v13 + 1) = 0xE600000000000000;
  v14 = v7;
  v8[2] = v11 + 1;
  return sub_247BFECDC(&v13, (uint64_t)&v8[5 * v11 + 4]);
}

SwiftSQLite::TableBuilder::Dependency_optional __swiftcall TableBuilder.Dependency.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SwiftSQLite::TableBuilder::Dependency_optional result;
  char v5;

  v2 = v1;
  v3 = sub_247C3DA98();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t TableBuilder.Dependency.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_247C09B64 + 4 * byte_247C3E1F0[*v0]))(0x4F49544341204F4ELL, 0xE90000000000004ELL);
}

uint64_t sub_247C09B64()
{
  return 0x5443495254534552;
}

uint64_t sub_247C09B7C()
{
  return 0x4C4C554E20544553;
}

uint64_t sub_247C09B94()
{
  return 0x4146454420544553;
}

uint64_t sub_247C09BB4()
{
  return 0x45444143534143;
}

void sub_247C09BCC(char *a1)
{
  sub_247C32B24(*a1);
}

void sub_247C09BD8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_247C3DB88();
  __asm { BR              X9 }
}

uint64_t sub_247C09C28()
{
  sub_247C3D81C();
  swift_bridgeObjectRelease();
  return sub_247C3DBA0();
}

void sub_247C09CB8()
{
  __asm { BR              X10 }
}

uint64_t sub_247C09CF8()
{
  sub_247C3D81C();
  return swift_bridgeObjectRelease();
}

void sub_247C09D74()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_247C3DB88();
  __asm { BR              X9 }
}

uint64_t sub_247C09DC0()
{
  sub_247C3D81C();
  swift_bridgeObjectRelease();
  return sub_247C3DBA0();
}

SwiftSQLite::TableBuilder::Dependency_optional sub_247C09E50(Swift::String *a1)
{
  return TableBuilder.Dependency.init(rawValue:)(*a1);
}

uint64_t sub_247C09E5C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_247C09E90 + 4 * byte_247C3E204[*v0]))();
}

void sub_247C09E90(_QWORD *a1@<X8>)
{
  *a1 = 0x5443495254534552;
  a1[1] = 0xE800000000000000;
}

void sub_247C09EAC(_QWORD *a1@<X8>)
{
  *a1 = 0x4C4C554E20544553;
  a1[1] = 0xE800000000000000;
}

void sub_247C09EC8(_QWORD *a1@<X8>)
{
  *a1 = 0x4146454420544553;
  a1[1] = 0xEB00000000544C55;
}

void sub_247C09EEC(_QWORD *a1@<X8>)
{
  *a1 = 0x45444143534143;
  a1[1] = 0xE700000000000000;
}

uint64_t TableBuilder.foreignKey<A>(_:references:_:update:delete:)(_QWORD *a1, uint64_t a2, uint64_t *a3, unsigned __int8 *a4, unsigned __int8 *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  unsigned __int8 v15;
  uint64_t v16;
  unsigned __int8 v18;
  unsigned __int8 v19;
  _QWORD v20[3];
  _QWORD v21[3];

  v7 = v6;
  v9 = a1[1];
  v10 = a1[2];
  v11 = *a3;
  v12 = a3[1];
  v13 = a3[2];
  v14 = *a4;
  v15 = *a5;
  v21[0] = *a1;
  v21[1] = v9;
  v21[2] = v10;
  v20[0] = v11;
  v20[1] = v12;
  v20[2] = v13;
  v19 = v14;
  v18 = v15;
  v16 = type metadata accessor for Expression(0, a6, (uint64_t)a3, (uint64_t)a4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C0B058((uint64_t)v21, a2, (uint64_t)v20, &v19, &v18, v7, v16, v16, (uint64_t)&protocol witness table for Expression<A>, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v25;
  unsigned __int8 v26;
  _QWORD v27[3];
  _QWORD v28[3];

  v7 = v6;
  v10 = a1[1];
  v11 = a1[2];
  v12 = *a3;
  v13 = a3[1];
  v14 = a3[2];
  v15 = *a4;
  v16 = *a5;
  v28[0] = *a1;
  v28[1] = v10;
  v28[2] = v11;
  v27[0] = v12;
  v27[1] = v13;
  v27[2] = v14;
  v26 = v15;
  v25 = v16;
  v17 = sub_247C3D9B4();
  v20 = type metadata accessor for Expression(0, v17, v18, v19);
  v23 = type metadata accessor for Expression(0, a6, v21, v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C0B058((uint64_t)v28, a2, (uint64_t)v27, &v26, &v25, v7, v20, v23, (uint64_t)&protocol witness table for Expression<A>, (uint64_t)&protocol witness table for Expression<A>);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t TableBuilder.foreignKey<A, B>(_:references:_:update:delete:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t *a4, uint64_t *a5, unsigned __int8 *a6, unsigned __int8 *a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  unsigned __int8 v39;
  uint64_t v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  _BYTE v43[40];
  _QWORD v44[3];
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[40];
  uint64_t v48[5];
  uint64_t v49[3];
  uint64_t v50;
  uint64_t v51;

  v11 = *a1;
  v10 = a1[1];
  v12 = a1[2];
  v13 = a2[1];
  v31 = *a2;
  v14 = a2[2];
  v32 = a4[1];
  v34 = *a4;
  v35 = a5[1];
  v36 = a5[2];
  v37 = *a5;
  v38 = *a7;
  v39 = *a6;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v18 = type metadata accessor for Expression(0, a8, v16, v17);
  *(_QWORD *)(inited + 56) = v18;
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 32) = v11;
  *(_QWORD *)(inited + 40) = v10;
  *(_QWORD *)(inited + 48) = v12;
  v21 = type metadata accessor for Expression(0, a9, v19, v20);
  *(_QWORD *)(inited + 96) = v21;
  *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 72) = v31;
  *(_QWORD *)(inited + 80) = v13;
  *(_QWORD *)(inited + 88) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFECF4(inited, v49);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  sub_247BFA88C(a3, (uint64_t)v47);
  v22 = swift_initStackObject();
  *(_OWORD *)(v22 + 16) = xmmword_247C3E1B0;
  swift_bridgeObjectRetain();
  v23 = swift_bridgeObjectRetain();
  *(_QWORD *)(v22 + 56) = v18;
  *(_QWORD *)(v22 + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v22 + 32) = v34;
  *(_QWORD *)(v22 + 40) = v32;
  *(_QWORD *)(v22 + 48) = v23;
  *(_QWORD *)(v22 + 96) = v21;
  *(_QWORD *)(v22 + 104) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v22 + 72) = v37;
  *(_QWORD *)(v22 + 80) = v35;
  *(_QWORD *)(v22 + 88) = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFECF4(v22, v48);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_247BFA88C((uint64_t)v47, (uint64_t)v43);
  sub_247BFA88C((uint64_t)v48, (uint64_t)v44);
  v42 = v39;
  v41 = v38;
  v24 = v50;
  v25 = v51;
  v26 = __swift_project_boxed_opaque_existential_1(v49, v50);
  v27 = v45;
  v28 = v46;
  v29 = __swift_project_boxed_opaque_existential_1(v44, v45);
  sub_247C0B058((uint64_t)v26, (uint64_t)v43, (uint64_t)v29, &v42, &v41, v40, v24, v27, v25, v28);
  sub_247BFC084((uint64_t)v47, &qword_2576ED378);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
}

uint64_t TableBuilder.foreignKey<A, B, C>(_:references:_:update:delete:)(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t *a5, uint64_t *a6, uint64_t *a7, unsigned __int8 *a8, unsigned __int8 *a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t inited;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned __int8 v49;
  unsigned __int8 v50;
  uint64_t v51;
  unsigned __int8 v52;
  unsigned __int8 v53;
  _BYTE v54[40];
  _QWORD v55[3];
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[40];
  uint64_t v59[5];
  uint64_t v60[3];
  uint64_t v61;
  uint64_t v62;

  v12 = *a1;
  v13 = a1[1];
  v14 = a1[2];
  v15 = a2[1];
  v16 = a2[2];
  v36 = *a2;
  v37 = a3[1];
  v38 = a3[2];
  v39 = *a3;
  v17 = a5[1];
  v18 = a5[2];
  v43 = *a5;
  v44 = a6[2];
  v45 = *a6;
  v46 = a7[1];
  v47 = a7[2];
  v48 = *a7;
  v49 = *a9;
  v50 = *a8;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E140;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41 = type metadata accessor for Expression(0, a10, v20, v21);
  *(_QWORD *)(inited + 56) = v41;
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(inited + 40) = v13;
  *(_QWORD *)(inited + 48) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v40 = type metadata accessor for Expression(0, a11, v22, v23);
  *(_QWORD *)(inited + 96) = v40;
  *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 72) = v36;
  *(_QWORD *)(inited + 80) = v15;
  *(_QWORD *)(inited + 88) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = type metadata accessor for Expression(0, a12, v24, v25);
  *(_QWORD *)(inited + 136) = v26;
  *(_QWORD *)(inited + 144) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 112) = v39;
  *(_QWORD *)(inited + 120) = v37;
  *(_QWORD *)(inited + 128) = v38;
  sub_247BFECF4(inited, v60);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  sub_247BFA88C(a4, (uint64_t)v58);
  v27 = swift_initStackObject();
  *(_OWORD *)(v27 + 16) = xmmword_247C3E140;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v28 = swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v27 + 56) = v41;
  *(_QWORD *)(v27 + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v27 + 32) = v43;
  *(_QWORD *)(v27 + 40) = v17;
  *(_QWORD *)(v27 + 48) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v27 + 72) = v45;
  *(_QWORD *)(v27 + 80) = v28;
  *(_QWORD *)(v27 + 96) = v40;
  *(_QWORD *)(v27 + 104) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v27 + 88) = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v27 + 136) = v26;
  *(_QWORD *)(v27 + 144) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v27 + 112) = v48;
  *(_QWORD *)(v27 + 120) = v46;
  *(_QWORD *)(v27 + 128) = v47;
  sub_247BFECF4(v27, v59);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_247BFA88C((uint64_t)v58, (uint64_t)v54);
  sub_247BFA88C((uint64_t)v59, (uint64_t)v55);
  v53 = v50;
  v52 = v49;
  v29 = v61;
  v30 = v62;
  v31 = __swift_project_boxed_opaque_existential_1(v60, v61);
  v32 = v56;
  v33 = v57;
  v34 = __swift_project_boxed_opaque_existential_1(v55, v56);
  sub_247C0B058((uint64_t)v31, (uint64_t)v54, (uint64_t)v34, &v53, &v52, v51, v29, v32, v30, v33);
  sub_247BFC084((uint64_t)v58, &qword_2576ED378);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
}

uint64_t sub_247C0A79C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[5];

  sub_247BFA88C(a1, (uint64_t)v11);
  sub_247BFA88C(a2, (uint64_t)v14);
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E140;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(inited + 56) = v6;
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 32) = 0x434E455245464552;
  v7 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 40) = 0xEA00000000005345;
  *(_QWORD *)(inited + 48) = v7;
  v8 = v12;
  v9 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  sub_247C325BC(0, v8, v9, (uint64_t *)(inited + 72));
  *(_QWORD *)(inited + 136) = v6;
  *(_QWORD *)(inited + 144) = &protocol witness table for Expression<A>;
  sub_247BFB318(v14, 0, 0xE000000000000000, (_QWORD *)(inited + 112));
  sub_247BFECF4(inited, a3);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  return sub_247BFC084((uint64_t)v11, &qword_2576ED378);
}

uint64_t TableBuilder.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TableBuilder.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

BOOL static PrimaryKey.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PrimaryKey.hash(into:)()
{
  return sub_247C3DB94();
}

uint64_t PrimaryKey.hashValue.getter()
{
  sub_247C3DB88();
  sub_247C3DB94();
  return sub_247C3DBA0();
}

BOOL sub_247C0A9C4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_247C0A9DC()
{
  sub_247C3DB88();
  sub_247C3DB94();
  return sub_247C3DBA0();
}

uint64_t sub_247C0AA20()
{
  return sub_247C3DB94();
}

uint64_t sub_247C0AA48()
{
  sub_247C3DB88();
  sub_247C3DB94();
  return sub_247C3DBA0();
}

uint64_t Module.init(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t result;

  sub_247BFD20C(0, 0xE000000000000000, a1, a2, 34, 0xE100000000000000);
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  result = swift_bridgeObjectRelease();
  *a4 = 0;
  a4[1] = 0xE000000000000000;
  a4[2] = a3;
  return result;
}

uint64_t Module.expression.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6[5];

  v3 = *v1;
  v4 = v1[1];
  sub_247BFECF4(v1[2], v6);
  sub_247BFB318(v6, v3, v4, a1);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t sub_247C0ABC8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6[5];

  v3 = *v1;
  v4 = v1[1];
  sub_247BFECF4(v1[2], v6);
  sub_247BFB318(v6, v3, v4, a1);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

char *sub_247C0AC28(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED398);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[80 * v8])
      memmove(v12, v13, 80 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

_QWORD *sub_247C0AD3C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_247BFF2AC(a1, a2, a3, a4, &qword_2544552E0, &qword_2544552A0);
}

_QWORD *sub_247C0AD50(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455208);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[11 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 88 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455298);
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_247C0AE8C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, char a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 *a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  unsigned __int8 v35;
  uint64_t v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[6];

  v32 = a7;
  v33 = a8;
  v39[3] = a12;
  v39[4] = a13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v39);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a12 - 8) + 16))(boxed_opaque_existential_1, a1, a12);
  v35 = *a4;
  v34 = *a10;
  sub_247C022C4((uint64_t)v39, a2, a3, &v35, a5, a6, v32, v33, v36, a9, (uint64_t *)&v34);
  v20 = (uint64_t *)(a11 + 16);
  v21 = *(_QWORD **)(a11 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a11 + 16) = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v21 = sub_247BFF2AC(0, v21[2] + 1, 1, v21, qword_254455398, &qword_254455340);
    *v20 = (uint64_t)v21;
  }
  v24 = v21[2];
  v23 = v21[3];
  if (v24 >= v23 >> 1)
    *v20 = (uint64_t)sub_247BFF2AC((_QWORD *)(v23 > 1), v24 + 1, 1, v21, qword_254455398, &qword_254455340);
  v25 = v37;
  v26 = v38;
  v27 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v37);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v32 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v30 + 16))(v29);
  sub_247BFF3F8(v24, (uint64_t)v29, v20, v25, v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_247C0B058(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, unsigned __int8 *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  _QWORD *v23;
  uint64_t i;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  _QWORD *v35;
  _QWORD *v36;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50[2];
  _QWORD *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE v56[232];
  _BYTE v57[40];
  _BYTE v58[40];
  uint64_t v59[5];
  uint64_t v60[6];

  v60[3] = a7;
  v60[4] = a9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v60);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 16))(boxed_opaque_existential_1, a1, a7);
  v59[3] = a8;
  v59[4] = a10;
  v19 = __swift_allocate_boxed_opaque_existential_1(v59);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 16))(v19, a3, a8);
  sub_247BFA88C(a2, (uint64_t)v57);
  sub_247BFA88C((uint64_t)v59, (uint64_t)v58);
  v20 = *a4;
  v21 = *a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455420);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1C0;
  *(_QWORD *)(inited + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  sub_247BFB318(v60, 0x204E474945524F46, 0xEC0000002059454BLL, (_QWORD *)(inited + 32));
  sub_247BFA88C((uint64_t)v57, (uint64_t)&v52);
  sub_247BFA88C((uint64_t)v58, (uint64_t)v56);
  sub_247C0A79C((uint64_t)&v52, (uint64_t)v56, (uint64_t *)(inited + 72));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
  v23 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if ((_DWORD)v20 != 5)
  {
    v52 = 0x5441445055204E4FLL;
    v53 = 0xEA00000000002045;
    __asm { BR              X9 }
  }
  *(_QWORD *)(inited + 144) = 0;
  *(_OWORD *)(inited + 112) = 0u;
  *(_OWORD *)(inited + 128) = 0u;
  if ((_DWORD)v21 != 5)
  {
    v52 = 0x54454C4544204E4FLL;
    v53 = 0xEA00000000002045;
    __asm { BR              X9 }
  }
  *(_QWORD *)(inited + 184) = 0;
  *(_OWORD *)(inited + 152) = 0u;
  *(_OWORD *)(inited + 168) = 0u;
  v51 = v23;
  for (i = 32; i != 192; i += 40)
  {
    sub_247BFD054(inited + i, (uint64_t)&v52, &qword_254455440);
    sub_247C0B964((uint64_t)&v52, (uint64_t)&v47);
    if (v48)
    {
      sub_247BFECDC(&v47, (uint64_t)v50);
      sub_247BFECDC(v50, (uint64_t)&v47);
      v25 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v25 = sub_247BFF2AC(0, v25[2] + 1, 1, v25, qword_254455398, &qword_254455340);
        v51 = v25;
      }
      v27 = v25[2];
      v26 = v25[3];
      if (v27 >= v26 >> 1)
        v51 = sub_247BFF2AC((_QWORD *)(v26 > 1), v27 + 1, 1, v25, qword_254455398, &qword_254455340);
      v28 = v48;
      v29 = v49;
      v30 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v47, v48);
      MEMORY[0x24BDAC7A8](v30);
      v32 = (char *)&v47 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v33 + 16))(v32);
      sub_247BFF3F8(v27, (uint64_t)v32, (uint64_t *)&v51, v28, v29);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
    }
    else
    {
      sub_247BFC084((uint64_t)&v47, &qword_254455440);
    }
  }
  swift_bridgeObjectRelease();
  sub_247BFECF4((uint64_t)v51, &v52);
  swift_bridgeObjectRelease();
  v36 = *(_QWORD **)(a6 + 16);
  v34 = (uint64_t *)(a6 + 16);
  v35 = v36;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v34 = (uint64_t)v36;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v35 = sub_247BFF2AC(0, v35[2] + 1, 1, v35, qword_254455398, &qword_254455340);
    *v34 = (uint64_t)v35;
  }
  v39 = v35[2];
  v38 = v35[3];
  if (v39 >= v38 >> 1)
    *v34 = (uint64_t)sub_247BFF2AC((_QWORD *)(v38 > 1), v39 + 1, 1, v35, qword_254455398, &qword_254455340);
  v40 = v54;
  v41 = v55;
  v42 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v52, v54);
  MEMORY[0x24BDAC7A8](v42);
  v44 = (char *)&v47 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v45 + 16))(v44);
  sub_247BFF3F8(v39, (uint64_t)v44, v34, v40, v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
  sub_247BFC084((uint64_t)v57, &qword_2576ED378);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
}

uint64_t sub_247C0B66C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t inited;
  uint64_t v7;
  _QWORD *v8;
  __int128 v9;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t i;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t countAndFlagsBits;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27[2];
  _QWORD *v28;
  uint64_t v29[25];

  __swift_instantiateConcreteTypeFromMangledName(&qword_254455420);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E140;
  v29[0] = 0x20504F5244;
  v29[1] = 0xE500000000000000;
  sub_247C3D840();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 32) = 0x20504F5244;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 56) = v7;
  if ((a4 & 1) != 0)
  {
    v9 = xmmword_247C3E1E0;
    v10 = MEMORY[0x24BEE4AF8];
    v11 = &protocol witness table for Expression<A>;
  }
  else
  {
    v7 = 0;
    v11 = 0;
    v10 = 0;
    v9 = 0uLL;
  }
  *(_QWORD *)(inited + 96) = v7;
  *(_QWORD *)(inited + 104) = v11;
  *(_OWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 88) = v10;
  sub_247BFA88C(a3, inited + 112);
  v28 = v8;
  for (i = 32; i != 152; i += 40)
  {
    sub_247BFD054(inited + i, (uint64_t)v29, &qword_254455440);
    sub_247C0B964((uint64_t)v29, (uint64_t)&v24);
    if (v25)
    {
      sub_247BFECDC(&v24, (uint64_t)v27);
      sub_247BFECDC(v27, (uint64_t)&v24);
      v13 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v13 = sub_247BFF2AC(0, v13[2] + 1, 1, v13, qword_254455398, &qword_254455340);
        v28 = v13;
      }
      v15 = v13[2];
      v14 = v13[3];
      if (v15 >= v14 >> 1)
        v28 = sub_247BFF2AC((_QWORD *)(v14 > 1), v15 + 1, 1, v13, qword_254455398, &qword_254455340);
      v16 = v25;
      v17 = v26;
      v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v24, v25);
      MEMORY[0x24BDAC7A8](v18);
      v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v21 + 16))(v20);
      sub_247BFF3F8(v15, (uint64_t)v20, (uint64_t *)&v28, v16, v17);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
    }
    else
    {
      sub_247BFC084((uint64_t)&v24, &qword_254455440);
    }
  }
  swift_bridgeObjectRelease();
  sub_247BFECF4((uint64_t)v28, v29);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v29, v29[3]);
  countAndFlagsBits = Expressible.asSQL()()._countAndFlagsBits;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return countAndFlagsBits;
}

uint64_t type metadata accessor for TableBuilder()
{
  return objc_opt_self();
}

uint64_t sub_247C0B964(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455440);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_247C0B9AC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_247C0B9C0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 3)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_247C0B9D8()
{
  unint64_t result;

  result = qword_2576ED380;
  if (!qword_2576ED380)
  {
    result = MEMORY[0x24958EDF4](&protocol conformance descriptor for TableBuilder.Dependency, &type metadata for TableBuilder.Dependency);
    atomic_store(result, (unint64_t *)&qword_2576ED380);
  }
  return result;
}

unint64_t sub_247C0BA20()
{
  unint64_t result;

  result = qword_2576ED388;
  if (!qword_2576ED388)
  {
    result = MEMORY[0x24958EDF4](&protocol conformance descriptor for PrimaryKey, &type metadata for PrimaryKey);
    atomic_store(result, (unint64_t *)&qword_2576ED388);
  }
  return result;
}

uint64_t method lookup function for TableBuilder()
{
  return swift_lookUpClassMethod();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TableBuilder.Dependency(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TableBuilder.Dependency(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_247C0BB58 + 4 * byte_247C3E218[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_247C0BB8C + 4 * byte_247C3E213[v4]))();
}

uint64_t sub_247C0BB8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_247C0BB94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x247C0BB9CLL);
  return result;
}

uint64_t sub_247C0BBA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x247C0BBB0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_247C0BBB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_247C0BBBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_247C0BBC8(unsigned __int8 *a1)
{
  return *a1;
}

ValueMetadata *type metadata accessor for TableBuilder.Dependency()
{
  return &type metadata for TableBuilder.Dependency;
}

uint64_t getEnumTagSinglePayload for PrimaryKey(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PrimaryKey(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_247C0BCBC + 4 * byte_247C3E222[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_247C0BCF0 + 4 * byte_247C3E21D[v4]))();
}

uint64_t sub_247C0BCF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_247C0BCF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x247C0BD00);
  return result;
}

uint64_t sub_247C0BD0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x247C0BD14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_247C0BD18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_247C0BD20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_247C0BD2C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PrimaryKey()
{
  return &type metadata for PrimaryKey;
}

_QWORD *assignWithCopy for Module(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Module(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Module()
{
  return &type metadata for Module;
}

void type metadata accessor for ComparisonResult()
{
  unint64_t ForeignTypeMetadata;
  uint64_t v1;

  if (!qword_2576ED390)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1)
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_2576ED390);
  }
}

unint64_t sub_247C0BE54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254455458;
  if (!qword_254455458)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254455450);
    result = MEMORY[0x24958EDF4](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_254455458);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24958EDE8](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_247C0BEE4(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  void (*v22)(char *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v27 = a5;
  v28 = a8;
  v33 = a1;
  v34 = a2;
  v26 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v35 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v31 = (char *)&v24 - v13;
  v36 = a4;
  MEMORY[0x24BDAC7A8](v12);
  v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - v16;
  v18 = sub_247C3D93C();
  if (!v18)
    return sub_247C3D8DC();
  v19 = v18;
  v25 = v15;
  v39 = sub_247C3D768();
  v32 = sub_247C3DA50();
  sub_247C3DA2C();
  v36 = v17;
  result = sub_247C3D930();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v31;
    while (1)
    {
      v22 = (void (*)(char *, _QWORD))sub_247C3D954();
      (*(void (**)(char *))(v11 + 16))(v21);
      v22(v38, 0);
      v23 = v37;
      v33(v21, v35);
      if (v23)
        break;
      v37 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
      sub_247C3DA38();
      sub_247C3D948();
      if (!--v19)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
        return v39;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v35, v27);
  }
  return result;
}

uint64_t sub_247C0C1C0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_247C0C1EC
                                                            + 4 * asc_247C3E3E8[a1]))(7561825, 0xE300000000000000);
}

uint64_t sub_247C0C1EC()
{
  return 0x646E756F72;
}

uint64_t sub_247C0C200()
{
  return 0x6D6F646E6172;
}

uint64_t sub_247C0C214()
{
  return 0x6C626D6F646E6172;
}

uint64_t sub_247C0C230()
{
  return 0x626F6C626F72657ALL;
}

uint64_t sub_247C0C248()
{
  return 0x6874676E656CLL;
}

uint64_t sub_247C0C25C()
{
  return 0x7265776F6CLL;
}

uint64_t sub_247C0C270()
{
  return 0x7265707075;
}

uint64_t sub_247C0C284()
{
  return 0x6D6972746CLL;
}

uint64_t sub_247C0C298()
{
  return 0x6D69727472;
}

uint64_t sub_247C0C2B0()
{
  return 1835627124;
}

uint64_t sub_247C0C2C0()
{
  return 0x6563616C706572;
}

uint64_t sub_247C0C2D8()
{
  return 0x727473627573;
}

uint64_t sub_247C0C2EC()
{
  return 1162561868;
}

uint64_t sub_247C0C2FC()
{
  return 20041;
}

uint64_t sub_247C0C308()
{
  return 1112493127;
}

uint64_t sub_247C0C318()
{
  return 0x484354414DLL;
}

uint64_t sub_247C0C32C()
{
  return 0x505845474552;
}

uint64_t sub_247C0C340()
{
  return 0x4554414C4C4F43;
}

uint64_t sub_247C0C358()
{
  return 0x6C6C756E6669;
}

uint64_t sub_247C0C36C@<X0>(_QWORD *a1@<X0>, unsigned __int8 a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_247C0C1C0(a2);
  sub_247BFAA64(a1, v5, v6, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C0C3C4@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9[5];

  v5 = sub_247C0C1C0(a2);
  v7 = v6;
  sub_247BFECF4(a1, v9);
  sub_247BFAA64(v9, v5, v7, a3);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t ExpressionType<>.absoluteValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9[5];

  v6 = *(_QWORD *)(a2 + 8);
  v9[3] = a1;
  v9[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  swift_getAssociatedTypeWitness();
  sub_247C0C36C(v9, 0, a3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

{
  uint64_t v3;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9[5];

  v6 = *(_QWORD *)(a2 + 8);
  v9[3] = a1;
  v9[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  swift_getAssociatedTypeWitness();
  sub_247C0C36C(v9, 0, a3);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t ExpressionType<>.round(_:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t *v11;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v15[5];

  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  if ((a2 & 1) != 0)
  {
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1D0;
    *(_QWORD *)(inited + 56) = a3;
    *(_QWORD *)(inited + 64) = *(_QWORD *)(a4 + 8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, v5, a3);
    sub_247BFECF4(inited, v15);
  }
  else
  {
    v10 = swift_initStackObject();
    *(_OWORD *)(v10 + 16) = xmmword_247C3E1B0;
    *(_QWORD *)(v10 + 56) = a3;
    *(_QWORD *)(v10 + 64) = *(_QWORD *)(a4 + 8);
    v11 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v10 + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(v11, v5, a3);
    *(_QWORD *)(v10 + 96) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v10 + 104) = &protocol witness table for Int;
    *(_QWORD *)(v10 + 72) = a1;
    sub_247BFECF4(v10, v15);
  }
  sub_247BFB3FC(v15, 0x646E756F72, 0xE500000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  return swift_arrayDestroy();
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t *v10;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v14[5];

  v5 = v4;
  if ((a2 & 1) != 0)
  {
    v12 = *(_QWORD *)(a4 + 8);
    v14[3] = a3;
    v14[4] = v12;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v14);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, v5, a3);
    sub_247BFB3FC(v14, 0x646E756F72, 0xE500000000000000);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    *(_QWORD *)(inited + 56) = a3;
    *(_QWORD *)(inited + 64) = *(_QWORD *)(a4 + 8);
    v10 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(v10, v5, a3);
    *(_QWORD *)(inited + 96) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 104) = &protocol witness table for Int;
    *(_QWORD *)(inited + 72) = a1;
    sub_247BFECF4(inited, v14);
    sub_247BFB3FC(v14, 0x646E756F72, 0xE500000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    return swift_arrayDestroy();
  }
}

uint64_t static ExpressionType<>.random()@<X0>(_QWORD *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  return sub_247C0C3C4(MEMORY[0x24BEE4AF8], 2u, a1);
}

uint64_t static ExpressionType<>.random(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C0C914(a1, a2, a3, 0x6C626D6F646E6172, 0xEA0000000000626FLL);
}

uint64_t static ExpressionType<>.allZeros(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C0C914(a1, a2, a3, 0x626F6C626F72657ALL, 0xE800000000000000);
}

uint64_t sub_247C0C914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8[5];

  sub_247BFECF4(MEMORY[0x24BEE4AF8], v8);
  sub_247BFB3FC(v8, a4, a5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

uint64_t ExpressionType<>.length.getter(uint64_t a1, uint64_t a2)
{
  return sub_247C0D598(a1, a2, 0x6874676E656CLL, 0xE600000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_247BFB3FC);
}

{
  return sub_247C0D598(a1, a2, 0x6874676E656CLL, 0xE600000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_247BFB3FC);
}

{
  return sub_247C0D598(a1, a2, 0x6874676E656CLL, 0xE600000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_247BFB3FC);
}

{
  return sub_247C0D598(a1, a2, 0x6874676E656CLL, 0xE600000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_247BFB3FC);
}

uint64_t ExpressionType<>.lowercaseString.getter(uint64_t a1, uint64_t a2)
{
  return sub_247C0D598(a1, a2, 0x7265776F6CLL, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_247BFB3FC);
}

{
  return sub_247C0D598(a1, a2, 0x7265776F6CLL, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_247BFB3FC);
}

uint64_t ExpressionType<>.uppercaseString.getter(uint64_t a1, uint64_t a2)
{
  return sub_247C0D598(a1, a2, 0x7265707075, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_247BFB3FC);
}

{
  return sub_247C0D598(a1, a2, 0x7265707075, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_247BFB3FC);
}

_QWORD *ExpressionType<>.like(_:escape:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v7;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  _QWORD *result;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v20;
  uint64_t v21;
  _UNKNOWN **v22;
  uint64_t v23;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _UNKNOWN **v31;
  _QWORD v32[5];
  uint64_t v33[6];

  if (a4)
  {
    swift_bridgeObjectRetain();
    sub_247C3D9E4();
    swift_bridgeObjectRelease();
    v33[0] = 40;
    v33[1] = 0xE100000000000000;
    (*(void (**)(uint64_t, uint64_t))(a6 + 24))(a5, a6);
    sub_247C3D840();
    swift_bridgeObjectRelease();
    sub_247C3D840();
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 32))(a5, a6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
    inited = swift_initStackObject();
    v16 = MEMORY[0x24BEE0D00];
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    *(_QWORD *)(inited + 56) = v16;
    *(_QWORD *)(inited + 64) = &protocol witness table for String;
    *(_QWORD *)(inited + 32) = a1;
    *(_QWORD *)(inited + 40) = a2;
    *(_QWORD *)(inited + 96) = v16;
    *(_QWORD *)(inited + 104) = &protocol witness table for String;
    *(_QWORD *)(inited + 72) = a3;
    *(_QWORD *)(inited + 80) = a4;
    swift_bridgeObjectRetain();
    result = sub_247C0F75C((_QWORD *)inited);
    *a7 = 40;
    a7[1] = 0xE100000000000000;
    a7[2] = v14;
  }
  else
  {
    v18 = *(_QWORD *)(a6 + 8);
    v33[3] = a5;
    v33[4] = v18;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_1, v7, a5);
    v32[3] = MEMORY[0x24BEE0D00];
    v32[4] = &protocol witness table for String;
    v32[0] = a1;
    v32[1] = a2;
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    v20 = swift_initStackObject();
    *(_OWORD *)(v20 + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)v33, v20 + 32);
    sub_247BFA88C((uint64_t)v32, v20 + 72);
    v28 = 32;
    *(_QWORD *)&v29 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(v20, &v28);
    swift_bridgeObjectRelease();
    v21 = v30;
    v22 = v31;
    __swift_project_boxed_opaque_existential_1(&v28, v30);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v22[1])(&v26, v21, v22);
    v23 = v26;
    v25 = v27;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
    v31 = &protocol witness table for Expression<A>;
    v28 = v23;
    v29 = v25;
    sub_247BFB3FC(&v28, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  return result;
}

{
  uint64_t v7;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  _QWORD *result;
  uint64_t v18;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v20;
  uint64_t v21;
  _UNKNOWN **v22;
  uint64_t v23;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _UNKNOWN **v31;
  _QWORD v32[5];
  uint64_t v33[6];

  if (a4)
  {
    swift_bridgeObjectRetain();
    sub_247C3D9E4();
    swift_bridgeObjectRelease();
    v33[0] = 40;
    v33[1] = 0xE100000000000000;
    (*(void (**)(uint64_t, uint64_t))(a6 + 24))(a5, a6);
    sub_247C3D840();
    swift_bridgeObjectRelease();
    sub_247C3D840();
    v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 32))(a5, a6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
    inited = swift_initStackObject();
    v16 = MEMORY[0x24BEE0D00];
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    *(_QWORD *)(inited + 56) = v16;
    *(_QWORD *)(inited + 64) = &protocol witness table for String;
    *(_QWORD *)(inited + 32) = a1;
    *(_QWORD *)(inited + 40) = a2;
    *(_QWORD *)(inited + 96) = v16;
    *(_QWORD *)(inited + 104) = &protocol witness table for String;
    *(_QWORD *)(inited + 72) = a3;
    *(_QWORD *)(inited + 80) = a4;
    swift_bridgeObjectRetain();
    result = sub_247C0F75C((_QWORD *)inited);
    *a7 = 40;
    a7[1] = 0xE100000000000000;
    a7[2] = v14;
  }
  else
  {
    v18 = *(_QWORD *)(a6 + 8);
    v33[3] = a5;
    v33[4] = v18;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_1, v7, a5);
    v32[3] = MEMORY[0x24BEE0D00];
    v32[4] = &protocol witness table for String;
    v32[0] = a1;
    v32[1] = a2;
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    v20 = swift_initStackObject();
    *(_OWORD *)(v20 + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)v33, v20 + 32);
    sub_247BFA88C((uint64_t)v32, v20 + 72);
    v28 = 32;
    *(_QWORD *)&v29 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(v20, &v28);
    swift_bridgeObjectRelease();
    v21 = v30;
    v22 = v31;
    __swift_project_boxed_opaque_existential_1(&v28, v30);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v22[1])(&v26, v21, v22);
    v23 = v26;
    v25 = v27;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    v31 = &protocol witness table for Expression<A>;
    v28 = v23;
    v29 = v25;
    sub_247BFB3FC(&v28, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  return result;
}

uint64_t ExpressionType<>.like(_:escape:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t *v16;
  uint64_t inited;
  uint64_t v18;
  _UNKNOWN **v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  _UNKNOWN **v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  _UNKNOWN **v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _UNKNOWN **v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v7 = v6;
  v11 = *a1;
  v10 = a1[1];
  v12 = a1[2];
  if (a3)
  {
    v15 = *(_QWORD *)(a5 + 8);
    v47 = a4;
    v48 = v15;
    v16 = __swift_allocate_boxed_opaque_existential_1(&v45);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v16, v7, a4);
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3A0);
    v44 = &protocol witness table for Expression<A>;
    v40 = v11;
    v41 = v10;
    v42 = v12;
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)&v45, inited + 32);
    sub_247BFA88C((uint64_t)&v40, inited + 72);
    v36 = 32;
    *(_QWORD *)&v37 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(inited, &v36);
    swift_bridgeObjectRelease();
    v18 = v38;
    v19 = v39;
    __swift_project_boxed_opaque_existential_1(&v36, v38);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v19[1])(&v34, v18, v19);
    v20 = *((_QWORD *)&v35 + 1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
    v45 = 40;
    v46 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_247C3D840();
    swift_bridgeObjectRelease();
    sub_247C3D840();
    v21 = v45;
    v22 = v46;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
    v23 = swift_initStackObject();
    v24 = MEMORY[0x24BEE0D00];
    *(_OWORD *)(v23 + 16) = xmmword_247C3E1D0;
    *(_QWORD *)(v23 + 56) = v24;
    *(_QWORD *)(v23 + 64) = &protocol witness table for String;
    *(_QWORD *)(v23 + 32) = a2;
    *(_QWORD *)(v23 + 40) = a3;
    v45 = v20;
    swift_bridgeObjectRetain();
    sub_247C0F75C((_QWORD *)v23);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v26 = v45;
    *a6 = v21;
    a6[1] = v22;
    a6[2] = v26;
  }
  else
  {
    v27 = *(_QWORD *)(a5 + 8);
    v47 = a4;
    v48 = v27;
    v28 = __swift_allocate_boxed_opaque_existential_1(&v45);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v28, v7, a4);
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3A0);
    v44 = &protocol witness table for Expression<A>;
    v40 = v11;
    v41 = v10;
    v42 = v12;
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    v29 = swift_initStackObject();
    *(_OWORD *)(v29 + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)&v45, v29 + 32);
    sub_247BFA88C((uint64_t)&v40, v29 + 72);
    v36 = 32;
    *(_QWORD *)&v37 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(v29, &v36);
    swift_bridgeObjectRelease();
    v30 = v38;
    v31 = v39;
    __swift_project_boxed_opaque_existential_1(&v36, v38);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v31[1])(&v34, v30, v31);
    v32 = v34;
    v33 = v35;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
    v39 = &protocol witness table for Expression<A>;
    v36 = v32;
    v37 = v33;
    sub_247BFB3FC(&v36, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
  }
  return result;
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t *v16;
  uint64_t inited;
  uint64_t v18;
  _UNKNOWN **v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  _UNKNOWN **v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  _UNKNOWN **v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _UNKNOWN **v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v7 = v6;
  v11 = *a1;
  v10 = a1[1];
  v12 = a1[2];
  if (a3)
  {
    v15 = *(_QWORD *)(a5 + 8);
    v47 = a4;
    v48 = v15;
    v16 = __swift_allocate_boxed_opaque_existential_1(&v45);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v16, v7, a4);
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3A0);
    v44 = &protocol witness table for Expression<A>;
    v40 = v11;
    v41 = v10;
    v42 = v12;
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)&v45, inited + 32);
    sub_247BFA88C((uint64_t)&v40, inited + 72);
    v36 = 32;
    *(_QWORD *)&v37 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(inited, &v36);
    swift_bridgeObjectRelease();
    v18 = v38;
    v19 = v39;
    __swift_project_boxed_opaque_existential_1(&v36, v38);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v19[1])(&v34, v18, v19);
    v20 = *((_QWORD *)&v35 + 1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
    v45 = 40;
    v46 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_247C3D840();
    swift_bridgeObjectRelease();
    sub_247C3D840();
    v21 = v45;
    v22 = v46;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
    v23 = swift_initStackObject();
    v24 = MEMORY[0x24BEE0D00];
    *(_OWORD *)(v23 + 16) = xmmword_247C3E1D0;
    *(_QWORD *)(v23 + 56) = v24;
    *(_QWORD *)(v23 + 64) = &protocol witness table for String;
    *(_QWORD *)(v23 + 32) = a2;
    *(_QWORD *)(v23 + 40) = a3;
    v45 = v20;
    swift_bridgeObjectRetain();
    sub_247C0F75C((_QWORD *)v23);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v26 = v45;
    *a6 = v21;
    a6[1] = v22;
    a6[2] = v26;
  }
  else
  {
    v27 = *(_QWORD *)(a5 + 8);
    v47 = a4;
    v48 = v27;
    v28 = __swift_allocate_boxed_opaque_existential_1(&v45);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v28, v7, a4);
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3A0);
    v44 = &protocol witness table for Expression<A>;
    v40 = v11;
    v41 = v10;
    v42 = v12;
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    v29 = swift_initStackObject();
    *(_OWORD *)(v29 + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)&v45, v29 + 32);
    sub_247BFA88C((uint64_t)&v40, v29 + 72);
    v36 = 32;
    *(_QWORD *)&v37 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(v29, &v36);
    swift_bridgeObjectRelease();
    v30 = v38;
    v31 = v39;
    __swift_project_boxed_opaque_existential_1(&v36, v38);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v31[1])(&v34, v30, v31);
    v32 = v34;
    v33 = v35;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    v39 = &protocol witness table for Expression<A>;
    v36 = v32;
    v37 = v33;
    sub_247BFB3FC(&v36, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
  }
  return result;
}

uint64_t ExpressionType<>.glob(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C0DD1C(a1, a2, a3, a4, &qword_2544552C0, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

{
  return sub_247C0DD1C(a1, a2, a3, a4, &qword_254455310, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

uint64_t ExpressionType<>.regexp(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C0E0E4(a1, a2, a3, a4, &qword_2544552C0, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

{
  return sub_247C0E0E4(a1, a2, a3, a4, &qword_254455310, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

uint64_t ExpressionType<>.collate(_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_247C0E2D8(a1, a2, a3, &qword_2576ED3A0, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

{
  return sub_247C0E2D8(a1, a2, a3, &qword_2576ED3B8, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

uint64_t ExpressionType<>.ltrim(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C0D16C(a1, a2, a3, 0x6D6972746CLL, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_247BFB3FC);
}

{
  return sub_247C0D16C(a1, a2, a3, 0x6D6972746CLL, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_247BFB3FC);
}

uint64_t ExpressionType<>.rtrim(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C0D16C(a1, a2, a3, 0x6D69727472, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_247BFB3FC);
}

{
  return sub_247C0D16C(a1, a2, a3, 0x6D69727472, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_247BFB3FC);
}

uint64_t sub_247C0D16C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20[6];

  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    *(_QWORD *)(inited + 56) = a2;
    *(_QWORD *)(inited + 64) = *(_QWORD *)(a3 + 8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_1, v6, a2);
    v20[0] = a1;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3A8);
    sub_247BFF268(&qword_2576ED3B0, &qword_2576ED3A8, MEMORY[0x24BEE1718]);
    v15 = sub_247C3D894();
    *(_QWORD *)(inited + 96) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 104) = &protocol witness table for String;
    *(_QWORD *)(inited + 72) = v15;
    *(_QWORD *)(inited + 80) = v16;
    sub_247BFECF4(inited, v20);
    a6(v20, a4, a5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    return swift_arrayDestroy();
  }
  else
  {
    v18 = *(_QWORD *)(a3 + 8);
    v20[3] = a2;
    v20[4] = v18;
    v19 = __swift_allocate_boxed_opaque_existential_1(v20);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(v19, v6, a2);
    a6(v20, a4, a5);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  }
}

uint64_t ExpressionType<>.trim(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v15[5];

  v4 = v3;
  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    *(_QWORD *)(inited + 56) = a2;
    *(_QWORD *)(inited + 64) = *(_QWORD *)(a3 + 8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_1, v3, a2);
    v15[0] = a1;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3A8);
    sub_247BFF268(&qword_2576ED3B0, &qword_2576ED3A8, MEMORY[0x24BEE1718]);
    v10 = sub_247C3D894();
    *(_QWORD *)(inited + 96) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 104) = &protocol witness table for String;
    *(_QWORD *)(inited + 72) = v10;
    *(_QWORD *)(inited + 80) = v11;
    sub_247BFECF4(inited, v15);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    v12 = swift_initStackObject();
    *(_OWORD *)(v12 + 16) = xmmword_247C3E1D0;
    *(_QWORD *)(v12 + 56) = a2;
    *(_QWORD *)(v12 + 64) = *(_QWORD *)(a3 + 8);
    v13 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v12 + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(v13, v4, a2);
    sub_247BFECF4(v12, v15);
  }
  sub_247BFB3FC(v15, 1835627124, 0xE400000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  return swift_arrayDestroy();
}

{
  return sub_247C0D16C(a1, a2, a3, 1835627124, 0xE400000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_247BFB3FC);
}

uint64_t ExpressionType<>.replace(_:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_247C0E518(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t *, uint64_t, unint64_t))sub_247BFB3FC);
}

{
  return sub_247C0E518(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t *, uint64_t, unint64_t))sub_247BFB3FC);
}

uint64_t ExpressionType<>.substring(_:length:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  return sub_247C0E670(a1, a2, a3, a4, a5, (void (*)(uint64_t *, uint64_t, unint64_t))sub_247BFB3FC);
}

{
  return sub_247C0E670(a1, a2, a3, a4, a5, (void (*)(uint64_t *, uint64_t, unint64_t))sub_247BFB3FC);
}

uint64_t ExpressionType<>.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C0E868(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))ExpressionType<>.substring(_:length:));
}

{
  return sub_247C0E868(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))ExpressionType<>.substring(_:length:));
}

uint64_t sub_247C0D598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v13[5];

  v10 = *(_QWORD *)(a2 + 8);
  v13[3] = a1;
  v13[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_1, v5, a1);
  a5(v13, a3, a4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_247C0DD1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t *, _QWORD, unint64_t))
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v16;
  _UNKNOWN **v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _UNKNOWN **v26;
  _QWORD v27[5];
  uint64_t v28[5];

  v9 = v6;
  v13 = *(_QWORD *)(a4 + 8);
  v28[3] = a3;
  v28[4] = v13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, v9, a3);
  v27[3] = MEMORY[0x24BEE0D00];
  v27[4] = &protocol witness table for String;
  v27[0] = a1;
  v27[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v28, inited + 32);
  sub_247BFA88C((uint64_t)v27, inited + 72);
  v23 = 32;
  *(_QWORD *)&v24 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v23);
  swift_bridgeObjectRelease();
  v16 = v25;
  v17 = v26;
  __swift_project_boxed_opaque_existential_1(&v23, v25);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v17[1])(&v21, v16, v17);
  v18 = v21;
  v20 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  v25 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v26 = &protocol witness table for Expression<A>;
  v23 = v18;
  v24 = v20;
  a6(&v23, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t _s11SwiftSQLite14ExpressionTypePAASS010UnderlyingD0RtzrlE5matchyAA0C0VySbGSSF_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v12;
  _UNKNOWN **v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _UNKNOWN **v22;
  _QWORD v23[5];
  uint64_t v24[5];

  v5 = v4;
  v9 = *(_QWORD *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, v5, a3);
  v23[3] = MEMORY[0x24BEE0D00];
  v23[4] = &protocol witness table for String;
  v23[0] = a1;
  v23[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v24, inited + 32);
  sub_247BFA88C((uint64_t)v23, inited + 72);
  v19 = 32;
  *(_QWORD *)&v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v19);
  swift_bridgeObjectRelease();
  v12 = v21;
  v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  v14 = v17;
  v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v22 = &protocol witness table for Expression<A>;
  v19 = v14;
  v20 = v16;
  sub_247BFB3FC(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

uint64_t sub_247C0E0E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t *, _QWORD, unint64_t))
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v16;
  _UNKNOWN **v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _UNKNOWN **v26;
  _QWORD v27[5];
  uint64_t v28[5];

  v9 = v6;
  v13 = *(_QWORD *)(a4 + 8);
  v28[3] = a3;
  v28[4] = v13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v28);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, v9, a3);
  v27[3] = MEMORY[0x24BEE0D00];
  v27[4] = &protocol witness table for String;
  v27[0] = a1;
  v27[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v28, inited + 32);
  sub_247BFA88C((uint64_t)v27, inited + 72);
  v23 = 32;
  *(_QWORD *)&v24 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v23);
  swift_bridgeObjectRelease();
  v16 = v25;
  v17 = v26;
  __swift_project_boxed_opaque_existential_1(&v23, v25);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v17[1])(&v21, v16, v17);
  v18 = v21;
  v20 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  v25 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v26 = &protocol witness table for Expression<A>;
  v23 = v18;
  v24 = v20;
  a6(&v23, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t sub_247C0E2D8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t *, _QWORD, unint64_t))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v15;
  _UNKNOWN **v16;
  uint64_t v17;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  _UNKNOWN **v25;
  _QWORD v26[5];
  uint64_t v27[5];

  v8 = v5;
  v10 = *a1;
  v11 = a1[1];
  v12 = *(_QWORD *)(a3 + 8);
  v27[3] = a2;
  v27[4] = v12;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_1, v8, a2);
  v26[3] = &type metadata for Collation;
  v26[4] = &protocol witness table for Collation;
  v26[0] = v10;
  v26[1] = v11;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v27, inited + 32);
  sub_247BFA88C((uint64_t)v26, inited + 72);
  v22 = 32;
  *(_QWORD *)&v23 = 0xE100000000000000;
  sub_247C0B9AC(v10, v11);
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v22);
  swift_bridgeObjectRelease();
  v15 = v24;
  v16 = v25;
  __swift_project_boxed_opaque_existential_1(&v22, v24);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v16[1])(&v20, v15, v16);
  v17 = v20;
  v19 = v21;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  v24 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v25 = &protocol witness table for Expression<A>;
  v22 = v17;
  v23 = v19;
  a5(&v22, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_247C0E518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *, uint64_t, unint64_t))
{
  uint64_t v7;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v16;
  uint64_t v19[5];

  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E140;
  *(_QWORD *)(inited + 56) = a5;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(a6 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_1, v7, a5);
  v16 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 96) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 104) = &protocol witness table for String;
  *(_QWORD *)(inited + 72) = a1;
  *(_QWORD *)(inited + 80) = a2;
  *(_QWORD *)(inited + 136) = v16;
  *(_QWORD *)(inited + 144) = &protocol witness table for String;
  *(_QWORD *)(inited + 112) = a3;
  *(_QWORD *)(inited + 120) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFECF4(inited, v19);
  a7(v19, 0x6563616C706572, 0xE700000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  return swift_arrayDestroy();
}

uint64_t sub_247C0E670(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t *, uint64_t, unint64_t))
{
  uint64_t v6;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v19[5];

  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  if ((a3 & 1) != 0)
  {
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    *(_QWORD *)(inited + 56) = a4;
    *(_QWORD *)(inited + 64) = *(_QWORD *)(a5 + 8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_1, v6, a4);
    *(_QWORD *)(inited + 96) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 104) = &protocol witness table for Int;
    *(_QWORD *)(inited + 72) = a1;
    sub_247BFECF4(inited, v19);
  }
  else
  {
    v13 = swift_initStackObject();
    *(_OWORD *)(v13 + 16) = xmmword_247C3E140;
    *(_QWORD *)(v13 + 56) = a4;
    *(_QWORD *)(v13 + 64) = *(_QWORD *)(a5 + 8);
    v14 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v13 + 32));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(v14, v6, a4);
    v15 = MEMORY[0x24BEE1768];
    *(_QWORD *)(v13 + 96) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v13 + 104) = &protocol witness table for Int;
    *(_QWORD *)(v13 + 72) = a1;
    *(_QWORD *)(v13 + 136) = v15;
    *(_QWORD *)(v13 + 144) = &protocol witness table for Int;
    *(_QWORD *)(v13 + 112) = a2;
    sub_247BFECF4(v13, v19);
  }
  a6(v19, 0x727473627573, 0xE600000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  return swift_arrayDestroy();
}

uint64_t sub_247C0E868(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))
{
  BOOL v5;
  uint64_t v6;

  v5 = __OFSUB__(a2, result);
  v6 = a2 - result;
  if (!v5)
    return a5(result, v6, 0, a3, a4);
  __break(1u);
  return result;
}

uint64_t Collection<>.contains(_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  _UNKNOWN **v18;
  uint64_t v19;
  __int128 v22;
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  _UNKNOWN **v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _UNKNOWN **v37;
  _QWORD v38[6];

  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  v9 = sub_247C3D93C();
  sub_247C0EB84((_QWORD *)0x3F, 0xE100000000000000, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455450);
  sub_247BFF268((unint64_t *)&qword_254455458, &qword_254455450, MEMORY[0x24BEE12B0]);
  sub_247C3D78C();
  swift_bridgeObjectRelease();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v38[3] = type metadata accessor for Expression(0, AssociatedTypeWitness, v11, v12);
  v38[4] = &protocol witness table for Expression<A>;
  v38[0] = v6;
  v38[1] = v7;
  v38[2] = v8;
  v33 = 40;
  v34 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  v24 = a2;
  v25 = a3;
  v26 = a4;
  v13 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
  v15 = sub_247C0BEE4((void (*)(char *, char *))sub_247C0F858, (uint64_t)v23, a2, v13, MEMORY[0x24BEE4078], a3, MEMORY[0x24BEE40A8], v14);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  v37 = &protocol witness table for Expression<A>;
  v33 = 40;
  v34 = 0xE100000000000000;
  v35 = v15;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v38, inited + 32);
  sub_247BFA88C((uint64_t)&v33, inited + 72);
  v29 = 32;
  *(_QWORD *)&v30 = 0xE100000000000000;
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v29);
  swift_bridgeObjectRelease();
  v17 = v31;
  v18 = v32;
  __swift_project_boxed_opaque_existential_1(&v29, v31);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v18[1])(&v27, v17, v18);
  v19 = v27;
  v22 = v28;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v32 = &protocol witness table for Expression<A>;
  v29 = v19;
  v30 = v22;
  sub_247BFB3FC(&v29, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  _UNKNOWN **v18;
  uint64_t v19;
  __int128 v22;
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  _UNKNOWN **v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _UNKNOWN **v37;
  _QWORD v38[6];

  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  v9 = sub_247C3D93C();
  sub_247C0EB84((_QWORD *)0x3F, 0xE100000000000000, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455450);
  sub_247BFF268((unint64_t *)&qword_254455458, &qword_254455450, MEMORY[0x24BEE12B0]);
  sub_247C3D78C();
  swift_bridgeObjectRelease();
  swift_getAssociatedTypeWitness();
  v10 = sub_247C3D9B4();
  v38[3] = type metadata accessor for Expression(0, v10, v11, v12);
  v38[4] = &protocol witness table for Expression<A>;
  v38[0] = v6;
  v38[1] = v7;
  v38[2] = v8;
  v33 = 40;
  v34 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  v24 = a2;
  v25 = a3;
  v26 = a4;
  v13 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
  v15 = sub_247C0BEE4((void (*)(char *, char *))sub_247C0FA4C, (uint64_t)v23, a2, v13, MEMORY[0x24BEE4078], a3, MEMORY[0x24BEE40A8], v14);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  v37 = &protocol witness table for Expression<A>;
  v33 = 40;
  v34 = 0xE100000000000000;
  v35 = v15;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v38, inited + 32);
  sub_247BFA88C((uint64_t)&v33, inited + 72);
  v29 = 32;
  *(_QWORD *)&v30 = 0xE100000000000000;
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v29);
  swift_bridgeObjectRelease();
  v17 = v31;
  v18 = v32;
  __swift_project_boxed_opaque_existential_1(&v29, v31);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v18[1])(&v27, v17, v18);
  v19 = v27;
  v22 = v28;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v32 = &protocol witness table for Expression<A>;
  v29 = v19;
  v30 = v22;
  sub_247BFB3FC(&v29, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
}

_QWORD *sub_247C0EB84(_QWORD *result, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;

  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a3)
    {
      v5 = result;
      v6 = (_QWORD *)sub_247C3D8E8();
      v7 = v6;
      v6[2] = a3;
      v6[4] = v5;
      v6[5] = a2;
      if (a3 != 1)
      {
        v6[6] = v5;
        v6[7] = a2;
        v8 = a3 - 2;
        if (v8)
        {
          v9 = v6 + 9;
          do
          {
            *(v9 - 1) = v5;
            *v9 = a2;
            swift_bridgeObjectRetain();
            v9 += 2;
            --v8;
          }
          while (v8);
        }
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    return v7;
  }
  return result;
}

uint64_t sub_247C0EF38@<X0>(uint64_t a1@<X3>, uint64_t *a2@<X8>)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;

  v4 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 56);
  swift_getAssociatedTypeWitness();
  a2[3] = swift_getAssociatedTypeWitness();
  a2[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(a2);
  v5 = swift_checkMetadataState();
  return v4(v5, a1);
}

uint64_t String.like(_:escape:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _UNKNOWN **v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _UNKNOWN **v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _UNKNOWN **v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _UNKNOWN **v40;

  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  if (a3)
  {
    v39 = MEMORY[0x24BEE0D00];
    v40 = &protocol witness table for String;
    v37 = a4;
    v38 = a5;
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3A0);
    v36 = &protocol witness table for Expression<A>;
    v32 = v8;
    v33 = v7;
    v34 = v9;
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)&v37, inited + 32);
    sub_247BFA88C((uint64_t)&v32, inited + 72);
    v28 = 32;
    *(_QWORD *)&v29 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(inited, &v28);
    swift_bridgeObjectRelease();
    v13 = v30;
    v14 = v31;
    __swift_project_boxed_opaque_existential_1(&v28, v30);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v26, v13, v14);
    v15 = *((_QWORD *)&v27 + 1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
    v37 = 40;
    v38 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_247C3D840();
    swift_bridgeObjectRelease();
    sub_247C3D840();
    v16 = v37;
    v17 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
    v18 = swift_initStackObject();
    *(_OWORD *)(v18 + 16) = xmmword_247C3E1D0;
    *(_QWORD *)(v18 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v18 + 64) = &protocol witness table for String;
    *(_QWORD *)(v18 + 32) = a2;
    *(_QWORD *)(v18 + 40) = a3;
    v37 = v15;
    swift_bridgeObjectRetain();
    sub_247C0F75C((_QWORD *)v18);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v20 = v37;
    *a6 = v16;
    a6[1] = v17;
    a6[2] = v20;
  }
  else
  {
    v39 = MEMORY[0x24BEE0D00];
    v40 = &protocol witness table for String;
    v37 = a4;
    v38 = a5;
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3A0);
    v36 = &protocol witness table for Expression<A>;
    v32 = v8;
    v33 = v7;
    v34 = v9;
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    v21 = swift_initStackObject();
    *(_OWORD *)(v21 + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)&v37, v21 + 32);
    sub_247BFA88C((uint64_t)&v32, v21 + 72);
    v28 = 32;
    *(_QWORD *)&v29 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(v21, &v28);
    swift_bridgeObjectRelease();
    v22 = v30;
    v23 = v31;
    __swift_project_boxed_opaque_existential_1(&v28, v30);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v23[1])(&v26, v22, v23);
    v24 = v26;
    v25 = v27;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
    v31 = &protocol witness table for Expression<A>;
    v28 = v24;
    v29 = v25;
    sub_247BFB3FC(&v28, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
  }
  return result;
}

uint64_t ?? infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_1;

  v10 = *a1;
  v9 = a1[1];
  v11 = a1[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  v13 = sub_247C3D9B4();
  *(_QWORD *)(inited + 56) = type metadata accessor for Expression(0, v13, v14, v15);
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v9;
  *(_QWORD *)(inited + 48) = v11;
  *(_QWORD *)(inited + 96) = a3;
  *(_QWORD *)(inited + 104) = *(_QWORD *)(a4 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 72));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C0C3C4(inited, 0x13u, a5);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  return swift_arrayDestroy();
}

uint64_t ?? infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *a1;
  v5 = a1[1];
  v7 = a1[2];
  v9 = *a2;
  v8 = a2[1];
  v10 = a2[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  v12 = sub_247C3D9B4();
  *(_QWORD *)(inited + 56) = type metadata accessor for Expression(0, v12, v13, v14);
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 32) = v6;
  *(_QWORD *)(inited + 40) = v5;
  *(_QWORD *)(inited + 48) = v7;
  *(_QWORD *)(inited + 96) = type metadata accessor for Expression(0, a3, v15, v16);
  *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 80) = v8;
  *(_QWORD *)(inited + 88) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C0C3C4(inited, 0x13u, a4);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  return swift_arrayDestroy();
}

uint64_t ?? infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *a1;
  v4 = a1[1];
  v6 = a1[2];
  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  v11 = sub_247C3D9B4();
  v14 = type metadata accessor for Expression(0, v11, v12, v13);
  *(_QWORD *)(inited + 56) = v14;
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 32) = v5;
  *(_QWORD *)(inited + 40) = v4;
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 96) = v14;
  *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 72) = v8;
  *(_QWORD *)(inited + 80) = v7;
  *(_QWORD *)(inited + 88) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C0C3C4(inited, 0x13u, a3);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  return swift_arrayDestroy();
}

_QWORD *sub_247C0F75C(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  int64_t v10;

  v2 = result[2];
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v5 <= v3[3] >> 1)
  {
    if (v6[2])
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v10 = v4 + v2;
  else
    v10 = v4;
  result = sub_247BFF034(result, v10, 1, v3);
  v3 = result;
  if (!v6[2])
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  if ((v3[3] >> 1) - v3[2] < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
  result = (_QWORD *)swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    result = (_QWORD *)swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v7 = v3[2];
  v8 = __OFADD__(v7, v2);
  v9 = v7 + v2;
  if (!v8)
  {
    v3[2] = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_247C0F858@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_247C0EF38(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_247C0F878(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  int64_t v10;

  v2 = *(_QWORD *)(result + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v10 = v4 + v2;
  else
    v10 = v4;
  result = (uint64_t)sub_247BFF168((char *)result, v10, 1, (char *)v3);
  v3 = result;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  if ((*(_QWORD *)(v3 + 24) >> 1) - *(_QWORD *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v8 = __OFADD__(v7, v2);
  v9 = v7 + v2;
  if (!v8)
  {
    *(_QWORD *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_247C0F960(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  int64_t v10;

  v2 = *(_QWORD *)(result + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_5;
    goto LABEL_13;
  }
  if (v4 <= v5)
    v10 = v4 + v2;
  else
    v10 = v4;
  result = (uint64_t)sub_247C0AC28((char *)result, v10, 1, (char *)v3);
  v3 = result;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_13:
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
LABEL_5:
  if ((*(_QWORD *)(v3 + 24) >> 1) - *(_QWORD *)(v3 + 16) < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v8 = __OFADD__(v7, v2);
  v9 = v7 + v2;
  if (!v8)
  {
    *(_QWORD *)(v3 + 16) = v9;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_247C0FA4C@<X0>(uint64_t *a1@<X8>)
{
  return sub_247C0F858(a1);
}

uint64_t static Module.RTree<A, B>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t TupleTypeMetadata2;
  uint64_t v21;
  uint64_t *v22;
  char v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t inited;
  int64_t v32;
  int64_t v33;
  BOOL v34;
  int64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v9 = *a1;
  v10 = a1[1];
  v11 = a1[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_247C3E1D0;
  v13 = a3;
  v14 = (_QWORD *)v12;
  *(_QWORD *)(v12 + 56) = type metadata accessor for Expression(0, v13, v15, v16);
  v14[8] = &protocol witness table for Expression<A>;
  v14[4] = v9;
  v14[5] = v10;
  v14[6] = v11;
  v19 = type metadata accessor for Expression(255, a4, v17, v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v43 = v19;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  if (MEMORY[0x24958E668](a2, TupleTypeMetadata2))
  {
    v40 = a5;
    v21 = 0;
    v22 = (uint64_t *)(a2 + 72);
    v41 = TupleTypeMetadata2;
    v42 = a2;
    while (1)
    {
      v23 = sub_247C3D8F4();
      result = sub_247C3D8D0();
      if ((v23 & 1) == 0)
        break;
      if (__OFADD__(v21, 1))
        goto LABEL_21;
      v44 = v21 + 1;
      v26 = *(v22 - 1);
      v25 = *v22;
      v27 = *(v22 - 3);
      v45 = *(v22 - 2);
      v28 = v14;
      v30 = *(v22 - 5);
      v29 = *(v22 - 4);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      *(_QWORD *)(inited + 32) = v30;
      v14 = v28;
      *(_QWORD *)(inited + 56) = v43;
      *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
      *(_QWORD *)(inited + 40) = v29;
      *(_QWORD *)(inited + 48) = v27;
      *(_QWORD *)(inited + 96) = v43;
      *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
      *(_QWORD *)(inited + 72) = v45;
      *(_QWORD *)(inited + 80) = v26;
      *(_QWORD *)(inited + 88) = v25;
      v32 = v28[2];
      v33 = v32 + 2;
      v34 = __OFADD__(v32, 2);
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      if (v34)
        goto LABEL_22;
      v35 = v14[3] >> 1;
      if (v35 < v33)
      {
        if (v32 <= v33)
          v39 = v32 + 2;
        else
          v39 = v32;
        result = (uint64_t)sub_247BFF3E4((_QWORD *)1, v39, 1, v14);
        v14 = (_QWORD *)result;
        v32 = *(_QWORD *)(result + 16);
        v35 = *(_QWORD *)(result + 24) >> 1;
      }
      if (v35 - v32 < 2)
        goto LABEL_23;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
      result = swift_arrayInitWithCopy();
      v36 = v14[2];
      v37 = __OFADD__(v36, 2);
      v38 = v36 + 2;
      if (v37)
        goto LABEL_24;
      v14[2] = v38;
      swift_bridgeObjectRelease();
      ++v21;
      v22 += 6;
      if (v44 == MEMORY[0x24958E668](v42, v41))
      {
        result = swift_bridgeObjectRelease();
        a5 = v40;
        goto LABEL_19;
      }
    }
    result = sub_247C3D9F0();
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  else
  {
    result = swift_bridgeObjectRelease();
LABEL_19:
    *a5 = 0x6565727472;
    a5[1] = 0xE500000000000000;
    a5[2] = v14;
  }
  return result;
}

void * infix(_:_:)(_QWORD *a1@<X8>)
{
  *a1 = 42;
  a1[1] = 0xE100000000000000;
  a1[2] = MEMORY[0x24BEE4AF8];
}

void sub_247C0FD60()
{
  qword_254455C50 = -1;
}

uint64_t sub_247C0FD70(uint64_t a1)
{
  uint64_t v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  _BYTE v8[40];

  sub_247C01300(a1, (uint64_t)&v6);
  if (v7)
  {
    sub_247BFECDC(&v6, (uint64_t)v8);
    sub_247BFA88C((uint64_t)v8, (uint64_t)&v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C8);
    if (swift_dynamicCast())
    {
      v4 = 10104;
      v5 = 0xE200000000000000;
      Blob.toHex()();
      sub_247C3D840();
      swift_bridgeObjectRelease();
      sub_247C3D840();
      swift_bridgeObjectRelease();
      v1 = 10104;
    }
    else
    {
      if (!swift_dynamicCast())
      {
        sub_247BFECDC(&v6, (uint64_t)&v4);
        sub_247C3DA5C();
        v1 = 0;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v4);
        v2 = (__int128 *)v8;
        goto LABEL_9;
      }
      sub_247BFD20C(0, 0xE000000000000000, v4, v5, 39, 0xE100000000000000);
      sub_247C3D780();
      sub_247C3D840();
      swift_bridgeObjectRelease();
      sub_247C3D780();
      swift_bridgeObjectRelease();
      v1 = 0;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    v2 = &v6;
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    return v1;
  }
  sub_247C10130((uint64_t)&v6);
  return 1280070990;
}

uint64_t sub_247C0FF74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _BYTE v13[40];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v9 = &v13[-v8 - 8];
  v10 = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](v10);
  sub_247BFA88C(a1, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C8);
  swift_dynamicCast();
  (*(void (**)(char *, uint64_t, uint64_t))(a3 + 48))(v9, a2, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, AssociatedTypeWitness);
  return swift_dynamicCast();
}

uint64_t sub_247C100CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  _BYTE v6[24];
  uint64_t v7;

  result = sub_247C01300(a1, (uint64_t)v6);
  if (v7)
  {
    sub_247C0FF74((uint64_t)v6, a2, a3);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_247C10130(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static Data.declaredDatatype.getter()
{
  return 1112493122;
}

uint64_t static Data.fromDatatypeValue(_:)()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_247BFD3D4(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_247C101D8()
{
  return 1112493122;
}

uint64_t static Date.declaredDatatype.getter()
{
  return 1415071060;
}

uint64_t static Date.fromDatatypeValue(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t result;
  uint64_t v14;

  v2 = sub_247C3D6CC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_254455210);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2544552F8 != -1)
    swift_once();
  swift_beginAccess();
  v9 = (id)qword_254455318;
  v10 = (void *)sub_247C3D7A4();
  v11 = objc_msgSend(v9, sel_dateFromString_, v10);

  if (v11)
  {
    sub_247C3D6C0();

    v12 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v12(v8, v5, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v8, 0, 1, v2);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2);
    if ((_DWORD)result != 1)
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v12)(a1, v8, v2);
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
  }
  __break(1u);
  return result;
}

uint64_t Date.datatypeValue.getter()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;

  if (qword_2544552F8 != -1)
    swift_once();
  swift_beginAccess();
  v0 = (id)qword_254455318;
  v1 = (void *)sub_247C3D6B4();
  v2 = objc_msgSend(v0, sel_stringFromDate_, v1);

  v3 = sub_247C3D7B0();
  return v3;
}

uint64_t sub_247C10480()
{
  return 1415071060;
}

uint64_t sub_247C10490@<X0>(uint64_t a1@<X8>)
{
  return static Date.fromDatatypeValue(_:)(a1);
}

void sub_247C1049C(uint64_t *a1@<X8>)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (qword_2544552F8 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (id)qword_254455318;
  v3 = (void *)sub_247C3D6B4();
  v4 = objc_msgSend(v2, sel_stringFromDate_, v3);

  v5 = sub_247C3D7B0();
  v7 = v6;

  *a1 = v5;
  a1[1] = v7;
}

id sub_247C10560()
{
  id result;

  result = sub_247C1057C();
  qword_254455318 = (uint64_t)result;
  return result;
}

id sub_247C1057C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552F0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_247C3D714();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  v8 = (void *)sub_247C3D7A4();
  objc_msgSend(v7, sel_setDateFormat_, v8);

  sub_247C3D6FC();
  v9 = (void *)sub_247C3D708();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  objc_msgSend(v7, sel_setLocale_, v9);

  sub_247C3D720();
  v10 = sub_247C3D738();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v2, 1, v10) != 1)
  {
    v12 = (void *)sub_247C3D72C();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v2, v10);
  }
  objc_msgSend(v7, sel_setTimeZone_, v12);

  return v7;
}

id dateFormatter.getter()
{
  if (qword_2544552F8 != -1)
    swift_once();
  swift_beginAccess();
  return (id)qword_254455318;
}

void dateFormatter.setter(uint64_t a1)
{
  void *v2;

  if (qword_2544552F8 != -1)
    swift_once();
  swift_beginAccess();
  v2 = (void *)qword_254455318;
  qword_254455318 = a1;

}

uint64_t (*dateFormatter.modify())()
{
  if (qword_2544552F8 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static UUID.declaredDatatype.getter()
{
  return 1415071060;
}

uint64_t static UUID.fromDatatypeValue(_:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455200);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_247C3D6D8();
  v5 = sub_247C3D6F0();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  __break(1u);
  return result;
}

uint64_t sub_247C10950@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455200);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_247C3D6D8();
  v7 = *(_QWORD *)(a1 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, a1);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a2, v6, a1);
  __break(1u);
  return result;
}

uint64_t sub_247C109FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = _s10Foundation4UUIDV11SwiftSQLiteE13datatypeValueSSvg_0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

_QWORD *sub_247C10A30(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455470);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_247C1A138((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_247C10C64();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_247C10B14(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_247C10BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_247C3D69C();
  swift_allocObject();
  result = sub_247C3D66C();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_247C3D6A8();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

_UNKNOWN **sub_247C10C4C()
{
  return &protocol witness table for Blob;
}

_UNKNOWN **sub_247C10C58()
{
  return &protocol witness table for String;
}

uint64_t sub_247C10C64()
{
  return swift_release();
}

__n128 sub_247C10C6C@<Q0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 result;

  v8 = *a1;
  v9 = *a2;
  v10 = sub_247C3D9B4();
  *(_QWORD *)(a4 + 24) = type metadata accessor for Expression(0, v10, v11, v12);
  *(_QWORD *)(a4 + 32) = &protocol witness table for Expression<A>;
  *(_QWORD *)a4 = v8;
  *(_OWORD *)(a4 + 8) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(a4 + 64) = type metadata accessor for Expression(0, a3, v13, v14);
  *(_QWORD *)(a4 + 72) = &protocol witness table for Expression<A>;
  *(_QWORD *)(a4 + 40) = v9;
  result = *(__n128 *)(a2 + 1);
  *(__n128 *)(a4 + 48) = result;
  return result;
}

__n128 sub_247C10D00@<Q0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 result;

  v6 = *a1;
  v7 = *a2;
  v8 = sub_247C3D9B4();
  v11 = type metadata accessor for Expression(0, v8, v9, v10);
  *(_QWORD *)(a3 + 24) = v11;
  *(_QWORD *)(a3 + 32) = &protocol witness table for Expression<A>;
  *(_QWORD *)a3 = v6;
  *(_OWORD *)(a3 + 8) = *(_OWORD *)(a1 + 1);
  *(_QWORD *)(a3 + 64) = v11;
  *(_QWORD *)(a3 + 72) = &protocol witness table for Expression<A>;
  *(_QWORD *)(a3 + 40) = v7;
  result = *(__n128 *)(a2 + 1);
  *(__n128 *)(a3 + 48) = result;
  return result;
}

uint64_t Setter.expression.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11[3];
  uint64_t v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C(v1, inited + 32);
  sub_247BFA88C(v1 + 40, inited + 72);
  v11[0] = 32;
  v11[1] = 0xE100000000000000;
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, v11);
  swift_bridgeObjectRelease();
  v4 = v12;
  v5 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v5 + 8))(&v9, v4, v5);
  v6 = v9;
  v8 = v10;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  *(_QWORD *)a1 = v6;
  *(_OWORD *)(a1 + 8) = v8;
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  return swift_arrayDestroy();
}

uint64_t <- infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7 = *a1;
  v6 = a1[1];
  v8 = a1[2];
  v10 = *a2;
  v9 = a2[1];
  v11 = a2[2];
  v12 = type metadata accessor for Expression(0, a3, a3, a4);
  *a5 = v7;
  a5[1] = v6;
  a5[2] = v8;
  a5[3] = v12;
  a5[8] = v12;
  a5[9] = &protocol witness table for Expression<A>;
  a5[4] = &protocol witness table for Expression<A>;
  a5[5] = v10;
  a5[6] = v9;
  a5[7] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t <- infix<A>(_:_:)(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_247C10F58(a1, a2, a3, a4, (void (*)(_QWORD *, _QWORD *))sub_247C10C6C);
}

{
  return sub_247C10F58(a1, a2, a3, a4, (void (*)(_QWORD *, _QWORD *))sub_247C10D00);
}

uint64_t sub_247C10F58(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD *, _QWORD *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  _QWORD v12[3];

  v5 = a1[1];
  v6 = a1[2];
  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v12[0] = *a1;
  v12[1] = v5;
  v12[2] = v6;
  v11[0] = v7;
  v11[1] = v8;
  v11[2] = v9;
  a5(v12, v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t += infix(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_247C1125C(a1, a2, &qword_2576ED3A0, a3);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  _UNKNOWN **v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  _UNKNOWN **v27;
  _QWORD v28[5];
  _QWORD v29[6];

  v5 = *a1;
  v4 = a1[1];
  v21 = *a1;
  v6 = a1[2];
  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3B8);
  v29[3] = v10;
  v29[4] = &protocol witness table for Expression<A>;
  v29[0] = v5;
  v29[1] = v4;
  v29[2] = v6;
  v28[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3A0);
  v28[4] = &protocol witness table for Expression<A>;
  v28[0] = v7;
  v28[1] = v8;
  v28[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v29, inited + 32);
  sub_247BFA88C((uint64_t)v28, inited + 72);
  v24 = 32;
  *(_QWORD *)&v25 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v24);
  swift_bridgeObjectRelease();
  v12 = v26;
  v13 = v27;
  __swift_project_boxed_opaque_existential_1(&v24, v26);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v22, v12, v13);
  v14 = v22;
  v20 = v23;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
  v26 = v10;
  v27 = &protocol witness table for Expression<A>;
  v24 = v14;
  v25 = v20;
  v22 = 0;
  *(_QWORD *)&v23 = 0xE000000000000000;
  sub_247C3D840();
  v15 = __swift_project_boxed_opaque_existential_1(&v24, v10);
  swift_bridgeObjectRetain();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  v16 = v22;
  v17 = v23;
  v18 = v15[2];
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  *a3 = v21;
  a3[1] = v4;
  a3[2] = v6;
  a3[3] = v10;
  a3[8] = v10;
  a3[9] = &protocol witness table for Expression<A>;
  a3[4] = &protocol witness table for Expression<A>;
  a3[5] = v16;
  a3[6] = v17;
  a3[7] = v18;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

{
  return sub_247C1125C(a1, a2, &qword_2576ED3B8, a3);
}

uint64_t += infix(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_247C114C4(a1, a2, a3, &qword_2576ED3A0, a4);
}

{
  return sub_247C114C4(a1, a2, a3, &qword_2576ED3B8, a4);
}

uint64_t sub_247C1125C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  _UNKNOWN **v28;
  _QWORD v29[5];
  _QWORD v30[6];

  v6 = *a1;
  v5 = a1[1];
  v22 = *a1;
  v7 = a1[2];
  v8 = *a2;
  v9 = a2[1];
  v10 = a2[2];
  v11 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v30[3] = v11;
  v30[4] = &protocol witness table for Expression<A>;
  v30[0] = v6;
  v30[1] = v5;
  v30[2] = v7;
  v29[3] = v11;
  v29[4] = &protocol witness table for Expression<A>;
  v29[0] = v8;
  v29[1] = v9;
  v29[2] = v10;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v30, inited + 32);
  sub_247BFA88C((uint64_t)v29, inited + 72);
  v25 = 32;
  *(_QWORD *)&v26 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v25);
  swift_bridgeObjectRelease();
  v13 = v27;
  v14 = v28;
  __swift_project_boxed_opaque_existential_1(&v25, v27);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v23, v13, v14);
  v15 = v23;
  v21 = v24;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  v27 = v11;
  v28 = &protocol witness table for Expression<A>;
  v25 = v15;
  v26 = v21;
  v23 = 0;
  *(_QWORD *)&v24 = 0xE000000000000000;
  sub_247C3D840();
  v16 = __swift_project_boxed_opaque_existential_1(&v25, v11);
  swift_bridgeObjectRetain();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  v17 = v23;
  v18 = v24;
  v19 = v16[2];
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  *a4 = v22;
  a4[1] = v5;
  a4[2] = v7;
  a4[3] = v11;
  a4[8] = v11;
  a4[9] = &protocol witness table for Expression<A>;
  a4[4] = &protocol witness table for Expression<A>;
  a4[5] = v17;
  a4[6] = v18;
  a4[7] = v19;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_247C114C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  _UNKNOWN **v28;
  _QWORD v29[5];
  _QWORD v30[6];

  v9 = *a1;
  v8 = a1[1];
  v22 = *a1;
  v10 = a1[2];
  v11 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v30[3] = v11;
  v30[4] = &protocol witness table for Expression<A>;
  v30[0] = v9;
  v30[1] = v8;
  v30[2] = v10;
  v29[3] = MEMORY[0x24BEE0D00];
  v29[4] = &protocol witness table for String;
  v29[0] = a2;
  v29[1] = a3;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v30, inited + 32);
  sub_247BFA88C((uint64_t)v29, inited + 72);
  v25 = 32;
  *(_QWORD *)&v26 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v25);
  swift_bridgeObjectRelease();
  v13 = v27;
  v14 = v28;
  __swift_project_boxed_opaque_existential_1(&v25, v27);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v23, v13, v14);
  v15 = v23;
  v21 = v24;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  v27 = v11;
  v28 = &protocol witness table for Expression<A>;
  v25 = v15;
  v26 = v21;
  v23 = 0;
  *(_QWORD *)&v24 = 0xE000000000000000;
  sub_247C3D840();
  v16 = __swift_project_boxed_opaque_existential_1(&v25, v11);
  swift_bridgeObjectRetain();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  v17 = v23;
  v18 = v24;
  v19 = v16[2];
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v25);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  *a5 = v22;
  a5[1] = v8;
  a5[2] = v10;
  a5[3] = v11;
  a5[8] = v11;
  a5[9] = &protocol witness table for Expression<A>;
  a5[4] = &protocol witness table for Expression<A>;
  a5[5] = v17;
  a5[6] = v18;
  a5[7] = v19;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t += infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_247C11CB0(a1, a2, a3, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))+ infix<A>(_:_:), a4);
}

uint64_t += infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  return sub_247C11D54(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t *))+ infix<A>(_:_:), a3);
}

uint64_t sub_247C1173C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _UNKNOWN **v20;
  _QWORD v21[5];
  _QWORD v22[5];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3C0);
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = a1;
  v22[1] = a2;
  v22[2] = a3;
  v22[3] = v8;
  v21[3] = MEMORY[0x24BEE1768];
  v21[4] = &protocol witness table for Int;
  v21[0] = a4;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v22, inited + 32);
  sub_247BFA88C((uint64_t)v21, inited + 72);
  v17 = 32;
  *(_QWORD *)&v18 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v17);
  swift_bridgeObjectRelease();
  v10 = v19;
  v11 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v15, v10, v11);
  v12 = v15;
  v14 = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  v19 = v8;
  v20 = &protocol witness table for Expression<A>;
  v17 = v12;
  v18 = v14;
  sub_247BFB3FC(&v17, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t += infix<A>(_:_:)(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_247C1191C(a1, a2, a3, a4, a5, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))+ infix<A>(_:_:));
}

{
  return sub_247C1191C(a1, a2, a3, a4, a5, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))+ infix<A>(_:_:));
}

uint64_t sub_247C1191C(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD *__return_ptr, uint64_t *, uint64_t *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  _QWORD v18[3];

  v8 = a1[1];
  v9 = a1[2];
  v10 = *a2;
  v18[0] = *a1;
  v18[1] = v8;
  v18[2] = v9;
  v14 = v18[0];
  v15 = v8;
  v16 = v9;
  v12 = v10;
  v13 = *(_OWORD *)(a2 + 1);
  a6(v17, &v14, &v12);
  v14 = v17[0];
  v15 = v17[1];
  v16 = v17[2];
  <- infix<A>(_:_:)(v18, &v14, a3, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t += infix<A>(_:_:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_247C11BD4(a1, a2, a3, a4, a5, (void (*)(_QWORD *__return_ptr, uint64_t *))+ infix<A>(_:_:));
}

uint64_t -= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_247C11CB0(a1, a2, a3, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))- infix<A>(_:_:), a4);
}

uint64_t -= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  return sub_247C11D54(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t *))- infix<A>(_:_:), a3);
}

uint64_t sub_247C119E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _UNKNOWN **v20;
  _QWORD v21[5];
  _QWORD v22[5];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3C0);
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = a1;
  v22[1] = a2;
  v22[2] = a3;
  v22[3] = v8;
  v21[3] = MEMORY[0x24BEE1768];
  v21[4] = &protocol witness table for Int;
  v21[0] = a4;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v22, inited + 32);
  sub_247BFA88C((uint64_t)v21, inited + 72);
  v17 = 32;
  *(_QWORD *)&v18 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v17);
  swift_bridgeObjectRelease();
  v10 = v19;
  v11 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v15, v10, v11);
  v12 = v15;
  v14 = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  v19 = v8;
  v20 = &protocol witness table for Expression<A>;
  v17 = v12;
  v18 = v14;
  sub_247BFB3FC(&v17, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t -= infix<A>(_:_:)(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_247C1191C(a1, a2, a3, a4, a5, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))- infix<A>(_:_:));
}

{
  return sub_247C1191C(a1, a2, a3, a4, a5, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))- infix<A>(_:_:));
}

uint64_t -= infix<A>(_:_:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_247C11BD4(a1, a2, a3, a4, a5, (void (*)(_QWORD *__return_ptr, uint64_t *))- infix<A>(_:_:));
}

uint64_t sub_247C11BD4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD *__return_ptr, uint64_t *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  _QWORD v15[3];

  v8 = a1[1];
  v9 = a1[2];
  v15[0] = *a1;
  v15[1] = v8;
  v15[2] = v9;
  v11 = v15[0];
  v12 = v8;
  v13 = v9;
  a6(v14, &v11);
  v11 = v14[0];
  v12 = v14[1];
  v13 = v14[2];
  <- infix<A>(_:_:)(v15, &v11, a3, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t *= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_247C11CB0(a1, a2, a3, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))* infix<A>(_:_:), a4);
}

uint64_t *= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  return sub_247C11D54(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t *))* infix<A>(_:_:), a3);
}

uint64_t *= infix<A>(_:_:)(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_247C1191C(a1, a2, a3, a4, a5, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))* infix<A>(_:_:));
}

{
  return sub_247C1191C(a1, a2, a3, a4, a5, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))* infix<A>(_:_:));
}

uint64_t *= infix<A>(_:_:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_247C11BD4(a1, a2, a3, a4, a5, (void (*)(_QWORD *__return_ptr, uint64_t *))* infix<A>(_:_:));
}

uint64_t /= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_247C11CB0(a1, a2, a3, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))/ infix<A>(_:_:), a4);
}

uint64_t sub_247C11CB0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, void (*a4)(_QWORD *__return_ptr, uint64_t *, uint64_t *)@<X5>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18[3];

  v7 = a1[1];
  v8 = a1[2];
  v9 = *a2;
  v18[0] = *a1;
  v18[1] = v7;
  v18[2] = v8;
  v14 = v18[0];
  v15 = v7;
  v16 = v8;
  v12 = v9;
  v13 = *(_OWORD *)(a2 + 1);
  a4(v17, &v14, &v12);
  v14 = v17[0];
  v15 = v17[1];
  v16 = v17[2];
  <- infix<A>(_:_:)(v18, &v14, a3, v10, a5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t /= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  return sub_247C11D54(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t *))/ infix<A>(_:_:), a3);
}

uint64_t sub_247C11D54@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, void (*a3)(_QWORD *__return_ptr, uint64_t *)@<X5>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14[3];

  v6 = a1[1];
  v7 = a1[2];
  v14[0] = *a1;
  v14[1] = v6;
  v14[2] = v7;
  v10 = v14[0];
  v11 = v6;
  v12 = v7;
  a3(v13, &v10);
  v10 = v13[0];
  v11 = v13[1];
  v12 = v13[2];
  <- infix<A>(_:_:)(v14, &v10, a2, v8, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t /= infix<A>(_:_:)(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_247C1191C(a1, a2, a3, a4, a5, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))/ infix<A>(_:_:));
}

{
  return sub_247C1191C(a1, a2, a3, a4, a5, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))/ infix<A>(_:_:));
}

uint64_t /= infix<A>(_:_:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_247C11BD4(a1, a2, a3, a4, a5, (void (*)(_QWORD *__return_ptr, uint64_t *))/ infix<A>(_:_:));
}

uint64_t %= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_247C12070(a1, a2, a3, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))% infix<A>(_:_:), a4);
}

uint64_t %= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  return sub_247C12114(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t *))% infix<A>(_:_:), a3);
}

uint64_t %= infix<A>(_:_:)(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_247C11E2C(a1, a2, a3, a4, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))% infix<A>(_:_:));
}

{
  return sub_247C11E2C(a1, a2, a3, a4, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))% infix<A>(_:_:));
}

uint64_t sub_247C11E2C(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD *__return_ptr, uint64_t *, uint64_t *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];
  _QWORD v17[3];

  v7 = a1[1];
  v8 = a1[2];
  v9 = *a2;
  v17[0] = *a1;
  v17[1] = v7;
  v17[2] = v8;
  v13 = v17[0];
  v14 = v7;
  v15 = v8;
  v11 = v9;
  v12 = *(_OWORD *)(a2 + 1);
  a5(v16, &v13, &v11);
  v13 = v16[0];
  v14 = v16[1];
  v15 = v16[2];
  <- infix<A>(_:_:)(v17, &v13, a3, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t %= infix<A>(_:_:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C11F1C(a1, a2, a3, a4, (void (*)(_QWORD *__return_ptr, uint64_t *))% infix<A>(_:_:));
}

uint64_t <<= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_247C12070(a1, a2, a3, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))<< infix<A>(_:_:), a4);
}

uint64_t <<= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  return sub_247C12114(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t *))<< infix<A>(_:_:), a3);
}

uint64_t <<= infix<A>(_:_:)(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_247C11E2C(a1, a2, a3, a4, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))<< infix<A>(_:_:));
}

{
  return sub_247C11E2C(a1, a2, a3, a4, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))<< infix<A>(_:_:));
}

uint64_t <<= infix<A>(_:_:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C11F1C(a1, a2, a3, a4, (void (*)(_QWORD *__return_ptr, uint64_t *))<< infix<A>(_:_:));
}

uint64_t sub_247C11F1C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD *__return_ptr, uint64_t *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[3];
  _QWORD v14[3];

  v7 = a1[1];
  v8 = a1[2];
  v14[0] = *a1;
  v14[1] = v7;
  v14[2] = v8;
  v10 = v14[0];
  v11 = v7;
  v12 = v8;
  a5(v13, &v10);
  v10 = v13[0];
  v11 = v13[1];
  v12 = v13[2];
  <- infix<A>(_:_:)(v14, &v10, a3, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t >>= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_247C12070(a1, a2, a3, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))>> infix<A>(_:_:), a4);
}

uint64_t >>= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  return sub_247C12114(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t *))>> infix<A>(_:_:), a3);
}

uint64_t >>= infix<A>(_:_:)(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_247C11E2C(a1, a2, a3, a4, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))>> infix<A>(_:_:));
}

{
  return sub_247C11E2C(a1, a2, a3, a4, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))>> infix<A>(_:_:));
}

uint64_t >>= infix<A>(_:_:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C11F1C(a1, a2, a3, a4, (void (*)(_QWORD *__return_ptr, uint64_t *))>> infix<A>(_:_:));
}

uint64_t &= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_247C12070(a1, a2, a3, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))& infix<A>(_:_:), a4);
}

uint64_t &= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  return sub_247C12114(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t *))& infix<A>(_:_:), a3);
}

uint64_t &= infix<A>(_:_:)(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_247C11E2C(a1, a2, a3, a4, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))& infix<A>(_:_:));
}

{
  return sub_247C11E2C(a1, a2, a3, a4, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))& infix<A>(_:_:));
}

uint64_t &= infix<A>(_:_:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C11F1C(a1, a2, a3, a4, (void (*)(_QWORD *__return_ptr, uint64_t *))& infix<A>(_:_:));
}

uint64_t |= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_247C12070(a1, a2, a3, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))| infix<A>(_:_:), a4);
}

uint64_t |= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  return sub_247C12114(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t *))| infix<A>(_:_:), a3);
}

uint64_t |= infix<A>(_:_:)(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_247C11E2C(a1, a2, a3, a4, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))| infix<A>(_:_:));
}

{
  return sub_247C11E2C(a1, a2, a3, a4, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))| infix<A>(_:_:));
}

uint64_t |= infix<A>(_:_:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C11F1C(a1, a2, a3, a4, (void (*)(_QWORD *__return_ptr, uint64_t *))| infix<A>(_:_:));
}

uint64_t ^= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_247C12070(a1, a2, a3, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))^ infix<A>(_:_:), a4);
}

uint64_t sub_247C12070@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, void (*a4)(_QWORD *__return_ptr, uint64_t *, uint64_t *)@<X4>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18[3];

  v7 = a1[1];
  v8 = a1[2];
  v9 = *a2;
  v18[0] = *a1;
  v18[1] = v7;
  v18[2] = v8;
  v14 = v18[0];
  v15 = v7;
  v16 = v8;
  v12 = v9;
  v13 = *(_OWORD *)(a2 + 1);
  a4(v17, &v14, &v12);
  v14 = v17[0];
  v15 = v17[1];
  v16 = v17[2];
  <- infix<A>(_:_:)(v18, &v14, a3, v10, a5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ^= infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  return sub_247C12114(a1, a2, (void (*)(_QWORD *__return_ptr, uint64_t *))^ infix<A>(_:_:), a3);
}

uint64_t sub_247C12114@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, void (*a3)(_QWORD *__return_ptr, uint64_t *)@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[3];
  uint64_t v14[3];

  v6 = a1[1];
  v7 = a1[2];
  v14[0] = *a1;
  v14[1] = v6;
  v14[2] = v7;
  v10 = v14[0];
  v11 = v6;
  v12 = v7;
  a3(v13, &v10);
  v10 = v13[0];
  v11 = v13[1];
  v12 = v13[2];
  <- infix<A>(_:_:)(v14, &v10, a2, v8, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ^= infix<A>(_:_:)(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_247C11E2C(a1, a2, a3, a4, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))^ infix<A>(_:_:));
}

{
  return sub_247C11E2C(a1, a2, a3, a4, (void (*)(_QWORD *__return_ptr, uint64_t *, uint64_t *))^ infix<A>(_:_:));
}

uint64_t ^= infix<A>(_:_:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C11F1C(a1, a2, a3, a4, (void (*)(_QWORD *__return_ptr, uint64_t *))^ infix<A>(_:_:));
}

double ++ postfix<A>(_:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_247C121E0(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))sub_247C1173C, a3);
}

double ++ postfix<A>(_:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_247C122E8(a1, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))sub_247C1173C, a2);
}

double -- postfix<A>(_:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_247C121E0(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))sub_247C119E8, a3);
}

double sub_247C121E0@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3C0);
  v21 = v8;
  *(_QWORD *)&v22 = v7;
  *((_QWORD *)&v22 + 1) = v9;
  v13 = type metadata accessor for Expression(0, a2, v11, v12);
  v14 = sub_247C123F0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = MEMORY[0x24958EDF4]("0.", v13);
  ExpressionType.init<A>(_:)((uint64_t)&v21, v10, v13, v14, v15);
  v16 = v23;
  v17 = v24;
  v18 = v25;
  a3(&v21, v23, v24, v25, 1);
  v19 = v21;
  *(_QWORD *)a4 = v16;
  *(_QWORD *)(a4 + 8) = v17;
  *(_QWORD *)(a4 + 16) = v18;
  *(_QWORD *)(a4 + 24) = v10;
  *(_QWORD *)(a4 + 64) = v10;
  *(_QWORD *)(a4 + 72) = &protocol witness table for Expression<A>;
  *(_QWORD *)(a4 + 32) = &protocol witness table for Expression<A>;
  *(_QWORD *)(a4 + 40) = v19;
  result = *(double *)&v22;
  *(_OWORD *)(a4 + 48) = v22;
  return result;
}

double -- postfix<A>(_:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_247C122E8(a1, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))sub_247C119E8, a2);
}

double sub_247C122E8@<D0>(uint64_t *a1@<X0>, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double result;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *a1;
  v5 = a1[1];
  v7 = a1[2];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3C0);
  v20 = v6;
  *(_QWORD *)&v21 = v5;
  *((_QWORD *)&v21 + 1) = v7;
  v9 = sub_247C3D9B4();
  v12 = type metadata accessor for Expression(0, v9, v10, v11);
  v13 = sub_247C123F0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = MEMORY[0x24958EDF4]("0.", v12);
  ExpressionType.init<A>(_:)((uint64_t)&v20, v8, v12, v13, v14);
  v15 = v22;
  v16 = v23;
  v17 = v24;
  a2(&v20, v22, v23, v24, 1);
  v18 = v20;
  *(_QWORD *)a3 = v15;
  *(_QWORD *)(a3 + 8) = v16;
  *(_QWORD *)(a3 + 16) = v17;
  *(_QWORD *)(a3 + 24) = v8;
  *(_QWORD *)(a3 + 64) = v8;
  *(_QWORD *)(a3 + 72) = &protocol witness table for Expression<A>;
  *(_QWORD *)(a3 + 32) = &protocol witness table for Expression<A>;
  *(_QWORD *)(a3 + 40) = v18;
  result = *(double *)&v21;
  *(_OWORD *)(a3 + 48) = v21;
  return result;
}

unint64_t sub_247C123F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576ED3C8;
  if (!qword_2576ED3C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2576ED3C0);
    result = MEMORY[0x24958EDF4]("0.", v1);
    atomic_store(result, (unint64_t *)&qword_2576ED3C8);
  }
  return result;
}

uint64_t *assignWithCopy for Setter(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  __swift_assign_boxed_opaque_existential_1(a1 + 5, a2 + 5);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for Setter(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for Setter(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Setter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t Blob.description.getter()
{
  Blob.toHex()();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  return 10104;
}

_QWORD *Blob.init(bytes:length:)@<X0>(const void *a1@<X0>, int64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *result;

  result = sub_247BFBFF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t Blob.bytes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Blob.init(bytes:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

Swift::String __swiftcall Blob.toHex()()
{
  uint64_t *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  Swift::String result;
  uint64_t v16;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    v16 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_247C00908(0, v2, 0);
    sub_247C12F98();
    v3 = 0;
    do
    {
      v4 = *(unsigned __int8 *)(v1 + v3 + 32);
      if (v4 >= 0x10)
        v5 = 0;
      else
        v5 = 48;
      if (v4 >= 0x10)
        v6 = 0xE000000000000000;
      else
        v6 = 0xE100000000000000;
      sub_247C3D87C();
      swift_bridgeObjectRetain();
      sub_247C3D840();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(v16 + 16);
      v7 = *(_QWORD *)(v16 + 24);
      if (v8 >= v7 >> 1)
        sub_247C00908((char *)(v7 > 1), v8 + 1, 1);
      ++v3;
      *(_QWORD *)(v16 + 16) = v8 + 1;
      v9 = v16 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v5;
      *(_QWORD *)(v9 + 40) = v6;
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455450);
  sub_247C0BE54();
  v10 = sub_247C3D78C();
  v12 = v11;
  swift_bridgeObjectRelease();
  v13 = v10;
  v14 = v12;
  result._object = v14;
  result._countAndFlagsBits = v13;
  return result;
}

uint64_t sub_247C1291C()
{
  Blob.toHex()();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  return 10104;
}

BOOL sub_247C12980(uint64_t *a1, uint64_t *a2)
{
  return sub_247C12998(*a1, *a2);
}

BOOL == infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_247C12998(*a1, *a2);
}

BOOL sub_247C12998(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BOOL8 result;
  uint64_t v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  int v7;
  int v8;
  int v9;
  int v10;
  BOOL v12;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
    return 0;
  if (v2 == 1)
    return 1;
  v4 = v2 - 2;
  v5 = (unsigned __int8 *)(a1 + 33);
  v6 = (unsigned __int8 *)(a2 + 33);
  do
  {
    v8 = *v5++;
    v7 = v8;
    v10 = *v6++;
    v9 = v10;
    v12 = v4-- != 0;
    result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

_QWORD *sub_247C12A0C(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_247C12E60(a1, a2, a3, *v3, qword_254455398, &qword_254455340);
  *v3 = result;
  return result;
}

_QWORD *sub_247C12A38(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_247C12AF4(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *sub_247C12A54(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_247C12C28(a1, a2, a3, *v3, &qword_2576ED3D8, &qword_2576ED3E0);
  *v3 = result;
  return result;
}

_QWORD *sub_247C12A80(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_247C12C28(a1, a2, a3, *v3, &qword_2576ED3E8, &qword_2576ED3F0);
  *v3 = result;
  return result;
}

char *sub_247C12AAC(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_247C12D4C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

_QWORD *sub_247C12AC8(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_247C12E60(a1, a2, a3, *v3, &qword_2544552E0, &qword_2544552A0);
  *v3 = result;
  return result;
}

_QWORD *sub_247C12AF4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v10 + 4 >= &a4[5 * v8 + 4])
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

_QWORD *sub_247C12C28(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;

  v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 25;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v8 & 1) != 0)
  {
    if (v13 != a4 || v13 + 4 >= &a4[v11 + 4])
      memmove(v13 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

char *sub_247C12D4C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED398);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[80 * v8])
      memmove(v12, v13, 80 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

_QWORD *sub_247C12E60(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;

  v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v8 & 1) != 0)
  {
    if (v13 != a4 || v13 + 4 >= &a4[5 * v11 + 4])
      memmove(v13 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

unint64_t sub_247C12F98()
{
  unint64_t result;

  result = qword_2576ED3D0;
  if (!qword_2576ED3D0)
  {
    result = MEMORY[0x24958EDF4](MEMORY[0x24BEE4298], MEMORY[0x24BEE4260]);
    atomic_store(result, (unint64_t *)&qword_2576ED3D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for Blob()
{
  return &type metadata for Blob;
}

uint64_t ExpressionType.init(literal:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t))(a4 + 40))(a1, a2, MEMORY[0x24BEE4AF8], a3);
}

Swift::String __swiftcall Expressible.asSQL()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  unint64_t v7;
  Swift::String result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 8))(&v9);
  v1 = v11;
  v2 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v2 = v9 & 0xFFFFFFFFFFFFLL;
  v11 = 0;
  v12 = v2;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v3 = sub_247C3D864();
  if (!v4)
  {
LABEL_13:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v3 = 0;
    v4 = (void *)0xE000000000000000;
    goto LABEL_16;
  }
  v5 = v3;
  v6 = v4;
  v7 = 0;
  while (1)
  {
    if (v5 != 63 || v6 != (void *)0xE100000000000000)
    {
      v3 = sub_247C3DAD4();
      if ((v3 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        goto LABEL_6;
      }
    }
    if ((v7 & 0x8000000000000000) != 0)
      break;
    if (v7 >= *(_QWORD *)(v1 + 16))
      goto LABEL_15;
    sub_247C0FD70(v1 + 32 + 40 * v7++);
LABEL_6:
    swift_bridgeObjectRetain();
    sub_247C3D840();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = sub_247C3D864();
    v5 = v3;
    v6 = v4;
    if (!v4)
      goto LABEL_13;
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

uint64_t ExpressionType.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_247BFD20C(0, 0xE000000000000000, a1, a2, 34, 0xE100000000000000);
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_QWORD, unint64_t, _QWORD, uint64_t, uint64_t))(a4 + 40))(0, 0xE000000000000000, MEMORY[0x24BEE4AF8], a3, a4);
}

uint64_t sub_247C132A8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v2 = v1;
  v4 = sub_247C3D6CC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
  v8 = swift_allocObject();
  v9 = MEMORY[0x24BEE0D00];
  *(_OWORD *)(v8 + 16) = xmmword_247C3E1D0;
  *(_QWORD *)(v8 + 56) = v9;
  *(_QWORD *)(v8 + 64) = &protocol witness table for String;
  if (qword_2544552F8 != -1)
    swift_once();
  swift_beginAccess();
  v10 = (id)qword_254455318;
  v11 = (void *)sub_247C3D6B4();
  v12 = objc_msgSend(v10, sel_stringFromDate_, v11);

  v13 = sub_247C3D7B0();
  v15 = v14;

  *(_QWORD *)(v8 + 32) = v13;
  *(_QWORD *)(v8 + 40) = v15;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *a1 = 63;
  a1[1] = 0xE100000000000000;
  a1[2] = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C13444@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_247C3E1D0;
  *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v7 + 64) = &protocol witness table for String;
  *(_QWORD *)(v7 + 32) = _s10Foundation4UUIDV11SwiftSQLiteE13datatypeValueSSvg_0();
  *(_QWORD *)(v7 + 40) = v8;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  *a2 = 63;
  a2[1] = 0xE100000000000000;
  a2[2] = v7;
  return swift_bridgeObjectRelease();
}

uint64_t Expression.template.getter()
{
  uint64_t v0;

  v0 = sub_247BFD1D4();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t Expression.template.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Expression.template.modify())()
{
  return nullsub_1;
}

uint64_t Expression.bindings.getter()
{
  sub_247BFD198();
  return swift_bridgeObjectRetain();
}

uint64_t Expression.bindings.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*Expression.bindings.modify())()
{
  return nullsub_1;
}

uint64_t ExpressionType.asc.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  *(_QWORD *)(inited + 56) = a1;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(a2 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 72) = 4412225;
  *(_QWORD *)(inited + 80) = 0xE300000000000000;
  *(_QWORD *)(inited + 88) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 96) = v9;
  sub_247BFECF4(inited, a3);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  return swift_arrayDestroy();
}

uint64_t ExpressionType.desc.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t inited;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  *(_QWORD *)(inited + 56) = a1;
  *(_QWORD *)(inited + 64) = *(_QWORD *)(a2 + 8);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 72) = 1129530692;
  *(_QWORD *)(inited + 80) = 0xE400000000000000;
  *(_QWORD *)(inited + 88) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 96) = v9;
  sub_247BFECF4(inited, a3);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  return swift_arrayDestroy();
}

uint64_t static ExpressionType<>.null.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  swift_getAssociatedTypeWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_247C3D9B4();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))((char *)&v13 - v10, 1, 1, AssociatedTypeWitness);
  return ExpressionType<>.init(value:)((uint64_t)v11, a1, a2, a3, a4);
}

uint64_t sub_247C138D0()
{
  uint64_t result;

  sub_247BFD20C(0, 0xE000000000000000, 0x4449574F52, 0xE500000000000000, 34, 0xE100000000000000);
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  result = sub_247C3D780();
  qword_2576ED3F8 = 0;
  unk_2576ED400 = 0xE000000000000000;
  qword_2576ED408 = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t rowid.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_2576ED370 != -1)
    swift_once();
  v2 = unk_2576ED400;
  v3 = qword_2576ED408;
  *a1 = qword_2576ED3F8;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t cast<A, B>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v7;

  v7 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  (*(void (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  *a4 = 0x282054534143;
  a4[1] = 0xE600000000000000;
  a4[2] = v7;
  return swift_bridgeObjectRetain();
}

{
  uint64_t v7;

  v7 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  (*(void (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  sub_247C3D9B4();
  *a4 = 0x282054534143;
  a4[1] = 0xE600000000000000;
  a4[2] = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_247C13BD4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_247C3E1D0;
  *(_QWORD *)(v6 + 56) = a1;
  *(_QWORD *)(v6 + 64) = &protocol witness table for Double;
  *(_QWORD *)(v6 + 32) = v5;
  *a2 = 63;
  a2[1] = 0xE100000000000000;
  a2[2] = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C13C50@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_247C3E1D0;
  *(_QWORD *)(v6 + 56) = a1;
  *(_QWORD *)(v6 + 64) = &protocol witness table for Int64;
  *(_QWORD *)(v6 + 32) = v5;
  *a2 = 63;
  a2[1] = 0xE100000000000000;
  a2[2] = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C13CC4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = *v2;
  v5 = v2[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_247C3E1D0;
  *(_QWORD *)(v7 + 56) = a1;
  *(_QWORD *)(v7 + 64) = &protocol witness table for String;
  *(_QWORD *)(v7 + 32) = v6;
  *(_QWORD *)(v7 + 40) = v5;
  *a2 = 63;
  a2[1] = 0xE100000000000000;
  a2[2] = v7;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C13D40@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_247C3E1D0;
  *(_QWORD *)(v6 + 56) = a1;
  *(_QWORD *)(v6 + 64) = &protocol witness table for Blob;
  *(_QWORD *)(v6 + 32) = v5;
  *a2 = 63;
  a2[1] = 0xE100000000000000;
  a2[2] = v6;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C13DBC@<X0>(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
  v4 = swift_allocObject();
  v5 = MEMORY[0x24BEE4008];
  *(_OWORD *)(v4 + 16) = xmmword_247C3E1D0;
  *(_QWORD *)(v4 + 56) = v5;
  *(_QWORD *)(v4 + 64) = &protocol witness table for Int64;
  *(_QWORD *)(v4 + 32) = v3;
  *a1 = 63;
  a1[1] = 0xE100000000000000;
  a1[2] = v4;
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C13E2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return ExpressionType.expression.getter(a1, (uint64_t)&protocol witness table for Select<A>, a2);
}

uint64_t sub_247C13E3C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[1];
  v3 = v1[2];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of ExpressionType.template.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ExpressionType.bindings.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ExpressionType.init(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t sub_247C13E84()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t dispatch thunk of Expressible.expression.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_247C13E94@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *);
  uint64_t v28;

  v25 = a5;
  v26 = a2;
  v28 = a4;
  v27 = a1;
  v24 = a3;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v10);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v12, v24);
    v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t (*Connection.createFunction<A>(_:deterministic:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7))()
{
  _QWORD *v14;
  uint64_t (*v15)@<X0>(uint64_t@<X0>, _QWORD *@<X8>);
  uint64_t v16;
  uint64_t v17;
  uint64_t (*result)();
  _QWORD *v19;
  uint64_t v20;

  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a6;
  v14[3] = a7;
  v14[4] = a4;
  v14[5] = a5;
  swift_retain();
  v15 = sub_247C1415C(a1, a2, 0, a3, (uint64_t)sub_247C1413C, (uint64_t)v14, a6, a7);
  v17 = v16;
  result = (uint64_t (*)())swift_release();
  if (!v20)
  {
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = a6;
    v19[3] = a7;
    v19[4] = v15;
    v19[5] = v17;
    return sub_247C14250;
  }
  return result;
}

{
  _QWORD *v14;
  uint64_t (*v15)@<X0>(uint64_t@<X0>, _QWORD *@<X8>);
  uint64_t v16;
  uint64_t v17;
  uint64_t (*result)();
  _QWORD *v19;
  uint64_t v20;

  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a6;
  v14[3] = a7;
  v14[4] = a4;
  v14[5] = a5;
  swift_retain();
  v15 = sub_247C1436C(a1, a2, 0, a3, (uint64_t)sub_247C16854, (uint64_t)v14, a6, a7);
  v17 = v16;
  result = (uint64_t (*)())swift_release();
  if (!v20)
  {
    v19 = (_QWORD *)swift_allocObject();
    v19[2] = a6;
    v19[3] = a7;
    v19[4] = v15;
    v19[5] = v17;
    return sub_247C16850;
  }
  return result;
}

uint64_t sub_247C14118()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_247C1413C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t (*sub_247C1415C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8))@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v16;
  _QWORD *v17;

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a7;
  v16[3] = a8;
  v16[4] = a5;
  v16[5] = a6;
  swift_retain();
  Connection.createFunction(_:argumentCount:deterministic:_:)(a1, a2, a3, 0, a4, (uint64_t)sub_247C16838, (uint64_t)v16);
  swift_release();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a7;
  v17[3] = a8;
  v17[4] = a1;
  v17[5] = a2;
  swift_bridgeObjectRetain();
  return sub_247C16844;
}

uint64_t sub_247C14250()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 32))(MEMORY[0x24BEE4AF8]);
}

uint64_t (*sub_247C1436C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8))@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v16;
  _QWORD *v17;

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a7;
  v16[3] = a8;
  v16[4] = a5;
  v16[5] = a6;
  swift_retain();
  Connection.createFunction(_:argumentCount:deterministic:_:)(a1, a2, a3, 0, a4, (uint64_t)sub_247C166E4, (uint64_t)v16);
  swift_release();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a7;
  v17[3] = a8;
  v17[4] = a1;
  v17[5] = a2;
  swift_bridgeObjectRetain();
  return sub_247C1682C;
}

uint64_t Connection.createFunction<A, B>(_:deterministic:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, _QWORD *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v23;

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  v16[5] = a9;
  v16[6] = a4;
  v16[7] = a5;
  swift_retain();
  v17 = sub_247C1415C(a1, a2, 1, a3, (uint64_t)sub_247C145A0, (uint64_t)v16, a6, a8);
  v19 = v18;
  result = swift_release();
  if (!v23)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    v21[5] = a9;
    result = (uint64_t)sub_247C145A4;
    v21[6] = v17;
    v21[7] = v19;
  }
  return result;
}

{
  _QWORD *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, _QWORD *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v23;

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  v16[5] = a9;
  v16[6] = a4;
  v16[7] = a5;
  swift_retain();
  v17 = sub_247C1415C(a1, a2, 1, a3, (uint64_t)sub_247C146CC, (uint64_t)v16, a6, a8);
  v19 = v18;
  result = swift_release();
  if (!v23)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    v21[5] = a9;
    result = (uint64_t)sub_247C14714;
    v21[6] = v17;
    v21[7] = v19;
  }
  return result;
}

{
  _QWORD *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, _QWORD *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v23;

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  v16[5] = a9;
  v16[6] = a4;
  v16[7] = a5;
  swift_retain();
  v17 = sub_247C1436C(a1, a2, 1, a3, (uint64_t)sub_247C145A0, (uint64_t)v16, a6, a8);
  v19 = v18;
  result = swift_release();
  if (!v23)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    v21[5] = a9;
    result = (uint64_t)sub_247C145A4;
    v21[6] = v17;
    v21[7] = v19;
  }
  return result;
}

{
  _QWORD *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, _QWORD *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v23;

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  v16[5] = a9;
  v16[6] = a4;
  v16[7] = a5;
  swift_retain();
  v17 = sub_247C1436C(a1, a2, 1, a3, (uint64_t)sub_247C14C58, (uint64_t)v16, a6, a8);
  v19 = v18;
  result = swift_release();
  if (!v23)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    v21[5] = a9;
    result = (uint64_t)sub_247C14714;
    v21[6] = v17;
    v21[7] = v19;
  }
  return result;
}

uint64_t sub_247C1457C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_247C145A4(uint64_t a1)
{
  return sub_247C14720(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_247C14924);
}

uint64_t sub_247C146CC(uint64_t a1)
{
  return sub_247C146E0(a1, (uint64_t)sub_247C168F0, (void (*)(char *, char *))sub_247C1686C);
}

uint64_t sub_247C146E0(uint64_t a1, uint64_t a2, void (*a3)(char *, char *))
{
  uint64_t *v3;

  return sub_247C14AF0(a1, v3[6], v3[7], v3[2], v3[3], v3[4], v3[5], a2, a3);
}

uint64_t sub_247C14714(uint64_t a1)
{
  return sub_247C14720(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_247C14C6C);
}

uint64_t sub_247C14720(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_247C14860(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  v7 = *(_QWORD *)(a5 - 8);
  result = MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v12 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(result + 16))
  {
    sub_247C100CC(result + 32, a5, v9);
    a2(v11);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v11, a5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_247C14904(uint64_t a1)
{
  uint64_t v1;

  return sub_247C14860(a1, *(void (**)(char *))(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_247C14924(uint64_t *a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_247C3E1D0;
  *(_QWORD *)(v10 + 56) = type metadata accessor for Expression(0, a5, v11, v12);
  *(_QWORD *)(v10 + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v10 + 32) = v8;
  *(_QWORD *)(v10 + 40) = v7;
  *(_QWORD *)(v10 + 48) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a2(v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C14AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(char *, char *))
{
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  v24 = a6;
  v25 = a8;
  v15 = sub_247C3D9B4();
  v16 = *(_QWORD *)(v15 - 8);
  result = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v23 - v18;
  if (*(_QWORD *)(a1 + 16))
  {
    v23[1] = v23;
    v23[2] = a3;
    v23[0] = a2;
    v20 = MEMORY[0x24BDAC7A8](result);
    v23[-2] = a5;
    v23[-1] = a7;
    MEMORY[0x24BDAC7A8](v20);
    v23[-6] = a4;
    v23[-5] = a5;
    v23[-4] = v24;
    v23[-3] = a7;
    v23[-2] = v25;
    v23[-1] = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
    sub_247C13E94(a9, (uint64_t)&v23[-8], MEMORY[0x24BEE4078], a5, v22, (uint64_t)v19);
    ((void (*)(char *))v23[0])(v19);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_247C14C58(uint64_t a1)
{
  return sub_247C146E0(a1, (uint64_t)sub_247C168F0, (void (*)(char *, char *))sub_247C16370);
}

uint64_t sub_247C14C6C(uint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_247C3E1D0;
  v7 = sub_247C3D9B4();
  *(_QWORD *)(v6 + 56) = type metadata accessor for Expression(0, v7, v8, v9);
  *(_QWORD *)(v6 + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v6 + 32) = v4;
  *(_QWORD *)(v6 + 40) = v3;
  *(_QWORD *)(v6 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a2(v6);
  return swift_bridgeObjectRelease();
}

uint64_t Connection.createFunction<A, B, C>(_:deterministic:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  _QWORD *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, _QWORD *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v25;

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  v16[5] = a9;
  v16[6] = a10;
  v16[7] = a11;
  v16[8] = a4;
  v16[9] = a5;
  swift_retain();
  v17 = sub_247C1415C(a1, a2, 2, a3, (uint64_t)sub_247C14E70, (uint64_t)v16, a6, a9);
  v19 = v18;
  result = swift_release();
  if (!v25)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    v21[5] = a9;
    v21[6] = a10;
    v21[7] = a11;
    result = (uint64_t)sub_247C14E74;
    v21[8] = v17;
    v21[9] = v19;
  }
  return result;
}

{
  _QWORD *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, _QWORD *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v25;

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  v16[5] = a9;
  v16[6] = a10;
  v16[7] = a11;
  v16[8] = a4;
  v16[9] = a5;
  swift_retain();
  v17 = sub_247C1415C(a1, a2, 2, a3, (uint64_t)sub_247C14FA4, (uint64_t)v16, a6, a9);
  v19 = v18;
  result = swift_release();
  if (!v25)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    v21[5] = a9;
    v21[6] = a10;
    v21[7] = a11;
    result = (uint64_t)sub_247C15000;
    v21[8] = v17;
    v21[9] = v19;
  }
  return result;
}

{
  _QWORD *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, _QWORD *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v25;

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  v16[5] = a9;
  v16[6] = a10;
  v16[7] = a11;
  v16[8] = a4;
  v16[9] = a5;
  swift_retain();
  v17 = sub_247C1415C(a1, a2, 2, a3, (uint64_t)sub_247C15164, (uint64_t)v16, a6, a9);
  v19 = v18;
  result = swift_release();
  if (!v25)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    v21[5] = a9;
    v21[6] = a10;
    v21[7] = a11;
    result = (uint64_t)sub_247C15180;
    v21[8] = v17;
    v21[9] = v19;
  }
  return result;
}

{
  _QWORD *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, _QWORD *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v25;

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  v16[5] = a9;
  v16[6] = a10;
  v16[7] = a11;
  v16[8] = a4;
  v16[9] = a5;
  swift_retain();
  v17 = sub_247C1436C(a1, a2, 2, a3, (uint64_t)sub_247C14E70, (uint64_t)v16, a6, a9);
  v19 = v18;
  result = swift_release();
  if (!v25)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    v21[5] = a9;
    v21[6] = a10;
    v21[7] = a11;
    result = (uint64_t)sub_247C14E74;
    v21[8] = v17;
    v21[9] = v19;
  }
  return result;
}

{
  _QWORD *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, _QWORD *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v25;

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  v16[5] = a9;
  v16[6] = a10;
  v16[7] = a11;
  v16[8] = a4;
  v16[9] = a5;
  swift_retain();
  v17 = sub_247C1415C(a1, a2, 2, a3, (uint64_t)sub_247C15620, (uint64_t)v16, a6, a9);
  v19 = v18;
  result = swift_release();
  if (!v25)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    v21[5] = a9;
    v21[6] = a10;
    v21[7] = a11;
    result = (uint64_t)sub_247C1568C;
    v21[8] = v17;
    v21[9] = v19;
  }
  return result;
}

{
  _QWORD *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, _QWORD *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v25;

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  v16[5] = a9;
  v16[6] = a10;
  v16[7] = a11;
  v16[8] = a4;
  v16[9] = a5;
  swift_retain();
  v17 = sub_247C1436C(a1, a2, 2, a3, (uint64_t)sub_247C14FA4, (uint64_t)v16, a6, a9);
  v19 = v18;
  result = swift_release();
  if (!v25)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    v21[5] = a9;
    v21[6] = a10;
    v21[7] = a11;
    result = (uint64_t)sub_247C15000;
    v21[8] = v17;
    v21[9] = v19;
  }
  return result;
}

{
  _QWORD *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, _QWORD *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v25;

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  v16[5] = a9;
  v16[6] = a10;
  v16[7] = a11;
  v16[8] = a4;
  v16[9] = a5;
  swift_retain();
  v17 = sub_247C1436C(a1, a2, 2, a3, (uint64_t)sub_247C15164, (uint64_t)v16, a6, a9);
  v19 = v18;
  result = swift_release();
  if (!v25)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    v21[5] = a9;
    v21[6] = a10;
    v21[7] = a11;
    result = (uint64_t)sub_247C15180;
    v21[8] = v17;
    v21[9] = v19;
  }
  return result;
}

{
  _QWORD *v16;
  uint64_t (*v17)@<X0>(uint64_t@<X0>, _QWORD *@<X8>);
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v25;

  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a8;
  v16[5] = a9;
  v16[6] = a10;
  v16[7] = a11;
  v16[8] = a4;
  v16[9] = a5;
  swift_retain();
  v17 = sub_247C1436C(a1, a2, 2, a3, (uint64_t)sub_247C16210, (uint64_t)v16, a6, a9);
  v19 = v18;
  result = swift_release();
  if (!v25)
  {
    v21 = (_QWORD *)swift_allocObject();
    v21[2] = a6;
    v21[3] = a7;
    v21[4] = a8;
    v21[5] = a9;
    v21[6] = a10;
    v21[7] = a11;
    result = (uint64_t)sub_247C1568C;
    v21[8] = v17;
    v21[9] = v19;
  }
  return result;
}

uint64_t sub_247C14E4C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_247C14E74(uint64_t a1, uint64_t a2)
{
  return sub_247C1500C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_247C15408);
}

uint64_t sub_247C14FA4(uint64_t a1)
{
  return sub_247C14FC0(a1, (uint64_t)sub_247C168F0, (uint64_t)sub_247C16858, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))sub_247C157BC);
}

uint64_t sub_247C14FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))
{
  _QWORD *v4;

  return a4(a1, v4[8], v4[9], v4[2], v4[3], v4[4], v4[5], v4[6], v4[7], a2, a3);
}

uint64_t sub_247C15000(uint64_t a1, uint64_t a2)
{
  return sub_247C1500C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_247C15998);
}

uint64_t sub_247C1500C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2, v3[8], v3[9], v3[2], v3[3], v3[4], v3[5], v3[6], v3[7]);
}

uint64_t sub_247C15164(uint64_t a1)
{
  return sub_247C14FC0(a1, (uint64_t)sub_247C168F0, (uint64_t)sub_247C16858, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))sub_247C15BBC);
}

uint64_t sub_247C15180(uint64_t a1, uint64_t a2)
{
  return sub_247C1500C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_247C15D84);
}

uint64_t sub_247C152B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  void (*v19)(char *, char *);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *);

  v12 = *(_QWORD *)(a6 - 8);
  v13 = MEMORY[0x24BDAC7A8](a1);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v16 - 8);
  result = MEMORY[0x24BDAC7A8](v13);
  v22 = (char *)&v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(result + 16);
  if (v23)
  {
    v25 = v19;
    result = sub_247C100CC(a1 + 32, a5, v20);
    if (v23 != 1)
    {
      sub_247C100CC(a1 + 72, a6, a9);
      v25(v22, v15);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, a6);
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v22, a5);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_247C153D8(uint64_t a1)
{
  uint64_t *v1;

  return sub_247C152B0(a1, v1[8], v1[9], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_247C15408(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v9 = *a1;
  v10 = a1[1];
  v11 = a1[2];
  v12 = *a2;
  v13 = a2[1];
  v14 = a2[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_247C3E1B0;
  *(_QWORD *)(v15 + 56) = type metadata accessor for Expression(0, a6, v16, v17);
  *(_QWORD *)(v15 + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v15 + 32) = v9;
  *(_QWORD *)(v15 + 40) = v10;
  *(_QWORD *)(v15 + 48) = v11;
  *(_QWORD *)(v15 + 96) = type metadata accessor for Expression(0, a7, v18, v19);
  *(_QWORD *)(v15 + 104) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v15 + 72) = v12;
  *(_QWORD *)(v15 + 80) = v13;
  *(_QWORD *)(v15 + 88) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a3(v15);
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C15620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_247C15644(a1, (uint64_t)sub_247C168F0, (void (*)(char *, char *))sub_247C16858, (uint64_t)sub_247C168F0, (uint64_t)sub_247C16858, a2);
}

uint64_t sub_247C15644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, char *)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;

  return sub_247C15FA8(a1, *(void (**)(char *, uint64_t))(v6 + 64), *(_QWORD *)(v6 + 72), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), *(_QWORD *)(v6 + 48), a6, *(_QWORD *)(v6 + 56), a2, a3, a4, a5);
}

uint64_t sub_247C1568C(uint64_t a1, uint64_t a2)
{
  return sub_247C1500C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_247C16234);
}

uint64_t sub_247C157BC@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, void (*a12)(char *, char *))
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *);
  void (*v38)(char *, char *);
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v41 = a4;
  v42 = a7;
  v40 = a9;
  v18 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_247C3D9B4();
  result = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v32 - v24;
  v26 = *(_QWORD *)(a1 + 16);
  if (v26)
  {
    v33 = v23;
    v34 = result;
    v35 = v18;
    v36 = a3;
    v39 = &v32;
    v37 = a2;
    v38 = a12;
    v27 = MEMORY[0x24BDAC7A8](result);
    *(&v32 - 2) = a5;
    *(&v32 - 1) = a8;
    MEMORY[0x24BDAC7A8](v27);
    *(&v32 - 8) = v41;
    *(&v32 - 7) = a5;
    v28 = v42;
    *(&v32 - 6) = a6;
    *(&v32 - 5) = v28;
    *(&v32 - 4) = a8;
    *(&v32 - 3) = a10;
    *(&v32 - 2) = v29;
    *(&v32 - 1) = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
    result = sub_247C13E94(v38, (uint64_t)(&v32 - 10), MEMORY[0x24BEE4078], a5, v31, (uint64_t)v25);
    if (v26 != 1)
    {
      sub_247C100CC(a1 + 72, a6, a10);
      v37(v25, v20);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v20, a6);
      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v25, v34);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_247C15998(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v8 = *a1;
  v9 = a1[1];
  v10 = a1[2];
  v11 = *a2;
  v12 = a2[1];
  v13 = a2[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_247C3E1B0;
  v15 = sub_247C3D9B4();
  *(_QWORD *)(v14 + 56) = type metadata accessor for Expression(0, v15, v16, v17);
  *(_QWORD *)(v14 + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v14 + 32) = v8;
  *(_QWORD *)(v14 + 40) = v9;
  *(_QWORD *)(v14 + 48) = v10;
  *(_QWORD *)(v14 + 96) = type metadata accessor for Expression(0, a7, v18, v19);
  *(_QWORD *)(v14 + 104) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v14 + 72) = v11;
  *(_QWORD *)(v14 + 80) = v12;
  *(_QWORD *)(v14 + 88) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a3(v14);
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C15BBC@<X0>(uint64_t a1@<X0>, void (*a2)(char *, char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, void (*a12)(char *, char *))
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v39 = a4;
  v40 = a7;
  v41 = a9;
  v18 = sub_247C3D9B4();
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v35 - v20;
  v22 = *(_QWORD *)(a5 - 8);
  result = MEMORY[0x24BDAC7A8](v19);
  v26 = (char *)&v35 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(_QWORD *)(a1 + 16);
  if (v27)
  {
    v37 = v24;
    v38 = result;
    result = sub_247C100CC(a1 + 32, a5, a8);
    if (v27 != 1)
    {
      v35 = a3;
      v36 = a2;
      v28 = MEMORY[0x24BDAC7A8](result);
      *(&v35 - 2) = a6;
      *(&v35 - 1) = v29;
      MEMORY[0x24BDAC7A8](v28);
      *(&v35 - 8) = v39;
      *(&v35 - 7) = a5;
      v30 = v40;
      *(&v35 - 6) = a6;
      *(&v35 - 5) = v30;
      *(&v35 - 4) = a8;
      *(&v35 - 3) = v31;
      *(&v35 - 2) = v32;
      *(&v35 - 1) = v33;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
      sub_247C13E94(a12, (uint64_t)(&v35 - 10), MEMORY[0x24BEE4078], a6, v34, (uint64_t)v21);
      v36(v26, v21);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v38);
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v26, a5);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_247C15D84(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v7 = *a1;
  v8 = a1[1];
  v9 = a1[2];
  v10 = *a2;
  v11 = a2[1];
  v12 = a2[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_247C3E1B0;
  *(_QWORD *)(v13 + 56) = type metadata accessor for Expression(0, a6, v14, v15);
  *(_QWORD *)(v13 + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v13 + 32) = v7;
  *(_QWORD *)(v13 + 40) = v8;
  *(_QWORD *)(v13 + 48) = v9;
  v16 = sub_247C3D9B4();
  *(_QWORD *)(v13 + 96) = type metadata accessor for Expression(0, v16, v17, v18);
  *(_QWORD *)(v13 + 104) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v13 + 72) = v10;
  *(_QWORD *)(v13 + 80) = v11;
  *(_QWORD *)(v13 + 88) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a3(v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C15FA8@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, void (*a12)(char *, char *), uint64_t a13, uint64_t a14)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v54 = a7;
  v55 = a8;
  v53 = a4;
  v20 = sub_247C3D9B4();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v52 = (uint64_t)&v43 - v22;
  v23 = sub_247C3D9B4();
  result = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v43 - v26;
  v28 = *(_QWORD *)(a1 + 16);
  if (v28)
  {
    v44 = v25;
    v45 = result;
    v46 = v21;
    v47 = a9;
    v48 = v20;
    v49 = a3;
    v50 = a2;
    v51 = &v43;
    v29 = MEMORY[0x24BDAC7A8](result);
    v30 = v55;
    *(&v43 - 2) = a5;
    *(&v43 - 1) = v30;
    MEMORY[0x24BDAC7A8](v29);
    *(&v43 - 8) = v53;
    *(&v43 - 7) = a5;
    v31 = v54;
    *(&v43 - 6) = a6;
    *(&v43 - 5) = v31;
    *(&v43 - 4) = v32;
    *(&v43 - 3) = a10;
    *(&v43 - 2) = v33;
    *(&v43 - 1) = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
    result = sub_247C13E94(a12, (uint64_t)(&v43 - 10), MEMORY[0x24BEE4078], a5, v35, (uint64_t)v27);
    if (v28 != 1)
    {
      v36 = MEMORY[0x24BDAC7A8](a14);
      *(&v43 - 2) = a6;
      *(&v43 - 1) = a10;
      v37 = (void (*)(char *, char *))MEMORY[0x24BDAC7A8](v36);
      *(&v43 - 8) = v53;
      *(&v43 - 7) = a5;
      v38 = v54;
      *(&v43 - 6) = a6;
      *(&v43 - 5) = v38;
      *(&v43 - 4) = v55;
      *(&v43 - 3) = a10;
      *(&v43 - 2) = v39;
      *(&v43 - 1) = v40;
      v41 = v52;
      sub_247C13E94(v37, (uint64_t)(&v43 - 10), MEMORY[0x24BEE4078], a6, v42, v52);
      v50(v27, v41);
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v41, v48);
      return (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v27, v45);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_247C16210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_247C15644(a1, (uint64_t)sub_247C16340, (void (*)(char *, char *))sub_247C16858, (uint64_t)sub_247C168F0, (uint64_t)sub_247C16348, a2);
}

uint64_t sub_247C16234(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = *a2;
  v7 = a2[1];
  v8 = a2[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_247C3E1B0;
  v10 = sub_247C3D9B4();
  *(_QWORD *)(v9 + 56) = type metadata accessor for Expression(0, v10, v11, v12);
  *(_QWORD *)(v9 + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v9 + 32) = v3;
  *(_QWORD *)(v9 + 40) = v4;
  *(_QWORD *)(v9 + 48) = v5;
  v13 = sub_247C3D9B4();
  *(_QWORD *)(v9 + 96) = type metadata accessor for Expression(0, v13, v14, v15);
  *(_QWORD *)(v9 + 104) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v9 + 72) = v6;
  *(_QWORD *)(v9 + 80) = v7;
  *(_QWORD *)(v9 + 88) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a3(v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C16340(uint64_t a1)
{
  uint64_t v1;

  return sub_247C0FF74(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_247C16348()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 64))();
}

uint64_t sub_247C16370()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 48))();
}

uint64_t sub_247C16398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(uint64_t);
  void (*v12)(uint64_t, uint64_t);
  uint64_t v14;

  v7 = *(_QWORD *)(a2 - 8);
  v8 = MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11(v8);
  v12 = *(void (**)(uint64_t, uint64_t))(a3 + 56);
  a4[3] = swift_getAssociatedTypeWitness();
  a4[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(a4);
  v12(a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, a2);
}

uint64_t sub_247C16488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7[6];

  sub_247BFD20C(0, 0xE000000000000000, a2, a3, 34, 0xE100000000000000);
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  sub_247BFECF4(a1, v7);
  sub_247BFAA64(v7, 0, 0xE000000000000000, a4);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

uint64_t sub_247C16594@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  void (*v16)(uint64_t, uint64_t);
  uint64_t v17;

  v10 = sub_247C3D9B4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v17 - v12;
  a2(a1);
  v14 = *(_QWORD *)(a3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, a3) == 1)
  {
    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    *(_QWORD *)(a5 + 32) = 0;
    *(_OWORD *)a5 = 0u;
    *(_OWORD *)(a5 + 16) = 0u;
  }
  else
  {
    v16 = *(void (**)(uint64_t, uint64_t))(a4 + 56);
    *(_QWORD *)(a5 + 24) = swift_getAssociatedTypeWitness();
    *(_QWORD *)(a5 + 32) = swift_getAssociatedConformanceWitness();
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)a5);
    v16(a3, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v13, a3);
  }
  return result;
}

uint64_t sub_247C166E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_247C16594(a1, *(void (**)(uint64_t))(v2 + 32), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_247C166F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7[6];

  sub_247BFD20C(0, 0xE000000000000000, a2, a3, 34, 0xE100000000000000);
  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  sub_247BFECF4(a1, v7);
  sub_247C3D9B4();
  sub_247BFAA64(v7, 0, 0xE000000000000000, a4);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

uint64_t sub_247C16808()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_247C1682C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_247C166F0(a1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), a2);
}

uint64_t sub_247C16838@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_247C16398(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_247C16844@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_247C16488(a1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), a2);
}

uint64_t sub_247C16858()
{
  return sub_247C16348();
}

uint64_t sub_247C1686C()
{
  return sub_247C16370();
}

void QueryError.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_247C16930()
{
  sub_247C3D9E4();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  return 0x2068637573206F4ELL;
}

uint64_t sub_247C16B3C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  result = a2;
  if (a4 - 1 < 2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  if (!a4 || a4 == 3)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for QueryError(uint64_t a1)
{
  return sub_247C16B9C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_247C16B9C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t result;

  result = a2;
  if (a4 - 1 < 2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (!a4 || a4 == 3)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for QueryError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_247C16B3C(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for QueryError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_247C16B3C(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_247C16B9C(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for QueryError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_247C16B9C(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for QueryError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for QueryError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_247C16DA0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_247C16DA8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for QueryError()
{
  return &type metadata for QueryError;
}

uint64_t static DateFunctions.date(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_247C16DDC(1702125924, 0xE400000000000000, a1, a2, a3, a4);
}

uint64_t sub_247C16DDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v20;

  v11 = *(_QWORD *)(a5 + 16);
  if (v11)
  {
    sub_247C0EB84((_QWORD *)0x3F, 0xE100000000000000, v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455450);
    sub_247C0BE54();
    sub_247C3D78C();
    swift_bridgeObjectRelease();
    v20 = a2;
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    swift_bridgeObjectRelease();
    sub_247C3D840();
    v12 = a1;
    v13 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455470);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1D0;
    *(_QWORD *)(inited + 32) = a3;
    *(_QWORD *)(inited + 40) = a4;
    v18 = inited;
    swift_bridgeObjectRetain();
    v15 = swift_bridgeObjectRetain();
    sub_247C0F878(v15);
    v16 = sub_247C17214(v18);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_247C3D840();
    v12 = a1;
    v13 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_247C3E1D0;
    *(_QWORD *)(v16 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v16 + 64) = &protocol witness table for String;
    *(_QWORD *)(v16 + 32) = a3;
    *(_QWORD *)(v16 + 40) = a4;
    result = swift_bridgeObjectRetain();
  }
  *a6 = v12;
  a6[1] = v13;
  a6[2] = v16;
  return result;
}

uint64_t static DateFunctions.time(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_247C16DDC(1701669236, 0xE400000000000000, a1, a2, a3, a4);
}

uint64_t static DateFunctions.datetime(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_247C16DDC(0x656D697465746164, 0xE800000000000000, a1, a2, a3, a4);
}

uint64_t static DateFunctions.julianday(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_247C16DDC(0x61646E61696C756ALL, 0xE900000000000079, a1, a2, a3, a4);
}

uint64_t static DateFunctions.strftime(_:_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v11;
  unint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v11 = *(_QWORD *)(a5 + 16);
  if (v11)
  {
    sub_247C0EB84((_QWORD *)0x3F, 0xE100000000000000, v11);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455450);
    sub_247C0BE54();
    sub_247C3D78C();
    swift_bridgeObjectRelease();
    sub_247C3D9E4();
    swift_bridgeObjectRelease();
    sub_247C3D840();
    swift_bridgeObjectRelease();
    sub_247C3D840();
    v12 = 0xEF202C3F202C3F28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455470);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    *(_QWORD *)(inited + 32) = a1;
    *(_QWORD *)(inited + 40) = a2;
    *(_QWORD *)(inited + 48) = a3;
    *(_QWORD *)(inited + 56) = a4;
    v18 = inited;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = swift_bridgeObjectRetain();
    sub_247C0F878(v14);
    v15 = sub_247C17214(v18);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_247C3E1B0;
    v17 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v15 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v15 + 64) = &protocol witness table for String;
    *(_QWORD *)(v15 + 32) = a1;
    *(_QWORD *)(v15 + 40) = a2;
    *(_QWORD *)(v15 + 96) = v17;
    *(_QWORD *)(v15 + 104) = &protocol witness table for String;
    *(_QWORD *)(v15 + 72) = a3;
    *(_QWORD *)(v15 + 80) = a4;
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    v12 = 0xEE00293F202C3F28;
  }
  *a6 = 0x656D697466727473;
  a6[1] = v12;
  a6[2] = v15;
  return result;
}

uint64_t sub_247C17214(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BYTE v8[40];
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_247C12A38(0, v1, 0);
    v2 = v9;
    v4 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_247C12A38(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v9;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_247C12A38((_QWORD *)(v5 > 1), v6 + 1, 1);
        v2 = v9;
      }
      v4 += 16;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_247C176D4((uint64_t)v8, v2 + 40 * v6 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_247C17340(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_247C12A0C(0, v1, 0);
    v2 = v15;
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v6 = *(v4 - 2);
      v5 = *(v4 - 1);
      v7 = *v4;
      v15 = v2;
      v8 = *(_QWORD *)(v2 + 16);
      v9 = *(_QWORD *)(v2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1)
      {
        sub_247C12A0C((_QWORD *)(v9 > 1), v8 + 1, 1);
        v2 = v15;
      }
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
      v14 = &protocol witness table for Expression<A>;
      *(_QWORD *)&v11 = v6;
      *((_QWORD *)&v11 + 1) = v5;
      v12 = v7;
      *(_QWORD *)(v2 + 16) = v8 + 1;
      sub_247BFECDC(&v11, v2 + 40 * v8 + 32);
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t DateFunctions.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DateFunctions.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t Date.date.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_247C174DC(1702125924, 0xE400000000000000, a1);
}

uint64_t type metadata accessor for DateFunctions()
{
  return objc_opt_self();
}

uint64_t Date.time.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_247C174DC(1701669236, 0xE400000000000000, a1);
}

uint64_t Date.datetime.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_247C174DC(0x656D697465746164, 0xE800000000000000, a1);
}

uint64_t Date.julianday.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_247C174DC(0x61646E61696C756ALL, 0xE900000000000079, a1);
}

uint64_t sub_247C174DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for DateFunctions();
  if (qword_2544552F8 != -1)
    swift_once();
  swift_beginAccess();
  v6 = (id)qword_254455318;
  v7 = (void *)sub_247C3D6B4();
  v8 = objc_msgSend(v6, sel_stringFromDate_, v7);

  v9 = sub_247C3D7B0();
  v11 = v10;

  sub_247C16DDC(a1, a2, v9, v11, MEMORY[0x24BEE4AF8], a3);
  return swift_bridgeObjectRelease();
}

uint64_t Expression<A>.date.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_247C17648(0x2865746164, 0xE500000000000000, a1);
}

uint64_t Expression<A>.time.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_247C17648(0x28656D6974, 0xE500000000000000, a1);
}

uint64_t Expression<A>.datetime.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_247C17648(0x656D697465746164, 0xE900000000000028, a1);
}

uint64_t Expression<A>.julianday.getter@<X0>(_QWORD *a1@<X8>)
{
  return sub_247C17648(0x61646E61696C756ALL, 0xEA00000000002879, a1);
}

uint64_t sub_247C17648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  *a3 = a1;
  a3[1] = a2;
  a3[2] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for DateFunctions()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_247C176D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ExpressionType<>.distinct.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;

  (*(void (**)(void))(a2 + 24))();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  swift_getAssociatedTypeWitness();
  return Expression.init(_:_:)(0x54434E4954534944, 0xE900000000000020, v6, a3);
}

{
  uint64_t v6;

  (*(void (**)(void))(a2 + 24))();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  swift_getAssociatedTypeWitness();
  return Expression.init(_:_:)(0x54434E4954534944, 0xE900000000000020, v6, a3);
}

uint64_t ExpressionType<>.count.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v7[5];

  v4 = *(_QWORD *)(a2 + 8);
  v7[3] = a1;
  v7[4] = v4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v7);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_1, v2, a1);
  sub_247BFB3FC(v7, 0x746E756F63, 0xE500000000000000);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

uint64_t ExpressionType<>.count.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C17CDC(a1, a2, a3, a4, 0x746E756F63, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_247BFB3FC);
}

uint64_t ExpressionType<>.max.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9[5];

  v6 = *(_QWORD *)(a2 + 8);
  v9[3] = a1;
  v9[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  swift_getAssociatedTypeWitness();
  sub_247C3D9B4();
  sub_247BFAA64(v9, 7889261, 0xE300000000000000, a3);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

{
  uint64_t v3;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9[5];

  v6 = *(_QWORD *)(a2 + 8);
  v9[3] = a1;
  v9[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  swift_getAssociatedTypeWitness();
  sub_247BFAA64(v9, 7889261, 0xE300000000000000, a3);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t ExpressionType<>.min.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9[5];

  v6 = *(_QWORD *)(a2 + 8);
  v9[3] = a1;
  v9[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  swift_getAssociatedTypeWitness();
  sub_247C3D9B4();
  sub_247BFAA64(v9, 7235949, 0xE300000000000000, a3);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

{
  uint64_t v3;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9[5];

  v6 = *(_QWORD *)(a2 + 8);
  v9[3] = a1;
  v9[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  swift_getAssociatedTypeWitness();
  sub_247BFAA64(v9, 7235949, 0xE300000000000000, a3);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t ExpressionType<>.average.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C17CDC(a1, a2, a3, a4, 6780513, 0xE300000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_247BFB3FC);
}

uint64_t ExpressionType<>.sum.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9[5];

  v6 = *(_QWORD *)(a2 + 8);
  v9[3] = a1;
  v9[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  swift_getAssociatedTypeWitness();
  sub_247C3D9B4();
  sub_247BFAA64(v9, 7173491, 0xE300000000000000, a3);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

{
  uint64_t v3;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9[5];

  v6 = *(_QWORD *)(a2 + 8);
  v9[3] = a1;
  v9[4] = v6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_1, v3, a1);
  swift_getAssociatedTypeWitness();
  sub_247BFAA64(v9, 7173491, 0xE300000000000000, a3);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t ExpressionType<>.total.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C17CDC(a1, a2, a3, a4, 0x6C61746F74, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_247BFB3FC);
}

uint64_t sub_247C17CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t *, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v15[5];

  v12 = *(_QWORD *)(a2 + 8);
  v15[3] = a1;
  v15[4] = v12;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_1, v7, a1);
  a7(v15, a5, a6);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

uint64_t ExpressionType<>.average.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_247C17E38(a1, a2, a3, a4, a5, 6780513, 0xE300000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_247BFB3FC);
}

uint64_t ExpressionType<>.total.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_247C17E38(a1, a2, a3, a4, a5, 0x6C61746F74, 0xE500000000000000, (void (*)(uint64_t *, uint64_t, uint64_t))sub_247BFB3FC);
}

uint64_t sub_247C17E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t *, uint64_t, uint64_t))
{
  uint64_t v8;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v16[5];

  v13 = *(_QWORD *)(a2 + 8);
  v16[3] = a1;
  v16[4] = v13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v16);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_1, v8, a1);
  a8(v16, a6, a7);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

uint64_t count(_:)(void (*a1)(_QWORD *__return_ptr, _QWORD *, _QWORD *))
{
  _QWORD v3[3];
  _QWORD v4[3];
  _QWORD v5[5];

  memset(v4, 0, sizeof(v4));
  memset(v3, 0, sizeof(v3));
  v5[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  v5[4] = &protocol witness table for Expression<A>;
  a1(v5, v4, v3);
  sub_247BFB3FC(v5, 0x746E756F63, 0xE500000000000000);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
}

sqlite3 *sub_247C17F4C(uint64_t a1)
{
  uint64_t v1;
  sqlite3 **v3;
  sqlite3 *result;
  sqlite3 *v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 40) = 1;
  *(_QWORD *)(v1 + 56) = 0;
  *(_QWORD *)(v1 + 64) = 0;
  *(_QWORD *)(v1 + 48) = 0;
  *(_QWORD *)(v1 + 24) = a1;
  *(_QWORD *)(v1 + 32) = 0;
  v3 = (sqlite3 **)(a1 + 16);
  result = (sqlite3 *)swift_beginAccess();
  v5 = *(sqlite3 **)(a1 + 16);
  if (!v5)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v6 = sub_247C3D804();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v7 = sqlite3_prepare_v2(v5, (const char *)(v6 + 32), -1, (sqlite3_stmt **)(v1 + 16), 0);
  swift_endAccess();
  swift_release();
  v8 = qword_254455350;
  swift_retain();
  if (v8 != -1)
    swift_once();
  if (sub_247BFB63C(v7, (uint64_t)off_254455348))
  {
    swift_release_n();
    return (sqlite3 *)v1;
  }
  result = *v3;
  if (!*v3)
    goto LABEL_11;
  result = (sqlite3 *)sqlite3_errmsg(result);
  if (result)
  {
    v9 = sub_247C3D84C();
    v11 = v10;
    swift_release();
    sub_247C1A4D0();
    swift_allocError();
    *(_QWORD *)v12 = v9;
    *(_QWORD *)(v12 + 8) = v11;
    *(_DWORD *)(v12 + 16) = v7;
    *(_QWORD *)(v12 + 24) = 0;
    swift_willThrow();
    swift_release();
    swift_release();
    return (sqlite3 *)v1;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t Statement.deinit()
{
  uint64_t v0;

  swift_beginAccess();
  sqlite3_finalize(*(sqlite3_stmt **)(v0 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Statement.columnCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  *(_BYTE *)(v1 + 40) = 0;
  return result;
}

_QWORD *(*Statement.columnCount.modify(uint64_t *a1))(_QWORD *result)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = Statement.columnCount.getter();
  return sub_247C1818C;
}

_QWORD *sub_247C1818C(_QWORD *result)
{
  uint64_t v1;

  v1 = result[1];
  *(_QWORD *)(v1 + 32) = *result;
  *(_BYTE *)(v1 + 40) = 0;
  return result;
}

uint64_t Statement.columnNames.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*Statement.columnNames.modify(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = Statement.columnNames.getter();
  return sub_247C181E0;
}

uint64_t sub_247C181E0(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + 48) = *a1;
  return swift_bridgeObjectRelease();
}

_QWORD *Statement.row.setter(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = result[1];
  *(_QWORD *)(v1 + 56) = *result;
  *(_QWORD *)(v1 + 64) = v2;
  return result;
}

_QWORD *(*Statement.row.modify(_QWORD *a1))(_QWORD *result)
{
  uint64_t v1;

  a1[2] = v1;
  Statement.row.getter(a1);
  return sub_247C18230;
}

_QWORD *sub_247C18230(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = result[1];
  v1 = result[2];
  *(_QWORD *)(v1 + 56) = *result;
  *(_QWORD *)(v1 + 64) = v2;
  return result;
}

uint64_t Statement.bind(_:)(uint64_t a1)
{
  sub_247C00BBC(a1);
  return swift_retain();
}

{
  sub_247C00BBC(a1);
  return swift_retain();
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  sqlite3_stmt *v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t result;
  uint64_t v19;
  int64_t v20;
  __int128 v21;
  _OWORD v22[2];
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;

  swift_beginAccess();
  sqlite3_reset(*(sqlite3_stmt **)(v1 + 16));
  sqlite3_clear_bindings(*(sqlite3_stmt **)(v1 + 16));
  v19 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v20 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  v6 = 0;
  if (!v5)
    goto LABEL_9;
LABEL_7:
  v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  v11 = v10 | (v6 << 6);
LABEL_8:
  v12 = *(_QWORD *)(a1 + 56);
  v13 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v11);
  v14 = v13[1];
  *(_QWORD *)&v21 = *v13;
  *((_QWORD *)&v21 + 1) = v14;
  sub_247C01300(v12 + 40 * v11, (uint64_t)v22);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_247BFBCD8((uint64_t)&v21, (uint64_t)v24, &qword_2576ED410);
    if (!v24[1])
    {
      swift_release();
      return swift_retain();
    }
    sub_247BFBCD8((uint64_t)&v25, (uint64_t)&v21, &qword_254455448);
    v7 = *(sqlite3_stmt **)(v1 + 16);
    v8 = sub_247C3D804();
    v9 = sqlite3_bind_parameter_index(v7, (const char *)(v8 + 32));
    swift_release();
    if (v9 < 1)
      goto LABEL_31;
    swift_bridgeObjectRelease();
    sub_247C00DA4((uint64_t)&v21, v9);
    sub_247BFC084((uint64_t)&v21, &qword_254455448);
    if (v5)
      goto LABEL_7;
LABEL_9:
    v15 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v15 < v20)
    {
      v16 = *(_QWORD *)(v19 + 8 * v15);
      if (v16)
        goto LABEL_12;
      v17 = v6 + 2;
      ++v6;
      if (v15 + 1 < v20)
      {
        v16 = *(_QWORD *)(v19 + 8 * v17);
        if (v16)
          goto LABEL_15;
        v6 = v15 + 1;
        if (v15 + 2 < v20)
        {
          v16 = *(_QWORD *)(v19 + 8 * (v15 + 2));
          if (v16)
          {
            v15 += 2;
            goto LABEL_12;
          }
          v17 = v15 + 3;
          v6 = v15 + 2;
          if (v15 + 3 < v20)
          {
            v16 = *(_QWORD *)(v19 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                v15 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_30;
                if (v15 >= v20)
                {
                  v6 = v20 - 1;
                  goto LABEL_26;
                }
                v16 = *(_QWORD *)(v19 + 8 * v15);
                ++v17;
                if (v16)
                  goto LABEL_12;
              }
            }
LABEL_15:
            v15 = v17;
LABEL_12:
            v5 = (v16 - 1) & v16;
            v11 = __clz(__rbit64(v16)) + (v15 << 6);
            v6 = v15;
            goto LABEL_8;
          }
        }
      }
    }
LABEL_26:
    v5 = 0;
    v23 = 0;
    memset(v22, 0, sizeof(v22));
    v21 = 0u;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  sub_247C3D9E4();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  result = sub_247C3DA68();
  __break(1u);
  return result;
}

void Statement.scalar(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  sqlite3_stmt *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_QWORD *)(a1 + 16))
  {
    v4 = sub_247C00BBC(a1);
    swift_beginAccess();
    v5 = *(sqlite3_stmt **)(v4 + 16);
    swift_retain();
    sqlite3_reset(v5);
    Statement.step()();
    if (!v6)
    {
      Statement.row.getter(&v8);
      Cursor.subscript.getter(0, a2);
    }
    swift_release();
  }
  else
  {
    swift_beginAccess();
    sqlite3_reset(*(sqlite3_stmt **)(v2 + 16));
    Statement.step()();
    if (!v7)
    {
      Statement.row.getter(&v8);
      Cursor.subscript.getter(0, a2);
    }
  }
}

uint64_t Statement.scalar(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  sqlite3_stmt *v4;
  uint64_t v5;
  uint64_t v7;

  v3 = sub_247C00BBC(a1);
  swift_beginAccess();
  v4 = *(sqlite3_stmt **)(v3 + 16);
  swift_retain();
  sqlite3_reset(v4);
  Statement.step()();
  if (!v5)
  {
    Statement.row.getter(&v7);
    Cursor.subscript.getter(0, a2);
  }
  return swift_release();
}

{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;

  Statement.bind(_:)(a1);
  swift_beginAccess();
  sqlite3_reset(*(sqlite3_stmt **)(v2 + 16));
  Statement.step()();
  if (!v4)
  {
    Statement.row.getter(&v6);
    Cursor.subscript.getter(0, a2);
  }
  return swift_release();
}

uint64_t Statement.makeIterator()()
{
  uint64_t v0;

  swift_beginAccess();
  sqlite3_reset(*(sqlite3_stmt **)(v0 + 16));
  return swift_retain();
}

uint64_t sub_247C18D38@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  swift_beginAccess();
  result = sqlite3_reset(*(sqlite3_stmt **)(v3 + 16));
  *a1 = v3;
  return result;
}

uint64_t sub_247C18D80()
{
  return 0;
}

uint64_t sub_247C18D88()
{
  return 2;
}

_QWORD *sub_247C18D90()
{
  uint64_t *v0;
  _QWORD *v1;

  v1 = sub_247C1965C(*v0);
  swift_release();
  return v1;
}

uint64_t sub_247C18DC4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return sub_247C19C24(a1, a2, a3);
}

uint64_t sub_247C18DE4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[24];
  uint64_t v16;
  _BYTE v17[40];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  v11 = (uint64_t *)swift_allocObject();
  v11[2] = v10;
  v11[3] = a4;
  v11[4] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D0);
  result = swift_allocObject();
  v13 = result;
  v14 = 0;
  *(_QWORD *)(result + 16) = sub_247C1A794;
  *(_QWORD *)(result + 24) = v11;
  if (!a2 || !a3)
  {
LABEL_11:
    *a1 = v13;
    return v14;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    sub_247BFBD28(v10, a5, (uint64_t)v15);
    if (v16 == 1)
    {
      v14 = 0;
LABEL_9:
      sub_247BFC084((uint64_t)v15, &qword_254455328);
    }
    else
    {
      v14 = 0;
      while (1)
      {
        sub_247BFBCD8((uint64_t)v15, (uint64_t)v17, &qword_254455448);
        sub_247BFBCD8((uint64_t)v17, a2, &qword_254455448);
        if (a3 - 1 == v14)
          break;
        a2 += 40;
        sub_247BFBD28(v11[2], v11[4], (uint64_t)v15);
        ++v14;
        if (v16 == 1)
          goto LABEL_9;
      }
      v14 = a3;
    }
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_247C18F54()
{
  return sub_247C3D8B8();
}

uint64_t FailableIterator.next()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t Array.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v8 = sub_247C3D9B4();
  v23 = *(_QWORD *)(v8 - 8);
  v24 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - v10;
  v12 = *(_QWORD *)(a2 - 8);
  v13 = MEMORY[0x24BDAC7A8](v9);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v22 - v16;
  v25 = sub_247C3D768();
  v26 = a1;
  v28 = v25;
  v18 = *(void (**)(uint64_t, uint64_t))(a4 + 16);
  v19 = v27;
  v27 = a3;
  v18(a3, a4);
  if (v19)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v25 = a4;
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    while (v20(v11, 1, a2) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v11, a2);
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, a2);
      sub_247C3D918();
      sub_247C3D900();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, a2);
      v18(v27, v25);
    }
    (*(void (**)(uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v24);
    return v28;
  }
}

Swift::OpaquePointer_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Statement.failableNext()()
{
  Swift::Bool v0;
  Swift::Bool v1;
  void *v2;
  uint64_t v3;
  uint64_t v4[2];
  Swift::OpaquePointer_optional result;

  v1 = Statement.step()();
  v2 = 0;
  if (!v3 && v1)
  {
    Statement.row.getter(v4);
    v2 = (void *)sub_247BFBAE4(v4[0], v4[1]);
  }
  result.value._rawValue = v2;
  result.is_nil = v0;
  return result;
}

uint64_t sub_247C1924C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4[2];

  result = Statement.step()();
  if (!v3)
  {
    if ((result & 1) != 0)
    {
      Statement.row.getter(v4);
      result = sub_247BFBAE4(v4[0], v4[1]);
    }
    else
    {
      result = 0;
    }
    *a1 = result;
  }
  return result;
}

uint64_t sub_247C192AC@<X0>(uint64_t *a1@<X8>)
{
  Swift::Bool v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[3];

  v2 = Statement.step()();
  if (v3)
  {
    MEMORY[0x24958ED7C](v3);
LABEL_5:
    result = 0;
    goto LABEL_6;
  }
  if (!v2)
    goto LABEL_5;
  Statement.row.getter(v5);
  result = sub_247BFBAE4(v5[0], v5[1]);
LABEL_6:
  *a1 = result;
  return result;
}

const char *Statement.description.getter()
{
  uint64_t v0;
  const char *result;

  swift_beginAccess();
  result = sqlite3_sql(*(sqlite3_stmt **)(v0 + 16));
  if (result)
    return (const char *)sub_247C3D84C();
  __break(1u);
  return result;
}

const char *sub_247C19354()
{
  uint64_t *v0;
  uint64_t v1;
  const char *result;

  v1 = *v0;
  swift_beginAccess();
  result = sqlite3_sql(*(sqlite3_stmt **)(v1 + 16));
  if (result)
    return (const char *)sub_247C3D84C();
  __break(1u);
  return result;
}

double Cursor.subscript.getter(uint64_t iCol)
{
  sqlite3_stmt **v1;
  double result;

  if (iCol < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (iCol <= 0x7FFFFFFF)
  {
    return sqlite3_column_double(*v1, iCol);
  }
  __break(1u);
  return result;
}

sqlite3_int64 Cursor.subscript.getter(sqlite3_int64 iCol)
{
  sqlite3_stmt **v1;

  if (iCol < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (iCol <= 0x7FFFFFFF)
  {
    return sqlite3_column_int64(*v1, iCol);
  }
  __break(1u);
  return iCol;
}

{
  sqlite3_stmt **v1;

  if (iCol < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (iCol <= 0x7FFFFFFF)
  {
    return sqlite3_column_int64(*v1, iCol);
  }
  __break(1u);
  return iCol;
}

uint64_t Cursor.subscript.getter(uint64_t iCol)
{
  sqlite3_stmt **v1;

  if (iCol < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (iCol > 0x7FFFFFFF)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  iCol = (uint64_t)sqlite3_column_text(*v1, iCol);
  if (iCol)
    return sub_247C3D858();
LABEL_7:
  __break(1u);
  return iCol;
}

uint64_t Cursor.subscript.getter@<X0>(uint64_t iCol@<X0>, _QWORD *a2@<X8>)
{
  sqlite3_stmt **v2;
  int v4;
  sqlite3_stmt *v5;
  const void *v6;
  const void *v7;
  int v8;

  if (iCol < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_8;
  }
  v4 = iCol;
  if (iCol > 0x7FFFFFFF)
  {
LABEL_8:
    __break(1u);
    return iCol;
  }
  v5 = *v2;
  v6 = sqlite3_column_blob(v5, iCol);
  if (v6)
  {
    v7 = v6;
    v8 = sqlite3_column_bytes(v5, v4);
    iCol = (uint64_t)sub_247BFBFF8(v7, v8);
  }
  else
  {
    iCol = MEMORY[0x24BEE4AF8];
  }
  *a2 = iCol;
  return iCol;
}

BOOL Cursor.subscript.getter(_BOOL8 iCol)
{
  sqlite3_stmt **v1;

  if (iCol < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (iCol <= 0x7FFFFFFF)
  {
    return sqlite3_column_int64(*v1, iCol) != 0;
  }
  __break(1u);
  return iCol;
}

uint64_t Cursor.makeIterator()()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v1 = *v0;
  v2 = v0[1];
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 0;
  v4 = (_QWORD *)swift_allocObject();
  v4[2] = v3;
  v4[3] = v1;
  v4[4] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D0);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = sub_247BFBD1C;
  *(_QWORD *)(result + 24) = v4;
  return result;
}

uint64_t sub_247C195B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;

  v3 = *v1;
  v4 = v1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0;
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v5;
  v6[3] = v3;
  v6[4] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D0);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = sub_247C1A794;
  *(_QWORD *)(result + 24) = v6;
  *a1 = result;
  return result;
}

uint64_t sub_247C1964C()
{
  uint64_t *v0;

  return sub_247BFBAE4(*v0, v0[1]);
}

uint64_t sub_247C19654(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_247C18DE4(a1, a2, a3, *v3, v3[1]);
}

_QWORD *sub_247C1965C(uint64_t a1)
{
  sqlite3_stmt *v2;
  Swift::Bool v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  sqlite3_stmt *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  sqlite3_int64 v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  const void *v25;
  const void *v26;
  int v27;
  size_t v28;
  _QWORD *v29;
  size_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  const void *v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t v46;
  _QWORD *v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  const void *v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD *v56;
  __int128 v57;
  __int128 v58;
  _UNKNOWN **v59;
  _BYTE v60[40];
  _QWORD v61[3];

  swift_beginAccess();
  v2 = *(sqlite3_stmt **)(a1 + 16);
  swift_retain();
  sqlite3_reset(v2);
  v3 = Statement.step()();
  v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v6 = 0;
  if (!v4)
  {
    v13 = MEMORY[0x24BEE4AF8] + 32;
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
    while (1)
    {
      if (!v3)
        goto LABEL_4;
      v54 = (_QWORD *)v13;
      v55 = v6;
      v56 = v7;
      Statement.row.getter(v61);
      v15 = (sqlite3_stmt *)v61[0];
      v14 = v61[1];
      v16 = swift_allocObject();
      *(_QWORD *)(v16 + 16) = 0;
      v17 = (uint64_t *)(v16 + 16);
      swift_retain();
      swift_beginAccess();
      v18 = *v17;
      if (*v17 < v14)
        break;
      v19 = 0;
LABEL_44:
      swift_release_n();
      v39 = v5[3];
      v40 = v55;
      v7 = v56;
      v41 = v54;
      if (v39 >= 2)
      {
        v42 = v39 >> 1;
        v10 = __OFSUB__(v42, v19);
        v43 = v42 - v19;
        if (v10)
          goto LABEL_68;
        v5[2] = v43;
      }
      if (!v55)
      {
        v44 = v56[3];
        if ((uint64_t)((v44 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_69;
        v45 = v44 & 0xFFFFFFFFFFFFFFFELL;
        if (v45 <= 1)
          v46 = 1;
        else
          v46 = v45;
        __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED438);
        v47 = (_QWORD *)swift_allocObject();
        v48 = _swift_stdlib_malloc_size(v47);
        v49 = v48 - 32;
        if (v48 < 32)
          v49 = v48 - 25;
        v50 = v49 >> 3;
        v47[2] = v46;
        v47[3] = 2 * (v49 >> 3);
        v51 = (unint64_t)(v47 + 4);
        v52 = v56[3] >> 1;
        if (v56[2])
        {
          v53 = v56 + 4;
          if (v47 != v56 || v51 >= (unint64_t)v53 + 8 * v52)
            memmove(v47 + 4, v53, 8 * v52);
          v56[2] = 0;
        }
        v41 = (_QWORD *)(v51 + 8 * v52);
        v40 = (v50 & 0x7FFFFFFFFFFFFFFFLL) - v52;
        swift_release();
        v7 = v47;
      }
      v10 = __OFSUB__(v40, 1);
      v6 = v40 - 1;
      if (v10)
        goto LABEL_67;
      *v41 = v5;
      v13 = (uint64_t)(v41 + 1);
      v3 = Statement.step()();
      v5 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v4)
        goto LABEL_3;
    }
    v19 = 0;
    v20 = (uint64_t)(v5 + 4);
    while (2)
    {
      *v17 = v18 + 1;
      if (v18 < (uint64_t)0xFFFFFFFF80000000)
      {
        __break(1u);
      }
      else if (v18 <= 0x7FFFFFFF)
      {
        switch(sqlite3_column_type(v15, v18))
        {
          case 1:
            v21 = sqlite3_column_int64(v15, v18);
            v59 = &protocol witness table for Int64;
            *((_QWORD *)&v58 + 1) = MEMORY[0x24BEE4008];
            *(_QWORD *)&v57 = v21;
            goto LABEL_29;
          case 2:
            v24 = sqlite3_column_double(v15, v18);
            *((_QWORD *)&v58 + 1) = MEMORY[0x24BEE13C8];
            v59 = &protocol witness table for Double;
            *(double *)&v57 = v24;
            goto LABEL_29;
          case 3:
            if (!sqlite3_column_text(v15, v18))
              goto LABEL_71;
            v22 = sub_247C3D858();
            *((_QWORD *)&v58 + 1) = MEMORY[0x24BEE0D00];
            v59 = &protocol witness table for String;
            *(_QWORD *)&v57 = v22;
            *((_QWORD *)&v57 + 1) = v23;
LABEL_29:
            sub_247BFBCD8((uint64_t)&v57, (uint64_t)v60, &qword_254455448);
            if (v19)
              goto LABEL_40;
            v31 = v5[3];
            if ((uint64_t)((v31 >> 1) + 0x4000000000000000) < 0)
              goto LABEL_66;
            v32 = v31 & 0xFFFFFFFFFFFFFFFELL;
            if (v32 <= 1)
              v33 = 1;
            else
              v33 = v32;
            __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
            v34 = (_QWORD *)swift_allocObject();
            v35 = (uint64_t)(_swift_stdlib_malloc_size(v34) - 32) / 40;
            v34[2] = v33;
            v34[3] = 2 * v35;
            v36 = (unint64_t)(v34 + 4);
            v37 = v5[3] >> 1;
            if (v5[2])
            {
              v38 = v5 + 4;
              if (v34 != v5 || v36 >= (unint64_t)v38 + 40 * v37)
                memmove(v34 + 4, v38, 40 * v37);
              v5[2] = 0;
            }
            v20 = v36 + 40 * v37;
            v19 = (v35 & 0x7FFFFFFFFFFFFFFFLL) - v37;
            swift_release();
            v5 = v34;
LABEL_40:
            v10 = __OFSUB__(v19--, 1);
            if (v10)
              goto LABEL_65;
            sub_247BFBCD8((uint64_t)v60, v20, &qword_254455448);
            v20 += 40;
            v18 = *v17;
            if (*v17 >= v14)
              goto LABEL_44;
            continue;
          case 4:
            *((_QWORD *)&v58 + 1) = &type metadata for Blob;
            v59 = &protocol witness table for Blob;
            v25 = sqlite3_column_blob(v15, v18);
            if (v25)
            {
              v26 = v25;
              v27 = sqlite3_column_bytes(v15, v18);
              if (v27)
              {
                v28 = v27;
                if (v27 <= 0)
                {
                  v29 = (_QWORD *)MEMORY[0x24BEE4AF8];
                }
                else
                {
                  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552E8);
                  v29 = (_QWORD *)swift_allocObject();
                  v30 = _swift_stdlib_malloc_size(v29);
                  v29[2] = v28;
                  v29[3] = 2 * v30 - 64;
                }
                memcpy(v29 + 4, v26, v28);
              }
              else
              {
                v29 = (_QWORD *)MEMORY[0x24BEE4AF8];
              }
              *(_QWORD *)&v57 = v29;
            }
            else
            {
              *(_QWORD *)&v57 = MEMORY[0x24BEE4AF8];
            }
            goto LABEL_29;
          case 5:
            v59 = 0;
            v57 = 0u;
            v58 = 0u;
            goto LABEL_29;
          default:
            goto LABEL_72;
        }
      }
      break;
    }
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_3:
  MEMORY[0x24958ED7C](v4);
LABEL_4:
  swift_release();
  v8 = v7[3];
  if (v8 >= 2)
  {
    v9 = v8 >> 1;
    v10 = __OFSUB__(v9, v6);
    v11 = v9 - v6;
    if (!v10)
    {
      v7[2] = v11;
      return v7;
    }
LABEL_70:
    __break(1u);
LABEL_71:
    swift_release();
    __break(1u);
LABEL_72:
    swift_release();
    sub_247C3D9E4();
    swift_bridgeObjectRelease();
    sub_247C3DAC8();
    sub_247C3D840();
    swift_bridgeObjectRelease();
    sub_247C3DA68();
    __break(1u);
    JUMPOUT(0x247C19C10);
  }
  return v7;
}

uint64_t sub_247C19C24(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  Swift::Bool v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  sqlite3_stmt *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  sqlite3_int64 v20;
  uint64_t v21;
  uint64_t v22;
  const void *v23;
  const void *v24;
  int v25;
  size_t v26;
  _QWORD *v27;
  size_t v28;
  double v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  const void *v37;
  BOOL v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  _QWORD *v46;
  __int128 v47;
  __int128 v48;
  _UNKNOWN **v49;
  _BYTE v50[40];
  _QWORD v51[3];

  swift_beginAccess();
  sqlite3_reset(*(sqlite3_stmt **)(v3 + 16));
  v6 = 0;
  if (a2 && a3)
  {
    if ((a3 & 0x8000000000000000) == 0)
    {
      v7 = Statement.step()();
      v9 = 0;
      if (v8)
      {
LABEL_5:
        MEMORY[0x24958ED7C](v8);
        v6 = v9;
        goto LABEL_6;
      }
      v11 = 1;
      v42 = v3;
      v43 = a3;
      while (1)
      {
        v6 = v9;
        if (!v7)
          goto LABEL_6;
        v45 = v11;
        v46 = a2;
        Statement.row.getter(v51);
        v13 = (sqlite3_stmt *)v51[0];
        v12 = v51[1];
        v14 = swift_allocObject();
        *(_QWORD *)(v14 + 16) = 0;
        v15 = (uint64_t *)(v14 + 16);
        swift_retain();
        swift_beginAccess();
        v16 = *v15;
        if (*v15 < v12)
          break;
        v17 = 0;
        v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_43:
        swift_release_n();
        v39 = v18[3];
        if (v39 >= 2)
        {
          v40 = v39 >> 1;
          v38 = __OFSUB__(v40, v17);
          v41 = v40 - v17;
          if (v38)
            goto LABEL_54;
          v18[2] = v41;
        }
        v9 = v45;
        *v46 = v18;
        if (v45 == v43)
        {
          v6 = v43;
          v3 = v42;
          goto LABEL_6;
        }
        a2 = v46 + 1;
        v11 = v45 + 1;
        v3 = v42;
        v7 = Statement.step()();
        if (v8)
          goto LABEL_5;
      }
      v17 = 0;
      v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v19 = MEMORY[0x24BEE4AF8] + 32;
      while (2)
      {
        *v15 = v16 + 1;
        if (v16 < (uint64_t)0xFFFFFFFF80000000)
        {
          __break(1u);
        }
        else if (v16 <= 0x7FFFFFFF)
        {
          switch(sqlite3_column_type(v13, v16))
          {
            case 1:
              v20 = sqlite3_column_int64(v13, v16);
              v49 = &protocol witness table for Int64;
              *((_QWORD *)&v48 + 1) = MEMORY[0x24BEE4008];
              *(_QWORD *)&v47 = v20;
              goto LABEL_28;
            case 2:
              v29 = sqlite3_column_double(v13, v16);
              *((_QWORD *)&v48 + 1) = MEMORY[0x24BEE13C8];
              v49 = &protocol witness table for Double;
              *(double *)&v47 = v29;
              goto LABEL_28;
            case 3:
              if (!sqlite3_column_text(v13, v16))
                goto LABEL_56;
              v21 = sub_247C3D858();
              *((_QWORD *)&v48 + 1) = MEMORY[0x24BEE0D00];
              v49 = &protocol witness table for String;
              *(_QWORD *)&v47 = v21;
              *((_QWORD *)&v47 + 1) = v22;
LABEL_28:
              sub_247BFBCD8((uint64_t)&v47, (uint64_t)v50, &qword_254455448);
              if (v17)
                goto LABEL_39;
              v30 = v18[3];
              if ((uint64_t)((v30 >> 1) + 0x4000000000000000) < 0)
                goto LABEL_53;
              v31 = v30 & 0xFFFFFFFFFFFFFFFELL;
              if (v31 <= 1)
                v32 = 1;
              else
                v32 = v31;
              __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
              v33 = (_QWORD *)swift_allocObject();
              v34 = (uint64_t)(_swift_stdlib_malloc_size(v33) - 32) / 40;
              v33[2] = v32;
              v33[3] = 2 * v34;
              v35 = (unint64_t)(v33 + 4);
              v36 = v18[3] >> 1;
              if (v18[2])
              {
                v37 = v18 + 4;
                if (v33 != v18 || v35 >= (unint64_t)v37 + 40 * v36)
                  memmove(v33 + 4, v37, 40 * v36);
                v18[2] = 0;
              }
              v19 = v35 + 40 * v36;
              v17 = (v34 & 0x7FFFFFFFFFFFFFFFLL) - v36;
              swift_release();
              v18 = v33;
LABEL_39:
              v38 = __OFSUB__(v17--, 1);
              if (v38)
                goto LABEL_52;
              sub_247BFBCD8((uint64_t)v50, v19, &qword_254455448);
              v19 += 40;
              v16 = *v15;
              if (*v15 >= v12)
                goto LABEL_43;
              continue;
            case 4:
              *((_QWORD *)&v48 + 1) = &type metadata for Blob;
              v49 = &protocol witness table for Blob;
              v23 = sqlite3_column_blob(v13, v16);
              if (v23)
              {
                v24 = v23;
                v25 = sqlite3_column_bytes(v13, v16);
                if (v25)
                {
                  v26 = v25;
                  if (v25 <= 0)
                  {
                    v27 = (_QWORD *)MEMORY[0x24BEE4AF8];
                  }
                  else
                  {
                    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552E8);
                    v27 = (_QWORD *)swift_allocObject();
                    v28 = _swift_stdlib_malloc_size(v27);
                    v27[2] = v26;
                    v27[3] = 2 * v28 - 64;
                  }
                  memcpy(v27 + 4, v24, v26);
                }
                else
                {
                  v27 = (_QWORD *)MEMORY[0x24BEE4AF8];
                }
                *(_QWORD *)&v47 = v27;
              }
              else
              {
                *(_QWORD *)&v47 = MEMORY[0x24BEE4AF8];
              }
              goto LABEL_28;
            case 5:
              v49 = 0;
              v47 = 0u;
              v48 = 0u;
              goto LABEL_28;
            default:
              goto LABEL_57;
          }
        }
        break;
      }
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
    }
    __break(1u);
LABEL_56:
    swift_release();
    __break(1u);
LABEL_57:
    swift_release();
    sub_247C3D9E4();
    swift_bridgeObjectRelease();
    sub_247C3DAC8();
    sub_247C3D840();
    swift_bridgeObjectRelease();
    sub_247C3DA68();
    __break(1u);
    JUMPOUT(0x247C1A124);
  }
LABEL_6:
  *a1 = v3;
  return v6;
}

uint64_t sub_247C1A138(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_247C1A334(uint64_t result, uint64_t a2)
{
  int v3;
  unint64_t v4;
  int v5;
  int v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int i;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  sqlite3_stmt **v20;
  uint64_t v21;

  v3 = result;
  v4 = HIDWORD(result);
  if (result < 0 != (int)result < 0)
  {
    if ((int)result >= 0)
      v5 = result;
    else
      v5 = -(int)result;
    if (result >= 0)
      v6 = HIDWORD(result);
    else
      v6 = -HIDWORD(result);
    v7 = __CFADD__(v5, v6);
    v8 = (v5 + v6);
    if (v7)
    {
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    if ((int)result < 0)
      v9 = v8;
    else
      v9 = -v8;
LABEL_14:
    v10 = MEMORY[0x24BEE4AF8];
    if (!v9)
      return v10;
    v21 = MEMORY[0x24BEE4AF8];
    result = (uint64_t)sub_247C00908(0, v9 & ~(v9 >> 63), 0);
    if ((v9 & 0x8000000000000000) == 0)
    {
      v10 = v21;
      v20 = (sqlite3_stmt **)(a2 + 16);
      swift_beginAccess();
      if (v3 <= (int)v4)
        v11 = v4;
      else
        v11 = v3;
      v12 = (v11 - v3);
      for (i = v3; ; ++i)
      {
        result = (uint64_t)sqlite3_column_name(*v20, i);
        if (!result)
          break;
        result = sub_247C3D84C();
        v15 = result;
        v17 = *(_QWORD *)(v21 + 16);
        v16 = *(_QWORD *)(v21 + 24);
        if (v17 >= v16 >> 1)
        {
          v19 = v14;
          result = (uint64_t)sub_247C00908((char *)(v16 > 1), v17 + 1, 1);
          v14 = v19;
        }
        *(_QWORD *)(v21 + 16) = v17 + 1;
        v18 = v21 + 16 * v17;
        *(_QWORD *)(v18 + 32) = v15;
        *(_QWORD *)(v18 + 40) = v14;
        if ((int)v4 < v3)
        {
          __break(1u);
LABEL_28:
          __break(1u);
          goto LABEL_29;
        }
        if (!v12)
          goto LABEL_28;
        --v12;
        if (!--v9)
          return v10;
      }
      goto LABEL_32;
    }
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!__OFSUB__(HIDWORD(result), (_DWORD)result))
  {
    v9 = HIDWORD(result) - (int)result;
    goto LABEL_14;
  }
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

unint64_t sub_247C1A4D0()
{
  unint64_t result;

  result = qword_2576ED418;
  if (!qword_2576ED418)
  {
    result = MEMORY[0x24958EDF4](&protocol conformance descriptor for Result, &type metadata for Result);
    atomic_store(result, (unint64_t *)&qword_2576ED418);
  }
  return result;
}

uint64_t sub_247C1A514()
{
  return swift_deallocObject();
}

unint64_t sub_247C1A528()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576ED420;
  if (!qword_2576ED420)
  {
    v1 = type metadata accessor for Statement();
    result = MEMORY[0x24958EDF4](&protocol conformance descriptor for Statement, v1);
    atomic_store(result, (unint64_t *)&qword_2576ED420);
  }
  return result;
}

unint64_t sub_247C1A56C(uint64_t a1)
{
  unint64_t result;

  result = sub_247C1A528();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_247C1A594()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576ED428;
  if (!qword_2576ED428)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2576ED430);
    result = MEMORY[0x24958EDF4](MEMORY[0x24BEE2420], v1);
    atomic_store(result, (unint64_t *)&qword_2576ED428);
  }
  return result;
}

uint64_t sub_247C1A5E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Statement.columnCount.getter();
  *a1 = result;
  return result;
}

_QWORD *sub_247C1A608(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_QWORD *)(v2 + 32) = *result;
  *(_BYTE *)(v2 + 40) = 0;
  return result;
}

uint64_t sub_247C1A61C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Statement.columnNames.getter();
  *a1 = result;
  return result;
}

uint64_t sub_247C1A644(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 48) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_247C1A674(_QWORD *a1@<X8>)
{
  uint64_t v2;
  _QWORD v3[2];

  Statement.row.getter(v3);
  v2 = v3[1];
  *a1 = v3[0];
  a1[1] = v2;
}

_QWORD *sub_247C1A6AC(_QWORD *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = result[1];
  v3 = *a2;
  *(_QWORD *)(v3 + 56) = *result;
  *(_QWORD *)(v3 + 64) = v2;
  return result;
}

uint64_t method lookup function for Statement()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FailableIterator.failableNext()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t getEnumTagSinglePayload for Cursor(uint64_t a1, int a2)
{
  int v3;

  if (!a2)
    return 0;
  if (a2 != 1 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2);
  if (*(_QWORD *)a1)
    v3 = -1;
  else
    v3 = 0;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for Cursor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 2)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Cursor()
{
  return &type metadata for Cursor;
}

uint64_t sub_247C1A770()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t + infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_247C1A9B4(a1, a2, &qword_2576ED3A0, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _UNKNOWN **v20;
  _QWORD v21[5];
  _QWORD v22[5];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3B8);
  v22[3] = v8;
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v2;
  v22[1] = v3;
  v22[2] = v4;
  v21[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3A0);
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v5;
  v21[1] = v6;
  v21[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v22, inited + 32);
  sub_247BFA88C((uint64_t)v21, inited + 72);
  v17 = 32;
  *(_QWORD *)&v18 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v17);
  swift_bridgeObjectRelease();
  v10 = v19;
  v11 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v15, v10, v11);
  v12 = v15;
  v14 = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  v19 = v8;
  v20 = &protocol witness table for Expression<A>;
  v17 = v12;
  v18 = v14;
  sub_247BFB3FC(&v17, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

{
  return sub_247C1A9B4(a1, a2, &qword_2576ED3B8, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _UNKNOWN **v20;
  _QWORD v21[5];
  _QWORD v22[5];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v22[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3A0);
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v2;
  v22[1] = v3;
  v22[2] = v4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3B8);
  v21[3] = v8;
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v5;
  v21[1] = v6;
  v21[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v22, inited + 32);
  sub_247BFA88C((uint64_t)v21, inited + 72);
  v17 = 32;
  *(_QWORD *)&v18 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v17);
  swift_bridgeObjectRelease();
  v10 = v19;
  v11 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v15, v10, v11);
  v12 = v15;
  v14 = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  v19 = v8;
  v20 = &protocol witness table for Expression<A>;
  v17 = v12;
  v18 = v14;
  sub_247BFB3FC(&v17, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t + infix(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_247C1AB94(a1, a2, a3, &qword_2576ED3A0, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

{
  return sub_247C1AB94(a1, a2, a3, &qword_2576ED3B8, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

uint64_t sub_247C1A9B4(uint64_t *a1, uint64_t *a2, uint64_t *a3, void (*a4)(uint64_t *, _QWORD, unint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _UNKNOWN **v23;
  _QWORD v24[5];
  _QWORD v25[6];

  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  v8 = *a2;
  v9 = a2[1];
  v10 = a2[2];
  v11 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v25[3] = v11;
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v5;
  v25[1] = v6;
  v25[2] = v7;
  v24[3] = v11;
  v24[4] = &protocol witness table for Expression<A>;
  v24[0] = v8;
  v24[1] = v9;
  v24[2] = v10;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v25, inited + 32);
  sub_247BFA88C((uint64_t)v24, inited + 72);
  v20 = 32;
  *(_QWORD *)&v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v20);
  swift_bridgeObjectRelease();
  v13 = v22;
  v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  v15 = v18;
  v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  v22 = v11;
  v23 = &protocol witness table for Expression<A>;
  v20 = v15;
  v21 = v17;
  a4(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t sub_247C1AB94(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(uint64_t *, _QWORD, unint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _UNKNOWN **v23;
  _QWORD v24[5];
  _QWORD v25[5];

  v8 = *a1;
  v9 = a1[1];
  v10 = a1[2];
  v11 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v25[3] = v11;
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v9;
  v25[2] = v10;
  v24[3] = MEMORY[0x24BEE0D00];
  v24[4] = &protocol witness table for String;
  v24[0] = a2;
  v24[1] = a3;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v25, inited + 32);
  sub_247BFA88C((uint64_t)v24, inited + 72);
  v20 = 32;
  *(_QWORD *)&v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v20);
  swift_bridgeObjectRelease();
  v13 = v22;
  v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  v15 = v18;
  v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  v22 = v11;
  v23 = &protocol witness table for Expression<A>;
  v20 = v15;
  v21 = v17;
  a5(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t + infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1ADE4(a1, a2, a3, a4, 0, a5);
}

{
  return sub_247C1BE14(a1, a2, a3, a4, 0, a5);
}

uint64_t + infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1AEC0(a1, a2, a3, a4, 0, a5);
}

{
  return sub_247C1B17C(a1, a2, a3, a4, 0, a5);
}

uint64_t + infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_247C1AF9C(a1, a2, a3, 0, a4);
}

uint64_t + infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_247C1B094(a1, a2, 0, a3);
}

uint64_t - infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1ADE4(a1, a2, a3, a4, 1u, a5);
}

{
  return sub_247C1BE14(a1, a2, a3, a4, 1u, a5);
}

uint64_t - infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1AEC0(a1, a2, a3, a4, 1u, a5);
}

{
  return sub_247C1B17C(a1, a2, a3, a4, 1u, a5);
}

uint64_t - infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_247C1AF9C(a1, a2, a3, 1u, a4);
}

uint64_t - infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_247C1B094(a1, a2, 1u, a3);
}

uint64_t * infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1ADE4(a1, a2, a3, a4, 5u, a5);
}

{
  return sub_247C1BE14(a1, a2, a3, a4, 5u, a5);
}

uint64_t * infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1AEC0(a1, a2, a3, a4, 5u, a5);
}

{
  return sub_247C1B17C(a1, a2, a3, a4, 5u, a5);
}

uint64_t * infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_247C1AF9C(a1, a2, a3, 5u, a4);
}

uint64_t * infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_247C1B094(a1, a2, 5u, a3);
}

uint64_t / infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1ADE4(a1, a2, a3, a4, 6u, a5);
}

{
  return sub_247C1BE14(a1, a2, a3, a4, 6u, a5);
}

uint64_t sub_247C1ADE4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 a5@<W5>, uint64_t *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[5];
  _QWORD v17[3];
  uint64_t v18;
  _UNKNOWN **v19;

  v10 = *a1;
  v9 = a1[1];
  v11 = a1[2];
  v13 = *a2;
  v12 = a2[1];
  v14 = a2[2];
  v18 = type metadata accessor for Expression(0, a3, a3, a4);
  v19 = &protocol witness table for Expression<A>;
  v17[0] = v10;
  v17[1] = v9;
  v17[2] = v11;
  v16[3] = v18;
  v16[4] = &protocol witness table for Expression<A>;
  v16[0] = v13;
  v16[1] = v12;
  v16[2] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFA740((uint64_t)v17, (uint64_t)v16, 1, a5, a3, a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
}

uint64_t / infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1AEC0(a1, a2, a3, a4, 6u, a5);
}

{
  return sub_247C1B17C(a1, a2, a3, a4, 6u, a5);
}

uint64_t sub_247C1AEC0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 a5@<W5>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v17[5];
  _QWORD v18[5];

  v12 = *a1;
  v11 = a1[1];
  v13 = a1[2];
  v18[3] = type metadata accessor for Expression(0, a3, a3, a4);
  v18[4] = &protocol witness table for Expression<A>;
  v18[0] = v12;
  v18[1] = v11;
  v18[2] = v13;
  v14 = *(_QWORD *)(a4 + 8);
  v17[3] = a3;
  v17[4] = v14;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFA740((uint64_t)v18, (uint64_t)v17, 1, a5, a3, a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
}

uint64_t / infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_247C1AF9C(a1, a2, a3, 6u, a4);
}

uint64_t sub_247C1AF9C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unsigned __int8 a4@<W5>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v20[5];
  _QWORD v21[5];

  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  v11 = *a2;
  v10 = a2[1];
  v12 = a2[2];
  v13 = sub_247C3D9B4();
  v21[3] = type metadata accessor for Expression(0, v13, v14, v15);
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v8;
  v21[1] = v7;
  v21[2] = v9;
  v20[3] = type metadata accessor for Expression(0, a3, v16, v17);
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v11;
  v20[1] = v10;
  v20[2] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFA740((uint64_t)v21, (uint64_t)v20, 1, a4, v13, a5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

uint64_t / infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_247C1B094(a1, a2, 6u, a3);
}

uint64_t sub_247C1B094@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unsigned __int8 a3@<W5>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[5];
  _QWORD v17[3];
  uint64_t v18;
  _UNKNOWN **v19;

  v7 = *a1;
  v6 = a1[1];
  v8 = a1[2];
  v10 = *a2;
  v9 = a2[1];
  v11 = a2[2];
  v12 = sub_247C3D9B4();
  v18 = type metadata accessor for Expression(0, v12, v13, v14);
  v19 = &protocol witness table for Expression<A>;
  v17[0] = v7;
  v17[1] = v6;
  v17[2] = v8;
  v16[3] = v18;
  v16[4] = &protocol witness table for Expression<A>;
  v16[0] = v10;
  v16[1] = v9;
  v16[2] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFA740((uint64_t)v17, (uint64_t)v16, 1, a3, v12, a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
}

uint64_t sub_247C1B17C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 a5@<W5>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v20[5];
  _QWORD v21[5];

  v12 = *a1;
  v11 = a1[1];
  v13 = a1[2];
  v14 = sub_247C3D9B4();
  v21[3] = type metadata accessor for Expression(0, v14, v15, v16);
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v12;
  v21[1] = v11;
  v21[2] = v13;
  v17 = *(_QWORD *)(a4 + 8);
  v20[3] = a3;
  v20[4] = v17;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFA740((uint64_t)v21, (uint64_t)v20, 1, a5, v14, a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

uint64_t % infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1B308(a1, a2, a3, a4, 7u, a5);
}

{
  return sub_247C1C248(a1, a2, a3, a4, 7u, a5);
}

uint64_t % infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247BFA66C(a1, a2, a3, a4, 7u, a5);
}

{
  return sub_247C1B5CC(a1, a2, a3, a4, 7u, a5);
}

uint64_t % infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_247C1B3EC(a1, a2, a3, 7u, a4);
}

uint64_t % infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_247C1B4E4(a1, a2, 7u, a3);
}

uint64_t << infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1B308(a1, a2, a3, a4, 8u, a5);
}

{
  return sub_247C1C248(a1, a2, a3, a4, 8u, a5);
}

uint64_t << infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247BFA66C(a1, a2, a3, a4, 8u, a5);
}

{
  return sub_247C1B5CC(a1, a2, a3, a4, 8u, a5);
}

uint64_t << infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_247C1B3EC(a1, a2, a3, 8u, a4);
}

uint64_t << infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_247C1B4E4(a1, a2, 8u, a3);
}

uint64_t >> infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1B308(a1, a2, a3, a4, 9u, a5);
}

{
  return sub_247C1C248(a1, a2, a3, a4, 9u, a5);
}

uint64_t >> infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247BFA66C(a1, a2, a3, a4, 9u, a5);
}

{
  return sub_247C1B5CC(a1, a2, a3, a4, 9u, a5);
}

uint64_t >> infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_247C1B3EC(a1, a2, a3, 9u, a4);
}

uint64_t >> infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_247C1B4E4(a1, a2, 9u, a3);
}

uint64_t & infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1B308(a1, a2, a3, a4, 0xAu, a5);
}

{
  return sub_247C1C248(a1, a2, a3, a4, 0xAu, a5);
}

uint64_t & infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_247C1B3EC(a1, a2, a3, 0xAu, a4);
}

uint64_t & infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_247C1B4E4(a1, a2, 0xAu, a3);
}

uint64_t | infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1B308(a1, a2, a3, a4, 0xBu, a5);
}

{
  return sub_247C1C248(a1, a2, a3, a4, 0xBu, a5);
}

uint64_t sub_247C1B308@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[5];
  _QWORD v17[3];
  uint64_t v18;
  _UNKNOWN **v19;

  v10 = *a1;
  v9 = a1[1];
  v11 = a1[2];
  v13 = *a2;
  v12 = a2[1];
  v14 = a2[2];
  v18 = type metadata accessor for Expression(0, a3, a3, a4);
  v19 = &protocol witness table for Expression<A>;
  v17[0] = v10;
  v17[1] = v9;
  v17[2] = v11;
  v16[3] = v18;
  v16[4] = &protocol witness table for Expression<A>;
  v16[0] = v13;
  v16[1] = v12;
  v16[2] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFA740((uint64_t)v17, (uint64_t)v16, 1, a5, a3, a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
}

uint64_t | infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247BFA66C(a1, a2, a3, a4, 0xBu, a5);
}

{
  return sub_247C1B5CC(a1, a2, a3, a4, 0xBu, a5);
}

uint64_t | infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_247C1B3EC(a1, a2, a3, 0xBu, a4);
}

uint64_t sub_247C1B3EC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unsigned __int8 a4@<W4>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v20[5];
  _QWORD v21[5];

  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  v11 = *a2;
  v10 = a2[1];
  v12 = a2[2];
  v13 = sub_247C3D9B4();
  v21[3] = type metadata accessor for Expression(0, v13, v14, v15);
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v8;
  v21[1] = v7;
  v21[2] = v9;
  v20[3] = type metadata accessor for Expression(0, a3, v16, v17);
  v20[4] = &protocol witness table for Expression<A>;
  v20[0] = v11;
  v20[1] = v10;
  v20[2] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFA740((uint64_t)v21, (uint64_t)v20, 1, a4, v13, a5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

uint64_t | infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_247C1B4E4(a1, a2, 0xBu, a3);
}

uint64_t sub_247C1B4E4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, unsigned __int8 a3@<W4>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[5];
  _QWORD v17[3];
  uint64_t v18;
  _UNKNOWN **v19;

  v7 = *a1;
  v6 = a1[1];
  v8 = a1[2];
  v10 = *a2;
  v9 = a2[1];
  v11 = a2[2];
  v12 = sub_247C3D9B4();
  v18 = type metadata accessor for Expression(0, v12, v13, v14);
  v19 = &protocol witness table for Expression<A>;
  v17[0] = v7;
  v17[1] = v6;
  v17[2] = v8;
  v16[3] = v18;
  v16[4] = &protocol witness table for Expression<A>;
  v16[0] = v10;
  v16[1] = v9;
  v16[2] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFA740((uint64_t)v17, (uint64_t)v16, 1, a3, v12, a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
}

uint64_t sub_247C1B5CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v20[5];
  _QWORD v21[5];

  v12 = *a1;
  v11 = a1[1];
  v13 = a1[2];
  v14 = sub_247C3D9B4();
  v21[3] = type metadata accessor for Expression(0, v14, v15, v16);
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v12;
  v21[1] = v11;
  v21[2] = v13;
  v17 = *(_QWORD *)(a4 + 8);
  v20[3] = a3;
  v20[4] = v17;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFA740((uint64_t)v21, (uint64_t)v20, 1, a5, v14, a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

uint64_t ^ infix<A>(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_247C1B720(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))& infix<A>(_:_:), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))~ prefix<A>(_:), (void (*)(uint64_t *__return_ptr, uint64_t *, _QWORD *, uint64_t))| infix<A>(_:_:), (void (*)(uint64_t *, uint64_t *, uint64_t))& infix<A>(_:_:));
}

{
  return sub_247C1B720(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))& infix<A>(_:_:), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))~ prefix<A>(_:), (void (*)(uint64_t *__return_ptr, uint64_t *, _QWORD *, uint64_t))| infix<A>(_:_:), (void (*)(uint64_t *, uint64_t *, uint64_t))& infix<A>(_:_:));
}

{
  return sub_247C1B720(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))& infix<A>(_:_:), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))~ prefix<A>(_:), (void (*)(uint64_t *__return_ptr, uint64_t *, _QWORD *, uint64_t))| infix<A>(_:_:), (void (*)(uint64_t *, uint64_t *, uint64_t))& infix<A>(_:_:));
}

{
  return sub_247C1B720(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t *))& infix<A>(_:_:), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))~ prefix<A>(_:), (void (*)(uint64_t *__return_ptr, uint64_t *, _QWORD *, uint64_t))| infix<A>(_:_:), (void (*)(uint64_t *, uint64_t *, uint64_t))& infix<A>(_:_:));
}

uint64_t ^ infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C1B88C(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, uint64_t *))& infix<A>(_:_:), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))~ prefix<A>(_:), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t))| infix<A>(_:_:), (void (*)(uint64_t *, uint64_t *, uint64_t))& infix<A>(_:_:));
}

{
  return sub_247C1B88C(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, uint64_t *))& infix<A>(_:_:), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))~ prefix<A>(_:), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t))| infix<A>(_:_:), (void (*)(uint64_t *, uint64_t *, uint64_t))& infix<A>(_:_:));
}

uint64_t sub_247C1B720(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t *, uint64_t *), void (*a6)(uint64_t *__return_ptr, uint64_t *, uint64_t), void (*a7)(uint64_t *__return_ptr, uint64_t *, _QWORD *, uint64_t), void (*a8)(uint64_t *, uint64_t *, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v11 = a1[1];
  v12 = a1[2];
  v13 = *a2;
  v14 = a2[1];
  v15 = a2[2];
  v29 = *a1;
  v10 = v29;
  v30 = v11;
  v31 = v12;
  v23 = v13;
  v24 = v14;
  v25 = v15;
  a5(&v26, &v29, &v23);
  v23 = v26;
  v24 = v27;
  v25 = v28;
  a6(&v29, &v23, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = v29;
  v27 = v30;
  v28 = v31;
  v20 = v10;
  v21 = v11;
  v22 = v12;
  v19[0] = v13;
  v19[1] = v14;
  v19[2] = v15;
  a7(&v23, &v20, v19, a3);
  v20 = v23;
  v21 = v24;
  v22 = v25;
  a8(&v26, &v20, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C1B88C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t *), void (*a6)(uint64_t *__return_ptr, uint64_t *, uint64_t), void (*a7)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t), void (*a8)(uint64_t *, uint64_t *, uint64_t))
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v13 = a1[1];
  v15 = a1[2];
  v27 = *a1;
  v14 = v27;
  v28 = v13;
  v29 = v15;
  a5(&v24, &v27);
  v21 = v24;
  v22 = v25;
  v23 = v26;
  a6(&v27, &v21, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = v27;
  v25 = v28;
  v26 = v29;
  v18 = v14;
  v19 = v13;
  v20 = v15;
  a7(&v21, &v18, a2, a3, a4);
  v18 = v21;
  v19 = v22;
  v20 = v23;
  a8(&v24, &v18, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C1B9A0@<X0>(_QWORD *a1@<X0>, unsigned __int8 a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_247BFAB60(a2);
  sub_247BFAA64(a1, v5, v6, a3);
  return swift_bridgeObjectRelease();
}

uint64_t + infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_247C1BBF8(a1, a2, a3, &qword_2576ED3A0, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

{
  return sub_247C1BBF8(a1, a2, a3, &qword_2576ED3B8, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

uint64_t sub_247C1BBF8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, void (*a5)(uint64_t *, _QWORD, unint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  _UNKNOWN **v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _QWORD v22[5];
  _QWORD v23[5];

  v6 = *a3;
  v7 = a3[1];
  v8 = a3[2];
  v23[3] = MEMORY[0x24BEE0D00];
  v23[4] = &protocol witness table for String;
  v23[0] = a1;
  v23[1] = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v22[3] = v9;
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v6;
  v22[1] = v7;
  v22[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v23, inited + 32);
  sub_247BFA88C((uint64_t)v22, inited + 72);
  v18 = 32;
  *(_QWORD *)&v19 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v18);
  swift_bridgeObjectRelease();
  v11 = v20;
  v12 = v21;
  __swift_project_boxed_opaque_existential_1(&v18, v20);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v12[1])(&v16, v11, v12);
  v13 = v16;
  v15 = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  v20 = v9;
  v21 = &protocol witness table for Expression<A>;
  v18 = v13;
  v19 = v15;
  a5(&v18, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
}

uint64_t + infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1BF0C(a1, a2, a3, a4, 0, a5);
}

{
  return sub_247C1BFE4(a1, a2, a3, a4, 0, a5);
}

uint64_t - infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1BF0C(a1, a2, a3, a4, 1u, a5);
}

{
  return sub_247C1BFE4(a1, a2, a3, a4, 1u, a5);
}

uint64_t * infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1BF0C(a1, a2, a3, a4, 5u, a5);
}

{
  return sub_247C1BFE4(a1, a2, a3, a4, 5u, a5);
}

uint64_t sub_247C1BE14@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 a5@<W5>, uint64_t *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[5];
  _QWORD v19[5];

  v9 = *a1;
  v8 = a1[1];
  v10 = a1[2];
  v12 = *a2;
  v11 = a2[1];
  v13 = a2[2];
  v19[3] = type metadata accessor for Expression(0, a3, a3, a4);
  v19[4] = &protocol witness table for Expression<A>;
  v19[0] = v9;
  v19[1] = v8;
  v19[2] = v10;
  v14 = sub_247C3D9B4();
  v18[3] = type metadata accessor for Expression(0, v14, v15, v16);
  v18[4] = &protocol witness table for Expression<A>;
  v18[0] = v12;
  v18[1] = v11;
  v18[2] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFA740((uint64_t)v19, (uint64_t)v18, 1, a5, v14, a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t / infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1BF0C(a1, a2, a3, a4, 6u, a5);
}

{
  return sub_247C1BFE4(a1, a2, a3, a4, 6u, a5);
}

uint64_t sub_247C1BF0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 a5@<W5>, uint64_t *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[5];
  uint64_t v19[5];

  v11 = *a2;
  v10 = a2[1];
  v12 = a2[2];
  v13 = *(_QWORD *)(a4 + 8);
  v19[3] = a3;
  v19[4] = v13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  v18[3] = type metadata accessor for Expression(0, a3, v15, v16);
  v18[4] = &protocol witness table for Expression<A>;
  v18[0] = v11;
  v18[1] = v10;
  v18[2] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFA740((uint64_t)v19, (uint64_t)v18, 1, a5, a3, a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t sub_247C1BFE4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 a5@<W5>, uint64_t *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[5];
  uint64_t v20[5];

  v11 = *a2;
  v10 = a2[1];
  v12 = a2[2];
  v13 = *(_QWORD *)(a4 + 8);
  v20[3] = a3;
  v20[4] = v13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  v15 = sub_247C3D9B4();
  v19[3] = type metadata accessor for Expression(0, v15, v16, v17);
  v19[4] = &protocol witness table for Expression<A>;
  v19[0] = v11;
  v19[1] = v10;
  v19[2] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFA740((uint64_t)v20, (uint64_t)v19, 1, a5, v15, a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
}

uint64_t - prefix<A>(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[5];

  v7 = *a1;
  v6 = a1[1];
  v8 = a1[2];
  v10[3] = type metadata accessor for Expression(0, a2, a3, a4);
  v10[4] = &protocol witness table for Expression<A>;
  v10[0] = v7;
  v10[1] = v6;
  v10[2] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C1B9A0(v10, 1u, a5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t - prefix<A>(_:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[5];

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = sub_247C3D9B4();
  v10[3] = type metadata accessor for Expression(0, v6, v7, v8);
  v10[4] = &protocol witness table for Expression<A>;
  v10[0] = v4;
  v10[1] = v3;
  v10[2] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C1B9A0(v10, 1u, a2);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t % infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1C340(a1, a2, a3, a4, 7u, a5);
}

{
  return sub_247C1C418(a1, a2, a3, a4, 7u, a5);
}

uint64_t << infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1C340(a1, a2, a3, a4, 8u, a5);
}

{
  return sub_247C1C418(a1, a2, a3, a4, 8u, a5);
}

uint64_t >> infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1C340(a1, a2, a3, a4, 9u, a5);
}

{
  return sub_247C1C418(a1, a2, a3, a4, 9u, a5);
}

uint64_t & infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1C340(a1, a2, a3, a4, 0xAu, a5);
}

{
  return sub_247C1C418(a1, a2, a3, a4, 0xAu, a5);
}

uint64_t sub_247C1C248@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[5];
  _QWORD v19[5];

  v9 = *a1;
  v8 = a1[1];
  v10 = a1[2];
  v12 = *a2;
  v11 = a2[1];
  v13 = a2[2];
  v19[3] = type metadata accessor for Expression(0, a3, a3, a4);
  v19[4] = &protocol witness table for Expression<A>;
  v19[0] = v9;
  v19[1] = v8;
  v19[2] = v10;
  v14 = sub_247C3D9B4();
  v18[3] = type metadata accessor for Expression(0, v14, v15, v16);
  v18[4] = &protocol witness table for Expression<A>;
  v18[0] = v12;
  v18[1] = v11;
  v18[2] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFA740((uint64_t)v19, (uint64_t)v18, 1, a5, v14, a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t | infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_247C1C340(a1, a2, a3, a4, 0xBu, a5);
}

{
  return sub_247C1C418(a1, a2, a3, a4, 0xBu, a5);
}

uint64_t sub_247C1C340@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[5];
  uint64_t v19[5];

  v11 = *a2;
  v10 = a2[1];
  v12 = a2[2];
  v13 = *(_QWORD *)(a4 + 8);
  v19[3] = a3;
  v19[4] = v13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  v18[3] = type metadata accessor for Expression(0, a3, v15, v16);
  v18[4] = &protocol witness table for Expression<A>;
  v18[0] = v11;
  v18[1] = v10;
  v18[2] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFA740((uint64_t)v19, (uint64_t)v18, 1, a5, a3, a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t sub_247C1C418@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[5];
  uint64_t v20[5];

  v11 = *a2;
  v10 = a2[1];
  v12 = a2[2];
  v13 = *(_QWORD *)(a4 + 8);
  v20[3] = a3;
  v20[4] = v13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  v15 = sub_247C3D9B4();
  v19[3] = type metadata accessor for Expression(0, v15, v16, v17);
  v19[4] = &protocol witness table for Expression<A>;
  v19[0] = v11;
  v19[1] = v10;
  v19[2] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFA740((uint64_t)v20, (uint64_t)v19, 1, a5, v15, a6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
}

uint64_t ~ prefix<A>(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[5];

  v7 = *a1;
  v6 = a1[1];
  v8 = a1[2];
  v10[3] = type metadata accessor for Expression(0, a2, a3, a4);
  v10[4] = &protocol witness table for Expression<A>;
  v10[0] = v7;
  v10[1] = v6;
  v10[2] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C1B9A0(v10, 0xCu, a5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t ~ prefix<A>(_:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[5];

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = sub_247C3D9B4();
  v10[3] = type metadata accessor for Expression(0, v6, v7, v8);
  v10[4] = &protocol witness table for Expression<A>;
  v10[0] = v4;
  v10[1] = v3;
  v10[2] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C1B9A0(v10, 0xCu, a2);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t ^ infix<A>(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_247C1C680(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t *))& infix<A>(_:_:), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))~ prefix<A>(_:), (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t *, uint64_t, uint64_t))| infix<A>(_:_:), (void (*)(uint64_t *, uint64_t *, uint64_t))& infix<A>(_:_:));
}

{
  return sub_247C1C680(a1, a2, a3, a4, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t *))& infix<A>(_:_:), (void (*)(uint64_t *__return_ptr, uint64_t *, uint64_t))~ prefix<A>(_:), (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t *, uint64_t, uint64_t))| infix<A>(_:_:), (void (*)(uint64_t *, uint64_t *, uint64_t))& infix<A>(_:_:));
}

uint64_t sub_247C1C680(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t, uint64_t *), void (*a6)(uint64_t *__return_ptr, uint64_t *, uint64_t), void (*a7)(uint64_t *__return_ptr, uint64_t, uint64_t *, uint64_t, uint64_t), void (*a8)(uint64_t *, uint64_t *, uint64_t))
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v13 = a2[1];
  v15 = a2[2];
  v27 = *a2;
  v14 = v27;
  v28 = v13;
  v29 = v15;
  a5(&v24, a1, &v27);
  v21 = v24;
  v22 = v25;
  v23 = v26;
  a6(&v27, &v21, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = v27;
  v25 = v28;
  v26 = v29;
  v18 = v14;
  v19 = v13;
  v20 = v15;
  a7(&v21, a1, &v18, a3, a4);
  v18 = v21;
  v19 = v22;
  v20 = v23;
  a8(&v24, &v18, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t == infix<A>(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  _UNKNOWN **v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _QWORD v22[5];
  _QWORD v23[3];
  uint64_t v24;
  _UNKNOWN **v25;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v24 = type metadata accessor for Expression(0, a3, a3, a4);
  v25 = &protocol witness table for Expression<A>;
  v23[0] = v4;
  v23[1] = v5;
  v23[2] = v6;
  v22[3] = v24;
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v7;
  v22[1] = v8;
  v22[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v23, inited + 32);
  sub_247BFA88C((uint64_t)v22, inited + 72);
  v18 = 32;
  *(_QWORD *)&v19 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v18);
  swift_bridgeObjectRelease();
  v11 = v20;
  v12 = v21;
  __swift_project_boxed_opaque_existential_1(&v18, v20);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v12[1])(&v16, v11, v12);
  v13 = v16;
  v15 = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v21 = &protocol witness table for Expression<A>;
  v18 = v13;
  v19 = v15;
  sub_247BFB3FC(&v18, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[5];
  _QWORD v26[5];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v26[3] = type metadata accessor for Expression(0, a3, a3, a4);
  v26[4] = &protocol witness table for Expression<A>;
  v26[0] = v4;
  v26[1] = v5;
  v26[2] = v6;
  v10 = sub_247C3D9B4();
  v25[3] = type metadata accessor for Expression(0, v10, v11, v12);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v26, inited + 32);
  sub_247BFA88C((uint64_t)v25, inited + 72);
  v21 = 32;
  *(_QWORD *)&v22 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v21);
  swift_bridgeObjectRelease();
  v14 = v23;
  v15 = v24;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v15[1])(&v19, v14, v15);
  v16 = v19;
  v18 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v24 = &protocol witness table for Expression<A>;
  v21 = v16;
  v22 = v18;
  sub_247BFB3FC(&v21, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

uint64_t == infix<A>(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  _UNKNOWN **v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _UNKNOWN **v26;
  _QWORD v27[5];
  _QWORD v28[5];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v10 = sub_247C3D9B4();
  v28[3] = type metadata accessor for Expression(0, v10, v11, v12);
  v28[4] = &protocol witness table for Expression<A>;
  v28[0] = v4;
  v28[1] = v5;
  v28[2] = v6;
  v27[3] = type metadata accessor for Expression(0, a3, v13, v14);
  v27[4] = &protocol witness table for Expression<A>;
  v27[0] = v8;
  v27[1] = v7;
  v27[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v28, inited + 32);
  sub_247BFA88C((uint64_t)v27, inited + 72);
  v23 = 32;
  *(_QWORD *)&v24 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v23);
  swift_bridgeObjectRelease();
  v16 = v25;
  v17 = v26;
  __swift_project_boxed_opaque_existential_1(&v23, v25);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v17[1])(&v21, v16, v17);
  v18 = v21;
  v20 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v26 = &protocol witness table for Expression<A>;
  v23 = v18;
  v24 = v20;
  sub_247BFB3FC(&v23, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t == infix<A>(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  _UNKNOWN **v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _UNKNOWN **v22;
  _QWORD v23[5];
  _QWORD v24[3];
  uint64_t v25;
  _UNKNOWN **v26;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = sub_247C3D9B4();
  v25 = type metadata accessor for Expression(0, v8, v9, v10);
  v26 = &protocol witness table for Expression<A>;
  v24[0] = v2;
  v24[1] = v3;
  v24[2] = v4;
  v23[3] = v25;
  v23[4] = &protocol witness table for Expression<A>;
  v23[0] = v5;
  v23[1] = v6;
  v23[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v24, inited + 32);
  sub_247BFA88C((uint64_t)v23, inited + 72);
  v19 = 32;
  *(_QWORD *)&v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v19);
  swift_bridgeObjectRelease();
  v12 = v21;
  v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  v14 = v17;
  v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v22 = &protocol witness table for Expression<A>;
  v19 = v14;
  v20 = v16;
  sub_247BFB3FC(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

uint64_t == infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _UNKNOWN **v23;
  uint64_t v24[5];
  _QWORD v25[5];

  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  v25[3] = type metadata accessor for Expression(0, a3, a3, a4);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  v10 = *(_QWORD *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v25, inited + 32);
  sub_247BFA88C((uint64_t)v24, inited + 72);
  v20 = 32;
  *(_QWORD *)&v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v20);
  swift_bridgeObjectRelease();
  v13 = v22;
  v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  v15 = v18;
  v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v23 = &protocol witness table for Expression<A>;
  v20 = v15;
  v21 = v17;
  sub_247BFB3FC(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t == infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  _UNKNOWN **v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _UNKNOWN **v33;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _UNKNOWN **v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  _UNKNOWN **v52;
  uint64_t v53[3];
  uint64_t v54;
  _UNKNOWN **v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _UNKNOWN **v60;

  *(_QWORD *)&v45 = a4;
  v46 = a5;
  v8 = sub_247C3D9B4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v42 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v41 - v13;
  v15 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[1];
  v19 = a1[2];
  v43 = *a1;
  v44 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, a2, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    v22 = type metadata accessor for Expression(0, v8, v20, v21);
    v59 = v22;
    v60 = &protocol witness table for Expression<A>;
    v56 = v43;
    v57 = v18;
    v58 = v44;
    v23 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v42, 1, 1, a3);
    v54 = v22;
    v55 = &protocol witness table for Expression<A>;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = MEMORY[0x24958EDF4]("0.", v22);
    MEMORY[0x24958EDF4](&protocol conformance descriptor for A?, v8);
    ExpressionType<>.init(value:)(v23, v22, v24, v45, (uint64_t)v53);
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)&v56, inited + 32);
    sub_247BFA88C((uint64_t)v53, inited + 72);
    v49 = 32;
    *(_QWORD *)&v50 = 0xE100000000000000;
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(inited, &v49);
    swift_bridgeObjectRelease();
    v26 = v51;
    v27 = v52;
    __swift_project_boxed_opaque_existential_1(&v49, v51);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v27[1])(&v47, v26, v27);
    v28 = v47;
    v45 = v48;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    v52 = &protocol witness table for Expression<A>;
    v49 = v28;
    v50 = v45;
    sub_247BFB3FC(&v49, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
  }
  else
  {
    v29 = v15;
    v30 = v17;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v14, a3);
    v59 = type metadata accessor for Expression(0, v8, v31, v32);
    v60 = &protocol witness table for Expression<A>;
    v56 = v43;
    v57 = v18;
    v58 = v44;
    v33 = *(_UNKNOWN ***)(v45 + 8);
    v54 = a3;
    v55 = v33;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v53);
    (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 16))(boxed_opaque_existential_1, v17, a3);
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    v35 = swift_initStackObject();
    *(_OWORD *)(v35 + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)&v56, v35 + 32);
    sub_247BFA88C((uint64_t)v53, v35 + 72);
    v49 = 32;
    *(_QWORD *)&v50 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(v35, &v49);
    swift_bridgeObjectRelease();
    v36 = a3;
    v37 = v51;
    v38 = v52;
    __swift_project_boxed_opaque_existential_1(&v49, v51);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v38[1])(&v47, v37, v38);
    v39 = v47;
    v45 = v48;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    v52 = &protocol witness table for Expression<A>;
    v49 = v39;
    v50 = v45;
    sub_247BFB3FC(&v49, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v36);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
}

uint64_t == infix<A>(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[5];
  uint64_t v26[5];

  v7 = *a2;
  v6 = a2[1];
  v8 = a2[2];
  v9 = *(_QWORD *)(a4 + 8);
  v26[3] = a3;
  v26[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v26);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  v25[3] = type metadata accessor for Expression(0, a3, v11, v12);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v7;
  v25[1] = v6;
  v25[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v26, inited + 32);
  sub_247BFA88C((uint64_t)v25, inited + 72);
  v21 = 32;
  *(_QWORD *)&v22 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v21);
  swift_bridgeObjectRelease();
  v14 = v23;
  v15 = v24;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v15[1])(&v19, v14, v15);
  v16 = v19;
  v18 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v24 = &protocol witness table for Expression<A>;
  v21 = v16;
  v22 = v18;
  sub_247BFB3FC(&v21, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

uint64_t == infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  _UNKNOWN **v27;
  uint64_t v28;
  _UNKNOWN **v29;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _UNKNOWN **v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  _UNKNOWN **v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _UNKNOWN **v52;
  uint64_t v53[3];
  uint64_t v54;
  _UNKNOWN **v55;

  v39 = a4;
  v41 = a5;
  v8 = sub_247C3D9B4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v38 - v14;
  v16 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = *a2;
  v19 = a2[1];
  v20 = a2[2];
  *(_QWORD *)&v40 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
    v23 = type metadata accessor for Expression(0, v8, v21, v22);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, a3);
    v54 = v23;
    v55 = &protocol witness table for Expression<A>;
    v24 = MEMORY[0x24958EDF4]("0.", v23);
    MEMORY[0x24958EDF4](&protocol conformance descriptor for A?, v8);
    ExpressionType<>.init(value:)((uint64_t)v12, v23, v24, v39, (uint64_t)v53);
    v51 = v23;
    v52 = &protocol witness table for Expression<A>;
    v48 = v38;
    v49 = v40;
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)v53, inited + 32);
    sub_247BFA88C((uint64_t)&v48, inited + 72);
    v44 = 32;
    *(_QWORD *)&v45 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(inited, &v44);
    swift_bridgeObjectRelease();
    v26 = v46;
    v27 = v47;
    __swift_project_boxed_opaque_existential_1(&v44, v46);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v27[1])(&v42, v26, v27);
    v28 = v42;
    v40 = v43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    v47 = &protocol witness table for Expression<A>;
    v44 = v28;
    v45 = v40;
    sub_247BFB3FC(&v44, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v15, a3);
    v29 = *(_UNKNOWN ***)(v39 + 8);
    v54 = a3;
    v55 = v29;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v53);
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 16))(boxed_opaque_existential_1, v18, a3);
    v51 = type metadata accessor for Expression(0, v8, v31, v32);
    v52 = &protocol witness table for Expression<A>;
    v48 = v38;
    v49 = v40;
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    v33 = swift_initStackObject();
    *(_OWORD *)(v33 + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)v53, v33 + 32);
    sub_247BFA88C((uint64_t)&v48, v33 + 72);
    v44 = 32;
    *(_QWORD *)&v45 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(v33, &v44);
    swift_bridgeObjectRelease();
    v34 = v46;
    v35 = v47;
    __swift_project_boxed_opaque_existential_1(&v44, v46);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v35[1])(&v42, v34, v35);
    v36 = v42;
    v40 = v43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    v47 = &protocol witness table for Expression<A>;
    v44 = v36;
    v45 = v40;
    sub_247BFB3FC(&v44, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, a3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
}

uint64_t === infix<A>(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  _UNKNOWN **v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _QWORD v22[5];
  _QWORD v23[3];
  uint64_t v24;
  _UNKNOWN **v25;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v24 = type metadata accessor for Expression(0, a3, a3, a4);
  v25 = &protocol witness table for Expression<A>;
  v23[0] = v4;
  v23[1] = v5;
  v23[2] = v6;
  v22[3] = v24;
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v7;
  v22[1] = v8;
  v22[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v23, inited + 32);
  sub_247BFA88C((uint64_t)v22, inited + 72);
  v18 = 32;
  *(_QWORD *)&v19 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v18);
  swift_bridgeObjectRelease();
  v11 = v20;
  v12 = v21;
  __swift_project_boxed_opaque_existential_1(&v18, v20);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v12[1])(&v16, v11, v12);
  v13 = v16;
  v15 = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v21 = &protocol witness table for Expression<A>;
  v18 = v13;
  v19 = v15;
  sub_247BFB3FC(&v18, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[5];
  _QWORD v26[5];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v26[3] = type metadata accessor for Expression(0, a3, a3, a4);
  v26[4] = &protocol witness table for Expression<A>;
  v26[0] = v4;
  v26[1] = v5;
  v26[2] = v6;
  v10 = sub_247C3D9B4();
  v25[3] = type metadata accessor for Expression(0, v10, v11, v12);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v26, inited + 32);
  sub_247BFA88C((uint64_t)v25, inited + 72);
  v21 = 32;
  *(_QWORD *)&v22 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v21);
  swift_bridgeObjectRelease();
  v14 = v23;
  v15 = v24;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v15[1])(&v19, v14, v15);
  v16 = v19;
  v18 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v24 = &protocol witness table for Expression<A>;
  v21 = v16;
  v22 = v18;
  sub_247BFB3FC(&v21, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

uint64_t === infix<A>(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  _UNKNOWN **v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _UNKNOWN **v26;
  _QWORD v27[5];
  _QWORD v28[5];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v10 = sub_247C3D9B4();
  v28[3] = type metadata accessor for Expression(0, v10, v11, v12);
  v28[4] = &protocol witness table for Expression<A>;
  v28[0] = v4;
  v28[1] = v5;
  v28[2] = v6;
  v27[3] = type metadata accessor for Expression(0, a3, v13, v14);
  v27[4] = &protocol witness table for Expression<A>;
  v27[0] = v8;
  v27[1] = v7;
  v27[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v28, inited + 32);
  sub_247BFA88C((uint64_t)v27, inited + 72);
  v23 = 32;
  *(_QWORD *)&v24 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v23);
  swift_bridgeObjectRelease();
  v16 = v25;
  v17 = v26;
  __swift_project_boxed_opaque_existential_1(&v23, v25);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v17[1])(&v21, v16, v17);
  v18 = v21;
  v20 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v26 = &protocol witness table for Expression<A>;
  v23 = v18;
  v24 = v20;
  sub_247BFB3FC(&v23, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t === infix<A>(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  _UNKNOWN **v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _UNKNOWN **v22;
  _QWORD v23[5];
  _QWORD v24[3];
  uint64_t v25;
  _UNKNOWN **v26;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = sub_247C3D9B4();
  v25 = type metadata accessor for Expression(0, v8, v9, v10);
  v26 = &protocol witness table for Expression<A>;
  v24[0] = v2;
  v24[1] = v3;
  v24[2] = v4;
  v23[3] = v25;
  v23[4] = &protocol witness table for Expression<A>;
  v23[0] = v5;
  v23[1] = v6;
  v23[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v24, inited + 32);
  sub_247BFA88C((uint64_t)v23, inited + 72);
  v19 = 32;
  *(_QWORD *)&v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v19);
  swift_bridgeObjectRelease();
  v12 = v21;
  v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  v14 = v17;
  v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v22 = &protocol witness table for Expression<A>;
  v19 = v14;
  v20 = v16;
  sub_247BFB3FC(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

uint64_t === infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _UNKNOWN **v23;
  uint64_t v24[5];
  _QWORD v25[5];

  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  v25[3] = type metadata accessor for Expression(0, a3, a3, a4);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  v10 = *(_QWORD *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v25, inited + 32);
  sub_247BFA88C((uint64_t)v24, inited + 72);
  v20 = 32;
  *(_QWORD *)&v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v20);
  swift_bridgeObjectRelease();
  v13 = v22;
  v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  v15 = v18;
  v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v23 = &protocol witness table for Expression<A>;
  v20 = v15;
  v21 = v17;
  sub_247BFB3FC(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t === infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  _UNKNOWN **v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _UNKNOWN **v33;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _UNKNOWN **v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  _UNKNOWN **v52;
  uint64_t v53[3];
  uint64_t v54;
  _UNKNOWN **v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _UNKNOWN **v60;

  *(_QWORD *)&v45 = a4;
  v46 = a5;
  v8 = sub_247C3D9B4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v42 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v41 - v13;
  v15 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[1];
  v19 = a1[2];
  v43 = *a1;
  v44 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, a2, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    v22 = type metadata accessor for Expression(0, v8, v20, v21);
    v59 = v22;
    v60 = &protocol witness table for Expression<A>;
    v56 = v43;
    v57 = v18;
    v58 = v44;
    v23 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v42, 1, 1, a3);
    v54 = v22;
    v55 = &protocol witness table for Expression<A>;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = MEMORY[0x24958EDF4]("0.", v22);
    MEMORY[0x24958EDF4](&protocol conformance descriptor for A?, v8);
    ExpressionType<>.init(value:)(v23, v22, v24, v45, (uint64_t)v53);
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)&v56, inited + 32);
    sub_247BFA88C((uint64_t)v53, inited + 72);
    v49 = 32;
    *(_QWORD *)&v50 = 0xE100000000000000;
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(inited, &v49);
    swift_bridgeObjectRelease();
    v26 = v51;
    v27 = v52;
    __swift_project_boxed_opaque_existential_1(&v49, v51);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v27[1])(&v47, v26, v27);
    v28 = v47;
    v45 = v48;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    v52 = &protocol witness table for Expression<A>;
    v49 = v28;
    v50 = v45;
    sub_247BFB3FC(&v49, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
  }
  else
  {
    v29 = v15;
    v30 = v17;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v14, a3);
    v59 = type metadata accessor for Expression(0, v8, v31, v32);
    v60 = &protocol witness table for Expression<A>;
    v56 = v43;
    v57 = v18;
    v58 = v44;
    v33 = *(_UNKNOWN ***)(v45 + 8);
    v54 = a3;
    v55 = v33;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v53);
    (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 16))(boxed_opaque_existential_1, v17, a3);
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    v35 = swift_initStackObject();
    *(_OWORD *)(v35 + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)&v56, v35 + 32);
    sub_247BFA88C((uint64_t)v53, v35 + 72);
    v49 = 32;
    *(_QWORD *)&v50 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(v35, &v49);
    swift_bridgeObjectRelease();
    v36 = a3;
    v37 = v51;
    v38 = v52;
    __swift_project_boxed_opaque_existential_1(&v49, v51);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v38[1])(&v47, v37, v38);
    v39 = v47;
    v45 = v48;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    v52 = &protocol witness table for Expression<A>;
    v49 = v39;
    v50 = v45;
    sub_247BFB3FC(&v49, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v36);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
}

uint64_t === infix<A>(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[5];
  uint64_t v26[5];

  v7 = *a2;
  v6 = a2[1];
  v8 = a2[2];
  v9 = *(_QWORD *)(a4 + 8);
  v26[3] = a3;
  v26[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v26);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  v25[3] = type metadata accessor for Expression(0, a3, v11, v12);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v7;
  v25[1] = v6;
  v25[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v26, inited + 32);
  sub_247BFA88C((uint64_t)v25, inited + 72);
  v21 = 32;
  *(_QWORD *)&v22 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v21);
  swift_bridgeObjectRelease();
  v14 = v23;
  v15 = v24;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v15[1])(&v19, v14, v15);
  v16 = v19;
  v18 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v24 = &protocol witness table for Expression<A>;
  v21 = v16;
  v22 = v18;
  sub_247BFB3FC(&v21, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

uint64_t === infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  _UNKNOWN **v27;
  uint64_t v28;
  _UNKNOWN **v29;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _UNKNOWN **v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  _UNKNOWN **v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _UNKNOWN **v52;
  uint64_t v53[3];
  uint64_t v54;
  _UNKNOWN **v55;

  v39 = a4;
  v41 = a5;
  v8 = sub_247C3D9B4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v38 - v14;
  v16 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = *a2;
  v19 = a2[1];
  v20 = a2[2];
  *(_QWORD *)&v40 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
    v23 = type metadata accessor for Expression(0, v8, v21, v22);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, a3);
    v54 = v23;
    v55 = &protocol witness table for Expression<A>;
    v24 = MEMORY[0x24958EDF4]("0.", v23);
    MEMORY[0x24958EDF4](&protocol conformance descriptor for A?, v8);
    ExpressionType<>.init(value:)((uint64_t)v12, v23, v24, v39, (uint64_t)v53);
    v51 = v23;
    v52 = &protocol witness table for Expression<A>;
    v48 = v38;
    v49 = v40;
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)v53, inited + 32);
    sub_247BFA88C((uint64_t)&v48, inited + 72);
    v44 = 32;
    *(_QWORD *)&v45 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(inited, &v44);
    swift_bridgeObjectRelease();
    v26 = v46;
    v27 = v47;
    __swift_project_boxed_opaque_existential_1(&v44, v46);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v27[1])(&v42, v26, v27);
    v28 = v42;
    v40 = v43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    v47 = &protocol witness table for Expression<A>;
    v44 = v28;
    v45 = v40;
    sub_247BFB3FC(&v44, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v15, a3);
    v29 = *(_UNKNOWN ***)(v39 + 8);
    v54 = a3;
    v55 = v29;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v53);
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 16))(boxed_opaque_existential_1, v18, a3);
    v51 = type metadata accessor for Expression(0, v8, v31, v32);
    v52 = &protocol witness table for Expression<A>;
    v48 = v38;
    v49 = v40;
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    v33 = swift_initStackObject();
    *(_OWORD *)(v33 + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)v53, v33 + 32);
    sub_247BFA88C((uint64_t)&v48, v33 + 72);
    v44 = 32;
    *(_QWORD *)&v45 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(v33, &v44);
    swift_bridgeObjectRelease();
    v34 = v46;
    v35 = v47;
    __swift_project_boxed_opaque_existential_1(&v44, v46);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v35[1])(&v42, v34, v35);
    v36 = v42;
    v40 = v43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    v47 = &protocol witness table for Expression<A>;
    v44 = v36;
    v45 = v40;
    sub_247BFB3FC(&v44, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, a3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
}

uint64_t != infix<A>(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  _UNKNOWN **v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _QWORD v22[5];
  _QWORD v23[3];
  uint64_t v24;
  _UNKNOWN **v25;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v24 = type metadata accessor for Expression(0, a3, a3, a4);
  v25 = &protocol witness table for Expression<A>;
  v23[0] = v4;
  v23[1] = v5;
  v23[2] = v6;
  v22[3] = v24;
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v7;
  v22[1] = v8;
  v22[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v23, inited + 32);
  sub_247BFA88C((uint64_t)v22, inited + 72);
  v18 = 32;
  *(_QWORD *)&v19 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v18);
  swift_bridgeObjectRelease();
  v11 = v20;
  v12 = v21;
  __swift_project_boxed_opaque_existential_1(&v18, v20);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v12[1])(&v16, v11, v12);
  v13 = v16;
  v15 = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v21 = &protocol witness table for Expression<A>;
  v18 = v13;
  v19 = v15;
  sub_247BFB3FC(&v18, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[5];
  _QWORD v26[5];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v26[3] = type metadata accessor for Expression(0, a3, a3, a4);
  v26[4] = &protocol witness table for Expression<A>;
  v26[0] = v4;
  v26[1] = v5;
  v26[2] = v6;
  v10 = sub_247C3D9B4();
  v25[3] = type metadata accessor for Expression(0, v10, v11, v12);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v26, inited + 32);
  sub_247BFA88C((uint64_t)v25, inited + 72);
  v21 = 32;
  *(_QWORD *)&v22 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v21);
  swift_bridgeObjectRelease();
  v14 = v23;
  v15 = v24;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v15[1])(&v19, v14, v15);
  v16 = v19;
  v18 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v24 = &protocol witness table for Expression<A>;
  v21 = v16;
  v22 = v18;
  sub_247BFB3FC(&v21, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

uint64_t != infix<A>(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  _UNKNOWN **v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _UNKNOWN **v26;
  _QWORD v27[5];
  _QWORD v28[5];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v10 = sub_247C3D9B4();
  v28[3] = type metadata accessor for Expression(0, v10, v11, v12);
  v28[4] = &protocol witness table for Expression<A>;
  v28[0] = v4;
  v28[1] = v5;
  v28[2] = v6;
  v27[3] = type metadata accessor for Expression(0, a3, v13, v14);
  v27[4] = &protocol witness table for Expression<A>;
  v27[0] = v8;
  v27[1] = v7;
  v27[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v28, inited + 32);
  sub_247BFA88C((uint64_t)v27, inited + 72);
  v23 = 32;
  *(_QWORD *)&v24 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v23);
  swift_bridgeObjectRelease();
  v16 = v25;
  v17 = v26;
  __swift_project_boxed_opaque_existential_1(&v23, v25);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v17[1])(&v21, v16, v17);
  v18 = v21;
  v20 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v26 = &protocol witness table for Expression<A>;
  v23 = v18;
  v24 = v20;
  sub_247BFB3FC(&v23, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t != infix<A>(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  _UNKNOWN **v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _UNKNOWN **v22;
  _QWORD v23[5];
  _QWORD v24[3];
  uint64_t v25;
  _UNKNOWN **v26;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = sub_247C3D9B4();
  v25 = type metadata accessor for Expression(0, v8, v9, v10);
  v26 = &protocol witness table for Expression<A>;
  v24[0] = v2;
  v24[1] = v3;
  v24[2] = v4;
  v23[3] = v25;
  v23[4] = &protocol witness table for Expression<A>;
  v23[0] = v5;
  v23[1] = v6;
  v23[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v24, inited + 32);
  sub_247BFA88C((uint64_t)v23, inited + 72);
  v19 = 32;
  *(_QWORD *)&v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v19);
  swift_bridgeObjectRelease();
  v12 = v21;
  v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  v14 = v17;
  v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v22 = &protocol witness table for Expression<A>;
  v19 = v14;
  v20 = v16;
  sub_247BFB3FC(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

uint64_t != infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  _UNKNOWN **v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _UNKNOWN **v33;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _UNKNOWN **v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  _UNKNOWN **v52;
  uint64_t v53[3];
  uint64_t v54;
  _UNKNOWN **v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _UNKNOWN **v60;

  *(_QWORD *)&v45 = a4;
  v46 = a5;
  v8 = sub_247C3D9B4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v42 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v41 - v13;
  v15 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[1];
  v19 = a1[2];
  v43 = *a1;
  v44 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, a2, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    v22 = type metadata accessor for Expression(0, v8, v20, v21);
    v59 = v22;
    v60 = &protocol witness table for Expression<A>;
    v56 = v43;
    v57 = v18;
    v58 = v44;
    v23 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v42, 1, 1, a3);
    v54 = v22;
    v55 = &protocol witness table for Expression<A>;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = MEMORY[0x24958EDF4]("0.", v22);
    MEMORY[0x24958EDF4](&protocol conformance descriptor for A?, v8);
    ExpressionType<>.init(value:)(v23, v22, v24, v45, (uint64_t)v53);
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)&v56, inited + 32);
    sub_247BFA88C((uint64_t)v53, inited + 72);
    v49 = 32;
    *(_QWORD *)&v50 = 0xE100000000000000;
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(inited, &v49);
    swift_bridgeObjectRelease();
    v26 = v51;
    v27 = v52;
    __swift_project_boxed_opaque_existential_1(&v49, v51);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v27[1])(&v47, v26, v27);
    v28 = v47;
    v45 = v48;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    v52 = &protocol witness table for Expression<A>;
    v49 = v28;
    v50 = v45;
    sub_247BFB3FC(&v49, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
  }
  else
  {
    v29 = v15;
    v30 = v17;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v14, a3);
    v59 = type metadata accessor for Expression(0, v8, v31, v32);
    v60 = &protocol witness table for Expression<A>;
    v56 = v43;
    v57 = v18;
    v58 = v44;
    v33 = *(_UNKNOWN ***)(v45 + 8);
    v54 = a3;
    v55 = v33;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v53);
    (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 16))(boxed_opaque_existential_1, v17, a3);
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    v35 = swift_initStackObject();
    *(_OWORD *)(v35 + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)&v56, v35 + 32);
    sub_247BFA88C((uint64_t)v53, v35 + 72);
    v49 = 32;
    *(_QWORD *)&v50 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(v35, &v49);
    swift_bridgeObjectRelease();
    v36 = a3;
    v37 = v51;
    v38 = v52;
    __swift_project_boxed_opaque_existential_1(&v49, v51);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v38[1])(&v47, v37, v38);
    v39 = v47;
    v45 = v48;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    v52 = &protocol witness table for Expression<A>;
    v49 = v39;
    v50 = v45;
    sub_247BFB3FC(&v49, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v36);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
}

uint64_t != infix<A>(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[5];
  uint64_t v26[5];

  v7 = *a2;
  v6 = a2[1];
  v8 = a2[2];
  v9 = *(_QWORD *)(a4 + 8);
  v26[3] = a3;
  v26[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v26);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  v25[3] = type metadata accessor for Expression(0, a3, v11, v12);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v7;
  v25[1] = v6;
  v25[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v26, inited + 32);
  sub_247BFA88C((uint64_t)v25, inited + 72);
  v21 = 32;
  *(_QWORD *)&v22 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v21);
  swift_bridgeObjectRelease();
  v14 = v23;
  v15 = v24;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v15[1])(&v19, v14, v15);
  v16 = v19;
  v18 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v24 = &protocol witness table for Expression<A>;
  v21 = v16;
  v22 = v18;
  sub_247BFB3FC(&v21, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

uint64_t != infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  _UNKNOWN **v27;
  uint64_t v28;
  _UNKNOWN **v29;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _UNKNOWN **v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  _UNKNOWN **v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _UNKNOWN **v52;
  uint64_t v53[3];
  uint64_t v54;
  _UNKNOWN **v55;

  v39 = a4;
  v41 = a5;
  v8 = sub_247C3D9B4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v38 - v14;
  v16 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = *a2;
  v19 = a2[1];
  v20 = a2[2];
  *(_QWORD *)&v40 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
    v23 = type metadata accessor for Expression(0, v8, v21, v22);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, a3);
    v54 = v23;
    v55 = &protocol witness table for Expression<A>;
    v24 = MEMORY[0x24958EDF4]("0.", v23);
    MEMORY[0x24958EDF4](&protocol conformance descriptor for A?, v8);
    ExpressionType<>.init(value:)((uint64_t)v12, v23, v24, v39, (uint64_t)v53);
    v51 = v23;
    v52 = &protocol witness table for Expression<A>;
    v48 = v38;
    v49 = v40;
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)v53, inited + 32);
    sub_247BFA88C((uint64_t)&v48, inited + 72);
    v44 = 32;
    *(_QWORD *)&v45 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(inited, &v44);
    swift_bridgeObjectRelease();
    v26 = v46;
    v27 = v47;
    __swift_project_boxed_opaque_existential_1(&v44, v46);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v27[1])(&v42, v26, v27);
    v28 = v42;
    v40 = v43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    v47 = &protocol witness table for Expression<A>;
    v44 = v28;
    v45 = v40;
    sub_247BFB3FC(&v44, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v15, a3);
    v29 = *(_UNKNOWN ***)(v39 + 8);
    v54 = a3;
    v55 = v29;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v53);
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 16))(boxed_opaque_existential_1, v18, a3);
    v51 = type metadata accessor for Expression(0, v8, v31, v32);
    v52 = &protocol witness table for Expression<A>;
    v48 = v38;
    v49 = v40;
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    v33 = swift_initStackObject();
    *(_OWORD *)(v33 + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)v53, v33 + 32);
    sub_247BFA88C((uint64_t)&v48, v33 + 72);
    v44 = 32;
    *(_QWORD *)&v45 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(v33, &v44);
    swift_bridgeObjectRelease();
    v34 = v46;
    v35 = v47;
    __swift_project_boxed_opaque_existential_1(&v44, v46);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v35[1])(&v42, v34, v35);
    v36 = v42;
    v40 = v43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    v47 = &protocol witness table for Expression<A>;
    v44 = v36;
    v45 = v40;
    sub_247BFB3FC(&v44, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, a3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
}

uint64_t !== infix<A>(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  _UNKNOWN **v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _QWORD v22[5];
  _QWORD v23[3];
  uint64_t v24;
  _UNKNOWN **v25;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v24 = type metadata accessor for Expression(0, a3, a3, a4);
  v25 = &protocol witness table for Expression<A>;
  v23[0] = v4;
  v23[1] = v5;
  v23[2] = v6;
  v22[3] = v24;
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v7;
  v22[1] = v8;
  v22[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v23, inited + 32);
  sub_247BFA88C((uint64_t)v22, inited + 72);
  v18 = 32;
  *(_QWORD *)&v19 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v18);
  swift_bridgeObjectRelease();
  v11 = v20;
  v12 = v21;
  __swift_project_boxed_opaque_existential_1(&v18, v20);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v12[1])(&v16, v11, v12);
  v13 = v16;
  v15 = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v21 = &protocol witness table for Expression<A>;
  v18 = v13;
  v19 = v15;
  sub_247BFB3FC(&v18, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[5];
  _QWORD v26[5];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v26[3] = type metadata accessor for Expression(0, a3, a3, a4);
  v26[4] = &protocol witness table for Expression<A>;
  v26[0] = v4;
  v26[1] = v5;
  v26[2] = v6;
  v10 = sub_247C3D9B4();
  v25[3] = type metadata accessor for Expression(0, v10, v11, v12);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v26, inited + 32);
  sub_247BFA88C((uint64_t)v25, inited + 72);
  v21 = 32;
  *(_QWORD *)&v22 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v21);
  swift_bridgeObjectRelease();
  v14 = v23;
  v15 = v24;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v15[1])(&v19, v14, v15);
  v16 = v19;
  v18 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v24 = &protocol witness table for Expression<A>;
  v21 = v16;
  v22 = v18;
  sub_247BFB3FC(&v21, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

uint64_t !== infix<A>(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  _UNKNOWN **v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _UNKNOWN **v26;
  _QWORD v27[5];
  _QWORD v28[5];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v10 = sub_247C3D9B4();
  v28[3] = type metadata accessor for Expression(0, v10, v11, v12);
  v28[4] = &protocol witness table for Expression<A>;
  v28[0] = v4;
  v28[1] = v5;
  v28[2] = v6;
  v27[3] = type metadata accessor for Expression(0, a3, v13, v14);
  v27[4] = &protocol witness table for Expression<A>;
  v27[0] = v8;
  v27[1] = v7;
  v27[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v28, inited + 32);
  sub_247BFA88C((uint64_t)v27, inited + 72);
  v23 = 32;
  *(_QWORD *)&v24 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v23);
  swift_bridgeObjectRelease();
  v16 = v25;
  v17 = v26;
  __swift_project_boxed_opaque_existential_1(&v23, v25);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v17[1])(&v21, v16, v17);
  v18 = v21;
  v20 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v26 = &protocol witness table for Expression<A>;
  v23 = v18;
  v24 = v20;
  sub_247BFB3FC(&v23, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t !== infix<A>(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  _UNKNOWN **v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _UNKNOWN **v22;
  _QWORD v23[5];
  _QWORD v24[3];
  uint64_t v25;
  _UNKNOWN **v26;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = sub_247C3D9B4();
  v25 = type metadata accessor for Expression(0, v8, v9, v10);
  v26 = &protocol witness table for Expression<A>;
  v24[0] = v2;
  v24[1] = v3;
  v24[2] = v4;
  v23[3] = v25;
  v23[4] = &protocol witness table for Expression<A>;
  v23[0] = v5;
  v23[1] = v6;
  v23[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v24, inited + 32);
  sub_247BFA88C((uint64_t)v23, inited + 72);
  v19 = 32;
  *(_QWORD *)&v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v19);
  swift_bridgeObjectRelease();
  v12 = v21;
  v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  v14 = v17;
  v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v22 = &protocol witness table for Expression<A>;
  v19 = v14;
  v20 = v16;
  sub_247BFB3FC(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

uint64_t !== infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _UNKNOWN **v23;
  uint64_t v24[5];
  _QWORD v25[5];

  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  v25[3] = type metadata accessor for Expression(0, a3, a3, a4);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  v10 = *(_QWORD *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v25, inited + 32);
  sub_247BFA88C((uint64_t)v24, inited + 72);
  v20 = 32;
  *(_QWORD *)&v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v20);
  swift_bridgeObjectRelease();
  v13 = v22;
  v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  v15 = v18;
  v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v23 = &protocol witness table for Expression<A>;
  v20 = v15;
  v21 = v17;
  sub_247BFB3FC(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t !== infix<A>(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  _UNKNOWN **v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _UNKNOWN **v32;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _UNKNOWN **v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  _UNKNOWN **v52;
  uint64_t v53[3];
  uint64_t v54;
  _UNKNOWN **v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _UNKNOWN **v60;

  *(_QWORD *)&v45 = a4;
  v46 = a5;
  v8 = sub_247C3D9B4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v42 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v41 - v13;
  v15 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[1];
  v19 = a1[2];
  v43 = *a1;
  v44 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, a2, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    v22 = type metadata accessor for Expression(0, v8, v20, v21);
    v59 = v22;
    v60 = &protocol witness table for Expression<A>;
    v56 = v43;
    v57 = v18;
    v58 = v44;
    v23 = (uint64_t)v42;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v42, 1, 1, a3);
    v54 = v22;
    v55 = &protocol witness table for Expression<A>;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = MEMORY[0x24958EDF4]("0.", v22);
    MEMORY[0x24958EDF4](&protocol conformance descriptor for A?, v8);
    ExpressionType<>.init(value:)(v23, v22, v24, v45, (uint64_t)v53);
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)&v56, inited + 32);
    sub_247BFA88C((uint64_t)v53, inited + 72);
    v49 = 32;
    *(_QWORD *)&v50 = 0xE100000000000000;
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(inited, &v49);
    swift_bridgeObjectRelease();
    v26 = v51;
    v27 = v52;
    __swift_project_boxed_opaque_existential_1(&v49, v51);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v27[1])(&v47, v26, v27);
    v28 = v47;
    v45 = v48;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    v52 = &protocol witness table for Expression<A>;
    v49 = v28;
    v50 = v45;
    sub_247BFB3FC(&v49, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
  }
  else
  {
    v29 = v17;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v14, a3);
    v59 = type metadata accessor for Expression(0, v8, v30, v31);
    v60 = &protocol witness table for Expression<A>;
    v56 = v43;
    v57 = v18;
    v58 = v44;
    v32 = *(_UNKNOWN ***)(v45 + 8);
    v54 = a3;
    v55 = v32;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v53);
    v34 = v15;
    (*(void (**)(uint64_t *, char *, uint64_t))(v15 + 16))(boxed_opaque_existential_1, v29, a3);
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    v35 = swift_initStackObject();
    *(_OWORD *)(v35 + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)&v56, v35 + 32);
    sub_247BFA88C((uint64_t)v53, v35 + 72);
    v49 = 32;
    *(_QWORD *)&v50 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(v35, &v49);
    swift_bridgeObjectRelease();
    v36 = a3;
    v37 = v51;
    v38 = v52;
    __swift_project_boxed_opaque_existential_1(&v49, v51);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v38[1])(&v47, v37, v38);
    v39 = v47;
    v45 = v48;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    v52 = &protocol witness table for Expression<A>;
    v49 = v39;
    v50 = v45;
    sub_247BFB3FC(&v49, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v36);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
}

uint64_t !== infix<A>(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[5];
  uint64_t v26[5];

  v7 = *a2;
  v6 = a2[1];
  v8 = a2[2];
  v9 = *(_QWORD *)(a4 + 8);
  v26[3] = a3;
  v26[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v26);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  v25[3] = type metadata accessor for Expression(0, a3, v11, v12);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v7;
  v25[1] = v6;
  v25[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v26, inited + 32);
  sub_247BFA88C((uint64_t)v25, inited + 72);
  v21 = 32;
  *(_QWORD *)&v22 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v21);
  swift_bridgeObjectRelease();
  v14 = v23;
  v15 = v24;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v15[1])(&v19, v14, v15);
  v16 = v19;
  v18 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v24 = &protocol witness table for Expression<A>;
  v21 = v16;
  v22 = v18;
  sub_247BFB3FC(&v21, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

uint64_t !== infix<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t inited;
  uint64_t v26;
  _UNKNOWN **v27;
  uint64_t v28;
  _UNKNOWN **v29;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _UNKNOWN **v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  _UNKNOWN **v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _UNKNOWN **v52;
  uint64_t v53[3];
  uint64_t v54;
  _UNKNOWN **v55;

  v39 = a4;
  v41 = a5;
  v8 = sub_247C3D9B4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v38 - v14;
  v16 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = *a2;
  v19 = a2[1];
  v20 = a2[2];
  *(_QWORD *)&v40 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
    v23 = type metadata accessor for Expression(0, v8, v21, v22);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v12, 1, 1, a3);
    v54 = v23;
    v55 = &protocol witness table for Expression<A>;
    v24 = MEMORY[0x24958EDF4]("0.", v23);
    MEMORY[0x24958EDF4](&protocol conformance descriptor for A?, v8);
    ExpressionType<>.init(value:)((uint64_t)v12, v23, v24, v39, (uint64_t)v53);
    v51 = v23;
    v52 = &protocol witness table for Expression<A>;
    v48 = v38;
    v49 = v40;
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)v53, inited + 32);
    sub_247BFA88C((uint64_t)&v48, inited + 72);
    v44 = 32;
    *(_QWORD *)&v45 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(inited, &v44);
    swift_bridgeObjectRelease();
    v26 = v46;
    v27 = v47;
    __swift_project_boxed_opaque_existential_1(&v44, v46);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v27[1])(&v42, v26, v27);
    v28 = v42;
    v40 = v43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    v47 = &protocol witness table for Expression<A>;
    v44 = v28;
    v45 = v40;
    sub_247BFB3FC(&v44, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v15, a3);
    v29 = *(_UNKNOWN ***)(v39 + 8);
    v54 = a3;
    v55 = v29;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v53);
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 16))(boxed_opaque_existential_1, v18, a3);
    v51 = type metadata accessor for Expression(0, v8, v31, v32);
    v52 = &protocol witness table for Expression<A>;
    v48 = v38;
    v49 = v40;
    v50 = v20;
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    v33 = swift_initStackObject();
    *(_OWORD *)(v33 + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)v53, v33 + 32);
    sub_247BFA88C((uint64_t)&v48, v33 + 72);
    v44 = 32;
    *(_QWORD *)&v45 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(v33, &v44);
    swift_bridgeObjectRelease();
    v34 = v46;
    v35 = v47;
    __swift_project_boxed_opaque_existential_1(&v44, v46);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v35[1])(&v42, v34, v35);
    v36 = v42;
    v40 = v43;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    v47 = &protocol witness table for Expression<A>;
    v44 = v36;
    v45 = v40;
    sub_247BFB3FC(&v44, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v44);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, a3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
}

uint64_t > infix<A>(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  _UNKNOWN **v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _QWORD v22[5];
  _QWORD v23[3];
  uint64_t v24;
  _UNKNOWN **v25;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v24 = type metadata accessor for Expression(0, a3, a3, a4);
  v25 = &protocol witness table for Expression<A>;
  v23[0] = v4;
  v23[1] = v5;
  v23[2] = v6;
  v22[3] = v24;
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v7;
  v22[1] = v8;
  v22[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v23, inited + 32);
  sub_247BFA88C((uint64_t)v22, inited + 72);
  v18 = 32;
  *(_QWORD *)&v19 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v18);
  swift_bridgeObjectRelease();
  v11 = v20;
  v12 = v21;
  __swift_project_boxed_opaque_existential_1(&v18, v20);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v12[1])(&v16, v11, v12);
  v13 = v16;
  v15 = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v21 = &protocol witness table for Expression<A>;
  v18 = v13;
  v19 = v15;
  sub_247BFB3FC(&v18, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[5];
  _QWORD v26[5];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v26[3] = type metadata accessor for Expression(0, a3, a3, a4);
  v26[4] = &protocol witness table for Expression<A>;
  v26[0] = v4;
  v26[1] = v5;
  v26[2] = v6;
  v10 = sub_247C3D9B4();
  v25[3] = type metadata accessor for Expression(0, v10, v11, v12);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v26, inited + 32);
  sub_247BFA88C((uint64_t)v25, inited + 72);
  v21 = 32;
  *(_QWORD *)&v22 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v21);
  swift_bridgeObjectRelease();
  v14 = v23;
  v15 = v24;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v15[1])(&v19, v14, v15);
  v16 = v19;
  v18 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v24 = &protocol witness table for Expression<A>;
  v21 = v16;
  v22 = v18;
  sub_247BFB3FC(&v21, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

uint64_t > infix<A>(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  _UNKNOWN **v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _UNKNOWN **v26;
  _QWORD v27[5];
  _QWORD v28[5];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v10 = sub_247C3D9B4();
  v28[3] = type metadata accessor for Expression(0, v10, v11, v12);
  v28[4] = &protocol witness table for Expression<A>;
  v28[0] = v4;
  v28[1] = v5;
  v28[2] = v6;
  v27[3] = type metadata accessor for Expression(0, a3, v13, v14);
  v27[4] = &protocol witness table for Expression<A>;
  v27[0] = v8;
  v27[1] = v7;
  v27[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v28, inited + 32);
  sub_247BFA88C((uint64_t)v27, inited + 72);
  v23 = 32;
  *(_QWORD *)&v24 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v23);
  swift_bridgeObjectRelease();
  v16 = v25;
  v17 = v26;
  __swift_project_boxed_opaque_existential_1(&v23, v25);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v17[1])(&v21, v16, v17);
  v18 = v21;
  v20 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v26 = &protocol witness table for Expression<A>;
  v23 = v18;
  v24 = v20;
  sub_247BFB3FC(&v23, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t > infix<A>(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  _UNKNOWN **v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _UNKNOWN **v22;
  _QWORD v23[5];
  _QWORD v24[3];
  uint64_t v25;
  _UNKNOWN **v26;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = sub_247C3D9B4();
  v25 = type metadata accessor for Expression(0, v8, v9, v10);
  v26 = &protocol witness table for Expression<A>;
  v24[0] = v2;
  v24[1] = v3;
  v24[2] = v4;
  v23[3] = v25;
  v23[4] = &protocol witness table for Expression<A>;
  v23[0] = v5;
  v23[1] = v6;
  v23[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v24, inited + 32);
  sub_247BFA88C((uint64_t)v23, inited + 72);
  v19 = 32;
  *(_QWORD *)&v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v19);
  swift_bridgeObjectRelease();
  v12 = v21;
  v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  v14 = v17;
  v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v22 = &protocol witness table for Expression<A>;
  v19 = v14;
  v20 = v16;
  sub_247BFB3FC(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

uint64_t > infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _UNKNOWN **v23;
  uint64_t v24[5];
  _QWORD v25[5];

  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  v25[3] = type metadata accessor for Expression(0, a3, a3, a4);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  v10 = *(_QWORD *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v25, inited + 32);
  sub_247BFA88C((uint64_t)v24, inited + 72);
  v20 = 32;
  *(_QWORD *)&v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v20);
  swift_bridgeObjectRelease();
  v13 = v22;
  v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  v15 = v18;
  v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v23 = &protocol witness table for Expression<A>;
  v20 = v15;
  v21 = v17;
  sub_247BFB3FC(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v16;
  _UNKNOWN **v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _UNKNOWN **v26;
  uint64_t v27[5];
  _QWORD v28[5];

  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  v10 = sub_247C3D9B4();
  v28[3] = type metadata accessor for Expression(0, v10, v11, v12);
  v28[4] = &protocol witness table for Expression<A>;
  v28[0] = v8;
  v28[1] = v7;
  v28[2] = v9;
  v13 = *(_QWORD *)(a4 + 8);
  v27[3] = a3;
  v27[4] = v13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v28, inited + 32);
  sub_247BFA88C((uint64_t)v27, inited + 72);
  v23 = 32;
  *(_QWORD *)&v24 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v23);
  swift_bridgeObjectRelease();
  v16 = v25;
  v17 = v26;
  __swift_project_boxed_opaque_existential_1(&v23, v25);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v17[1])(&v21, v16, v17);
  v18 = v21;
  v20 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v26 = &protocol witness table for Expression<A>;
  v23 = v18;
  v24 = v20;
  sub_247BFB3FC(&v23, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t > infix<A>(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[5];
  uint64_t v26[5];

  v7 = *a2;
  v6 = a2[1];
  v8 = a2[2];
  v9 = *(_QWORD *)(a4 + 8);
  v26[3] = a3;
  v26[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v26);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  v25[3] = type metadata accessor for Expression(0, a3, v11, v12);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v7;
  v25[1] = v6;
  v25[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v26, inited + 32);
  sub_247BFA88C((uint64_t)v25, inited + 72);
  v21 = 32;
  *(_QWORD *)&v22 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v21);
  swift_bridgeObjectRelease();
  v14 = v23;
  v15 = v24;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v15[1])(&v19, v14, v15);
  v16 = v19;
  v18 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v24 = &protocol witness table for Expression<A>;
  v21 = v16;
  v22 = v18;
  sub_247BFB3FC(&v21, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  _UNKNOWN **v16;
  uint64_t v17;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  _UNKNOWN **v25;
  _QWORD v26[5];
  uint64_t v27[5];

  v7 = *a2;
  v6 = a2[1];
  v8 = a2[2];
  v9 = *(_QWORD *)(a4 + 8);
  v27[3] = a3;
  v27[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  v11 = sub_247C3D9B4();
  v26[3] = type metadata accessor for Expression(0, v11, v12, v13);
  v26[4] = &protocol witness table for Expression<A>;
  v26[0] = v7;
  v26[1] = v6;
  v26[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v27, inited + 32);
  sub_247BFA88C((uint64_t)v26, inited + 72);
  v22 = 32;
  *(_QWORD *)&v23 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v22);
  swift_bridgeObjectRelease();
  v15 = v24;
  v16 = v25;
  __swift_project_boxed_opaque_existential_1(&v22, v24);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v16[1])(&v20, v15, v16);
  v17 = v20;
  v19 = v21;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v25 = &protocol witness table for Expression<A>;
  v22 = v17;
  v23 = v19;
  sub_247BFB3FC(&v22, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t >= infix<A>(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  _UNKNOWN **v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _QWORD v22[5];
  _QWORD v23[3];
  uint64_t v24;
  _UNKNOWN **v25;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v24 = type metadata accessor for Expression(0, a3, a3, a4);
  v25 = &protocol witness table for Expression<A>;
  v23[0] = v4;
  v23[1] = v5;
  v23[2] = v6;
  v22[3] = v24;
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v7;
  v22[1] = v8;
  v22[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v23, inited + 32);
  sub_247BFA88C((uint64_t)v22, inited + 72);
  v18 = 32;
  *(_QWORD *)&v19 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v18);
  swift_bridgeObjectRelease();
  v11 = v20;
  v12 = v21;
  __swift_project_boxed_opaque_existential_1(&v18, v20);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v12[1])(&v16, v11, v12);
  v13 = v16;
  v15 = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v21 = &protocol witness table for Expression<A>;
  v18 = v13;
  v19 = v15;
  sub_247BFB3FC(&v18, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[5];
  _QWORD v26[5];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v26[3] = type metadata accessor for Expression(0, a3, a3, a4);
  v26[4] = &protocol witness table for Expression<A>;
  v26[0] = v4;
  v26[1] = v5;
  v26[2] = v6;
  v10 = sub_247C3D9B4();
  v25[3] = type metadata accessor for Expression(0, v10, v11, v12);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v26, inited + 32);
  sub_247BFA88C((uint64_t)v25, inited + 72);
  v21 = 32;
  *(_QWORD *)&v22 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v21);
  swift_bridgeObjectRelease();
  v14 = v23;
  v15 = v24;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v15[1])(&v19, v14, v15);
  v16 = v19;
  v18 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v24 = &protocol witness table for Expression<A>;
  v21 = v16;
  v22 = v18;
  sub_247BFB3FC(&v21, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

uint64_t >= infix<A>(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  _UNKNOWN **v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _UNKNOWN **v26;
  _QWORD v27[5];
  _QWORD v28[5];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v10 = sub_247C3D9B4();
  v28[3] = type metadata accessor for Expression(0, v10, v11, v12);
  v28[4] = &protocol witness table for Expression<A>;
  v28[0] = v4;
  v28[1] = v5;
  v28[2] = v6;
  v27[3] = type metadata accessor for Expression(0, a3, v13, v14);
  v27[4] = &protocol witness table for Expression<A>;
  v27[0] = v8;
  v27[1] = v7;
  v27[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v28, inited + 32);
  sub_247BFA88C((uint64_t)v27, inited + 72);
  v23 = 32;
  *(_QWORD *)&v24 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v23);
  swift_bridgeObjectRelease();
  v16 = v25;
  v17 = v26;
  __swift_project_boxed_opaque_existential_1(&v23, v25);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v17[1])(&v21, v16, v17);
  v18 = v21;
  v20 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v26 = &protocol witness table for Expression<A>;
  v23 = v18;
  v24 = v20;
  sub_247BFB3FC(&v23, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t >= infix<A>(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  _UNKNOWN **v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _UNKNOWN **v22;
  _QWORD v23[5];
  _QWORD v24[3];
  uint64_t v25;
  _UNKNOWN **v26;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = sub_247C3D9B4();
  v25 = type metadata accessor for Expression(0, v8, v9, v10);
  v26 = &protocol witness table for Expression<A>;
  v24[0] = v2;
  v24[1] = v3;
  v24[2] = v4;
  v23[3] = v25;
  v23[4] = &protocol witness table for Expression<A>;
  v23[0] = v5;
  v23[1] = v6;
  v23[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v24, inited + 32);
  sub_247BFA88C((uint64_t)v23, inited + 72);
  v19 = 32;
  *(_QWORD *)&v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v19);
  swift_bridgeObjectRelease();
  v12 = v21;
  v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  v14 = v17;
  v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v22 = &protocol witness table for Expression<A>;
  v19 = v14;
  v20 = v16;
  sub_247BFB3FC(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

uint64_t >= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _UNKNOWN **v23;
  uint64_t v24[5];
  _QWORD v25[5];

  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  v25[3] = type metadata accessor for Expression(0, a3, a3, a4);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  v10 = *(_QWORD *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v25, inited + 32);
  sub_247BFA88C((uint64_t)v24, inited + 72);
  v20 = 32;
  *(_QWORD *)&v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v20);
  swift_bridgeObjectRelease();
  v13 = v22;
  v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  v15 = v18;
  v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v23 = &protocol witness table for Expression<A>;
  v20 = v15;
  v21 = v17;
  sub_247BFB3FC(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v16;
  _UNKNOWN **v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _UNKNOWN **v26;
  uint64_t v27[5];
  _QWORD v28[5];

  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  v10 = sub_247C3D9B4();
  v28[3] = type metadata accessor for Expression(0, v10, v11, v12);
  v28[4] = &protocol witness table for Expression<A>;
  v28[0] = v8;
  v28[1] = v7;
  v28[2] = v9;
  v13 = *(_QWORD *)(a4 + 8);
  v27[3] = a3;
  v27[4] = v13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v28, inited + 32);
  sub_247BFA88C((uint64_t)v27, inited + 72);
  v23 = 32;
  *(_QWORD *)&v24 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v23);
  swift_bridgeObjectRelease();
  v16 = v25;
  v17 = v26;
  __swift_project_boxed_opaque_existential_1(&v23, v25);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v17[1])(&v21, v16, v17);
  v18 = v21;
  v20 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v26 = &protocol witness table for Expression<A>;
  v23 = v18;
  v24 = v20;
  sub_247BFB3FC(&v23, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t >= infix<A>(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[5];
  uint64_t v26[5];

  v7 = *a2;
  v6 = a2[1];
  v8 = a2[2];
  v9 = *(_QWORD *)(a4 + 8);
  v26[3] = a3;
  v26[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v26);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  v25[3] = type metadata accessor for Expression(0, a3, v11, v12);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v7;
  v25[1] = v6;
  v25[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v26, inited + 32);
  sub_247BFA88C((uint64_t)v25, inited + 72);
  v21 = 32;
  *(_QWORD *)&v22 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v21);
  swift_bridgeObjectRelease();
  v14 = v23;
  v15 = v24;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v15[1])(&v19, v14, v15);
  v16 = v19;
  v18 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v24 = &protocol witness table for Expression<A>;
  v21 = v16;
  v22 = v18;
  sub_247BFB3FC(&v21, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  _UNKNOWN **v16;
  uint64_t v17;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  _UNKNOWN **v25;
  _QWORD v26[5];
  uint64_t v27[5];

  v7 = *a2;
  v6 = a2[1];
  v8 = a2[2];
  v9 = *(_QWORD *)(a4 + 8);
  v27[3] = a3;
  v27[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  v11 = sub_247C3D9B4();
  v26[3] = type metadata accessor for Expression(0, v11, v12, v13);
  v26[4] = &protocol witness table for Expression<A>;
  v26[0] = v7;
  v26[1] = v6;
  v26[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v27, inited + 32);
  sub_247BFA88C((uint64_t)v26, inited + 72);
  v22 = 32;
  *(_QWORD *)&v23 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v22);
  swift_bridgeObjectRelease();
  v15 = v24;
  v16 = v25;
  __swift_project_boxed_opaque_existential_1(&v22, v24);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v16[1])(&v20, v15, v16);
  v17 = v20;
  v19 = v21;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v25 = &protocol witness table for Expression<A>;
  v22 = v17;
  v23 = v19;
  sub_247BFB3FC(&v22, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t < infix<A>(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  _UNKNOWN **v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _QWORD v22[5];
  _QWORD v23[3];
  uint64_t v24;
  _UNKNOWN **v25;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v24 = type metadata accessor for Expression(0, a3, a3, a4);
  v25 = &protocol witness table for Expression<A>;
  v23[0] = v4;
  v23[1] = v5;
  v23[2] = v6;
  v22[3] = v24;
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v7;
  v22[1] = v8;
  v22[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v23, inited + 32);
  sub_247BFA88C((uint64_t)v22, inited + 72);
  v18 = 32;
  *(_QWORD *)&v19 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v18);
  swift_bridgeObjectRelease();
  v11 = v20;
  v12 = v21;
  __swift_project_boxed_opaque_existential_1(&v18, v20);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v12[1])(&v16, v11, v12);
  v13 = v16;
  v15 = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v21 = &protocol witness table for Expression<A>;
  v18 = v13;
  v19 = v15;
  sub_247BFB3FC(&v18, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[5];
  _QWORD v26[5];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v26[3] = type metadata accessor for Expression(0, a3, a3, a4);
  v26[4] = &protocol witness table for Expression<A>;
  v26[0] = v4;
  v26[1] = v5;
  v26[2] = v6;
  v10 = sub_247C3D9B4();
  v25[3] = type metadata accessor for Expression(0, v10, v11, v12);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v26, inited + 32);
  sub_247BFA88C((uint64_t)v25, inited + 72);
  v21 = 32;
  *(_QWORD *)&v22 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v21);
  swift_bridgeObjectRelease();
  v14 = v23;
  v15 = v24;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v15[1])(&v19, v14, v15);
  v16 = v19;
  v18 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v24 = &protocol witness table for Expression<A>;
  v21 = v16;
  v22 = v18;
  sub_247BFB3FC(&v21, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

uint64_t < infix<A>(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  _UNKNOWN **v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _UNKNOWN **v26;
  _QWORD v27[5];
  _QWORD v28[5];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v10 = sub_247C3D9B4();
  v28[3] = type metadata accessor for Expression(0, v10, v11, v12);
  v28[4] = &protocol witness table for Expression<A>;
  v28[0] = v4;
  v28[1] = v5;
  v28[2] = v6;
  v27[3] = type metadata accessor for Expression(0, a3, v13, v14);
  v27[4] = &protocol witness table for Expression<A>;
  v27[0] = v8;
  v27[1] = v7;
  v27[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v28, inited + 32);
  sub_247BFA88C((uint64_t)v27, inited + 72);
  v23 = 32;
  *(_QWORD *)&v24 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v23);
  swift_bridgeObjectRelease();
  v16 = v25;
  v17 = v26;
  __swift_project_boxed_opaque_existential_1(&v23, v25);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v17[1])(&v21, v16, v17);
  v18 = v21;
  v20 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v26 = &protocol witness table for Expression<A>;
  v23 = v18;
  v24 = v20;
  sub_247BFB3FC(&v23, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t < infix<A>(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  _UNKNOWN **v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _UNKNOWN **v22;
  _QWORD v23[5];
  _QWORD v24[3];
  uint64_t v25;
  _UNKNOWN **v26;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = sub_247C3D9B4();
  v25 = type metadata accessor for Expression(0, v8, v9, v10);
  v26 = &protocol witness table for Expression<A>;
  v24[0] = v2;
  v24[1] = v3;
  v24[2] = v4;
  v23[3] = v25;
  v23[4] = &protocol witness table for Expression<A>;
  v23[0] = v5;
  v23[1] = v6;
  v23[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v24, inited + 32);
  sub_247BFA88C((uint64_t)v23, inited + 72);
  v19 = 32;
  *(_QWORD *)&v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v19);
  swift_bridgeObjectRelease();
  v12 = v21;
  v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  v14 = v17;
  v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v22 = &protocol witness table for Expression<A>;
  v19 = v14;
  v20 = v16;
  sub_247BFB3FC(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

uint64_t < infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _UNKNOWN **v23;
  uint64_t v24[5];
  _QWORD v25[5];

  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  v25[3] = type metadata accessor for Expression(0, a3, a3, a4);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  v10 = *(_QWORD *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v25, inited + 32);
  sub_247BFA88C((uint64_t)v24, inited + 72);
  v20 = 32;
  *(_QWORD *)&v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v20);
  swift_bridgeObjectRelease();
  v13 = v22;
  v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  v15 = v18;
  v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v23 = &protocol witness table for Expression<A>;
  v20 = v15;
  v21 = v17;
  sub_247BFB3FC(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v16;
  _UNKNOWN **v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _UNKNOWN **v26;
  uint64_t v27[5];
  _QWORD v28[5];

  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  v10 = sub_247C3D9B4();
  v28[3] = type metadata accessor for Expression(0, v10, v11, v12);
  v28[4] = &protocol witness table for Expression<A>;
  v28[0] = v8;
  v28[1] = v7;
  v28[2] = v9;
  v13 = *(_QWORD *)(a4 + 8);
  v27[3] = a3;
  v27[4] = v13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v28, inited + 32);
  sub_247BFA88C((uint64_t)v27, inited + 72);
  v23 = 32;
  *(_QWORD *)&v24 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v23);
  swift_bridgeObjectRelease();
  v16 = v25;
  v17 = v26;
  __swift_project_boxed_opaque_existential_1(&v23, v25);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v17[1])(&v21, v16, v17);
  v18 = v21;
  v20 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v26 = &protocol witness table for Expression<A>;
  v23 = v18;
  v24 = v20;
  sub_247BFB3FC(&v23, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t < infix<A>(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[5];
  uint64_t v26[5];

  v7 = *a2;
  v6 = a2[1];
  v8 = a2[2];
  v9 = *(_QWORD *)(a4 + 8);
  v26[3] = a3;
  v26[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v26);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  v25[3] = type metadata accessor for Expression(0, a3, v11, v12);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v7;
  v25[1] = v6;
  v25[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v26, inited + 32);
  sub_247BFA88C((uint64_t)v25, inited + 72);
  v21 = 32;
  *(_QWORD *)&v22 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v21);
  swift_bridgeObjectRelease();
  v14 = v23;
  v15 = v24;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v15[1])(&v19, v14, v15);
  v16 = v19;
  v18 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v24 = &protocol witness table for Expression<A>;
  v21 = v16;
  v22 = v18;
  sub_247BFB3FC(&v21, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  _UNKNOWN **v16;
  uint64_t v17;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  _UNKNOWN **v25;
  _QWORD v26[5];
  uint64_t v27[5];

  v7 = *a2;
  v6 = a2[1];
  v8 = a2[2];
  v9 = *(_QWORD *)(a4 + 8);
  v27[3] = a3;
  v27[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  v11 = sub_247C3D9B4();
  v26[3] = type metadata accessor for Expression(0, v11, v12, v13);
  v26[4] = &protocol witness table for Expression<A>;
  v26[0] = v7;
  v26[1] = v6;
  v26[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v27, inited + 32);
  sub_247BFA88C((uint64_t)v26, inited + 72);
  v22 = 32;
  *(_QWORD *)&v23 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v22);
  swift_bridgeObjectRelease();
  v15 = v24;
  v16 = v25;
  __swift_project_boxed_opaque_existential_1(&v22, v24);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v16[1])(&v20, v15, v16);
  v17 = v20;
  v19 = v21;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v25 = &protocol witness table for Expression<A>;
  v22 = v17;
  v23 = v19;
  sub_247BFB3FC(&v22, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t <= infix<A>(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  _UNKNOWN **v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _QWORD v22[5];
  _QWORD v23[3];
  uint64_t v24;
  _UNKNOWN **v25;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v24 = type metadata accessor for Expression(0, a3, a3, a4);
  v25 = &protocol witness table for Expression<A>;
  v23[0] = v4;
  v23[1] = v5;
  v23[2] = v6;
  v22[3] = v24;
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v7;
  v22[1] = v8;
  v22[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v23, inited + 32);
  sub_247BFA88C((uint64_t)v22, inited + 72);
  v18 = 32;
  *(_QWORD *)&v19 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v18);
  swift_bridgeObjectRelease();
  v11 = v20;
  v12 = v21;
  __swift_project_boxed_opaque_existential_1(&v18, v20);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v12[1])(&v16, v11, v12);
  v13 = v16;
  v15 = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v21 = &protocol witness table for Expression<A>;
  v18 = v13;
  v19 = v15;
  sub_247BFB3FC(&v18, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[5];
  _QWORD v26[5];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v26[3] = type metadata accessor for Expression(0, a3, a3, a4);
  v26[4] = &protocol witness table for Expression<A>;
  v26[0] = v4;
  v26[1] = v5;
  v26[2] = v6;
  v10 = sub_247C3D9B4();
  v25[3] = type metadata accessor for Expression(0, v10, v11, v12);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v26, inited + 32);
  sub_247BFA88C((uint64_t)v25, inited + 72);
  v21 = 32;
  *(_QWORD *)&v22 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v21);
  swift_bridgeObjectRelease();
  v14 = v23;
  v15 = v24;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v15[1])(&v19, v14, v15);
  v16 = v19;
  v18 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v24 = &protocol witness table for Expression<A>;
  v21 = v16;
  v22 = v18;
  sub_247BFB3FC(&v21, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

uint64_t <= infix<A>(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v16;
  _UNKNOWN **v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _UNKNOWN **v26;
  _QWORD v27[5];
  _QWORD v28[5];

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v8 = *a2;
  v7 = a2[1];
  v9 = a2[2];
  v10 = sub_247C3D9B4();
  v28[3] = type metadata accessor for Expression(0, v10, v11, v12);
  v28[4] = &protocol witness table for Expression<A>;
  v28[0] = v4;
  v28[1] = v5;
  v28[2] = v6;
  v27[3] = type metadata accessor for Expression(0, a3, v13, v14);
  v27[4] = &protocol witness table for Expression<A>;
  v27[0] = v8;
  v27[1] = v7;
  v27[2] = v9;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v28, inited + 32);
  sub_247BFA88C((uint64_t)v27, inited + 72);
  v23 = 32;
  *(_QWORD *)&v24 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v23);
  swift_bridgeObjectRelease();
  v16 = v25;
  v17 = v26;
  __swift_project_boxed_opaque_existential_1(&v23, v25);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v17[1])(&v21, v16, v17);
  v18 = v21;
  v20 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v26 = &protocol witness table for Expression<A>;
  v23 = v18;
  v24 = v20;
  sub_247BFB3FC(&v23, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t <= infix<A>(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  _UNKNOWN **v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _UNKNOWN **v22;
  _QWORD v23[5];
  _QWORD v24[3];
  uint64_t v25;
  _UNKNOWN **v26;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = sub_247C3D9B4();
  v25 = type metadata accessor for Expression(0, v8, v9, v10);
  v26 = &protocol witness table for Expression<A>;
  v24[0] = v2;
  v24[1] = v3;
  v24[2] = v4;
  v23[3] = v25;
  v23[4] = &protocol witness table for Expression<A>;
  v23[0] = v5;
  v23[1] = v6;
  v23[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v24, inited + 32);
  sub_247BFA88C((uint64_t)v23, inited + 72);
  v19 = 32;
  *(_QWORD *)&v20 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v19);
  swift_bridgeObjectRelease();
  v12 = v21;
  v13 = v22;
  __swift_project_boxed_opaque_existential_1(&v19, v21);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v13[1])(&v17, v12, v13);
  v14 = v17;
  v16 = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v22 = &protocol witness table for Expression<A>;
  v19 = v14;
  v20 = v16;
  sub_247BFB3FC(&v19, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
}

uint64_t <= infix<A>(_:_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _UNKNOWN **v23;
  uint64_t v24[5];
  _QWORD v25[5];

  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  v25[3] = type metadata accessor for Expression(0, a3, a3, a4);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v8;
  v25[1] = v7;
  v25[2] = v9;
  v10 = *(_QWORD *)(a4 + 8);
  v24[3] = a3;
  v24[4] = v10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v24);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v25, inited + 32);
  sub_247BFA88C((uint64_t)v24, inited + 72);
  v20 = 32;
  *(_QWORD *)&v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v20);
  swift_bridgeObjectRelease();
  v13 = v22;
  v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  v15 = v18;
  v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v23 = &protocol witness table for Expression<A>;
  v20 = v15;
  v21 = v17;
  sub_247BFB3FC(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t inited;
  uint64_t v16;
  _UNKNOWN **v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _UNKNOWN **v26;
  uint64_t v27[5];
  _QWORD v28[5];

  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  v10 = sub_247C3D9B4();
  v28[3] = type metadata accessor for Expression(0, v10, v11, v12);
  v28[4] = &protocol witness table for Expression<A>;
  v28[0] = v8;
  v28[1] = v7;
  v28[2] = v9;
  v13 = *(_QWORD *)(a4 + 8);
  v27[3] = a3;
  v27[4] = v13;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v28, inited + 32);
  sub_247BFA88C((uint64_t)v27, inited + 72);
  v23 = 32;
  *(_QWORD *)&v24 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v23);
  swift_bridgeObjectRelease();
  v16 = v25;
  v17 = v26;
  __swift_project_boxed_opaque_existential_1(&v23, v25);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v17[1])(&v21, v16, v17);
  v18 = v21;
  v20 = v22;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v26 = &protocol witness table for Expression<A>;
  v23 = v18;
  v24 = v20;
  sub_247BFB3FC(&v23, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

uint64_t <= infix<A>(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  _UNKNOWN **v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[5];
  uint64_t v26[5];

  v7 = *a2;
  v6 = a2[1];
  v8 = a2[2];
  v9 = *(_QWORD *)(a4 + 8);
  v26[3] = a3;
  v26[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v26);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  v25[3] = type metadata accessor for Expression(0, a3, v11, v12);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v7;
  v25[1] = v6;
  v25[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v26, inited + 32);
  sub_247BFA88C((uint64_t)v25, inited + 72);
  v21 = 32;
  *(_QWORD *)&v22 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v21);
  swift_bridgeObjectRelease();
  v14 = v23;
  v15 = v24;
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v15[1])(&v19, v14, v15);
  v16 = v19;
  v18 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v24 = &protocol witness table for Expression<A>;
  v21 = v16;
  v22 = v18;
  sub_247BFB3FC(&v21, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  _UNKNOWN **v16;
  uint64_t v17;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  _UNKNOWN **v25;
  _QWORD v26[5];
  uint64_t v27[5];

  v7 = *a2;
  v6 = a2[1];
  v8 = a2[2];
  v9 = *(_QWORD *)(a4 + 8);
  v27[3] = a3;
  v27[4] = v9;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  v11 = sub_247C3D9B4();
  v26[3] = type metadata accessor for Expression(0, v11, v12, v13);
  v26[4] = &protocol witness table for Expression<A>;
  v26[0] = v7;
  v26[1] = v6;
  v26[2] = v8;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v27, inited + 32);
  sub_247BFA88C((uint64_t)v26, inited + 72);
  v22 = 32;
  *(_QWORD *)&v23 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v22);
  swift_bridgeObjectRelease();
  v15 = v24;
  v16 = v25;
  __swift_project_boxed_opaque_existential_1(&v22, v24);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v16[1])(&v20, v15, v16);
  v17 = v20;
  v19 = v21;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v25 = &protocol witness table for Expression<A>;
  v22 = v17;
  v23 = v19;
  sub_247BFB3FC(&v22, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v22);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

_QWORD *_s11SwiftSQLite2teoiyAA10ExpressionVySbGSNyxG_ADyxGtSLRzAA5ValueRzSL8DatatypeAaHPRpzAahKRQlF_0@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  void (*v10)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  _QWORD *result;
  uint64_t v14;
  uint64_t v15;

  v7 = *a1;
  v8 = a1[1];
  v15 = a1[2];
  sub_247C3D9E4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  v14 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  v10 = *(void (**)(uint64_t, uint64_t))(a3 + 56);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(inited + 56) = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(inited + 64) = AssociatedConformanceWitness;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
  v10(a2, a3);
  sub_247C3D798();
  *(_QWORD *)(inited + 96) = AssociatedTypeWitness;
  *(_QWORD *)(inited + 104) = AssociatedConformanceWitness;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 72));
  v10(a2, a3);
  swift_bridgeObjectRetain();
  result = sub_247C0F75C((_QWORD *)inited);
  *a4 = v7;
  a4[1] = v14;
  a4[2] = v15;
  return result;
}

_QWORD *_s11SwiftSQLite2teoiyAA10ExpressionVySbGSnyxG_ADyxGtSLRzAA5ValueRzSL8DatatypeAaHPRpzAahKRQlF_0@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  void (*v10)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *result;
  uint64_t v17;

  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  sub_247C3D9E4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  v17 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1D0;
  v10 = *(void (**)(uint64_t, uint64_t))(a3 + 56);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(inited + 56) = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(_QWORD *)(inited + 64) = AssociatedConformanceWitness;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
  v10(a2, a3);
  swift_bridgeObjectRetain();
  sub_247C0F75C((_QWORD *)inited);
  v13 = (_QWORD *)swift_bridgeObjectRetain();
  sub_247C0F75C(v13);
  v14 = v8;
  v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = xmmword_247C3E1D0;
  sub_247C3D960();
  *(_QWORD *)(v15 + 56) = AssociatedTypeWitness;
  *(_QWORD *)(v15 + 64) = AssociatedConformanceWitness;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v15 + 32));
  v10(a2, a3);
  result = sub_247C0F75C((_QWORD *)v15);
  *a4 = v6;
  a4[1] = v17;
  a4[2] = v14;
  return result;
}

_QWORD *~= infix<A>(_:_:)@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  return sub_247C25A40(a1, a2, a3, a4);
}

{
  return sub_247C25A40(a1, a2, a3, a4);
}

{
  return sub_247C25A40(a1, a2, a3, a4);
}

{
  return sub_247C25A40(a1, a2, a3, a4);
}

{
  return sub_247C25A40(a1, a2, a3, a4);
}

{
  return sub_247C25A40(a1, a2, a3, a4);
}

_QWORD *sub_247C25A40@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t inited;
  void (*v9)(uint64_t, uint64_t);
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;

  v7 = a1[2];
  v11 = *a1;
  v12 = a1[1];
  swift_bridgeObjectRetain();
  sub_247C3D840();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1D0;
  v9 = *(void (**)(uint64_t, uint64_t))(a3 + 56);
  *(_QWORD *)(inited + 56) = swift_getAssociatedTypeWitness();
  *(_QWORD *)(inited + 64) = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 32));
  v9(a2, a3);
  swift_bridgeObjectRetain();
  result = sub_247C0F75C((_QWORD *)inited);
  *a4 = v11;
  a4[1] = v12;
  a4[2] = v7;
  return result;
}

uint64_t _s11SwiftSQLite3andyAA10ExpressionVySbGAEd_tF_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _UNKNOWN **v3;
  uint64_t v4;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  _UNKNOWN **v12;

  v1 = sub_247C17340(a1);
  v9 = 32;
  *(_QWORD *)&v10 = 0xE100000000000000;
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(v1, &v9);
  swift_bridgeObjectRelease();
  v2 = v11;
  v3 = v12;
  __swift_project_boxed_opaque_existential_1(&v9, v11);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v3[1])(&v7, v2, v3);
  v4 = v7;
  v6 = v8;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v12 = &protocol witness table for Expression<A>;
  v9 = v4;
  v10 = v6;
  sub_247BFB3FC(&v9, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
  return swift_bridgeObjectRelease();
}

uint64_t && infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_247C26064(a1, a2, &qword_2544552C0, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _UNKNOWN **v20;
  _QWORD v21[5];
  _QWORD v22[5];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v22[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v2;
  v22[1] = v3;
  v22[2] = v4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v21[3] = v8;
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v5;
  v21[1] = v6;
  v21[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v22, inited + 32);
  sub_247BFA88C((uint64_t)v21, inited + 72);
  v17 = 32;
  *(_QWORD *)&v18 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v17);
  swift_bridgeObjectRelease();
  v10 = v19;
  v11 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v15, v10, v11);
  v12 = v15;
  v14 = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  v19 = v8;
  v20 = &protocol witness table for Expression<A>;
  v17 = v12;
  v18 = v14;
  sub_247BFB3FC(&v17, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _UNKNOWN **v20;
  _QWORD v21[5];
  _QWORD v22[5];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v22[3] = v8;
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v2;
  v22[1] = v3;
  v22[2] = v4;
  v21[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v5;
  v21[1] = v6;
  v21[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v22, inited + 32);
  sub_247BFA88C((uint64_t)v21, inited + 72);
  v17 = 32;
  *(_QWORD *)&v18 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v17);
  swift_bridgeObjectRelease();
  v10 = v19;
  v11 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v15, v10, v11);
  v12 = v15;
  v14 = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  v19 = v8;
  v20 = &protocol witness table for Expression<A>;
  v17 = v12;
  v18 = v14;
  sub_247BFB3FC(&v17, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

{
  return sub_247C26064(a1, a2, &qword_254455310, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

uint64_t sub_247C26064(uint64_t *a1, uint64_t *a2, uint64_t *a3, void (*a4)(uint64_t *, _QWORD, unint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _UNKNOWN **v23;
  _QWORD v24[5];
  _QWORD v25[6];

  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  v8 = *a2;
  v9 = a2[1];
  v10 = a2[2];
  v11 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v25[3] = v11;
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v5;
  v25[1] = v6;
  v25[2] = v7;
  v24[3] = v11;
  v24[4] = &protocol witness table for Expression<A>;
  v24[0] = v8;
  v24[1] = v9;
  v24[2] = v10;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v25, inited + 32);
  sub_247BFA88C((uint64_t)v24, inited + 72);
  v20 = 32;
  *(_QWORD *)&v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v20);
  swift_bridgeObjectRelease();
  v13 = v22;
  v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  v15 = v18;
  v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  v22 = v11;
  v23 = &protocol witness table for Expression<A>;
  v20 = v15;
  v21 = v17;
  a4(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t && infix(_:_:)(uint64_t *a1, char a2)
{
  return sub_247C2625C(a1, a2, &qword_2544552C0, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

{
  return sub_247C2625C(a1, a2, &qword_254455310, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

uint64_t sub_247C2625C(uint64_t *a1, char a2, uint64_t *a3, void (*a4)(uint64_t *, _QWORD, unint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  _UNKNOWN **v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _BYTE v22[24];
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[5];

  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  v9 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v6;
  v25[1] = v7;
  v25[2] = v8;
  v25[3] = v9;
  v23 = MEMORY[0x24BEE1328];
  v24 = &protocol witness table for Bool;
  v22[0] = a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v25, inited + 32);
  sub_247BFA88C((uint64_t)v22, inited + 72);
  v18 = 32;
  *(_QWORD *)&v19 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v18);
  swift_bridgeObjectRelease();
  v11 = v20;
  v12 = v21;
  __swift_project_boxed_opaque_existential_1(&v18, v20);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v12[1])(&v16, v11, v12);
  v13 = v16;
  v15 = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  v20 = v9;
  v21 = &protocol witness table for Expression<A>;
  v18 = v13;
  v19 = v15;
  a4(&v18, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t && infix(_:_:)(char a1, uint64_t *a2)
{
  return sub_247C2644C(a1, a2, &qword_2544552C0, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

{
  return sub_247C2644C(a1, a2, &qword_254455310, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

uint64_t sub_247C2644C(char a1, uint64_t *a2, uint64_t *a3, void (*a4)(uint64_t *, _QWORD, unint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _UNKNOWN **v20;
  _QWORD v21[5];
  _BYTE v22[24];
  uint64_t v23;
  _UNKNOWN **v24;

  v6 = *a2;
  v5 = a2[1];
  v7 = a2[2];
  v23 = MEMORY[0x24BEE1328];
  v24 = &protocol witness table for Bool;
  v22[0] = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v21[3] = v8;
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v6;
  v21[1] = v5;
  v21[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v22, inited + 32);
  sub_247BFA88C((uint64_t)v21, inited + 72);
  v17 = 32;
  *(_QWORD *)&v18 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v17);
  swift_bridgeObjectRelease();
  v10 = v19;
  v11 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v15, v10, v11);
  v12 = v15;
  v14 = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  v19 = v8;
  v20 = &protocol witness table for Expression<A>;
  v17 = v12;
  v18 = v14;
  a4(&v17, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t _s11SwiftSQLite2oryAA10ExpressionVySbGAEd_tF_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _UNKNOWN **v3;
  uint64_t v4;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  _UNKNOWN **v12;

  v1 = sub_247C17340(a1);
  v9 = 32;
  *(_QWORD *)&v10 = 0xE100000000000000;
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(v1, &v9);
  swift_bridgeObjectRelease();
  v2 = v11;
  v3 = v12;
  __swift_project_boxed_opaque_existential_1(&v9, v11);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v3[1])(&v7, v2, v3);
  v4 = v7;
  v6 = v8;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v12 = &protocol witness table for Expression<A>;
  v9 = v4;
  v10 = v6;
  sub_247BFB3FC(&v9, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
  return swift_bridgeObjectRelease();
}

uint64_t || infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_247C26AF8(a1, a2, &qword_2544552C0, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _UNKNOWN **v20;
  _QWORD v21[5];
  _QWORD v22[5];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v22[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v2;
  v22[1] = v3;
  v22[2] = v4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v21[3] = v8;
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v5;
  v21[1] = v6;
  v21[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v22, inited + 32);
  sub_247BFA88C((uint64_t)v21, inited + 72);
  v17 = 32;
  *(_QWORD *)&v18 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v17);
  swift_bridgeObjectRelease();
  v10 = v19;
  v11 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v15, v10, v11);
  v12 = v15;
  v14 = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  v19 = v8;
  v20 = &protocol witness table for Expression<A>;
  v17 = v12;
  v18 = v14;
  sub_247BFB3FC(&v17, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _UNKNOWN **v20;
  _QWORD v21[5];
  _QWORD v22[5];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[2];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v22[3] = v8;
  v22[4] = &protocol witness table for Expression<A>;
  v22[0] = v2;
  v22[1] = v3;
  v22[2] = v4;
  v21[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v5;
  v21[1] = v6;
  v21[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v22, inited + 32);
  sub_247BFA88C((uint64_t)v21, inited + 72);
  v17 = 32;
  *(_QWORD *)&v18 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v17);
  swift_bridgeObjectRelease();
  v10 = v19;
  v11 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v15, v10, v11);
  v12 = v15;
  v14 = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  v19 = v8;
  v20 = &protocol witness table for Expression<A>;
  v17 = v12;
  v18 = v14;
  sub_247BFB3FC(&v17, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

{
  return sub_247C26AF8(a1, a2, &qword_254455310, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

uint64_t sub_247C26AF8(uint64_t *a1, uint64_t *a2, uint64_t *a3, void (*a4)(uint64_t *, _QWORD, unint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  _UNKNOWN **v23;
  _QWORD v24[5];
  _QWORD v25[6];

  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  v8 = *a2;
  v9 = a2[1];
  v10 = a2[2];
  v11 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v25[3] = v11;
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v5;
  v25[1] = v6;
  v25[2] = v7;
  v24[3] = v11;
  v24[4] = &protocol witness table for Expression<A>;
  v24[0] = v8;
  v24[1] = v9;
  v24[2] = v10;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v25, inited + 32);
  sub_247BFA88C((uint64_t)v24, inited + 72);
  v20 = 32;
  *(_QWORD *)&v21 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v20);
  swift_bridgeObjectRelease();
  v13 = v22;
  v14 = v23;
  __swift_project_boxed_opaque_existential_1(&v20, v22);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v14[1])(&v18, v13, v14);
  v15 = v18;
  v17 = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  v22 = v11;
  v23 = &protocol witness table for Expression<A>;
  v20 = v15;
  v21 = v17;
  a4(&v20, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t || infix(_:_:)(uint64_t *a1, char a2)
{
  return sub_247C26CEC(a1, a2, &qword_2544552C0, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

{
  return sub_247C26CEC(a1, a2, &qword_254455310, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

uint64_t sub_247C26CEC(uint64_t *a1, char a2, uint64_t *a3, void (*a4)(uint64_t *, _QWORD, unint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  _UNKNOWN **v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;
  _BYTE v22[24];
  uint64_t v23;
  _UNKNOWN **v24;
  _QWORD v25[5];

  v6 = *a1;
  v7 = a1[1];
  v8 = a1[2];
  v9 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v25[4] = &protocol witness table for Expression<A>;
  v25[0] = v6;
  v25[1] = v7;
  v25[2] = v8;
  v25[3] = v9;
  v23 = MEMORY[0x24BEE1328];
  v24 = &protocol witness table for Bool;
  v22[0] = a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v25, inited + 32);
  sub_247BFA88C((uint64_t)v22, inited + 72);
  v18 = 32;
  *(_QWORD *)&v19 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v18);
  swift_bridgeObjectRelease();
  v11 = v20;
  v12 = v21;
  __swift_project_boxed_opaque_existential_1(&v18, v20);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v12[1])(&v16, v11, v12);
  v13 = v16;
  v15 = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  v20 = v9;
  v21 = &protocol witness table for Expression<A>;
  v18 = v13;
  v19 = v15;
  a4(&v18, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t || infix(_:_:)(char a1, uint64_t *a2)
{
  return sub_247C26ED8(a1, a2, &qword_2544552C0, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

{
  return sub_247C26ED8(a1, a2, &qword_254455310, (void (*)(uint64_t *, _QWORD, unint64_t))sub_247BFB3FC);
}

uint64_t sub_247C26ED8(char a1, uint64_t *a2, uint64_t *a3, void (*a4)(uint64_t *, _QWORD, unint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _UNKNOWN **v20;
  _QWORD v21[5];
  _BYTE v22[24];
  uint64_t v23;
  _UNKNOWN **v24;

  v6 = *a2;
  v5 = a2[1];
  v7 = a2[2];
  v23 = MEMORY[0x24BEE1328];
  v24 = &protocol witness table for Bool;
  v22[0] = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v21[3] = v8;
  v21[4] = &protocol witness table for Expression<A>;
  v21[0] = v6;
  v21[1] = v5;
  v21[2] = v7;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BFA88C((uint64_t)v22, inited + 32);
  sub_247BFA88C((uint64_t)v21, inited + 72);
  v17 = 32;
  *(_QWORD *)&v18 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3D840();
  sub_247C3D840();
  sub_247BFECF4(inited, &v17);
  swift_bridgeObjectRelease();
  v10 = v19;
  v11 = v20;
  __swift_project_boxed_opaque_existential_1(&v17, v19);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v15, v10, v11);
  v12 = v15;
  v14 = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  v19 = v8;
  v20 = &protocol witness table for Expression<A>;
  v17 = v12;
  v18 = v14;
  a4(&v17, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t ! prefix(_:)(uint64_t *a1)
{
  return sub_247C270C0(a1, &qword_2544552C0, (void (*)(_QWORD *, uint64_t, unint64_t))sub_247BFB3FC);
}

{
  return sub_247C270C0(a1, &qword_254455310, (void (*)(_QWORD *, uint64_t, unint64_t))sub_247BFB3FC);
}

uint64_t sub_247C270C0(uint64_t *a1, uint64_t *a2, void (*a3)(_QWORD *, uint64_t, unint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[5];

  v5 = *a1;
  v4 = a1[1];
  v6 = a1[2];
  v8[3] = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8[4] = &protocol witness table for Expression<A>;
  v8[0] = v5;
  v8[1] = v4;
  v8[2] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a3(v8, 542396238, 0xE400000000000000);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

uint64_t Bool.datatypeValue.getter(char a1)
{
  return a1 & 1;
}

BOOL static Bool.fromDatatypeValue(_:)(uint64_t a1)
{
  return a1 != 0;
}

uint64_t static Double.declaredDatatype.getter()
{
  return 1279346002;
}

uint64_t sub_247C27180()
{
  return 1279346002;
}

double sub_247C27190@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

uint64_t static Int64.declaredDatatype.getter()
{
  return 0x52454745544E49;
}

uint64_t sub_247C271B8()
{
  return 0x52454745544E49;
}

uint64_t static String.declaredDatatype.getter()
{
  return 1415071060;
}

uint64_t static String.fromDatatypeValue(_:)(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t String.datatypeValue.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_247C27240@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t static Blob.declaredDatatype.getter()
{
  return 1112493122;
}

uint64_t static Blob.fromDatatypeValue(_:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t Blob.datatypeValue.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_247C27274@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_247C27280@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t static Bool.declaredDatatype.getter()
{
  return sub_247C27318((uint64_t *)aInteger);
}

uint64_t static Bool.declaredDatatype.setter(uint64_t a1, uint64_t a2)
{
  return sub_247C27378(a1, a2, aInteger, &qword_2576ED448);
}

uint64_t (*static Bool.declaredDatatype.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_247C272EC(uint64_t a1, uint64_t a2)
{
  return sub_247C27454(a1, a2, (uint64_t *)aInteger);
}

void sub_247C272FC(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t static Int.declaredDatatype.getter()
{
  return sub_247C27318((uint64_t *)aInteger_0);
}

uint64_t sub_247C27318(uint64_t *a1)
{
  uint64_t v2;

  swift_beginAccess();
  v2 = *a1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t static Int.declaredDatatype.setter(uint64_t a1, uint64_t a2)
{
  return sub_247C27378(a1, a2, aInteger_0, &qword_2544552B8);
}

uint64_t sub_247C27378(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  swift_beginAccess();
  *a3 = a1;
  *a4 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static Int.declaredDatatype.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

_UNKNOWN **sub_247C27414()
{
  return &protocol witness table for Double;
}

_UNKNOWN **sub_247C27420()
{
  return &protocol witness table for Int64;
}

_UNKNOWN **sub_247C2742C()
{
  return &protocol witness table for String;
}

_UNKNOWN **sub_247C27438()
{
  return &protocol witness table for Blob;
}

uint64_t sub_247C27444(uint64_t a1, uint64_t a2)
{
  return sub_247C27454(a1, a2, (uint64_t *)aInteger_0);
}

uint64_t sub_247C27454(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;

  swift_beginAccess();
  v4 = *a3;
  swift_bridgeObjectRetain();
  return v4;
}

void sub_247C274A8(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t dispatch thunk of static Value.declaredDatatype.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of static Value.fromDatatypeValue(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of Value.datatypeValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

void Connection.createFunction(_:argumentCount:deterministic:_:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  int v16;
  sqlite3 *v17;
  uint64_t v18;
  uint64_t *v19;
  char v20;
  unint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v23;
  void (*v24)(_QWORD *);
  uint64_t *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[6];

  if ((a4 & 1) == 0)
  {
    v13 = a3;
    if ((a3 & 0x8000000000000000) == 0)
      goto LABEL_5;
    __break(1u);
  }
  v13 = -1;
LABEL_5:
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a6;
  *(_QWORD *)(v14 + 24) = a7;
  aBlock[4] = sub_247C2A334;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_247C2A528;
  aBlock[3] = &block_descriptor;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  if ((a5 & 1) != 0)
    v16 = 2049;
  else
    v16 = 1;
  swift_beginAccess();
  v17 = *(sqlite3 **)(v7 + 16);
  if (!v17)
    goto LABEL_20;
  if (v13 > 0x7FFFFFFF)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    return;
  }
  v18 = sub_247C3D804();
  sqlite3_create_function_v2(v17, (const char *)(v18 + 32), v13, v16, v15, (void (__cdecl *)(sqlite3_context *, int, sqlite3_value **))sub_247C2A598, 0, 0, 0);
  swift_release();
  v19 = (uint64_t *)(v7 + 72);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v7 + 72) + 16))
  {
    swift_bridgeObjectRetain();
    sub_247BFCCBC(a1, a2);
    if ((v20 & 1) != 0)
    {
      swift_endAccess();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  v21 = sub_247C2B894(MEMORY[0x24BEE4AF8]);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v28 = *v19;
  *v19 = 0x8000000000000000;
  sub_247C2B400(v21, a1, a2, isUniquelyReferenced_nonNull_native);
  *v19 = v28;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
LABEL_15:
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v24 = sub_247C2A5D8(aBlock, a1, a2);
  if (*v23)
  {
    v25 = v23;
    _Block_copy(v15);
    v26 = swift_isUniquelyReferenced_nonNull_native();
    v27 = *v25;
    *v25 = 0x8000000000000000;
    sub_247C2B2EC((uint64_t)v15, v13, v26);
    *v25 = v27;
    swift_bridgeObjectRelease();
    ((void (*)(_QWORD *, _QWORD))v24)(aBlock, 0);
    swift_endAccess();
    _Block_release(v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    ((void (*)(_QWORD *, _QWORD))v24)(aBlock, 0);
    swift_endAccess();
    swift_bridgeObjectRelease();
    _Block_release(v15);
  }
}

uint64_t Connection.handle.getter()
{
  uint64_t v0;
  uint64_t result;

  swift_beginAccess();
  result = *(_QWORD *)(v0 + 16);
  if (!result)
    __break(1u);
  return result;
}

uint64_t sub_247C27814@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  switch((_DWORD)result)
  {
    case 9:
      v2 = 2;
      goto LABEL_7;
    case 0x12:
      v2 = 0;
LABEL_7:
      *a2 = v2;
      return result;
    case 0x17:
      v2 = 1;
      goto LABEL_7;
  }
  sub_247C3D9E4();
  swift_bridgeObjectRelease();
  sub_247C3DAC8();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  result = sub_247C3DA68();
  __break(1u);
  return result;
}

BOOL static Connection.Operation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Connection.Operation.hash(into:)()
{
  return sub_247C3DB94();
}

uint64_t Connection.Operation.hashValue.getter()
{
  sub_247C3DB88();
  sub_247C3DB94();
  return sub_247C3DBA0();
}

BOOL sub_247C27988(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Connection.__allocating_init(_:readonly:)(_QWORD *a1, int a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  Connection.init(_:readonly:)(a1, a2);
  return v4;
}

sqlite3 *Connection.init(_:readonly:)(_QWORD *a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  sqlite3 **v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  sqlite3 *result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[5];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  int v28;

  v28 = a2;
  v4 = sub_247C3D990();
  v24 = *(_QWORD *)(v4 - 8);
  v25 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_247C3D75C();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_247C3D96C();
  MEMORY[0x24BDAC7A8](v8);
  v23[4] = *a1;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  v9 = (sqlite3 **)(v2 + 16);
  *(_OWORD *)(v2 + 48) = 0u;
  v10 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 72) = v10;
  *(_QWORD *)(v2 + 80) = v10;
  v23[3] = sub_247BFBA84();
  v26 = MEMORY[0x24BEE4AF8];
  sub_247C2B980();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455360);
  sub_247C2B9C8();
  v11 = v23[2];
  sub_247C3D9C0();
  sub_247C3D750();
  (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v6, *MEMORY[0x24BEE5750], v25);
  *(_QWORD *)(v2 + 88) = sub_247C3D9A8();
  *(_QWORD *)(v2 + 96) = 0;
  *(_BYTE *)(v2 + 104) = 1;
  if ((v28 & 1) != 0)
    v12 = 65537;
  else
    v12 = 65542;
  v13 = sub_247C3D804();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v14 = sqlite3_open_v2((const char *)(v13 + 32), v9, v12, 0);
  swift_endAccess();
  swift_release();
  v15 = qword_254455350;
  swift_retain();
  if (v15 != -1)
    swift_once();
  if (sub_247BFB63C(v14, (uint64_t)off_254455348))
  {
    swift_release();
    v16 = qword_254455430;
    v17 = *(id *)(v11 + 88);
    if (v16 != -1)
      swift_once();
    v26 = sub_247BFBAC0();
    v27 = 0;
    sub_247C3D984();

    return (sqlite3 *)v11;
  }
  result = *v9;
  if (*v9)
  {
    result = (sqlite3 *)sqlite3_errmsg(result);
    if (result)
    {
      v19 = sub_247C3D84C();
      v21 = v20;
      swift_release();
      sub_247C1A4D0();
      swift_allocError();
      *(_QWORD *)v22 = v19;
      *(_QWORD *)(v22 + 8) = v21;
      *(_DWORD *)(v22 + 16) = v14;
      *(_QWORD *)(v22 + 24) = 0;
      swift_willThrow();
      swift_release();
      return (sqlite3 *)v11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Connection.Location.description.getter()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[1];
  if (v1 == 1)
    v2 = 0;
  else
    v2 = *v0;
  if (v1)
    v3 = v2;
  else
    v3 = 0x3A79726F6D656D3ALL;
  sub_247C2BA14(*v0, v1);
  return v3;
}

uint64_t Connection.__allocating_init(_:readonly:)(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4;
  _QWORD v6[2];

  v6[1] = a2;
  v6[0] = a1;
  v4 = swift_allocObject();
  Connection.init(_:readonly:)(v6, a3);
  return v4;
}

sqlite3 *Connection.deinit()
{
  uint64_t v0;
  sqlite3 *result;

  swift_beginAccess();
  result = *(sqlite3 **)(v0 + 16);
  if (result)
  {
    sqlite3_close(result);
    _Block_release(*(const void **)(v0 + 32));
    _Block_release(*(const void **)(v0 + 40));
    _Block_release(*(const void **)(v0 + 48));
    _Block_release(*(const void **)(v0 + 56));
    _Block_release(*(const void **)(v0 + 64));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return (sqlite3 *)v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t Connection.__deallocating_deinit()
{
  Connection.deinit();
  return swift_deallocClassInstance();
}

sqlite3 *Connection.readonly.getter()
{
  uint64_t v0;
  sqlite3 *result;

  swift_beginAccess();
  result = *(sqlite3 **)(v0 + 16);
  if (result)
    return (sqlite3 *)(sqlite3_db_readonly(result, 0) == 1);
  __break(1u);
  return result;
}

sqlite3 *Connection.lastInsertRowid.getter()
{
  uint64_t v0;
  sqlite3 *result;

  swift_beginAccess();
  result = *(sqlite3 **)(v0 + 16);
  if (result)
    return (sqlite3 *)sqlite3_last_insert_rowid(result);
  __break(1u);
  return result;
}

uint64_t Connection.changes.getter()
{
  return sub_247C27F78((int (*)(void))MEMORY[0x24BEDDFF8]);
}

uint64_t Connection.totalChanges.getter()
{
  return sub_247C27F78(MEMORY[0x24BEDE2E0]);
}

uint64_t sub_247C27F78(int (*a1)(void))
{
  uint64_t v1;
  uint64_t result;

  swift_beginAccess();
  result = *(_QWORD *)(v1 + 16);
  if (result)
    return a1();
  __break(1u);
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Connection.execute(_:)(Swift::String a1)
{
  uint64_t v1;
  uint64_t v2;
  sqlite3 **v3;
  sqlite3 *v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  sub_247BFBA84();
  if (qword_254455430 != -1)
    swift_once();
  sub_247C3D978();
  v2 = sub_247BFBAC0();
  if ((v14 & 1) != 0 || v13 != v2)
  {
    v8 = *(id *)(v1 + 88);
    sub_247C3D99C();

    return;
  }
  v3 = (sqlite3 **)(v1 + 16);
  swift_beginAccess();
  v4 = *(sqlite3 **)(v1 + 16);
  if (!v4)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v5 = sub_247C3D804();
  v6 = sqlite3_exec(v4, (const char *)(v5 + 32), 0, 0, 0);
  swift_release();
  v7 = qword_254455350;
  swift_retain();
  if (v7 != -1)
    swift_once();
  if (sub_247BFB63C(v6, (uint64_t)off_254455348))
  {
    swift_release();
    return;
  }
  if (!*v3)
    goto LABEL_15;
  if (sqlite3_errmsg(*v3))
  {
    v9 = sub_247C3D84C();
    v11 = v10;
    swift_release();
    sub_247C1A4D0();
    swift_allocError();
    *(_QWORD *)v12 = v9;
    *(_QWORD *)(v12 + 8) = v11;
    *(_DWORD *)(v12 + 16) = v6;
    *(_QWORD *)(v12 + 24) = 0;
    swift_willThrow();
    return;
  }
LABEL_16:
  __break(1u);
}

sqlite3 *sub_247C281B8@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X8>)
{
  sqlite3 **v4;
  sqlite3 *result;
  sqlite3 *v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = (sqlite3 **)(a1 + 16);
  result = (sqlite3 *)swift_beginAccess();
  v6 = *(sqlite3 **)(a1 + 16);
  if (!v6)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v7 = sub_247C3D804();
  v8 = sqlite3_exec(v6, (const char *)(v7 + 32), 0, 0, 0);
  swift_release();
  v9 = qword_254455350;
  swift_retain();
  if (v9 != -1)
    swift_once();
  if (sub_247BFB63C(v8, (uint64_t)off_254455348))
  {
    result = (sqlite3 *)swift_release();
    *a2 = v8;
    return result;
  }
  result = *v4;
  if (!*v4)
    goto LABEL_10;
  result = (sqlite3 *)sqlite3_errmsg(result);
  if (result)
  {
    v10 = sub_247C3D84C();
    v12 = v11;
    swift_release();
    sub_247C1A4D0();
    swift_allocError();
    *(_QWORD *)v13 = v10;
    *(_QWORD *)(v13 + 8) = v12;
    *(_DWORD *)(v13 + 16) = v8;
    *(_QWORD *)(v13 + 24) = 0;
    return (sqlite3 *)swift_willThrow();
  }
LABEL_11:
  __break(1u);
  return result;
}

sqlite3 *Connection.prepare(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  sqlite3 *v7;
  uint64_t v8;

  v6 = *(_QWORD *)(a3 + 16);
  type metadata accessor for Statement();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  v7 = sub_247C17F4C(v3);
  if (v6 && !v4)
  {
    v8 = sub_247C00BBC(a3);
    swift_retain();
    swift_release();
    return (sqlite3 *)v8;
  }
  return v7;
}

{
  uint64_t v3;
  uint64_t v4;
  sqlite3 *result;
  uint64_t v7;

  type metadata accessor for Statement();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  result = sub_247C17F4C(v3);
  if (!v4)
  {
    v7 = Statement.bind(_:)(a3);
    swift_release();
    return (sqlite3 *)v7;
  }
  return result;
}

uint64_t Connection.prepare(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for Statement();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_247C17F4C(v3);
  if (!v4)
  {
    a2 = sub_247C00BBC(a3);
    swift_retain();
    swift_release();
  }
  return a2;
}

sqlite3 *Connection.run(_:_:)(uint64_t a1, uint64_t a2, sqlite3 *a3)
{
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for Statement();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_247C17F4C(v3);
  if (!v4)
  {
    a3 = Statement.run(_:)((uint64_t)a3);
    swift_release();
  }
  return a3;
}

uint64_t (*Connection.run(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t)
{
  return sub_247C285F4(a1, a2, a3, (uint64_t (*)(uint64_t))Statement.run(_:));
}

{
  return sub_247C285F4(a1, a2, a3, (uint64_t (*)(uint64_t))Statement.run(_:));
}

uint64_t (*sub_247C285F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t)))(uint64_t)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for Statement();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_247C17F4C(v4);
  if (!v5)
  {
    a4 = (uint64_t (*)(uint64_t))a4(a3);
    swift_release();
  }
  return a4;
}

sqlite3 *Connection.vacuum()()
{
  uint64_t v0;
  sqlite3 *v1;
  uint64_t v2;

  type metadata accessor for Statement();
  swift_allocObject();
  v2 = swift_retain();
  sub_247C17F4C(v2);
  if (!v0)
  {
    v1 = Statement.run(_:)(MEMORY[0x24BEE4AF8]);
    swift_release();
  }
  return v1;
}

sqlite3 *Connection.scalar(_:_:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  sqlite3 *result;
  uint64_t v7;
  sqlite3_stmt *v8;
  uint64_t v9;
  _QWORD v10[15];

  v10[14] = *MEMORY[0x24BDAC8D0];
  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  result = sub_247C17F4C(v2);
  if (!v3)
  {
    v7 = sub_247C00BBC(a1);
    swift_beginAccess();
    v8 = *(sqlite3_stmt **)(v7 + 16);
    swift_retain();
    sqlite3_reset(v8);
    Statement.step()();
    if (!v9)
    {
      Statement.row.getter(v10);
      Cursor.subscript.getter(0, a2);
    }
    swift_release();
    return (sqlite3 *)swift_release();
  }
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  sqlite3 *result;
  uint64_t v7;
  sqlite3_stmt *v8;
  uint64_t v9;
  _QWORD v10[15];

  v10[14] = *MEMORY[0x24BDAC8D0];
  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  result = sub_247C17F4C(v2);
  if (!v3)
  {
    v7 = sub_247C00BBC(a1);
    swift_beginAccess();
    v8 = *(sqlite3_stmt **)(v7 + 16);
    swift_retain();
    sqlite3_reset(v8);
    Statement.step()();
    if (!v9)
    {
      Statement.row.getter(v10);
      Cursor.subscript.getter(0, a2);
    }
    swift_release();
    return (sqlite3 *)swift_release();
  }
  return result;
}

{
  uint64_t v2;
  uint64_t v3;
  sqlite3 *result;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[15];

  v9[14] = *MEMORY[0x24BDAC8D0];
  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  result = sub_247C17F4C(v2);
  if (!v3)
  {
    v7 = Statement.bind(_:)(a1);
    swift_beginAccess();
    sqlite3_reset(*(sqlite3_stmt **)(v7 + 16));
    Statement.step()();
    if (!v8)
    {
      Statement.row.getter(v9);
      Cursor.subscript.getter(0, a2);
    }
    swift_release();
    return (sqlite3 *)swift_release();
  }
  return result;
}

SwiftSQLite::Connection::TransactionMode_optional __swiftcall Connection.TransactionMode.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SwiftSQLite::Connection::TransactionMode_optional result;
  char v5;

  v2 = v1;
  v3 = sub_247C3DA98();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t Connection.TransactionMode.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x54414944454D4D49;
  if (*v0 != 1)
    v1 = 0x564953554C435845;
  if (*v0)
    return v1;
  else
    return 0x4445525245464544;
}

uint64_t sub_247C28BA0(char *a1, unsigned __int8 *a2)
{
  return sub_247C32E3C(*a1, *a2);
}

uint64_t sub_247C28BAC()
{
  sub_247C3DB88();
  sub_247C3D81C();
  swift_bridgeObjectRelease();
  return sub_247C3DBA0();
}

uint64_t sub_247C28C54()
{
  sub_247C3D81C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C28CD8()
{
  sub_247C3DB88();
  sub_247C3D81C();
  swift_bridgeObjectRelease();
  return sub_247C3DBA0();
}

SwiftSQLite::Connection::TransactionMode_optional sub_247C28D7C(Swift::String *a1)
{
  return Connection.TransactionMode.init(rawValue:)(*a1);
}

void sub_247C28D88(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE800000000000000;
  v4 = 0x54414944454D4D49;
  if (v2 != 1)
    v4 = 0x564953554C435845;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 0x4445525245464544;
  if (!v5)
    v3 = 0xE900000000000045;
  *a1 = v6;
  a1[1] = v3;
}

uint64_t Connection.transaction(_:block:)(uint64_t a1, void (*a2)(uint64_t))
{
  sub_247C3D9E4();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  sub_247C28F58(0x204E49474542, 0xE600000000000000, a2);
  return swift_bridgeObjectRelease();
}

void sub_247C28F58(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v7;
  id v8;
  uint64_t v9;
  char v10;

  sub_247BFBA84();
  if (qword_254455430 != -1)
    swift_once();
  sub_247C3D978();
  v7 = sub_247BFBAC0();
  if ((v10 & 1) != 0 || v9 != v7)
  {
    v8 = *(id *)(v3 + 88);
    sub_247C3D99C();

  }
  else
  {
    sub_247C29248(v3, a1, a2, a3);
  }
}

uint64_t Connection.savepoint(_:block:)(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  sub_247BFD20C(0, 0xE000000000000000, a1, a2, 39, 0xE100000000000000);
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  sub_247C3D840();
  sub_247C28F58(0x4E494F5045564153, 0xEA00000000002054, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

sqlite3 *sub_247C29248(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v4;
  sqlite3 *result;
  uint64_t v8;

  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  result = sub_247C17F4C(a1);
  if (!v4)
  {
    Statement.run(_:)(MEMORY[0x24BEE4AF8]);
    swift_release();
    v8 = swift_release();
    a4(v8);
    swift_initStackObject();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_247C17F4C(a1);
    Statement.run(_:)(MEMORY[0x24BEE4AF8]);
    swift_release();
    return (sqlite3 *)swift_release();
  }
  return result;
}

Swift::Void __swiftcall Connection.interrupt()()
{
  uint64_t v0;
  sqlite3 *v1;

  swift_beginAccess();
  v1 = *(sqlite3 **)(v0 + 16);
  if (v1)
    sqlite3_interrupt(v1);
  else
    __break(1u);
}

double Connection.busyTimeout.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(double *)(v0 + 24);
}

sqlite3 *Connection.busyTimeout.setter(double a1)
{
  uint64_t v1;
  sqlite3 *result;
  double v4;

  swift_beginAccess();
  *(double *)(v1 + 24) = a1;
  swift_beginAccess();
  result = *(sqlite3 **)(v1 + 16);
  if (!result)
    goto LABEL_9;
  v4 = a1 * 1000.0;
  if ((~COERCE__INT64(a1 * 1000.0) & 0x7FF0000000000000) != 0)
  {
    if (v4 > -2147483650.0)
    {
      if (v4 < 2147483650.0)
        return (sqlite3 *)sqlite3_busy_timeout(result, (int)v4);
      goto LABEL_8;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_8:
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

sqlite3 *(*Connection.busyTimeout.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_247C295D8;
}

sqlite3 *sub_247C295D8(uint64_t a1, char a2)
{
  sqlite3 *result;
  uint64_t v5;
  double v6;

  result = (sqlite3 *)swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v5 = *(_QWORD *)(a1 + 24);
    swift_beginAccess();
    result = *(sqlite3 **)(v5 + 16);
    if (!result)
    {
LABEL_10:
      __break(1u);
      return result;
    }
    v6 = *(double *)(*(_QWORD *)(a1 + 24) + 24) * 1000.0;
    if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) != 0)
    {
      if (v6 > -2147483650.0)
      {
        if (v6 < 2147483650.0)
          return (sqlite3 *)sqlite3_busy_timeout(result, (int)v6);
        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  return result;
}

void Connection.busyHandler(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  sqlite3 *v7;
  const void *v8;
  sqlite3 *v9;
  _QWORD v10[6];

  if (a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = a1;
    *(_QWORD *)(v5 + 24) = a2;
    v10[4] = sub_247C2BA44;
    v10[5] = v5;
    v10[0] = MEMORY[0x24BDAC760];
    v10[1] = 1107296256;
    v10[2] = sub_247C297C4;
    v10[3] = &block_descriptor_6;
    v6 = _Block_copy(v10);
    sub_247C2BA74(a1);
    swift_retain();
    swift_release();
    swift_beginAccess();
    v7 = *(sqlite3 **)(v2 + 16);
    if (v7)
    {
      sqlite3_busy_handler(v7, (int (__cdecl *)(void *, int))sub_247C2980C, v6);
      sub_247C2BA84(a1);
      v8 = *(const void **)(v2 + 32);
      *(_QWORD *)(v2 + 32) = v6;
LABEL_6:
      _Block_release(v8);
      return;
    }
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    v9 = *(sqlite3 **)(v2 + 16);
    if (v9)
    {
      sqlite3_busy_handler(v9, 0, 0);
      v8 = *(const void **)(v2 + 32);
      *(_QWORD *)(v2 + 32) = 0;
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t sub_247C297C4(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  v4 = v3(a2);
  swift_release();
  return v4;
}

uint64_t sub_247C2980C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void sub_247C29818(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  sqlite3 *v7;
  const void *v8;
  sqlite3 *v9;
  _QWORD v10[6];

  if (a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = a1;
    *(_QWORD *)(v5 + 24) = a2;
    v10[4] = sub_247C2C1E4;
    v10[5] = v5;
    v10[0] = MEMORY[0x24BDAC760];
    v10[1] = 1107296256;
    v10[2] = sub_247C29958;
    v10[3] = &block_descriptor_36;
    v6 = _Block_copy(v10);
    sub_247C2BA74(a1);
    swift_retain();
    swift_release();
    swift_beginAccess();
    v7 = *(sqlite3 **)(v2 + 16);
    if (v7)
    {
      sqlite3_trace_v2(v7, 1u, (int (__cdecl *)(unsigned int, void *, void *, void *))sub_247C29994, v6);
      sub_247C2BA84(a1);
      v8 = *(const void **)(v2 + 40);
      *(_QWORD *)(v2 + 40) = v6;
LABEL_6:
      _Block_release(v8);
      return;
    }
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    v9 = *(sqlite3 **)(v2 + 16);
    if (v9)
    {
      sqlite3_trace_v2(v9, 0, 0, 0);
      v8 = *(const void **)(v2 + 40);
      *(_QWORD *)(v2 + 40) = 0;
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t sub_247C29958(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_247C29994(int a1, uint64_t a2, sqlite3_stmt *pStmt)
{
  char *v4;
  char *v5;

  if (pStmt)
  {
    v4 = sqlite3_expanded_sql(pStmt);
    if (v4)
    {
      v5 = v4;
      (*(void (**)(uint64_t, char *))(a2 + 16))(a2, v4);
      sqlite3_free(v5);
    }
  }
  return 0;
}

void Connection.updateHook(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  sqlite3 *v7;
  const void *v8;
  sqlite3 *v9;
  _QWORD v10[6];

  if (a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = a1;
    *(_QWORD *)(v5 + 24) = a2;
    v10[4] = sub_247C2BA6C;
    v10[5] = v5;
    v10[0] = MEMORY[0x24BDAC760];
    v10[1] = 1107296256;
    v10[2] = sub_247C29BA8;
    v10[3] = &block_descriptor_12;
    v6 = _Block_copy(v10);
    sub_247C2BA74(a1);
    swift_retain();
    swift_release();
    swift_beginAccess();
    v7 = *(sqlite3 **)(v2 + 16);
    if (v7)
    {
      sqlite3_update_hook(v7, (void (__cdecl *)(void *, int, const char *, const char *, sqlite3_int64))sub_247C29C08, v6);
      sub_247C2BA84(a1);
      v8 = *(const void **)(v2 + 48);
      *(_QWORD *)(v2 + 48) = v6;
LABEL_6:
      _Block_release(v8);
      return;
    }
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    v9 = *(sqlite3 **)(v2 + 16);
    if (v9)
    {
      sqlite3_update_hook(v9, 0, 0);
      v8 = *(const void **)(v2 + 48);
      *(_QWORD *)(v2 + 48) = 0;
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t sub_247C29B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;

  sub_247C27814(a1, &v13);
  v7 = sub_247C3D84C();
  v9 = v8;
  v10 = sub_247C3D84C();
  a5(&v13, v7, v9, v10, v11, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C29BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v9(a2, a3, a4, a5);
  return swift_release();
}

uint64_t sub_247C29C08(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    if (a4)
      return (*(uint64_t (**)(void))(result + 16))();
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void Connection.commitHook(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  sqlite3 *v7;
  const void *v8;
  sqlite3 *v9;
  _QWORD v10[6];

  if (a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = a1;
    *(_QWORD *)(v5 + 24) = a2;
    v10[4] = sub_247C2BA94;
    v10[5] = v5;
    v10[0] = MEMORY[0x24BDAC760];
    v10[1] = 1107296256;
    v10[2] = sub_247C29D58;
    v10[3] = &block_descriptor_18;
    v6 = _Block_copy(v10);
    sub_247C2BA74(a1);
    swift_retain();
    swift_release();
    swift_beginAccess();
    v7 = *(sqlite3 **)(v2 + 16);
    if (v7)
    {
      sqlite3_commit_hook(v7, (int (__cdecl *)(void *))sub_247C29D90, v6);
      sub_247C2BA84(a1);
      v8 = *(const void **)(v2 + 56);
      *(_QWORD *)(v2 + 56) = v6;
LABEL_6:
      _Block_release(v8);
      return;
    }
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    v9 = *(sqlite3 **)(v2 + 16);
    if (v9)
    {
      sqlite3_commit_hook(v9, 0, 0);
      v8 = *(const void **)(v2 + 56);
      *(_QWORD *)(v2 + 56) = 0;
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t sub_247C29D58(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  return v3;
}

uint64_t sub_247C29D90(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void Connection.rollbackHook(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  void *v6;
  sqlite3 *v7;
  const void *v8;
  sqlite3 *v9;
  _QWORD v10[6];

  if (a1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = a1;
    *(_QWORD *)(v5 + 24) = a2;
    v10[4] = sub_247C2BAE0;
    v10[5] = v5;
    v10[0] = MEMORY[0x24BDAC760];
    v10[1] = 1107296256;
    v10[2] = sub_247C29ED0;
    v10[3] = &block_descriptor_24;
    v6 = _Block_copy(v10);
    sub_247C2BA74(a1);
    swift_retain();
    swift_release();
    swift_beginAccess();
    v7 = *(sqlite3 **)(v2 + 16);
    if (v7)
    {
      sqlite3_rollback_hook(v7, (void (__cdecl *)(void *))sub_247C29EFC, v6);
      sub_247C2BA84(a1);
      v8 = *(const void **)(v2 + 64);
      *(_QWORD *)(v2 + 64) = v6;
LABEL_6:
      _Block_release(v8);
      return;
    }
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    v9 = *(sqlite3 **)(v2 + 16);
    if (v9)
    {
      sqlite3_rollback_hook(v9, 0, 0);
      v8 = *(const void **)(v2 + 64);
      *(_QWORD *)(v2 + 64) = 0;
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t sub_247C29ED0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_247C29EFC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t sub_247C29F04(uint64_t a1, int a2, uint64_t a3, void (*a4)(_QWORD *__return_ptr, _QWORD), int a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v10;
  sqlite3_int64 v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;
  uint64_t v16;
  void (__cdecl *v17)(void *);
  uint64_t v18;
  void (*v19)(_QWORD *__return_ptr, _QWORD);
  sqlite3_int64 v21[7];
  _QWORD v22[3];
  uint64_t v23;
  _QWORD v24[6];

  if (a2 < 0)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v5 = a1;
  v8 = MEMORY[0x24BEE4AF8];
  if (a2)
  {
    v19 = a4;
    v10 = a2;
    v22[0] = MEMORY[0x24BEE4AF8];
    v6 = v22;
    sub_247C12A38(0, a2, 0);
    v11 = 0;
    v8 = v22[0];
    v5 = 40;
    while (v10 != v11)
    {
      v21[0] = v11;
      sub_247C2A33C(v21, a3, (uint64_t)v24);
      v22[0] = v8;
      v13 = *(_QWORD *)(v8 + 16);
      v12 = *(_QWORD *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        v6 = v22;
        sub_247C12A38((_QWORD *)(v12 > 1), v13 + 1, 1);
        v8 = v22[0];
      }
      ++v11;
      *(_QWORD *)(v8 + 16) = v13 + 1;
      sub_247C176D4((uint64_t)v24, v8 + 40 * v13 + 32);
      if (v10 == v11)
      {
        a4 = v19;
        v5 = a1;
        goto LABEL_9;
      }
    }
    __break(1u);
    goto LABEL_33;
  }
LABEL_9:
  LODWORD(v6) = a5;
  a4(v24, v8);
  swift_bridgeObjectRelease();
  sub_247C01300((uint64_t)v24, (uint64_t)v22);
  if (v23)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      LODWORD(v6) = v21[0];
      v14 = *(_QWORD *)(v21[0] + 16);
      if (!(v14 >> 31))
      {
        sqlite3_result_blob((sqlite3_context *)v5, (const void *)(v21[0] + 32), v14, 0);
        sub_247C10130((uint64_t)v24);
        return swift_bridgeObjectRelease();
      }
      goto LABEL_34;
    }
  }
  else
  {
    sub_247C10130((uint64_t)v22);
  }
  sub_247C01300((uint64_t)v24, (uint64_t)v22);
  if (v23)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sqlite3_result_double((sqlite3_context *)v5, *(double *)v21);
      return sub_247C10130((uint64_t)v24);
    }
  }
  else
  {
    sub_247C10130((uint64_t)v22);
  }
  sub_247C01300((uint64_t)v24, (uint64_t)v22);
  if (v23)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      sqlite3_result_int64((sqlite3_context *)v5, v21[0]);
      return sub_247C10130((uint64_t)v24);
    }
  }
  else
  {
    sub_247C10130((uint64_t)v22);
  }
  sub_247C01300((uint64_t)v24, (uint64_t)v22);
  if (v23)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v16 = sub_247C3D828();
      if (v16 >= (uint64_t)0xFFFFFFFF80000000)
      {
        LODWORD(v6) = v16;
        if (v16 <= 0x7FFFFFFF)
        {
          if (qword_254455320 == -1)
          {
LABEL_27:
            v17 = (void (__cdecl *)(void *))qword_254455C50;
            v18 = sub_247C3D804();
            swift_bridgeObjectRelease();
            sqlite3_result_text((sqlite3_context *)v5, (const char *)(v18 + 32), (int)v6, v17);
            sub_247C10130((uint64_t)v24);
            return swift_release();
          }
LABEL_37:
          swift_once();
          goto LABEL_27;
        }
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
  else
  {
    sub_247C10130((uint64_t)v22);
  }
  if (!v24[3])
  {
    sqlite3_result_null((sqlite3_context *)v5);
    return sub_247C10130((uint64_t)v24);
  }
  sub_247C01300((uint64_t)v24, (uint64_t)v22);
  v21[0] = 0;
  v21[1] = 0xE000000000000000;
  sub_247C3D9E4();
  swift_bridgeObjectRelease();
  v21[5] = 0xD000000000000019;
  v21[6] = 0x8000000247C3FB00;
  sub_247C01300((uint64_t)v22, (uint64_t)v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
  sub_247C3D7EC();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  result = sub_247C3DA68();
  __break(1u);
  return result;
}

uint64_t sub_247C2A310()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_247C2A334(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;

  return sub_247C29F04(a1, a2, a3, *(void (**)(_QWORD *__return_ptr, _QWORD))(v3 + 16), *(_QWORD *)(v3 + 24));
}

void sub_247C2A33C(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sqlite3_value *v4;
  sqlite3_int64 v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  const void *v9;
  const void *v10;
  int v11;

  if (!a2)
  {
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    sub_247C3D9E4();
    swift_bridgeObjectRelease();
    sub_247C3DAC8();
    sub_247C3D840();
    swift_bridgeObjectRelease();
    sub_247C3DA68();
    __break(1u);
    JUMPOUT(0x247C2A514);
  }
  v4 = *(sqlite3_value **)(a2 + 8 * *a1);
  switch(sqlite3_value_type(v4))
  {
    case 1:
      v5 = sqlite3_value_int64(v4);
      *(_QWORD *)(a3 + 24) = MEMORY[0x24BEE4008];
      *(_QWORD *)(a3 + 32) = &protocol witness table for Int64;
      goto LABEL_10;
    case 2:
      v8 = sqlite3_value_double(v4);
      *(_QWORD *)(a3 + 24) = MEMORY[0x24BEE13C8];
      *(_QWORD *)(a3 + 32) = &protocol witness table for Double;
      *(double *)a3 = v8;
      return;
    case 3:
      if (!sqlite3_value_text(v4))
        goto LABEL_13;
      v6 = sub_247C3D858();
      *(_QWORD *)(a3 + 24) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(a3 + 32) = &protocol witness table for String;
      *(_QWORD *)a3 = v6;
      *(_QWORD *)(a3 + 8) = v7;
      break;
    case 4:
      v9 = sqlite3_value_blob(v4);
      if (!v9)
        goto LABEL_14;
      v10 = v9;
      v11 = sqlite3_value_bytes(v4);
      *(_QWORD *)(a3 + 24) = &type metadata for Blob;
      *(_QWORD *)(a3 + 32) = &protocol witness table for Blob;
      v5 = (sqlite3_int64)sub_247BFBFF8(v10, v11);
LABEL_10:
      *(_QWORD *)a3 = v5;
      break;
    case 5:
      *(_QWORD *)(a3 + 32) = 0;
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      return;
    default:
      goto LABEL_15;
  }
}

uint64_t sub_247C2A528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v7)(uint64_t, uint64_t, uint64_t);

  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v7(a2, a3, a4);
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_247C2A598(sqlite3_context *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (**v6)(void *, sqlite3_context *, uint64_t, uint64_t);

  v6 = (uint64_t (**)(void *, sqlite3_context *, uint64_t, uint64_t))sqlite3_user_data(a1);
  return v6[2](v6, a1, a2, a3);
}

void (*sub_247C2A5D8(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_247C2AD6C(v6, a2, a3);
  return sub_247C2A644;
}

void sub_247C2A644(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

void Connection.createCollation(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  void *v11;
  sqlite3 **v12;
  sqlite3 *v13;
  uint64_t v14;
  unsigned int collation_v2;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v5 = v4;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a3;
  *(_QWORD *)(v10 + 24) = a4;
  aBlock[4] = sub_247C2BB00;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_247C2A968;
  aBlock[3] = &block_descriptor_30;
  v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v12 = (sqlite3 **)(v5 + 16);
  swift_beginAccess();
  v13 = *(sqlite3 **)(v5 + 16);
  if (!v13)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v14 = sub_247C3D804();
  collation_v2 = sqlite3_create_collation_v2(v13, (const char *)(v14 + 32), 1, v11, (int (__cdecl *)(void *, int, const void *, int, const void *))sub_247C2A9BC, 0);
  swift_release();
  v16 = qword_254455350;
  swift_retain();
  if (v16 != -1)
    swift_once();
  if (sub_247BFB63C(collation_v2, (uint64_t)off_254455348))
  {
    swift_release();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    _Block_copy(v11);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *(_QWORD *)(v5 + 80);
    *(_QWORD *)(v5 + 80) = 0x8000000000000000;
    sub_247C2B52C((uint64_t)v11, a1, a2, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v5 + 80) = v22;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
LABEL_9:
    _Block_release(v11);
    return;
  }
  if (!*v12)
    goto LABEL_11;
  if (sqlite3_errmsg(*v12))
  {
    v18 = sub_247C3D84C();
    v20 = v19;
    swift_release();
    sub_247C1A4D0();
    swift_allocError();
    *(_QWORD *)v21 = v18;
    *(_QWORD *)(v21 + 8) = v20;
    *(_DWORD *)(v21 + 16) = collation_v2;
    *(_QWORD *)(v21 + 24) = 0;
    swift_willThrow();
    goto LABEL_9;
  }
LABEL_12:
  __break(1u);
}

uint64_t sub_247C2A8D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v4 = sub_247C3D858();
  v6 = v5;
  v7 = sub_247C3D858();
  v9 = a3(v4, v6, v7, v8);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (v9 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v9 <= 0x7FFFFFFF)
  {
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_247C2A968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v6 = v5(a2, a3);
  swift_release();
  return v6;
}

uint64_t sub_247C2A9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a3 && a5)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a1 + 16))(a1, a3, a5);
  result = sub_247C3DA68();
  __break(1u);
  return result;
}

uint64_t sub_247C2AA34()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254455358);
  swift_allocObject();
  result = sub_247C3D744();
  qword_254455428 = result;
  return result;
}

sqlite3 *Connection.description.getter()
{
  uint64_t v0;
  sqlite3 *result;

  swift_beginAccess();
  result = *(sqlite3 **)(v0 + 16);
  if (result)
  {
    result = (sqlite3 *)sqlite3_db_filename(result, 0);
    if (result)
      return (sqlite3 *)sub_247C3D84C();
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

sqlite3 *sub_247C2AAC0()
{
  uint64_t *v0;
  uint64_t v1;
  sqlite3 *result;

  v1 = *v0;
  swift_beginAccess();
  result = *(sqlite3 **)(v1 + 16);
  if (result)
  {
    result = (sqlite3 *)sqlite3_db_filename(result, 0);
    if (result)
      return (sqlite3 *)sub_247C3D84C();
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_247C2AB18()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[1];
  if (v1 == 1)
    v2 = 0;
  else
    v2 = *v0;
  if (v1)
    v3 = v2;
  else
    v3 = 0x3A79726F6D656D3ALL;
  sub_247C2BA14(*v0, v1);
  return v3;
}

void *sub_247C2AB70()
{
  void *result;

  result = (void *)sub_247C2B778((uint64_t)&unk_251934BA8);
  off_254455348 = result;
  return result;
}

const char *Result.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  const char *result;
  uint64_t v4;

  v1 = *v0;
  v2 = v0[3];
  if (v2)
  {
    swift_retain_n();
    sub_247C3D9E4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_247C3D840();
    swift_beginAccess();
    result = sqlite3_sql(*(sqlite3_stmt **)(v2 + 16));
    if (result)
    {
      sub_247C3D84C();
      sub_247C3D840();
      swift_bridgeObjectRelease();
      sub_247C3D840();
      sub_247C3DAC8();
      sub_247C3D840();
      swift_bridgeObjectRelease();
      sub_247C3D840();
      swift_release_n();
      return (const char *)v1;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v4 = *v0;
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3DAC8();
    sub_247C3D840();
    swift_bridgeObjectRelease();
    sub_247C3D840();
    return (const char *)v4;
  }
  return result;
}

unint64_t sub_247C2AD3C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_247C3DB7C();
  return sub_247C2B07C(a1, v2);
}

void (*sub_247C2AD6C(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_247C2AFB4(v6);
  v6[10] = sub_247C2AE4C(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_247C2ADFC;
}

void sub_247C2ADFC(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_247C2AE4C(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*result)(uint64_t **);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v5;
  v10[1] = a2;
  v11 = *v5;
  v13 = sub_247BFCCBC(a2, a3);
  *((_BYTE *)v10 + 40) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*(_QWORD *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *v10 = v19;
        return sub_247C2AF78;
      }
LABEL_11:
      v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_247C3B488();
      goto LABEL_7;
    }
    sub_247C3ACC0(v16, a4 & 1);
    v20 = sub_247BFCCBC(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      v13 = v20;
      v10[4] = v20;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))sub_247C3DB34();
  __break(1u);
  return result;
}

void sub_247C2AF78(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_247C2AFE0(*a1, *((_BYTE *)*a1 + 40), (uint64_t *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t (*sub_247C2AFB4(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_247C2AFD4;
}

uint64_t sub_247C2AFD4(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_247C2AFE0(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;

  v8 = *a1;
  if (*a1)
  {
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(*(_QWORD *)(*a3 + 56) + 8 * a4) = v8;
    }
    else
    {
      sub_247C3B9E4(a4, a5, a6, v8, (_QWORD *)*a3);
      swift_bridgeObjectRetain();
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    sub_247C2B118(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

unint64_t sub_247C2B07C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_247C2B118(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_247C3D9CC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_247C3DB88();
        swift_bridgeObjectRetain();
        sub_247C3D81C();
        v9 = sub_247C3DBA0();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_247C2B2EC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_247C2AD3C(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        _Block_release(*(const void **)(v17 + 8 * v10));
        *(_QWORD *)(v17 + 8 * v10) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_247C3B2E8();
      goto LABEL_7;
    }
    sub_247C3AA0C(v13, a3 & 1);
    v18 = sub_247C2AD3C(a2);
    if ((v14 & 1) == (v19 & 1))
    {
      v10 = v18;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_247C3B99C(v10, a2, a1, v16);
      return;
    }
  }
  sub_247C3DB34();
  __break(1u);
}

uint64_t sub_247C2B400(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_247BFCCBC(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_247C3B488();
      goto LABEL_7;
    }
    sub_247C3ACC0(v15, a4 & 1);
    v21 = sub_247BFCCBC(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_247C3B9E4(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_247C3DB34();
  __break(1u);
  return result;
}

void sub_247C2B52C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_247BFCCBC(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        _Block_release(*(const void **)(v19 + 8 * v12));
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_247C3B63C();
      goto LABEL_7;
    }
    sub_247C3AFD4(v15, a4 & 1);
    v20 = sub_247BFCCBC(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_247C3B9E4(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain();
      return;
    }
  }
  sub_247C3DB34();
  __break(1u);
}

uint64_t sub_247C2B658(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_247BFCCBC(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= result && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        *(_QWORD *)(v18[7] + 8 * v12) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= result && (a4 & 1) == 0)
    {
      result = (uint64_t)sub_247C3B7F0();
      goto LABEL_7;
    }
    sub_247BFD7B0(result, a4 & 1);
    result = sub_247BFCCBC(a2, a3);
    if ((v16 & 1) == (v19 & 1))
    {
      v12 = result;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_247C3B9E4(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_247C3DB34();
  __break(1u);
  return result;
}

uint64_t sub_247C2B778(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t result;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455380);
    v3 = sub_247C3D9D8();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    v7 = *(_QWORD *)(v3 + 40);
    v8 = ~(-1 << *(_BYTE *)(v3 + 32));
    while (1)
    {
      v9 = *(_DWORD *)(v6 + 4 * v4);
      result = MEMORY[0x24958E8CC](v7, v9, 4);
      v11 = result & v8;
      v12 = (result & (unint64_t)v8) >> 6;
      v13 = *(_QWORD *)(v5 + 8 * v12);
      v14 = 1 << (result & v8);
      v15 = *(_QWORD *)(v3 + 48);
      if ((v14 & v13) != 0)
      {
        while (*(_DWORD *)(v15 + 4 * v11) != v9)
        {
          v11 = (v11 + 1) & v8;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            goto LABEL_7;
        }
      }
      else
      {
LABEL_7:
        *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
        *(_DWORD *)(v15 + 4 * v11) = v9;
        v16 = *(_QWORD *)(v3 + 16);
        v17 = __OFADD__(v16, 1);
        v18 = v16 + 1;
        if (v17)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v3 + 16) = v18;
      }
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

unint64_t sub_247C2B894(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  const void *v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  const void **v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  char v13;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED460);
  v3 = (_QWORD *)sub_247C3DA8C();
  v5 = a1[4];
  v4 = (const void *)a1[5];
  result = sub_247C2AD3C(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x24BEE4B00];
  }
  v8 = (const void **)(a1 + 7);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    _Block_copy(v4);
    if (!--v1)
      return (unint64_t)v3;
    v5 = (uint64_t)*(v8 - 1);
    v4 = *v8;
    result = sub_247C2AD3C(v5);
    v8 += 2;
    if ((v13 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_247C2B980()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254455370;
  if (!qword_254455370)
  {
    v1 = sub_247C3D96C();
    result = MEMORY[0x24958EDF4](MEMORY[0x24BEE5698], v1);
    atomic_store(result, (unint64_t *)&qword_254455370);
  }
  return result;
}

unint64_t sub_247C2B9C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254455368;
  if (!qword_254455368)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254455360);
    result = MEMORY[0x24958EDF4](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_254455368);
  }
  return result;
}

uint64_t sub_247C2BA14(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRetain();
  return result;
}

sqlite3 *sub_247C2BA28@<X0>(unsigned int *a1@<X8>)
{
  uint64_t v1;

  return sub_247C281B8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_247C2BA44(int a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(a1) & 1;
}

uint64_t sub_247C2BA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_247C29B18(a1, a2, a3, a4, *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 16));
}

uint64_t sub_247C2BA74(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_247C2BA84(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_247C2BA94()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  return 0;
}

uint64_t sub_247C2BAE0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_247C2BB00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_247C2A8D0(a1, a2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 16));
}

unint64_t sub_247C2BB0C()
{
  unint64_t result;

  result = qword_2576ED450;
  if (!qword_2576ED450)
  {
    result = MEMORY[0x24958EDF4](&protocol conformance descriptor for Connection.Operation, &type metadata for Connection.Operation);
    atomic_store(result, (unint64_t *)&qword_2576ED450);
  }
  return result;
}

unint64_t sub_247C2BB54()
{
  unint64_t result;

  result = qword_2576ED458;
  if (!qword_2576ED458)
  {
    result = MEMORY[0x24958EDF4](&protocol conformance descriptor for Connection.TransactionMode, &type metadata for Connection.TransactionMode);
    atomic_store(result, (unint64_t *)&qword_2576ED458);
  }
  return result;
}

double sub_247C2BB98@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  double result;

  v3 = *a1;
  swift_beginAccess();
  result = *(double *)(v3 + 24);
  *a2 = result;
  return result;
}

sqlite3 *sub_247C2BBDC(double *a1)
{
  return Connection.busyTimeout.setter(*a1);
}

uint64_t type metadata accessor for Connection()
{
  return objc_opt_self();
}

uint64_t method lookup function for Connection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Connection.__allocating_init(_:readonly:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

unint64_t destroy for Connection.Location(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s11SwiftSQLite10ConnectionC8LocationOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for Connection.Location(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Connection.Location(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Connection.Location(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Connection.Location(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_247C2BE58(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_247C2BE70(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Connection.Location()
{
  return &type metadata for Connection.Location;
}

ValueMetadata *type metadata accessor for Connection.Operation()
{
  return &type metadata for Connection.Operation;
}

uint64_t getEnumTagSinglePayload for JoinType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11SwiftSQLite10ConnectionC9OperationOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_247C2BF94 + 4 * byte_247C3E9F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_247C2BFC8 + 4 * byte_247C3E9F0[v4]))();
}

uint64_t sub_247C2BFC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_247C2BFD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x247C2BFD8);
  return result;
}

uint64_t sub_247C2BFE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x247C2BFECLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_247C2BFF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_247C2BFF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Connection.TransactionMode()
{
  return &type metadata for Connection.TransactionMode;
}

uint64_t destroy for Result()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for Result(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Result(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for Result(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Result(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Result(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_247C2C1CC()
{
  return 0;
}

ValueMetadata *type metadata accessor for Result()
{
  return &type metadata for Result;
}

uint64_t sub_247C2C1E4()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 16);
  v2 = sub_247C3D858();
  v1(v2);
  return swift_bridgeObjectRelease();
}

sqlite3 *sub_247C2C218()
{
  uint64_t v0;

  return sub_247C29248(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(uint64_t))(v0 + 40));
}

uint64_t sub_247C2C29C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  _UNKNOWN **v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  _UNKNOWN **v20;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3B8);
  a6[3] = v12;
  a6[4] = &protocol witness table for Expression<A>;
  *a6 = a1;
  a6[1] = a2;
  a6[2] = a3;
  v19 = v12;
  v20 = &protocol witness table for Expression<A>;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_247C3E1D0;
  if (a5)
  {
    v14 = &protocol witness table for String;
    v15 = MEMORY[0x24BEE0D00];
  }
  else
  {
    a4 = 0;
    v15 = 0;
    v14 = 0;
    *(_QWORD *)(v13 + 48) = 0;
  }
  *(_QWORD *)(v13 + 32) = a4;
  *(_QWORD *)(v13 + 40) = a5;
  *(_QWORD *)(v13 + 56) = v15;
  *(_QWORD *)(v13 + 64) = v14;
  *(_QWORD *)&v17 = 63;
  *((_QWORD *)&v17 + 1) = 0xE100000000000000;
  v18 = v13;
  return sub_247BFECDC(&v17, (uint64_t)(a6 + 5));
}

uint64_t QueryType.insert(_:userInfo:otherSetters:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_247C2C738(a1, a2, a3, a4, a5, (void (*)(_QWORD, uint64_t, uint64_t))QueryType.insert(_:));
}

uint64_t type metadata accessor for SQLiteEncoder()
{
  return objc_opt_self();
}

uint64_t QueryType.insert(or:encodable:userInfo:otherSetters:)(unsigned __int8 *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;
  Swift::OpaquePointer v11[5];
  int v12;
  char v13;

  v12 = *a1;
  v6 = (void *)type metadata accessor for SQLiteEncoder();
  v7 = (_QWORD *)swift_allocObject();
  v8 = MEMORY[0x24BEE4AF8];
  v7[2] = MEMORY[0x24BEE4AF8];
  v7[3] = v8;
  v7[4] = a3;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v11[3]._rawValue = v6;
  v11[4]._rawValue = (void *)sub_247C31DF0(&qword_2576ED468, (uint64_t (*)(uint64_t))type metadata accessor for SQLiteEncoder, (uint64_t)&unk_247C3F100);
  v11[0]._rawValue = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_247C3D774();
  if (v3)
  {
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    v13 = v12;
    v11[0] = (Swift::OpaquePointer)v7[2];
    swift_bridgeObjectRetain();
    v10 = swift_bridgeObjectRetain();
    sub_247C0F960(v10);
    QueryType.insert(or:_:)((SwiftSQLite::OnConflict)&v13, v11[0]);
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

SwiftSQLite::Insert __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> QueryType.insertMany(_:userInfo:otherSetters:)(Swift::OpaquePointer _, Swift::OpaquePointer userInfo, Swift::OpaquePointer otherSetters)
{
  uint64_t v3;
  char *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  SwiftSQLite::Insert result;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_247C31B18((uint64_t)_._rawValue, (uint64_t)userInfo._rawValue, (uint64_t)otherSetters._rawValue);
  swift_bridgeObjectRelease();
  v8 = swift_bridgeObjectRelease();
  if (!v3)
  {
    QueryType.insertMany(_:)((Swift::OpaquePointer)v7);
    v8 = swift_bridgeObjectRelease();
  }
  result.bindings._rawValue = v10;
  result.template._object = v9;
  result.template._countAndFlagsBits = v8;
  return result;
}

uint64_t QueryType.upsert(_:userInfo:otherSetters:onConflictOf:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v18[5];

  v9 = type metadata accessor for SQLiteEncoder();
  v10 = (_QWORD *)swift_allocObject();
  v11 = MEMORY[0x24BEE4AF8];
  v10[2] = MEMORY[0x24BEE4AF8];
  v10[3] = v11;
  v10[4] = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v18[3] = v9;
  v18[4] = sub_247C31DF0(&qword_2576ED468, (uint64_t (*)(uint64_t))type metadata accessor for SQLiteEncoder, (uint64_t)&unk_247C3F100);
  v18[0] = (uint64_t)v10;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_247C3D774();
  if (v6)
  {
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    v18[0] = v10[2];
    swift_bridgeObjectRetain();
    v13 = swift_bridgeObjectRetain();
    sub_247C0F960(v13);
    QueryType.upsert(_:onConflictOf:)(v18[0], a3, a4, a5, a6);
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t QueryType.update(_:userInfo:otherSetters:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_247C2C738(a1, a2, a3, a4, a5, (void (*)(_QWORD, uint64_t, uint64_t))QueryType.update(_:));
}

uint64_t sub_247C2C738(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD v16[5];
  void (*v17)(_QWORD, uint64_t, uint64_t);

  v17 = a6;
  v9 = type metadata accessor for SQLiteEncoder();
  v10 = (_QWORD *)swift_allocObject();
  v11 = MEMORY[0x24BEE4AF8];
  v10[2] = MEMORY[0x24BEE4AF8];
  v10[3] = v11;
  v10[4] = a2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v16[3] = v9;
  v16[4] = sub_247C31DF0(&qword_2576ED468, (uint64_t (*)(uint64_t))type metadata accessor for SQLiteEncoder, (uint64_t)&unk_247C3F100);
  v16[0] = v10;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_247C3D774();
  if (v6)
  {
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    v16[0] = v10[2];
    swift_bridgeObjectRetain();
    v13 = swift_bridgeObjectRetain();
    sub_247C0F960(v13);
    v17(v16[0], a4, a5);
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t Row.decode<A>(userInfo:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v4 = *v1;
  v3 = v1[1];
  type metadata accessor for SQLiteDecoder();
  v5 = (_QWORD *)swift_allocObject();
  v6 = MEMORY[0x24BEE4AF8];
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v6;
  v5[5] = a1;
  sub_247C31DF0(qword_2576ED470, (uint64_t (*)(uint64_t))type metadata accessor for SQLiteDecoder, (uint64_t)&unk_247C3F0B8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_247C3D924();
}

uint64_t Row.decoder(userInfo:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v6 = *v2;
  v5 = v2[1];
  v7 = type metadata accessor for SQLiteDecoder();
  v8 = (_QWORD *)swift_allocObject();
  v9 = MEMORY[0x24BEE4AF8];
  v8[2] = v6;
  v8[3] = v5;
  v8[4] = v9;
  v8[5] = a1;
  a2[3] = v7;
  a2[4] = sub_247C31DF0(qword_2576ED470, (uint64_t (*)(uint64_t))type metadata accessor for SQLiteDecoder, (uint64_t)&unk_247C3F0B8);
  *a2 = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_247C2CA1C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_allocObject();
  v3 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = v3;
  return result;
}

void sub_247C2CA54()
{
  sub_247C3DA68();
  __break(1u);
}

void sub_247C2CAAC()
{
  sub_247C3DA68();
  __break(1u);
}

uint64_t sub_247C2CB04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_247C3DBAC();
  sub_247BFD20C(0, 0xE000000000000000, v2, v3, 34, 0xE100000000000000);
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  swift_bridgeObjectRelease();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_247C3E1D0;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_QWORD *)(v5 + 64) = 0;
  v6 = *(_QWORD *)(v1 + 16);
  result = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v1 + 16) = v6;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_247C0AC28(0, *(_QWORD *)(v6 + 16) + 1, 1, (char *)v6);
    v6 = result;
    *(_QWORD *)(v1 + 16) = result;
  }
  v9 = *(_QWORD *)(v6 + 16);
  v8 = *(_QWORD *)(v6 + 24);
  if (v9 >= v8 >> 1)
  {
    result = (uint64_t)sub_247C0AC28((char *)(v8 > 1), v9 + 1, 1, (char *)v6);
    v6 = result;
    *(_QWORD *)(v1 + 16) = result;
  }
  *(_QWORD *)(v6 + 16) = v9 + 1;
  v10 = (_QWORD *)(v6 + 80 * v9);
  v10[4] = 0;
  v10[5] = 0xE000000000000000;
  v10[6] = MEMORY[0x24BEE4AF8];
  v10[7] = v4;
  v10[8] = &protocol witness table for Expression<A>;
  v10[9] = 63;
  v10[10] = 0xE100000000000000;
  v10[11] = v5;
  v10[12] = v4;
  v10[13] = &protocol witness table for Expression<A>;
  return result;
}

double sub_247C2CCE8(uint64_t a1, uint64_t a2)
{
  return sub_247C2DC58(a1, a2, &qword_2576ED3C0, MEMORY[0x24BEE1768], (uint64_t)&protocol witness table for Int);
}

__n128 sub_247C2CD14(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 result;
  uint64_t v14;
  _BYTE v15[23];

  v3 = *(_QWORD *)(v1 + 16);
  v4 = sub_247C3DBAC();
  sub_247BFD20C(0, 0xE000000000000000, v4, v5, 34, 0xE100000000000000);
  *(_QWORD *)v15 = 0;
  *(_QWORD *)&v15[8] = 0xE000000000000000;
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  swift_bridgeObjectRelease();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552C0);
  v7 = *(char **)(v3 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v3 + 16) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_247C0AC28(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
    *(_QWORD *)(v3 + 16) = v7;
  }
  v10 = *((_QWORD *)v7 + 2);
  v9 = *((_QWORD *)v7 + 3);
  if (v10 >= v9 >> 1)
  {
    v7 = sub_247C0AC28((char *)(v9 > 1), v10 + 1, 1, v7);
    *(_QWORD *)(v3 + 16) = v7;
  }
  *((_QWORD *)v7 + 2) = v10 + 1;
  v11 = &v7[80 * v10];
  v12 = MEMORY[0x24BEE4AF8];
  *((_QWORD *)v11 + 4) = *(_QWORD *)v15;
  *((_QWORD *)v11 + 5) = 0xE000000000000000;
  *((_QWORD *)v11 + 6) = v12;
  *((_QWORD *)v11 + 7) = v6;
  *((_QWORD *)v11 + 8) = &protocol witness table for Expression<A>;
  v11[72] = a1 & 1;
  result = *(__n128 *)v15;
  v14 = MEMORY[0x24BEE1328];
  *((_QWORD *)v11 + 11) = *(_QWORD *)&v15[15];
  *((_QWORD *)v11 + 12) = v14;
  *(_OWORD *)(v11 + 73) = *(_OWORD *)v15;
  *((_QWORD *)v11 + 13) = &protocol witness table for Bool;
  return result;
}

double sub_247C2CEE4(float a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  double result;
  uint64_t v13;
  __int128 v14;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = sub_247C3DBAC();
  sub_247BFD20C(0, 0xE000000000000000, v4, v5, 34, 0xE100000000000000);
  *(_QWORD *)&v14 = 0;
  *((_QWORD *)&v14 + 1) = 0xE000000000000000;
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  swift_bridgeObjectRelease();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED5A8);
  v7 = *(char **)(v3 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v3 + 16) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_247C0AC28(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
    *(_QWORD *)(v3 + 16) = v7;
  }
  v10 = *((_QWORD *)v7 + 2);
  v9 = *((_QWORD *)v7 + 3);
  if (v10 >= v9 >> 1)
  {
    v7 = sub_247C0AC28((char *)(v9 > 1), v10 + 1, 1, v7);
    *(_QWORD *)(v3 + 16) = v7;
  }
  *((_QWORD *)v7 + 2) = v10 + 1;
  v11 = &v7[80 * v10];
  *((_QWORD *)v11 + 4) = v14;
  *((_QWORD *)v11 + 5) = 0xE000000000000000;
  *((_QWORD *)v11 + 6) = MEMORY[0x24BEE4AF8];
  *((_QWORD *)v11 + 7) = v6;
  *((_QWORD *)v11 + 8) = &protocol witness table for Expression<A>;
  *((double *)v11 + 9) = a1;
  result = *(double *)&v14;
  v13 = MEMORY[0x24BEE13C8];
  *((_OWORD *)v11 + 5) = v14;
  *((_QWORD *)v11 + 12) = v13;
  *((_QWORD *)v11 + 13) = &protocol witness table for Double;
  return result;
}

double sub_247C2D0AC(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  double result;
  uint64_t v13;
  __int128 v14;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = sub_247C3DBAC();
  sub_247BFD20C(0, 0xE000000000000000, v4, v5, 34, 0xE100000000000000);
  *(_QWORD *)&v14 = 0;
  *((_QWORD *)&v14 + 1) = 0xE000000000000000;
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  swift_bridgeObjectRelease();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED5A8);
  v7 = *(char **)(v3 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v3 + 16) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_247C0AC28(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
    *(_QWORD *)(v3 + 16) = v7;
  }
  v10 = *((_QWORD *)v7 + 2);
  v9 = *((_QWORD *)v7 + 3);
  if (v10 >= v9 >> 1)
  {
    v7 = sub_247C0AC28((char *)(v9 > 1), v10 + 1, 1, v7);
    *(_QWORD *)(v3 + 16) = v7;
  }
  *((_QWORD *)v7 + 2) = v10 + 1;
  v11 = &v7[80 * v10];
  *((_QWORD *)v11 + 4) = v14;
  *((_QWORD *)v11 + 5) = 0xE000000000000000;
  *((_QWORD *)v11 + 6) = MEMORY[0x24BEE4AF8];
  *((_QWORD *)v11 + 7) = v6;
  *((_QWORD *)v11 + 8) = &protocol witness table for Expression<A>;
  *((double *)v11 + 9) = a1;
  result = *(double *)&v14;
  v13 = MEMORY[0x24BEE13C8];
  *((_OWORD *)v11 + 5) = v14;
  *((_QWORD *)v11 + 12) = v13;
  *((_QWORD *)v11 + 13) = &protocol witness table for Double;
  return result;
}

uint64_t sub_247C2D270(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = sub_247C3DBAC();
  sub_247BFD20C(0, 0xE000000000000000, v5, v6, 34, 0xE100000000000000);
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  swift_bridgeObjectRelease();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3A0);
  v8 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRetain();
  result = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v4 + 16) = v8;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_247C0AC28(0, *(_QWORD *)(v8 + 16) + 1, 1, (char *)v8);
    v8 = result;
    *(_QWORD *)(v4 + 16) = result;
  }
  v11 = *(_QWORD *)(v8 + 16);
  v10 = *(_QWORD *)(v8 + 24);
  if (v11 >= v10 >> 1)
  {
    result = (uint64_t)sub_247C0AC28((char *)(v10 > 1), v11 + 1, 1, (char *)v8);
    v8 = result;
    *(_QWORD *)(v4 + 16) = result;
  }
  *(_QWORD *)(v8 + 16) = v11 + 1;
  v12 = (_QWORD *)(v8 + 80 * v11);
  v12[4] = 0;
  v12[5] = 0xE000000000000000;
  v12[6] = MEMORY[0x24BEE4AF8];
  v12[7] = v7;
  v12[8] = &protocol witness table for Expression<A>;
  v12[9] = a1;
  v13 = MEMORY[0x24BEE0D00];
  v12[10] = a2;
  v12[12] = v13;
  v12[13] = &protocol witness table for String;
  return result;
}

uint64_t sub_247C2D430(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  int v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char *v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  _QWORD *v85;
  char *v86;
  char *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _OWORD v91[5];
  uint64_t v92;

  v89 = a2;
  v5 = v4;
  v88 = a4;
  v92 = *v4;
  v8 = sub_247C3D7E0();
  MEMORY[0x24BDAC7A8](v8);
  v86 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_254455210);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_247C3D6CC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v87 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
  v21((char *)&v85 - v22, a1, a3);
  if (swift_dynamicCast())
  {
    v88 = *((_QWORD *)&v91[0] + 1);
    v23 = *(_QWORD *)&v91[0];
    v24 = v5[2];
    v25 = sub_247C3DBAC();
    v26 = v90;
    sub_247BFD20C(0, 0xE000000000000000, v25, v27, 34, 0xE100000000000000);
    v92 = v26;
    *(_QWORD *)&v91[0] = 0;
    *((_QWORD *)&v91[0] + 1) = 0xE000000000000000;
    sub_247C3D780();
    sub_247C3D840();
    swift_bridgeObjectRelease();
    sub_247C3D780();
    swift_bridgeObjectRelease();
    v28 = v91[0];
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2544552A8);
    v30 = *(char **)(v24 + 16);
    v31 = v23;
    v32 = v23;
    v33 = v88;
    sub_247BFA0B8(v32, v88);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v90 = v24;
    *(_QWORD *)(v24 + 16) = v30;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v30 = sub_247C0AC28(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
      *(_QWORD *)(v90 + 16) = v30;
    }
    v35 = MEMORY[0x24BDCDDE8];
    v37 = *((_QWORD *)v30 + 2);
    v36 = *((_QWORD *)v30 + 3);
    if (v37 >= v36 >> 1)
    {
      v30 = sub_247C0AC28((char *)(v36 > 1), v37 + 1, 1, v30);
      *(_QWORD *)(v90 + 16) = v30;
    }
    *((_QWORD *)v30 + 2) = v37 + 1;
    v38 = &v30[80 * v37];
    v39 = MEMORY[0x24BEE4AF8];
    *((_OWORD *)v38 + 2) = v28;
    *((_QWORD *)v38 + 6) = v39;
    *((_QWORD *)v38 + 7) = v29;
    *((_QWORD *)v38 + 8) = &protocol witness table for Expression<A>;
    *((_QWORD *)v38 + 9) = v31;
    *((_QWORD *)v38 + 10) = v33;
    *((_QWORD *)v38 + 12) = v35;
    *((_QWORD *)v38 + 13) = &protocol witness table for Data;
    return sub_247BFA1E4(v31, v33);
  }
  v85 = v5;
  v41 = v90;
  v21(v19, a1, a3);
  v42 = swift_dynamicCast();
  v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v44 = v13;
  if (v42)
  {
    v43(v12, 0, 1, v13);
    v45 = v41;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
    {
      v88 = v14;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v87, v12, v13);
      v86 = (char *)v85[2];
      v46 = sub_247C3DBAC();
      sub_247BFD20C(0, 0xE000000000000000, v46, v47, 34, 0xE100000000000000);
      v92 = v41;
      *(_QWORD *)&v91[0] = 0;
      *((_QWORD *)&v91[0] + 1) = 0xE000000000000000;
      sub_247C3D780();
      sub_247C3D840();
      swift_bridgeObjectRelease();
      sub_247C3D780();
      swift_bridgeObjectRelease();
      v90 = *((_QWORD *)&v91[0] + 1);
      v48 = *(_QWORD *)&v91[0];
      if (qword_2544552F8 != -1)
        swift_once();
      swift_beginAccess();
      v49 = (id)qword_254455318;
      v50 = (void *)sub_247C3D6B4();
      v51 = objc_msgSend(v49, sel_stringFromDate_, v50);

      v52 = sub_247C3D7B0();
      v54 = v53;

      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED3A0);
      v56 = v86;
      v57 = (char *)*((_QWORD *)v86 + 2);
      v58 = swift_isUniquelyReferenced_nonNull_native();
      *((_QWORD *)v56 + 2) = v57;
      v59 = v44;
      if ((v58 & 1) == 0)
      {
        v57 = sub_247C0AC28(0, *((_QWORD *)v57 + 2) + 1, 1, v57);
        *((_QWORD *)v56 + 2) = v57;
      }
      v61 = *((_QWORD *)v57 + 2);
      v60 = *((_QWORD *)v57 + 3);
      if (v61 >= v60 >> 1)
      {
        v57 = sub_247C0AC28((char *)(v60 > 1), v61 + 1, 1, v57);
        *((_QWORD *)v56 + 2) = v57;
      }
      *((_QWORD *)v57 + 2) = v61 + 1;
      v62 = &v57[80 * v61];
      v63 = v90;
      *((_QWORD *)v62 + 4) = v48;
      *((_QWORD *)v62 + 5) = v63;
      *((_QWORD *)v62 + 6) = MEMORY[0x24BEE4AF8];
      *((_QWORD *)v62 + 7) = v55;
      *((_QWORD *)v62 + 8) = &protocol witness table for Expression<A>;
      *((_QWORD *)v62 + 9) = v52;
      v64 = MEMORY[0x24BEE0D00];
      *((_QWORD *)v62 + 10) = v54;
      *((_QWORD *)v62 + 12) = v64;
      *((_QWORD *)v62 + 13) = &protocol witness table for String;
      return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v87, v59);
    }
  }
  else
  {
    v43(v12, 1, 1, v13);
    v45 = v41;
  }
  sub_247C324B0((uint64_t)v12);
  sub_247C3D660();
  swift_allocObject();
  sub_247C3D654();
  v65 = v45;
  v66 = sub_247C3D648();
  v68 = v67;
  result = swift_release();
  v69 = v85;
  if (!v65)
  {
    sub_247C3D7D4();
    v90 = v66;
    v70 = sub_247C3D7C8();
    v88 = v71;
    v89 = v70;
    v72 = v69[2];
    v73 = sub_247C3DBAC();
    sub_247BFD20C(0, 0xE000000000000000, v73, v74, 34, 0xE100000000000000);
    v92 = 0;
    *(_QWORD *)&v91[0] = 0;
    *((_QWORD *)&v91[0] + 1) = 0xE000000000000000;
    sub_247C3D780();
    v75 = v72;
    sub_247C3D840();
    swift_bridgeObjectRelease();
    sub_247C3D780();
    swift_bridgeObjectRelease();
    sub_247C2C29C(*(uint64_t *)&v91[0], *((uint64_t *)&v91[0] + 1), MEMORY[0x24BEE4AF8], v89, v88, v91);
    v76 = *(char **)(v72 + 16);
    v77 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v72 + 16) = v76;
    if ((v77 & 1) == 0)
    {
      v76 = sub_247C0AC28(0, *((_QWORD *)v76 + 2) + 1, 1, v76);
      *(_QWORD *)(v72 + 16) = v76;
    }
    v79 = *((_QWORD *)v76 + 2);
    v78 = *((_QWORD *)v76 + 3);
    v80 = v90;
    if (v79 >= v78 >> 1)
    {
      v76 = sub_247C0AC28((char *)(v78 > 1), v79 + 1, 1, v76);
      *(_QWORD *)(v75 + 16) = v76;
    }
    *((_QWORD *)v76 + 2) = v79 + 1;
    v81 = &v76[80 * v79];
    *((_OWORD *)v81 + 2) = v91[0];
    v82 = v91[1];
    v83 = v91[2];
    v84 = v91[4];
    *((_OWORD *)v81 + 5) = v91[3];
    *((_OWORD *)v81 + 6) = v84;
    *((_OWORD *)v81 + 3) = v82;
    *((_OWORD *)v81 + 4) = v83;
    return sub_247BFA1E4(v80, v68);
  }
  return result;
}

double sub_247C2DC2C(uint64_t a1, uint64_t a2)
{
  return sub_247C2DC58(a1, a2, &qword_2576ED5A0, MEMORY[0x24BEE4008], (uint64_t)&protocol witness table for Int64);
}

double sub_247C2DC58(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;
  double result;
  __int128 v20;

  v7 = *(_QWORD *)(v5 + 16);
  v8 = sub_247C3DBAC();
  sub_247BFD20C(0, 0xE000000000000000, v8, v9, 34, 0xE100000000000000);
  *(_QWORD *)&v20 = 0;
  *((_QWORD *)&v20 + 1) = 0xE000000000000000;
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  swift_bridgeObjectRelease();
  v10 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = *(char **)(v7 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v7 + 16) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v11 = sub_247C0AC28(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    *(_QWORD *)(v7 + 16) = v11;
  }
  v14 = *((_QWORD *)v11 + 2);
  v13 = *((_QWORD *)v11 + 3);
  if (v14 >= v13 >> 1)
  {
    v11 = sub_247C0AC28((char *)(v13 > 1), v14 + 1, 1, v11);
    *(_QWORD *)(v7 + 16) = v11;
  }
  *((_QWORD *)v11 + 2) = v14 + 1;
  v15 = &v11[80 * v14];
  v16 = MEMORY[0x24BEE4AF8];
  *((_QWORD *)v15 + 4) = v20;
  *((_QWORD *)v15 + 5) = 0xE000000000000000;
  *((_QWORD *)v15 + 6) = v16;
  *((_QWORD *)v15 + 7) = v10;
  *((_QWORD *)v15 + 8) = &protocol witness table for Expression<A>;
  *((_QWORD *)v15 + 9) = a1;
  result = *(double *)&v20;
  *((_OWORD *)v15 + 5) = v20;
  *((_QWORD *)v15 + 12) = a4;
  *((_QWORD *)v15 + 13) = a5;
  return result;
}

void sub_247C2DE10()
{
  sub_247C3DA68();
  __break(1u);
}

void sub_247C2DE68()
{
  sub_247C3DA68();
  __break(1u);
}

uint64_t sub_247C2DEC0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_247C2DEEC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_247C2DEF8()
{
  return sub_247C2CB04();
}

double sub_247C2DF18(char a1)
{
  double result;

  *(_QWORD *)&result = sub_247C2CD14(a1).n128_u64[0];
  return result;
}

uint64_t sub_247C2DF38(uint64_t a1, uint64_t a2)
{
  return sub_247C2D270(a1, a2);
}

double sub_247C2DF58(double a1)
{
  return sub_247C2D0AC(a1);
}

double sub_247C2DF78(float a1)
{
  return sub_247C2CEE4(a1);
}

double sub_247C2DF98(uint64_t a1, uint64_t a2)
{
  return sub_247C2CCE8(a1, a2);
}

uint64_t sub_247C2DFB8(char a1)
{
  return sub_247C31EC4(a1, MEMORY[0x24BEE3E50]);
}

uint64_t sub_247C2DFF8(__int16 a1)
{
  return sub_247C31F90(a1, MEMORY[0x24BEE3F30]);
}

uint64_t sub_247C2E038(int a1)
{
  return sub_247C3205C(a1, MEMORY[0x24BEE3F88]);
}

double sub_247C2E078(uint64_t a1, uint64_t a2)
{
  return sub_247C2DC2C(a1, a2);
}

uint64_t sub_247C2E098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_247C2E210(a1, a2, a3, a4, a5, MEMORY[0x24BEE3D10]);
}

uint64_t sub_247C2E0B4(uint64_t a1)
{
  return sub_247C32128(a1, MEMORY[0x24BEE1E88]);
}

uint64_t sub_247C2E0F4(char a1)
{
  return sub_247C31EC4(a1, MEMORY[0x24BEE4260]);
}

uint64_t sub_247C2E134(__int16 a1)
{
  return sub_247C31F90(a1, MEMORY[0x24BEE4478]);
}

uint64_t sub_247C2E174(int a1)
{
  return sub_247C3205C(a1, MEMORY[0x24BEE44F0]);
}

uint64_t sub_247C2E1B4(uint64_t a1)
{
  return sub_247C32128(a1, MEMORY[0x24BEE4568]);
}

uint64_t sub_247C2E1F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_247C2E210(a1, a2, a3, a4, a5, MEMORY[0x24BEE3D18]);
}

uint64_t sub_247C2E210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;

  v11 = type metadata accessor for SQLiteEncoder.SQLiteKeyedEncodingContainer(0, *(_QWORD *)(a4 + 80), *(_QWORD *)(a4 + 88), a4);
  return a6(a1, a2, a3, v11, a5);
}

uint64_t sub_247C2E278(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_247C2D430(a1, a2, a3, a4);
}

uint64_t sub_247C2E298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for SQLiteEncoder.SQLiteKeyedEncodingContainer(0, *(_QWORD *)(a5 + 80), *(_QWORD *)(a5 + 88), a4);
  return sub_247C3DB28();
}

uint64_t sub_247C2E304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for SQLiteEncoder.SQLiteKeyedEncodingContainer(0, *(_QWORD *)(a3 + 80), *(_QWORD *)(a3 + 88), a4);
  return sub_247C3DB10();
}

uint64_t sub_247C2E358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for SQLiteEncoder.SQLiteKeyedEncodingContainer(0, *(_QWORD *)(a4 + 80), *(_QWORD *)(a4 + 88), a4);
  return sub_247C3DB04();
}

uint64_t sub_247C2E3BC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_247C2E650(a1, a2, a3, a4, a5, MEMORY[0x24BEE3C90]);
}

uint64_t sub_247C2E3D8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C2E5CC(a1, a2, a3, a4, MEMORY[0x24BEE3C98]);
}

uint64_t sub_247C2E3F4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_247C2E650(a1, a2, a3, a4, a5, MEMORY[0x24BEE3CA0]);
}

uint64_t sub_247C2E410(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C2E4D4(a1, a2, a3, a4, MEMORY[0x24BEE3CB8]);
}

uint64_t sub_247C2E42C(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C2E550(a1, a2, a3, a4, MEMORY[0x24BEE3CC0]);
}

uint64_t sub_247C2E448(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C2E5CC(a1, a2, a3, a4, MEMORY[0x24BEE3CC8]);
}

uint64_t sub_247C2E464(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_247C2E650(a1, a2, a3, a4, a5, MEMORY[0x24BEE3CD0]);
}

uint64_t sub_247C2E480(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_247C2E6D8(a1, a2, a3, a4, a5, a6, MEMORY[0x24BEE3CE0]);
}

uint64_t sub_247C2E49C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_247C2E650(a1, a2, a3, a4, a5, MEMORY[0x24BEE3CA8]);
}

uint64_t sub_247C2E4B8(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C2E4D4(a1, a2, a3, a4, MEMORY[0x24BEE3CD8]);
}

uint64_t sub_247C2E4D4(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;

  v9 = type metadata accessor for SQLiteEncoder.SQLiteKeyedEncodingContainer(0, *(_QWORD *)(a3 + 80), *(_QWORD *)(a3 + 88), a4);
  return a5(a1 & 0x1FF, a2, v9, a4);
}

uint64_t sub_247C2E534(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C2E550(a1, a2, a3, a4, MEMORY[0x24BEE3CE8]);
}

uint64_t sub_247C2E550(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;

  v9 = type metadata accessor for SQLiteEncoder.SQLiteKeyedEncodingContainer(0, *(_QWORD *)(a3 + 80), *(_QWORD *)(a3 + 88), a4);
  return a5(a1 & 0x1FFFF, a2, v9, a4);
}

uint64_t sub_247C2E5B0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C2E5CC(a1, a2, a3, a4, MEMORY[0x24BEE3CF0]);
}

uint64_t sub_247C2E5CC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;

  v9 = type metadata accessor for SQLiteEncoder.SQLiteKeyedEncodingContainer(0, *(_QWORD *)(a3 + 80), *(_QWORD *)(a3 + 88), a4);
  return a5(a1 | ((HIDWORD(a1) & 1) << 32), a2, v9, a4);
}

uint64_t sub_247C2E634(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_247C2E650(a1, a2, a3, a4, a5, MEMORY[0x24BEE3CF8]);
}

uint64_t sub_247C2E650(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;

  v10 = a2 & 1;
  v11 = type metadata accessor for SQLiteEncoder.SQLiteKeyedEncodingContainer(0, *(_QWORD *)(a4 + 80), *(_QWORD *)(a4 + 88), a4);
  return a6(a1, v10, a3, v11, a5);
}

uint64_t sub_247C2E6BC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_247C2E6D8(a1, a2, a3, a4, a5, a6, MEMORY[0x24BEE3D00]);
}

uint64_t sub_247C2E6D8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v12;
  uint64_t v13;

  v12 = a3 & 1;
  v13 = type metadata accessor for SQLiteEncoder.SQLiteKeyedEncodingContainer(0, *(_QWORD *)(a5 + 80), *(_QWORD *)(a5 + 88), a4);
  return a7(a1, a2, v12, a4, v13, a6);
}

uint64_t sub_247C2E754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for SQLiteEncoder.SQLiteKeyedEncodingContainer(0, *(_QWORD *)(a5 + 80), *(_QWORD *)(a5 + 88), a4);
  return sub_247C3DB1C();
}

void sub_247C2E7C0()
{
  sub_247C2DE10();
}

void sub_247C2E7E0()
{
  sub_247C2DE68();
}

void sub_247C2E800()
{
  sub_247C2CA54();
}

void sub_247C2E820()
{
  sub_247C2CAAC();
}

uint64_t sub_247C2E840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = type metadata accessor for SQLiteEncoder.SQLiteKeyedEncodingContainer(0, a2, a3, a4);
  v6 = swift_allocObject();
  v7 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v7;
  swift_retain();
  MEMORY[0x24958EDF4](&unk_247C3EF40, v5);
  return sub_247C3DAB0();
}

uint64_t sub_247C2E8C8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_247C2E8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C2E840(a1, a2, a3, a4);
}

void sub_247C2E91C()
{
  sub_247C3DA68();
  __break(1u);
}

void sub_247C2E97C()
{
  sub_247C3DA68();
  __break(1u);
}

__n128 sub_247C2E9DC(__n128 *a1)
{
  uint64_t v2;
  __n128 result;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = MEMORY[0x24BEE4AF8];
  result = *a1;
  *(__n128 *)(v2 + 24) = *a1;
  return result;
}

uint64_t sub_247C2EA1C()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED590);
  sub_247C32550();
  v0 = sub_247C3D8AC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_247C2EAAC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0 = sub_247C3DBAC();
  v2 = sub_247C337B8(v0, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

BOOL sub_247C2EB3C()
{
  return (sub_247C2EAAC() & 1) == 0;
}

uint64_t sub_247C2EB68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;

  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = sub_247C3DBAC();
  sub_247BFD20C(0, 0xE000000000000000, v4, v5, 34, 0xE100000000000000);
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v6 = sub_247C2FE58(0, 0xE000000000000000, MEMORY[0x24BEE4AF8], v2, v3);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v7 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v7 != 2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = v7 & 1;
      return v9 & 1;
    }
    sub_247C322C4();
    swift_allocError();
    *(_QWORD *)v8 = 0;
    *(_QWORD *)(v8 + 8) = 0xE000000000000000;
    *(_QWORD *)(v8 + 16) = 0;
    *(_BYTE *)(v8 + 24) = 3;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_247C2ED8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_254455210);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C305A8(a1, a2, a3, a4, v13);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v5)
  {
    v15 = sub_247C3D6CC();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1)
    {
      sub_247C324B0((uint64_t)v13);
      sub_247C322C4();
      swift_allocError();
      *(_QWORD *)v17 = a1;
      *(_QWORD *)(v17 + 8) = a2;
      *(_QWORD *)(v17 + 16) = 0;
      *(_BYTE *)(v17 + 24) = 3;
      swift_bridgeObjectRetain();
      return swift_willThrow();
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a5, v13, v15);
    }
  }
  return result;
}

uint64_t sub_247C2EEEC()
{
  return sub_247C2EF00();
}

uint64_t sub_247C2EF00()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = sub_247C3DBAC();
  sub_247BFD20C(0, 0xE000000000000000, v4, v5, 34, 0xE100000000000000);
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v7 = sub_247C30074(0, 0xE000000000000000, MEMORY[0x24BEE4AF8], v2, v3);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v8 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
      sub_247C322C4();
      swift_allocError();
      *(_QWORD *)v9 = 0;
      *(_QWORD *)(v9 + 8) = 0xE000000000000000;
      *(_QWORD *)(v9 + 16) = 0;
      *(_BYTE *)(v9 + 24) = 3;
      swift_bridgeObjectRetain();
      swift_willThrow();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_247C2F0FC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = sub_247C3DBAC();
  sub_247BFD20C(0, 0xE000000000000000, v4, v5, 34, 0xE100000000000000);
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_247C30074(0, 0xE000000000000000, MEMORY[0x24BEE4AF8], v2, v3);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v7 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    sub_247C322C4();
    swift_allocError();
    *(_QWORD *)v9 = 0;
    *(_QWORD *)(v9 + 8) = 0xE000000000000000;
    *(_QWORD *)(v9 + 16) = 0;
    *(_BYTE *)(v9 + 24) = 3;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C2F324()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = sub_247C3DBAC();
  sub_247BFD20C(0, 0xE000000000000000, v4, v5, 34, 0xE100000000000000);
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_247C30074(0, 0xE000000000000000, MEMORY[0x24BEE4AF8], v2, v3);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v7 = v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    sub_247C322C4();
    swift_allocError();
    *(_QWORD *)v9 = 0;
    *(_QWORD *)(v9 + 8) = 0xE000000000000000;
    *(_QWORD *)(v9 + 16) = 0;
    *(_BYTE *)(v9 + 24) = 3;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C2F548()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = sub_247C3DBAC();
  sub_247BFD20C(0, 0xE000000000000000, v4, v5, 34, 0xE100000000000000);
  v7 = v6;
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v8 = sub_247C30314(0, 0xE000000000000000, MEMORY[0x24BEE4AF8], v2, v3);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v7 = v8;
    v10 = v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v10)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7;
    }
    sub_247C322C4();
    swift_allocError();
    *(_QWORD *)v12 = 0;
    *(_QWORD *)(v12 + 8) = 0xE000000000000000;
    *(_QWORD *)(v12 + 16) = 0;
    *(_BYTE *)(v12 + 24) = 3;
    swift_bridgeObjectRetain();
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_247C2F768@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  unsigned int *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;

  v8 = sub_247C3D7E0();
  v49 = *(_QWORD *)(v8 - 8);
  v50 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v48 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_247C3D6CC();
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v44 - v15;
  v51 = a3;
  v52 = a1;
  if (v12 == MEMORY[0x24BDCDDE8])
  {
    v23 = *(_QWORD *)(v3 + 24);
    v24 = *(_QWORD *)(v3 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = sub_247C3DBAC();
    sub_247BFD20C(0, 0xE000000000000000, v25, v26, 34, 0xE100000000000000);
    v54 = 0;
    v55 = 0xE000000000000000;
    sub_247C3D780();
    sub_247C3D840();
    swift_bridgeObjectRelease();
    sub_247C3D780();
    swift_bridgeObjectRelease();
    v28 = v54;
    v27 = v55;
    swift_bridgeObjectRetain();
    sub_247C307CC(v28, v27, v23, v24, &v54);
    if (v4)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v40 = v55;
    if (v55 >> 60 == 15)
    {
      sub_247C322C4();
      swift_allocError();
      *(_QWORD *)v41 = v28;
      *(_QWORD *)(v41 + 8) = v27;
      *(_QWORD *)(v41 + 16) = 0;
      *(_BYTE *)(v41 + 24) = 3;
      swift_bridgeObjectRetain();
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    v42 = v54;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v54 = v42;
    v55 = v40;
    return swift_dynamicCast();
  }
  v45 = v14;
  v46 = v13;
  v44 = a2;
  v17 = *(_QWORD *)(v3 + 32);
  v18 = v12;
  v56 = *(_QWORD *)(v3 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = sub_247C3DBAC();
  sub_247BFD20C(0, 0xE000000000000000, v19, v20, 34, 0xE100000000000000);
  v53 = v4;
  v47 = v18;
  if (v10 == v18)
  {
    v54 = 0;
    v55 = 0xE000000000000000;
    sub_247C3D780();
    sub_247C3D840();
    swift_bridgeObjectRelease();
    sub_247C3D780();
    swift_bridgeObjectRelease();
    v30 = v53;
    sub_247C2ED8C(v54, v55, v56, v17, (uint64_t)v16);
    if (v30)
    {
LABEL_8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v45 + 32))(v46, v16, v47);
    return swift_dynamicCast();
  }
  v54 = 0;
  v55 = 0xE000000000000000;
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  swift_bridgeObjectRelease();
  v21 = v53;
  sub_247C30314(v54, v55, MEMORY[0x24BEE4AF8], v56, v17);
  if (v21)
    goto LABEL_8;
  v31 = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v31)
  {
    v36 = sub_247C3DA08();
    swift_allocError();
    v38 = v43;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED580);
    *v38 = v47;
    swift_bridgeObjectRetain();
    sub_247C3D9FC();
    v39 = (unsigned int *)MEMORY[0x24BEE26D0];
    goto LABEL_18;
  }
  v32 = v48;
  sub_247C3D7D4();
  v33 = sub_247C3D7BC();
  v35 = v34;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v50);
  if (v35 >> 60 == 15)
  {
    v36 = sub_247C3DA08();
    swift_allocError();
    v38 = v37;
    swift_bridgeObjectRetain();
    sub_247C3D9FC();
    v39 = (unsigned int *)MEMORY[0x24BEE26D8];
LABEL_18:
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v38, *v39, v36);
    return swift_willThrow();
  }
  sub_247C3D63C();
  swift_allocObject();
  sub_247C3D630();
  sub_247C3D624();
  swift_release();
  return sub_247C322B0(v33, v35);
}

unint64_t sub_247C2FE58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t result;
  uint64_t v24;
  char *v25;

  if (*(_QWORD *)(a4 + 16))
  {
    swift_bridgeObjectRetain();
    v10 = sub_247BFCCBC(a1, a2);
    if ((v11 & 1) != 0)
      goto LABEL_10;
    swift_bridgeObjectRelease();
  }
  v12 = swift_bridgeObjectRetain();
  v13 = sub_247C10A30(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = (_QWORD *)sub_247C32308((uint64_t)v13);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v14[2];
  if (v15 == 1)
  {
    v20 = v14[4];
    v19 = v14[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(a4 + 16) || (v10 = sub_247BFCCBC(v20, v19), (v21 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_15;
    }
LABEL_10:
    v22 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v10);
    swift_bridgeObjectRelease();
    return sub_247C31784(v22, a4, a5);
  }
  if (v15)
  {
    sub_247C322C4();
    swift_allocError();
    *(_QWORD *)v24 = a1;
    *(_QWORD *)(v24 + 8) = a2;
    *(_QWORD *)(v24 + 16) = v14;
    *(_BYTE *)(v24 + 24) = 2;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v16 = (char *)sub_247C10A30(a4);
  swift_bridgeObjectRelease();
  v25 = v16;
  sub_247C3BA2C(&v25);
  if (v5)
  {
LABEL_15:
    result = swift_release();
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  v17 = v25;
  sub_247C322C4();
  swift_allocError();
  *(_QWORD *)v18 = a1;
  *(_QWORD *)(v18 + 8) = a2;
  *(_QWORD *)(v18 + 16) = v17;
  *(_BYTE *)(v18 + 24) = 1;
  return swift_willThrow();
}

uint64_t sub_247C30074(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char *v26[5];

  v7 = a4;
  if (*(_QWORD *)(a4 + 16))
  {
    swift_bridgeObjectRetain();
    v10 = sub_247BFCCBC(a1, a2);
    if ((v11 & 1) != 0)
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v10);
      swift_bridgeObjectRelease();
      if ((v7 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      if (v7 < *(_QWORD *)(a5 + 16))
        goto LABEL_15;
      __break(1u);
    }
    swift_bridgeObjectRelease();
  }
  v12 = swift_bridgeObjectRetain();
  v13 = sub_247C10A30(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = (_QWORD *)sub_247C32308((uint64_t)v13);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v14[2];
  if (v15 != 1)
  {
    if (v15)
    {
      sub_247C322C4();
      swift_allocError();
      *(_QWORD *)v24 = a1;
      *(_QWORD *)(v24 + 8) = a2;
      *(_QWORD *)(v24 + 16) = v14;
      *(_BYTE *)(v24 + 24) = 2;
      swift_bridgeObjectRetain();
      return swift_willThrow();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v16 = (char *)sub_247C10A30(v7);
    swift_bridgeObjectRelease();
    v26[0] = v16;
    sub_247C3BA2C(v26);
    if (!v5)
    {
      swift_bridgeObjectRelease();
      v17 = v26[0];
      sub_247C322C4();
      swift_allocError();
      *(_QWORD *)v18 = a1;
      *(_QWORD *)(v18 + 8) = a2;
      *(_QWORD *)(v18 + 16) = v17;
      *(_BYTE *)(v18 + 24) = 1;
      return swift_willThrow();
    }
    goto LABEL_24;
  }
  v20 = v14[4];
  v19 = v14[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v7 + 16) || (v21 = sub_247BFCCBC(v20, v19), (v22 & 1) == 0))
  {
LABEL_23:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_24:
    result = swift_release();
    __break(1u);
    return result;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v21);
  swift_bridgeObjectRelease();
  if ((v7 & 0x8000000000000000) != 0)
    goto LABEL_21;
  if (v7 >= *(_QWORD *)(a5 + 16))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_15:
  sub_247C01300(a5 + 40 * v7 + 32, (uint64_t)v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
  if (swift_dynamicCast())
    return v25;
  else
    return 0;
}

uint64_t sub_247C30314(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  char *v26[5];

  v7 = a4;
  if (*(_QWORD *)(a4 + 16))
  {
    swift_bridgeObjectRetain();
    v10 = sub_247BFCCBC(a1, a2);
    if ((v11 & 1) != 0)
    {
      v7 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v10);
      swift_bridgeObjectRelease();
      if ((v7 & 0x8000000000000000) != 0)
      {
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      if (v7 < *(_QWORD *)(a5 + 16))
        goto LABEL_15;
      __break(1u);
    }
    swift_bridgeObjectRelease();
  }
  v12 = swift_bridgeObjectRetain();
  v13 = sub_247C10A30(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = (_QWORD *)sub_247C32308((uint64_t)v13);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v14[2];
  if (v15 != 1)
  {
    if (v15)
    {
      sub_247C322C4();
      swift_allocError();
      *(_QWORD *)v24 = a1;
      *(_QWORD *)(v24 + 8) = a2;
      *(_QWORD *)(v24 + 16) = v14;
      *(_BYTE *)(v24 + 24) = 2;
      swift_bridgeObjectRetain();
      return swift_willThrow();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v16 = (char *)sub_247C10A30(v7);
    swift_bridgeObjectRelease();
    v26[0] = v16;
    sub_247C3BA2C(v26);
    if (!v5)
    {
      swift_bridgeObjectRelease();
      v17 = v26[0];
      sub_247C322C4();
      swift_allocError();
      *(_QWORD *)v18 = a1;
      *(_QWORD *)(v18 + 8) = a2;
      *(_QWORD *)(v18 + 16) = v17;
      *(_BYTE *)(v18 + 24) = 1;
      return swift_willThrow();
    }
    goto LABEL_24;
  }
  v20 = v14[4];
  v19 = v14[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v7 + 16) || (v21 = sub_247BFCCBC(v20, v19), (v22 & 1) == 0))
  {
LABEL_23:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_24:
    result = swift_release();
    __break(1u);
    return result;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v21);
  swift_bridgeObjectRelease();
  if ((v7 & 0x8000000000000000) != 0)
    goto LABEL_21;
  if (v7 >= *(_QWORD *)(a5 + 16))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
LABEL_15:
  sub_247C01300(a5 + 40 * v7 + 32, (uint64_t)v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
  if (swift_dynamicCast())
    return v25;
  else
    return 0;
}

uint64_t sub_247C305A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, char *a5@<X8>)
{
  uint64_t v5;
  unint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t result;
  uint64_t v25;
  char *v26;

  if (*(_QWORD *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    v11 = sub_247BFCCBC(a1, a2);
    if ((v12 & 1) != 0)
      goto LABEL_10;
    swift_bridgeObjectRelease();
  }
  v13 = swift_bridgeObjectRetain();
  v14 = sub_247C10A30(v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = (_QWORD *)sub_247C32308((uint64_t)v14);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = v15[2];
  if (v16 == 1)
  {
    v21 = v15[4];
    v20 = v15[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(a3 + 16) || (v11 = sub_247BFCCBC(v21, v20), (v22 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_14;
    }
LABEL_10:
    v23 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v11);
    swift_bridgeObjectRelease();
    return sub_247C31808(v23, a4, a5);
  }
  if (v16)
  {
    sub_247C322C4();
    swift_allocError();
    *(_QWORD *)v25 = a1;
    *(_QWORD *)(v25 + 8) = a2;
    *(_QWORD *)(v25 + 16) = v15;
    *(_BYTE *)(v25 + 24) = 2;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v17 = (char *)sub_247C10A30(a3);
  swift_bridgeObjectRelease();
  v26 = v17;
  sub_247C3BA2C(&v26);
  if (!v5)
  {
    swift_bridgeObjectRelease();
    v18 = v26;
    sub_247C322C4();
    swift_allocError();
    *(_QWORD *)v19 = a1;
    *(_QWORD *)(v19 + 8) = a2;
    *(_QWORD *)(v19 + 16) = v18;
    *(_BYTE *)(v19 + 24) = 1;
    return swift_willThrow();
  }
LABEL_14:
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_247C307CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  unint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  unint64_t result;
  uint64_t v25;
  char *v26;

  if (*(_QWORD *)(a3 + 16))
  {
    swift_bridgeObjectRetain();
    v11 = sub_247BFCCBC(a1, a2);
    if ((v12 & 1) != 0)
      goto LABEL_10;
    swift_bridgeObjectRelease();
  }
  v13 = swift_bridgeObjectRetain();
  v14 = sub_247C10A30(v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = (_QWORD *)sub_247C32308((uint64_t)v14);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = v15[2];
  if (v16 == 1)
  {
    v21 = v15[4];
    v20 = v15[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(a3 + 16) || (v11 = sub_247BFCCBC(v21, v20), (v22 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_14;
    }
LABEL_10:
    v23 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v11);
    swift_bridgeObjectRelease();
    return sub_247C31A68(v23, a4, a5);
  }
  if (v16)
  {
    sub_247C322C4();
    swift_allocError();
    *(_QWORD *)v25 = a1;
    *(_QWORD *)(v25 + 8) = a2;
    *(_QWORD *)(v25 + 16) = v15;
    *(_BYTE *)(v25 + 24) = 2;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v17 = (char *)sub_247C10A30(a3);
  swift_bridgeObjectRelease();
  v26 = v17;
  sub_247C3BA2C(&v26);
  if (!v5)
  {
    swift_bridgeObjectRelease();
    v18 = v26;
    sub_247C322C4();
    swift_allocError();
    *(_QWORD *)v19 = a1;
    *(_QWORD *)(v19 + 8) = a2;
    *(_QWORD *)(v19 + 16) = v18;
    *(_BYTE *)(v19 + 24) = 1;
    return swift_willThrow();
  }
LABEL_14:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_247C309F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_247C3DA08();
  swift_allocError();
  v2 = v1;
  swift_bridgeObjectRetain();
  sub_247C3D9FC();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v2, *MEMORY[0x24BEE26D8], v0);
  return swift_willThrow();
}

uint64_t sub_247C30A90()
{
  return sub_247C30B88();
}

uint64_t sub_247C30ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_247C3DA08();
  swift_allocError();
  v2 = v1;
  swift_bridgeObjectRetain();
  sub_247C3D9FC();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v2, *MEMORY[0x24BEE26D8], v0);
  return swift_willThrow();
}

uint64_t sub_247C30B5C()
{
  return sub_247C30B88();
}

uint64_t sub_247C30B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_247C3DA08();
  swift_allocError();
  v2 = v1;
  swift_bridgeObjectRetain();
  sub_247C3D9FC();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v2, *MEMORY[0x24BEE26D8], v0);
  return swift_willThrow();
}

uint64_t sub_247C30C28()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_247C30C5C()
{
  sub_247C30C28();
  return swift_deallocClassInstance();
}

uint64_t sub_247C30C78()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_247C30C84()
{
  return sub_247C2EA1C();
}

uint64_t sub_247C30CA4()
{
  return sub_247C2EAAC() & 1;
}

BOOL sub_247C30CC8()
{
  return sub_247C2EB3C();
}

uint64_t sub_247C30CEC()
{
  return sub_247C2EB68() & 1;
}

uint64_t sub_247C30D10()
{
  return sub_247C2F548();
}

uint64_t sub_247C30D30()
{
  return sub_247C2F324();
}

uint64_t sub_247C30D50()
{
  return sub_247C2F0FC();
}

uint64_t sub_247C30D70()
{
  return sub_247C2EEEC();
}

uint64_t sub_247C30D90()
{
  return sub_247C321F4(MEMORY[0x24BEE3E50]);
}

uint64_t sub_247C30DD0()
{
  return sub_247C321F4(MEMORY[0x24BEE3F30]);
}

uint64_t sub_247C30E10()
{
  return sub_247C321F4(MEMORY[0x24BEE3F88]);
}

uint64_t sub_247C30E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C30FC8(a1, a2, a3, MEMORY[0x24BEE3C70]);
}

uint64_t sub_247C30E6C()
{
  return sub_247C321F4(MEMORY[0x24BEE1E88]);
}

uint64_t sub_247C30EAC()
{
  return sub_247C321F4(MEMORY[0x24BEE4260]);
}

uint64_t sub_247C30EEC()
{
  return sub_247C321F4(MEMORY[0x24BEE4478]);
}

uint64_t sub_247C30F2C()
{
  return sub_247C321F4(MEMORY[0x24BEE44F0]);
}

uint64_t sub_247C30F6C()
{
  return sub_247C321F4(MEMORY[0x24BEE4568]);
}

uint64_t sub_247C30FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C30FC8(a1, a2, a3, MEMORY[0x24BEE3C78]);
}

uint64_t sub_247C30FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;

  v7 = type metadata accessor for SQLiteDecoder.SQLiteKeyedDecodingContainer(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), (uint64_t)a4);
  return a4(a1, v7, a3);
}

uint64_t sub_247C3101C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_247C2F768(a1, a2, a3);
}

uint64_t sub_247C3103C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for SQLiteDecoder.SQLiteKeyedDecodingContainer(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), a4);
  return sub_247C3DAEC();
}

uint64_t sub_247C3108C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for SQLiteDecoder.SQLiteKeyedDecodingContainer(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), a4);
  return sub_247C3DAE0();
}

uint64_t sub_247C310DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C31388(a1, a2, a3, MEMORY[0x24BEE3BF8]);
}

uint64_t sub_247C310F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C312FC(a1, a2, a3, MEMORY[0x24BEE3C00]);
}

uint64_t sub_247C31114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C31388(a1, a2, a3, MEMORY[0x24BEE3C08]);
}

uint64_t sub_247C31130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C311F4(a1, a2, a3, MEMORY[0x24BEE3C20]);
}

uint64_t sub_247C3114C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C31278(a1, a2, a3, MEMORY[0x24BEE3C28]);
}

uint64_t sub_247C31168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C312FC(a1, a2, a3, MEMORY[0x24BEE3C30]);
}

uint64_t sub_247C31184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C31388(a1, a2, a3, MEMORY[0x24BEE3C38]);
}

uint64_t sub_247C311A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C31404(a1, a2, a3, MEMORY[0x24BEE3C48]);
}

uint64_t sub_247C311BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C31388(a1, a2, a3, MEMORY[0x24BEE3C10]);
}

uint64_t sub_247C311D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C311F4(a1, a2, a3, MEMORY[0x24BEE3C40]);
}

uint64_t sub_247C311F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;

  v7 = type metadata accessor for SQLiteDecoder.SQLiteKeyedDecodingContainer(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), (uint64_t)a4);
  return a4(a1, v7, a3) & 0x1FF;
}

uint64_t sub_247C3125C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C31278(a1, a2, a3, MEMORY[0x24BEE3C50]);
}

uint64_t sub_247C31278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;

  v7 = type metadata accessor for SQLiteDecoder.SQLiteKeyedDecodingContainer(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), (uint64_t)a4);
  return a4(a1, v7, a3) & 0x1FFFF;
}

uint64_t sub_247C312E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C312FC(a1, a2, a3, MEMORY[0x24BEE3C58]);
}

uint64_t sub_247C312FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;

  v7 = type metadata accessor for SQLiteDecoder.SQLiteKeyedDecodingContainer(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), (uint64_t)a4);
  v8 = a4(a1, v7, a3);
  return v8 | ((HIDWORD(v8) & 1) << 32);
}

uint64_t sub_247C3136C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C31388(a1, a2, a3, MEMORY[0x24BEE3C60]);
}

uint64_t sub_247C31388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v8 = type metadata accessor for SQLiteDecoder.SQLiteKeyedDecodingContainer(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), (uint64_t)a4);
  result = a4(a1, v8, a3);
  if (v4)
    return v10;
  return result;
}

uint64_t sub_247C313E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C31404(a1, a2, a3, MEMORY[0x24BEE3C68]);
}

uint64_t sub_247C31404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v8 = type metadata accessor for SQLiteDecoder.SQLiteKeyedDecodingContainer(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), (uint64_t)a4);
  result = a4(a1, v8, a3);
  if (v4)
    return v10;
  return result;
}

uint64_t sub_247C31468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for SQLiteDecoder.SQLiteKeyedDecodingContainer(0, *(_QWORD *)(a5 + 80), *(_QWORD *)(a5 + 88), a4);
  return sub_247C3DAF8();
}

uint64_t sub_247C314E4()
{
  return sub_247C309F0();
}

uint64_t sub_247C31504()
{
  return sub_247C30A90();
}

uint64_t sub_247C31524()
{
  return sub_247C30ABC();
}

uint64_t sub_247C31544()
{
  return sub_247C30B5C();
}

uint64_t sub_247C31564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v5 = type metadata accessor for SQLiteDecoder.SQLiteKeyedDecodingContainer(0, a2, a3, a4);
  v7 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = MEMORY[0x24BEE4AF8];
  v8[3] = v7;
  v8[4] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x24958EDF4](&unk_247C3EDC0, v5);
  return sub_247C3DAA4();
}

uint64_t sub_247C3160C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_247C31650()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_247C3165C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_247C31668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C31564(a1, a2, a3, a4);
}

uint64_t sub_247C31688()
{
  return sub_247C316E0();
}

uint64_t sub_247C316B4()
{
  return sub_247C316E0();
}

uint64_t sub_247C316E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_247C3DA08();
  swift_allocError();
  v2 = v1;
  swift_bridgeObjectRetain();
  sub_247C3D9FC();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v2, *MEMORY[0x24BEE26D8], v0);
  return swift_willThrow();
}

unint64_t sub_247C31784(unint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _BYTE v4[40];

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (*(_QWORD *)(a3 + 16) <= result)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  sub_247C01300(a3 + 40 * result + 32, (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
  if (swift_dynamicCast())
    return v3 != 0;
  else
    return 2;
}

uint64_t sub_247C31808@<X0>(unint64_t a1@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  void (*v16)(char *, char *, uint64_t);
  void (*v17)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t result;
  _BYTE v20[40];

  v6 = sub_247C3D6CC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_254455210);
  MEMORY[0x24BDAC7A8](v10);
  v12 = v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (*(_QWORD *)(a2 + 16) <= a1)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_5;
  }
  sub_247C01300(a2 + 40 * a1 + 32, (uint64_t)v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
  if (!swift_dynamicCast())
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  if (qword_2544552F8 != -1)
    goto LABEL_11;
LABEL_5:
  swift_beginAccess();
  v13 = (id)qword_254455318;
  v14 = (void *)sub_247C3D7A4();
  v15 = objc_msgSend(v13, sel_dateFromString_, v14);

  if (v15)
  {
    sub_247C3D6C0();

    v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v16(v12, v9, v6);
    v17 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56);
    v17(v12, 0, 1, v6);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6);
    if ((_DWORD)result != 1)
    {
      v16(a3, v12, v6);
      swift_bridgeObjectRelease();
      return ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v17)(a3, 0, 1, v6);
    }
  }
  else
  {
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 1, v6);
  }
  __break(1u);
  return result;
}

unint64_t sub_247C31A68@<X0>(unint64_t result@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _BYTE v8[40];

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (*(_QWORD *)(a2 + 16) <= result)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  sub_247C01300(a2 + 40 * result + 32, (uint64_t)v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    v4 = sub_247BFD3D4(v7);
    v6 = v5;
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
    v6 = 0xF000000000000000;
  }
  *a3 = v4;
  a3[1] = v6;
  return result;
}

char *sub_247C31B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  char *result;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  char *v19;
  int64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int64_t v28;
  _QWORD v29[5];
  _QWORD *v30;

  v4 = v3;
  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (!v5)
    return (char *)MEMORY[0x24BEE4AF8];
  v30 = (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_247C12A80(0, v5, 0);
  v9 = (_QWORD *)(a1 + 32);
  v26 = type metadata accessor for SQLiteEncoder();
  while (1)
  {
    v28 = v5;
    v10 = a3;
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = v6;
    v11[3] = v6;
    v11[4] = a2;
    v12 = __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    v29[3] = v26;
    v29[4] = sub_247C31DF0(&qword_2576ED468, (uint64_t (*)(uint64_t))type metadata accessor for SQLiteEncoder, (uint64_t)&unk_247C3F100);
    v29[0] = v11;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_247C3D774();
    if (v4)
    {
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
      swift_release();
      return (char *)v12;
    }
    result = (char *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    v14 = v11[2];
    v15 = *(_QWORD *)(a3 + 16);
    v16 = *(_QWORD *)(v14 + 16);
    v17 = v16 + v15;
    if (__OFADD__(v16, v15))
      break;
    swift_bridgeObjectRetain_n();
    v18 = v10;
    swift_bridgeObjectRetain();
    result = (char *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)result && (v19 = (char *)v14, v17 <= *(_QWORD *)(v14 + 24) >> 1))
    {
      a3 = v18;
      if (!v15)
        goto LABEL_16;
    }
    else
    {
      if (v16 <= v17)
        v20 = v16 + v15;
      else
        v20 = v16;
      result = sub_247C0AC28(result, v20, 1, (char *)v14);
      v19 = result;
      a3 = v18;
      if (!v15)
        goto LABEL_16;
    }
    if ((*((_QWORD *)v19 + 3) >> 1) - *((_QWORD *)v19 + 2) < v15)
      goto LABEL_26;
    result = (char *)swift_arrayInitWithCopy();
    v21 = *((_QWORD *)v19 + 2);
    v22 = __OFADD__(v21, v15);
    v23 = v21 + v15;
    if (v22)
      goto LABEL_27;
    *((_QWORD *)v19 + 2) = v23;
LABEL_16:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v12 = v30;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_247C12A80(0, v12[2] + 1, 1);
      v12 = v30;
    }
    v25 = v12[2];
    v24 = v12[3];
    if (v25 >= v24 >> 1)
    {
      sub_247C12A80((_QWORD *)(v24 > 1), v25 + 1, 1);
      v12 = v30;
    }
    v12[2] = v25 + 1;
    v12[v25 + 4] = v19;
    v9 += 5;
    --v5;
    v4 = 0;
    v6 = MEMORY[0x24BEE4AF8];
    if (v28 == 1)
      return (char *)v12;
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SQLiteDecoder()
{
  return objc_opt_self();
}

uint64_t sub_247C31DF0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24958EDF4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_247C31E34()
{
  return sub_247C31E74();
}

uint64_t type metadata accessor for SQLiteEncoder.SQLiteKeyedEncodingContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SQLiteEncoder.SQLiteKeyedEncodingContainer);
}

uint64_t sub_247C31E5C()
{
  return sub_247C31E74();
}

uint64_t sub_247C31E74()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for SQLiteDecoder.SQLiteKeyedDecodingContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SQLiteDecoder.SQLiteKeyedDecodingContainer);
}

uint64_t sub_247C31EBC(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 88);
}

uint64_t sub_247C31EC4(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_247C3DA20();
  swift_allocError();
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED578);
  *(_QWORD *)(v6 + 24) = a2;
  *(_BYTE *)v6 = a1;
  swift_bridgeObjectRetain();
  sub_247C3D9FC();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v6, *MEMORY[0x24BEE2728], v4);
  return swift_willThrow();
}

uint64_t sub_247C31F90(__int16 a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_247C3DA20();
  swift_allocError();
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED578);
  *(_QWORD *)(v6 + 24) = a2;
  *(_WORD *)v6 = a1;
  swift_bridgeObjectRetain();
  sub_247C3D9FC();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v6, *MEMORY[0x24BEE2728], v4);
  return swift_willThrow();
}

uint64_t sub_247C3205C(int a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_247C3DA20();
  swift_allocError();
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED578);
  *(_QWORD *)(v6 + 24) = a2;
  *(_DWORD *)v6 = a1;
  swift_bridgeObjectRetain();
  sub_247C3D9FC();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v6, *MEMORY[0x24BEE2728], v4);
  return swift_willThrow();
}

uint64_t sub_247C32128(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;

  v4 = sub_247C3DA20();
  swift_allocError();
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED578);
  v6[3] = a2;
  *v6 = a1;
  swift_bridgeObjectRetain();
  sub_247C3D9FC();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(v6, *MEMORY[0x24BEE2728], v4);
  return swift_willThrow();
}

uint64_t sub_247C321F4(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v2 = sub_247C3DA08();
  swift_allocError();
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED580);
  *v4 = a1;
  swift_bridgeObjectRetain();
  sub_247C3D9FC();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v4, *MEMORY[0x24BEE26D0], v2);
  return swift_willThrow();
}

uint64_t sub_247C322B0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_247BFA1E4(a1, a2);
  return a1;
}

unint64_t sub_247C322C4()
{
  unint64_t result;

  result = qword_2576ED588;
  if (!qword_2576ED588)
  {
    result = MEMORY[0x24958EDF4](&protocol conformance descriptor for QueryError, &type metadata for QueryError);
    atomic_store(result, (unint64_t *)&qword_2576ED588);
  }
  return result;
}

uint64_t sub_247C32308(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *i;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  v2 = 0;
  v3 = result + 40;
  v4 = -(uint64_t)v1;
  v5 = MEMORY[0x24BEE4AF8];
  v15 = result + 40;
  v16 = *(_QWORD *)(result + 16);
  do
  {
    if (v2 <= v1)
      v6 = v1;
    else
      v6 = v2;
    v7 = -(uint64_t)v6;
    for (i = (uint64_t *)(v3 + 16 * v2++); ; i += 2)
    {
      if (v7 + v2 == 1)
      {
        __break(1u);
        return result;
      }
      v10 = *(i - 1);
      v9 = *i;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_247C3D840();
      swift_bridgeObjectRelease();
      v11 = sub_247C3D870();
      swift_bridgeObjectRelease();
      if ((v11 & 1) != 0)
        break;
      result = swift_bridgeObjectRelease();
      ++v2;
      if (v4 + v2 == 1)
        return v5;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      result = (uint64_t)sub_247C00908(0, *(_QWORD *)(v5 + 16) + 1, 1);
    v13 = *(_QWORD *)(v5 + 16);
    v12 = *(_QWORD *)(v5 + 24);
    if (v13 >= v12 >> 1)
      result = (uint64_t)sub_247C00908((char *)(v12 > 1), v13 + 1, 1);
    *(_QWORD *)(v5 + 16) = v13 + 1;
    v14 = v5 + 16 * v13;
    *(_QWORD *)(v14 + 32) = v10;
    *(_QWORD *)(v14 + 40) = v9;
    v3 = v15;
    v1 = v16;
  }
  while (v4 + v2);
  return v5;
}

uint64_t sub_247C324B0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_254455210);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_247C324F0()
{
  swift_bridgeObjectRetain();
  return sub_247C3DBB8();
}

unint64_t sub_247C32550()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576ED598;
  if (!qword_2576ED598)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2576ED590);
    result = MEMORY[0x24958EDF4](MEMORY[0x24BEE0310], v1);
    atomic_store(result, (unint64_t *)&qword_2576ED598);
  }
  return result;
}

uint64_t sub_247C325A8()
{
  return sub_247C30D70();
}

uint64_t sub_247C325BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  void (*v13)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _OWORD v29[10];
  uint64_t v30;
  _QWORD v31[23];

  v8 = *(_QWORD *)(a2 - 8);
  v9 = MEMORY[0x24BDAC7A8](a1);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v9 & 1) != 0)
    return sub_247BF9730(0, a2, a3, a4);
  v13 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(a3 + 16);
  v13((__int128 *)v31, a2, a3);
  v15 = v31[4];
  v14 = v31[5];
  swift_bridgeObjectRetain();
  sub_247C3C6DC(v31);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v4, a2);
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a2);
  }
  else
  {
    v13(&v18, a2, a3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a2);
    v29[8] = v26;
    v29[9] = v27;
    v30 = v28;
    v29[4] = v22;
    v29[5] = v23;
    v29[6] = v24;
    v29[7] = v25;
    v29[0] = v18;
    v29[1] = v19;
    v29[2] = v20;
    v29[3] = v21;
    v14 = *((_QWORD *)&v19 + 1);
    v15 = v19;
    swift_bridgeObjectRetain();
    sub_247C3C6DC(v29);
  }
  a4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  a4[4] = (uint64_t)&protocol witness table for Expression<A>;
  sub_247BFD20C(0, 0xE000000000000000, v15, v14, 34, 0xE100000000000000);
  *(_QWORD *)&v29[0] = 0;
  *((_QWORD *)&v29[0] + 1) = 0xE000000000000000;
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  result = swift_bridgeObjectRelease();
  v16 = *((_QWORD *)&v29[0] + 1);
  *a4 = *(_QWORD *)&v29[0];
  a4[1] = v16;
  a4[2] = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t sub_247C327F8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_247C00908(0, v1, 0);
    v2 = v16;
    v4 = (uint64_t *)(a1 + 56);
    do
    {
      v5 = *(v4 - 3);
      v6 = *(v4 - 2);
      v7 = *(v4 - 1);
      v8 = *v4;
      swift_bridgeObjectRetain();
      v9 = MEMORY[0x24958E56C](v5, v6, v7, v8);
      v11 = v10;
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v16 + 16);
      v12 = *(_QWORD *)(v16 + 24);
      if (v13 >= v12 >> 1)
        sub_247C00908((char *)(v12 > 1), v13 + 1, 1);
      *(_QWORD *)(v16 + 16) = v13 + 1;
      v14 = v16 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
      v4 += 4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_247C328F4(void (*a1)(_QWORD *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v17[2];
  _QWORD v18[2];
  uint64_t v19;

  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v19 = MEMORY[0x24BEE4AF8];
    sub_247C00908(0, v5, 0);
    v6 = v19;
    v8 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v9 = *v8;
      v17[0] = *(v8 - 1);
      v17[1] = v9;
      swift_bridgeObjectRetain();
      a1(v18, v17);
      if (v4)
        break;
      v4 = 0;
      swift_bridgeObjectRelease();
      v11 = v18[0];
      v10 = v18[1];
      v19 = v6;
      v13 = *(_QWORD *)(v6 + 16);
      v12 = *(_QWORD *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_247C00908((char *)(v12 > 1), v13 + 1, 1);
        v6 = v19;
      }
      v8 += 2;
      *(_QWORD *)(v6 + 16) = v13 + 1;
      v14 = v6 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v11;
      *(_QWORD *)(v14 + 40) = v10;
      if (!--v5)
        return v6;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_247C32A14(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x52454E4E49;
    else
      v3 = 0x54554F205446454CLL;
    if (v2 == 1)
      v4 = 0xE500000000000000;
    else
      v4 = 0xEA00000000005245;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x52454E4E49;
      else
        v6 = 0x54554F205446454CLL;
      if (v5 == 1)
        v7 = 0xE500000000000000;
      else
        v7 = 0xEA00000000005245;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE500000000000000;
    v3 = 0x53534F5243;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE500000000000000;
  if (v3 != 0x53534F5243)
  {
LABEL_21:
    v8 = sub_247C3DAD4();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_247C32B24(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_247C32B80(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_247C32C00 + 4 * byte_247C3F185[a2]))(0x5443495254534552);
}

uint64_t sub_247C32C00(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x5443495254534552 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_247C3DAD4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_247C32CCC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_247C32D1C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_247C32D88 + 4 * byte_247C3F18F[a2]))(0x4B4341424C4C4F52);
}

uint64_t sub_247C32D88(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x4B4341424C4C4F52 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_247C3DAD4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_247C32E3C(char a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  char v7;

  v2 = 0xE900000000000045;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x54414944454D4D49;
    else
      v3 = 0x564953554C435845;
    v4 = 0xE900000000000045;
    v5 = a2;
    if (a2)
    {
LABEL_6:
      if (v5 == 1)
        v6 = 0x54414944454D4D49;
      else
        v6 = 0x564953554C435845;
      if (v3 != v6)
        goto LABEL_15;
      goto LABEL_13;
    }
  }
  else
  {
    v4 = 0xE800000000000000;
    v3 = 0x4445525245464544;
    v5 = a2;
    if (a2)
      goto LABEL_6;
  }
  v2 = 0xE800000000000000;
  if (v3 != 0x4445525245464544)
  {
LABEL_15:
    v7 = sub_247C3DAD4();
    goto LABEL_16;
  }
LABEL_13:
  if (v4 != v2)
    goto LABEL_15;
  v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

SwiftSQLite::Insert __swiftcall QueryType.insert(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;
  void *v6;
  unsigned __int8 v7;
  SwiftSQLite::Insert result;

  v7 = 5;
  v4 = sub_247BFACA8(&v7, (uint64_t)a1._rawValue, v1, v2, v3);
  result.bindings._rawValue = v6;
  result.template._object = v5;
  result.template._countAndFlagsBits = (uint64_t)v4;
  return result;
}

SwiftSQLite::Insert __swiftcall QueryType.insert(or:_:)(SwiftSQLite::OnConflict or, Swift::OpaquePointer _)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  SwiftSQLite::Insert result;

  v4 = sub_247C36710((char *)or, (uint64_t)_._rawValue, v2, v3, (uint64_t (*)(char *))sub_247BFACA8);
  result.bindings._rawValue = v6;
  result.template._object = v5;
  result.template._countAndFlagsBits = v4;
  return result;
}

SwiftSQLite::Insert __swiftcall QueryType.insertMany(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  unsigned __int8 v7;
  SwiftSQLite::Insert result;

  v7 = 5;
  v4 = sub_247C35C90(&v7, (uint64_t)a1._rawValue, v1, v2, v3);
  result.bindings._rawValue = v6;
  result.template._object = v5;
  result.template._countAndFlagsBits = v4;
  return result;
}

uint64_t QueryType.upsert(_:onConflictOf:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30[16];
  uint64_t v31;
  _OWORD v32[2];
  _OWORD v33[3];
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  _BYTE v37[80];
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;

  v7 = a2;
  v31 = a2;
  swift_bridgeObjectRetain();
  v10 = sub_247C36BA8((uint64_t)sub_247C36B8C, (uint64_t)v30, a1);
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v27 = v7;
    v28 = a3;
    v29 = a4;
    v43 = MEMORY[0x24BEE4AF8];
    sub_247C12AAC(0, v11, 0);
    v12 = v10 + 32;
    do
    {
      sub_247BFB458(v12, (uint64_t)v37);
      sub_247BFA88C((uint64_t)v37, (uint64_t)v34);
      sub_247BFD20C(0, 0xE000000000000000, 0x646564756C637865, 0xE800000000000000, 34, 0xE100000000000000);
      *(_QWORD *)&v38 = 0;
      *((_QWORD *)&v38 + 1) = 0xE000000000000000;
      sub_247C3D780();
      sub_247C3D840();
      swift_bridgeObjectRelease();
      sub_247C3D780();
      v13 = v38;
      sub_247BFA88C((uint64_t)v34, (uint64_t)v32);
      __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
      *(_QWORD *)(inited + 32) = v13;
      *(_QWORD *)(inited + 56) = v15;
      *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
      *(_QWORD *)(inited + 40) = *((_QWORD *)&v13 + 1);
      *(_QWORD *)(inited + 48) = MEMORY[0x24BEE4AF8];
      v16 = v35;
      v17 = v36;
      __swift_project_boxed_opaque_existential_1(v34, v35);
      v18 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      *(_QWORD *)(inited + 96) = v15;
      *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
      v18(v16, v17);
      sub_247BFECF4(inited, (uint64_t *)v33 + 1);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
      swift_arrayDestroy();
      v40 = v33[0];
      v41 = v33[1];
      v42 = v33[2];
      v38 = v32[0];
      v39 = v32[1];
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      sub_247BFB400((uint64_t)v37);
      v19 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_247C12AAC(0, *(_QWORD *)(v19 + 16) + 1, 1);
        v19 = v43;
      }
      v21 = *(_QWORD *)(v19 + 16);
      v20 = *(_QWORD *)(v19 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_247C12AAC((char *)(v20 > 1), v21 + 1, 1);
        v19 = v43;
      }
      *(_QWORD *)(v19 + 16) = v21 + 1;
      v22 = (_OWORD *)(v19 + 80 * v21);
      v22[2] = v38;
      v23 = v39;
      v24 = v40;
      v25 = v42;
      v22[5] = v41;
      v22[6] = v25;
      v22[3] = v23;
      v22[4] = v24;
      v12 += 80;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    a4 = v29;
    v7 = v27;
    a3 = v28;
  }
  else
  {
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x24BEE4AF8];
  }
  QueryType.upsert(_:onConflictOf:set:)(a1, v7, v19, a3, a4, a5);
  return swift_bridgeObjectRelease();
}

SwiftSQLite::Update __swiftcall QueryType.update(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  int64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t i;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48[15];
  uint64_t v49[3];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  SwiftSQLite::Update result;

  v5 = v2;
  v6 = v1;
  v8 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455420);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3F150;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 32) = 0x455441445055;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 56) = v10;
  sub_247BF9730(0, v6, v5, (uint64_t *)(inited + 72));
  *(_QWORD *)(inited + 136) = v10;
  *(_QWORD *)(inited + 144) = &protocol witness table for Expression<A>;
  v12 = v11;
  *(_QWORD *)(inited + 112) = 5522771;
  *(_QWORD *)(inited + 120) = 0xE300000000000000;
  *(_QWORD *)(inited + 128) = v11;
  v13 = *((_QWORD *)a1._rawValue + 2);
  if (v13)
  {
    v40 = v6;
    v41 = v5;
    v42 = v4;
    v43 = v8;
    *(_QWORD *)&v45 = v12;
    sub_247C12A0C(0, v13, 0);
    v14 = (char *)a1._rawValue + 32;
    v15 = (uint64_t)v12;
    v44 = xmmword_247C3E1B0;
    do
    {
      sub_247BFB458((uint64_t)v14, (uint64_t)v49);
      __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
      v16 = swift_initStackObject();
      *(_OWORD *)(v16 + 16) = v44;
      sub_247BFA88C((uint64_t)v49, v16 + 32);
      sub_247BFA88C((uint64_t)&v52, v16 + 72);
      sub_247BFECF4(v16, &v53);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
      swift_arrayDestroy();
      sub_247BFB400((uint64_t)v49);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_247C12A0C(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v45;
      }
      v18 = *(_QWORD *)(v15 + 16);
      v17 = *(_QWORD *)(v15 + 24);
      if (v18 >= v17 >> 1)
        sub_247C12A0C((_QWORD *)(v17 > 1), v18 + 1, 1);
      v19 = v55;
      v20 = v56;
      v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v53, v55);
      MEMORY[0x24BDAC7A8](v21);
      v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v24 + 16))(v23);
      sub_247C3C564(v18, (uint64_t)v23, (uint64_t *)&v45, v19, v20);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v53);
      v15 = v45;
      v14 += 80;
      --v13;
    }
    while (v13);
    v8 = v43;
    v6 = v40;
    v5 = v41;
    v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    v15 = (uint64_t)v12;
  }
  sub_247BFECF4(v15, (uint64_t *)(inited + 152));
  swift_bridgeObjectRelease();
  sub_247BF8D50(v5, inited + 192);
  sub_247C35458(v6, v5, inited + 232);
  sub_247C355C8(v5, inited + 272);
  v48[0] = (uint64_t)v12;
  for (i = 32; i != 312; i += 40)
  {
    sub_247BFD054(inited + i, (uint64_t)v49, &qword_254455440);
    sub_247BFBCD8((uint64_t)v49, (uint64_t)&v45, &qword_254455440);
    if (v46)
    {
      sub_247BFECDC(&v45, (uint64_t)&v53);
      sub_247BFECDC((__int128 *)&v53, (uint64_t)&v45);
      v26 = (_QWORD *)v48[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v26 = sub_247BFF3E4(0, v26[2] + 1, 1, v26);
        v48[0] = (uint64_t)v26;
      }
      v28 = v26[2];
      v27 = v26[3];
      if (v28 >= v27 >> 1)
        v48[0] = (uint64_t)sub_247BFF3E4((_QWORD *)(v27 > 1), v28 + 1, 1, v26);
      v29 = v46;
      v30 = v47;
      v31 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v45, v46);
      MEMORY[0x24BDAC7A8](v31);
      v33 = (char *)&v40 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v34 + 16))(v33);
      sub_247BFF3F8(v28, (uint64_t)v33, v48, v29, v30);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v45);
    }
    else
    {
      sub_247BFC084((uint64_t)&v45, &qword_254455440);
    }
  }
  swift_bridgeObjectRelease();
  sub_247BFECF4(v48[0], v49);
  swift_bridgeObjectRelease();
  v35 = v50;
  v36 = v51;
  __swift_project_boxed_opaque_existential_1(v49, v50);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v36 + 8))(&v53, v35, v36);
  *(_QWORD *)v8 = v53;
  *(_OWORD *)(v8 + 8) = v54;
  v37 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  result.bindings._rawValue = v39;
  result.template._object = v38;
  result.template._countAndFlagsBits = v37;
  return result;
}

uint64_t sub_247C337B8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t result;
  _BOOL8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *v2;
  v4 = v2[1];
  sub_247BFD20C(0, 0xE000000000000000, a1, a2, 34, 0xE100000000000000);
  v10 = 0;
  v11 = 0xE000000000000000;
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  if (!*(_QWORD *)(v3 + 16) || (v5 = sub_247BFCCBC(v10, v11), (v6 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v5);
  result = swift_bridgeObjectRelease();
  if ((v7 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v7 < *(_QWORD *)(v4 + 16))
  {
    sub_247BFD054(v4 + 40 * v7 + 32, (uint64_t)&v10, &qword_254455448);
    v9 = v12 != 0;
    sub_247BFC084((uint64_t)&v10, &qword_254455448);
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t SchemaType.select(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C33A68(a1, a2, a3, a4, 0);
}

uint64_t sub_247C33918(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v10)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD *, uint64_t, uint64_t);
  uint64_t (*v15)(_QWORD *, _QWORD);
  uint64_t v16;
  uint64_t v18;
  _QWORD v21[21];
  _QWORD v22[21];
  _QWORD v23[22];

  v10 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a5 + 16);
  v10(v22, a3, a5);
  v11 = v22[3];
  v18 = v22[2];
  swift_bridgeObjectRetain();
  sub_247C3C6DC(v22);
  v10(v23, a3, a5);
  v13 = v23[6];
  v12 = v23[7];
  swift_bridgeObjectRetain();
  sub_247C3C6DC(v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 40))(v18, v11, v13, v12, a4, a6);
  v10(v21, a3, a5);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(a6 + 24))(v21, a4, a6);
  v14 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(a6 + 32);
  swift_bridgeObjectRetain();
  v15 = (uint64_t (*)(_QWORD *, _QWORD))v14(v21, a4, a6);
  *(_BYTE *)v16 = a1;
  *(_QWORD *)(v16 + 8) = a2;
  swift_bridgeObjectRelease();
  return v15(v21, 0);
}

uint64_t SchemaType.select(distinct:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C33A68(a1, a2, a3, a4, 1);
}

uint64_t sub_247C33A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_247C3E1D0;
  sub_247BFA88C(a1, v10 + 32);
  swift_bridgeObjectRetain();
  sub_247BFB304(a2);
  sub_247C33918(a5, v10, a3, a3, *(_QWORD *)(a4 + 8), *(_QWORD *)(a4 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t SchemaType.select(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C33918(0, a1, a2, a2, *(_QWORD *)(a3 + 8), *(_QWORD *)(a3 + 8));
}

uint64_t SchemaType.select(distinct:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_247C33918(1, a1, a2, a2, *(_QWORD *)(a3 + 8), *(_QWORD *)(a3 + 8));
}

uint64_t SchemaType.select(_:)(void (*a1)(_QWORD *, _QWORD *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C33B7C(a1, a2, a3, a4, 0);
}

uint64_t SchemaType.select(distinct:)(void (*a1)(_QWORD *, _QWORD *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C33B7C(a1, a2, a3, a4, 1);
}

uint64_t sub_247C33B7C(void (*a1)(_QWORD *, _QWORD *), uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9;
  _QWORD v11[3];
  _QWORD v12[3];

  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_247C3E1D0;
  memset(v12, 0, sizeof(v12));
  memset(v11, 0, sizeof(v11));
  *(_QWORD *)(v9 + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(v9 + 64) = &protocol witness table for Expression<A>;
  a1(v12, v11);
  sub_247C33918(a5, v9, a3, a3, *(_QWORD *)(a4 + 8), *(_QWORD *)(a4 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t SchemaType.select<A>(_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_247C33C7C(a1, a2, a3, a4, a5, 0);
}

{
  return sub_247C33D6C(a1, a2, a3, a4, a5, 0);
}

uint64_t SchemaType.select<A>(distinct:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_247C33C7C(a1, a2, a3, a4, a5, 1);
}

{
  return sub_247C33D6C(a1, a2, a3, a4, a5, 1);
}

uint64_t sub_247C33C7C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v11 = *a1;
  v10 = a1[1];
  v12 = a1[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_247C3E1D0;
  *(_QWORD *)(v13 + 56) = type metadata accessor for Expression(0, a3, v14, v15);
  *(_QWORD *)(v13 + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v13 + 32) = v11;
  *(_QWORD *)(v13 + 40) = v10;
  *(_QWORD *)(v13 + 48) = v12;
  v18 = type metadata accessor for ScalarQuery(0, a3, v16, v17);
  v19 = *(_QWORD *)(a4 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C33918(a6, v13, a2, v18, v19, (uint64_t)&protocol witness table for ScalarQuery<A>);
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C33D6C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v10 = *a1;
  v9 = a1[1];
  v11 = a1[2];
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_247C3E1D0;
  v13 = sub_247C3D9B4();
  *(_QWORD *)(v12 + 56) = type metadata accessor for Expression(0, v13, v14, v15);
  *(_QWORD *)(v12 + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v12 + 32) = v10;
  *(_QWORD *)(v12 + 40) = v9;
  *(_QWORD *)(v12 + 48) = v11;
  v18 = type metadata accessor for ScalarQuery(0, v13, v16, v17);
  v19 = *(_QWORD *)(a4 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C33918(a6, v12, a2, v18, v19, (uint64_t)&protocol witness table for ScalarQuery<A>);
  return swift_bridgeObjectRelease();
}

uint64_t SchemaType.count.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _UNKNOWN **v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  v13 = &protocol witness table for Expression<A>;
  v9 = 42;
  v10 = 0xE100000000000000;
  v11 = MEMORY[0x24BEE4AF8];
  v12 = v4;
  sub_247C3D840();
  v5 = __swift_project_boxed_opaque_existential_1(&v9, v4);
  swift_bridgeObjectRetain();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  v6 = v5[2];
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
  v9 = 0x746E756F63;
  v10 = 0xE500000000000000;
  v11 = v6;
  SchemaType.select<A>(_:)(&v9, a1, MEMORY[0x24BEE1768], a2, v7);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t QueryType.union(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t (*v8)(_BYTE *, _QWORD);
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  _BYTE v16[32];
  __int128 v17[2];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a4, v4, a2);
  sub_247BFA88C(a1, (uint64_t)v17);
  v8 = (uint64_t (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(a3 + 32))(v16, a2, a3);
  v10 = v9;
  v11 = *(_QWORD **)(v9 + 160);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v10 + 160) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v11 = sub_247C0AD3C(0, v11[2] + 1, 1, v11);
    *(_QWORD *)(v10 + 160) = v11;
  }
  v14 = v11[2];
  v13 = v11[3];
  if (v14 >= v13 >> 1)
  {
    v11 = sub_247C0AD3C((_QWORD *)(v13 > 1), v14 + 1, 1, v11);
    *(_QWORD *)(v10 + 160) = v11;
  }
  v11[2] = v14 + 1;
  sub_247BFECDC(v17, (uint64_t)&v11[5 * v14 + 4]);
  return v8(v16, 0);
}

uint64_t QueryType.join(_:on:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[3];
  char v14;

  v10 = *a2;
  v9 = a2[1];
  v11 = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = 1;
  v13[0] = v10;
  v13[1] = v9;
  v13[2] = v11;
  QueryType.join(_:_:on:)(&v14, a1, (uint64_t)v13, a3, a4, a5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v5;
  uint64_t v7;
  __int128 v8;
  char v9;

  v5 = *a2;
  v9 = 1;
  v7 = v5;
  v8 = *(_OWORD *)(a2 + 1);
  return QueryType.join(_:_:on:)(&v9, a1, (uint64_t)&v7, a3, a4, a5);
}

uint64_t QueryType.join(_:_:on:)@<X0>(char *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _UNKNOWN **v21;
  void (*v22)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **);
  uint64_t v23;
  _UNKNOWN **v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD *, _QWORD);
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v39;
  uint64_t v40;
  char v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  _UNKNOWN **v49;
  _QWORD v50[5];
  __int128 v51;
  __int128 v52;
  __int128 v53;
  _OWORD v54[2];
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  _UNKNOWN **v59;
  __int128 v60[2];
  _QWORD v61[9];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v8 = a4;
  v41 = *a1;
  v42 = *(_OWORD *)a3;
  v43 = *(_QWORD *)(a3 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(a6, v6, a4);
  sub_247BFA88C((uint64_t)a2, (uint64_t)v60);
  v10 = a2[3];
  v11 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v10);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v11 + 16))(v61, v10, v11);
  v12 = v62;
  v13 = v63;
  v14 = v64;
  sub_247BFE9A0(v62, v63);
  sub_247C3C6DC(v61);
  if (v13)
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
    *((_QWORD *)&v52 + 1) = v15;
    *(_QWORD *)&v53 = &protocol witness table for Expression<A>;
    v58 = v15;
    v59 = &protocol witness table for Expression<A>;
    v56 = v42;
    v57 = v43;
    v50[3] = v15;
    v50[4] = &protocol witness table for Expression<A>;
    v50[0] = v12;
    v50[1] = v13;
    v50[2] = v14;
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    v16 = v12;
    v40 = v12;
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    sub_247BFA88C((uint64_t)&v56, inited + 32);
    sub_247BFA88C((uint64_t)v50, inited + 72);
    v46 = 32;
    *(_QWORD *)&v47 = 0xE100000000000000;
    sub_247BFE9A0(v16, v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_247C3D840();
    sub_247C3D840();
    sub_247BFECF4(inited, &v46);
    swift_bridgeObjectRelease();
    v18 = a5;
    v19 = v8;
    v20 = v48;
    v21 = v49;
    __swift_project_boxed_opaque_existential_1(&v46, v48);
    v22 = (void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v21[1];
    v23 = v20;
    a5 = v18;
    v24 = v21;
    v8 = v19;
    v22(&v44, v23, v24);
    v25 = v44;
    v39 = v45;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
    v48 = v15;
    v49 = &protocol witness table for Expression<A>;
    v46 = v25;
    v47 = v39;
    sub_247BFB3FC(&v46, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v56);
    sub_247BFE92C(v40, v13);
    if (*((_QWORD *)&v52 + 1))
    {
      sub_247BFECDC(&v51, (uint64_t)&v56);
      goto LABEL_6;
    }
  }
  else
  {
    *(_QWORD *)&v53 = 0;
    v51 = 0u;
    v52 = 0u;
  }
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
  v59 = &protocol witness table for Expression<A>;
  v56 = v42;
  v57 = v43;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFC084((uint64_t)&v51, &qword_254455440);
LABEL_6:
  LOBYTE(v51) = v41;
  sub_247BFECDC(v60, (uint64_t)&v51 + 8);
  sub_247BFECDC(&v56, (uint64_t)v54);
  v26 = (uint64_t (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(a5 + 32))(v50, v8, a5);
  v28 = v27;
  v29 = *(_QWORD **)(v27 + 64);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v28 + 64) = v29;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v29 = sub_247C0AD50(0, v29[2] + 1, 1, v29);
    *(_QWORD *)(v28 + 64) = v29;
  }
  v32 = v29[2];
  v31 = v29[3];
  if (v32 >= v31 >> 1)
  {
    v29 = sub_247C0AD50((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
    *(_QWORD *)(v28 + 64) = v29;
  }
  v29[2] = v32 + 1;
  v33 = &v29[11 * v32];
  v34 = v52;
  *((_OWORD *)v33 + 2) = v51;
  *((_OWORD *)v33 + 3) = v34;
  v35 = v53;
  v36 = v54[0];
  v37 = v54[1];
  v33[14] = v55;
  *((_OWORD *)v33 + 5) = v36;
  *((_OWORD *)v33 + 6) = v37;
  *((_OWORD *)v33 + 4) = v35;
  return v26(v50, 0);
}

uint64_t QueryType.join(_:_:on:)@<X0>(char *a1@<X0>, _QWORD *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[3];
  char v15;

  v10 = *a3;
  v11 = a3[1];
  v12 = a3[2];
  v15 = *a1;
  v14[0] = v10;
  v14[1] = v11;
  v14[2] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  QueryType.join(_:_:on:)(&v15, a2, (uint64_t)v14, a4, a5, a6);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t QueryType.where(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[3];

  v8 = *a1;
  v7 = a1[1];
  v9 = a1[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11[0] = v8;
  v11[1] = v7;
  v11[2] = v9;
  QueryType.filter(_:)(v11, a2, a3, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t QueryType.where(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  __int128 v6;

  v5 = *(_QWORD *)a1;
  v6 = *(_OWORD *)(a1 + 8);
  return QueryType.filter(_:)(&v5, a2, a3, a4);
}

uint64_t QueryType.group(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5[3];

  memset(v5, 0, sizeof(v5));
  return sub_247C3473C(a1, v5, a2, a3, a4);
}

{
  uint64_t v5[3];

  memset(v5, 0, sizeof(v5));
  return sub_247C3473C(a1, v5, a2, a3, a4);
}

uint64_t sub_247C3473C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_BYTE *, uint64_t, uint64_t);
  uint64_t (*v13)(_BYTE *, _QWORD);
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[32];

  v9 = *a2;
  v10 = a2[1];
  v11 = a2[2];
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(a5, v5);
  v12 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(a4 + 32);
  swift_bridgeObjectRetain();
  sub_247BFE9A0(v9, v10);
  v13 = (uint64_t (*)(_BYTE *, _QWORD))v12(v19, a3, a4);
  v15 = v14[12];
  v16 = v14[13];
  v17 = v14[14];
  v14[12] = a1;
  v14[13] = v9;
  v14[14] = v10;
  v14[15] = v11;
  sub_247BFE95C(v15, v16, v17);
  return v13(v19, 0);
}

uint64_t QueryType.group(_:having:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_247C348A4(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t *, uint64_t, uint64_t))QueryType.group(_:having:));
}

{
  return sub_247C348A4(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t *, uint64_t, uint64_t))QueryType.group(_:having:));
}

uint64_t QueryType.group(_:having:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];

  v9 = a2[1];
  v10 = a2[2];
  v12[0] = *a2;
  v12[1] = v9;
  v12[2] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3473C(a1, v12, a3, a4, a5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];

  v9 = a2[1];
  v10 = a2[2];
  v12[0] = *a2;
  v12[1] = v9;
  v12[2] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247C3473C(a1, v12, a3, a4, a5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C348A4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t *, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  __int128 v14;

  v10 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_247C3E1D0;
  sub_247BFA88C(a1, v11 + 32);
  v13 = v10;
  v14 = *(_OWORD *)(a2 + 1);
  a5(v11, &v13, a3, a4);
  return swift_bridgeObjectRelease();
}

uint64_t QueryType.order(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t (*v8)(_BYTE *, uint64_t, uint64_t);
  uint64_t (*v9)(_BYTE *, _QWORD);
  uint64_t v10;
  _BYTE v12[32];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a4, v4, a2);
  v8 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(a3 + 32);
  swift_bridgeObjectRetain();
  v9 = (uint64_t (*)(_BYTE *, _QWORD))v8(v12, a2, a3);
  *(_QWORD *)(v10 + 128) = a1;
  swift_bridgeObjectRelease();
  return v9(v12, 0);
}

uint64_t QueryType.limit(_:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  int v10;
  uint64_t (*v11)(_BYTE *, _QWORD);
  uint64_t v12;
  _BYTE v14[32];

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(a5, v5);
  v10 = a2 & 1;
  if (v10)
    a1 = 0;
  v11 = (uint64_t (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(a4 + 32))(v14, a3, a4);
  *(_QWORD *)(v12 + 136) = a1;
  *(_QWORD *)(v12 + 144) = 0;
  *(_BYTE *)(v12 + 152) = v10 == 0;
  *(_BYTE *)(v12 + 153) = v10;
  return v11(v14, 0);
}

uint64_t QueryType.limit(_:offset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t (*v10)(_BYTE *, _QWORD);
  uint64_t v11;
  _BYTE v13[32];

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(a5, v5);
  v10 = (uint64_t (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(a4 + 32))(v13, a3, a4);
  *(_QWORD *)(v11 + 136) = a1;
  *(_QWORD *)(v11 + 144) = a2;
  *(_WORD *)(v11 + 152) = 0;
  return v10(v13, 0);
}

uint64_t sub_247C34BA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t inited;
  void (*v6)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v15[21];
  _QWORD v16[22];

  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1C0;
  v6 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a2 + 16);
  v6(v16, a1, a2);
  sub_247C3C6DC(v16);
  if (LOBYTE(v16[0]))
    v7 = 0x44205443454C4553;
  else
    v7 = 0x5443454C4553;
  if (LOBYTE(v16[0]))
    v8 = 0xEF54434E49545349;
  else
    v8 = 0xE600000000000000;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(inited + 32) = v7;
  *(_QWORD *)(inited + 56) = v9;
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  v10 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 40) = v8;
  *(_QWORD *)(inited + 48) = v10;
  v11 = v10;
  v6(v15, a1, a2);
  v12 = v15[1];
  swift_bridgeObjectRetain();
  sub_247C3C6DC(v15);
  sub_247BFECF4(v12, (uint64_t *)(inited + 72));
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 136) = v9;
  *(_QWORD *)(inited + 144) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 112) = 1297044038;
  *(_QWORD *)(inited + 120) = 0xE400000000000000;
  *(_QWORD *)(inited + 128) = v11;
  sub_247BF9730(1, a1, a2, (uint64_t *)(inited + 152));
  sub_247BFECF4(inited, a3);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  return swift_arrayDestroy();
}

uint64_t sub_247C34D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (*v6)(_QWORD *__return_ptr);
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  _BYTE v25[88];
  uint64_t v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[21];
  _QWORD v31[22];

  v6 = *(void (**)(_QWORD *__return_ptr))(a2 + 16);
  v6(v31);
  v7 = v31[8];
  swift_bridgeObjectRetain();
  sub_247C3C6DC(v31);
  v8 = *(_QWORD *)(v7 + 16);
  result = swift_bridgeObjectRelease();
  if (v8)
  {
    ((void (*)(_QWORD *__return_ptr, uint64_t, uint64_t))v6)(v30, a1, a2);
    v10 = v30[8];
    swift_bridgeObjectRetain();
    sub_247C3C6DC(v30);
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      v24 = a3;
      v29 = MEMORY[0x24BEE4AF8];
      sub_247C12A0C(0, v11, 0);
      v23[1] = v10;
      v12 = v10 + 32;
      do
      {
        sub_247BFD054(v12, (uint64_t)v25, &qword_254455298);
        sub_247C34F9C((uint64_t)v25, v26);
        sub_247BFC084((uint64_t)v25, &qword_254455298);
        v13 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_247C12A0C(0, *(_QWORD *)(v13 + 16) + 1, 1);
          v13 = v29;
        }
        v15 = *(_QWORD *)(v13 + 16);
        v14 = *(_QWORD *)(v13 + 24);
        if (v15 >= v14 >> 1)
          sub_247C12A0C((_QWORD *)(v14 > 1), v15 + 1, 1);
        v16 = v27;
        v17 = v28;
        v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
        MEMORY[0x24BDAC7A8](v18);
        v20 = (char *)v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v21 + 16))(v20);
        sub_247C3C564(v15, (uint64_t)v20, &v29, v16, v17);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
        v12 += 88;
        --v11;
      }
      while (v11);
      v22 = v29;
      swift_bridgeObjectRelease();
      a3 = v24;
    }
    else
    {
      swift_bridgeObjectRelease();
      v22 = MEMORY[0x24BEE4AF8];
    }
    sub_247BFECF4(v22, (uint64_t *)a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_247C34F9C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11[2];
  __int128 v12[2];
  _BYTE v13[40];
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  sub_247BFA88C(a1 + 8, (uint64_t)v11);
  sub_247BFA88C(a1 + 48, (uint64_t)v12);
  sub_247BFECDC(v11, (uint64_t)v14);
  sub_247BFECDC(v12, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1C0;
  *(_QWORD *)&v11[0] = 0xE000000000000000;
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D840();
  v5 = *(_QWORD *)&v11[0];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(inited + 32) = 0;
  v7 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 56) = v6;
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 40) = v5;
  *(_QWORD *)(inited + 48) = v7;
  v8 = v15;
  v9 = v16;
  __swift_project_boxed_opaque_existential_1(v14, v15);
  sub_247BF9730(1, v8, v9, (uint64_t *)(inited + 72));
  *(_QWORD *)(inited + 136) = v6;
  *(_QWORD *)(inited + 144) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 112) = 20047;
  *(_QWORD *)(inited + 120) = 0xE200000000000000;
  *(_QWORD *)(inited + 128) = v7;
  sub_247BFA88C((uint64_t)v13, inited + 152);
  sub_247BFECF4(inited, a2);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

uint64_t JoinType.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x52454E4E49;
  if (*v0 != 1)
    v1 = 0x54554F205446454CLL;
  if (*v0)
    return v1;
  else
    return 0x53534F5243;
}

_QWORD *sub_247C351FC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *result;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13[2];
  _QWORD v14[12];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  (*(void (**)(_QWORD *__return_ptr))(a1 + 16))(v14);
  v4 = v15;
  v3 = v16;
  v5 = v17;
  v6 = v18;
  sub_247BFE9D0(v15, v16, v17);
  result = sub_247C3C6DC(v14);
  if (v4)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
    *(_QWORD *)(inited + 56) = v9;
    *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
    *(_QWORD *)(inited + 32) = 0x59422050554F5247;
    v10 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(inited + 40) = 0xE800000000000000;
    *(_QWORD *)(inited + 48) = v10;
    sub_247BFECF4(v4, (uint64_t *)(inited + 72));
    sub_247BFECF4(inited, (uint64_t *)v13);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    if (v5)
    {
      v11 = swift_initStackObject();
      *(_OWORD *)(v11 + 16) = xmmword_247C3E1B0;
      sub_247BFA88C((uint64_t)v13, v11 + 32);
      v12 = swift_initStackObject();
      *(_OWORD *)(v12 + 16) = xmmword_247C3E1B0;
      *(_QWORD *)(v12 + 56) = v9;
      *(_QWORD *)(v12 + 64) = &protocol witness table for Expression<A>;
      *(_QWORD *)(v12 + 32) = 0x474E49564148;
      *(_QWORD *)(v12 + 40) = 0xE600000000000000;
      *(_QWORD *)(v12 + 48) = MEMORY[0x24BEE4AF8];
      *(_QWORD *)(v12 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_254455310);
      *(_QWORD *)(v12 + 104) = &protocol witness table for Expression<A>;
      *(_QWORD *)(v12 + 72) = v3;
      *(_QWORD *)(v12 + 80) = v5;
      *(_QWORD *)(v12 + 88) = v6;
      sub_247BFECF4(v12, (uint64_t *)(v11 + 72));
      swift_setDeallocating();
      swift_arrayDestroy();
      sub_247BFECF4(v11, (uint64_t *)a2);
      swift_setDeallocating();
      swift_arrayDestroy();
      return (_QWORD *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    else
    {
      return (_QWORD *)sub_247BFECDC(v13, a2);
    }
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_247C35458@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (*v6)(_QWORD *__return_ptr);
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  double result;
  _QWORD v13[21];
  _QWORD v14[21];

  v6 = *(void (**)(_QWORD *__return_ptr))(a2 + 16);
  v6(v14);
  v7 = v14[16];
  swift_bridgeObjectRetain();
  sub_247C3C6DC(v14);
  v8 = *(_QWORD *)(v7 + 16);
  swift_bridgeObjectRelease();
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
    *(_QWORD *)(inited + 56) = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
    *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
    *(_QWORD *)(inited + 32) = 0x594220524544524FLL;
    v10 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(inited + 40) = 0xE800000000000000;
    *(_QWORD *)(inited + 48) = v10;
    ((void (*)(_QWORD *__return_ptr, uint64_t, uint64_t))v6)(v13, a1, a2);
    v11 = v13[16];
    swift_bridgeObjectRetain();
    sub_247C3C6DC(v13);
    sub_247BFECF4(v11, (uint64_t *)(inited + 72));
    swift_bridgeObjectRelease();
    sub_247BFECF4(inited, (uint64_t *)a3);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
    swift_arrayDestroy();
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_247C355C8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[17];
  char v9;
  char v10;

  (*(void (**)(_QWORD *__return_ptr))(a1 + 16))(v8);
  result = (uint64_t)sub_247C3C6DC(v8);
  if ((v10 & 1) != 0)
  {
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    v4 = v9;
    sub_247C3DAC8();
    sub_247C3D840();
    swift_bridgeObjectRelease();
    if ((v4 & 1) != 0)
    {
      result = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
      *(_QWORD *)(a2 + 32) = &protocol witness table for Expression<A>;
      *(_QWORD *)a2 = 0x2054494D494CLL;
      *(_QWORD *)(a2 + 8) = 0xE600000000000000;
      *(_QWORD *)(a2 + 16) = MEMORY[0x24BEE4AF8];
      *(_QWORD *)(a2 + 24) = result;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
      v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
      *(_QWORD *)(inited + 56) = v6;
      *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
      *(_QWORD *)(inited + 32) = 0x2054494D494CLL;
      v7 = MEMORY[0x24BEE4AF8];
      *(_QWORD *)(inited + 40) = 0xE600000000000000;
      *(_QWORD *)(inited + 48) = v7;
      sub_247C3DAC8();
      sub_247C3D840();
      swift_bridgeObjectRelease();
      *(_QWORD *)(inited + 96) = v6;
      *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
      *(_QWORD *)(inited + 72) = 0x2054455346464FLL;
      *(_QWORD *)(inited + 80) = 0xE700000000000000;
      *(_QWORD *)(inited + 88) = v7;
      sub_247BFECF4(inited, (uint64_t *)a2);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
      return swift_arrayDestroy();
    }
  }
  return result;
}

uint64_t sub_247C357A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void (*v6)(_QWORD *__return_ptr);
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[3];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[21];
  _QWORD v39[22];

  v6 = *(void (**)(_QWORD *__return_ptr))(a2 + 16);
  v6(v39);
  v7 = v39[20];
  swift_bridgeObjectRetain();
  sub_247C3C6DC(v39);
  v8 = *(_QWORD *)(v7 + 16);
  result = swift_bridgeObjectRelease();
  if (v8)
  {
    ((void (*)(_QWORD *__return_ptr, uint64_t, uint64_t))v6)(v38, a1, a2);
    v10 = v38[20];
    swift_bridgeObjectRetain();
    sub_247C3C6DC(v38);
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      v29 = a3;
      v37 = MEMORY[0x24BEE4AF8];
      sub_247C12A0C(0, v11, 0);
      v28 = v10;
      v12 = v10 + 32;
      v13 = v37;
      v30 = xmmword_247C3E1B0;
      do
      {
        sub_247BFA88C(v12, (uint64_t)v31);
        __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v30;
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
        *(_QWORD *)(inited + 32) = 0x4E4F494E55;
        *(_QWORD *)(inited + 56) = v15;
        *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
        *(_QWORD *)(inited + 40) = 0xE500000000000000;
        *(_QWORD *)(inited + 48) = MEMORY[0x24BEE4AF8];
        v16 = v32;
        v17 = v33;
        v18 = __swift_project_boxed_opaque_existential_1(v31, v32);
        *(_QWORD *)(inited + 96) = v16;
        *(_QWORD *)(inited + 104) = *(_QWORD *)(v17 + 8);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 72));
        (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(boxed_opaque_existential_1, v18, v16);
        sub_247BFECF4(inited, v34);
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
        swift_arrayDestroy();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_247C12A0C(0, *(_QWORD *)(v13 + 16) + 1, 1);
          v13 = v37;
        }
        v21 = *(_QWORD *)(v13 + 16);
        v20 = *(_QWORD *)(v13 + 24);
        if (v21 >= v20 >> 1)
          sub_247C12A0C((_QWORD *)(v20 > 1), v21 + 1, 1);
        v22 = v35;
        v23 = v36;
        v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v34, v35);
        MEMORY[0x24BDAC7A8](v24);
        v26 = (char *)&v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v27 + 16))(v26);
        sub_247C3C564(v21, (uint64_t)v26, &v37, v22, v23);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
        v13 = v37;
        v12 += 40;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
      a3 = v29;
    }
    else
    {
      swift_bridgeObjectRelease();
      v13 = MEMORY[0x24BEE4AF8];
    }
    sub_247BFECF4(v13, (uint64_t *)a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t QueryType.alias(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  void (*v10)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_BYTE *, _QWORD);
  _QWORD *v16;
  _QWORD *v17;
  _BYTE v19[32];
  _QWORD v20[21];
  _QWORD v21[22];

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(a5, v5);
  v10 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a4 + 16);
  v10(v20, a3, a4);
  v12 = v20[2];
  v11 = v20[3];
  swift_bridgeObjectRetain();
  sub_247C3C6DC(v20);
  v10(v21, a3, a4);
  v14 = v21[6];
  v13 = v21[7];
  swift_bridgeObjectRetain();
  sub_247C3C6DC(v21);
  v15 = (uint64_t (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(a4 + 32))(v19, a3, a4);
  v17 = v16;
  v16[2] = v12;
  v16[3] = v11;
  swift_bridgeObjectRelease();
  v17[4] = a1;
  v17[5] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17[6] = v14;
  v17[7] = v13;
  swift_bridgeObjectRelease();
  return v15(v19, 0);
}

uint64_t QueryType.insert(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t inited;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1D0;
  sub_247BFB458(a1, inited + 32);
  v12 = inited;
  swift_bridgeObjectRetain();
  sub_247C0F960(a2);
  LOBYTE(v12) = 5;
  sub_247BFACA8((unsigned __int8 *)&v12, inited, a3, a4, a5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C35C90@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t inited;
  unint64_t v27;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _UNKNOWN **v45;
  void (*v46)(_QWORD *__return_ptr, _QWORD, _QWORD);
  __int128 v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  int64_t v52;
  uint64_t i;
  _QWORD *v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _UNKNOWN **v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int64_t v72;
  int64_t v73;
  _QWORD *v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  _UNKNOWN **v83;
  char v84[8];
  _QWORD *v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;

  v5 = *(_QWORD *)(a2 + 16);
  if (!v5)
    return (unint64_t)QueryType.insert()();
  v68 = a5;
  v66 = *a1;
  v6 = *(_QWORD *)(a2 + 32);
  v71 = a2 + 32;
  v7 = *(_QWORD *)(v6 + 16);
  v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v70 = a4;
  v69 = a3;
  v72 = v5;
  if (v7)
  {
    *(_QWORD *)&v76 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_247C12A0C(0, v7, 0);
    v9 = v6 + 32;
    v10 = v8;
    do
    {
      sub_247BFB458(v9, (uint64_t)&v80);
      sub_247BFA88C((uint64_t)&v80, (uint64_t)&v85);
      sub_247BFB400((uint64_t)&v80);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_247C12A0C(0, v10[2] + 1, 1);
        v10 = (_QWORD *)v76;
      }
      v12 = v10[2];
      v11 = v10[3];
      if (v12 >= v11 >> 1)
        sub_247C12A0C((_QWORD *)(v11 > 1), v12 + 1, 1);
      v13 = v87;
      v14 = v88;
      v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v85, v87);
      MEMORY[0x24BDAC7A8](v15);
      v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v18 + 16))(v17);
      sub_247C3C564(v12, (uint64_t)v17, (uint64_t *)&v76, v13, v14);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v85);
      v10 = (_QWORD *)v76;
      v9 += 80;
      --v7;
    }
    while (v7);
    v67 = v76;
    swift_bridgeObjectRelease();
    v5 = v72;
  }
  else
  {
    v67 = MEMORY[0x24BEE4AF8];
  }
  v85 = v8;
  sub_247C12A54(0, v5, 0);
  v20 = v72;
  v21 = 0;
  v75 = xmmword_247C3E1D0;
  do
  {
    if (v21 == v20)
    {
      __break(1u);
      JUMPOUT(0x247C366E4);
    }
    v74 = (_QWORD *)v21;
    v22 = *(_QWORD *)(v71 + 8 * v21);
    v23 = *(_QWORD *)(v22 + 16);
    if (v23)
    {
      v24 = v22 + 32;
      v73 = v22;
      swift_bridgeObjectRetain();
      v25 = v8;
      do
      {
        sub_247BFB458(v24, (uint64_t)&v80);
        __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v75;
        sub_247BFA88C((uint64_t)v84, inited + 32);
        v27 = v25[2];
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
        if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v29 = v25[3] >> 1, v30 = v25, v29 <= v27))
        {
          v30 = sub_247BFF3E4(isUniquelyReferenced_nonNull_native, v27 + 1, 1, v25);
          v29 = v30[3] >> 1;
        }
        if (v29 <= v30[2])
        {
          __break(1u);
          JUMPOUT(0x247C361A0);
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
        swift_arrayInitWithCopy();
        ++v30[2];
        swift_bridgeObjectRelease();
        sub_247BFB400((uint64_t)&v80);
        swift_bridgeObjectRelease();
        v24 += 80;
        v25 = v30;
        --v23;
      }
      while (v23);
      swift_bridgeObjectRelease();
      v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      v30 = v8;
    }
    v31 = v85;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_247C12A54(0, v31[2] + 1, 1);
      v31 = v85;
    }
    v20 = v72;
    v32 = v74;
    v34 = v31[2];
    v33 = v31[3];
    if (v34 >= v33 >> 1)
    {
      sub_247C12A54((_QWORD *)(v33 > 1), v34 + 1, 1);
      v20 = v72;
      v31 = v85;
    }
    v21 = (uint64_t)v32 + 1;
    v31[2] = v34 + 1;
    v31[v34 + 4] = v30;
  }
  while (v21 != v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455420);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_247C3F160;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  v37 = v36;
  *(_QWORD *)(v35 + 56) = v36;
  *(_QWORD *)(v35 + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v35 + 32) = 0x545245534E49;
  *(_QWORD *)(v35 + 40) = 0xE600000000000000;
  *(_QWORD *)(v35 + 48) = v8;
  if ((_DWORD)v66 != 5)
  {
    *(_QWORD *)&v80 = 2118223;
    *((_QWORD *)&v80 + 1) = 0xE300000000000000;
    __asm { BR              X9 }
  }
  *(_QWORD *)(v35 + 104) = 0;
  *(_OWORD *)(v35 + 72) = 0u;
  *(_OWORD *)(v35 + 88) = 0u;
  v38 = v70;
  v39 = v69;
  *(_QWORD *)(v35 + 136) = v36;
  *(_QWORD *)(v35 + 144) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v35 + 112) = 1330925129;
  *(_QWORD *)(v35 + 120) = 0xE400000000000000;
  *(_QWORD *)(v35 + 128) = v8;
  sub_247BF9730(0, v39, v38, (uint64_t *)(v35 + 152));
  *(_QWORD *)(v35 + 216) = v37;
  *(_QWORD *)(v35 + 224) = &protocol witness table for Expression<A>;
  sub_247BFECF4(v67, (uint64_t *)&v80);
  sub_247BFB3FC(&v80, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v35 + 256) = v37;
  *(_QWORD *)(v35 + 264) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v35 + 232) = 0x5345554C4156;
  *(_QWORD *)(v35 + 240) = 0xE600000000000000;
  v72 = v35;
  *(_QWORD *)(v35 + 248) = v8;
  v40 = v31[2];
  if (v40)
  {
    v79 = v8;
    sub_247C12A0C(0, v40, 0);
    v41 = 0;
    v42 = v79;
    v74 = v31;
    *(_QWORD *)&v75 = v37;
    v73 = v40;
    do
    {
      v43 = swift_bridgeObjectRetain();
      sub_247BFECF4(v43, (uint64_t *)&v80);
      *(_QWORD *)&v76 = 0;
      *((_QWORD *)&v76 + 1) = 0xE000000000000000;
      sub_247C3D840();
      v44 = v82;
      v45 = v83;
      __swift_project_boxed_opaque_existential_1(&v80, v82);
      v46 = (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD))v45[1];
      v46(&v85, v44, v45);
      swift_bridgeObjectRelease();
      sub_247C3D840();
      swift_bridgeObjectRelease();
      sub_247C3D840();
      v47 = v76;
      v46(&v85, v44, v45);
      v48 = *((_QWORD *)&v86 + 1);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_247C12A0C(0, v42[2] + 1, 1);
        v42 = v79;
      }
      v50 = v42[2];
      v49 = v42[3];
      v51 = v75;
      if (v50 >= v49 >> 1)
      {
        sub_247C12A0C((_QWORD *)(v49 > 1), v50 + 1, 1);
        v42 = v79;
      }
      ++v41;
      v82 = v51;
      v83 = &protocol witness table for Expression<A>;
      v80 = v47;
      v81 = v48;
      v42[2] = v50 + 1;
      sub_247BFECDC(&v80, (uint64_t)&v42[5 * v50 + 4]);
    }
    while (v73 != v41);
    swift_release();
    v38 = v70;
    v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    swift_release();
    v42 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v52 = v72;
  sub_247BFECF4((uint64_t)v42, (uint64_t *)(v72 + 272));
  swift_bridgeObjectRelease();
  sub_247BF8D50(v38, v52 + 312);
  v79 = v8;
  for (i = 32; i != 352; i += 40)
  {
    sub_247BFD054(v52 + i, (uint64_t)&v80, &qword_254455440);
    sub_247BFBCD8((uint64_t)&v80, (uint64_t)&v76, &qword_254455440);
    if (v77)
    {
      sub_247BFECDC(&v76, (uint64_t)&v85);
      sub_247BFECDC((__int128 *)&v85, (uint64_t)&v76);
      v54 = v79;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v54 = sub_247BFF3E4(0, v54[2] + 1, 1, v54);
        v79 = v54;
      }
      v56 = v54[2];
      v55 = v54[3];
      if (v56 >= v55 >> 1)
        v79 = sub_247BFF3E4((_QWORD *)(v55 > 1), v56 + 1, 1, v54);
      v57 = v77;
      v58 = v78;
      v59 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v76, v77);
      MEMORY[0x24BDAC7A8](v59);
      v61 = (char *)&v66 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v62 + 16))(v61);
      sub_247BFF3F8(v56, (uint64_t)v61, (uint64_t *)&v79, v57, v58);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v76);
    }
    else
    {
      sub_247BFC084((uint64_t)&v76, &qword_254455440);
    }
  }
  swift_bridgeObjectRelease();
  sub_247BFECF4((uint64_t)v79, (uint64_t *)&v80);
  swift_bridgeObjectRelease();
  v63 = v82;
  v64 = v83;
  __swift_project_boxed_opaque_existential_1(&v80, v82);
  ((void (*)(_QWORD **__return_ptr, uint64_t, _UNKNOWN **))v64[1])(&v85, v63, v64);
  v65 = v68;
  *v68 = v85;
  *(_OWORD *)(v65 + 1) = v86;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v80);
}

SwiftSQLite::Insert __swiftcall QueryType.insertMany(or:_:)(SwiftSQLite::OnConflict or, Swift::OpaquePointer _)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  SwiftSQLite::Insert result;

  v4 = sub_247C36710((char *)or, (uint64_t)_._rawValue, v2, v3, (uint64_t (*)(char *))sub_247C35C90);
  result.bindings._rawValue = v6;
  result.template._object = v5;
  result.template._countAndFlagsBits = v4;
  return result;
}

uint64_t QueryType.insertMany(or:_:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_247C36710(a1, a2, a3, a4, (uint64_t (*)(char *))sub_247C35C90);
}

uint64_t sub_247C36710(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  char v6;

  v6 = *a1;
  return a5(&v6);
}

uint64_t OnConflict.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_247C36768 + 4 * byte_247C3F194[*v0]))(0x4543414C504552, 0xE700000000000000);
}

uint64_t sub_247C36768()
{
  return 0x4B4341424C4C4F52;
}

uint64_t sub_247C36780()
{
  return 0x54524F4241;
}

uint64_t sub_247C36794()
{
  return 1279869254;
}

uint64_t sub_247C367A4()
{
  return 0x45524F4E4749;
}

SwiftSQLite::Insert __swiftcall QueryType.insert()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16[3];
  uint64_t v17;
  uint64_t v18;
  SwiftSQLite::Insert result;

  v3 = v1;
  v4 = v0;
  v5 = v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E140;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(inited + 56) = v7;
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 32) = 0x4920545245534E49;
  v8 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 40) = 0xEB000000004F544ELL;
  *(_QWORD *)(inited + 48) = v8;
  sub_247BF9730(0, v4, v3, (uint64_t *)(inited + 72));
  *(_QWORD *)(inited + 136) = v7;
  *(_QWORD *)(inited + 144) = &protocol witness table for Expression<A>;
  strcpy((char *)(inited + 112), "DEFAULT VALUES");
  *(_BYTE *)(inited + 127) = -18;
  *(_QWORD *)(inited + 128) = v8;
  sub_247BFECF4(inited, v16);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  v9 = v17;
  v10 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v10 + 8))(&v14, v9, v10);
  *(_QWORD *)v5 = v14;
  *(_OWORD *)(v5 + 8) = v15;
  v11 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  result.bindings._rawValue = v13;
  result.template._object = v12;
  result.template._countAndFlagsBits = v11;
  return result;
}

uint64_t QueryType.insert(_:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  __int128 v18;
  uint64_t v19[3];
  uint64_t v20;
  uint64_t v21;

  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E140;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(inited + 56) = v9;
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 32) = 0x4920545245534E49;
  v10 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 40) = 0xEB000000004F544ELL;
  *(_QWORD *)(inited + 48) = v10;
  sub_247BF9730(0, a2, a3, (uint64_t *)(inited + 72));
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = *(void (**)(uint64_t))(*(_QWORD *)(v12 + 8) + 8);
  *(_QWORD *)(inited + 136) = v9;
  *(_QWORD *)(inited + 144) = &protocol witness table for Expression<A>;
  v13(v11);
  sub_247BFECF4(inited, v19);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  v14 = v20;
  v15 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v15 + 8))(&v17, v14, v15);
  *(_QWORD *)a4 = v17;
  *(_OWORD *)(a4 + 8) = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t sub_247C36AB4(_QWORD *a1, _QWORD *a2)
{
  Swift::String v3;
  Swift::String v4;
  char v6;
  char v7;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v3 = Expressible.asSQL()();
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v4 = Expressible.asSQL()();
  if (v3._countAndFlagsBits == v4._countAndFlagsBits && v3._object == v4._object)
  {
    swift_bridgeObjectRelease_n();
    v7 = 0;
  }
  else
  {
    v6 = sub_247C3DAD4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v6 ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_247C36B8C(_QWORD *a1)
{
  uint64_t v1;

  return sub_247C36AB4(a1, *(_QWORD **)(v1 + 16)) & 1;
}

uint64_t sub_247C36BA8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_OWORD *);
  unint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t (*v11)(_OWORD *);
  unint64_t v12;
  unint64_t v13;
  _OWORD *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _OWORD v21[5];
  uint64_t v22;
  uint64_t v23;

  v4 = a3;
  v5 = MEMORY[0x24BEE4AF8];
  v22 = MEMORY[0x24BEE4AF8];
  v6 = *(_QWORD *)(a3 + 16);
  if (v6)
  {
    v7 = (uint64_t (*)(_OWORD *))result;
    v8 = 0;
    v9 = a3 + 32;
    v23 = a3;
    v15 = v6;
    while (v8 < *(_QWORD *)(v4 + 16))
    {
      sub_247BFB458(v9, (uint64_t)v21);
      v10 = v7(v21);
      if (v3)
      {
        sub_247BFB400((uint64_t)v21);
        swift_release();
        swift_bridgeObjectRelease();
        return v5;
      }
      if ((v10 & 1) != 0)
      {
        v11 = v7;
        v18 = v21[2];
        v19 = v21[3];
        v20 = v21[4];
        v16 = v21[0];
        v17 = v21[1];
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
          result = (uint64_t)sub_247C12AAC(0, *(_QWORD *)(v5 + 16) + 1, 1);
        v5 = v22;
        v13 = *(_QWORD *)(v22 + 16);
        v12 = *(_QWORD *)(v22 + 24);
        if (v13 >= v12 >> 1)
        {
          result = (uint64_t)sub_247C12AAC((char *)(v12 > 1), v13 + 1, 1);
          v5 = v22;
        }
        *(_QWORD *)(v5 + 16) = v13 + 1;
        v14 = (_OWORD *)(v5 + 80 * v13);
        v14[4] = v18;
        v14[5] = v19;
        v14[6] = v20;
        v14[2] = v16;
        v14[3] = v17;
        v7 = v11;
        v4 = v23;
        v6 = v15;
      }
      else
      {
        result = sub_247BFB400((uint64_t)v21);
      }
      ++v8;
      v9 += 80;
      if (v6 == v8)
        goto LABEL_13;
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t sub_247C36D50(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD *);
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;

  v4 = a3;
  v17 = *(_QWORD *)(a3 + 16);
  if (v17)
  {
    v5 = (uint64_t (*)(_QWORD *))result;
    v6 = 0;
    v7 = (uint64_t *)(a3 + 40);
    v8 = MEMORY[0x24BEE4AF8];
    v15 = (uint64_t (*)(_QWORD *))result;
    while (v6 < *(_QWORD *)(v4 + 16))
    {
      v10 = *(v7 - 1);
      v9 = *v7;
      v18[0] = v10;
      v18[1] = v9;
      swift_bridgeObjectRetain();
      v11 = v5(v18);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if ((v11 & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v19 = v8;
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_247C00908(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v19;
        }
        v13 = *(_QWORD *)(v8 + 16);
        v12 = *(_QWORD *)(v8 + 24);
        if (v13 >= v12 >> 1)
        {
          result = (uint64_t)sub_247C00908((char *)(v12 > 1), v13 + 1, 1);
          v8 = v19;
        }
        *(_QWORD *)(v8 + 16) = v13 + 1;
        v14 = v8 + 16 * v13;
        *(_QWORD *)(v14 + 32) = v10;
        *(_QWORD *)(v14 + 40) = v9;
        v4 = a3;
        v5 = v15;
      }
      else
      {
        result = swift_bridgeObjectRelease();
      }
      ++v6;
      v7 += 2;
      if (v17 == v6)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
    v8 = MEMORY[0x24BEE4AF8];
LABEL_16:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

_QWORD *QueryType.upsert(_:onConflictOf:set:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t inited;
  unint64_t v12;
  _QWORD *result;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t i;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _UNKNOWN **v45;
  _QWORD *v46;
  _QWORD v47[2];
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  _BYTE *v54;
  uint64_t v55;
  __int128 v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65[10];
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  _UNKNOWN **v69;
  _BYTE v70[48];

  v51 = a4;
  v52 = a5;
  v50 = a6;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v48 = a2;
  v49 = a3;
  if (v6)
  {
    v8 = a1 + 32;
    *(_QWORD *)&v53 = v70;
    v47[1] = a1;
    swift_bridgeObjectRetain();
    v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v56 = xmmword_247C3E1D0;
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
    while (1)
    {
      sub_247BFB458(v8, (uint64_t)&v66);
      __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v56;
      sub_247BFA88C((uint64_t)&v66, inited + 32);
      v12 = v10[2];
      swift_bridgeObjectRetain();
      result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
      if (!(_DWORD)result || (v14 = v10[3] >> 1, v15 = v10, v14 <= v12))
      {
        result = sub_247BFF3E4(result, v12 + 1, 1, v10);
        v15 = result;
        v14 = result[3] >> 1;
      }
      if (v14 <= v15[2])
        break;
      v54 = (_BYTE *)v6;
      v16 = (uint64_t)v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
      swift_arrayInitWithCopy();
      v17 = *(_QWORD *)(v16 + 16) + 1;
      v55 = v16;
      *(_QWORD *)(v16 + 16) = v17;
      swift_bridgeObjectRelease();
      v18 = swift_initStackObject();
      *(_OWORD *)(v18 + 16) = v56;
      sub_247BFA88C(v53, v18 + 32);
      v19 = v9[2];
      swift_bridgeObjectRetain();
      result = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
      if (!(_DWORD)result || (v20 = v9[3] >> 1, v21 = (uint64_t)v9, v20 <= v19))
      {
        result = sub_247BFF3E4(result, v19 + 1, 1, v9);
        v21 = (uint64_t)result;
        v20 = result[3] >> 1;
      }
      if (v20 <= *(_QWORD *)(v21 + 16))
        goto LABEL_34;
      swift_arrayInitWithCopy();
      ++*(_QWORD *)(v21 + 16);
      swift_bridgeObjectRelease();
      sub_247BFB400((uint64_t)&v66);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 += 80;
      v9 = (_QWORD *)v21;
      v10 = (_QWORD *)v55;
      v6 = (uint64_t)(v54 - 1);
      if (v54 == (_BYTE *)1)
      {
        v22 = v55;
        swift_bridgeObjectRelease();
        v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
  }
  else
  {
    v22 = MEMORY[0x24BEE4AF8];
    v21 = MEMORY[0x24BEE4AF8];
LABEL_14:
    __swift_instantiateConcreteTypeFromMangledName(&qword_254455420);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_247C3F170;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
    *(_QWORD *)(v23 + 32) = 0x545245534E49;
    *(_QWORD *)(v23 + 40) = 0xE600000000000000;
    *(_QWORD *)(v23 + 48) = v7;
    *(_QWORD *)(v23 + 56) = v24;
    *(_QWORD *)(v23 + 96) = v24;
    *(_QWORD *)(v23 + 104) = &protocol witness table for Expression<A>;
    *(_QWORD *)(v23 + 64) = &protocol witness table for Expression<A>;
    *(_QWORD *)(v23 + 72) = 1330925129;
    *(_QWORD *)(v23 + 80) = 0xE400000000000000;
    *(_QWORD *)(v23 + 88) = v7;
    sub_247BF9730(0, v51, v52, (uint64_t *)(v23 + 112));
    *(_QWORD *)(v23 + 176) = v24;
    *(_QWORD *)(v23 + 184) = &protocol witness table for Expression<A>;
    sub_247BFECF4(v22, &v66);
    sub_247BFB3FC(&v66, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
    *(_QWORD *)(v23 + 216) = v24;
    *(_QWORD *)(v23 + 224) = &protocol witness table for Expression<A>;
    *(_QWORD *)(v23 + 192) = 0x5345554C4156;
    *(_QWORD *)(v23 + 200) = 0xE600000000000000;
    *(_QWORD *)(v23 + 208) = v7;
    *(_QWORD *)(v23 + 256) = v24;
    *(_QWORD *)(v23 + 264) = &protocol witness table for Expression<A>;
    sub_247BFECF4(v21, &v66);
    sub_247BFB3FC(&v66, 0, 0xE000000000000000);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_247BF8D50(v52, v23 + 272);
    *(_QWORD *)(v23 + 336) = v24;
    *(_QWORD *)(v23 + 344) = &protocol witness table for Expression<A>;
    *(_QWORD *)(v23 + 312) = 0x4C464E4F43204E4FLL;
    *(_QWORD *)(v23 + 320) = 0xEB00000000544349;
    *(_QWORD *)(v23 + 328) = v7;
    *(_QWORD *)(v23 + 376) = v24;
    *(_QWORD *)(v23 + 384) = &protocol witness table for Expression<A>;
    sub_247BFB3FC(v48, 0, 0xE000000000000000);
    *(_QWORD *)(v23 + 416) = v24;
    *(_QWORD *)(v23 + 424) = &protocol witness table for Expression<A>;
    strcpy((char *)(v23 + 392), "DO UPDATE SET");
    *(_WORD *)(v23 + 406) = -4864;
    v55 = v24;
    *(_QWORD *)(v23 + 408) = v7;
    v25 = *(_QWORD *)(v49 + 16);
    if (v25)
    {
      v65[0] = (uint64_t)v7;
      sub_247C12A0C(0, v25, 0);
      v26 = v49 + 32;
      v54 = v70;
      v27 = (_QWORD *)v65[0];
      v53 = xmmword_247C3E1B0;
      do
      {
        sub_247BFB458(v26, (uint64_t)&v66);
        __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
        v28 = swift_initStackObject();
        *(_OWORD *)(v28 + 16) = v53;
        sub_247BFA88C((uint64_t)&v66, v28 + 32);
        sub_247BFA88C((uint64_t)v54, v28 + 72);
        sub_247BFECF4(v28, &v61);
        v30 = v63;
        v29 = v64;
        __swift_project_boxed_opaque_existential_1(&v61, v63);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v29 + 8))(&v57, v30, v29);
        v31 = v57;
        v56 = v58;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v61);
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
        swift_arrayDestroy();
        sub_247BFB400((uint64_t)&v66);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_247C12A0C(0, v27[2] + 1, 1);
          v27 = (_QWORD *)v65[0];
        }
        v33 = v27[2];
        v32 = v27[3];
        if (v33 >= v32 >> 1)
        {
          sub_247C12A0C((_QWORD *)(v32 > 1), v33 + 1, 1);
          v27 = (_QWORD *)v65[0];
        }
        v68 = v55;
        v69 = &protocol witness table for Expression<A>;
        v66 = v31;
        v67 = v56;
        v27[2] = v33 + 1;
        sub_247BFECDC((__int128 *)&v66, (uint64_t)&v27[5 * v33 + 4]);
        v26 += 80;
        --v25;
      }
      while (v25);
      v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      v27 = v7;
    }
    sub_247BFECF4((uint64_t)v27, (uint64_t *)(v23 + 432));
    swift_bridgeObjectRelease();
    v65[0] = (uint64_t)v7;
    for (i = 32; i != 472; i += 40)
    {
      sub_247BFD054(v23 + i, (uint64_t)&v66, &qword_254455440);
      sub_247BFBCD8((uint64_t)&v66, (uint64_t)&v57, &qword_254455440);
      if (v59)
      {
        sub_247BFECDC((__int128 *)&v57, (uint64_t)&v61);
        sub_247BFECDC((__int128 *)&v61, (uint64_t)&v57);
        v35 = (_QWORD *)v65[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v35 = sub_247BFF3E4(0, v35[2] + 1, 1, v35);
          v65[0] = (uint64_t)v35;
        }
        v37 = v35[2];
        v36 = v35[3];
        if (v37 >= v36 >> 1)
          v65[0] = (uint64_t)sub_247BFF3E4((_QWORD *)(v36 > 1), v37 + 1, 1, v35);
        v38 = v59;
        v39 = v60;
        v40 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v57, v59);
        MEMORY[0x24BDAC7A8](v40);
        v42 = (char *)v47 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v43 + 16))(v42);
        sub_247BFF3F8(v37, (uint64_t)v42, v65, v38, v39);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v57);
      }
      else
      {
        sub_247BFC084((uint64_t)&v57, &qword_254455440);
      }
    }
    swift_bridgeObjectRelease();
    sub_247BFECF4(v65[0], &v66);
    swift_bridgeObjectRelease();
    v44 = v68;
    v45 = v69;
    __swift_project_boxed_opaque_existential_1(&v66, v68);
    ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v45[1])(&v61, v44, v45);
    v46 = v50;
    *v50 = v61;
    *(_OWORD *)(v46 + 1) = v62;
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
  }
  return result;
}

SwiftSQLite::Delete __swiftcall QueryType.delete()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  _QWORD *v8;
  uint64_t i;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  _QWORD *v29;
  uint64_t v30[3];
  uint64_t v31;
  uint64_t v32;
  SwiftSQLite::Delete result;

  v3 = v1;
  v4 = v0;
  v5 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455420);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E160;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 32) = 0x46204554454C4544;
  *(_QWORD *)(inited + 40) = 0xEB000000004D4F52;
  v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(inited + 56) = v7;
  sub_247BF9730(0, v4, v3, (uint64_t *)(inited + 72));
  sub_247BF8D50(v3, inited + 112);
  sub_247C35458(v4, v3, inited + 152);
  sub_247C355C8(v3, inited + 192);
  v29 = v8;
  for (i = 32; i != 232; i += 40)
  {
    sub_247BFD054(inited + i, (uint64_t)v30, &qword_254455440);
    sub_247BFBCD8((uint64_t)v30, (uint64_t)&v24, &qword_254455440);
    if (v25)
    {
      sub_247BFECDC(&v24, (uint64_t)&v27);
      sub_247BFECDC((__int128 *)&v27, (uint64_t)&v24);
      v10 = v29;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v10 = sub_247BFF3E4(0, v10[2] + 1, 1, v10);
        v29 = v10;
      }
      v12 = v10[2];
      v11 = v10[3];
      if (v12 >= v11 >> 1)
        v29 = sub_247BFF3E4((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
      v13 = v25;
      v14 = v26;
      v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v24, v25);
      MEMORY[0x24BDAC7A8](v15);
      v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v18 + 16))(v17);
      sub_247BFF3F8(v12, (uint64_t)v17, (uint64_t *)&v29, v13, v14);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v24);
    }
    else
    {
      sub_247BFC084((uint64_t)&v24, &qword_254455440);
    }
  }
  swift_bridgeObjectRelease();
  sub_247BFECF4((uint64_t)v29, v30);
  swift_bridgeObjectRelease();
  v19 = v31;
  v20 = v32;
  __swift_project_boxed_opaque_existential_1(v30, v31);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v20 + 8))(&v27, v19, v20);
  *(_QWORD *)v5 = v27;
  *(_OWORD *)(v5 + 8) = v28;
  v21 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  result.bindings._rawValue = v23;
  result.template._object = v22;
  result.template._countAndFlagsBits = v21;
  return result;
}

uint64_t QueryType.exists.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t *__return_ptr, uint64_t);
  uint64_t v10;
  _UNKNOWN **v11;
  uint64_t v13;
  __int128 v14;
  uint64_t v15[3];
  uint64_t v16;
  _UNKNOWN **v17;

  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(inited + 56) = v7;
  *(_QWORD *)(inited + 64) = &protocol witness table for Expression<A>;
  strcpy((char *)(inited + 32), "SELECT EXISTS");
  v8 = MEMORY[0x24BEE4AF8];
  *(_WORD *)(inited + 46) = -4864;
  *(_QWORD *)(inited + 48) = v8;
  v9 = *(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(a2 + 8) + 8);
  v16 = v7;
  v17 = &protocol witness table for Expression<A>;
  v9(v15, a1);
  *(_QWORD *)(inited + 96) = v7;
  *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
  sub_247BFB3FC(v15, 0, 0xE000000000000000);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  sub_247BFECF4(inited, v15);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  v10 = v16;
  v11 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  ((void (*)(uint64_t *__return_ptr, uint64_t, _UNKNOWN **))v11[1])(&v13, v10, v11);
  *(_QWORD *)a3 = v13;
  *(_OWORD *)(a3 + 8) = v14;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

uint64_t QueryType.namespace<A>(_:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21[3];
  uint64_t v22;
  uint64_t v23;

  v7 = *a1;
  v6 = a1[1];
  v8 = a1[2];
  v9 = type metadata accessor for Expression(0, a3, a3, a4);
  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3E1B0;
  sub_247BF9730(0, a2, a4, (uint64_t *)(inited + 32));
  *(_QWORD *)(inited + 96) = v9;
  *(_QWORD *)(inited + 104) = &protocol witness table for Expression<A>;
  *(_QWORD *)(inited + 72) = v7;
  *(_QWORD *)(inited + 80) = v6;
  *(_QWORD *)(inited + 88) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFECF4(inited, v21);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455340);
  swift_arrayDestroy();
  v11 = v22;
  v12 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v12 + 8))(&v19, v11, v12);
  v17 = v19;
  v18 = v20;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  v14 = MEMORY[0x24958EDF4]("0.", v9);
  v15 = sub_247BFF268(&qword_254455300, &qword_254455438, (uint64_t)"0.");
  ExpressionType.init<A>(_:)((uint64_t)&v17, v9, v13, v14, v15);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

uint64_t QueryType.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  __int128 v6;

  v5 = *(_QWORD *)a1;
  v6 = *(_OWORD *)(a1 + 8);
  return QueryType.namespace<A>(_:)(&v5, a2, a3, a4);
}

{
  uint64_t v6;
  uint64_t v8;
  __int128 v9;

  v8 = *(_QWORD *)a1;
  v9 = *(_OWORD *)(a1 + 8);
  v6 = sub_247C3D9B4();
  return QueryType.namespace<A>(_:)(&v8, a2, v6, a4);
}

uint64_t QueryType.subscript.getter(void (*a1)(_QWORD *__return_ptr, uint64_t *, _QWORD *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[3];

  v8 = 0;
  v9 = 0;
  v10 = 0;
  memset(v7, 0, sizeof(v7));
  a1(v11, &v8, v7);
  v8 = v11[0];
  v9 = v11[1];
  v10 = v11[2];
  QueryType.namespace<A>(_:)(&v8, a3, MEMORY[0x24BEE4AE0] + 8, a4);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t QueryType.expression.getter(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t i;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21[2];
  _QWORD *v22;
  uint64_t v23[3];
  uint64_t v24;
  uint64_t v25;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254455420);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_247C3F150;
  sub_247C34BA8(a1, a2, (uint64_t *)(inited + 32));
  sub_247C34D54(a1, a2, inited + 72);
  sub_247BF8D50(a2, inited + 112);
  sub_247C351FC(a2, inited + 152);
  sub_247C357A0(a1, a2, inited + 192);
  sub_247C35458(a1, a2, inited + 232);
  sub_247C355C8(a2, inited + 272);
  v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
  for (i = 32; i != 312; i += 40)
  {
    sub_247BFD054(inited + i, (uint64_t)v23, &qword_254455440);
    sub_247BFBCD8((uint64_t)v23, (uint64_t)&v18, &qword_254455440);
    if (v19)
    {
      sub_247BFECDC(&v18, (uint64_t)v21);
      sub_247BFECDC(v21, (uint64_t)&v18);
      v6 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v6 = sub_247BFF3E4(0, v6[2] + 1, 1, v6);
        v22 = v6;
      }
      v8 = v6[2];
      v7 = v6[3];
      if (v8 >= v7 >> 1)
        v22 = sub_247BFF3E4((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
      v9 = v19;
      v10 = v20;
      v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v18, v19);
      MEMORY[0x24BDAC7A8](v11);
      v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v14 + 16))(v13);
      sub_247BFF3F8(v8, (uint64_t)v13, (uint64_t *)&v22, v9, v10);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
    }
    else
    {
      sub_247BFC084((uint64_t)&v18, &qword_254455440);
    }
  }
  swift_bridgeObjectRelease();
  sub_247BFECF4((uint64_t)v22, v23);
  swift_bridgeObjectRelease();
  v15 = v24;
  v16 = v25;
  __swift_project_boxed_opaque_existential_1(v23, v24);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
}

uint64_t static Table.identifier.getter()
{
  return 0x454C424154;
}

uint64_t (*Table.clauses.modify())()
{
  return nullsub_1;
}

uint64_t sub_247C38024()
{
  return 0x454C424154;
}

uint64_t static View.identifier.getter()
{
  return 1464158550;
}

uint64_t (*View.clauses.modify())()
{
  return nullsub_1;
}

uint64_t sub_247C3805C()
{
  return 1464158550;
}

uint64_t static VirtualTable.identifier.getter()
{
  return 0x204C415554524956;
}

_QWORD *VirtualTable.clauses.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[2];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  v2 = v1[7];
  v3 = v1[9];
  v24 = v1[8];
  v25 = v3;
  v4 = v1[3];
  v5 = v1[5];
  v20 = v1[4];
  v6 = v20;
  v21 = v5;
  v7 = v1[5];
  v8 = v1[7];
  v22 = v1[6];
  v9 = v22;
  v23 = v8;
  v10 = v1[1];
  v17[0] = *v1;
  v17[1] = v10;
  v11 = v1[3];
  v13 = *v1;
  v12 = v1[1];
  v18 = v1[2];
  v14 = v18;
  v19 = v11;
  v15 = v1[9];
  *(_OWORD *)(a1 + 128) = v24;
  *(_OWORD *)(a1 + 144) = v15;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v2;
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v12;
  v26 = *((_QWORD *)v1 + 20);
  *(_QWORD *)(a1 + 160) = *((_QWORD *)v1 + 20);
  *(_OWORD *)(a1 + 32) = v14;
  *(_OWORD *)(a1 + 48) = v4;
  return sub_247C3C60C(v17);
}

__n128 VirtualTable.clauses.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __n128 result;
  _OWORD v13[10];
  uint64_t v14;

  v3 = *(_OWORD *)(v1 + 144);
  v13[8] = *(_OWORD *)(v1 + 128);
  v13[9] = v3;
  v14 = *(_QWORD *)(v1 + 160);
  v4 = *(_OWORD *)(v1 + 80);
  v13[4] = *(_OWORD *)(v1 + 64);
  v13[5] = v4;
  v5 = *(_OWORD *)(v1 + 112);
  v13[6] = *(_OWORD *)(v1 + 96);
  v13[7] = v5;
  v6 = *(_OWORD *)(v1 + 16);
  v13[0] = *(_OWORD *)v1;
  v13[1] = v6;
  v7 = *(_OWORD *)(v1 + 48);
  v13[2] = *(_OWORD *)(v1 + 32);
  v13[3] = v7;
  sub_247C3C6DC(v13);
  v8 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v1 + 128) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v1 + 144) = v8;
  *(_QWORD *)(v1 + 160) = *(_QWORD *)(a1 + 160);
  v9 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 80) = v9;
  v10 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 112) = v10;
  v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v11;
  result = *(__n128 *)(a1 + 48);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)(a1 + 32);
  *(__n128 *)(v1 + 48) = result;
  return result;
}

uint64_t (*VirtualTable.clauses.modify())()
{
  return nullsub_1;
}

uint64_t sub_247C381B4()
{
  return 0x204C415554524956;
}

_QWORD *sub_247C381D8@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[2];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  v2 = v1[7];
  v3 = v1[9];
  v24 = v1[8];
  v25 = v3;
  v4 = v1[3];
  v5 = v1[5];
  v20 = v1[4];
  v6 = v20;
  v21 = v5;
  v7 = v1[5];
  v8 = v1[7];
  v22 = v1[6];
  v9 = v22;
  v23 = v8;
  v10 = v1[1];
  v17[0] = *v1;
  v17[1] = v10;
  v11 = v1[3];
  v13 = *v1;
  v12 = v1[1];
  v18 = v1[2];
  v14 = v18;
  v19 = v11;
  v15 = v1[9];
  *(_OWORD *)(a1 + 128) = v24;
  *(_OWORD *)(a1 + 144) = v15;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v2;
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v12;
  v26 = *((_QWORD *)v1 + 20);
  *(_QWORD *)(a1 + 160) = *((_QWORD *)v1 + 20);
  *(_OWORD *)(a1 + 32) = v14;
  *(_OWORD *)(a1 + 48) = v4;
  return sub_247C3C60C(v17);
}

__n128 sub_247C3825C(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __n128 result;
  _OWORD v13[10];
  uint64_t v14;

  v3 = *(_OWORD *)(v1 + 144);
  v13[8] = *(_OWORD *)(v1 + 128);
  v13[9] = v3;
  v14 = *(_QWORD *)(v1 + 160);
  v4 = *(_OWORD *)(v1 + 80);
  v13[4] = *(_OWORD *)(v1 + 64);
  v13[5] = v4;
  v5 = *(_OWORD *)(v1 + 112);
  v13[6] = *(_OWORD *)(v1 + 96);
  v13[7] = v5;
  v6 = *(_OWORD *)(v1 + 16);
  v13[0] = *(_OWORD *)v1;
  v13[1] = v6;
  v7 = *(_OWORD *)(v1 + 48);
  v13[2] = *(_OWORD *)(v1 + 32);
  v13[3] = v7;
  sub_247C3C6DC(v13);
  v8 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v1 + 128) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v1 + 144) = v8;
  *(_QWORD *)(v1 + 160) = *(_QWORD *)(a1 + 160);
  v9 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 80) = v9;
  v10 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 112) = v10;
  v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v11;
  result = *(__n128 *)(a1 + 48);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)(a1 + 32);
  *(__n128 *)(v1 + 48) = result;
  return result;
}

_QWORD *ScalarQuery.clauses.getter@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v17[2];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  v2 = v1[7];
  v3 = v1[9];
  v24 = v1[8];
  v25 = v3;
  v4 = v1[3];
  v5 = v1[5];
  v20 = v1[4];
  v6 = v20;
  v21 = v5;
  v7 = v1[5];
  v8 = v1[7];
  v22 = v1[6];
  v9 = v22;
  v23 = v8;
  v10 = v1[1];
  v17[0] = *v1;
  v17[1] = v10;
  v11 = v1[3];
  v13 = *v1;
  v12 = v1[1];
  v18 = v1[2];
  v14 = v18;
  v19 = v11;
  v15 = v1[9];
  *(_OWORD *)(a1 + 128) = v24;
  *(_OWORD *)(a1 + 144) = v15;
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = v2;
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v12;
  v26 = *((_QWORD *)v1 + 20);
  *(_QWORD *)(a1 + 160) = *((_QWORD *)v1 + 20);
  *(_OWORD *)(a1 + 32) = v14;
  *(_OWORD *)(a1 + 48) = v4;
  return sub_247C3C60C(v17);
}

__n128 ScalarQuery.clauses.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __n128 result;
  _OWORD v13[10];
  uint64_t v14;

  v3 = *(_OWORD *)(v1 + 144);
  v13[8] = *(_OWORD *)(v1 + 128);
  v13[9] = v3;
  v14 = *(_QWORD *)(v1 + 160);
  v4 = *(_OWORD *)(v1 + 80);
  v13[4] = *(_OWORD *)(v1 + 64);
  v13[5] = v4;
  v5 = *(_OWORD *)(v1 + 112);
  v13[6] = *(_OWORD *)(v1 + 96);
  v13[7] = v5;
  v6 = *(_OWORD *)(v1 + 16);
  v13[0] = *(_OWORD *)v1;
  v13[1] = v6;
  v7 = *(_OWORD *)(v1 + 48);
  v13[2] = *(_OWORD *)(v1 + 32);
  v13[3] = v7;
  sub_247C3C6DC(v13);
  v8 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v1 + 128) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v1 + 144) = v8;
  *(_QWORD *)(v1 + 160) = *(_QWORD *)(a1 + 160);
  v9 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 80) = v9;
  v10 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 112) = v10;
  v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v11;
  result = *(__n128 *)(a1 + 48);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)(a1 + 32);
  *(__n128 *)(v1 + 48) = result;
  return result;
}

uint64_t (*ScalarQuery.clauses.modify())()
{
  return nullsub_1;
}

double ScalarQuery.init(_:database:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;

  __swift_instantiateConcreteTypeFromMangledName(qword_254455398);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_247C3E1D0;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254455438);
  *(_QWORD *)(v10 + 64) = &protocol witness table for Expression<A>;
  *(_QWORD *)(v10 + 32) = 42;
  *(_QWORD *)(v10 + 40) = 0xE100000000000000;
  v12 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v10 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v10 + 56) = v11;
  *(_BYTE *)a5 = 0;
  *(_QWORD *)(a5 + 8) = v10;
  *(_QWORD *)(a5 + 16) = a1;
  *(_QWORD *)(a5 + 24) = a2;
  *(_QWORD *)(a5 + 32) = 0;
  *(_QWORD *)(a5 + 40) = 0;
  *(_QWORD *)(a5 + 48) = a3;
  *(_QWORD *)(a5 + 56) = a4;
  *(_QWORD *)(a5 + 64) = v12;
  result = 0.0;
  *(_OWORD *)(a5 + 72) = 0u;
  *(_OWORD *)(a5 + 88) = 0u;
  *(_OWORD *)(a5 + 104) = 0u;
  *(_QWORD *)(a5 + 120) = 0;
  *(_QWORD *)(a5 + 128) = v12;
  *(_QWORD *)(a5 + 136) = 0;
  *(_QWORD *)(a5 + 144) = 0;
  *(_WORD *)(a5 + 152) = 256;
  *(_QWORD *)(a5 + 160) = v12;
  return result;
}

void (*sub_247C384EC(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = ScalarQuery.clauses.modify();
  return sub_247C38530;
}

void sub_247C38530(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_247C38560(uint64_t a1)
{
  return QueryType.expression.getter(a1, (uint64_t)&protocol witness table for ScalarQuery<A>);
}

uint64_t Select.template.getter()
{
  uint64_t v0;

  v0 = sub_247BFD1D4();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t Select.template.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Select.template.modify())()
{
  return nullsub_1;
}

uint64_t Select.bindings.getter()
{
  sub_247BFD198();
  return swift_bridgeObjectRetain();
}

uint64_t Select.bindings.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*Select.bindings.modify())()
{
  return nullsub_1;
}

uint64_t Select.init(_:_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t (*Insert.template.modify())()
{
  return nullsub_1;
}

uint64_t (*Insert.bindings.modify())()
{
  return nullsub_1;
}

uint64_t (*Update.template.modify())()
{
  return nullsub_1;
}

uint64_t (*Update.bindings.modify())()
{
  return nullsub_1;
}

uint64_t Delete.template.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Delete.template.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Delete.template.modify())()
{
  return nullsub_1;
}

uint64_t Delete.bindings.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Delete.bindings.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*Delete.bindings.modify())()
{
  return nullsub_1;
}

SwiftSQLite::Delete __swiftcall Delete.init(_:_:)(Swift::String a1, Swift::OpaquePointer a2)
{
  uint64_t v2;
  SwiftSQLite::Delete result;

  *(Swift::String *)v2 = a1;
  *(Swift::OpaquePointer *)(v2 + 16) = a2;
  result.template = a1;
  result.bindings = a2;
  return result;
}

uint64_t sub_247C3873C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_247C38768()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_247C38770@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

SwiftSQLite::Row_optional __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> RowIterator.failableNext()()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  SwiftSQLite::Row_optional result;
  uint64_t v9[2];

  v2 = v0;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = Statement.step()();
  if (!v6)
  {
    if ((v4 & 1) != 0)
    {
      Statement.row.getter(v9);
      v7 = sub_247BFBAE4(v9[0], v9[1]);
      *v2 = v3;
      v2[1] = v7;
      v4 = swift_bridgeObjectRetain();
    }
    else
    {
      *v2 = 0;
      v2[1] = 0;
    }
  }
  result.value.values._rawValue = v5;
  result.value.columnNames._rawValue = (void *)v4;
  return result;
}

uint64_t RowIterator.map<A>(_:)(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::Bool v12;
  uint64_t v13;
  uint64_t v14;
  sqlite3_stmt *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  int v24;
  sqlite3_int64 v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  const void *v29;
  const void *v30;
  int v31;
  size_t v32;
  _QWORD *v33;
  size_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  const void *v42;
  BOOL v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  _QWORD v50[2];
  uint64_t v51;
  void (*v52)(_QWORD *);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  unint64_t v57;
  unint64_t v58;
  __int128 v59;
  __int128 v60;
  _UNKNOWN **v61;
  _QWORD v62[5];
  _QWORD v63[2];
  uint64_t v64;
  uint64_t v65;

  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v3;
  v11 = *(_QWORD *)(v10 + 8);
  v64 = sub_247C3D768();
  v54 = v9;
  v12 = Statement.step()();
  v14 = v13;
  if (!v13)
  {
    v50[0] = a3;
    v53 = a2;
    v52 = a1;
    v51 = v11;
    v50[1] = v8;
    while (1)
    {
      if (!v12)
        return v64;
      v55 = v14;
      Statement.row.getter(v63);
      v16 = (sqlite3_stmt *)v63[0];
      v17 = v63[1];
      v18 = swift_allocObject();
      *(_QWORD *)(v18 + 16) = 0;
      v19 = (uint64_t *)(v18 + 16);
      v65 = v18;
      swift_retain();
      swift_beginAccess();
      v20 = *v19;
      if (*v19 < v17)
      {
        v21 = 0;
        v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
        v23 = MEMORY[0x24BEE4AF8] + 32;
        while (2)
        {
          *v19 = v20 + 1;
          if (v20 < (uint64_t)0xFFFFFFFF80000000)
          {
            __break(1u);
          }
          else if (v20 <= 0x7FFFFFFF)
          {
            v24 = sqlite3_column_type(v16, v20);
            switch(v24)
            {
              case 1:
                v25 = sqlite3_column_int64(v16, v20);
                v61 = &protocol witness table for Int64;
                *((_QWORD *)&v60 + 1) = MEMORY[0x24BEE4008];
                *(_QWORD *)&v59 = v25;
                goto LABEL_24;
              case 2:
                v28 = sqlite3_column_double(v16, v20);
                *((_QWORD *)&v60 + 1) = MEMORY[0x24BEE13C8];
                v61 = &protocol witness table for Double;
                *(double *)&v59 = v28;
                goto LABEL_24;
              case 3:
                if (!sqlite3_column_text(v16, v20))
                  goto LABEL_52;
                v26 = sub_247C3D858();
                *((_QWORD *)&v60 + 1) = MEMORY[0x24BEE0D00];
                v61 = &protocol witness table for String;
                *(_QWORD *)&v59 = v26;
                *((_QWORD *)&v59 + 1) = v27;
LABEL_24:
                sub_247BFBCD8((uint64_t)&v59, (uint64_t)v62, &qword_254455448);
                if (v21)
                  goto LABEL_35;
                v35 = v22[3];
                if ((uint64_t)((v35 >> 1) + 0x4000000000000000) < 0)
                  goto LABEL_50;
                v36 = v35 & 0xFFFFFFFFFFFFFFFELL;
                if (v36 <= 1)
                  v37 = 1;
                else
                  v37 = v36;
                __swift_instantiateConcreteTypeFromMangledName(&qword_2544552D8);
                v38 = (_QWORD *)swift_allocObject();
                v39 = (uint64_t)(_swift_stdlib_malloc_size(v38) - 32) / 40;
                v38[2] = v37;
                v38[3] = 2 * v39;
                v40 = (unint64_t)(v38 + 4);
                v41 = v22[3] >> 1;
                if (v22[2])
                {
                  v42 = v22 + 4;
                  if (v38 != v22 || v40 >= (unint64_t)v42 + 40 * v41)
                    memmove(v38 + 4, v42, 40 * v41);
                  v22[2] = 0;
                }
                v23 = v40 + 40 * v41;
                v21 = (v39 & 0x7FFFFFFFFFFFFFFFLL) - v41;
                swift_release();
                v22 = v38;
LABEL_35:
                v43 = __OFSUB__(v21--, 1);
                if (v43)
                  goto LABEL_49;
                sub_247BFBCD8((uint64_t)v62, v23, &qword_254455448);
                v23 += 40;
                v20 = *v19;
                if (*v19 >= v17)
                  goto LABEL_39;
                continue;
              case 4:
                *((_QWORD *)&v60 + 1) = &type metadata for Blob;
                v61 = &protocol witness table for Blob;
                v29 = sqlite3_column_blob(v16, v20);
                if (v29)
                {
                  v30 = v29;
                  v31 = sqlite3_column_bytes(v16, v20);
                  if (v31)
                  {
                    v32 = v31;
                    if (v31 <= 0)
                    {
                      v33 = (_QWORD *)MEMORY[0x24BEE4AF8];
                    }
                    else
                    {
                      __swift_instantiateConcreteTypeFromMangledName(&qword_2544552E8);
                      v33 = (_QWORD *)swift_allocObject();
                      v34 = _swift_stdlib_malloc_size(v33);
                      v33[2] = v32;
                      v33[3] = 2 * v34 - 64;
                    }
                    memcpy(v33 + 4, v30, v32);
                  }
                  else
                  {
                    v33 = (_QWORD *)MEMORY[0x24BEE4AF8];
                  }
                  *(_QWORD *)&v59 = v33;
                }
                else
                {
                  *(_QWORD *)&v59 = MEMORY[0x24BEE4AF8];
                }
                goto LABEL_24;
              case 5:
                v61 = 0;
                v59 = 0u;
                v60 = 0u;
                goto LABEL_24;
              default:
                goto LABEL_53;
            }
          }
          break;
        }
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        v24 = swift_release();
        __break(1u);
LABEL_53:
        v49 = v24;
        swift_release();
        v57 = 0;
        v58 = 0xE000000000000000;
        sub_247C3D9E4();
        swift_bridgeObjectRelease();
        v57 = 0xD000000000000019;
        v58 = 0x8000000247C3F820;
        v56 = v49;
        sub_247C3DAC8();
        sub_247C3D840();
        swift_bridgeObjectRelease();
        sub_247C3DA68();
        __break(1u);
        JUMPOUT(0x247C38DC8);
      }
      v21 = 0;
      v22 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_39:
      swift_release_n();
      v44 = v22[3];
      if (v44 >= 2)
      {
        v45 = v44 >> 1;
        v43 = __OFSUB__(v45, v21);
        v46 = v45 - v21;
        if (v43)
          goto LABEL_51;
        v22[2] = v46;
      }
      v62[0] = v51;
      v62[1] = v22;
      swift_bridgeObjectRetain();
      v47 = v55;
      v52(v62);
      if (v47)
        break;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_247C3D918();
      sub_247C3D900();
      v12 = Statement.step()();
      v14 = v48;
      if (v48)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C38DDC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7[2];

  v3 = *(_QWORD *)(v1 + 8);
  result = Statement.step()();
  if (!v5)
  {
    if ((result & 1) != 0)
    {
      Statement.row.getter(v7);
      v6 = sub_247BFBAE4(v7[0], v7[1]);
      *a1 = v3;
      a1[1] = v6;
      return swift_bridgeObjectRetain();
    }
    else
    {
      *a1 = 0;
      a1[1] = 0;
    }
  }
  return result;
}

uint64_t sub_247C38E4C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7[3];

  v3 = *(_QWORD *)(v1 + 8);
  result = Statement.step()();
  if (v5)
  {
    result = MEMORY[0x24958ED7C](v5);
  }
  else if ((result & 1) != 0)
  {
    Statement.row.getter(v7);
    v6 = sub_247BFBAE4(v7[0], v7[1]);
    *a1 = v3;
    a1[1] = v6;
    return swift_bridgeObjectRetain();
  }
  *a1 = 0;
  a1[1] = 0;
  return result;
}

uint64_t Connection.prepareRowIterator(_:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  _QWORD v12[3];

  v4 = v2;
  v8 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(v7 + 8) + 8))(v12, v8);
  v9 = v12[2];
  type metadata accessor for Statement();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_247C17F4C(v4);
  if (v3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v11 = sub_247C00BBC(v9);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    result = sub_247BFDCA0(a1);
    *a2 = v11;
    a2[1] = result;
  }
  return result;
}

uint64_t sub_247C38FF8@<X0>(_QWORD *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  _QWORD v11[2];
  uint64_t v12[3];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = a1[3];
  v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  sub_247BF9730(0, v3, v4, v12);
  v5 = v13;
  v6 = v14;
  __swift_project_boxed_opaque_existential_1(v12, v13);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v6 + 8))(v11, v5, v6);
  v7 = v11[0];
  v8 = v11[1];
  swift_bridgeObjectRelease();
  v15 = v7;
  v16 = v8;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  sub_247C3D840();
  result = sub_247C3D840();
  v10 = v16;
  *a2 = v15;
  a2[1] = v10;
  return result;
}

uint64_t Connection.scalar<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  sqlite3_stmt *v15;
  uint64_t v16;
  uint64_t v18;
  _OWORD v19[10];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v8 = *(_OWORD *)(a1 + 144);
  v19[8] = *(_OWORD *)(a1 + 128);
  v19[9] = v8;
  v20 = *(_QWORD *)(a1 + 160);
  v9 = *(_OWORD *)(a1 + 80);
  v19[4] = *(_OWORD *)(a1 + 64);
  v19[5] = v9;
  v10 = *(_OWORD *)(a1 + 112);
  v19[6] = *(_OWORD *)(a1 + 96);
  v19[7] = v10;
  v11 = *(_OWORD *)(a1 + 16);
  v19[0] = *(_OWORD *)a1;
  v19[1] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v19[2] = *(_OWORD *)(a1 + 32);
  v19[3] = v12;
  v13 = type metadata accessor for ScalarQuery(0, a2, a3, a4);
  QueryType.expression.getter(v13, (uint64_t)&protocol witness table for ScalarQuery<A>);
  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_247C17F4C(v4);
  if (v5)
    goto LABEL_4;
  v14 = sub_247C00BBC(v21);
  swift_beginAccess();
  v15 = *(sqlite3_stmt **)(v14 + 16);
  swift_retain();
  sqlite3_reset(v15);
  Statement.step()();
  if (v16)
  {
    swift_release();
    swift_release();
LABEL_4:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  Statement.row.getter(&v18);
  Cursor.subscript.getter(0, (uint64_t)v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_247C100CC((uint64_t)v19, a2, a3);
  return sub_247BFC084((uint64_t)v19, &qword_254455448);
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  sqlite3_stmt *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15[6];
  __int128 v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  v15[5] = *(_QWORD *)a1;
  v16 = *(_OWORD *)(a1 + 8);
  v8 = type metadata accessor for Select(0, a2, a3, a4);
  ExpressionType.expression.getter(v8, (uint64_t)&protocol witness table for Select<A>, v15);
  v9 = v15[2];
  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_247C17F4C(v4);
  if (v5)
    goto LABEL_4;
  v10 = sub_247C00BBC(v9);
  swift_beginAccess();
  v11 = *(sqlite3_stmt **)(v10 + 16);
  swift_retain();
  sqlite3_reset(v11);
  Statement.step()();
  if (v12)
  {
    swift_release();
    swift_release();
LABEL_4:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  Statement.row.getter(&v14);
  Cursor.subscript.getter(0, (uint64_t)v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_247C100CC((uint64_t)v15, a2, a3);
  return sub_247BFC084((uint64_t)v15, &qword_254455448);
}

uint64_t Connection.scalar<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  sqlite3_stmt *v28;
  uint64_t v29;
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[11];
  _OWORD v50[10];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v5 = v4;
  v44 = a4;
  v53 = *MEMORY[0x24BDAC8D0];
  v43 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = sub_247C3D9B4();
  v41 = *(_QWORD *)(v9 - 8);
  v42 = v9;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v45 = (char *)&v38 - v11;
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v38 - v13;
  v15 = *(_OWORD *)(a1 + 144);
  v50[8] = *(_OWORD *)(a1 + 128);
  v50[9] = v15;
  v51 = *(_QWORD *)(a1 + 160);
  v16 = *(_OWORD *)(a1 + 80);
  v50[4] = *(_OWORD *)(a1 + 64);
  v50[5] = v16;
  v17 = *(_OWORD *)(a1 + 112);
  v50[6] = *(_OWORD *)(a1 + 96);
  v50[7] = v17;
  v18 = *(_OWORD *)(a1 + 16);
  v50[0] = *(_OWORD *)a1;
  v50[1] = v18;
  v19 = *(_OWORD *)(a1 + 48);
  v50[2] = *(_OWORD *)(a1 + 32);
  v50[3] = v19;
  v20 = sub_247C3D9B4();
  v23 = type metadata accessor for ScalarQuery(0, v20, v21, v22);
  QueryType.expression.getter(v23, (uint64_t)&protocol witness table for ScalarQuery<A>);
  v24 = v52;
  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  v25 = v46;
  sub_247C17F4C(v5);
  if (v25)
    goto LABEL_4;
  v39 = v14;
  v40 = AssociatedTypeWitness;
  v46 = a2;
  v26 = v45;
  v27 = sub_247C00BBC(v24);
  swift_beginAccess();
  v28 = *(sqlite3_stmt **)(v27 + 16);
  swift_retain();
  sqlite3_reset(v28);
  Statement.step()();
  if (v29)
  {
    swift_release();
    swift_release();
LABEL_4:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  Statement.row.getter(v49);
  v47 = v49[0];
  v48 = v49[1];
  Cursor.subscript.getter(0, (uint64_t)v50);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
  v31 = v40;
  v32 = swift_dynamicCast();
  v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if ((v32 & 1) != 0)
  {
    v33(v26, 0, 1, v31);
    v34 = v39;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v39, v26, v31);
    v35 = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 48))(v34, v46, v43);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v34, v31);
    v36 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 0, 1, v36);
  }
  else
  {
    v33(v26, 1, 1, v31);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v26, v42);
    v37 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v44, 1, 1, v37);
  }
}

{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  sqlite3_stmt *v21;
  uint64_t v22;
  char *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  uint64_t v45[6];
  __int128 v46;
  uint64_t v47;

  v40 = a4;
  v47 = *MEMORY[0x24BDAC8D0];
  v39 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v38 = sub_247C3D9B4();
  v37 = *(_QWORD *)(v38 - 8);
  v8 = MEMORY[0x24BDAC7A8](v38);
  v10 = (char *)&v33 - v9;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v33 - v12;
  v45[5] = *(_QWORD *)a1;
  v46 = *(_OWORD *)(a1 + 8);
  v14 = sub_247C3D9B4();
  v17 = type metadata accessor for Select(0, v14, v15, v16);
  ExpressionType.expression.getter(v17, (uint64_t)&protocol witness table for Select<A>, v45);
  v18 = v45[2];
  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  v19 = v41;
  sub_247C17F4C(v4);
  if (v19)
    goto LABEL_4;
  v34 = v13;
  v35 = a2;
  v36 = v10;
  v41 = v11;
  v20 = sub_247C00BBC(v18);
  swift_beginAccess();
  v21 = *(sqlite3_stmt **)(v20 + 16);
  swift_retain();
  sqlite3_reset(v21);
  Statement.step()();
  if (v22)
  {
    swift_release();
    swift_release();
LABEL_4:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  Statement.row.getter(v44);
  v42 = v44[0];
  v43 = v44[1];
  Cursor.subscript.getter(0, (uint64_t)v45);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455448);
  v24 = v36;
  v25 = AssociatedTypeWitness;
  v26 = swift_dynamicCast();
  v27 = v41;
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
  if ((v26 & 1) != 0)
  {
    v28(v24, 0, 1, AssociatedTypeWitness);
    v29 = v34;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v34, v24, v25);
    v30 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 48))(v29, v35, v39);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v25);
    v31 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 0, 1, v31);
  }
  else
  {
    v28(v24, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v38);
    v32 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v40, 1, 1, v32);
  }
}

uint64_t Connection.pluck(_:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void (*v13)(uint64_t *, _QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  Swift::Bool v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[5];
  _QWORD v22[19];
  char v23;
  char v24;
  uint64_t v25[6];

  v4 = v2;
  v25[4] = *MEMORY[0x24BDAC8D0];
  v7 = a1[3];
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v10 + 16))(v22, v9, v10);
  sub_247C3C6DC(v22);
  if (v24)
    v11 = 0;
  else
    v11 = v22[18];
  v12 = v24 | v23;
  v21[3] = v7;
  v21[4] = v8;
  __swift_allocate_boxed_opaque_existential_1(v21);
  (*(void (**)(void))(*(_QWORD *)(v7 - 8) + 16))();
  v13 = (void (*)(uint64_t *, _QWORD))(*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v8 + 32))(v25, v7, v8);
  *(_QWORD *)(v14 + 136) = 1;
  *(_QWORD *)(v14 + 144) = v11;
  *(_BYTE *)(v14 + 152) = v12 & 1;
  *(_BYTE *)(v14 + 153) = 0;
  v13(v25, 0);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(_QWORD *)(v8 + 8) + 8))(v25, v7);
  v15 = v25[2];
  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_247C17F4C(v4);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  else
  {
    sub_247C00BBC(v15);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    v17 = sub_247BFDCA0(v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    v18 = Statement.step()();
    if (v19)
    {
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      if (v18)
      {
        Statement.row.getter(v25);
        v20 = sub_247BFBAE4(v25[0], v25[1]);
      }
      else
      {
        swift_bridgeObjectRelease();
        v17 = 0;
        v20 = 0;
      }
      result = swift_release();
      *a2 = v17;
      a2[1] = v20;
    }
  }
  return result;
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Connection.run(_:)(SwiftSQLite::Update a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Int result;
  id v9;
  int v10;
  Swift::Int v11;
  uint64_t v12;
  char v13;

  v3 = v2;
  v4 = *(_QWORD *)(a1.template._countAndFlagsBits + 16);
  sub_247BFBA84();
  v5 = qword_254455430;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 != -1)
    swift_once();
  sub_247C3D978();
  v6 = sub_247BFBAC0();
  if ((v13 & 1) != 0 || v12 != v6)
  {
    v9 = *(id *)(v1 + 88);
    sub_247C3D99C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (!v3)
      return v11;
  }
  else
  {
    type metadata accessor for Statement();
    swift_initStackObject();
    swift_bridgeObjectRetain();
    v7 = swift_retain();
    sub_247C17F4C(v7);
    if (v3)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      Statement.run(_:)(v4);
      swift_release();
      swift_release();
      swift_beginAccess();
      result = *(_QWORD *)(v1 + 16);
      if (result)
      {
        v10 = sqlite3_changes((sqlite3 *)result);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v10;
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

Swift::Int __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Connection.run(_:)(SwiftSQLite::Delete a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  Swift::Int result;
  id v9;
  int v10;
  Swift::Int v11;
  uint64_t v12;
  char v13;

  v3 = v2;
  v4 = *(_QWORD *)(a1.template._countAndFlagsBits + 16);
  sub_247BFBA84();
  v5 = qword_254455430;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 != -1)
    swift_once();
  sub_247C3D978();
  v6 = sub_247BFBAC0();
  if ((v13 & 1) != 0 || v12 != v6)
  {
    v9 = *(id *)(v1 + 88);
    sub_247C3D99C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (!v3)
      return v11;
  }
  else
  {
    type metadata accessor for Statement();
    swift_initStackObject();
    swift_bridgeObjectRetain();
    v7 = swift_retain();
    sub_247C17F4C(v7);
    if (v3)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      Statement.run(_:)(v4);
      swift_release();
      swift_release();
      swift_beginAccess();
      result = *(_QWORD *)(v1 + 16);
      if (result)
      {
        v10 = sqlite3_changes((sqlite3 *)result);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v10;
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

sqlite3 *sub_247C3A2C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  sqlite3 *result;

  type metadata accessor for Statement();
  swift_initStackObject();
  swift_retain();
  swift_bridgeObjectRetain();
  result = sub_247C17F4C(a1);
  if (!v3)
  {
    Statement.run(_:)(a2);
    swift_release();
    swift_release();
    swift_beginAccess();
    result = *(sqlite3 **)(a1 + 16);
    if (result)
    {
      result = (sqlite3 *)sqlite3_changes(result);
      *a3 = (int)result;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_247C3A3DC()
{
  char v0;

  swift_bridgeObjectRetain();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  v0 = sub_247C3D870();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

SwiftSQLite::JoinType_optional __swiftcall JoinType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SwiftSQLite::JoinType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_247C3DA98();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_247C3A4C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_247C32A14(*a1, *a2);
}

uint64_t sub_247C3A4D4()
{
  sub_247C3DB88();
  sub_247C3D81C();
  swift_bridgeObjectRelease();
  return sub_247C3DBA0();
}

uint64_t sub_247C3A570()
{
  sub_247C3D81C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_247C3A5E8()
{
  sub_247C3DB88();
  sub_247C3D81C();
  swift_bridgeObjectRelease();
  return sub_247C3DBA0();
}

SwiftSQLite::JoinType_optional sub_247C3A680(Swift::String *a1)
{
  return JoinType.init(rawValue:)(*a1);
}

void sub_247C3A68C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xE500000000000000;
  v5 = 0x52454E4E49;
  if (v2 != 1)
  {
    v5 = 0x54554F205446454CLL;
    v4 = 0xEA00000000005245;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x53534F5243;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

SwiftSQLite::OnConflict_optional __swiftcall OnConflict.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  SwiftSQLite::OnConflict_optional result;
  char v5;

  v2 = v1;
  v3 = sub_247C3DA98();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_247C3A740(char *a1)
{
  sub_247C32CCC(*a1);
}

void sub_247C3A74C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_247C3DB88();
  __asm { BR              X9 }
}

uint64_t sub_247C3A798()
{
  sub_247C3D81C();
  swift_bridgeObjectRelease();
  return sub_247C3DBA0();
}

void sub_247C3A810()
{
  __asm { BR              X10 }
}

uint64_t sub_247C3A84C()
{
  sub_247C3D81C();
  return swift_bridgeObjectRelease();
}

void sub_247C3A8B0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_247C3DB88();
  __asm { BR              X9 }
}

uint64_t sub_247C3A8F8()
{
  sub_247C3D81C();
  swift_bridgeObjectRelease();
  return sub_247C3DBA0();
}

SwiftSQLite::OnConflict_optional sub_247C3A970(Swift::String *a1)
{
  return OnConflict.init(rawValue:)(*a1);
}

uint64_t sub_247C3A97C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_247C3A9AC + 4 * byte_247C3F1A8[*v0]))();
}

void sub_247C3A9AC(_QWORD *a1@<X8>)
{
  *a1 = 0x4B4341424C4C4F52;
  a1[1] = 0xE800000000000000;
}

void sub_247C3A9C8(_QWORD *a1@<X8>)
{
  *a1 = 0x54524F4241;
  a1[1] = 0xE500000000000000;
}

void sub_247C3A9E0(_QWORD *a1@<X8>)
{
  *a1 = 1279869254;
  a1[1] = 0xE400000000000000;
}

void sub_247C3A9F4(_QWORD *a1@<X8>)
{
  *a1 = 0x45524F4E4749;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_247C3AA0C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED460);
  result = sub_247C3DA80();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    v33 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v34 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v34)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v34)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v34)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v33 >= 64)
                  bzero((void *)(v5 + 64), 8 * v34);
                else
                  *v9 = v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v34)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(v5 + 56);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v31 = *(_QWORD *)(v29 + v28);
      if ((a2 & 1) == 0)
        _Block_copy(*(const void **)(v29 + v28));
      result = sub_247C3DB7C();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v30;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v31;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_247C3ACC0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2576ED660);
  v36 = a2;
  v6 = sub_247C3DA80();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_247C3DB88();
    sub_247C3D81C();
    result = sub_247C3DBA0();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_247C3AFD4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  const void *v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED658);
  v36 = a2;
  v6 = sub_247C3DA80();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(const void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      _Block_copy(v32);
    }
    sub_247C3DB88();
    sub_247C3D81C();
    result = sub_247C3DBA0();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

void *sub_247C3B2E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  const void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED460);
  v2 = *v0;
  v3 = sub_247C3DA74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(const void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = _Block_copy(v17);
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_247C3B488()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2576ED660);
  v2 = *v0;
  v3 = sub_247C3DA74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_247C3B63C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  const void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED658);
  v2 = *v0;
  v3 = sub_247C3DA74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(const void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = _Block_copy(v20);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_247C3B7F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254455468);
  v2 = *v0;
  v3 = sub_247C3DA74();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_247C3B99C(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

unint64_t sub_247C3B9E4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_247C3BA2C(char **a1)
{
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_247C3C53C((uint64_t)v2);
  v3 = *((_QWORD *)v2 + 2);
  v5[0] = (uint64_t)(v2 + 32);
  v5[1] = v3;
  result = sub_247C3BA94(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_247C3BA94(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  int v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  unint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  char v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  unint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;

  v3 = a1[1];
  result = sub_247C3DABC();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_247C3C138(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_151;
  v101 = result;
  v98 = a1;
  if (v3 <= 1)
  {
    v7 = MEMORY[0x24BEE4AF8];
    v104 = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v10 = MEMORY[0x24BEE4AF8];
LABEL_117:
      result = v10;
      v100 = v7;
      if (v11 >= 2)
      {
        v91 = *v98;
        do
        {
          v92 = v11 - 2;
          if (v11 < 2)
            goto LABEL_146;
          if (!v91)
            goto LABEL_159;
          v93 = result;
          v94 = *(_QWORD *)(result + 32 + 16 * v92);
          v95 = *(_QWORD *)(result + 32 + 16 * (v11 - 1) + 8);
          result = sub_247C3C204((char *)(v91 + 16 * v94), (char *)(v91 + 16 * *(_QWORD *)(result + 32 + 16 * (v11 - 1))), v91 + 16 * v95, v104);
          if (v1)
            break;
          if (v95 < v94)
            goto LABEL_147;
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = (uint64_t)sub_247C3C528(v93);
            v93 = result;
          }
          if (v92 >= *(_QWORD *)(v93 + 16))
            goto LABEL_148;
          v96 = (_QWORD *)(v93 + 32 + 16 * v92);
          *v96 = v94;
          v96[1] = v95;
          v97 = *(_QWORD *)(v93 + 16);
          if (v11 > v97)
            goto LABEL_149;
          memmove((void *)(v93 + 32 + 16 * (v11 - 1)), (const void *)(v93 + 32 + 16 * v11), 16 * (v97 - v11));
          result = v93;
          *(_QWORD *)(v93 + 16) = v97 - 1;
          v11 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v100 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v100 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    result = sub_247C3D8E8();
    *(_QWORD *)(result + 16) = v6;
    v100 = result;
    v104 = (char *)(result + 32);
  }
  v8 = 0;
  v9 = *a1;
  v99 = v9 + 8;
  v10 = MEMORY[0x24BEE4AF8];
  v102 = v3;
  while (1)
  {
    v12 = v8++;
    if (v8 >= v3)
      goto LABEL_45;
    v13 = (uint64_t *)(v9 + 16 * v8);
    result = *v13;
    v14 = v13[1];
    v15 = (_QWORD *)(v9 + 16 * v12);
    if (result == *v15 && v14 == v15[1])
    {
      v18 = v12 + 2;
      if (v12 + 2 >= v3)
        goto LABEL_44;
      v17 = 0;
    }
    else
    {
      result = sub_247C3DAD4();
      v17 = result;
      v18 = v12 + 2;
      if (v12 + 2 >= v3)
        goto LABEL_36;
    }
    v19 = (_QWORD *)(v99 + 16 * v18);
    do
    {
      result = *(v19 - 1);
      v21 = (_QWORD *)(v9 + 16 * v8);
      if (result == *v21 && *v19 == v21[1])
      {
        if ((v17 & 1) != 0)
          goto LABEL_37;
      }
      else
      {
        result = sub_247C3DAD4();
        if (((v17 ^ result) & 1) != 0)
          goto LABEL_36;
      }
      v19 += 2;
      v20 = v18 + 1;
      v8 = v18;
      v18 = v20;
    }
    while (v20 < v3);
    v18 = v20;
LABEL_36:
    v8 = v18;
    if ((v17 & 1) != 0)
    {
LABEL_37:
      if (v18 < v12)
        goto LABEL_155;
      if (v12 < v18)
      {
        v23 = 16 * v18;
        v24 = 16 * v12;
        v25 = v18;
        v26 = v12;
        do
        {
          if (v26 != --v25)
          {
            if (!v9)
              goto LABEL_158;
            v27 = v9 + v23;
            v28 = *(_QWORD *)(v9 + v24);
            v29 = *(_QWORD *)(v9 + v24 + 8);
            *(_OWORD *)(v9 + v24) = *(_OWORD *)(v9 + v23 - 16);
            *(_QWORD *)(v27 - 16) = v28;
            *(_QWORD *)(v27 - 8) = v29;
          }
          ++v26;
          v23 -= 16;
          v24 += 16;
        }
        while (v26 < v25);
      }
LABEL_44:
      v8 = v18;
    }
LABEL_45:
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v12))
        goto LABEL_150;
      if (v8 - v12 < v101)
        break;
    }
LABEL_66:
    if (v8 < v12)
      goto LABEL_145;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_247C3C430(0, *(_QWORD *)(v10 + 16) + 1, 1, (char *)v10);
      v10 = result;
    }
    v38 = *(_QWORD *)(v10 + 16);
    v37 = *(_QWORD *)(v10 + 24);
    v11 = v38 + 1;
    if (v38 >= v37 >> 1)
    {
      result = (uint64_t)sub_247C3C430((char *)(v37 > 1), v38 + 1, 1, (char *)v10);
      v10 = result;
    }
    *(_QWORD *)(v10 + 16) = v11;
    v39 = v10 + 32;
    v40 = (uint64_t *)(v10 + 32 + 16 * v38);
    *v40 = v12;
    v40[1] = v8;
    if (v38)
    {
      v103 = v8;
      while (1)
      {
        v41 = v11 - 1;
        if (v11 >= 4)
        {
          v46 = v39 + 16 * v11;
          v47 = *(_QWORD *)(v46 - 64);
          v48 = *(_QWORD *)(v46 - 56);
          v52 = __OFSUB__(v48, v47);
          v49 = v48 - v47;
          if (v52)
            goto LABEL_134;
          v51 = *(_QWORD *)(v46 - 48);
          v50 = *(_QWORD *)(v46 - 40);
          v52 = __OFSUB__(v50, v51);
          v44 = v50 - v51;
          v45 = v52;
          if (v52)
            goto LABEL_135;
          v53 = v11 - 2;
          v54 = (uint64_t *)(v39 + 16 * (v11 - 2));
          v56 = *v54;
          v55 = v54[1];
          v52 = __OFSUB__(v55, v56);
          v57 = v55 - v56;
          if (v52)
            goto LABEL_136;
          v52 = __OFADD__(v44, v57);
          v58 = v44 + v57;
          if (v52)
            goto LABEL_138;
          if (v58 >= v49)
          {
            v76 = (uint64_t *)(v39 + 16 * v41);
            v78 = *v76;
            v77 = v76[1];
            v52 = __OFSUB__(v77, v78);
            v79 = v77 - v78;
            if (v52)
              goto LABEL_144;
            v69 = v44 < v79;
            goto LABEL_104;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v70 = *(_QWORD *)(v10 + 32);
            v71 = *(_QWORD *)(v10 + 40);
            v52 = __OFSUB__(v71, v70);
            v63 = v71 - v70;
            v64 = v52;
            goto LABEL_98;
          }
          v43 = *(_QWORD *)(v10 + 32);
          v42 = *(_QWORD *)(v10 + 40);
          v52 = __OFSUB__(v42, v43);
          v44 = v42 - v43;
          v45 = v52;
        }
        if ((v45 & 1) != 0)
          goto LABEL_137;
        v53 = v11 - 2;
        v59 = (uint64_t *)(v39 + 16 * (v11 - 2));
        v61 = *v59;
        v60 = v59[1];
        v62 = __OFSUB__(v60, v61);
        v63 = v60 - v61;
        v64 = v62;
        if (v62)
          goto LABEL_139;
        v65 = (uint64_t *)(v39 + 16 * v41);
        v67 = *v65;
        v66 = v65[1];
        v52 = __OFSUB__(v66, v67);
        v68 = v66 - v67;
        if (v52)
          goto LABEL_141;
        if (__OFADD__(v63, v68))
          goto LABEL_143;
        if (v63 + v68 >= v44)
        {
          v69 = v44 < v68;
LABEL_104:
          if (v69)
            v41 = v53;
          goto LABEL_106;
        }
LABEL_98:
        if ((v64 & 1) != 0)
          goto LABEL_140;
        v72 = (uint64_t *)(v39 + 16 * v41);
        v74 = *v72;
        v73 = v72[1];
        v52 = __OFSUB__(v73, v74);
        v75 = v73 - v74;
        if (v52)
          goto LABEL_142;
        if (v75 < v63)
          goto LABEL_15;
LABEL_106:
        v80 = v41 - 1;
        if (v41 - 1 >= v11)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v81 = v9;
        if (!v9)
          goto LABEL_157;
        v82 = v10;
        v83 = (uint64_t *)(v39 + 16 * v80);
        v84 = *v83;
        v85 = v39;
        v86 = v41;
        v87 = (_QWORD *)(v39 + 16 * v41);
        v88 = v87[1];
        v89 = v81;
        result = sub_247C3C204((char *)(v81 + 16 * *v83), (char *)(v81 + 16 * *v87), v81 + 16 * v88, v104);
        if (v1)
          goto LABEL_114;
        if (v88 < v84)
          goto LABEL_131;
        if (v86 > *(_QWORD *)(v82 + 16))
          goto LABEL_132;
        *v83 = v84;
        *(_QWORD *)(v85 + 16 * v80 + 8) = v88;
        v90 = *(_QWORD *)(v82 + 16);
        if (v86 >= v90)
          goto LABEL_133;
        v10 = v82;
        v11 = v90 - 1;
        result = (uint64_t)memmove(v87, v87 + 2, 16 * (v90 - 1 - v86));
        v39 = v85;
        *(_QWORD *)(v82 + 16) = v90 - 1;
        v9 = v89;
        v8 = v103;
        if (v90 <= 2)
          goto LABEL_15;
      }
    }
    v11 = 1;
LABEL_15:
    v3 = v102;
    if (v8 >= v102)
    {
      v7 = v100;
      goto LABEL_117;
    }
  }
  if (__OFADD__(v12, v101))
    goto LABEL_153;
  if (v12 + v101 >= v3)
    v30 = v3;
  else
    v30 = v12 + v101;
  if (v30 >= v12)
  {
    if (v8 != v30)
    {
      v31 = (uint64_t *)(v9 + 16 * v8);
      do
      {
        v32 = (uint64_t *)(v9 + 16 * v8);
        result = *v32;
        v33 = v32[1];
        v34 = v12;
        v35 = v31;
        do
        {
          if (result == *(v35 - 2) && v33 == *(v35 - 1))
            break;
          result = sub_247C3DAD4();
          if ((result & 1) == 0)
            break;
          if (!v9)
            goto LABEL_156;
          result = *v35;
          v33 = v35[1];
          *(_OWORD *)v35 = *((_OWORD *)v35 - 1);
          *(v35 - 1) = v33;
          *(v35 - 2) = result;
          v35 -= 2;
          ++v34;
        }
        while (v8 != v34);
        ++v8;
        v31 += 2;
      }
      while (v8 != v30);
      v8 = v30;
    }
    goto LABEL_66;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
  return result;
}

uint64_t sub_247C3C138(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_247C3DAD4(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_247C3C204(char *__dst, char *__src, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  BOOL v20;
  BOOL v21;

  v4 = a4;
  v6 = __src;
  v7 = __dst;
  v8 = __src - __dst;
  v9 = __src - __dst + 15;
  if (__src - __dst >= 0)
    v9 = __src - __dst;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)__src;
  v12 = a3 - (_QWORD)__src + 15;
  if ((uint64_t)(a3 - (_QWORD)__src) >= 0)
    v12 = a3 - (_QWORD)__src;
  v13 = v12 >> 4;
  if (v10 >= v12 >> 4)
  {
    if (a4 != __src || &__src[16 * v13] <= a4)
      memmove(a4, __src, 16 * v13);
    v14 = &v4[16 * v13];
    if (v7 >= v6 || v11 < 16)
      goto LABEL_48;
    v17 = (char *)(a3 - 16);
    while (1)
    {
      v18 = v17 + 16;
      v19 = v6 - 16;
      v20 = *((_QWORD *)v14 - 2) == *((_QWORD *)v6 - 2) && *((_QWORD *)v14 - 1) == *((_QWORD *)v6 - 1);
      if (v20 || (sub_247C3DAD4() & 1) == 0)
      {
        v19 = v14 - 16;
        if (v18 != v14)
        {
          v14 -= 16;
LABEL_45:
          *(_OWORD *)v17 = *(_OWORD *)v19;
          goto LABEL_46;
        }
        v21 = v17 >= v14;
        v14 -= 16;
        if (v21)
          goto LABEL_45;
      }
      else
      {
        if (v18 != v6)
        {
          v6 -= 16;
          goto LABEL_45;
        }
        v21 = v17 >= v6;
        v6 -= 16;
        if (v21)
          goto LABEL_45;
      }
LABEL_46:
      if (v6 > v7)
      {
        v17 -= 16;
        if (v14 > v4)
          continue;
      }
      goto LABEL_48;
    }
  }
  if (a4 != __dst || &__dst[16 * v10] <= a4)
    memmove(a4, __dst, 16 * v10);
  v14 = &v4[16 * v10];
  if ((unint64_t)v6 < a3 && v8 >= 16)
  {
    while (1)
    {
      v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
      if (v15 || (sub_247C3DAD4() & 1) == 0)
        break;
      v16 = v6;
      v15 = v7 == v6;
      v6 += 16;
      if (!v15)
        goto LABEL_20;
LABEL_21:
      v7 += 16;
      if (v4 >= v14 || (unint64_t)v6 >= a3)
        goto LABEL_23;
    }
    v16 = v4;
    v15 = v7 == v4;
    v4 += 16;
    if (v15)
      goto LABEL_21;
LABEL_20:
    *(_OWORD *)v7 = *(_OWORD *)v16;
    goto LABEL_21;
  }
LABEL_23:
  v6 = v7;
LABEL_48:
  if (v6 != v4 || v6 >= &v4[(v14 - v4 + (v14 - v4 < 0 ? 0xFuLL : 0)) & 0xFFFFFFFFFFFFFFF0])
    memmove(v6, v4, 16 * ((v14 - v4) / 16));
  return 1;
}

char *sub_247C3C430(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2576ED650);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_247C3C528(uint64_t a1)
{
  return sub_247C3C430(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_247C3C53C(uint64_t a1)
{
  return sub_247C00924(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_247C3C550(uint64_t a1)
{
  return sub_247BFF168(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_247C3C564(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_247BFECDC(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_247C3C5DC()
{
  return sub_247C3A3DC() & 1;
}

uint64_t type metadata accessor for ScalarQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ScalarQuery);
}

_QWORD *sub_247C3C60C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = a1[9];
  v3 = a1[10];
  v4 = a1[12];
  v5 = a1[13];
  v7 = a1[14];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_247BFE9A0(v2, v3);
  sub_247BFE9D0(v4, v5, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_247C3C6DC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v2 = a1[9];
  v3 = a1[10];
  v4 = a1[12];
  v5 = a1[13];
  v7 = a1[14];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_247BFE92C(v2, v3);
  sub_247BFE95C(v4, v5, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_247C3C7A8()
{
  return swift_deallocObject();
}

uint64_t type metadata accessor for Select(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Select);
}

sqlite3 *sub_247C3C7C8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_247C3A2C4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40), a1);
}

unint64_t sub_247C3C7E4(uint64_t a1)
{
  unint64_t result;

  result = sub_247C3C808();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_247C3C808()
{
  unint64_t result;

  result = qword_2576ED5B0;
  if (!qword_2576ED5B0)
  {
    result = MEMORY[0x24958EDF4](&protocol conformance descriptor for RowIterator, &type metadata for RowIterator);
    atomic_store(result, (unint64_t *)&qword_2576ED5B0);
  }
  return result;
}

unint64_t sub_247C3C850()
{
  unint64_t result;

  result = qword_2576ED5B8;
  if (!qword_2576ED5B8)
  {
    result = MEMORY[0x24958EDF4](&protocol conformance descriptor for JoinType, &type metadata for JoinType);
    atomic_store(result, (unint64_t *)&qword_2576ED5B8);
  }
  return result;
}

unint64_t sub_247C3C898()
{
  unint64_t result;

  result = qword_2576ED5C0;
  if (!qword_2576ED5C0)
  {
    result = MEMORY[0x24958EDF4](&protocol conformance descriptor for OnConflict, &type metadata for OnConflict);
    atomic_store(result, (unint64_t *)&qword_2576ED5C0);
  }
  return result;
}

uint64_t dispatch thunk of QueryType.clauses.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of QueryType.clauses.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of QueryType.clauses.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of QueryType.init(_:database:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of static SchemaType.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

__n128 __swift_memcpy168_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t _s11SwiftSQLite12QueryClausesVwca_0(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 *v9;
  uint64_t v10;
  __int128 *v11;
  __int128 *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 72);
  v5 = (_OWORD *)(a2 + 72);
  v6 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80))
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_247BFC084(a1 + 72, &qword_254455310);
      v7 = *(_QWORD *)(a2 + 88);
      *v4 = *v5;
      *(_QWORD *)(a1 + 88) = v7;
    }
  }
  else if (v6)
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *v5;
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *v4 = v8;
  }
  v9 = (__int128 *)(a1 + 96);
  v11 = (__int128 *)(a2 + 96);
  v10 = *(_QWORD *)(a2 + 96);
  if (!*(_QWORD *)(a1 + 96))
  {
    if (v10)
    {
      *(_QWORD *)(a1 + 96) = v10;
      v14 = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      if (!v14)
      {
        v15 = *(_OWORD *)(a2 + 104);
        *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 104) = v15;
        goto LABEL_23;
      }
LABEL_18:
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_23;
    }
    v17 = *v11;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
LABEL_22:
    *v9 = v17;
    goto LABEL_23;
  }
  if (!v10)
  {
    sub_247BFC084(a1 + 96, qword_2576ED5C8);
    v16 = *(_OWORD *)(a2 + 112);
    *v9 = *v11;
    *(_OWORD *)(a1 + 112) = v16;
    goto LABEL_23;
  }
  *(_QWORD *)(a1 + 96) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (__int128 *)(a1 + 104);
  v12 = (__int128 *)(a2 + 104);
  v13 = *(_QWORD *)(a2 + 112);
  if (!*(_QWORD *)(a1 + 112))
  {
    if (v13)
      goto LABEL_18;
    v17 = *v12;
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    goto LABEL_22;
  }
  if (v13)
  {
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_247BFC084(a1 + 104, &qword_254455310);
    v18 = *(_QWORD *)(a2 + 120);
    *v9 = *v12;
    *(_QWORD *)(a1 + 120) = v18;
  }
LABEL_23:
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = *(_OWORD *)(a2 + 136);
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = v19;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11SwiftSQLite12QueryClausesVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 80))
  {
    v7 = *(_QWORD *)(a2 + 80);
    if (v7)
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = v7;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_247BFC084(a1 + 72, &qword_254455310);
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
LABEL_6:
  v8 = *(_QWORD *)(a2 + 96);
  if (!*(_QWORD *)(a1 + 96))
  {
LABEL_12:
    v10 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v10;
    goto LABEL_15;
  }
  if (!v8)
  {
    sub_247BFC084(a1 + 96, qword_2576ED5C8);
    goto LABEL_12;
  }
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 112))
  {
LABEL_14:
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    goto LABEL_15;
  }
  v9 = *(_QWORD *)(a2 + 112);
  if (!v9)
  {
    sub_247BFC084(a1 + 104, &qword_254455310);
    goto LABEL_14;
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
LABEL_15:
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for View()
{
  return &type metadata for View;
}

ValueMetadata *type metadata accessor for VirtualTable()
{
  return &type metadata for VirtualTable;
}

ValueMetadata *type metadata accessor for Update()
{
  return &type metadata for Update;
}

uint64_t destroy for RowIterator()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *_s11SwiftSQLite11RowIteratorVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for RowIterator(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for RowIterator(_QWORD *a1, _OWORD *a2, uint64_t a3)
{
  return sub_247C3CF58(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

ValueMetadata *type metadata accessor for RowIterator()
{
  return &type metadata for RowIterator;
}

_QWORD *assignWithCopy for Row(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for Row(_QWORD *a1, _OWORD *a2, uint64_t a3)
{
  return sub_247C3CF58(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

_QWORD *sub_247C3CF58(_QWORD *a1, _OWORD *a2, uint64_t a3, void (*a4)(_QWORD))
{
  a4(*a1);
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_247C3CF94(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for JoinType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_247C3D01C + 4 * byte_247C3F1B2[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_247C3D050 + 4 * byte_247C3F1AD[v4]))();
}

uint64_t sub_247C3D050(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_247C3D058(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x247C3D060);
  return result;
}

uint64_t sub_247C3D06C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x247C3D074);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_247C3D078(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_247C3D080(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JoinType()
{
  return &type metadata for JoinType;
}

uint64_t storeEnumTagSinglePayload for OnConflict(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_247C3D0E8 + 4 * byte_247C3F1BC[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_247C3D11C + 4 * byte_247C3F1B7[v4]))();
}

uint64_t sub_247C3D11C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_247C3D124(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x247C3D12CLL);
  return result;
}

uint64_t sub_247C3D138(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x247C3D140);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_247C3D144(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_247C3D14C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s11SwiftSQLite12QueryClausesVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 168))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_247C3D1A0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 168) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for QueryClauses()
{
  return &type metadata for QueryClauses;
}

uint64_t sub_247C3D218(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t objectdestroy_2Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_247C3D270()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_247C3D294@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_247C38FF8(*(_QWORD **)(v1 + 16), a1);
}

sqlite3 *sub_247C3D2C4@<X0>(_QWORD *a1@<X8>)
{
  return sub_247C3C7C8(a1);
}

uint64_t Collation.expression.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 8);
  if (v3)
  {
    if (v3 == 1)
    {
      v4 = 0xE600000000000000;
      v5 = 0x455341434F4ELL;
    }
    else if (v3 == 2)
    {
      v4 = 0xE500000000000000;
      v5 = 0x4D49525452;
    }
    else
    {
      v6 = *(_QWORD *)v1;
      sub_247C0B9AC(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
      sub_247BFD20C(0, 0xE000000000000000, v6, v3, 34, 0xE100000000000000);
      sub_247C3D780();
      sub_247C3D840();
      swift_bridgeObjectRelease();
      sub_247C3D780();
      result = sub_247C0B9C0(v6, v3);
      v5 = 0;
      v4 = 0xE000000000000000;
    }
  }
  else
  {
    v4 = 0xE600000000000000;
    v5 = 0x5952414E4942;
  }
  *a1 = v5;
  a1[1] = v4;
  a1[2] = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t Collation.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = v0[1];
  switch(v1)
  {
    case 0:
      return 0x5952414E4942;
    case 1:
      return 0x455341434F4ELL;
    case 2:
      return 0x4D49525452;
  }
  sub_247BFD20C(0, 0xE000000000000000, *v0, v1, 34, 0xE100000000000000);
  sub_247C3D780();
  sub_247C3D840();
  swift_bridgeObjectRelease();
  sub_247C3D780();
  return 0;
}

uint64_t getEnumTagSinglePayload for Collation(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Collation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Collation()
{
  return &type metadata for Collation;
}

uint64_t sub_247C3D624()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_247C3D630()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_247C3D63C()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_247C3D648()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_247C3D654()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_247C3D660()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_247C3D66C()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_247C3D678()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_247C3D684()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_247C3D690()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_247C3D69C()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_247C3D6A8()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_247C3D6B4()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_247C3D6C0()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_247C3D6CC()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_247C3D6D8()
{
  return MEMORY[0x24BDCE998]();
}

uint64_t _s10Foundation4UUIDV11SwiftSQLiteE13datatypeValueSSvg_0()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_247C3D6F0()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_247C3D6FC()
{
  return MEMORY[0x24BDCEB18]();
}

uint64_t sub_247C3D708()
{
  return MEMORY[0x24BDCEC90]();
}

uint64_t sub_247C3D714()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_247C3D720()
{
  return MEMORY[0x24BDCF4C8]();
}

uint64_t sub_247C3D72C()
{
  return MEMORY[0x24BDCF4D8]();
}

uint64_t sub_247C3D738()
{
  return MEMORY[0x24BDCF510]();
}

uint64_t sub_247C3D744()
{
  return MEMORY[0x24BEE53F0]();
}

uint64_t sub_247C3D750()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_247C3D75C()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_247C3D768()
{
  return MEMORY[0x24BEE01B8]();
}

uint64_t sub_247C3D774()
{
  return MEMORY[0x24BEE0500]();
}

uint64_t sub_247C3D780()
{
  return MEMORY[0x24BEE06E8]();
}

uint64_t sub_247C3D78C()
{
  return MEMORY[0x24BEE07D0]();
}

uint64_t sub_247C3D798()
{
  return MEMORY[0x24BEE08B8]();
}

uint64_t sub_247C3D7A4()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_247C3D7B0()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_247C3D7BC()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_247C3D7C8()
{
  return MEMORY[0x24BDCFA48]();
}

uint64_t sub_247C3D7D4()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_247C3D7E0()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_247C3D7EC()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_247C3D7F8()
{
  return MEMORY[0x24BEE0A08]();
}

uint64_t sub_247C3D804()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_247C3D810()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_247C3D81C()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_247C3D828()
{
  return MEMORY[0x24BEE0B68]();
}

uint64_t sub_247C3D834()
{
  return MEMORY[0x24BEE0B70]();
}

uint64_t sub_247C3D840()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_247C3D84C()
{
  return MEMORY[0x24BEE0BE8]();
}

uint64_t sub_247C3D858()
{
  return MEMORY[0x24BEE0BF0]();
}

uint64_t sub_247C3D864()
{
  return MEMORY[0x24BEE0C00]();
}

uint64_t sub_247C3D870()
{
  return MEMORY[0x24BEE0CD0]();
}

uint64_t sub_247C3D87C()
{
  return MEMORY[0x24BEE0D58]();
}

uint64_t sub_247C3D888()
{
  return MEMORY[0x24BEE0D98]();
}

uint64_t sub_247C3D894()
{
  return MEMORY[0x24BEE0DC8]();
}

uint64_t sub_247C3D8A0()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_247C3D8AC()
{
  return MEMORY[0x24BEE0E40]();
}

uint64_t sub_247C3D8B8()
{
  return MEMORY[0x24BEE0E70]();
}

uint64_t sub_247C3D8C4()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_247C3D8D0()
{
  return MEMORY[0x24BEE1140]();
}

uint64_t sub_247C3D8DC()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t sub_247C3D8E8()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_247C3D8F4()
{
  return MEMORY[0x24BEE11A0]();
}

uint64_t sub_247C3D900()
{
  return MEMORY[0x24BEE11F8]();
}

uint64_t sub_247C3D90C()
{
  return MEMORY[0x24BEE1220]();
}

uint64_t sub_247C3D918()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_247C3D924()
{
  return MEMORY[0x24BEE1478]();
}

uint64_t sub_247C3D930()
{
  return MEMORY[0x24BEE18A0]();
}

uint64_t sub_247C3D93C()
{
  return MEMORY[0x24BEE18D0]();
}

uint64_t sub_247C3D948()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t sub_247C3D954()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t sub_247C3D960()
{
  return MEMORY[0x24BEE1B68]();
}

uint64_t sub_247C3D96C()
{
  return MEMORY[0x24BEE5688]();
}

uint64_t sub_247C3D978()
{
  return MEMORY[0x24BEE56D8]();
}

uint64_t sub_247C3D984()
{
  return MEMORY[0x24BEE56E0]();
}

uint64_t sub_247C3D990()
{
  return MEMORY[0x24BEE5760]();
}

uint64_t sub_247C3D99C()
{
  return MEMORY[0x24BEE5780]();
}

uint64_t sub_247C3D9A8()
{
  return MEMORY[0x24BEE57A0]();
}

uint64_t sub_247C3D9B4()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_247C3D9C0()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_247C3D9CC()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_247C3D9D8()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_247C3D9E4()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_247C3D9F0()
{
  return MEMORY[0x24BEE2650]();
}

uint64_t sub_247C3D9FC()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_247C3DA08()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_247C3DA14()
{
  return MEMORY[0x24BEE2730]();
}

uint64_t sub_247C3DA20()
{
  return MEMORY[0x24BEE2750]();
}

uint64_t sub_247C3DA2C()
{
  return MEMORY[0x24BEE2950]();
}

uint64_t sub_247C3DA38()
{
  return MEMORY[0x24BEE29C0]();
}

uint64_t sub_247C3DA44()
{
  return MEMORY[0x24BEE2A00]();
}

uint64_t sub_247C3DA50()
{
  return MEMORY[0x24BEE2A08]();
}

uint64_t sub_247C3DA5C()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_247C3DA68()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_247C3DA74()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_247C3DA80()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_247C3DA8C()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_247C3DA98()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_247C3DAA4()
{
  return MEMORY[0x24BEE33F0]();
}

uint64_t sub_247C3DAB0()
{
  return MEMORY[0x24BEE3530]();
}

uint64_t sub_247C3DABC()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_247C3DAC8()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_247C3DAD4()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_247C3DAE0()
{
  return MEMORY[0x24BEE3BE8]();
}

uint64_t sub_247C3DAEC()
{
  return MEMORY[0x24BEE3BF0]();
}

uint64_t sub_247C3DAF8()
{
  return MEMORY[0x24BEE3C18]();
}

uint64_t sub_247C3DB04()
{
  return MEMORY[0x24BEE3C80]();
}

uint64_t sub_247C3DB10()
{
  return MEMORY[0x24BEE3C88]();
}

uint64_t sub_247C3DB1C()
{
  return MEMORY[0x24BEE3CB0]();
}

uint64_t sub_247C3DB28()
{
  return MEMORY[0x24BEE3D08]();
}

uint64_t sub_247C3DB34()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_247C3DB40()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_247C3DB4C()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_247C3DB58()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_247C3DB64()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_247C3DB70()
{
  return MEMORY[0x24BEE42C8]();
}

uint64_t sub_247C3DB7C()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_247C3DB88()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_247C3DB94()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_247C3DBA0()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_247C3DBAC()
{
  return MEMORY[0x24BEE49E8]();
}

uint64_t sub_247C3DBB8()
{
  return MEMORY[0x24BEE49F0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

int sqlite3_bind_blob(sqlite3_stmt *a1, int a2, const void *a3, int n, void (__cdecl *a5)(void *))
{
  return MEMORY[0x24BEDDF48](a1, *(_QWORD *)&a2, a3, *(_QWORD *)&n, a5);
}

int sqlite3_bind_double(sqlite3_stmt *a1, int a2, double a3)
{
  return MEMORY[0x24BEDDF58](a1, *(_QWORD *)&a2, a3);
}

int sqlite3_bind_int64(sqlite3_stmt *a1, int a2, sqlite3_int64 a3)
{
  return MEMORY[0x24BEDDF68](a1, *(_QWORD *)&a2, a3);
}

int sqlite3_bind_null(sqlite3_stmt *a1, int a2)
{
  return MEMORY[0x24BEDDF70](a1, *(_QWORD *)&a2);
}

int sqlite3_bind_parameter_count(sqlite3_stmt *a1)
{
  return MEMORY[0x24BEDDF78](a1);
}

int sqlite3_bind_parameter_index(sqlite3_stmt *a1, const char *zName)
{
  return MEMORY[0x24BEDDF80](a1, zName);
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return MEMORY[0x24BEDDF98](a1, *(_QWORD *)&a2, a3, *(_QWORD *)&a4, a5);
}

int sqlite3_busy_handler(sqlite3 *a1, int (__cdecl *a2)(void *, int), void *a3)
{
  return MEMORY[0x24BEDDFE8](a1, a2, a3);
}

int sqlite3_busy_timeout(sqlite3 *a1, int ms)
{
  return MEMORY[0x24BEDDFF0](a1, *(_QWORD *)&ms);
}

int sqlite3_changes(sqlite3 *a1)
{
  return MEMORY[0x24BEDDFF8](a1);
}

int sqlite3_clear_bindings(sqlite3_stmt *a1)
{
  return MEMORY[0x24BEDE008](a1);
}

int sqlite3_close(sqlite3 *a1)
{
  return MEMORY[0x24BEDE010](a1);
}

const void *__cdecl sqlite3_column_blob(sqlite3_stmt *a1, int iCol)
{
  return (const void *)MEMORY[0x24BEDE020](a1, *(_QWORD *)&iCol);
}

int sqlite3_column_bytes(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x24BEDE028](a1, *(_QWORD *)&iCol);
}

int sqlite3_column_count(sqlite3_stmt *pStmt)
{
  return MEMORY[0x24BEDE038](pStmt);
}

double sqlite3_column_double(sqlite3_stmt *a1, int iCol)
{
  double result;

  MEMORY[0x24BEDE048](a1, *(_QWORD *)&iCol);
  return result;
}

sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x24BEDE058](a1, *(_QWORD *)&iCol);
}

const char *__cdecl sqlite3_column_name(sqlite3_stmt *a1, int N)
{
  return (const char *)MEMORY[0x24BEDE060](a1, *(_QWORD *)&N);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return (const unsigned __int8 *)MEMORY[0x24BEDE068](a1, *(_QWORD *)&iCol);
}

int sqlite3_column_type(sqlite3_stmt *a1, int iCol)
{
  return MEMORY[0x24BEDE078](a1, *(_QWORD *)&iCol);
}

void *__cdecl sqlite3_commit_hook(sqlite3 *a1, int (__cdecl *a2)(void *), void *a3)
{
  return (void *)MEMORY[0x24BEDE088](a1, a2, a3);
}

int sqlite3_create_collation_v2(sqlite3 *a1, const char *zName, int eTextRep, void *pArg, int (__cdecl *xCompare)(void *, int, const void *, int, const void *), void (__cdecl *xDestroy)(void *))
{
  return MEMORY[0x24BEDE0A0](a1, zName, *(_QWORD *)&eTextRep, pArg, xCompare, xDestroy);
}

int sqlite3_create_function_v2(sqlite3 *db, const char *zFunctionName, int nArg, int eTextRep, void *pApp, void (__cdecl *xFunc)(sqlite3_context *, int, sqlite3_value **), void (__cdecl *xStep)(sqlite3_context *, int, sqlite3_value **), void (__cdecl *xFinal)(sqlite3_context *), void (__cdecl *xDestroy)(void *))
{
  return MEMORY[0x24BEDE0B0](db, zFunctionName, *(_QWORD *)&nArg, *(_QWORD *)&eTextRep, pApp, xFunc, xStep, xFinal);
}

const char *__cdecl sqlite3_db_filename(sqlite3 *db, const char *zDbName)
{
  return (const char *)MEMORY[0x24BEDE0D0](db, zDbName);
}

int sqlite3_db_readonly(sqlite3 *db, const char *zDbName)
{
  return MEMORY[0x24BEDE0E0](db, zDbName);
}

const char *__cdecl sqlite3_errmsg(sqlite3 *a1)
{
  return (const char *)MEMORY[0x24BEDE108](a1);
}

int sqlite3_exec(sqlite3 *a1, const char *sql, int (__cdecl *callback)(void *, int, char **, char **), void *a4, char **errmsg)
{
  return MEMORY[0x24BEDE118](a1, sql, callback, a4, errmsg);
}

char *__cdecl sqlite3_expanded_sql(sqlite3_stmt *pStmt)
{
  return (char *)MEMORY[0x24BEDE120](pStmt);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return MEMORY[0x24BEDE140](pStmt);
}

void sqlite3_free(void *a1)
{
  MEMORY[0x24BEDE148](a1);
}

void sqlite3_interrupt(sqlite3 *a1)
{
  MEMORY[0x24BEDE168](a1);
}

sqlite3_int64 sqlite3_last_insert_rowid(sqlite3 *a1)
{
  return MEMORY[0x24BEDE180](a1);
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return MEMORY[0x24BEDE1C0](filename, ppDb, *(_QWORD *)&flags, zVfs);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return MEMORY[0x24BEDE1D0](db, zSql, *(_QWORD *)&nByte, ppStmt, pzTail);
}

int sqlite3_reset(sqlite3_stmt *pStmt)
{
  return MEMORY[0x24BEDE1E0](pStmt);
}

void sqlite3_result_blob(sqlite3_context *a1, const void *a2, int a3, void (__cdecl *a4)(void *))
{
  MEMORY[0x24BEDE1E8](a1, a2, *(_QWORD *)&a3, a4);
}

void sqlite3_result_double(sqlite3_context *a1, double a2)
{
  MEMORY[0x24BEDE1F8](a1, a2);
}

void sqlite3_result_int64(sqlite3_context *a1, sqlite3_int64 a2)
{
  MEMORY[0x24BEDE218](a1, a2);
}

void sqlite3_result_null(sqlite3_context *a1)
{
  MEMORY[0x24BEDE220](a1);
}

void sqlite3_result_text(sqlite3_context *a1, const char *a2, int a3, void (__cdecl *a4)(void *))
{
  MEMORY[0x24BEDE238](a1, a2, *(_QWORD *)&a3, a4);
}

void *__cdecl sqlite3_rollback_hook(sqlite3 *a1, void (__cdecl *a2)(void *), void *a3)
{
  return (void *)MEMORY[0x24BEDE258](a1, a2, a3);
}

const char *__cdecl sqlite3_sql(sqlite3_stmt *pStmt)
{
  return (const char *)MEMORY[0x24BEDE2A0](pStmt);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return MEMORY[0x24BEDE2A8](a1);
}

int sqlite3_trace_v2(sqlite3 *a1, unsigned int uMask, int (__cdecl *xCallback)(unsigned int, void *, void *, void *), void *pCtx)
{
  return MEMORY[0x24BEDE2E8](a1, *(_QWORD *)&uMask, xCallback, pCtx);
}

void *__cdecl sqlite3_update_hook(sqlite3 *a1, void (__cdecl *a2)(void *, int, const char *, const char *, sqlite3_int64), void *a3)
{
  return (void *)MEMORY[0x24BEDE2F8](a1, a2, a3);
}

void *__cdecl sqlite3_user_data(sqlite3_context *a1)
{
  return (void *)MEMORY[0x24BEDE300](a1);
}

const void *__cdecl sqlite3_value_blob(sqlite3_value *a1)
{
  return (const void *)MEMORY[0x24BEDE308](a1);
}

int sqlite3_value_bytes(sqlite3_value *a1)
{
  return MEMORY[0x24BEDE310](a1);
}

double sqlite3_value_double(sqlite3_value *a1)
{
  double result;

  MEMORY[0x24BEDE320](a1);
  return result;
}

sqlite3_int64 sqlite3_value_int64(sqlite3_value *a1)
{
  return MEMORY[0x24BEDE340](a1);
}

const unsigned __int8 *__cdecl sqlite3_value_text(sqlite3_value *a1)
{
  return (const unsigned __int8 *)MEMORY[0x24BEDE358](a1);
}

int sqlite3_value_type(sqlite3_value *a1)
{
  return MEMORY[0x24BEDE368](a1);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x24BEE4D00]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

